!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABS	kernel/TeDefines.h	143;"	d
AC_DDL	drivers/Oracle/OCI/include/occiControl.h	/^          ,AC_DDL = OCI_AC_DDL$/;"	e	enum:oracle::occi::MetaData::__anon89
ADDR	drivers/SQLite/sqlite3/sqlite3.c	8360;"	d	file:
ADD_SPB_LENGTH	drivers/Firebird/ibpp/core/ibase.h	1218;"	d
ADD_SPB_NUMERIC	drivers/Firebird/ibpp/core/ibase.h	1221;"	d
ADT	drivers/Firebird/ibpp/core/ibpp.h	/^	enum ADT {adDate, adTime, adTimestamp, adString,$/;"	g	namespace:IBPP
AGGREGATE	drivers/SQLite/sqlite3/sqlite3.c	9746;"	d	file:
ALL	kernel/TePieBar.h	/^	enum			TePieBarInput {ALL, TABSEL, QUERYSEL, LEGEND, NOTTABSEL, NOTQUERYSEL, NOTLEGEND};$/;"	e	enum:TePieBar::TePieBarInput
ALPHA	image_processing/TePDISimplex.cpp	82;"	d	file:
ALWAYS	drivers/SQLite/sqlite3/sqlite3.c	114510;"	d	file:
ALWAYS	drivers/SQLite/sqlite3/sqlite3.c	114513;"	d	file:
ALWAYS	drivers/SQLite/sqlite3/sqlite3.c	510;"	d	file:
ALWAYS	drivers/SQLite/sqlite3/sqlite3.c	513;"	d	file:
ALWAYS	drivers/SQLite/sqlite3/sqlite3.c	516;"	d	file:
AMESA_H	drivers/GL/amesa.h	30;"	d
AMESA_MAJOR_VERSION	drivers/GL/amesa.h	33;"	d
AMESA_MINOR_VERSION	drivers/GL/amesa.h	34;"	d
AMesaBuffer	drivers/GL/amesa.h	/^typedef struct amesa_buffer  *AMesaBuffer;$/;"	t	typeref:struct:amesa_buffer
AMesaContext	drivers/GL/amesa.h	/^typedef struct amesa_context *AMesaContext;$/;"	t	typeref:struct:amesa_context
AMesaVisual	drivers/GL/amesa.h	/^typedef struct amesa_visual  *AMesaVisual;$/;"	t	typeref:struct:amesa_visual
AND	kernel/yyTemporal.cpp	95;"	d	file:
AND	kernel/yyTemporal.h	34;"	d
ANYDATA	drivers/Oracle/OCI/include/occiAQ.h	/^        ANYDATA,$/;"	e	enum:oracle::occi::aq::Message::PayloadType
APIENTRY	drivers/GL/gl.h	104;"	d
APIENTRY	drivers/GL/glext.h	43;"	d
APIENTRY	drivers/GL/glxext.h	43;"	d
APIENTRYP	drivers/GL/gl.h	109;"	d
APIENTRYP	drivers/GL/glext.h	46;"	d
APIENTRYP	drivers/GL/glxext.h	46;"	d
ARG_TYPARG_TYPRES_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        ARG_TYPARG_TYPRES_ATTR_COUNT = 20, $/;"	e	enum:oracle::occi::MetaData::AttrCount
ASCII	kernel/TeGraph.cpp	69;"	d	file:
ASSERTION	drivers/Firebird/ibpp/core/_ibpp.h	71;"	d
ASSERTION	drivers/Firebird/ibpp/core/_ibpp.h	75;"	d
ATTRIBUTE_INDEX_MISMATCH	kernel/TeErrorLog.h	/^    ATTRIBUTE_INDEX_MISMATCH,$/;"	e	enum:TeErrorType
ATTR_AUTOCOMMIT_DDL	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_AUTOCOMMIT_DDL =  OCI_ATTR_AUTOCOMMIT_DDL,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_CACHE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_CACHE = OCI_ATTR_CACHE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_CATALOG_LOCATION	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_CATALOG_LOCATION = OCI_ATTR_CATALOG_LOCATION,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_CHARSET_FORM	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_CHARSET_FORM = OCI_ATTR_CHARSET_FORM,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_CHARSET_ID	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_CHARSET_ID = OCI_ATTR_CHARSET_ID,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_CHAR_SIZE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_CHAR_SIZE = OCI_ATTR_CHAR_SIZE$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_CHAR_USED	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_CHAR_USED = OCI_ATTR_CHAR_USED,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_CLUSTERED	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_CLUSTERED = OCI_ATTR_CLUSTERED,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_COLLECTION_ELEMENT	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_COLLECTION_ELEMENT = OCI_ATTR_COLLECTION_ELEMENT,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_COLLECTION_TYPECODE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_COLLECTION_TYPECODE = OCI_ATTR_COLLECTION_TYPECODE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_CURSOR_COMMIT_BEHAVIOR	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_CURSOR_COMMIT_BEHAVIOR = $/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_DATA_SIZE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_DATA_SIZE = OCI_ATTR_DATA_SIZE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_DATA_TYPE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_DATA_TYPE = OCI_ATTR_DATA_TYPE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_DURATION	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_DURATION = OCI_ATTR_DURATION,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_ENCAPSULATION	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_ENCAPSULATION = OCI_ATTR_ENCAPSULATION,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_FSPRECISION	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_FSPRECISION = OCI_ATTR_FSPRECISION,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_HAS_DEFAULT	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_HAS_DEFAULT =  OCI_ATTR_HAS_DEFAULT,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_HAS_FILE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_HAS_FILE = OCI_ATTR_HAS_FILE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_HAS_LOB	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_HAS_LOB = OCI_ATTR_HAS_LOB,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_HAS_NESTED_TABLE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_HAS_NESTED_TABLE = OCI_ATTR_HAS_NESTED_TABLE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_HW_MARK	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_HW_MARK  = OCI_ATTR_HW_MARK,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_INCR	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_INCR = OCI_ATTR_INCR,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_INDEX_ONLY	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_INDEX_ONLY = OCI_ATTR_INDEX_ONLY,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IOMODE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IOMODE = OCI_ATTR_IOMODE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_CONSTRUCTOR	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_CONSTRUCTOR = OCI_ATTR_IS_CONSTRUCTOR,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_DESTRUCTOR	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_DESTRUCTOR = OCI_ATTR_IS_DESTRUCTOR,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_FINAL_METHOD	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_FINAL_METHOD = OCI_ATTR_IS_FINAL_METHOD,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_FINAL_TYPE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_FINAL_TYPE = OCI_ATTR_IS_FINAL_TYPE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_INCOMPLETE_TYPE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_INCOMPLETE_TYPE = OCI_ATTR_IS_INCOMPLETE_TYPE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_INSTANTIABLE_METHOD	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_INSTANTIABLE_METHOD = OCI_ATTR_IS_INSTANTIABLE_METHOD,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_INSTANTIABLE_TYPE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_INSTANTIABLE_TYPE = OCI_ATTR_IS_INSTANTIABLE_TYPE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_INVOKER_RIGHTS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_INVOKER_RIGHTS = OCI_ATTR_IS_INVOKER_RIGHTS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_MAP	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_MAP = OCI_ATTR_IS_MAP,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_NULL	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_NULL = OCI_ATTR_IS_NULL,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_OPERATOR	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_OPERATOR = OCI_ATTR_IS_OPERATOR,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_ORDER	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_ORDER = OCI_ATTR_IS_ORDER,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_OVERRIDING_METHOD	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_OVERRIDING_METHOD = OCI_ATTR_IS_OVERRIDING_METHOD,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_PREDEFINED_TYPE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_PREDEFINED_TYPE = OCI_ATTR_IS_PREDEFINED_TYPE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_RNDS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_RNDS = OCI_ATTR_IS_RNDS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_RNPS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_RNPS = OCI_ATTR_IS_RNPS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_SELFISH	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_SELFISH = OCI_ATTR_IS_SELFISH,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_SUBTYPE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_SUBTYPE = OCI_ATTR_IS_SUBTYPE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_SYSTEM_GENERATED_TYPE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_SYSTEM_GENERATED_TYPE = $/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_SYSTEM_TYPE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_SYSTEM_TYPE = OCI_ATTR_IS_SYSTEM_TYPE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_TEMPORARY	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_TEMPORARY = OCI_ATTR_IS_TEMPORARY,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_TRANSIENT_TYPE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_TRANSIENT_TYPE = OCI_ATTR_IS_TRANSIENT_TYPE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_TYPED	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_TYPED = OCI_ATTR_IS_TYPED,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_WNDS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_WNDS = OCI_ATTR_IS_WNDS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_IS_WNPS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_IS_WNPS = OCI_ATTR_IS_WNPS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_LEVEL	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_LEVEL = OCI_ATTR_LEVEL,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_LFPRECISION	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_LFPRECISION = OCI_ATTR_LFPRECISION,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_LINK	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_LINK = OCI_ATTR_LINK,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_LIST_ARGUMENTS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_LIST_ARGUMENTS = OCI_ATTR_LIST_ARGUMENTS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_LIST_COLUMNS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_LIST_COLUMNS = OCI_ATTR_LIST_COLUMNS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_LIST_OBJECTS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_LIST_OBJECTS = OCI_ATTR_LIST_OBJECTS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_LIST_SCHEMAS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_LIST_SCHEMAS = OCI_ATTR_LIST_SCHEMAS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_LIST_SUBPROGRAMS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_LIST_SUBPROGRAMS = OCI_ATTR_LIST_SUBPROGRAMS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_LIST_TYPE_ATTRS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_LIST_TYPE_ATTRS = OCI_ATTR_LIST_TYPE_ATTRS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_LIST_TYPE_METHODS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_LIST_TYPE_METHODS = OCI_ATTR_LIST_TYPE_METHODS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_LOCKING_MODE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_LOCKING_MODE =  OCI_ATTR_LOCKING_MODE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_MAP_METHOD	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_MAP_METHOD = OCI_ATTR_MAP_METHOD,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_MAX	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_MAX = OCI_ATTR_MAX,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_MAX_CATALOG_NAMELEN	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_MAX_CATALOG_NAMELEN = OCI_ATTR_MAX_CATALOG_NAMELEN,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_MAX_COLUMN_LEN	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_MAX_COLUMN_LEN = OCI_ATTR_MAX_COLUMN_LEN,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_MAX_PROC_LEN	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_MAX_PROC_LEN = OCI_ATTR_MAX_PROC_LEN,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_MIN	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_MIN = OCI_ATTR_MIN,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_NAME	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_NAME = OCI_ATTR_NAME,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_NCHARSET_ID	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_NCHARSET_ID = OCI_ATTR_NCHARSET_ID,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_NOWAIT_SUPPORT	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_NOWAIT_SUPPORT =  OCI_ATTR_NOWAIT_SUPPORT,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_NUM_COLS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_NUM_COLS = OCI_ATTR_NUM_COLS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_NUM_ELEMS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_NUM_ELEMS = OCI_ATTR_NUM_ELEMS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_NUM_TYPE_ATTRS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_NUM_TYPE_ATTRS = OCI_ATTR_NUM_TYPE_ATTRS,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_NUM_TYPE_METHODS	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_NUM_TYPE_METHODS = OCI_ATTR_NUM_TYPE_METHODS, $/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_OBJID	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_OBJID = OCI_ATTR_OBJID,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_OBJ_ID	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_OBJ_ID = OCI_ATTR_OBJ_ID,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_OBJ_NAME	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_OBJ_NAME = OCI_ATTR_OBJ_NAME, $/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_OBJ_SCHEMA	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_OBJ_SCHEMA = OCI_ATTR_OBJ_SCHEMA,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_ORDER	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_ORDER = OCI_ATTR_ORDER,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_ORDER_METHOD	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_ORDER_METHOD = OCI_ATTR_ORDER_METHOD,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_OVERLOAD_ID	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_OVERLOAD_ID = OCI_ATTR_OVERLOAD_ID,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_PARTITIONED	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_PARTITIONED = OCI_ATTR_PARTITIONED,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_POSITION	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_POSITION = OCI_ATTR_POSITION,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_PRECISION	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_PRECISION = OCI_ATTR_PRECISION,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_PTYPE	drivers/Oracle/OCI/include/occiControl.h	/^      {ATTR_PTYPE = OCI_ATTR_PTYPE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_RADIX	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_RADIX = OCI_ATTR_RADIX,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_RDBA	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_RDBA = OCI_ATTR_RDBA,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_REF_TDO	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_REF_TDO = OCI_ATTR_REF_TDO,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_SAVEPOINT_SUPPORT	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_SAVEPOINT_SUPPORT =  OCI_ATTR_SAVEPOINT_SUPPORT,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_SCALE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_SCALE = OCI_ATTR_SCALE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_SCHEMA_NAME	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_SCHEMA_NAME = OCI_ATTR_SCHEMA_NAME,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_SUB_NAME	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_SUB_NAME = OCI_ATTR_SUB_NAME,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_SUPERTYPE_NAME	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_SUPERTYPE_NAME = OCI_ATTR_SUPERTYPE_NAME,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_SUPERTYPE_SCHEMA_NAME	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_SUPERTYPE_SCHEMA_NAME = OCI_ATTR_SUPERTYPE_SCHEMA_NAME,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_TABLESPACE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_TABLESPACE = OCI_ATTR_TABLESPACE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_TIMESTAMP	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_TIMESTAMP = OCI_ATTR_TIMESTAMP, $/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_TYPECODE	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_TYPECODE = OCI_ATTR_TYPECODE,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_TYPE_NAME	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_TYPE_NAME = OCI_ATTR_TYPE_NAME,$/;"	e	enum:oracle::occi::MetaData::AttrId
ATTR_VERSION	drivers/Oracle/OCI/include/occiControl.h	/^      ATTR_VERSION = OCI_ATTR_VERSION,$/;"	e	enum:oracle::occi::MetaData::AttrId
AXIS_MAX	kernel/TeGraph.h	32;"	d
Abs	image_processing/TePDIMatrixFunctions.cpp	/^  bool Abs( const TePDIMatrix< double >& inMatrix, $/;"	f	namespace:TePDIMatrixFunctions
AccessParmBlob	drivers/Oracle/OCI/include/odci.h	/^   OCIBlobLocator*  AccessParmBlob;$/;"	m	struct:ODCIExtTableInfo
AccessParmBlob	drivers/Oracle/OCI/include/odci.h	/^   OCIInd AccessParmBlob;$/;"	m	struct:ODCIExtTableInfo_ind
AccessParmClob	drivers/Oracle/OCI/include/odci.h	/^   OCIClobLocator*  AccessParmClob;$/;"	m	struct:ODCIExtTableInfo
AccessParmClob	drivers/Oracle/OCI/include/odci.h	/^   OCIInd AccessParmClob;$/;"	m	struct:ODCIExtTableInfo_ind
Add	drivers/Firebird/ibpp/core/date.cpp	/^void IBPP::Date::Add(int days)$/;"	f	class:IBPP::Date
Add	drivers/Firebird/ibpp/core/events.cpp	/^void EventsImpl::Add(const std::string& eventname, IBPP::EventInterface* objref)$/;"	f	class:EventsImpl
Add	image_processing/TePDIEspecData.cpp	/^void TePDIEspecData::Add(double *pixel)$/;"	f	class:TePDIEspecData
Add	kernel/TeNetwork.cpp	/^TeGraphNetwork:: Add (TeLineSet& ls, map<string, double>& line_costs) $/;"	f	class:TeGraphNetwork
AddMatrixes	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::AddMatrixes( const TePDIMatrix< double >& in1,$/;"	f	class:TePDIMallatWavelets
AddNeighbor	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRGSCell :: AddNeighbor( TePDIRGSCell *c, float dist )$/;"	f	class:TePDIRGSCell
AddRef	drivers/Firebird/ibpp/core/array.cpp	/^IBPP::IArray* ArrayImpl::AddRef()$/;"	f	class:ArrayImpl
AddRef	drivers/Firebird/ibpp/core/blob.cpp	/^IBPP::IBlob* BlobImpl::AddRef()$/;"	f	class:BlobImpl
AddRef	drivers/Firebird/ibpp/core/database.cpp	/^IBPP::IDatabase* DatabaseImpl::AddRef()$/;"	f	class:DatabaseImpl
AddRef	drivers/Firebird/ibpp/core/events.cpp	/^IBPP::IEvents* EventsImpl::AddRef()$/;"	f	class:EventsImpl
AddRef	drivers/Firebird/ibpp/core/row.cpp	/^IBPP::IRow* RowImpl::AddRef()$/;"	f	class:RowImpl
AddRef	drivers/Firebird/ibpp/core/service.cpp	/^IBPP::IService* ServiceImpl::AddRef()$/;"	f	class:ServiceImpl
AddRef	drivers/Firebird/ibpp/core/statement.cpp	/^IBPP::IStatement* StatementImpl::AddRef()$/;"	f	class:StatementImpl
AddRef	drivers/Firebird/ibpp/core/transaction.cpp	/^IBPP::ITransaction* TransactionImpl::AddRef()$/;"	f	class:TransactionImpl
AddRegion	image_processing/TePDICluster.cpp	/^bool TePDICluster::AddRegion(TePDIRegion reg)$/;"	f	class:TePDICluster
AddReservation	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::AddReservation(IBPP::Database db,$/;"	f	class:TransactionImpl
AddUser	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::AddUser(const IBPP::User& user)$/;"	f	class:ServiceImpl
Adjacente	stat/TeSkaterGrafo.cpp	/^void  TSkaterGrafo::Adjacente(int *Indice,double *Peso,int i){$/;"	f	class:TSkaterGrafo
Adjacente	stat/lista.cpp	/^void  TListaVizinho::Adjacente(int *Indice,double *Peso) $/;"	f	class:TListaVizinho
Adjacente1	stat/TeSkaterGrafo.cpp	/^void  TSkaterGrafo::Adjacente1(int *Indice,double *Peso,int i){$/;"	f	class:TSkaterGrafo
AdjacenteB	stat/lista.cpp	/^void TListaVizinho::AdjacenteB(int *Indice,double *Peso){$/;"	f	class:TListaVizinho
Adjust	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRegGrowSeg :: Adjust()$/;"	f	class:TePDIRegGrowSeg
Adjust	image_processing/TePDIRegGrowSeg.hpp	/^        Adjust()$/;"	f	class:CloserCells
AdjustNeighborhood	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRGSCell::AdjustNeighborhood()$/;"	f	class:TePDIRGSCell
AdjustTree	drivers/SQLite/sqlite3/sqlite3.c	/^static int AdjustTree($/;"	f	file:
AffectedRows	drivers/Firebird/ibpp/core/statement.cpp	/^int StatementImpl::AffectedRows()$/;"	f	class:StatementImpl
Agent	drivers/Oracle/OCI/include/occiAQ.h	/^class Agent$/;"	c	namespace:oracle::occi::aq
AgentNum	drivers/Oracle/OCI/include/odci.h	/^   OCIInd AgentNum;$/;"	m	struct:ODCIExtTableInfo_ind
AgentNum	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        AgentNum;$/;"	m	struct:ODCIExtTableInfo
AggInfo	drivers/SQLite/sqlite3/sqlite3.c	/^struct AggInfo {$/;"	s	file:
AggInfo	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct AggInfo AggInfo;$/;"	t	typeref:struct:AggInfo	file:
AggInfo_col	drivers/SQLite/sqlite3/sqlite3.c	/^  struct AggInfo_col {    \/* For each column used in source tables *\/$/;"	s	struct:AggInfo	file:
AggInfo_func	drivers/SQLite/sqlite3/sqlite3.c	/^  struct AggInfo_func {   \/* For each aggregate function *\/$/;"	s	struct:AggInfo	file:
AgregateSubBands	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::AgregateSubBands($/;"	f	class:TePDIMallatWavelets
Alloc	kernel/TeMatrix.cpp	/^TeMatrix::Alloc(int nl, int nc)$/;"	f	class:TeMatrix
AllocArrayBuffer	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::AllocArrayBuffer()$/;"	f	class:ArrayImpl
AllocVariables	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::AllocVariables()$/;"	f	class:RowImpl
AllocateTopLevel	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::AllocateTopLevel( unsigned int level, $/;"	f	class:TePDIMallatWavelets
AllocatedSize	drivers/Firebird/ibpp/core/_ibpp.h	/^	short AllocatedSize() { return mDescrArea->sqln; }$/;"	f	class:ibpp_internals::RowImpl
AlmostZero	image_processing/TePDIGeneralizedIHSFusion.cpp	17;"	d	file:
AncOps	drivers/Oracle/OCI/include/odci.h	/^   OCIInd AncOps;$/;"	m	struct:ODCIQueryInfo_ind
AncOps	drivers/Oracle/OCI/include/odci.h	/^   ODCIObjectList* AncOps;$/;"	m	struct:ODCIQueryInfo
AnyData	drivers/Oracle/OCI/include/occiObjects.h	/^class AnyData$/;"	c	namespace:oracle::occi
AnyDataCtx	drivers/Oracle/OCI/include/occiObjects.h	/^struct AnyDataCtx {$/;"	s	namespace:oracle::occi
AnyDataCtx	drivers/Oracle/OCI/include/occiObjects.h	/^typedef struct AnyDataCtx AnyDataCtx;$/;"	t	namespace:oracle::occi	typeref:struct:oracle::occi::AnyDataCtx
AppPath	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	std::string AppPath;	\/\/ Used by GDS::Call() below$/;"	m	namespace:ibpp_internals	file:
Apply	image_processing/TePDIAlgorithm.cpp	/^bool TePDIAlgorithm::Apply( const TePDIParameters& params )$/;"	f	class:TePDIAlgorithm
Apply	image_processing/TePDIAlgorithm.cpp	/^bool TePDIAlgorithm::Apply()$/;"	f	class:TePDIAlgorithm
Apply	image_processing/TePDIStrategy.cpp	/^bool TePDIStrategy::Apply( const TePDIParameters& params )$/;"	f	class:TePDIStrategy
ApplyHorizontalFilter	image_processing/TePDIMallatWavelets.cpp	/^void TePDIMallatWavelets::ApplyHorizontalFilter( $/;"	f	class:TePDIMallatWavelets
ApplyHorizontalRFilter	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::ApplyHorizontalRFilter( $/;"	f	class:TePDIMallatWavelets
ApplyVerticalFilter	image_processing/TePDIMallatWavelets.cpp	/^void TePDIMallatWavelets::ApplyVerticalFilter( $/;"	f	class:TePDIMallatWavelets
ApplyVerticalRFilter	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::ApplyVerticalRFilter( $/;"	f	class:TePDIMallatWavelets
ArViz	stat/TeSkaterGrafo.h	/^      TListaVizinho *ArViz;$/;"	m	struct:TSkaterGrafo::No_Grafo
AreFileApisANSI	drivers/SQLite/sqlite3/sqlite3.c	31663;"	d	file:
Area	drivers/qt/TeQtCanvas.h	/^    enum CursorMode { Pointer, Area, Pan, Hand, SizeVer, SizeBDiag,$/;"	e	enum:TeQtCanvas::CursorMode
Area	image_processing/TePDIRegGrowSeg.hpp	/^   long Area() { return Npix_; }$/;"	f	class:TePDIRGSCell
Areamin_	image_processing/TePDIRegGrowSeg.hpp	/^      int             Areamin_;$/;"	m	class:TePDIRegGrowSeg
ArgType	drivers/Oracle/OCI/include/odci.h	/^   OCIInd ArgType;$/;"	m	struct:ODCIArgDesc_ind
ArgType	drivers/Oracle/OCI/include/odci.h	/^   OCINumber  ArgType;$/;"	m	struct:ODCIArgDesc
Argv0	drivers/SQLite/sqlite3/shell.c	/^static char *Argv0;$/;"	v	file:
Array	drivers/Firebird/ibpp/core/ibpp.h	/^	class IArray;			typedef Ptr<IArray> Array;$/;"	t	namespace:IBPP
ArrayFactory	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	Array ArrayFactory(Database db, Transaction tr)$/;"	f	namespace:IBPP
ArrayImpl	drivers/Firebird/ibpp/core/_ibpp.h	/^class ArrayImpl : public IBPP::IArray$/;"	c	namespace:ibpp_internals
ArrayImpl	drivers/Firebird/ibpp/core/array.cpp	/^ArrayImpl::ArrayImpl(DatabaseImpl* database, TransactionImpl* transaction)$/;"	f	class:ArrayImpl
ArraySize	drivers/SQLite/sqlite3/shell.c	466;"	d	file:
ArraySize	drivers/SQLite/sqlite3/sqlite3.c	7851;"	d	file:
ArvoreH	stat/TeSkaterArvore.h	3;"	d
AsString	drivers/Firebird/ibpp/core/dbkey.cpp	/^const char* IBPP::DBKey::AsString() const$/;"	f	class:IBPP::DBKey
AssignCells	drivers/SQLite/sqlite3/sqlite3.c	127916;"	d	file:
AssignCells	drivers/SQLite/sqlite3/sqlite3.c	127921;"	d	file:
AssignCells	drivers/SQLite/sqlite3/sqlite3.c	127924;"	d	file:
AttachArrayImpl	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::AttachArrayImpl(ArrayImpl* ar)$/;"	f	class:DatabaseImpl
AttachArrayImpl	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::AttachArrayImpl(ArrayImpl* ar)$/;"	f	class:TransactionImpl
AttachBlobImpl	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::AttachBlobImpl(BlobImpl* bb)$/;"	f	class:DatabaseImpl
AttachBlobImpl	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::AttachBlobImpl(BlobImpl* bb)$/;"	f	class:TransactionImpl
AttachDatabase	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::AttachDatabase(IBPP::Database db,$/;"	f	class:TransactionImpl
AttachDatabaseImpl	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::AttachDatabaseImpl(DatabaseImpl* database)$/;"	f	class:ArrayImpl
AttachDatabaseImpl	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::AttachDatabaseImpl(DatabaseImpl* database)$/;"	f	class:BlobImpl
AttachDatabaseImpl	drivers/Firebird/ibpp/core/events.cpp	/^void EventsImpl::AttachDatabaseImpl(DatabaseImpl* database)$/;"	f	class:EventsImpl
AttachDatabaseImpl	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::AttachDatabaseImpl(DatabaseImpl* database)$/;"	f	class:StatementImpl
AttachDatabaseImpl	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::AttachDatabaseImpl(DatabaseImpl* dbi,$/;"	f	class:TransactionImpl
AttachEventsImpl	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::AttachEventsImpl(EventsImpl* ev)$/;"	f	class:DatabaseImpl
AttachKey	drivers/SQLite/sqlite3/sqlite3.c	/^struct AttachKey { int type;  Token key; };$/;"	s	file:
AttachStatementImpl	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::AttachStatementImpl(StatementImpl* st)$/;"	f	class:DatabaseImpl
AttachStatementImpl	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::AttachStatementImpl(StatementImpl* st)$/;"	f	class:TransactionImpl
AttachTransactionImpl	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::AttachTransactionImpl(TransactionImpl* transaction)$/;"	f	class:ArrayImpl
AttachTransactionImpl	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::AttachTransactionImpl(TransactionImpl* transaction)$/;"	f	class:BlobImpl
AttachTransactionImpl	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::AttachTransactionImpl(TransactionImpl* tr)$/;"	f	class:DatabaseImpl
AttachTransactionImpl	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::AttachTransactionImpl(TransactionImpl* transaction)$/;"	f	class:StatementImpl
AttrCount	drivers/Oracle/OCI/include/occiControl.h	/^  enum AttrCount {COMMON_ATTR_COUNT = 5,$/;"	g	class:oracle::occi::MetaData
AttrId	drivers/Oracle/OCI/include/occiControl.h	/^      enum AttrId $/;"	g	class:oracle::occi::MetaData
Attributes	kernel/TeNeighbours.cpp	/^TeNeighbours:: Attributes (int n)$/;"	f	class:TeNeighbours
Attrs	drivers/Oracle/OCI/include/odci.h	/^  OCIInd Attrs;$/;"	m	struct:ODCITabFuncInfo_ind
Attrs	drivers/Oracle/OCI/include/odci.h	/^  ODCINumberList*  Attrs;$/;"	m	struct:ODCITabFuncInfo
Atual	stat/filaR.h	/^      Item_ptr Atual;\/\/ Utilizado para acesso aos dados$/;"	m	struct:TFilaR::Fila
AuthContext	drivers/SQLite/sqlite3/sqlite3.c	/^struct AuthContext {$/;"	s	file:
AuthContext	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct AuthContext AuthContext;$/;"	t	typeref:struct:AuthContext	file:
AutoMemPol	image_processing/TePDIMatrix.hpp	/^        AutoMemPol,$/;"	e	enum:TePDIMatrix::MemoryPolicy
AutoMemPol	kernel/TeRasterMemManager.h	/^        AutoMemPol = 1,$/;"	e	enum:TeRasterMemManager::MemoryPolicy
AutoincInfo	drivers/SQLite/sqlite3/sqlite3.c	/^struct AutoincInfo {$/;"	s	file:
AutoincInfo	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct AutoincInfo AutoincInfo;$/;"	t	typeref:struct:AutoincInfo	file:
Aux	kernel/TeSparseMatrix.h	/^       Aux(size_type r, size_type maxs, ContainerType& Cont)$/;"	f	class:TeSparseMatrix::Aux
Aux	kernel/TeSparseMatrix.h	/^   class Aux  \/\/ for index operator below$/;"	c	class:TeSparseMatrix
AuxData	drivers/SQLite/sqlite3/sqlite3.c	/^  struct AuxData {$/;"	s	struct:VdbeFunc	file:
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXBindSwapBarrierSGIX
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXChangeDrawableAttributes
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXClientInfo
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXCopyContext
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXCreateContext
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXCreateContextWithConfigSGIX
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXCreateGLXPixmap
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXCreateGLXPixmapWithConfigSGIX
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXCreateNewContext
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXCreatePbuffer
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXCreatePixmap
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXCreateWindow
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXDestroyContext
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXDestroyGLXPixmap
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXDestroyPbuffer
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXDestroyPixmap
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXDestroyWindow
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXGetDrawableAttributes
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXGetFBConfigs
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXGetFBConfigsSGIX
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXGetVisualConfigs
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXIsDirect
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXJoinSwapGroupSGIX
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXMakeContextCurrent
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXMakeCurrent
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXMakeCurrentReadSGI
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXQueryContext
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXQueryContextInfoEXT
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXQueryExtensionsString
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXQueryMaxSwapBarriersSGIX
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXQueryServerString
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXQueryVersion
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXRender
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXRenderLarge
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXSingle
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXSwapBuffers
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXUseXFont
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXVendorPrivate
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXVendorPrivateWithReply
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXWaitGL
B16	drivers/GL/glxproto.h	/^    CARD16	length B16;$/;"	m	struct:GLXWaitX
B16	drivers/GL/glxproto.h	/^    CARD16	pad2 B16;$/;"	m	struct:__anon109
B16	drivers/GL/glxproto.h	/^    CARD16	requestNumber B16;$/;"	m	struct:GLXRenderLarge
B16	drivers/GL/glxproto.h	/^    CARD16	requestTotal B16;$/;"	m	struct:GLXRenderLarge
B16	drivers/GL/glxproto.h	/^    CARD16	reserved2 B16;$/;"	m	struct:GLXCreateContext
B16	drivers/GL/glxproto.h	/^    CARD16	reserved2 B16;$/;"	m	struct:GLXCreateContextWithConfigSGIX
B16	drivers/GL/glxproto.h	/^    CARD16	reserved2 B16;$/;"	m	struct:GLXCreateNewContext
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon100
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon101
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon102
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon103
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon104
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon105
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon106
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon107
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon108
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon109
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon110
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon111
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon112
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon113
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon114
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon115
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon116
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon117
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon118
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon119
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon120
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon121
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon122
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon98
B16	drivers/GL/glxproto.h	/^    CARD16	sequenceNumber B16;$/;"	m	struct:__anon99
B16	drivers/GL/glxproto.h	/^    CARD16      length B16;$/;"	m	struct:GLXDestroyHyperpipeConfigSGIX
B16	drivers/GL/glxproto.h	/^    CARD16      length B16;$/;"	m	struct:GLXHyperpipeConfigSGIX
B16	drivers/GL/glxproto.h	/^    CARD16      length B16;$/;"	m	struct:GLXQueryHyperpipeConfigSGIX
B16	drivers/GL/glxproto.h	/^    CARD16      length B16;$/;"	m	struct:GLXQueryHyperpipeNetworkSGIX
B16	drivers/GL/glxproto.h	/^    CARD16      sequenceNumber B16;$/;"	m	struct:__anon123
B16	drivers/GL/glxproto.h	/^    CARD16      sequenceNumber B16;$/;"	m	struct:__anon124
B16	drivers/GL/glxproto.h	/^    CARD16      sequenceNumber B16;$/;"	m	struct:__anon125
B16	drivers/GL/glxproto.h	/^    CARD16      sequenceNumber B16;$/;"	m	struct:__anon126
B16	drivers/GL/glxproto.h	/^    CARD16 aux_buffer B16;$/;"	m	struct:__anon127
B16	drivers/GL/glxproto.h	/^    CARD16 count B16;$/;"	m	struct:__anon127
B16	drivers/GL/glxproto.h	/^    CARD16 draw_type B16;$/;"	m	struct:__anon127
B16	drivers/GL/glxproto.h	/^    CARD16 event_type B16;  \/*** was clobber_class *\/$/;"	m	struct:__anon127
B16	drivers/GL/glxproto.h	/^    CARD16 height B16;$/;"	m	struct:__anon127
B16	drivers/GL/glxproto.h	/^    CARD16 sequenceNumber B16;$/;"	m	struct:__anon127
B16	drivers/GL/glxproto.h	/^    CARD16 width B16;$/;"	m	struct:__anon127
B16	drivers/GL/glxproto.h	/^    CARD16 x B16;$/;"	m	struct:__anon127
B16	drivers/GL/glxproto.h	/^    CARD16 y B16;$/;"	m	struct:__anon127
B1MAXVAL	drivers/Oracle/OCI/include/oratypes.h	157;"	d
B1MINVAL	drivers/Oracle/OCI/include/oratypes.h	158;"	d
B2MAXVAL	drivers/Oracle/OCI/include/oratypes.h	165;"	d
B2MINVAL	drivers/Oracle/OCI/include/oratypes.h	166;"	d
B32	drivers/GL/glxproto.h	/^    CARD32	barrier B32;$/;"	m	struct:GLXBindSwapBarrierSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	count B32;$/;"	m	struct:GLXUseXFont
B32	drivers/GL/glxproto.h	/^    CARD32	dataBytes B32;$/;"	m	struct:GLXRenderLarge
B32	drivers/GL/glxproto.h	/^    CARD32	depth B32;$/;"	m	struct:__anon101
B32	drivers/GL/glxproto.h	/^    CARD32	error B32;$/;"	m	struct:__anon98
B32	drivers/GL/glxproto.h	/^    CARD32	first B32;$/;"	m	struct:GLXUseXFont
B32	drivers/GL/glxproto.h	/^    CARD32	font B32;$/;"	m	struct:GLXUseXFont
B32	drivers/GL/glxproto.h	/^    CARD32	height B32;$/;"	m	struct:__anon101
B32	drivers/GL/glxproto.h	/^    CARD32	height B32;$/;"	m	struct:__anon102
B32	drivers/GL/glxproto.h	/^    CARD32	height B32;$/;"	m	struct:__anon103
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon100
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon101
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon102
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon103
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon104
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon105
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon106
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon107
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon108
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon109
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon110
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon111
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon112
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon113
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon114
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon115
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon116
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon117
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon118
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon119
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon120
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon121
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon122
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon98
B32	drivers/GL/glxproto.h	/^    CARD32	length B32;$/;"	m	struct:__anon99
B32	drivers/GL/glxproto.h	/^    CARD32	listBase B32;$/;"	m	struct:GLXUseXFont
B32	drivers/GL/glxproto.h	/^    CARD32	major B32;$/;"	m	struct:GLXClientInfo
B32	drivers/GL/glxproto.h	/^    CARD32	majorVersion B32;$/;"	m	struct:GLXQueryVersion
B32	drivers/GL/glxproto.h	/^    CARD32	majorVersion B32;$/;"	m	struct:__anon107
B32	drivers/GL/glxproto.h	/^    CARD32	mask B32;$/;"	m	struct:GLXCopyContext
B32	drivers/GL/glxproto.h	/^    CARD32	max B32;$/;"	m	struct:__anon122
B32	drivers/GL/glxproto.h	/^    CARD32	minor B32;$/;"	m	struct:GLXClientInfo
B32	drivers/GL/glxproto.h	/^    CARD32	minorVersion B32;$/;"	m	struct:GLXQueryVersion
B32	drivers/GL/glxproto.h	/^    CARD32	minorVersion B32;$/;"	m	struct:__anon107
B32	drivers/GL/glxproto.h	/^    CARD32	n B32;			\/* number of attribute\/value pairs *\/$/;"	m	struct:__anon115
B32	drivers/GL/glxproto.h	/^    CARD32	n B32;			\/* number of attribute\/value pairs *\/$/;"	m	struct:__anon120
B32	drivers/GL/glxproto.h	/^    CARD32	n B32;$/;"	m	struct:__anon112
B32	drivers/GL/glxproto.h	/^    CARD32	n B32;$/;"	m	struct:__anon113
B32	drivers/GL/glxproto.h	/^    CARD32	name B32;$/;"	m	struct:GLXQueryServerString
B32	drivers/GL/glxproto.h	/^    CARD32	newMode B32;$/;"	m	struct:__anon106
B32	drivers/GL/glxproto.h	/^    CARD32	numAttribs B32;$/;"	m	struct:GLXChangeDrawableAttributes
B32	drivers/GL/glxproto.h	/^    CARD32	numAttribs B32;$/;"	m	struct:GLXCreatePbuffer
B32	drivers/GL/glxproto.h	/^    CARD32	numAttribs B32;$/;"	m	struct:GLXCreatePixmap
B32	drivers/GL/glxproto.h	/^    CARD32	numAttribs B32;$/;"	m	struct:GLXCreateWindow
B32	drivers/GL/glxproto.h	/^    CARD32	numAttribs B32;$/;"	m	struct:__anon114
B32	drivers/GL/glxproto.h	/^    CARD32	numAttribs B32;$/;"	m	struct:__anon118
B32	drivers/GL/glxproto.h	/^    CARD32	numFBConfigs B32;$/;"	m	struct:__anon114
B32	drivers/GL/glxproto.h	/^    CARD32	numProps B32;$/;"	m	struct:__anon108
B32	drivers/GL/glxproto.h	/^    CARD32	numVisuals B32;$/;"	m	struct:__anon108
B32	drivers/GL/glxproto.h	/^    CARD32	numbytes B32;$/;"	m	struct:GLXClientInfo
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;   \/* unused; corresponds to contextTag in header *\/$/;"	m	struct:GLXCreateContextWithConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;   \/* unused; corresponds to contextTag in header *\/$/;"	m	struct:GLXCreateGLXPixmapWithConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;   \/* unused; corresponds to contextTag in header *\/$/;"	m	struct:GLXGetFBConfigsSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;   \/* unused; corresponds to contextTag in header *\/$/;"	m	struct:GLXQueryContextInfoEXT
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;$/;"	m	struct:__anon100
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;$/;"	m	struct:__anon101
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;$/;"	m	struct:__anon102
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;$/;"	m	struct:__anon103
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;$/;"	m	struct:__anon104
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;$/;"	m	struct:__anon105
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;$/;"	m	struct:__anon112
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;$/;"	m	struct:__anon113
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;$/;"	m	struct:__anon117
B32	drivers/GL/glxproto.h	/^    CARD32	pad1 B32;$/;"	m	struct:__anon119
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon100
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon101
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon102
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon103
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon104
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon105
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon115
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon116
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon117
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon118
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon119
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon120
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon98
B32	drivers/GL/glxproto.h	/^    CARD32	pad2 B32;$/;"	m	struct:__anon99
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;		\/* NOTE: may hold a single value *\/$/;"	m	struct:__anon110
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;		\/* NOTE: may hold a single value *\/$/;"	m	struct:__anon113
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon100
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon105
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon107
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon108
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon109
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon111
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon112
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon114
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon115
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon116
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon117
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon118
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon120
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon122
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon98
B32	drivers/GL/glxproto.h	/^    CARD32	pad3 B32;$/;"	m	struct:__anon99
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;		\/* NOTE: may hold half a double *\/$/;"	m	struct:__anon110
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;		\/* NOTE: may hold half a double *\/$/;"	m	struct:__anon113
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon100
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon104
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon105
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon106
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon107
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon108
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon109
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon111
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon112
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon114
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon115
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon116
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon117
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon118
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon119
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon120
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon122
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon98
B32	drivers/GL/glxproto.h	/^    CARD32	pad4 B32;$/;"	m	struct:__anon99
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon100
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon102
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon103
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon104
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon105
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon106
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon107
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon108
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon109
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon110
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon111
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon112
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon113
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon114
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon115
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon116
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon117
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon118
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon119
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon120
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon122
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon98
B32	drivers/GL/glxproto.h	/^    CARD32	pad5 B32;$/;"	m	struct:__anon99
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon100
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon101
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon102
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon103
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon104
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon105
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon106
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon107
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon108
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon109
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon110
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon111
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon112
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon113
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon114
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon115
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon116
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon117
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon118
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon119
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon120
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon121
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon122
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon98
B32	drivers/GL/glxproto.h	/^    CARD32	pad6 B32;$/;"	m	struct:__anon99
B32	drivers/GL/glxproto.h	/^    CARD32	pad7 B32;$/;"	m	struct:__anon109
B32	drivers/GL/glxproto.h	/^    CARD32	pixmap B32;$/;"	m	struct:GLXCreateGLXPixmap
B32	drivers/GL/glxproto.h	/^    CARD32	pixmap B32;$/;"	m	struct:GLXCreateGLXPixmapWithConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	pixmap B32;$/;"	m	struct:GLXCreatePixmap
B32	drivers/GL/glxproto.h	/^    CARD32	readType B32;$/;"	m	struct:__anon121
B32	drivers/GL/glxproto.h	/^    CARD32	readVid B32;$/;"	m	struct:__anon121
B32	drivers/GL/glxproto.h	/^    CARD32	retval B32;$/;"	m	struct:__anon106
B32	drivers/GL/glxproto.h	/^    CARD32	retval B32;$/;"	m	struct:__anon110
B32	drivers/GL/glxproto.h	/^    CARD32	retval B32;$/;"	m	struct:__anon111
B32	drivers/GL/glxproto.h	/^    CARD32	screen	B32;$/;"	m	struct:GLXQueryServerString
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXCreateContext
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXCreateContextWithConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXCreateGLXPixmap
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXCreateGLXPixmapWithConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXCreateNewContext
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXCreatePbuffer
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXCreatePixmap
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXCreateWindow
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXGetFBConfigs
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXGetFBConfigsSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXGetVisualConfigs
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXQueryExtensionsString
B32	drivers/GL/glxproto.h	/^    CARD32	screen B32;$/;"	m	struct:GLXQueryMaxSwapBarriersSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	size B32;$/;"	m	struct:__anon106
B32	drivers/GL/glxproto.h	/^    CARD32	size B32;$/;"	m	struct:__anon110
B32	drivers/GL/glxproto.h	/^    CARD32	size B32;$/;"	m	struct:__anon111
B32	drivers/GL/glxproto.h	/^    CARD32	size B32;$/;"	m	struct:__anon122
B32	drivers/GL/glxproto.h	/^    CARD32	vendorCode B32;		\/* vendor-specific opcode *\/$/;"	m	struct:GLXBindSwapBarrierSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	vendorCode B32;		\/* vendor-specific opcode *\/$/;"	m	struct:GLXCreateContextWithConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	vendorCode B32;		\/* vendor-specific opcode *\/$/;"	m	struct:GLXCreateGLXPixmapWithConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	vendorCode B32;		\/* vendor-specific opcode *\/$/;"	m	struct:GLXGetFBConfigsSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	vendorCode B32;		\/* vendor-specific opcode *\/$/;"	m	struct:GLXJoinSwapGroupSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	vendorCode B32;		\/* vendor-specific opcode *\/$/;"	m	struct:GLXMakeCurrentReadSGI
B32	drivers/GL/glxproto.h	/^    CARD32	vendorCode B32;		\/* vendor-specific opcode *\/$/;"	m	struct:GLXQueryContextInfoEXT
B32	drivers/GL/glxproto.h	/^    CARD32	vendorCode B32;		\/* vendor-specific opcode *\/$/;"	m	struct:GLXQueryMaxSwapBarriersSGIX
B32	drivers/GL/glxproto.h	/^    CARD32	vendorCode B32;		\/* vendor-specific opcode *\/$/;"	m	struct:GLXVendorPrivate
B32	drivers/GL/glxproto.h	/^    CARD32	vendorCode B32;		\/* vendor-specific opcode *\/$/;"	m	struct:GLXVendorPrivateWithReply
B32	drivers/GL/glxproto.h	/^    CARD32	visual B32;$/;"	m	struct:GLXCreateContext
B32	drivers/GL/glxproto.h	/^    CARD32	visual B32;$/;"	m	struct:GLXCreateGLXPixmap
B32	drivers/GL/glxproto.h	/^    CARD32	width B32;$/;"	m	struct:__anon101
B32	drivers/GL/glxproto.h	/^    CARD32	width B32;$/;"	m	struct:__anon102
B32	drivers/GL/glxproto.h	/^    CARD32	width B32;$/;"	m	struct:__anon103
B32	drivers/GL/glxproto.h	/^    CARD32	width B32;$/;"	m	struct:__anon104
B32	drivers/GL/glxproto.h	/^    CARD32	width B32;$/;"	m	struct:__anon119
B32	drivers/GL/glxproto.h	/^    CARD32	window B32;$/;"	m	struct:GLXCreateWindow
B32	drivers/GL/glxproto.h	/^    CARD32	writeType B32;$/;"	m	struct:__anon121
B32	drivers/GL/glxproto.h	/^    CARD32	writeVid B32;$/;"	m	struct:__anon121
B32	drivers/GL/glxproto.h	/^    CARD32 	unused B32;		\/* corresponds to contextTag in hdr *\/$/;"	m	struct:GLXBindSwapBarrierSGIX
B32	drivers/GL/glxproto.h	/^    CARD32 	unused B32;		\/* corresponds to contextTag in hdr *\/$/;"	m	struct:GLXJoinSwapGroupSGIX
B32	drivers/GL/glxproto.h	/^    CARD32 	unused B32;		\/* corresponds to contextTag in hdr *\/$/;"	m	struct:GLXQueryMaxSwapBarriersSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      hpId B32;$/;"	m	struct:GLXDestroyHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      hpId B32;$/;"	m	struct:GLXQueryHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      hpId B32;$/;"	m	struct:__anon126
B32	drivers/GL/glxproto.h	/^    CARD32      length B32;$/;"	m	struct:__anon123
B32	drivers/GL/glxproto.h	/^    CARD32      length B32;$/;"	m	struct:__anon124
B32	drivers/GL/glxproto.h	/^    CARD32      length B32;$/;"	m	struct:__anon125
B32	drivers/GL/glxproto.h	/^    CARD32      length B32;$/;"	m	struct:__anon126
B32	drivers/GL/glxproto.h	/^    CARD32      n B32;$/;"	m	struct:__anon123
B32	drivers/GL/glxproto.h	/^    CARD32      n B32;$/;"	m	struct:__anon124
B32	drivers/GL/glxproto.h	/^    CARD32      n B32;$/;"	m	struct:__anon125
B32	drivers/GL/glxproto.h	/^    CARD32      n B32;$/;"	m	struct:__anon126
B32	drivers/GL/glxproto.h	/^    CARD32      networkId B32;$/;"	m	struct:GLXHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      npipes B32;             \/* NOTE: may hold a single value *\/$/;"	m	struct:__anon123
B32	drivers/GL/glxproto.h	/^    CARD32      npipes B32;$/;"	m	struct:GLXHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      npipes B32;$/;"	m	struct:__anon125
B32	drivers/GL/glxproto.h	/^    CARD32      npipes B32;$/;"	m	struct:__anon126
B32	drivers/GL/glxproto.h	/^    CARD32      pad1 B32;   \/* unused; corresponds to contextTag in header *\/$/;"	m	struct:GLXDestroyHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      pad1 B32;   \/* unused; corresponds to contextTag in header *\/$/;"	m	struct:GLXHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      pad1 B32;   \/* unused; corresponds to contextTag in header *\/$/;"	m	struct:GLXQueryHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      pad1 B32;   \/* unused; corresponds to contextTag in header *\/$/;"	m	struct:GLXQueryHyperpipeNetworkSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      pad1 B32;$/;"	m	struct:__anon123
B32	drivers/GL/glxproto.h	/^    CARD32      pad1 B32;$/;"	m	struct:__anon124
B32	drivers/GL/glxproto.h	/^    CARD32      pad1 B32;$/;"	m	struct:__anon125
B32	drivers/GL/glxproto.h	/^    CARD32      pad1 B32;$/;"	m	struct:__anon126
B32	drivers/GL/glxproto.h	/^    CARD32      pad2 B32;$/;"	m	struct:GLXDestroyHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      pad2 B32;$/;"	m	struct:GLXHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      pad2 B32;$/;"	m	struct:GLXQueryHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      pad3 B32;$/;"	m	struct:GLXDestroyHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      pad3 B32;$/;"	m	struct:GLXHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      pad3 B32;$/;"	m	struct:GLXQueryHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      pad4 B32;               \/* NOTE: may hold half a double *\/$/;"	m	struct:__anon123
B32	drivers/GL/glxproto.h	/^    CARD32      pad4 B32;               \/* NOTE: may hold half a double *\/$/;"	m	struct:__anon124
B32	drivers/GL/glxproto.h	/^    CARD32      pad4 B32;$/;"	m	struct:GLXDestroyHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      pad4 B32;$/;"	m	struct:GLXQueryHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      pad4 B32;$/;"	m	struct:__anon125
B32	drivers/GL/glxproto.h	/^    CARD32      pad5 B32;$/;"	m	struct:__anon123
B32	drivers/GL/glxproto.h	/^    CARD32      pad5 B32;$/;"	m	struct:__anon124
B32	drivers/GL/glxproto.h	/^    CARD32      pad5 B32;$/;"	m	struct:__anon125
B32	drivers/GL/glxproto.h	/^    CARD32      pad5 B32;$/;"	m	struct:__anon126
B32	drivers/GL/glxproto.h	/^    CARD32      pad6 B32;$/;"	m	struct:__anon123
B32	drivers/GL/glxproto.h	/^    CARD32      pad6 B32;$/;"	m	struct:__anon124
B32	drivers/GL/glxproto.h	/^    CARD32      pad6 B32;$/;"	m	struct:__anon125
B32	drivers/GL/glxproto.h	/^    CARD32      pad6 B32;$/;"	m	struct:__anon126
B32	drivers/GL/glxproto.h	/^    CARD32      screen B32;$/;"	m	struct:GLXDestroyHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      screen B32;$/;"	m	struct:GLXHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      screen B32;$/;"	m	struct:GLXQueryHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      screen B32;$/;"	m	struct:GLXQueryHyperpipeNetworkSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      success B32;            \/* NOTE: may hold a single value *\/$/;"	m	struct:__anon124
B32	drivers/GL/glxproto.h	/^    CARD32      vendorCode B32;         \/* vendor-specific opcode *\/$/;"	m	struct:GLXDestroyHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      vendorCode B32;         \/* vendor-specific opcode *\/$/;"	m	struct:GLXHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      vendorCode B32;         \/* vendor-specific opcode *\/$/;"	m	struct:GLXQueryHyperpipeConfigSGIX
B32	drivers/GL/glxproto.h	/^    CARD32      vendorCode B32;         \/* vendor-specific opcode *\/$/;"	m	struct:GLXQueryHyperpipeNetworkSGIX
B32	drivers/GL/glxproto.h	/^    CARD32 buffer_mask B32; \/*** was mask *\/$/;"	m	struct:__anon127
B32	drivers/GL/glxproto.h	/^    CARD32 drawable B32;$/;"	m	struct:__anon127
B32	drivers/GL/glxproto.h	/^    CARD32 unused2 B32;$/;"	m	struct:__anon127
B32	drivers/GL/glxproto.h	/^    GLXContextID context B32;$/;"	m	struct:GLXCreateContext
B32	drivers/GL/glxproto.h	/^    GLXContextID context B32;$/;"	m	struct:GLXCreateContextWithConfigSGIX
B32	drivers/GL/glxproto.h	/^    GLXContextID context B32;$/;"	m	struct:GLXCreateNewContext
B32	drivers/GL/glxproto.h	/^    GLXContextID context B32;$/;"	m	struct:GLXDestroyContext
B32	drivers/GL/glxproto.h	/^    GLXContextID context B32;$/;"	m	struct:GLXIsDirect
B32	drivers/GL/glxproto.h	/^    GLXContextID context B32;$/;"	m	struct:GLXMakeContextCurrent
B32	drivers/GL/glxproto.h	/^    GLXContextID context B32;$/;"	m	struct:GLXMakeCurrent
B32	drivers/GL/glxproto.h	/^    GLXContextID context B32;$/;"	m	struct:GLXMakeCurrentReadSGI
B32	drivers/GL/glxproto.h	/^    GLXContextID context B32;$/;"	m	struct:GLXQueryContext
B32	drivers/GL/glxproto.h	/^    GLXContextID context B32;$/;"	m	struct:GLXQueryContextInfoEXT
B32	drivers/GL/glxproto.h	/^    GLXContextID dest B32;$/;"	m	struct:GLXCopyContext
B32	drivers/GL/glxproto.h	/^    GLXContextID shareList B32;$/;"	m	struct:GLXCreateContext
B32	drivers/GL/glxproto.h	/^    GLXContextID shareList B32;$/;"	m	struct:GLXCreateContextWithConfigSGIX
B32	drivers/GL/glxproto.h	/^    GLXContextID shareList B32;$/;"	m	struct:GLXCreateNewContext
B32	drivers/GL/glxproto.h	/^    GLXContextID source B32;$/;"	m	struct:GLXCopyContext
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:GLXCopyContext
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:GLXRender
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:GLXRenderLarge
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:GLXSingle
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:GLXSwapBuffers
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:GLXUseXFont
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:GLXVendorPrivate
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:GLXVendorPrivateWithReply
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:GLXWaitGL
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:GLXWaitX
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:__anon116
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:__anon121
B32	drivers/GL/glxproto.h	/^    GLXContextTag contextTag B32;$/;"	m	struct:__anon99
B32	drivers/GL/glxproto.h	/^    GLXContextTag oldContextTag B32;$/;"	m	struct:GLXMakeContextCurrent
B32	drivers/GL/glxproto.h	/^    GLXContextTag oldContextTag B32;$/;"	m	struct:GLXMakeCurrent
B32	drivers/GL/glxproto.h	/^    GLXContextTag oldContextTag B32;$/;"	m	struct:GLXMakeCurrentReadSGI
B32	drivers/GL/glxproto.h	/^    GLXDrawable	drawable B32;$/;"	m	struct:GLXBindSwapBarrierSGIX
B32	drivers/GL/glxproto.h	/^    GLXDrawable	drawable B32;$/;"	m	struct:GLXJoinSwapGroupSGIX
B32	drivers/GL/glxproto.h	/^    GLXDrawable	member B32;$/;"	m	struct:GLXJoinSwapGroupSGIX
B32	drivers/GL/glxproto.h	/^    GLXDrawable drawable B32;$/;"	m	struct:GLXChangeDrawableAttributes
B32	drivers/GL/glxproto.h	/^    GLXDrawable drawable B32;$/;"	m	struct:GLXGetDrawableAttributes
B32	drivers/GL/glxproto.h	/^    GLXDrawable drawable B32;$/;"	m	struct:GLXMakeContextCurrent
B32	drivers/GL/glxproto.h	/^    GLXDrawable drawable B32;$/;"	m	struct:GLXMakeCurrent
B32	drivers/GL/glxproto.h	/^    GLXDrawable drawable B32;$/;"	m	struct:GLXMakeCurrentReadSGI
B32	drivers/GL/glxproto.h	/^    GLXDrawable drawable B32;$/;"	m	struct:GLXSwapBuffers
B32	drivers/GL/glxproto.h	/^    GLXDrawable readable B32;$/;"	m	struct:GLXMakeCurrentReadSGI
B32	drivers/GL/glxproto.h	/^    GLXDrawable readdrawable B32;$/;"	m	struct:GLXMakeContextCurrent
B32	drivers/GL/glxproto.h	/^    GLXFBConfigID fbconfig B32;$/;"	m	struct:GLXCreateContextWithConfigSGIX
B32	drivers/GL/glxproto.h	/^    GLXFBConfigID fbconfig B32;$/;"	m	struct:GLXCreateGLXPixmapWithConfigSGIX
B32	drivers/GL/glxproto.h	/^    GLXFBConfigID fbconfig B32;$/;"	m	struct:GLXCreateNewContext
B32	drivers/GL/glxproto.h	/^    GLXFBConfigID fbconfig B32;$/;"	m	struct:GLXCreatePbuffer
B32	drivers/GL/glxproto.h	/^    GLXFBConfigID fbconfig B32;$/;"	m	struct:GLXCreatePixmap
B32	drivers/GL/glxproto.h	/^    GLXFBConfigID fbconfig B32;$/;"	m	struct:GLXCreateWindow
B32	drivers/GL/glxproto.h	/^    GLXPbuffer	pbuffer B32;$/;"	m	struct:GLXCreatePbuffer
B32	drivers/GL/glxproto.h	/^    GLXPbuffer	pbuffer B32;$/;"	m	struct:GLXDestroyPbuffer
B32	drivers/GL/glxproto.h	/^    GLXPixmap	glxpixmap B32;$/;"	m	struct:GLXCreateGLXPixmap
B32	drivers/GL/glxproto.h	/^    GLXPixmap	glxpixmap B32;$/;"	m	struct:GLXCreateGLXPixmapWithConfigSGIX
B32	drivers/GL/glxproto.h	/^    GLXPixmap	glxpixmap B32;$/;"	m	struct:GLXCreatePixmap
B32	drivers/GL/glxproto.h	/^    GLXPixmap	glxpixmap B32;$/;"	m	struct:GLXDestroyGLXPixmap
B32	drivers/GL/glxproto.h	/^    GLXPixmap	glxpixmap B32;$/;"	m	struct:GLXDestroyPixmap
B32	drivers/GL/glxproto.h	/^    GLXWindow	glxwindow B32;$/;"	m	struct:GLXCreateWindow
B32	drivers/GL/glxproto.h	/^    GLXWindow	glxwindow B32;$/;"	m	struct:GLXDestroyWindow
B3SplineFilter	image_processing/TePDIWaveletAtrous.hpp	/^        B3SplineFilter, $/;"	e	enum:TePDIWaveletAtrous::FilterType
B4MAXVAL	drivers/Oracle/OCI/include/oratypes.h	173;"	d
B4MINVAL	drivers/Oracle/OCI/include/oratypes.h	174;"	d
BAR_BINARY	kernel/TeGraph.h	41;"	d
BAYES_GREATER_CASES	stat/TeBayesFunctions.h	/^   BAYES_GREATER_CASES,$/;"	e	enum:TeGlobalBayesError
BAYES_NULL_POPULATION	stat/TeBayesFunctions.h	/^   BAYES_NULL_POPULATION$/;"	e	enum:TeGlobalBayesError
BDouble	drivers/Oracle/OCI/include/occiCommon.h	/^typedef struct BDouble BDouble;$/;"	t	namespace:oracle::occi	typeref:struct:oracle::occi::BDouble
BDouble	drivers/Oracle/OCI/include/occiData.h	/^ BDouble()$/;"	f	struct:oracle::occi::BDouble
BDouble	drivers/Oracle/OCI/include/occiData.h	/^typedef struct BDouble$/;"	s	namespace:oracle::occi
BDouble	drivers/Oracle/OCI/include/occiData.h	/^} BDouble;$/;"	t	namespace:oracle::occi	typeref:struct:oracle::occi::BDouble
BEGIN	kernel/lexTemporal.cpp	105;"	d	file:
BEGIN_TIMER	drivers/SQLite/sqlite3/shell.c	128;"	d	file:
BEGIN_TIMER	drivers/SQLite/sqlite3/shell.c	200;"	d	file:
BEGIN_TIMER	drivers/SQLite/sqlite3/shell.c	205;"	d	file:
BETA	image_processing/TePDISimplex.cpp	83;"	d	file:
BFS_Desvio	stat/TeSkaterFunctions.cpp	/^double  TParticao::BFS_Desvio(int Raiz,int Exceto,double *Media){$/;"	f	class:TParticao
BFS_Main	stat/TeSkaterFunctions.cpp	/^void  TParticao::BFS_Main(TFilaR::Item_ptr Item){\/\/Raiz,Populacao,Desvio$/;"	f	class:TParticao
BFS_Media	stat/TeSkaterFunctions.cpp	/^double*  TParticao::BFS_Media(int Raiz,int Exceto,long *Populacao){$/;"	f	class:TParticao
BFS_Salva	stat/TeSkaterFunctions.cpp	/^void  TParticao::BFS_Salva(TeSTElementSet& regSet, string name){$/;"	f	class:TParticao
BFloat	drivers/Oracle/OCI/include/occiCommon.h	/^typedef struct BFloat BFloat;$/;"	t	namespace:oracle::occi	typeref:struct:oracle::occi::BFloat
BFloat	drivers/Oracle/OCI/include/occiData.h	/^ BFloat()$/;"	f	struct:oracle::occi::BFloat
BFloat	drivers/Oracle/OCI/include/occiData.h	/^typedef struct BFloat$/;"	s	namespace:oracle::occi
BFloat	drivers/Oracle/OCI/include/occiData.h	/^} BFloat;$/;"	t	namespace:oracle::occi	typeref:struct:oracle::occi::BFloat
BIAS	image_processing/TePDIFusionIndexes.hpp	/^      enum TeFusionIndexes {CC, BIAS, VARDIF, SDD, UIQI, RMSE, ERGAS, SIMM, SERGAS, SCC};$/;"	e	enum:TePDIFusionIndexes::TeFusionIndexes
BICUBIC_K1	image_processing/TePDIInterpolator.cpp	11;"	d	file:
BICUBIC_K1	image_processing/TePDIMMIOMatching.cpp	21;"	d	file:
BICUBIC_K2	image_processing/TePDIInterpolator.cpp	13;"	d	file:
BICUBIC_K2	image_processing/TePDIMMIOMatching.cpp	23;"	d	file:
BICUBIC_KERNEL	image_processing/TePDIInterpolator.cpp	21;"	d	file:
BICUBIC_KERNEL	image_processing/TePDIMMIOMatching.cpp	31;"	d	file:
BICUBIC_MODULE	image_processing/TePDIInterpolator.cpp	10;"	d	file:
BICUBIC_MODULE	image_processing/TePDIMMIOMatching.cpp	20;"	d	file:
BICUBIC_RANGES	image_processing/TePDIInterpolator.cpp	15;"	d	file:
BICUBIC_RANGES	image_processing/TePDIMMIOMatching.cpp	25;"	d	file:
BINARY	kernel/TeGraph.cpp	70;"	d	file:
BIN_PG_POINT	drivers/PostgreSQL/TePGInterface.cpp	/^} BIN_PG_POINT;$/;"	t	typeref:struct:__anon178	file:
BITVEC_HASH	drivers/SQLite/sqlite3/sqlite3.c	34861;"	d	file:
BITVEC_MXHASH	drivers/SQLite/sqlite3/sqlite3.c	34856;"	d	file:
BITVEC_NBIT	drivers/SQLite/sqlite3/sqlite3.c	34850;"	d	file:
BITVEC_NELEM	drivers/SQLite/sqlite3/sqlite3.c	34848;"	d	file:
BITVEC_NINT	drivers/SQLite/sqlite3/sqlite3.c	34853;"	d	file:
BITVEC_NPTR	drivers/SQLite/sqlite3/sqlite3.c	34863;"	d	file:
BITVEC_SZ	drivers/SQLite/sqlite3/sqlite3.c	34834;"	d	file:
BITVEC_SZELEM	drivers/SQLite/sqlite3/sqlite3.c	34846;"	d	file:
BITVEC_TELEM	drivers/SQLite/sqlite3/sqlite3.c	34844;"	d	file:
BITVEC_USIZE	drivers/SQLite/sqlite3/sqlite3.c	34838;"	d	file:
BLOBCALLBACK	drivers/Firebird/ibpp/core/ibase.h	/^}  *BLOBCALLBACK;$/;"	t	typeref:struct:blobcallback
BMS	drivers/SQLite/sqlite3/sqlite3.c	10517;"	d	file:
BREAKLINEFIRSTVERTEX	kernel/TeTin.h	/^  CONTOURFIRSTVERTEX = 4, CONTOURLASTVERTEX = 5, BREAKLINEFIRSTVERTEX = 6, BREAKLINELASTVERTEX = 7};$/;"	e	enum:TeTinVertexType
BREAKLINELASTVERTEX	kernel/TeTin.h	/^  CONTOURFIRSTVERTEX = 4, CONTOURLASTVERTEX = 5, BREAKLINEFIRSTVERTEX = 6, BREAKLINELASTVERTEX = 7};$/;"	e	enum:TeTinVertexType
BRF	drivers/Firebird/ibpp/core/ibpp.h	/^	enum BRF {$/;"	g	namespace:IBPP
BSTREAM	drivers/Firebird/ibpp/core/ibase.h	/^} BSTREAM;$/;"	t	typeref:struct:bstream
BTCURSOR_MAX_DEPTH	drivers/SQLite/sqlite3/sqlite3.c	47629;"	d	file:
BTREE_AUTOVACUUM_FULL	drivers/SQLite/sqlite3/sqlite3.c	7990;"	d	file:
BTREE_AUTOVACUUM_INCR	drivers/SQLite/sqlite3/sqlite3.c	7991;"	d	file:
BTREE_AUTOVACUUM_NONE	drivers/SQLite/sqlite3/sqlite3.c	7989;"	d	file:
BTREE_BLOBKEY	drivers/SQLite/sqlite3/sqlite3.c	8066;"	d	file:
BTREE_DEFAULT_CACHE_SIZE	drivers/SQLite/sqlite3/sqlite3.c	8090;"	d	file:
BTREE_FILE_FORMAT	drivers/SQLite/sqlite3/sqlite3.c	8089;"	d	file:
BTREE_FREE_PAGE_COUNT	drivers/SQLite/sqlite3/sqlite3.c	8087;"	d	file:
BTREE_INCR_VACUUM	drivers/SQLite/sqlite3/sqlite3.c	8094;"	d	file:
BTREE_INTKEY	drivers/SQLite/sqlite3/sqlite3.c	8065;"	d	file:
BTREE_LARGEST_ROOT_PAGE	drivers/SQLite/sqlite3/sqlite3.c	8091;"	d	file:
BTREE_MEMORY	drivers/SQLite/sqlite3/sqlite3.c	8018;"	d	file:
BTREE_NO_READLOCK	drivers/SQLite/sqlite3/sqlite3.c	8017;"	d	file:
BTREE_OMIT_JOURNAL	drivers/SQLite/sqlite3/sqlite3.c	8016;"	d	file:
BTREE_SCHEMA_VERSION	drivers/SQLite/sqlite3/sqlite3.c	8088;"	d	file:
BTREE_SINGLE	drivers/SQLite/sqlite3/sqlite3.c	8019;"	d	file:
BTREE_TEXT_ENCODING	drivers/SQLite/sqlite3/sqlite3.c	8092;"	d	file:
BTREE_UNORDERED	drivers/SQLite/sqlite3/sqlite3.c	8020;"	d	file:
BTREE_USER_VERSION	drivers/SQLite/sqlite3/sqlite3.c	8093;"	d	file:
BUFFERINCR	drivers/Firebird/ibpp/core/_dpb.cpp	/^const int DPB::BUFFERINCR = 128;$/;"	m	class:DPB	file:
BUFFERINCR	drivers/Firebird/ibpp/core/_ibpp.h	/^	static const int BUFFERINCR;$/;"	m	class:ibpp_internals::DPB
BUFFERINCR	drivers/Firebird/ibpp/core/_ibpp.h	/^	static const int BUFFERINCR;$/;"	m	class:ibpp_internals::SPB
BUFFERINCR	drivers/Firebird/ibpp/core/_ibpp.h	/^	static const int BUFFERINCR;$/;"	m	class:ibpp_internals::TPB
BUFFERINCR	drivers/Firebird/ibpp/core/_spb.cpp	/^const int SPB::BUFFERINCR = 128;$/;"	m	class:SPB	file:
BUFFERINCR	drivers/Firebird/ibpp/core/_tpb.cpp	/^const int TPB::BUFFERINCR = 128;$/;"	m	class:TPB	file:
BUFFSIZE	drivers/PostgreSQL/TePGInterface.cpp	48;"	d	file:
BUFFSIZE	drivers/PostgreSQL/TePostGIS.cpp	28;"	d	file:
BYTESWAP32	drivers/SQLite/sqlite3/sqlite3.c	44762;"	d	file:
Band2Band	kernel/TeRasterTransform.h	/^	void Band2Band(double icol, double ilin, double ocol, double olin)$/;"	f	class:TeRasterTransform
BenignMallocHooks	drivers/SQLite/sqlite3/sqlite3.c	/^static SQLITE_WSD struct BenignMallocHooks {$/;"	s	file:
BenignMallocHooks	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct BenignMallocHooks BenignMallocHooks;$/;"	t	typeref:struct:BenignMallocHooks	file:
Bfile	drivers/Oracle/OCI/include/occiData.h	/^class Bfile$/;"	c	namespace:oracle::occi
BicubicMethod	image_processing/TePDIIHSWaveletFusion.hpp	/^        BicubicMethod = 3      $/;"	e	enum:TePDIIHSWaveletFusion::InterpMethod
BicubicMethod	image_processing/TePDIInterpolator.hpp	/^        BicubicMethod = 3      $/;"	e	enum:TePDIInterpolator::InterpMethod
BicubicMethod	image_processing/TePDIPCAWaveletFusion.hpp	/^        BicubicMethod = 3      $/;"	e	enum:TePDIPCAWaveletFusion::InterpMethod
BicubicMethod	image_processing/TePDIWaveletAtrousFusion.hpp	/^        BicubicMethod = 3      $/;"	e	enum:TePDIWaveletAtrousFusion::InterpMethod
BicubicMethod	image_processing/TePDIWiSpeRFusion.hpp	/^        BicubicMethod = 3      $/;"	e	enum:TePDIWiSpeRFusion::InterpMethod
BilinearMethod	image_processing/TePDIIHSWaveletFusion.hpp	/^        BilinearMethod = 2,$/;"	e	enum:TePDIIHSWaveletFusion::InterpMethod
BilinearMethod	image_processing/TePDIInterpolator.hpp	/^        BilinearMethod = 2,$/;"	e	enum:TePDIInterpolator::InterpMethod
BilinearMethod	image_processing/TePDIPCAWaveletFusion.hpp	/^        BilinearMethod = 2,$/;"	e	enum:TePDIPCAWaveletFusion::InterpMethod
BilinearMethod	image_processing/TePDIWaveletAtrousFusion.hpp	/^        BilinearMethod = 2,$/;"	e	enum:TePDIWaveletAtrousFusion::InterpMethod
BilinearMethod	image_processing/TePDIWiSpeRFusion.hpp	/^        BilinearMethod = 2,$/;"	e	enum:TePDIWiSpeRFusion::InterpMethod
Bitmask	drivers/SQLite/sqlite3/sqlite3.c	/^typedef u64 Bitmask;$/;"	t	file:
Bitvec	drivers/SQLite/sqlite3/sqlite3.c	/^struct Bitvec {$/;"	s	file:
Bitvec	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Bitvec Bitvec;$/;"	t	typeref:struct:Bitvec	file:
BlendFunctPtr	image_processing/TePDIBlender.hpp	/^      typedef void (TePDIBlender::*BlendFunctPtr)( const double& line, $/;"	t	class:TePDIBlender
BlendMethod	image_processing/TePDIBlender.hpp	/^      enum BlendMethod {$/;"	g	class:TePDIBlender
Blob	drivers/Firebird/ibpp/core/ibpp.h	/^	class IBlob;			typedef Ptr<IBlob> Blob;$/;"	t	namespace:IBPP
Blob	drivers/Oracle/OCI/include/occiData.h	/^class Blob$/;"	c	namespace:oracle::occi
BlobFactory	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	Blob BlobFactory(Database db, Transaction tr)$/;"	f	namespace:IBPP
BlobImpl	drivers/Firebird/ibpp/core/_ibpp.h	/^class BlobImpl : public IBPP::IBlob$/;"	c	namespace:ibpp_internals
BlobImpl	drivers/Firebird/ibpp/core/blob.cpp	/^BlobImpl::BlobImpl(DatabaseImpl* database, TransactionImpl* transaction)$/;"	f	class:BlobImpl
BlobToLine	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::BlobToLine(TeLine2D& line)$/;"	f	class:TeAdoPortal
BlockFlushed	image_processing/TePDIParaSegSegmentsBlock.hpp	/^        BlockFlushed = 4$/;"	e	enum:TePDIParaSegSegmentsBlock::BlockStatus
BlockMerged	image_processing/TePDIParaSegSegmentsBlock.hpp	/^        BlockMerged = 3,$/;"	e	enum:TePDIParaSegSegmentsBlock::BlockStatus
BlockNotProcessed	image_processing/TePDIParaSegSegmentsBlock.hpp	/^        BlockNotProcessed = 0,$/;"	e	enum:TePDIParaSegSegmentsBlock::BlockStatus
BlockSegmented	image_processing/TePDIParaSegSegmentsBlock.hpp	/^        BlockSegmented = 2,$/;"	e	enum:TePDIParaSegSegmentsBlock::BlockStatus
BlockStatus	image_processing/TePDIParaSegSegmentsBlock.hpp	/^      enum BlockStatus$/;"	g	class:TePDIParaSegSegmentsBlock
BlockUnderSegmentation	image_processing/TePDIParaSegSegmentsBlock.hpp	/^        BlockUnderSegmentation = 1,        $/;"	e	enum:TePDIParaSegSegmentsBlock::BlockStatus
Bool	drivers/SQLite/sqlite3/sqlite3.c	/^typedef unsigned char Bool;$/;"	t	file:
BorderLength	kernel/TeNeighbours.h	/^		double	BorderLength() {return _borders_length;}$/;"	f	class:TeProxMatrixAttributes
BorderLength	kernel/TeNeighbours.h	/^		void BorderLength(double l) {_borders_length = l;}$/;"	f	class:TeProxMatrixAttributes
BoundingRectangle	image_processing/TePDIRegGrowSeg.hpp	/^   void BoundingRectangle( int& lmin, int& cmin, int& lmax, int& cmax )$/;"	f	class:TePDIRGSCell
Bounds	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::Bounds(int dim, int* low, int* high)$/;"	f	class:ArrayImpl
BtCursor	drivers/SQLite/sqlite3/sqlite3.c	/^struct BtCursor {$/;"	s	file:
BtCursor	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct BtCursor BtCursor;$/;"	t	typeref:struct:BtCursor	file:
BtLock	drivers/SQLite/sqlite3/sqlite3.c	/^struct BtLock {$/;"	s	file:
BtLock	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct BtLock BtLock;$/;"	t	typeref:struct:BtLock	file:
BtShared	drivers/SQLite/sqlite3/sqlite3.c	/^struct BtShared {$/;"	s	file:
BtShared	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct BtShared BtShared;$/;"	t	typeref:struct:BtShared	file:
Btree	drivers/SQLite/sqlite3/sqlite3.c	/^struct Btree {$/;"	s	file:
Btree	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Btree Btree;$/;"	t	typeref:struct:Btree	file:
Buffer	drivers/Firebird/ibpp/core/_ibpp.h	/^	typedef std::vector<char> Buffer;$/;"	t	class:ibpp_internals::EventsImpl
BuildHistograms	image_processing/TePDILevelRemap.cpp	/^void TePDILevelRemap::BuildHistograms($/;"	f	class:TePDILevelRemap
BuildNeighbors	functions/TeCellAlgorithms.cpp	/^vector<vector<cellDist> > BuildNeighbors(TeCellSet cells)$/;"	f
BuildSuperimposedLevel	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::BuildSuperimposedLevel( unsigned int level,$/;"	f	class:TePDIMallatWavelets
Build_Heap	stat/heap.cpp	/^void THeap::Build_Heap(){$/;"	f	class:THeap
BusyHandler	drivers/SQLite/sqlite3/sqlite3.c	/^struct BusyHandler {$/;"	s	file:
BusyHandler	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct BusyHandler BusyHandler;$/;"	t	typeref:struct:BusyHandler	file:
BusyOption	drivers/Oracle/OCI/include/occiControl.h	/^    enum BusyOption$/;"	g	class:oracle::occi::StatelessConnectionPool
ByteRangeLockPB2	drivers/SQLite/sqlite3/sqlite3.c	/^struct ByteRangeLockPB2$/;"	s	file:
Bytes	drivers/Oracle/OCI/include/occiData.h	/^class Bytes$/;"	c	namespace:oracle::occi
C	kernel/TeSparseMatrix.h	/^       ContainerType& C;$/;"	m	class:TeSparseMatrix::Aux
C	kernel/TeSparseMatrix.h	/^    ContainerType C;$/;"	m	class:TeSparseMatrix
C	kernel/TeSparseMatrix.h	/^    ContainerType& C;$/;"	m	class:MatrixElement
C	kernel/graph.h	/^		GraphType C;          \/\/ container$/;"	m	class:br_stl::Graph
CACHE_STALE	drivers/SQLite/sqlite3/sqlite3.c	12730;"	d	file:
CALLBACK	drivers/GL/glut.h	132;"	d
CANNOT_CLOSE_FILE	kernel/TeErrorLog.h	/^    CANNOT_CLOSE_FILE,$/;"	e	enum:TeErrorType
CANNOT_OPEN_FILE	kernel/TeErrorLog.h	/^	CANNOT_OPEN_FILE,$/;"	e	enum:TeErrorType
CANNOT_READ_FILE	kernel/TeErrorLog.h	/^    CANNOT_READ_FILE,$/;"	e	enum:TeErrorType
CANNOT_WRITE_FILE	kernel/TeErrorLog.h	/^    CANNOT_WRITE_FILE,$/;"	e	enum:TeErrorType
CAPI	drivers/GL/glcore.h	45;"	d
CAPI	drivers/GL/glcore.h	47;"	d
CAPI	drivers/GL/internal/glcore.h	45;"	d
CAPI	drivers/GL/internal/glcore.h	47;"	d
CBERS	image_processing/TePDIWiSpeRFusion.hpp	/^      enum TeSatellitesTypes {CBERS, CBERS2B, IKONOS, QUICKBIRD, SPOT4, SPOT5};$/;"	e	enum:TePDIWiSpeRFusion::TeSatellitesTypes
CBERS2B	image_processing/TePDIWiSpeRFusion.hpp	/^      enum TeSatellitesTypes {CBERS, CBERS2B, IKONOS, QUICKBIRD, SPOT4, SPOT5};$/;"	e	enum:TePDIWiSpeRFusion::TeSatellitesTypes
CC	image_processing/TePDIFusionIndexes.hpp	/^      enum TeFusionIndexes {CC, BIAS, VARDIF, SDD, UIQI, RMSE, ERGAS, SIMM, SERGAS, SCC};$/;"	e	enum:TePDIFusionIndexes::TeFusionIndexes
CDA_SIZE	drivers/Oracle/OCI/include/ocidfn.h	122;"	d
CDA_SIZE	drivers/Oracle/OCI/include/ocidfn.h	124;"	d
CENTROID_NOT_FOUND	kernel/TeErrorLog.h	/^    CENTROID_NOT_FOUND,$/;"	e	enum:TeErrorType
CHART	drivers/qt/TeQtCheckListItem.h	/^	enum ItemType {DATABASE, INFOLAYER, VIEW, THEME, LEGENDTITLE, LEGEND, CHARTTITLE, CHART};$/;"	e	enum:TeQtCheckListItem::ItemType
CHARTTITLE	drivers/qt/TeQtCheckListItem.h	/^	enum ItemType {DATABASE, INFOLAYER, VIEW, THEME, LEGENDTITLE, LEGEND, CHARTTITLE, CHART};$/;"	e	enum:TeQtCheckListItem::ItemType
CHECKVEC_H	kernel/checkvec.h	26;"	d
CHECK_BYTE_ORDER	drivers/GL/xmesa_x.h	82;"	d
CHECK_BYTE_ORDER	drivers/GL/xmesa_xf86.h	162;"	d
CHECK_FOR_HPCR	drivers/GL/xmesa_x.h	83;"	d
CHECK_FOR_HPCR	drivers/GL/xmesa_xf86.h	163;"	d
CHECK_FOR_INTERRUPT	drivers/SQLite/sqlite3/sqlite3.c	63465;"	d	file:
CHECK_PAGE	drivers/SQLite/sqlite3/sqlite3.c	38487;"	d	file:
CHECK_PAGE	drivers/SQLite/sqlite3/sqlite3.c	38498;"	d	file:
CHRONON	kernel/yyTemporal.cpp	90;"	d	file:
CHRONON	kernel/yyTemporal.h	29;"	d
CHUNKSIZE	drivers/ado/TeAdoDB.cpp	33;"	d	file:
CHUNKSIZE	drivers/ado/TeAdoFireBird.cpp	34;"	d	file:
CHUNKSIZE	drivers/ado/TeAdoOracle.cpp	33;"	d	file:
CHUNKSIZE	drivers/ado/TeAdoSqlServer.cpp	32;"	d	file:
CHUNKSIZE	drivers/ado/TeAdoSqlServerSpatial.cpp	33;"	d	file:
CLEARBIT	drivers/SQLite/sqlite3/sqlite3.c	35094;"	d	file:
CLEAR_PCTX	drivers/Oracle/OCI/include/cdemodp0.h	51;"	d
CL_END	drivers/Oracle/OCI/include/occiControl.h	/^          ,CL_END = OCI_CL_END$/;"	e	enum:oracle::occi::MetaData::__anon89
CL_START	drivers/Oracle/OCI/include/occiControl.h	/^          ,CL_START = OCI_CL_START$/;"	e	enum:oracle::occi::MetaData::__anon89
CODEC1	drivers/SQLite/sqlite3/sqlite3.c	37736;"	d	file:
CODEC1	drivers/SQLite/sqlite3/sqlite3.c	37742;"	d	file:
CODEC2	drivers/SQLite/sqlite3/sqlite3.c	37738;"	d	file:
CODEC2	drivers/SQLite/sqlite3/sqlite3.c	37743;"	d	file:
COLL_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        COLL_ATTR_COUNT = 12,$/;"	e	enum:oracle::occi::MetaData::AttrCount
COLNAME_COLUMN	drivers/SQLite/sqlite3/sqlite3.c	8343;"	d	file:
COLNAME_DATABASE	drivers/SQLite/sqlite3/sqlite3.c	8341;"	d	file:
COLNAME_DECLTYPE	drivers/SQLite/sqlite3/sqlite3.c	8340;"	d	file:
COLNAME_N	drivers/SQLite/sqlite3/sqlite3.c	8345;"	d	file:
COLNAME_N	drivers/SQLite/sqlite3/sqlite3.c	8348;"	d	file:
COLNAME_N	drivers/SQLite/sqlite3/sqlite3.c	8350;"	d	file:
COLNAME_NAME	drivers/SQLite/sqlite3/sqlite3.c	8339;"	d	file:
COLNAME_TABLE	drivers/SQLite/sqlite3/sqlite3.c	8342;"	d	file:
COLORREF	drivers/GL/glut.h	/^typedef unsigned long COLORREF;$/;"	t
COLUMN_MASK	drivers/SQLite/sqlite3/sqlite3.c	86832;"	d	file:
COL_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        COL_ATTR_COUNT = 13,$/;"	e	enum:oracle::occi::MetaData::AttrCount
COMMON_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^  enum AttrCount {COMMON_ATTR_COUNT = 5,$/;"	e	enum:oracle::occi::MetaData::AttrCount
CONST	drivers/Oracle/OCI/include/oratypes.h	258;"	d
CONST	drivers/Oracle/OCI/include/oratypes.h	259;"	d
CONTOURFIRSTVERTEX	kernel/TeTin.h	/^  CONTOURFIRSTVERTEX = 4, CONTOURLASTVERTEX = 5, BREAKLINEFIRSTVERTEX = 6, BREAKLINELASTVERTEX = 7};$/;"	e	enum:TeTinVertexType
CONTOURLASTVERTEX	kernel/TeTin.h	/^  CONTOURFIRSTVERTEX = 4, CONTOURLASTVERTEX = 5, BREAKLINEFIRSTVERTEX = 6, BREAKLINELASTVERTEX = 7};$/;"	e	enum:TeTinVertexType
CONVERT_CONTINUE	drivers/Oracle/OCI/include/cdemodp0.h	82;"	d
CONVERT_ERROR	drivers/Oracle/OCI/include/cdemodp0.h	80;"	d
CONVERT_NEED_DATA	drivers/Oracle/OCI/include/cdemodp0.h	81;"	d
CONVERT_SUCCESS	drivers/Oracle/OCI/include/cdemodp0.h	79;"	d
COORDS_DELIM	drivers/PostgreSQL/TePGUtils.h	35;"	d
COORD_DELIM	drivers/PostgreSQL/TePGUtils.h	37;"	d
CPUcost	drivers/Oracle/OCI/include/odci.h	/^   OCIInd CPUcost;$/;"	m	struct:ODCICost_ind
CPUcost	drivers/Oracle/OCI/include/odci.h	/^   OCINumber  CPUcost;$/;"	m	struct:ODCICost
CREATENEWSCREENFUNC	drivers/GL/dri_interface.h	/^typedef void *(CREATENEWSCREENFUNC)(__DRInativeDisplay *dpy, int scrn,$/;"	t
CREATENEWSCREENFUNC	drivers/GL/internal/dri_interface.h	/^typedef void *(CREATENEWSCREENFUNC)(__DRInativeDisplay *dpy, int scrn,$/;"	t
CRSCHK	drivers/Oracle/OCI/include/ocidef.h	313;"	d
CSRCHECK	drivers/Oracle/OCI/include/ocidef.h	80;"	d
CSRFATAL	drivers/Oracle/OCI/include/ocidef.h	150;"	d
CSRFBROW	drivers/Oracle/OCI/include/ocidef.h	151;"	d
CSRFNOAR	drivers/Oracle/OCI/include/ocidef.h	153;"	d
CSRFREFC	drivers/Oracle/OCI/include/ocidef.h	152;"	d
CSRFSPND	drivers/Oracle/OCI/include/ocidef.h	149;"	d
CSRWANY	drivers/Oracle/OCI/include/ocidef.h	139;"	d
CSRWITCE	drivers/Oracle/OCI/include/ocidef.h	142;"	d
CSRWNVIC	drivers/Oracle/OCI/include/ocidef.h	141;"	d
CSRWRCHG	drivers/Oracle/OCI/include/ocidef.h	146;"	d
CSRWROLL	drivers/Oracle/OCI/include/ocidef.h	145;"	d
CSRWRSV0	drivers/Oracle/OCI/include/ocidef.h	144;"	d
CSRWTRUN	drivers/Oracle/OCI/include/ocidef.h	140;"	d
CSRWUDNW	drivers/Oracle/OCI/include/ocidef.h	143;"	d
CTE_	drivers/qt/TeQtGrid.h	/^	string					CTE_;$/;"	m	class:TeQtGrid
CTIMEOPT_VAL	drivers/SQLite/sqlite3/sqlite3.c	12210;"	d	file:
CTIMEOPT_VAL_	drivers/SQLite/sqlite3/sqlite3.c	12209;"	d	file:
CTRL_FREE	drivers/SQLite/sqlite3/sqlite3.c	16349;"	d	file:
CTRL_LOGSIZE	drivers/SQLite/sqlite3/sqlite3.c	16348;"	d	file:
CT_	drivers/qt/TeQtGrid.h	/^	string					CT_;$/;"	m	class:TeQtGrid
CURSOR_CLOSED	drivers/Oracle/OCI/include/occiControl.h	/^          ,CURSOR_CLOSED = OCI_CURSOR_CLOSED$/;"	e	enum:oracle::occi::MetaData::__anon89
CURSOR_FAULT	drivers/SQLite/sqlite3/sqlite3.c	47697;"	d	file:
CURSOR_INVALID	drivers/SQLite/sqlite3/sqlite3.c	47694;"	d	file:
CURSOR_OPEN	drivers/Oracle/OCI/include/occiControl.h	/^          ,CURSOR_OPEN = OCI_CURSOR_OPEN$/;"	e	enum:oracle::occi::MetaData::__anon89
CURSOR_REQUIRESEEK	drivers/SQLite/sqlite3/sqlite3.c	47696;"	d	file:
CURSOR_VALID	drivers/SQLite/sqlite3/sqlite3.c	47695;"	d	file:
CURVES_LIMIT	kernel/TeGraph.cpp	64;"	d	file:
CURVES_MAX	kernel/TeGraph.h	31;"	d
CUSTOM_NEWED	drivers/Oracle/OCI/include/occiObjects.h	/^        enum {CUSTOM_NEWED = 0x5cde};$/;"	e	enum:oracle::occi::PObject::__anon82
CVT1	kernel/TeDecoderTIFF.cpp	/^static unsigned short CVT1 (unsigned long x,long value)	\/\/CVT is used in DEC station$/;"	f	file:
CYCLIC	kernel/TeAttribute.h	/^{ ORDINAL, NOMINAL, RATIO, INTERVAL, CYCLIC, PROBABILITY, FUZZY };$/;"	e	enum:TeMeasurementScale
CalcCCorrelationMtxParams	image_processing/TePDIMMIOMatching.hpp	/^          CalcCCorrelationMtxParams()$/;"	f	class:TePDIMMIOMatching::CalcCCorrelationMtxParams
CalcCCorrelationMtxParams	image_processing/TePDIMMIOMatching.hpp	/^      class CalcCCorrelationMtxParams$/;"	c	class:TePDIMMIOMatching
CalculateDistance	functions/TeCellAlgorithms.cpp	/^bool CalculateDistance(unsigned int line, unsigned int column, TeBox box, TeTheme* theme, double r, TeGeomRep rep, vector<vector<cellDist> >& Neighbors, list<procDist>& procList)$/;"	f
Call	drivers/Firebird/ibpp/core/_ibpp.cpp	/^GDS* GDS::Call()$/;"	f	class:GDS
CallProperty	drivers/Oracle/OCI/include/odci.h	/^   OCIInd CallProperty;$/;"	m	struct:ODCIEnv_ind
CallProperty	drivers/Oracle/OCI/include/odci.h	/^   OCINumber CallProperty;$/;"	m	struct:ODCIEnv
Cancel	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::Cancel()$/;"	f	class:BlobImpl
Cancel	drivers/Firebird/ibpp/core/events.cpp	/^void EventsImpl::Cancel()$/;"	f	class:EventsImpl
Cardinality	drivers/Oracle/OCI/include/odci.h	/^   OCIInd Cardinality;$/;"	m	struct:ODCIArgDesc_ind
Cardinality	drivers/Oracle/OCI/include/odci.h	/^   OCINumber  Cardinality;$/;"	m	struct:ODCIArgDesc
Cc_	image_processing/TePDIRegGrowSeg.hpp	/^        CloserCells     *Cc_;$/;"	m	class:TePDIRGSCell
Cda_Def	drivers/Oracle/OCI/include/ocidfn.h	/^typedef struct cda_def Cda_Def;$/;"	t	typeref:struct:cda_def
CellInfo	drivers/SQLite/sqlite3/sqlite3.c	/^struct CellInfo {$/;"	s	file:
CellInfo	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct CellInfo CellInfo;$/;"	t	typeref:struct:CellInfo	file:
CellStack	image_processing/TePDIRegGrowSeg.hpp	/^class PDI_DLL CellStack : public vector< TePDIRGSCell* >$/;"	c
Centro_X	stat/filaR.h	/^      double Centro_X,Centro_Y; \/\/ Centroide do grupamento$/;"	m	struct:TFilaR::Item
Centro_Y	stat/filaR.h	/^      double Centro_X,Centro_Y; \/\/ Centroide do grupamento$/;"	m	struct:TFilaR::Item
CentroidDistance	kernel/TeNeighbours.h	/^		double	CentroidDistance() {return _centroid_distance;}$/;"	f	class:TeProxMatrixAttributes
CentroidDistance	kernel/TeNeighbours.h	/^		void CentroidDistance(double d) {_centroid_distance = d;}$/;"	f	class:TeProxMatrixAttributes
ChangeLL	kernel/TeProjection.cpp	/^TeProjection :: ChangeLL (double &lon1, double &lat1)		$/;"	f	class:TeProjection
ChangeSubBand	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::ChangeSubBand( $/;"	f	class:TePDIMallatWavelets
CharSet	drivers/Firebird/ibpp/core/_ibpp.h	/^	const char* CharSet() const			{ return mCharSet.c_str(); }$/;"	f	class:ibpp_internals::DatabaseImpl
CharSetForm	drivers/Oracle/OCI/include/occiCommon.h	/^enum CharSetForm$/;"	g	namespace:oracle::occi
Chave	stat/heap.h	/^        double Chave;$/;"	m	struct:THeap::TipoHeap
CheckConvergence	stat/TeKMeansGrouping.h	/^CheckConvergence(T& toUpdate, T& newCentroides, double limiar )$/;"	f
CheckInternalParameters	image_processing/TePDIAlgorithm.cpp	/^bool TePDIAlgorithm::CheckInternalParameters() const$/;"	f	class:TePDIAlgorithm
CheckParameter	image_processing/TePDIParameters.hpp	/^      bool CheckParameter( const std::string& pname ) const$/;"	f	class:TePDIParameters
CheckParameters	image_processing/TePDIArithmetic.cpp	/^bool TePDIArithmetic::CheckParameters( $/;"	f	class:TePDIArithmetic
CheckParameters	image_processing/TePDIBDFilter.cpp	/^bool TePDIBDFilter::CheckParameters( $/;"	f	class:TePDIBDFilter
CheckParameters	image_processing/TePDIBaatz.cpp	/^bool TePDIBaatz::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDIBaatz
CheckParameters	image_processing/TePDIBatchGeoMosaic.cpp	/^bool TePDIBatchGeoMosaic::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDIBatchGeoMosaic
CheckParameters	image_processing/TePDIColorTransform.cpp	/^bool TePDIColorTransform::CheckParameters( $/;"	f	class:TePDIColorTransform
CheckParameters	image_processing/TePDIContrast.cpp	/^bool TePDIContrast::CheckParameters( $/;"	f	class:TePDIContrast
CheckParameters	image_processing/TePDICorrelationMatching.cpp	/^bool TePDICorrelationMatching::CheckParameters( $/;"	f	class:TePDICorrelationMatching
CheckParameters	image_processing/TePDIDecorrelationEnhancement.cpp	/^bool TePDIDecorrelationEnhancement::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIDecorrelationEnhancement
CheckParameters	image_processing/TePDIEMClas.cpp	/^bool TePDIEMClas::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIEMClas
CheckParameters	image_processing/TePDIFFT.cpp	/^bool TePDIFFT::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDIFFT
CheckParameters	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIFusionIndexes
CheckParameters	image_processing/TePDIGarguetFusion.cpp	/^bool TePDIGarguetFusion::CheckParameters( const TePDIParameters& parameters ) $/;"	f	class:TePDIGarguetFusion
CheckParameters	image_processing/TePDIGeneralizedIHSFusion.cpp	/^bool TePDIGeneralizedIHSFusion::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIGeneralizedIHSFusion
CheckParameters	image_processing/TePDIGeoMosaic.cpp	/^bool TePDIGeoMosaic::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDIGeoMosaic
CheckParameters	image_processing/TePDIHants.cpp	/^bool TePDIHants::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDIHants
CheckParameters	image_processing/TePDIHaralick.cpp	/^bool TePDIHaralick::CheckParameters( $/;"	f	class:TePDIHaralick
CheckParameters	image_processing/TePDIIHSFusion.cpp	/^bool TePDIIHSFusion::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDIIHSFusion
CheckParameters	image_processing/TePDIIHSWaveletFusion.cpp	/^bool TePDIIHSWaveletFusion::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIIHSWaveletFusion
CheckParameters	image_processing/TePDIIsosegClas.cpp	/^bool TePDIIsosegClas::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIIsosegClas
CheckParameters	image_processing/TePDIKMeansClas.cpp	/^bool TePDIKMeansClas::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIKMeansClas
CheckParameters	image_processing/TePDILinearFilter.cpp	/^bool TePDILinearFilter::CheckParameters( $/;"	f	class:TePDILinearFilter
CheckParameters	image_processing/TePDIMIMatching.cpp	/^bool TePDIMIMatching::CheckParameters( $/;"	f	class:TePDIMIMatching
CheckParameters	image_processing/TePDIMMIOMatching.cpp	/^bool TePDIMMIOMatching::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDIMMIOMatching
CheckParameters	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::CheckParameters( $/;"	f	class:TePDIMallatWavelets
CheckParameters	image_processing/TePDIMixModel.cpp	/^bool TePDIMixModel::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIMixModel
CheckParameters	image_processing/TePDIMorfFilter.cpp	/^bool TePDIMorfFilter::CheckParameters( $/;"	f	class:TePDIMorfFilter
CheckParameters	image_processing/TePDIOFMatching.cpp	/^bool TePDIOFMatching::CheckParameters( $/;"	f	class:TePDIOFMatching
CheckParameters	image_processing/TePDIPCAWaveletFusion.cpp	/^bool TePDIPCAWaveletFusion::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIPCAWaveletFusion
CheckParameters	image_processing/TePDIParallelSegmenter.cpp	/^bool TePDIParallelSegmenter::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDIParallelSegmenter
CheckParameters	image_processing/TePDIPrincipalComponents.cpp	/^bool TePDIPrincipalComponents::CheckParameters($/;"	f	class:TePDIPrincipalComponents
CheckParameters	image_processing/TePDIPrincipalComponentsFusion.cpp	/^bool TePDIPrincipalComponentsFusion::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIPrincipalComponentsFusion
CheckParameters	image_processing/TePDIPrincoMixModelStrategy.cpp	/^bool TePDIPrincoMixModelStrategy::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIPrincoMixModelStrategy
CheckParameters	image_processing/TePDIRadarFrostFilter.cpp	/^bool TePDIRadarFrostFilter::CheckParameters( $/;"	f	class:TePDIRadarFrostFilter
CheckParameters	image_processing/TePDIRadarGammaFilter.cpp	/^bool TePDIRadarGammaFilter::CheckParameters( $/;"	f	class:TePDIRadarGammaFilter
CheckParameters	image_processing/TePDIRadarKuanFilter.cpp	/^bool TePDIRadarKuanFilter::CheckParameters( $/;"	f	class:TePDIRadarKuanFilter
CheckParameters	image_processing/TePDIRadarLeeFilter.cpp	/^bool TePDIRadarLeeFilter::CheckParameters( const $/;"	f	class:TePDIRadarLeeFilter
CheckParameters	image_processing/TePDIRaster2Vector.cpp	/^TePDIRaster2Vector :: CheckParameters( $/;"	f	class:TePDIRaster2Vector
CheckParameters	image_processing/TePDIRegGrowSeg.cpp	/^bool TePDIRegGrowSeg::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDIRegGrowSeg
CheckParameters	image_processing/TePDIRegister.cpp	/^bool TePDIRegister::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDIRegister
CheckParameters	image_processing/TePDISAMClassifier.cpp	/^bool TePDISAMClassifier::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDISAMClassifier
CheckParameters	image_processing/TePDISensorSimulator.cpp	/^bool TePDISensorSimulator::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDISensorSimulator
CheckParameters	image_processing/TePDISimplex.cpp	/^bool TePDISimplex::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDISimplex
CheckParameters	image_processing/TePDIStatistic.cpp	/^bool TePDIStatistic::CheckParameters( $/;"	f	class:TePDIStatistic
CheckParameters	image_processing/TePDITPMosaic.cpp	/^bool TePDITPMosaic::CheckParameters( const TePDIParameters& parameters ) const$/;"	f	class:TePDITPMosaic
CheckParameters	image_processing/TePDIVenturaFusion.cpp	/^bool TePDIVenturaFusion::CheckParameters( const TePDIParameters& parameters ) $/;"	f	class:TePDIVenturaFusion
CheckParameters	image_processing/TePDIWaveletAtrous.cpp	/^bool TePDIWaveletAtrous::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIWaveletAtrous
CheckParameters	image_processing/TePDIWaveletAtrousFusion.cpp	/^bool TePDIWaveletAtrousFusion::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIWaveletAtrousFusion
CheckParameters	image_processing/TePDIWiSpeRFusion.cpp	/^bool TePDIWiSpeRFusion::CheckParameters(const TePDIParameters& parameters) const$/;"	f	class:TePDIWiSpeRFusion
CheckVersion	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	bool CheckVersion(uint32_t AppVersion)$/;"	f	namespace:IBPP
CholeskyDecomp	kernel/TeMatrix.cpp	/^TeMatrix::CholeskyDecomp( TeMatrix& mt )$/;"	f	class:TeMatrix
CholeskyInv	kernel/TeMatrix.cpp	/^TeMatrix::CholeskyInv (TeMatrix&	mt) const$/;"	f	class:TeMatrix
ChooseLeaf	drivers/SQLite/sqlite3/sqlite3.c	/^static int ChooseLeaf($/;"	f	file:
ClassReferenceData	image_processing/TePDISAMClassifier.cpp	/^TePDISAMClassifier::ClassReferenceData::ClassReferenceData()$/;"	f	class:TePDISAMClassifier::ClassReferenceData
ClassReferenceData	image_processing/TePDISAMClassifier.hpp	/^      class PDI_DLL ClassReferenceData$/;"	c	class:TePDISAMClassifier
ClassSpectralSamples	image_processing/TePDISAMClassifier.cpp	/^TePDISAMClassifier::ClassSpectralSamples::ClassSpectralSamples()$/;"	f	class:TePDISAMClassifier::ClassSpectralSamples
ClassSpectralSamples	image_processing/TePDISAMClassifier.hpp	/^      class PDI_DLL ClassSpectralSamples$/;"	c	class:TePDISAMClassifier
Cleanup	drivers/SQLite/sqlite3/sqlite3.c	/^static void Cleanup(Vdbe *p){$/;"	f	file:
Clear	drivers/Firebird/ibpp/core/dbkey.cpp	/^void IBPP::DBKey::Clear()$/;"	f	class:IBPP::DBKey
Clear	drivers/Firebird/ibpp/core/events.cpp	/^void EventsImpl::Clear()$/;"	f	class:EventsImpl
Clear	drivers/Firebird/ibpp/core/ibpp.h	/^		void Clear()	{ Date::Clear(); Time::Clear(); }$/;"	f	class:IBPP::Timestamp
Clear	drivers/Firebird/ibpp/core/ibpp.h	/^		void Clear()	{ mDate = MinDate - 1; };$/;"	f	class:IBPP::Date
Clear	drivers/Firebird/ibpp/core/ibpp.h	/^		void Clear()	{ mTime = 0; }$/;"	f	class:IBPP::Time
Clear	image_processing/TePDIParameters.cpp	/^void TePDIParameters::Clear()$/;"	f	class:TePDIParameters
Clear	image_processing/TePDIRegGrowSeg.hpp	/^        void Clear ()$/;"	f	class:CellStack
Clear	kernel/TeMatrix.cpp	/^TeMatrix::Clear()$/;"	f	class:TeMatrix
Clear	kernel/TeRedBlackTree.h	/^			void Clear(void)$/;"	f	class:TeREDBLACK::TeRBTree
ClientLibSearchPaths	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	void ClientLibSearchPaths(const std::string& paths)$/;"	f	namespace:IBPP
ClientLibSearchPaths	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	void ClientLibSearchPaths(const std::string&)$/;"	f	namespace:IBPP
Clob	drivers/Oracle/OCI/include/occiData.h	/^class Clob$/;"	c	namespace:oracle::occi
Clone	drivers/Firebird/ibpp/core/row.cpp	/^IBPP::IRow* RowImpl::Clone()$/;"	f	class:RowImpl
Close	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::Close()$/;"	f	class:BlobImpl
Close	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Close()$/;"	f	class:StatementImpl
Close_OCIXADMethodEntry	drivers/Oracle/OCI/include/ocixad.h	/^  OCIXADMethodClose         Close_OCIXADMethodEntry;$/;"	m	struct:OCIXADMethodEntry
CloserCells	image_processing/TePDIRegGrowSeg.hpp	/^        CloserCells()$/;"	f	class:CloserCells
CloserCells	image_processing/TePDIRegGrowSeg.hpp	/^class PDI_DLL CloserCells$/;"	c
ClosestNeighbor	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRGSCell :: ClosestNeighbor( float& dist )$/;"	f	class:TePDIRGSCell
Clusters	stat/TeSkaterFunctions.h	/^  TFilaR *Clusters;$/;"	m	class:TParticao
CmpSerializedX	kernel/TeCoverageImport.h	/^struct CmpSerializedX {$/;"	s
CmpSerializedY	kernel/TeCoverageImport.h	/^struct CmpSerializedY {$/;"	s
CoFactor	kernel/TeMatrix.cpp	/^TeMatrix::CoFactor(int irow, int jcol, TeMatrix& mt ) const$/;"	f	class:TeMatrix
ColInfo	drivers/Oracle/OCI/include/odci.h	/^   struct ODCIColInfo ColInfo;$/;"	m	struct:ODCIFuncCallInfo	typeref:struct:ODCIFuncCallInfo::ODCIColInfo
ColInfo	drivers/Oracle/OCI/include/odci.h	/^  struct ODCIColInfo_ind ColInfo;$/;"	m	struct:ODCIFuncCallInfo_ind	typeref:struct:ODCIFuncCallInfo_ind::ODCIColInfo_ind
ColMax_	image_processing/TePDIRegGrowSeg.hpp	/^        int             ColMax_;$/;"	m	class:TePDIRGSCell
ColMin_	image_processing/TePDIRegGrowSeg.hpp	/^        int             ColMin_;$/;"	m	class:TePDIRGSCell
ColName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd ColName;$/;"	m	struct:ODCIArgDesc_ind
ColName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd ColName;$/;"	m	struct:ODCIColInfo_ind
ColName	drivers/Oracle/OCI/include/odci.h	/^   OCIString* ColName;$/;"	m	struct:ODCIArgDesc
ColName	drivers/Oracle/OCI/include/odci.h	/^   OCIString* ColName;$/;"	m	struct:ODCIColInfo
ColTypName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd ColTypName;$/;"	m	struct:ODCIColInfo_ind
ColTypName	drivers/Oracle/OCI/include/odci.h	/^   OCIString* ColTypName;$/;"	m	struct:ODCIColInfo
ColTypSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIInd ColTypSchema;$/;"	m	struct:ODCIColInfo_ind
ColTypSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIString* ColTypSchema;$/;"	m	struct:ODCIColInfo
CollSeq	drivers/SQLite/sqlite3/sqlite3.c	/^struct CollSeq {$/;"	s	file:
CollSeq	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct CollSeq CollSeq;$/;"	t	typeref:struct:CollSeq	file:
ColorBar	utils/TeColorUtils.h	/^struct TLUTILS_DLL ColorBar {$/;"	s
ColorModel	drivers/MrSID/TeMrSID.h	/^	} ColorModel;$/;"	t	class:TeMrSIDReader	typeref:enum:TeMrSIDReader::__anon75
ColorModelGray	drivers/MrSID/TeMrSID.h	/^		ColorModelGray,     \/\/!< gray scale, composed by one 8 bit channel $/;"	e	enum:TeMrSIDReader::__anon75
ColorModelMap	drivers/MrSID/TeMrSID.h	/^		ColorModelMap,      \/\/!< indexed , composed by one 8 bit channel and a palette$/;"	e	enum:TeMrSIDReader::__anon75
ColorModelRGB	drivers/MrSID/TeMrSID.h	/^		ColorModelRGB,      \/\/!< composed by three 8 bit channels$/;"	e	enum:TeMrSIDReader::__anon75
ColorModelRGBA	drivers/MrSID/TeMrSID.h	/^		ColorModelRGBA      \/\/!< composed by four 8 bit channels$/;"	e	enum:TeMrSIDReader::__anon75
ColorModelUnknown	drivers/MrSID/TeMrSID.h	/^		ColorModelUnknown,  \/\/!< unknown color model$/;"	e	enum:TeMrSIDReader::__anon75
ColorTransfTypes	image_processing/TePDIColorTransform.hpp	/^      enum ColorTransfTypes {$/;"	g	class:TePDIColorTransform
Column	drivers/SQLite/sqlite3/sqlite3.c	/^struct Column {$/;"	s	file:
Column	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Column Column;$/;"	t	typeref:struct:Column	file:
ColumnAlias	drivers/Firebird/ibpp/core/row.cpp	/^const char* RowImpl::ColumnAlias(int varnum)$/;"	f	class:RowImpl
ColumnAlias	drivers/Firebird/ibpp/core/statement.cpp	/^const char* StatementImpl::ColumnAlias(int varnum)$/;"	f	class:StatementImpl
ColumnName	drivers/Firebird/ibpp/core/row.cpp	/^const char* RowImpl::ColumnName(int varnum)$/;"	f	class:RowImpl
ColumnName	drivers/Firebird/ibpp/core/statement.cpp	/^const char* StatementImpl::ColumnName(int varnum)$/;"	f	class:StatementImpl
ColumnNum	drivers/Firebird/ibpp/core/row.cpp	/^int RowImpl::ColumnNum(const std::string& name)$/;"	f	class:RowImpl
ColumnNum	drivers/Firebird/ibpp/core/statement.cpp	/^int StatementImpl::ColumnNum(const std::string& name)$/;"	f	class:StatementImpl
ColumnScale	drivers/Firebird/ibpp/core/row.cpp	/^int RowImpl::ColumnScale(int varnum)$/;"	f	class:RowImpl
ColumnScale	drivers/Firebird/ibpp/core/statement.cpp	/^int StatementImpl::ColumnScale(int varnum)$/;"	f	class:StatementImpl
ColumnSize	drivers/Firebird/ibpp/core/row.cpp	/^int RowImpl::ColumnSize(int varnum)$/;"	f	class:RowImpl
ColumnSize	drivers/Firebird/ibpp/core/statement.cpp	/^int StatementImpl::ColumnSize(int varnum)$/;"	f	class:StatementImpl
ColumnSubtype	drivers/Firebird/ibpp/core/row.cpp	/^int RowImpl::ColumnSubtype(int varnum)$/;"	f	class:RowImpl
ColumnSubtype	drivers/Firebird/ibpp/core/statement.cpp	/^int StatementImpl::ColumnSubtype(int varnum)$/;"	f	class:StatementImpl
ColumnTable	drivers/Firebird/ibpp/core/row.cpp	/^const char* RowImpl::ColumnTable(int varnum)$/;"	f	class:RowImpl
ColumnTable	drivers/Firebird/ibpp/core/statement.cpp	/^const char* StatementImpl::ColumnTable(int varnum)$/;"	f	class:StatementImpl
ColumnType	drivers/Firebird/ibpp/core/row.cpp	/^IBPP::SDT RowImpl::ColumnType(int varnum)$/;"	f	class:RowImpl
ColumnType	drivers/Firebird/ibpp/core/statement.cpp	/^IBPP::SDT StatementImpl::ColumnType(int varnum)$/;"	f	class:StatementImpl
ColumnUpdated	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::ColumnUpdated(int varnum)$/;"	f	class:RowImpl
Columns	drivers/Firebird/ibpp/core/row.cpp	/^int RowImpl::Columns()$/;"	f	class:RowImpl
Columns	drivers/Firebird/ibpp/core/statement.cpp	/^int StatementImpl::Columns()$/;"	f	class:StatementImpl
Columns	kernel/TeSparseMatrix.h	/^   size_type Columns() const { return columns;}$/;"	f	class:TeSparseMatrix
ComPtrT	kernel/TeCommunicator.h	/^      typedef TeCommunicator< DataType >* ComPtrT;$/;"	t	class:TeCommunicator
Commit	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::Commit()$/;"	f	class:TransactionImpl
CommitRetain	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::CommitRetain()$/;"	f	class:TransactionImpl
CompressToBuffer	drivers/libjpeg/TeLibJpegWrapper.cpp	/^	bool CompressToBuffer(unsigned char* srcBuffer, int width, int height, int bpp, unsigned char* dstBuffer, int& len, int quality)$/;"	f	namespace:Jpeg
CompressToFile	drivers/libjpeg/TeLibJpegWrapper.cpp	/^	bool CompressToFile(unsigned char* buffer, int width, int height, int bpp, const string& fileName, int quality=75)$/;"	f	namespace:Jpeg
ComputeAttrIsDummy	kernel/TeComputeAttributeStrategies.h	/^		bool ComputeAttrIsDummy(double value, double dummy)$/;"	f	class:TeComputeAttrStrategy
ComputeWeigths	kernel/TeProxMatrixStrategies.cpp	/^ComputeWeigths (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixConnectionStrenghtStrategy
ComputeWeigths	kernel/TeProxMatrixStrategies.cpp	/^ComputeWeigths (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixInverseDistanceStrategy
ComputeWeigths	kernel/TeProxMatrixStrategies.cpp	/^ComputeWeigths (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixNoWeightsStrategy
ComputeWeigths	kernel/TeProxMatrixStrategies.cpp	/^ComputeWeigths (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixSquaredInverseDistanceStrategy
Connect	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::Connect()$/;"	f	class:DatabaseImpl
Connect	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::Connect()$/;"	f	class:ServiceImpl
ConnectMe	kernel/TeCommunicator.h	/^  void TeCommunicator< DataType >::ConnectMe( $/;"	f	class:TeCommunicator
Connected	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool Connected() { return mHandle == 0 ? false : true; }$/;"	f	class:ibpp_internals::DatabaseImpl
Connected	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool Connected() { return mHandle == 0 ? false : true; }$/;"	f	class:ibpp_internals::ServiceImpl
Connection	drivers/Oracle/OCI/include/occiControl.h	/^class Connection$/;"	c	namespace:oracle::occi
ConnectionPool	drivers/Oracle/OCI/include/occiControl.h	/^class ConnectionPool$/;"	c	namespace:oracle::occi
ConstPtr	drivers/Oracle/OCI/include/occiCommon.h	/^class ConstPtr$/;"	c	namespace:oracle::occi
Construct	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixChooseOneTopologyStrategy::Construct (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixChooseOneTopologyStrategy
Construct	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixClosedNetworkStrategy::Construct (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixClosedNetworkStrategy
Construct	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixKeepInBothTopologyStrategy::Construct (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixKeepInBothTopologyStrategy
Construct	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixLocalAdjacencyStrategy::Construct (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixLocalAdjacencyStrategy
Construct	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixLocalTopologyStrategy::Construct (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixLocalTopologyStrategy
Construct	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixNearestNeighbourStrategy::Construct (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixNearestNeighbourStrategy
Construct	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixOpenNetworkStrategy2:: Construct (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixOpenNetworkStrategy2
Construct	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixOpenNetworkStrategy::Construct (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixOpenNetworkStrategy
Construct	kernel/TeProxMatrixConstructionStrategy.h	/^TeProxMatrixLocalDistanceStrategy<Set>::Construct(TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixLocalDistanceStrategy
Consumer	drivers/Oracle/OCI/include/occiAQ.h	/^class Consumer$/;"	c	namespace:oracle::occi::aq
ContItT	kernel/TeCommunicator.h	/^      typedef typename ContainerT::iterator ContItT;      $/;"	t	class:TeCommunicator
ContainerT	kernel/TeCommunicator.h	/^      typedef std::list< ComPtrT > ContainerT;$/;"	t	class:TeCommunicator
ContainerType	kernel/TeSparseMatrix.h	/^                  PairHashFun<IndexType> > ContainerType;$/;"	t	class:TeSparseMatrix
ContainerType	kernel/TeSparseMatrix.h	/^                  less<IndexPair> >       ContainerType;$/;"	t	class:TeSparseMatrix
ConteinerT	image_processing/TePDIJointHistogram.hpp	/^      typedef std::map< std::pair< double, double >, unsigned int > ConteinerT;$/;"	t	class:TePDIJointHistogram
ConverseRelation	kernel/TeGeometryAlgorithms.cpp	/^inline short ConverseRelation(const short& rel)$/;"	f
Convert2GDAL	drivers/gdal/TeGDALUtils.cpp	/^GDALDataType Convert2GDAL(TeDataType type)$/;"	f
Convert2GDAL	drivers/gdal/TeGDALUtils.cpp	/^void Convert2GDAL(double* geoTransformParams, const TeRasterParams& params)$/;"	f
Convert2OGR	drivers/gdal/TeOGRUtils.cpp	/^OGRFieldDefn Convert2OGR(const TeAttribute& attr)$/;"	f
Convert2OGR	drivers/gdal/TeOGRUtils.cpp	/^OGRGeometry* Convert2OGR(TeGeometry* geom)$/;"	f
Convert2OGR	drivers/gdal/TeOGRUtils.cpp	/^OGRSpatialReference* Convert2OGR(TeProjection* proj)$/;"	f
Convert2TerraLib	drivers/gdal/TeGDALUtils.cpp	/^TeDataType Convert2TerraLib(GDALDataType type)$/;"	f
Convert2TerraLib	drivers/gdal/TeGDALUtils.cpp	/^TeRasterParams::TeRasterPhotometricInterpretation Convert2TerraLib(GDALColorInterp colorInterpretation)$/;"	f
Convert2TerraLib	drivers/gdal/TeGDALUtils.cpp	/^void Convert2TerraLib(GDALDataset* ds, TeRasterParams& params)$/;"	f
Convert2TerraLib	drivers/gdal/TeGDALUtils.cpp	/^void Convert2TerraLib(GDALRasterBand* rasterBand, TeRasterParams& params, const int& i)$/;"	f
Convert2TerraLib	drivers/gdal/TeGDALUtils.cpp	/^void Convert2TerraLib(double* geoTransformParams, TeRasterParams& params)$/;"	f
Convert2TerraLib	drivers/gdal/TeOGRUtils.cpp	/^TeAttribute Convert2TerraLib(OGRFieldDefn* fieldDef)$/;"	f
Convert2TerraLib	drivers/gdal/TeOGRUtils.cpp	/^TeAttributeList Convert2TerraLib(OGRFeatureDefn* featDef)$/;"	f
Convert2TerraLib	drivers/gdal/TeOGRUtils.cpp	/^TeBox Convert2TerraLib(OGREnvelope* env)$/;"	f
Convert2TerraLib	drivers/gdal/TeOGRUtils.cpp	/^TeSTInstance Convert2TerraLib(OGRFeature* feat)$/;"	f
Convert2TerraLib	drivers/gdal/TeOGRUtils.cpp	/^int Convert2TerraLib(OGRwkbGeometryType geomType)$/;"	f
Convert2TerraLib	drivers/gdal/TeOGRUtils.cpp	/^std::vector<TeGeometry*> Convert2TerraLib(OGRGeometry* ogrGeom)$/;"	f
Coord_X	stat/TeSkaterGrafo.h	/^ double Coord_X(int Indice){return Get_X(Indice);}$/;"	f	class:TSkaterGrafo
Coord_Y	stat/TeSkaterGrafo.h	/^ double Coord_Y(int Indice) {return Get_Y(Indice);}$/;"	f	class:TSkaterGrafo
Copy	stat/TeStatDataStructures.cpp	/^TeSTStatInstanceSet::Copy(TeSTElementSet& stoSet, int nDbl, int aDbl) $/;"	f	class:TeSTStatInstanceSet
CorrThread	image_processing/TePDICorrelationMatching.hpp	/^          CorrThread( TePDIPIManager& progress, ImgMatrixT& bigMatrix, $/;"	f	class:TePDICorrelationMatching::CorrThread
CorrThread	image_processing/TePDICorrelationMatching.hpp	/^      class PDI_DLL CorrThread : public TeThread$/;"	c	class:TePDICorrelationMatching
CountCtx	drivers/SQLite/sqlite3/sqlite3.c	/^struct CountCtx {$/;"	s	file:
CountCtx	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct CountCtx CountCtx;$/;"	t	typeref:struct:CountCtx	file:
CountEdges	kernel/graph.h	/^	size_t Graph<VertexType,EdgeType>::CountEdges()$/;"	f	class:br_stl::Graph
Counts	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::Counts(int* Insert, int* Update, int* Delete, $/;"	f	class:DatabaseImpl
CoupleRasterCachesKeyT	image_processing/TePDIStatistic.hpp	/^        CoupleRasterCachesKeyT;      $/;"	t	class:TePDIStatistic
Covar	image_processing/TePDIEspecData.cpp	/^float TePDIEspecData::Covar(int i, int j)const$/;"	f	class:TePDIEspecData
Covar	image_processing/TePDIRegion.cpp	/^double TePDIRegion::Covar(int i, int j)$/;"	f	class:TePDIRegion
Covariance	image_processing/TePDIEspecData.cpp	/^TeMatrix TePDIEspecData::Covariance()const$/;"	f	class:TePDIEspecData
Create	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::Create()$/;"	f	class:BlobImpl
Create	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::Create(int dialect)$/;"	f	class:DatabaseImpl
CreateGDALRaster	drivers/gdal/TeGDALUtils.cpp	/^GDALDataset* CreateGDALRaster(TeRasterParams& params)$/;"	f
CreateParams	drivers/Firebird/ibpp/core/_ibpp.h	/^	const char* CreateParams() const	{ return mCreateParams.c_str(); }$/;"	f	class:ibpp_internals::DatabaseImpl
CreatePoints	kernel/TeComputeAttributeStrategies.cpp	/^void TeMinimumDistanceStrategy::CreatePoints(TeCoord2D p1, TeCoord2D p2)$/;"	f	class:TeMinimumDistanceStrategy
CurrentWindow_	image_processing/TePDIRegGrowSeg.hpp	/^      long            CurrentWindow_;$/;"	m	class:TePDIRegGrowSeg
CursorExecute	drivers/Firebird/ibpp/core/_ibpp.h	/^	inline void CursorExecute(const std::string& cursor)	{ CursorExecute(cursor, std::string()); }$/;"	f	class:ibpp_internals::StatementImpl
CursorExecute	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::CursorExecute(const std::string& cursor, const std::string& sql)$/;"	f	class:StatementImpl
CursorFree	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::CursorFree()$/;"	f	class:StatementImpl
CursorMode	drivers/qt/TeQtCanvas.h	/^    enum CursorMode { Pointer, Area, Pan, Hand, SizeVer, SizeBDiag,$/;"	g	class:TeQtCanvas
CursorMode	drivers/qwt/TeQwtPlotPicker.h	/^	enum CursorMode$/;"	g	class:TeQwtPlotPicker
CursorNum	drivers/Oracle/OCI/include/odci.h	/^   OCIInd CursorNum;$/;"	m	struct:ODCIEnv_ind
CursorNum	drivers/Oracle/OCI/include/odci.h	/^   OCINumber CursorNum;$/;"	m	struct:ODCIEnv
Curve_choice	kernel/TeGraph.h	/^	int Curve_choice;      \/* number of selected curve *\/$/;"	m	class:TeGraphPlot
Cx	stat/TeSkaterGrafo.h	/^    double Cx,Gamax;   \/\/Usados na conversao de escala$/;"	m	class:TSkaterGrafo
Cy	stat/TeSkaterGrafo.h	/^    double Cy,Gamay;   \/\/Usados na conversao de escala$/;"	m	class:TSkaterGrafo
CycleAndConnect	kernel/graph.h	/^	void Graph<VertexType, EdgeType>::CycleAndConnect(std::ostream& os) {$/;"	f	class:br_stl::Graph
D	drivers/SQLite/sqlite3/sqlite3.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
D1	stat/filaR.h	/^      double D1,D2; \/\/ desvio nos dois grupos gerados$/;"	m	struct:TFilaR::Item
D2	stat/filaR.h	/^      double D1,D2; \/\/ desvio nos dois grupos gerados$/;"	m	struct:TFilaR::Item
DATABASE	drivers/qt/TeQtCheckListItem.h	/^	enum ItemType {DATABASE, INFOLAYER, VIEW, THEME, LEGENDTITLE, LEGEND, CHARTTITLE, CHART};$/;"	e	enum:TeQtCheckListItem::ItemType
DATABASE_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        DATABASE_ATTR_COUNT = 13,$/;"	e	enum:oracle::occi::MetaData::AttrCount
DATA_AVAILABLE	drivers/Oracle/OCI/include/occiControl.h	/^    DATA_AVAILABLE,$/;"	e	enum:oracle::occi::ResultSet::Status
DATE_TYPE	drivers/Oracle/OCI/include/ocidem.h	53;"	d
DATUM_ERROR	kernel/TeErrorLog.h	/^    DATUM_ERROR,$/;"	e	enum:TeErrorType
DBKey	drivers/Firebird/ibpp/core/dbkey.cpp	/^IBPP::DBKey::DBKey(const DBKey& copied)$/;"	f	class:IBPP::DBKey
DBKey	drivers/Firebird/ibpp/core/ibpp.h	/^		DBKey() { }$/;"	f	class:IBPP::DBKey
DBKey	drivers/Firebird/ibpp/core/ibpp.h	/^	class DBKey$/;"	c	namespace:IBPP
DB_Empty	drivers/SQLite/sqlite3/sqlite3.c	9411;"	d	file:
DB_SchemaLoaded	drivers/SQLite/sqlite3/sqlite3.c	9409;"	d	file:
DB_UnresetViews	drivers/SQLite/sqlite3/sqlite3.c	9410;"	d	file:
DCOORD	drivers/SQLite/sqlite3/sqlite3.c	128059;"	d	file:
DECOMPOSE	image_processing/TePDIWaveletAtrous.hpp	/^      enum TeWaveletAtrousDirection {DECOMPOSE, RECOMPOSE};$/;"	e	enum:TePDIWaveletAtrous::TeWaveletAtrousDirection
DEFAULT	drivers/Oracle/OCI/include/occiControl.h	/^       DEFAULT = OCI_DEFAULT,$/;"	e	enum:oracle::occi::StatelessConnectionPool::DestroyMode
DEFAULT	drivers/Oracle/OCI/include/occiControl.h	/^    DEFAULT = OCI_DEFAULT,$/;"	e	enum:oracle::occi::Environment::Mode
DEFAULT_CACHE_CAPACITY	kernel/TeCoverageDecoderCacheLRU.h	39;"	d
DELETEDEDGE	kernel/TeTin.h	/^{ DELETEDEDGE = -1, NORMALEDGE = 0, ONCONTOUREDGE = 1, ONBREAKLINEEDGE = 2 };$/;"	e	enum:TeTinEdgeType
DELETEDVERTEX	kernel/TeTin.h	/^{ DELETEDVERTEX = -1, NORMALVERTEX = 0, ONCONTOURVERTEX = 1, ONBOXVERTEX = 2, ONBREAKLINEVERTEX = 3,$/;"	e	enum:TeTinVertexType
DEQ_BROWSE	drivers/Oracle/OCI/include/occiAQ.h	/^       DEQ_BROWSE  = OCI_DEQ_BROWSE,$/;"	e	enum:oracle::occi::aq::Consumer::DequeueMode
DEQ_FIRST_MSG	drivers/Oracle/OCI/include/occiAQ.h	/^       DEQ_FIRST_MSG        = OCI_DEQ_FIRST_MSG,$/;"	e	enum:oracle::occi::aq::Consumer::Navigation
DEQ_IMMEDIATE	drivers/Oracle/OCI/include/occiAQ.h	/^       DEQ_IMMEDIATE = OCI_DEQ_IMMEDIATE,$/;"	e	enum:oracle::occi::aq::Consumer::Visibility
DEQ_LOCKED	drivers/Oracle/OCI/include/occiAQ.h	/^       DEQ_LOCKED  = OCI_DEQ_LOCKED,$/;"	e	enum:oracle::occi::aq::Consumer::DequeueMode
DEQ_NEXT_MSG	drivers/Oracle/OCI/include/occiAQ.h	/^       DEQ_NEXT_MSG         = OCI_DEQ_NEXT_MSG$/;"	e	enum:oracle::occi::aq::Consumer::Navigation
DEQ_NEXT_TRANSACTION	drivers/Oracle/OCI/include/occiAQ.h	/^       DEQ_NEXT_TRANSACTION = OCI_DEQ_NEXT_TRANSACTION,$/;"	e	enum:oracle::occi::aq::Consumer::Navigation
DEQ_NO_WAIT	drivers/Oracle/OCI/include/occiAQ.h	/^       DEQ_NO_WAIT      = OCI_DEQ_NO_WAIT$/;"	e	enum:oracle::occi::aq::Consumer::__anon84
DEQ_ON_COMMIT	drivers/Oracle/OCI/include/occiAQ.h	/^       DEQ_ON_COMMIT = OCI_DEQ_ON_COMMIT$/;"	e	enum:oracle::occi::aq::Consumer::Visibility
DEQ_REMOVE	drivers/Oracle/OCI/include/occiAQ.h	/^       DEQ_REMOVE  = OCI_DEQ_REMOVE,$/;"	e	enum:oracle::occi::aq::Consumer::DequeueMode
DEQ_REMOVE_NODATA	drivers/Oracle/OCI/include/occiAQ.h	/^       DEQ_REMOVE_NODATA = OCI_DEQ_REMOVE_NODATA$/;"	e	enum:oracle::occi::aq::Consumer::DequeueMode
DEQ_WAIT_FOREVER	drivers/Oracle/OCI/include/occiAQ.h	/^       DEQ_WAIT_FOREVER = OCI_DEQ_WAIT_FOREVER,$/;"	e	enum:oracle::occi::aq::Consumer::__anon84
DFBGLAttributes	drivers/GL/directfbgl.h	/^} DFBGLAttributes;$/;"	t	typeref:struct:__anon175
DIAMOND	kernel/TeGraph.cpp	58;"	d	file:
DIGITS	kernel/TeGraph.cpp	74;"	d	file:
DIRECT_MODE	drivers/SQLite/sqlite3/sqlite3.c	42922;"	d	file:
DMESA_DRIVER_DBL_BIT	drivers/GL/dmesa.h	152;"	d
DMESA_DRIVER_YUP_BIT	drivers/GL/dmesa.h	153;"	d
DMESA_GET_BUFFER_ADDR	drivers/GL/dmesa.h	150;"	d
DMESA_GET_DRIVER_CAPS	drivers/GL/dmesa.h	148;"	d
DMESA_GET_SCREEN_SIZE	drivers/GL/dmesa.h	147;"	d
DMESA_GET_VIDEO_MODES	drivers/GL/dmesa.h	149;"	d
DMESA_H_included	drivers/GL/dmesa.h	35;"	d
DMESA_MAJOR_VERSION	drivers/GL/dmesa.h	37;"	d
DMESA_MINOR_VERSION	drivers/GL/dmesa.h	38;"	d
DMesaBuffer	drivers/GL/dmesa.h	/^typedef struct dmesa_buffer *DMesaBuffer;$/;"	t	typeref:struct:dmesa_buffer
DMesaContext	drivers/GL/dmesa.h	/^typedef struct dmesa_context *DMesaContext;$/;"	t	typeref:struct:dmesa_context
DMesaProc	drivers/GL/dmesa.h	/^typedef void (*DMesaProc) ();$/;"	t
DMesaVisual	drivers/GL/dmesa.h	/^typedef struct dmesa_visual *DMesaVisual;$/;"	t	typeref:struct:dmesa_visual
DOCID_CMP	drivers/SQLite/sqlite3/sqlite3.c	116813;"	d	file:
DOTLOCK_SUFFIX	drivers/SQLite/sqlite3/sqlite3.c	26474;"	d	file:
DO_CONVERT	drivers/Oracle/OCI/include/cdemodp0.h	94;"	d
DO_LOAD	drivers/Oracle/OCI/include/cdemodp0.h	95;"	d
DO_OS_MALLOC_TEST	drivers/SQLite/sqlite3/sqlite3.c	14450;"	d	file:
DO_OS_MALLOC_TEST	drivers/SQLite/sqlite3/sqlite3.c	14457;"	d	file:
DPB	drivers/Firebird/ibpp/core/_ibpp.h	/^	DPB() : mBuffer(0), mSize(0), mAlloc(0) { }$/;"	f	class:ibpp_internals::DPB
DPB	drivers/Firebird/ibpp/core/_ibpp.h	/^class DPB$/;"	c	namespace:ibpp_internals
DRI_INTERFACE_H	drivers/GL/dri_interface.h	39;"	d
DRI_INTERFACE_H	drivers/GL/internal/dri_interface.h	39;"	d
DSC_no_subtype	drivers/Firebird/ibpp/core/ibase.h	292;"	d
DSC_null	drivers/Firebird/ibpp/core/ibase.h	291;"	d
DSC_nullable	drivers/Firebird/ibpp/core/ibase.h	293;"	d
DSM	drivers/Firebird/ibpp/core/ibpp.h	/^	enum DSM {dsForce, dsDenyTrans, dsDenyAttach};$/;"	g	namespace:IBPP
DSQL_SQLDA_PUB_H	drivers/Firebird/ibpp/core/ibase.h	330;"	d
DSQL_close	drivers/Firebird/ibpp/core/ibase.h	332;"	d
DSQL_drop	drivers/Firebird/ibpp/core/ibase.h	333;"	d
DTM_DLL	dtm/TeDTMDefines.h	63;"	d
DTM_DLL	dtm/TeDTMDefines.h	65;"	d
DTM_DLL	dtm/TeDTMDefines.h	69;"	d
DTYPE_TYPE_MAX	drivers/Firebird/ibpp/core/ibase.h	314;"	d
DT_NOBEGIN	drivers/PostgreSQL/TePGInterface.cpp	218;"	d	file:
DT_NOEND	drivers/PostgreSQL/TePGInterface.cpp	219;"	d	file:
DURATION_NULL	drivers/Oracle/OCI/include/occiControl.h	/^          ,DURATION_NULL = OCI_DURATION_NULL$/;"	e	enum:oracle::occi::MetaData::__anon89
DURATION_SESSION	drivers/Oracle/OCI/include/occiControl.h	/^     enum { DURATION_SESSION = OCI_DURATION_SESSION$/;"	e	enum:oracle::occi::MetaData::__anon89
DURATION_TRANS	drivers/Oracle/OCI/include/occiControl.h	/^          ,DURATION_TRANS = OCI_DURATION_TRANS$/;"	e	enum:oracle::occi::MetaData::__anon89
DYNPQ_H	kernel/dynpq.h	26;"	d
D_ABSTRACT_THEME	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalDatatype { D_QT_CANVAS, D_QT_VIEWS, D_ABSTRACT_THEME, D_DATABASE, D_COORD2D, D_QT_THEMEITEM, D_STRING, D_PLUGIN_PARAMS, D_THEMETYPE };$/;"	e	enum:PluginsSignal::PluginsSignalDatatype
D_COORD2D	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalDatatype { D_QT_CANVAS, D_QT_VIEWS, D_ABSTRACT_THEME, D_DATABASE, D_COORD2D, D_QT_THEMEITEM, D_STRING, D_PLUGIN_PARAMS, D_THEMETYPE };$/;"	e	enum:PluginsSignal::PluginsSignalDatatype
D_DATABASE	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalDatatype { D_QT_CANVAS, D_QT_VIEWS, D_ABSTRACT_THEME, D_DATABASE, D_COORD2D, D_QT_THEMEITEM, D_STRING, D_PLUGIN_PARAMS, D_THEMETYPE };$/;"	e	enum:PluginsSignal::PluginsSignalDatatype
D_PLUGIN_PARAMS	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalDatatype { D_QT_CANVAS, D_QT_VIEWS, D_ABSTRACT_THEME, D_DATABASE, D_COORD2D, D_QT_THEMEITEM, D_STRING, D_PLUGIN_PARAMS, D_THEMETYPE };$/;"	e	enum:PluginsSignal::PluginsSignalDatatype
D_QT_CANVAS	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalDatatype { D_QT_CANVAS, D_QT_VIEWS, D_ABSTRACT_THEME, D_DATABASE, D_COORD2D, D_QT_THEMEITEM, D_STRING, D_PLUGIN_PARAMS, D_THEMETYPE };$/;"	e	enum:PluginsSignal::PluginsSignalDatatype
D_QT_THEMEITEM	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalDatatype { D_QT_CANVAS, D_QT_VIEWS, D_ABSTRACT_THEME, D_DATABASE, D_COORD2D, D_QT_THEMEITEM, D_STRING, D_PLUGIN_PARAMS, D_THEMETYPE };$/;"	e	enum:PluginsSignal::PluginsSignalDatatype
D_QT_VIEWS	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalDatatype { D_QT_CANVAS, D_QT_VIEWS, D_ABSTRACT_THEME, D_DATABASE, D_COORD2D, D_QT_THEMEITEM, D_STRING, D_PLUGIN_PARAMS, D_THEMETYPE };$/;"	e	enum:PluginsSignal::PluginsSignalDatatype
D_STRING	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalDatatype { D_QT_CANVAS, D_QT_VIEWS, D_ABSTRACT_THEME, D_DATABASE, D_COORD2D, D_QT_THEMEITEM, D_STRING, D_PLUGIN_PARAMS, D_THEMETYPE };$/;"	e	enum:PluginsSignal::PluginsSignalDatatype
D_THEMETYPE	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalDatatype { D_QT_CANVAS, D_QT_VIEWS, D_ABSTRACT_THEME, D_DATABASE, D_COORD2D, D_QT_THEMEITEM, D_STRING, D_PLUGIN_PARAMS, D_THEMETYPE };$/;"	e	enum:PluginsSignal::PluginsSignalDatatype
Data_filename	kernel/TeGraph.h	/^	char Data_filename[13];    \/* name of last file loaded *\/$/;"	m	class:TeGraphPlot
Database	drivers/Firebird/ibpp/core/ibpp.h	/^	class IDatabase;		typedef Ptr<IDatabase> Database;$/;"	t	namespace:IBPP
DatabaseFactory	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	Database DatabaseFactory(const std::string& ServerName,$/;"	f	namespace:IBPP
DatabaseFactory	drivers/Firebird/ibpp/core/ibpp.h	/^	inline Database DatabaseFactory(const std::string& ServerName,$/;"	f	namespace:IBPP
DatabaseImpl	drivers/Firebird/ibpp/core/_ibpp.h	/^class DatabaseImpl : public IBPP::IDatabase$/;"	c	namespace:ibpp_internals
DatabaseImpl	drivers/Firebird/ibpp/core/database.cpp	/^DatabaseImpl::DatabaseImpl(const std::string& ServerName, const std::string& DatabaseName,$/;"	f	class:DatabaseImpl
DatabaseName	drivers/Firebird/ibpp/core/_ibpp.h	/^	const char* DatabaseName() const	{ return mDatabaseName.c_str(); }$/;"	f	class:ibpp_internals::DatabaseImpl
DatabasePtr	drivers/Firebird/ibpp/core/array.cpp	/^IBPP::Database ArrayImpl::DatabasePtr() const$/;"	f	class:ArrayImpl
DatabasePtr	drivers/Firebird/ibpp/core/blob.cpp	/^IBPP::Database BlobImpl::DatabasePtr() const$/;"	f	class:BlobImpl
DatabasePtr	drivers/Firebird/ibpp/core/events.cpp	/^IBPP::Database EventsImpl::DatabasePtr() const$/;"	f	class:EventsImpl
DatabasePtr	drivers/Firebird/ibpp/core/row.cpp	/^IBPP::Database RowImpl::DatabasePtr() const$/;"	f	class:RowImpl
DatabasePtr	drivers/Firebird/ibpp/core/statement.cpp	/^IBPP::Database StatementImpl::DatabasePtr() const$/;"	f	class:StatementImpl
Date	drivers/Firebird/ibpp/core/date.cpp	/^IBPP::Date::Date(const IBPP::Date& copied)$/;"	f	class:IBPP::Date
Date	drivers/Firebird/ibpp/core/date.cpp	/^IBPP::Date::Date(int year, int month, int day)$/;"	f	class:IBPP::Date
Date	drivers/Firebird/ibpp/core/ibpp.h	/^		Date()			{ Clear(); };$/;"	f	class:IBPP::Date
Date	drivers/Firebird/ibpp/core/ibpp.h	/^		Date(int dt)	{ SetDate(dt); }$/;"	f	class:IBPP::Date
Date	drivers/Firebird/ibpp/core/ibpp.h	/^	class Date$/;"	c	namespace:IBPP
Date	drivers/Oracle/OCI/include/occiData.h	/^class Date$/;"	c	namespace:oracle::occi
DateTime	drivers/SQLite/sqlite3/sqlite3.c	/^struct DateTime {$/;"	s	file:
DateTime	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct DateTime DateTime;$/;"	t	typeref:struct:DateTime	file:
Day	drivers/Firebird/ibpp/core/date.cpp	/^int IBPP::Date::Day() const$/;"	f	class:IBPP::Date
Db	drivers/SQLite/sqlite3/sqlite3.c	/^struct Db {$/;"	s	file:
Db	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Db Db;$/;"	t	typeref:struct:Db	file:
DbClearProperty	drivers/SQLite/sqlite3/sqlite3.c	9397;"	d	file:
DbFixer	drivers/SQLite/sqlite3/sqlite3.c	/^struct DbFixer {$/;"	s	file:
DbFixer	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct DbFixer DbFixer;$/;"	t	typeref:struct:DbFixer	file:
DbHasAnyProperty	drivers/SQLite/sqlite3/sqlite3.c	9395;"	d	file:
DbHasProperty	drivers/SQLite/sqlite3/sqlite3.c	9394;"	d	file:
DbPage	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct PgHdr DbPage;$/;"	t	typeref:struct:PgHdr	file:
DbSetProperty	drivers/SQLite/sqlite3/sqlite3.c	9396;"	d	file:
Dead	image_processing/TePDIRegGrowSeg.hpp	/^   char Dead()  { return (Stat_ & STATDEAD); }$/;"	f	class:TePDIRGSCell
DebugLevel	drivers/Oracle/OCI/include/odci.h	/^   OCIInd DebugLevel;$/;"	m	struct:ODCIEnv_ind
DebugLevel	drivers/Oracle/OCI/include/odci.h	/^   OCINumber DebugLevel;$/;"	m	struct:ODCIEnv
DebugStream	drivers/Firebird/ibpp/core/_ibpp.h	/^	DebugStream() {}$/;"	f	struct:ibpp_internals::DebugStream
DebugStream	drivers/Firebird/ibpp/core/_ibpp.h	/^	DebugStream(const DebugStream&) {}$/;"	f	struct:ibpp_internals::DebugStream
DebugStream	drivers/Firebird/ibpp/core/_ibpp.h	/^struct DebugStream : public std::stringstream$/;"	s	namespace:ibpp_internals
DebugStream	drivers/Firebird/ibpp/core/_ibpp.h	/^struct DebugStream$/;"	s	namespace:ibpp_internals
Dec31_1899	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	const int consts::Dec31_1899 = 693595;$/;"	m	class:ibpp_internals::consts	file:
Dec31_1899	drivers/Firebird/ibpp/core/_ibpp.h	/^	static const int Dec31_1899;$/;"	m	struct:ibpp_internals::consts
DecimLevelSize	image_processing/TePDIMathFunctions.cpp	/^  unsigned long int DecimLevelSize( unsigned long int level,$/;"	f	namespace:TePDIMathFunctions
DecimLevels	image_processing/TePDIMathFunctions.hpp	/^    unsigned long int DecimLevels( const T& elements )$/;"	f	namespace:TePDIMathFunctions
DecoderParamT	kernel/TeRasterParams.h	/^  typedef std::pair< std::string, std::string > DecoderParamT;$/;"	t	class:TeRasterParams
Decompose	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::Decompose( const TePDIParameters& params )$/;"	f	class:TePDIMallatWavelets
DecompressBuffer	drivers/libjpeg/TeLibJpegWrapper.cpp	/^	bool DecompressBuffer(unsigned char* srcBuffer, int size, unsigned char* dstBuffer, int& width, int& height, int& bpp)$/;"	f	namespace:Jpeg
DecompressFile	drivers/libjpeg/TeLibJpegWrapper.cpp	/^	bool DecompressFile(const string& fileName, unsigned char* dstBuffer, int& width, int& height, int& nChannels)$/;"	f	namespace:Jpeg
Deephemeralize	drivers/SQLite/sqlite3/sqlite3.c	63042;"	d	file:
DefaultDirectory	drivers/Oracle/OCI/include/odci.h	/^   OCIInd DefaultDirectory;$/;"	m	struct:ODCIExtTableInfo_ind
DefaultDirectory	drivers/Oracle/OCI/include/odci.h	/^   OCIString*       DefaultDirectory;$/;"	m	struct:ODCIExtTableInfo
DefaultObject	image_processing/TePDIAlgorithm.cpp	/^TePDIAlgorithm* TePDIAlgorithm::DefaultObject( const TePDIParameters& params )$/;"	f	class:TePDIAlgorithm
DefaultObject	image_processing/TePDIMixModelStrategy.cpp	/^TePDIMixModelStrategy* TePDIMixModelStrategy::DefaultObject( $/;"	f	class:TePDIMixModelStrategy
DefaultObject	image_processing/TePDIParaSegStrategy.cpp	/^TePDIParaSegStrategy* TePDIParaSegStrategy::DefaultObject( $/;"	f	class:TePDIParaSegStrategy
DefaultObject	image_processing/TePDIStrategy.cpp	/^TePDIStrategy* TePDIStrategy::DefaultObject( const TePDIParameters& )$/;"	f	class:TePDIStrategy
DefaultObject	kernel/TeDatabase.h	/^  static TeDatabase* DefaultObject( const TeDatabaseFactoryParams& )$/;"	f	class:TeDatabase
DefaultObject	kernel/TeDecoder.cpp	/^TeDecoder* TeDecoder::DefaultObject( const TeRasterParams& par)$/;"	f	class:TeDecoder
DefaultObject	kernel/TeGeoDataDriver.h	/^	static TeGeoDataDriver*	DefaultObject() { return 0; }$/;"	f	class:TeGeoDataDriver
DefaultObject	kernel/TeGeometricTransformation.cpp	/^TeGeometricTransformation* TeGeometricTransformation::DefaultObject( $/;"	f	class:TeGeometricTransformation
DefaultObject	kernel/TeQuerierImpl.h	/^	static TeQuerierImpl* DefaultObject(const TeQuerierParams& \/*params*\/)  { return 0; }$/;"	f	class:TeQuerierImpl
DefaultObject	kernel/TeViewNode.h	/^	static TeViewNode*	DefaultObject()$/;"	f	class:TeViewNode
DefaultObject	kernel/TeVisual.h	/^	static TeVisual* DefaultObject()  $/;"	f	class:TeVisual
DefaultObject	stat/TeMSVFactory.h	/^	static TeMSV* DefaultObject(TeMSVParams){ return 0; }		$/;"	f	class:TeMSV
DefaultObject	stat/TeSemivarModelFactory.h	/^	static TeSemivarModel* DefaultObject(TeSemivarModelParams){ return 0; }$/;"	f	class:TeSemivarModel
Delete	kernel/TeRedBlackTree.h	/^			virtual void Delete(NODE* z)$/;"	f	class:TeREDBLACK::TeRBTree
DeleteFile	drivers/Firebird/TeFirebird.h	48;"	d
DeleteFixUp	kernel/TeRedBlackTree.h	/^			void DeleteFixUp(NODE* x, NODE* x_parent, NODE*& root)$/;"	f	class:TeREDBLACK::TeRBTree
DequeueMode	drivers/Oracle/OCI/include/occiAQ.h	/^     enum DequeueMode$/;"	g	class:oracle::occi::aq::Consumer
Describe	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::Describe(const std::string& table, const std::string& column)$/;"	f	class:ArrayImpl
DestroyMode	drivers/Oracle/OCI/include/occiControl.h	/^    enum DestroyMode$/;"	g	class:oracle::occi::StatelessConnectionPool
Desvio	stat/filaR.h	/^      double Desvio; \/\/ Desvio dentro do grupamento$/;"	m	struct:TFilaR::Item
DetachArrayImpl	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::DetachArrayImpl(ArrayImpl* ar)$/;"	f	class:DatabaseImpl
DetachArrayImpl	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::DetachArrayImpl(ArrayImpl* ar)$/;"	f	class:TransactionImpl
DetachBlobImpl	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::DetachBlobImpl(BlobImpl* bb)$/;"	f	class:DatabaseImpl
DetachBlobImpl	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::DetachBlobImpl(BlobImpl* bb)$/;"	f	class:TransactionImpl
DetachDatabase	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::DetachDatabase(IBPP::Database db)$/;"	f	class:TransactionImpl
DetachDatabaseImpl	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::DetachDatabaseImpl()$/;"	f	class:ArrayImpl
DetachDatabaseImpl	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::DetachDatabaseImpl()$/;"	f	class:BlobImpl
DetachDatabaseImpl	drivers/Firebird/ibpp/core/events.cpp	/^void EventsImpl::DetachDatabaseImpl()$/;"	f	class:EventsImpl
DetachDatabaseImpl	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::DetachDatabaseImpl()$/;"	f	class:StatementImpl
DetachDatabaseImpl	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::DetachDatabaseImpl(DatabaseImpl* dbi)$/;"	f	class:TransactionImpl
DetachEventsImpl	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::DetachEventsImpl(EventsImpl* ev)$/;"	f	class:DatabaseImpl
DetachStatementImpl	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::DetachStatementImpl(StatementImpl* st)$/;"	f	class:DatabaseImpl
DetachStatementImpl	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::DetachStatementImpl(StatementImpl* st)$/;"	f	class:TransactionImpl
DetachTransactionImpl	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::DetachTransactionImpl()$/;"	f	class:ArrayImpl
DetachTransactionImpl	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::DetachTransactionImpl()$/;"	f	class:BlobImpl
DetachTransactionImpl	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::DetachTransactionImpl(TransactionImpl* tr)$/;"	f	class:DatabaseImpl
DetachTransactionImpl	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::DetachTransactionImpl()$/;"	f	class:StatementImpl
Determinant	kernel/TeMatrix.cpp	/^TeMatrix:: Determinant() const$/;"	f	class:TeMatrix
Dialect	drivers/Firebird/ibpp/core/_ibpp.h	/^	int Dialect() { return mDialect; }$/;"	f	class:ibpp_internals::DatabaseImpl
Difsim_	image_processing/TePDIRegGrowSeg.hpp	/^      double          Difsim_;$/;"	m	class:TePDIRegGrowSeg
Dijkstra	kernel/Gra_algo.h	/^void Dijkstra($/;"	f	namespace:br_stl
Dimensions	drivers/Firebird/ibpp/core/array.cpp	/^int ArrayImpl::Dimensions()$/;"	f	class:ArrayImpl
DirectionT	image_processing/TePDIHaralick.hpp	/^      enum DirectionT $/;"	g	class:TePDIHaralick
Directories	drivers/Oracle/OCI/include/odci.h	/^   OCIInd Directories;$/;"	m	struct:ODCIExtTableInfo_ind
Directories	drivers/Oracle/OCI/include/odci.h	/^   ODCIArgDescList* Directories;$/;"	m	struct:ODCIExtTableInfo
Disconnect	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::Disconnect()$/;"	f	class:DatabaseImpl
Disconnect	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::Disconnect()$/;"	f	class:ServiceImpl
DisconnectMe	kernel/TeCommunicator.h	/^  void TeCommunicator< DataType >::DisconnectMe( $/;"	f	class:TeCommunicator
Discretize	image_processing/TePDIHistogram.cpp	/^bool TePDIHistogram::Discretize()$/;"	f	class:TePDIHistogram
DiskLinesInfoNode	image_processing/TePDIMatrix.hpp	/^          DiskLinesInfoNode() : filePtr_( 0 ), fileOff_( 0 ) {};$/;"	f	class:TePDIMatrix::DiskLinesInfoNode
DiskLinesInfoNode	image_processing/TePDIMatrix.hpp	/^      class DiskLinesInfoNode$/;"	c	class:TePDIMatrix
DiskMemPol	image_processing/TePDIMatrix.hpp	/^        DiskMemPol$/;"	e	enum:TePDIMatrix::MemoryPolicy
DiskMemPol	kernel/TeRasterMemManager.h	/^        DiskMemPol = 3$/;"	e	enum:TeRasterMemManager::MemoryPolicy
DiskTileData	kernel/TeRasterMemManager.h	/^          DiskTileData() : filePtr_( 0 ), fileOff_( 0 ), size_( 0 ) {};$/;"	f	class:TeRasterMemManager::DiskTileData
DiskTileData	kernel/TeRasterMemManager.h	/^      class DiskTileData$/;"	c	class:TeRasterMemManager
DiskTileDataVecT	kernel/TeRasterMemManager.h	/^        DiskTileDataVecT;   $/;"	t	class:TeRasterMemManager
Dispatch	drivers/Firebird/ibpp/core/events.cpp	/^void EventsImpl::Dispatch()$/;"	f	class:EventsImpl
Dissimilarity_	stat/TeTreeMinimum.h	/^	double Dissimilarity_;$/;"	m	class:TeMSTGraphLink
Dist	stat/TeSkaterFunctions.cpp	/^double  TParticao::Dist(int Atual,double *Media){$/;"	f	class:TParticao
Distance	drivers/qt/TeQtCanvas.h	/^		 UpArrow, Edit, Distance, Information, ZoomIn, ZoomOut };$/;"	e	enum:TeQtCanvas::CursorMode
Distance	image_processing/TePDICluster.cpp	/^double TePDICluster::Distance(TePDICluster clu)$/;"	f	class:TePDICluster
Distance	image_processing/TePDICluster.cpp	/^double TePDICluster::Distance(TePDIRegion reg)$/;"	f	class:TePDICluster
Distance	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRGSCell :: Distance( TePDIRGSCell *c )$/;"	f	class:TePDIRGSCell
Distancia	stat/TeSkaterGrafo.cpp	/^double TSkaterGrafo::Distancia(int L_indice, int V_indice){$/;"	f	class:TSkaterGrafo
DownHeap	stat/heap.cpp	/^void  THeap::DownHeap(int i){$/;"	f	class:THeap
DriverType	drivers/Oracle/OCI/include/odci.h	/^   OCIInd DriverType;$/;"	m	struct:ODCIExtTableInfo_ind
DriverType	drivers/Oracle/OCI/include/odci.h	/^   OCIString*       DriverType;$/;"	m	struct:ODCIExtTableInfo
Drop	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::Drop()$/;"	f	class:DatabaseImpl
Drop	drivers/Firebird/ibpp/core/events.cpp	/^void EventsImpl::Drop(const std::string& eventname)$/;"	f	class:EventsImpl
DtSaverGetWindows	drivers/GL/vms_x_fix.h	658;"	d
E	image_processing/TePDIRaster2Vector.cpp	40;"	d	file:
EB1MAXVAL	drivers/Oracle/OCI/include/oratypes.h	136;"	d
EB1MINVAL	drivers/Oracle/OCI/include/oratypes.h	137;"	d
EB2MAXVAL	drivers/Oracle/OCI/include/oratypes.h	140;"	d
EB2MINVAL	drivers/Oracle/OCI/include/oratypes.h	141;"	d
EB4MAXVAL	drivers/Oracle/OCI/include/oratypes.h	144;"	d
EB4MINVAL	drivers/Oracle/OCI/include/oratypes.h	145;"	d
ECHO	kernel/lexTemporal.cpp	751;"	d	file:
EIGHT_BYTE_ALIGNMENT	drivers/SQLite/sqlite3/sqlite3.c	7807;"	d	file:
EIGHT_BYTE_ALIGNMENT	drivers/SQLite/sqlite3/sqlite3.c	7809;"	d	file:
EMPTY_FILE_NAME	kernel/TeErrorLog.h	/^	EMPTY_FILE_NAME,$/;"	e	enum:TeErrorType
EN	image_processing/TePDIRaster2Vector.cpp	39;"	d	file:
ENC	drivers/SQLite/sqlite3/sqlite3.c	9602;"	d	file:
END_OF_FETCH	drivers/Oracle/OCI/include/occiControl.h	/^    END_OF_FETCH = 0,$/;"	e	enum:oracle::occi::ResultSet::Status
END_OF_FILE_REACHED	kernel/TeErrorLog.h	/^    END_OF_FILE_REACHED,$/;"	e	enum:TeErrorType
END_OF_INPUT	drivers/Oracle/OCI/include/cdemodp0.h	96;"	d
END_TIMER	drivers/SQLite/sqlite3/shell.c	129;"	d	file:
END_TIMER	drivers/SQLite/sqlite3/shell.c	201;"	d	file:
END_TIMER	drivers/SQLite/sqlite3/shell.c	206;"	d	file:
ENQ_BEFORE	drivers/Oracle/OCI/include/occiAQ.h	/^       ENQ_BEFORE = OCI_ENQ_BEFORE,$/;"	e	enum:oracle::occi::aq::Producer::EnqueueSequence
ENQ_IMMEDIATE	drivers/Oracle/OCI/include/occiAQ.h	/^       ENQ_IMMEDIATE = OCI_ENQ_IMMEDIATE,$/;"	e	enum:oracle::occi::aq::Producer::Visibility
ENQ_ON_COMMIT	drivers/Oracle/OCI/include/occiAQ.h	/^       ENQ_ON_COMMIT = OCI_ENQ_ON_COMMIT$/;"	e	enum:oracle::occi::aq::Producer::Visibility
ENQ_TOP	drivers/Oracle/OCI/include/occiAQ.h	/^       ENQ_TOP    = OCI_ENQ_TOP$/;"	e	enum:oracle::occi::aq::Producer::EnqueueSequence
EOB_ACT_CONTINUE_SCAN	kernel/lexTemporal.cpp	130;"	d	file:
EOB_ACT_END_OF_FILE	kernel/lexTemporal.cpp	131;"	d	file:
EOB_ACT_LAST_MATCH	kernel/lexTemporal.cpp	132;"	d	file:
EP2_Irreducible	drivers/SQLite/sqlite3/sqlite3.c	10409;"	d	file:
EP2_MallocedToken	drivers/SQLite/sqlite3/sqlite3.c	10408;"	d	file:
EPSILON	image_processing/TePDIEMClas.hpp	/^      double EPSILON;$/;"	m	class:TePDIEMClas
EPSILON_COMPARE	kernel/TeIntersector.h	52;"	d
EP_Agg	drivers/SQLite/sqlite3/sqlite3.c	10389;"	d	file:
EP_DblQuoted	drivers/SQLite/sqlite3/sqlite3.c	10394;"	d	file:
EP_Distinct	drivers/SQLite/sqlite3/sqlite3.c	10392;"	d	file:
EP_Error	drivers/SQLite/sqlite3/sqlite3.c	10391;"	d	file:
EP_ExpCollate	drivers/SQLite/sqlite3/sqlite3.c	10396;"	d	file:
EP_FixedDest	drivers/SQLite/sqlite3/sqlite3.c	10397;"	d	file:
EP_FromJoin	drivers/SQLite/sqlite3/sqlite3.c	10388;"	d	file:
EP_InfixFunc	drivers/SQLite/sqlite3/sqlite3.c	10395;"	d	file:
EP_IntValue	drivers/SQLite/sqlite3/sqlite3.c	10398;"	d	file:
EP_Reduced	drivers/SQLite/sqlite3/sqlite3.c	10401;"	d	file:
EP_Resolved	drivers/SQLite/sqlite3/sqlite3.c	10390;"	d	file:
EP_Static	drivers/SQLite/sqlite3/sqlite3.c	10403;"	d	file:
EP_TokenOnly	drivers/SQLite/sqlite3/sqlite3.c	10402;"	d	file:
EP_VarSelect	drivers/SQLite/sqlite3/sqlite3.c	10393;"	d	file:
EP_xIsSelect	drivers/SQLite/sqlite3/sqlite3.c	10399;"	d	file:
ERGAS	image_processing/TePDIFusionIndexes.hpp	/^      enum TeFusionIndexes {CC, BIAS, VARDIF, SDD, UIQI, RMSE, ERGAS, SIMM, SERGAS, SCC};$/;"	e	enum:TePDIFusionIndexes::TeFusionIndexes
ERR	kernel/TeGraph.cpp	48;"	d	file:
ERR_TRACE	drivers/SQLite/sqlite3/sqlite3.c	23179;"	d	file:
EVENTS	drivers/Oracle/OCI/include/occiControl.h	/^    EVENTS = OCI_EVENTS,$/;"	e	enum:oracle::occi::Environment::Mode
EWORDMAXVAL	drivers/Oracle/OCI/include/oratypes.h	201;"	d
EWORDMINVAL	drivers/Oracle/OCI/include/oratypes.h	202;"	d
EXCLUSIVE_LOCK	drivers/SQLite/sqlite3/sqlite3.c	9143;"	d	file:
EXPORT_WIN	drivers/Oracle/TeOCIOracle.h	45;"	d
EXPORT_WIN	drivers/Oracle/TeOCIOracle.h	47;"	d
EXPORT_WIN	drivers/Oracle/TeOracleSpatial.h	37;"	d
EXPORT_WIN	drivers/Oracle/TeOracleSpatial.h	39;"	d
EXPORT_WIN	drivers/ado/TeAdoDB.h	51;"	d
EXPORT_WIN	drivers/ado/TeAdoDB.h	53;"	d
EXPORT_WIN	drivers/ado/TeAdoFireBird.h	51;"	d
EXPORT_WIN	drivers/ado/TeAdoFireBird.h	53;"	d
EXPORT_WIN	drivers/ado/TeAdoOracle.h	53;"	d
EXPORT_WIN	drivers/ado/TeAdoOracle.h	55;"	d
EXPORT_WIN	drivers/ado/TeAdoSqlServer.h	53;"	d
EXPORT_WIN	drivers/ado/TeAdoSqlServer.h	55;"	d
EXPORT_WIN	drivers/ado/TeAdoSqlServerSpatial.h	54;"	d
EXPORT_WIN	drivers/ado/TeAdoSqlServerSpatial.h	56;"	d
EXPRDUP_REDUCE	drivers/SQLite/sqlite3/sqlite3.c	10445;"	d	file:
EXPR_FULLSIZE	drivers/SQLite/sqlite3/sqlite3.c	10437;"	d	file:
EXPR_REDUCEDSIZE	drivers/SQLite/sqlite3/sqlite3.c	10438;"	d	file:
EXPR_TOKENONLYSIZE	drivers/SQLite/sqlite3/sqlite3.c	10439;"	d	file:
EXTRA_SIZE	drivers/SQLite/sqlite3/sqlite3.c	47462;"	d	file:
East	image_processing/TePDIHaralick.hpp	/^        East = 4,$/;"	e	enum:TePDIHaralick::DirectionT
Edit	drivers/qt/TeQtCanvas.h	/^		 UpArrow, Edit, Distance, Information, ZoomIn, ZoomOut };$/;"	e	enum:TeQtCanvas::CursorMode
EigenValues	kernel/TeMatrix.cpp	/^TeMatrix::EigenValues( TeMatrix& mt ) const$/;"	f	class:TeMatrix
EigenVec	kernel/TeMatrix.cpp	/^TeMatrix::EigenVec( double e_vec[] )$/;"	f	class:TeMatrix
EigenVectors	kernel/TeMatrix.cpp	/^TeMatrix::EigenVectors( TeMatrix& mt ) const$/;"	f	class:TeMatrix
ElementScale	drivers/Firebird/ibpp/core/array.cpp	/^int ArrayImpl::ElementScale()$/;"	f	class:ArrayImpl
ElementSize	drivers/Firebird/ibpp/core/array.cpp	/^int ArrayImpl::ElementSize()$/;"	f	class:ArrayImpl
ElementType	drivers/Firebird/ibpp/core/array.cpp	/^IBPP::SDT ArrayImpl::ElementType()$/;"	f	class:ArrayImpl
Empty	kernel/graph.h	/^		Empty(int=0) {}$/;"	f	struct:br_stl::Empty
Empty	kernel/graph.h	/^	struct TL_DLL Empty$/;"	s	namespace:br_stl
Empty	stat/heap.cpp	/^ int THeap::Empty(){$/;"	f	class:THeap
EncodeDateOnly	drivers/PostgreSQL/TePGInterface.cpp	/^inline bool EncodeDateOnly(struct te_pg_tm* tm, char *str)$/;"	f
EncodeDateTime	drivers/PostgreSQL/TePGInterface.cpp	/^inline bool EncodeDateTime(struct te_pg_tm * tm, te_fsec_t fsec, int *tzp, char ** \/* tzn *\/, char *str)$/;"	f
EncodeSpecialTimestamp	drivers/PostgreSQL/TePGInterface.cpp	/^inline bool EncodeSpecialTimestamp(te_int64 dt, char *str)$/;"	f
EncodeTimeOnly	drivers/PostgreSQL/TePGInterface.cpp	/^inline bool EncodeTimeOnly(struct te_pg_tm * tm, te_fsec_t fsec, int *tzp, char *str)$/;"	f
EndOfMonth	drivers/Firebird/ibpp/core/date.cpp	/^void IBPP::Date::EndOfMonth()$/;"	f	class:IBPP::Date
EngineCode	drivers/Firebird/ibpp/core/_ibpp.h	/^	int EngineCode() const { return (mVector[0] == 1) ? (int)mVector[1] : 0; }$/;"	f	class:ibpp_internals::IBS
EngineCode	drivers/Firebird/ibpp/core/exception.cpp	/^int SQLExceptionImpl::EngineCode() const throw()$/;"	f	class:SQLExceptionImpl
EnqueueSequence	drivers/Oracle/OCI/include/occiAQ.h	/^     enum EnqueueSequence$/;"	g	class:oracle::occi::aq::Producer
EnvFlags	drivers/Oracle/OCI/include/odci.h	/^   OCIInd EnvFlags;$/;"	m	struct:ODCIEnv_ind
EnvFlags	drivers/Oracle/OCI/include/odci.h	/^   OCINumber EnvFlags;$/;"	m	struct:ODCIEnv
Environment	drivers/Oracle/OCI/include/occiControl.h	/^class   Environment     $/;"	c	namespace:oracle::occi
Erase	kernel/TeRedBlackTree.h	/^			void Erase(NODE* n)$/;"	f	class:TeREDBLACK::TeRBTree
ErroH	stat/erro.h	2;"	d
ErrorCallback_OCIXADMethodEntry	drivers/Oracle/OCI/include/ocixad.h	/^  OCIXADMethodErrorCallback ErrorCallback_OCIXADMethodEntry;$/;"	m	struct:OCIXADMethodEntry
ErrorMessage	drivers/Firebird/ibpp/core/_ibs.cpp	/^const char* IBS::ErrorMessage() const$/;"	f	class:IBS
ErrorMessage	drivers/Firebird/ibpp/core/exception.cpp	/^const char* ExceptionBase::ErrorMessage() const throw()$/;"	f	class:ExceptionBase
ErrorMessage	drivers/Firebird/ibpp/core/exception.cpp	/^const char* LogicExceptionImpl::ErrorMessage() const throw()$/;"	f	class:LogicExceptionImpl
ErrorMessage	drivers/Firebird/ibpp/core/exception.cpp	/^const char* SQLExceptionImpl::ErrorMessage() const throw()$/;"	f	class:SQLExceptionImpl
ErrorMessage	drivers/Firebird/ibpp/core/exception.cpp	/^const char* WrongTypeImpl::ErrorMessage() const throw()$/;"	f	class:WrongTypeImpl
Errors	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool Errors() { return (mVector[0] == 1 && mVector[1] > 0) ? true : false; }$/;"	f	class:ibpp_internals::IBS
Escala	stat/TeSkaterGrafo.cpp	/^void  TSkaterGrafo::Escala(int Altura,int Largura){$/;"	f	class:TSkaterGrafo
Escalona	stat/TeSkaterGrafo.cpp	/^void  TSkaterGrafo::Escalona(double *X, double *Y){$/;"	f	class:TSkaterGrafo
EuclideanBlendMethod	image_processing/TePDIBlender.hpp	/^        EuclideanBlendMethod = 3$/;"	e	enum:TePDIBlender::BlendMethod
EventBufferIterator	drivers/Firebird/ibpp/core/_ibpp.h	/^	EventBufferIterator() {}$/;"	f	struct:ibpp_internals::EventBufferIterator
EventBufferIterator	drivers/Firebird/ibpp/core/_ibpp.h	/^	EventBufferIterator(It it) : mIt(it) {}$/;"	f	struct:ibpp_internals::EventBufferIterator
EventBufferIterator	drivers/Firebird/ibpp/core/_ibpp.h	/^struct EventBufferIterator$/;"	s	namespace:ibpp_internals
EventHandler	drivers/Firebird/ibpp/core/events.cpp	/^void EventsImpl::EventHandler(const char* object, short size, const char* tmpbuffer)$/;"	f	class:EventsImpl
EventInterface	drivers/Firebird/ibpp/core/ibpp.h	/^	class EventInterface$/;"	c	namespace:IBPP
Events	drivers/Firebird/ibpp/core/ibpp.h	/^	class IEvents;			typedef Ptr<IEvents> Events;$/;"	t	namespace:IBPP
EventsFactory	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	Events EventsFactory(Database db)$/;"	f	namespace:IBPP
EventsImpl	drivers/Firebird/ibpp/core/_ibpp.h	/^class EventsImpl : public IBPP::IEvents$/;"	c	namespace:ibpp_internals
EventsImpl	drivers/Firebird/ibpp/core/events.cpp	/^EventsImpl::EventsImpl(DatabaseImpl* database)$/;"	f	class:EventsImpl
ExaustiveOutRemotion	kernel/TeGTParams.h	/^        ExaustiveOutRemotion,$/;"	e	enum:TeGTParams::OutRemStrategy
ExcTPDataNode	kernel/TeGeometricTransformation.h	/^          ExcTPDataNode( const ExcTPDataNode& other )$/;"	f	class:TeGeometricTransformation::ExcTPDataNode
ExcTPDataNode	kernel/TeGeometricTransformation.h	/^          ExcTPDataNode()$/;"	f	class:TeGeometricTransformation::ExcTPDataNode
ExcTPDataNode	kernel/TeGeometricTransformation.h	/^      class ExcTPDataNode$/;"	c	class:TeGeometricTransformation
Exception	drivers/Firebird/ibpp/core/ibpp.h	/^	class Exception : public std::exception$/;"	c	namespace:IBPP
ExceptionBase	drivers/Firebird/ibpp/core/_ibpp.h	/^class ExceptionBase$/;"	c	namespace:ibpp_internals
ExceptionBase	drivers/Firebird/ibpp/core/exception.cpp	/^ExceptionBase::ExceptionBase() throw()$/;"	f	class:ExceptionBase
ExceptionBase	drivers/Firebird/ibpp/core/exception.cpp	/^ExceptionBase::ExceptionBase(const ExceptionBase& copied) throw()$/;"	f	class:ExceptionBase
ExceptionBase	drivers/Firebird/ibpp/core/exception.cpp	/^ExceptionBase::ExceptionBase(const std::string& context,$/;"	f	class:ExceptionBase
ExecStackElement	image_processing/TePDIArithmetic.hpp	/^          ExecStackElement()$/;"	f	class:TePDIArithmetic::ExecStackElement
ExecStackElement	image_processing/TePDIArithmetic.hpp	/^      class PDI_DLL ExecStackElement$/;"	c	class:TePDIArithmetic
ExecStackT	image_processing/TePDIArithmetic.hpp	/^      typedef std::stack< ExecStackElement > ExecStackT;$/;"	t	class:TePDIArithmetic
Execute	drivers/Firebird/ibpp/core/_ibpp.h	/^	inline void Execute()	{ Execute(std::string()); }$/;"	f	class:ibpp_internals::StatementImpl
Execute	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Execute(const std::string& sql)$/;"	f	class:StatementImpl
ExecuteImmediate	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::ExecuteImmediate(const std::string& sql)$/;"	f	class:StatementImpl
ExpandBlob	drivers/SQLite/sqlite3/sqlite3.c	63050;"	d	file:
Expr	drivers/SQLite/sqlite3/sqlite3.c	/^struct Expr {$/;"	s	file:
Expr	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Expr Expr;$/;"	t	typeref:struct:Expr	file:
ExprClearProperty	drivers/SQLite/sqlite3/sqlite3.c	10430;"	d	file:
ExprHasAnyProperty	drivers/SQLite/sqlite3/sqlite3.c	10428;"	d	file:
ExprHasProperty	drivers/SQLite/sqlite3/sqlite3.c	10427;"	d	file:
ExprList	drivers/SQLite/sqlite3/sqlite3.c	/^struct ExprList {$/;"	s	file:
ExprList	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct ExprList ExprList;$/;"	t	typeref:struct:ExprList	file:
ExprList_item	drivers/SQLite/sqlite3/sqlite3.c	/^  struct ExprList_item {$/;"	s	struct:ExprList	file:
ExprSetIrreducible	drivers/SQLite/sqlite3/sqlite3.c	10418;"	d	file:
ExprSetIrreducible	drivers/SQLite/sqlite3/sqlite3.c	10420;"	d	file:
ExprSetProperty	drivers/SQLite/sqlite3/sqlite3.c	10429;"	d	file:
ExprSpan	drivers/SQLite/sqlite3/sqlite3.c	/^struct ExprSpan {$/;"	s	file:
ExprSpan	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct ExprSpan ExprSpan;$/;"	t	typeref:struct:ExprSpan	file:
ExtractBand	kernel/TeRasterTransform.h	/^	void ExtractBand(double icol, double ilin, double ocol, double olin)$/;"	f	class:TeRasterTransform
ExtractBands	kernel/TeRasterTransform.h	/^	void ExtractBands(double icol, double ilin, double ocol, double olin)$/;"	f	class:TeRasterTransform
ExtractLocalMaximasParams	image_processing/TePDIMMIOMatching.hpp	/^          ExtractLocalMaximasParams()$/;"	f	class:TePDIMMIOMatching::ExtractLocalMaximasParams
ExtractLocalMaximasParams	image_processing/TePDIMMIOMatching.hpp	/^      class PDI_DLL ExtractLocalMaximasParams $/;"	c	class:TePDIMMIOMatching
ExtractRGB	kernel/TeRasterTransform.h	/^	void ExtractRGB(double icol, double ilin, double ocol, double olin)$/;"	f	class:TeRasterTransform
Extract_Min	stat/heap.cpp	/^int THeap::Extract_Min(){$/;"	f	class:THeap
F32	drivers/GL/glxmd.h	56;"	d
FABS	drivers/SQLite/sqlite3/sqlite3.c	129624;"	d	file:
FACTORY_PRODUCT_INSTATIATION_ERROR	kernel/TeErrorLog.h	/^  FACTORY_PRODUCT_INSTATIATION_ERROR,$/;"	e	enum:TeErrorType
FALSE	drivers/Oracle/OCI/include/oratypes.h	28;"	d
FB_API_DEPRECATED	drivers/Firebird/ibpp/core/ibase.h	52;"	d
FB_API_DEPRECATED	drivers/Firebird/ibpp/core/ibase.h	54;"	d
FB_API_DEPRECATED	drivers/Firebird/ibpp/core/ibase.h	56;"	d
FB_API_HANDLE	drivers/Firebird/ibpp/core/ibase.h	/^typedef unsigned int    FB_API_HANDLE;$/;"	t
FB_API_HANDLE	drivers/Firebird/ibpp/core/ibase.h	/^typedef void*           FB_API_HANDLE;$/;"	t
FB_API_VER	drivers/Firebird/ibpp/core/ibase.h	39;"	d
FB_DEFAULT_INSTANCE	drivers/Firebird/ibpp/core/_ibpp.cpp	45;"	d	file:
FC_OOPEN	drivers/Oracle/OCI/include/ocidem.h	68;"	d
FET	image_processing/TePDIHants.cpp	/^  double FET;$/;"	v
FIELD_SET	drivers/Oracle/OCI/include/cdemodp0.h	93;"	d
FIELD_SET_BUF	drivers/Oracle/OCI/include/cdemodp0.h	75;"	d
FIELD_SET_COMPLETE	drivers/Oracle/OCI/include/cdemodp0.h	73;"	d
FIELD_SET_ERROR	drivers/Oracle/OCI/include/cdemodp0.h	74;"	d
FIELD_SET_PARTIAL	drivers/Oracle/OCI/include/cdemodp0.h	76;"	d
FILEHANDLEID	drivers/SQLite/sqlite3/sqlite3.c	37455;"	d	file:
FIRST_PIECE	drivers/Oracle/OCI/include/cdemodp0.h	68;"	d
FKey	drivers/SQLite/sqlite3/sqlite3.c	/^struct FKey {$/;"	s	file:
FKey	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct FKey FKey;$/;"	t	typeref:struct:FKey	file:
FLAG_INTERN	drivers/SQLite/sqlite3/sqlite3.c	19018;"	d	file:
FLAG_SIGNED	drivers/SQLite/sqlite3/sqlite3.c	19017;"	d	file:
FLAG_STRING	drivers/SQLite/sqlite3/sqlite3.c	19019;"	d	file:
FLEX_SCANNER	kernel/lexTemporal.cpp	30;"	d	file:
FLOAT32	drivers/GL/glxmd.h	/^typedef float FLOAT32;$/;"	t
FLOAT64	drivers/GL/glxmd.h	/^typedef double FLOAT64;$/;"	t
FLOAT_TYPE	drivers/Oracle/OCI/include/ocidem.h	50;"	d
FONT_MAX	kernel/TeGraph.cpp	52;"	d	file:
FORCEGET	drivers/Oracle/OCI/include/occiControl.h	/^       FORCEGET = OCI_SPOOL_ATTRVAL_FORCEGET$/;"	e	enum:oracle::occi::StatelessConnectionPool::BusyOption
FOREGUARD	drivers/SQLite/sqlite3/sqlite3.c	15114;"	d	file:
FTS3_DOCID_SEARCH	drivers/SQLite/sqlite3/sqlite3.c	114685;"	d	file:
FTS3_EVAL_FILTER	drivers/SQLite/sqlite3/sqlite3.c	114665;"	d	file:
FTS3_EVAL_MATCHINFO	drivers/SQLite/sqlite3/sqlite3.c	114667;"	d	file:
FTS3_EVAL_NEXT	drivers/SQLite/sqlite3/sqlite3.c	114666;"	d	file:
FTS3_FULLSCAN_SEARCH	drivers/SQLite/sqlite3/sqlite3.c	114684;"	d	file:
FTS3_FULLTEXT_SEARCH	drivers/SQLite/sqlite3/sqlite3.c	114686;"	d	file:
FTS3_HASH_BINARY	drivers/SQLite/sqlite3/sqlite3.c	114384;"	d	file:
FTS3_HASH_STRING	drivers/SQLite/sqlite3/sqlite3.c	114383;"	d	file:
FTS3_MATCHINFO_AVGLENGTH	drivers/SQLite/sqlite3/sqlite3.c	126355;"	d	file:
FTS3_MATCHINFO_DEFAULT	drivers/SQLite/sqlite3/sqlite3.c	126363;"	d	file:
FTS3_MATCHINFO_HITS	drivers/SQLite/sqlite3/sqlite3.c	126358;"	d	file:
FTS3_MATCHINFO_LCS	drivers/SQLite/sqlite3/sqlite3.c	126357;"	d	file:
FTS3_MATCHINFO_LENGTH	drivers/SQLite/sqlite3/sqlite3.c	126356;"	d	file:
FTS3_MATCHINFO_NCOL	drivers/SQLite/sqlite3/sqlite3.c	126353;"	d	file:
FTS3_MATCHINFO_NDOC	drivers/SQLite/sqlite3/sqlite3.c	126354;"	d	file:
FTS3_MATCHINFO_NPHRASE	drivers/SQLite/sqlite3/sqlite3.c	126352;"	d	file:
FTS3_MAX_PENDING_DATA	drivers/SQLite/sqlite3/sqlite3.c	114447;"	d	file:
FTS3_MERGE_COUNT	drivers/SQLite/sqlite3/sqlite3.c	114437;"	d	file:
FTS3_NODE_CHUNKSIZE	drivers/SQLite/sqlite3/sqlite3.c	122989;"	d	file:
FTS3_NODE_CHUNKSIZE	drivers/SQLite/sqlite3/sqlite3.c	122992;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	drivers/SQLite/sqlite3/sqlite3.c	122990;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	drivers/SQLite/sqlite3/sqlite3.c	122993;"	d	file:
FTS3_NODE_PADDING	drivers/SQLite/sqlite3/sqlite3.c	122967;"	d	file:
FTS3_SEGCURSOR_ALL	drivers/SQLite/sqlite3/sqlite3.c	114814;"	d	file:
FTS3_SEGCURSOR_PENDING	drivers/SQLite/sqlite3/sqlite3.c	114813;"	d	file:
FTS3_SEGDIR_MAXLEVEL	drivers/SQLite/sqlite3/sqlite3.c	114482;"	d	file:
FTS3_SEGDIR_MAXLEVEL_STR	drivers/SQLite/sqlite3/sqlite3.c	114483;"	d	file:
FTS3_SEGMENT_COLUMN_FILTER	drivers/SQLite/sqlite3/sqlite3.c	114826;"	d	file:
FTS3_SEGMENT_FIRST	drivers/SQLite/sqlite3/sqlite3.c	114829;"	d	file:
FTS3_SEGMENT_IGNORE_EMPTY	drivers/SQLite/sqlite3/sqlite3.c	114825;"	d	file:
FTS3_SEGMENT_PREFIX	drivers/SQLite/sqlite3/sqlite3.c	114827;"	d	file:
FTS3_SEGMENT_REQUIRE_POS	drivers/SQLite/sqlite3/sqlite3.c	114824;"	d	file:
FTS3_SEGMENT_SCAN	drivers/SQLite/sqlite3/sqlite3.c	114828;"	d	file:
FTS3_TERMS_SCHEMA	drivers/SQLite/sqlite3/sqlite3.c	119761;"	d	file:
FTS3_VARINT_MAX	drivers/SQLite/sqlite3/sqlite3.c	114465;"	d	file:
FTS4AUX_EQ_CONSTRAINT	drivers/SQLite/sqlite3/sqlite3.c	119840;"	d	file:
FTS4AUX_GE_CONSTRAINT	drivers/SQLite/sqlite3/sqlite3.c	119841;"	d	file:
FTS4AUX_LE_CONSTRAINT	drivers/SQLite/sqlite3/sqlite3.c	119842;"	d	file:
FTSQUERY_AND	drivers/SQLite/sqlite3/sqlite3.c	114784;"	d	file:
FTSQUERY_NEAR	drivers/SQLite/sqlite3/sqlite3.c	114782;"	d	file:
FTSQUERY_NOT	drivers/SQLite/sqlite3/sqlite3.c	114783;"	d	file:
FTSQUERY_OR	drivers/SQLite/sqlite3/sqlite3.c	114785;"	d	file:
FTSQUERY_PHRASE	drivers/SQLite/sqlite3/sqlite3.c	114786;"	d	file:
FTS_CORRUPT_VTAB	drivers/SQLite/sqlite3/sqlite3.c	114552;"	d	file:
FTS_CORRUPT_VTAB	drivers/SQLite/sqlite3/sqlite3.c	114554;"	d	file:
FT_DELETE	drivers/Oracle/OCI/include/ocidem.h	66;"	d
FT_INSERT	drivers/Oracle/OCI/include/ocidem.h	63;"	d
FT_SELECT	drivers/Oracle/OCI/include/ocidem.h	64;"	d
FT_UPDATE	drivers/Oracle/OCI/include/ocidem.h	65;"	d
FUNCPROC_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        FUNCPROC_ATTR_COUNT = 4,$/;"	e	enum:oracle::occi::MetaData::AttrCount
FUNCTION	drivers/SQLite/sqlite3/sqlite3.c	9738;"	d	file:
FUZZY	kernel/TeAttribute.h	/^{ ORDINAL, NOMINAL, RATIO, INTERVAL, CYCLIC, PROBABILITY, FUZZY };$/;"	e	enum:TeMeasurementScale
FXMESA_ACCUM_SIZE	drivers/GL/fxmesa.h	53;"	d
FXMESA_ALPHA_SIZE	drivers/GL/fxmesa.h	50;"	d
FXMESA_COLORDEPTH	drivers/GL/fxmesa.h	54;"	d
FXMESA_DEPTH_SIZE	drivers/GL/fxmesa.h	51;"	d
FXMESA_DOUBLEBUFFER	drivers/GL/fxmesa.h	49;"	d
FXMESA_H	drivers/GL/fxmesa.h	30;"	d
FXMESA_MAJOR_VERSION	drivers/GL/fxmesa.h	41;"	d
FXMESA_MINOR_VERSION	drivers/GL/fxmesa.h	42;"	d
FXMESA_NONE	drivers/GL/fxmesa.h	48;"	d
FXMESA_SHARE_CONTEXT	drivers/GL/fxmesa.h	55;"	d
FXMESA_STENCIL_SIZE	drivers/GL/fxmesa.h	52;"	d
FatalError	stat/erro.h	5;"	d
FeatMatchingMethod	image_processing/TePDIMMIOMatching.hpp	/^      enum FeatMatchingMethod$/;"	g	class:TePDIMMIOMatching
Fetch	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Fetch()$/;"	f	class:StatementImpl
Fetch	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Fetch(IBPP::Row& row)$/;"	f	class:StatementImpl
FetchInit_OCIXADMethodEntry	drivers/Oracle/OCI/include/ocixad.h	/^  OCIXADMethodFetchInit     FetchInit_OCIXADMethodEntry;$/;"	m	struct:OCIXADMethodEntry
Fetch_OCIXADMethodEntry	drivers/Oracle/OCI/include/ocixad.h	/^  OCIXADMethodFetch         Fetch_OCIXADMethodEntry;$/;"	m	struct:OCIXADMethodEntry
Fila	stat/filaDouble.h	/^    typedef struct Fila {$/;"	s	class:TFilaDouble
Fila	stat/filaInt.h	/^    typedef struct Fila {$/;"	s	class:TFilaInt
Fila	stat/filaR.h	/^    typedef struct Fila {$/;"	s	class:TFilaR
FilaDoubleH	stat/filaDouble.h	3;"	d
FilaIntH	stat/filaInt.h	3;"	d
FilaRH	stat/filaR.h	3;"	d
Fila_ptr	stat/filaDouble.h	/^    }Fila_t,*Fila_ptr;$/;"	t	class:TFilaDouble	typeref:struct:TFilaDouble::Fila
Fila_ptr	stat/filaInt.h	/^    }Fila_t,*Fila_ptr;$/;"	t	class:TFilaInt	typeref:struct:TFilaInt::Fila
Fila_ptr	stat/filaR.h	/^    }Fila_t,*Fila_ptr;$/;"	t	class:TFilaR	typeref:struct:TFilaR::Fila
Fila_t	stat/filaDouble.h	/^    }Fila_t,*Fila_ptr;$/;"	t	class:TFilaDouble	typeref:struct:TFilaDouble::Fila
Fila_t	stat/filaInt.h	/^    }Fila_t,*Fila_ptr;$/;"	t	class:TFilaInt	typeref:struct:TFilaInt::Fila
Fila_t	stat/filaR.h	/^    }Fila_t,*Fila_ptr;$/;"	t	class:TFilaR	typeref:struct:TFilaR::Fila
FileChunk	drivers/SQLite/sqlite3/sqlite3.c	/^struct FileChunk {$/;"	s	file:
FileChunk	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct FileChunk FileChunk;$/;"	t	typeref:struct:FileChunk	file:
FilePoint	drivers/SQLite/sqlite3/sqlite3.c	/^struct FilePoint {$/;"	s	file:
FilePoint	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct FilePoint FilePoint;$/;"	t	typeref:struct:FilePoint	file:
FilePtr	kernel/TeStdFile.h	/^	FILE* FilePtr() { return file_; }$/;"	f	class:TeStdFile
FilterType	image_processing/TePDIWaveletAtrous.hpp	/^      enum FilterType $/;"	g	class:TePDIWaveletAtrous
FindFactory	kernel/TeGDriverFactory.cpp	/^std::string TeGDriverFactory::FindFactory(const std::string& fileName)$/;"	f	class:TeGDriverFactory
FindToken	drivers/Firebird/ibpp/core/_rb.cpp	/^char* RB::FindToken(char token)$/;"	f	class:RB
FindToken	drivers/Firebird/ibpp/core/_rb.cpp	/^char* RB::FindToken(char token, char subtoken)$/;"	f	class:RB
FireActions	drivers/Firebird/ibpp/core/events.cpp	/^void EventsImpl::FireActions()$/;"	f	class:EventsImpl
First	kernel/TeRedBlackTree.h	/^			NODE* First(void) const$/;"	f	class:TeREDBLACK::TeRBTree
Flag	drivers/Oracle/OCI/include/odci.h	/^   OCIInd Flag;$/;"	m	struct:ODCIExtTableInfo_ind
Flag	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        Flag;$/;"	m	struct:ODCIExtTableInfo
Flags	drivers/Oracle/OCI/include/odci.h	/^   OCIInd Flags;$/;"	m	struct:ODCIFuncInfo_ind
Flags	drivers/Oracle/OCI/include/odci.h	/^   OCIInd Flags;$/;"	m	struct:ODCIPredInfo_ind
Flags	drivers/Oracle/OCI/include/odci.h	/^   OCIInd Flags;$/;"	m	struct:ODCIQueryInfo_ind
Flags	drivers/Oracle/OCI/include/odci.h	/^   OCIInd Flags;$/;"	m	struct:ODCIStatsOptions_ind
Flags	drivers/Oracle/OCI/include/odci.h	/^   OCINumber       Flags;$/;"	m	struct:ODCIQueryInfo
Flags	drivers/Oracle/OCI/include/odci.h	/^   OCINumber  Flags;$/;"	m	struct:ODCIPredInfo
Flags	drivers/Oracle/OCI/include/odci.h	/^   OCINumber Flags;$/;"	m	struct:ODCIFuncInfo
Flags	drivers/Oracle/OCI/include/odci.h	/^   OCINumber Flags;$/;"	m	struct:ODCIStatsOptions
Fname_	kernel/TeFactory.h	/^	string  Fname_;$/;"	m	class:TeFactory
Font_direct	kernel/TeGraph.cpp	/^int  Font_direct[FONT_MAX] = {HORIZ_FONT,VERT_FONT};$/;"	v
Font_height	kernel/TeGraph.cpp	/^int  Font_height[FONT_MAX] = {15,15};$/;"	v
Font_width	kernel/TeGraph.cpp	/^int  Font_width[FONT_MAX]  = {9,9};$/;"	v
FormatMessageW	drivers/SQLite/sqlite3/sqlite3.c	31664;"	d	file:
Free	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Free()$/;"	f	class:RowImpl
Fts3Cursor	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3Cursor {$/;"	s	file:
Fts3Cursor	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3Cursor Fts3Cursor;$/;"	t	typeref:struct:Fts3Cursor	file:
Fts3DeferredToken	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3DeferredToken {$/;"	s	file:
Fts3DeferredToken	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3DeferredToken Fts3DeferredToken;$/;"	t	typeref:struct:Fts3DeferredToken	file:
Fts3Doclist	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3Doclist {$/;"	s	file:
Fts3Doclist	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3Doclist Fts3Doclist;$/;"	t	typeref:struct:Fts3Doclist	file:
Fts3Expr	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3Expr {$/;"	s	file:
Fts3Expr	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3Expr Fts3Expr;$/;"	t	typeref:struct:Fts3Expr	file:
Fts3Hash	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3Hash {$/;"	s	file:
Fts3Hash	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3Hash Fts3Hash;$/;"	t	typeref:struct:Fts3Hash	file:
Fts3HashElem	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3HashElem {$/;"	s	file:
Fts3HashElem	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3HashElem Fts3HashElem;$/;"	t	typeref:struct:Fts3HashElem	file:
Fts3Index	drivers/SQLite/sqlite3/sqlite3.c	/^  struct Fts3Index {$/;"	s	struct:Fts3Table	file:
Fts3MultiSegReader	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3MultiSegReader {$/;"	s	file:
Fts3MultiSegReader	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3MultiSegReader Fts3MultiSegReader;$/;"	t	typeref:struct:Fts3MultiSegReader	file:
Fts3Phrase	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3Phrase {$/;"	s	file:
Fts3Phrase	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3Phrase Fts3Phrase;$/;"	t	typeref:struct:Fts3Phrase	file:
Fts3PhraseToken	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3PhraseToken {$/;"	s	file:
Fts3PhraseToken	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3PhraseToken Fts3PhraseToken;$/;"	t	typeref:struct:Fts3PhraseToken	file:
Fts3SegFilter	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3SegFilter {$/;"	s	file:
Fts3SegFilter	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3SegFilter Fts3SegFilter;$/;"	t	typeref:struct:Fts3SegFilter	file:
Fts3SegReader	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3SegReader {$/;"	s	file:
Fts3SegReader	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3SegReader Fts3SegReader;$/;"	t	typeref:struct:Fts3SegReader	file:
Fts3Table	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3Table {$/;"	s	file:
Fts3Table	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3Table Fts3Table;$/;"	t	typeref:struct:Fts3Table	file:
Fts3TokenAndCost	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3TokenAndCost {$/;"	s	file:
Fts3TokenAndCost	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3TokenAndCost Fts3TokenAndCost;$/;"	t	typeref:struct:Fts3TokenAndCost	file:
Fts3auxColstats	drivers/SQLite/sqlite3/sqlite3.c	/^  struct Fts3auxColstats {$/;"	s	struct:Fts3auxCursor	file:
Fts3auxCursor	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3auxCursor {$/;"	s	file:
Fts3auxCursor	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3auxCursor Fts3auxCursor;$/;"	t	typeref:struct:Fts3auxCursor	file:
Fts3auxTable	drivers/SQLite/sqlite3/sqlite3.c	/^struct Fts3auxTable {$/;"	s	file:
Fts3auxTable	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Fts3auxTable Fts3auxTable;$/;"	t	typeref:struct:Fts3auxTable	file:
FullRangeLutRemapLevels	image_processing/TePDIContrast.cpp	/^bool TePDIContrast::FullRangeLutRemapLevels( $/;"	f	class:TePDIContrast
FuncDef	drivers/SQLite/sqlite3/sqlite3.c	/^struct FuncDef {$/;"	s	file:
FuncDef	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct FuncDef FuncDef;$/;"	t	typeref:struct:FuncDef	file:
FuncDefHash	drivers/SQLite/sqlite3/sqlite3.c	/^struct FuncDefHash {$/;"	s	file:
FuncDefHash	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct FuncDefHash FuncDefHash;$/;"	t	typeref:struct:FuncDefHash	file:
FuncDestructor	drivers/SQLite/sqlite3/sqlite3.c	/^struct FuncDestructor {$/;"	s	file:
FuncDestructor	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct FuncDestructor FuncDestructor;$/;"	t	typeref:struct:FuncDestructor	file:
FunctPtrT	kernel/TeFunctionCallThreadJob.h	/^    typedef void (*FunctPtrT)( void* parsPtr );      $/;"	t	class:TeFunctionCallThreadJob
Function	kernel/TeGraph.cpp	/^int (*Function[])(Real, Real_Vector, unsigned) =$/;"	v
GAMMA	image_processing/TePDISimplex.cpp	84;"	d	file:
GARBAGE_COLLECTED	drivers/Oracle/OCI/include/occiObjects.h	/^        enum {NULL_INFO = 0x0001, GARBAGE_COLLECTED = 0x0002,$/;"	e	enum:oracle::occi::PObject::__anon83
GDALGTiffTagExtender	kernel/TeDecoderTIFF.cpp	/^static void GDALGTiffTagExtender(TIFF *tif)$/;"	f	file:
GDS	drivers/Firebird/ibpp/core/_ibpp.h	/^	GDS()$/;"	f	struct:ibpp_internals::GDS
GDS	drivers/Firebird/ibpp/core/_ibpp.h	/^struct GDS$/;"	s	namespace:ibpp_internals
GDSVersion	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	int GDSVersion()$/;"	f	namespace:IBPP
GDS_QUAD	drivers/Firebird/ibpp/core/ibase.h	/^typedef struct GDS_QUAD_t GDS_QUAD;$/;"	t	typeref:struct:GDS_QUAD_t
GDS_QUAD_t	drivers/Firebird/ibpp/core/ibase.h	/^struct GDS_QUAD_t {$/;"	s
GDS__QUAD	drivers/Firebird/ibpp/core/ibase.h	/^typedef GDS_QUAD GDS__QUAD;$/;"	t
GEOMETRY_REPRESENTATION_MISMATCH	kernel/TeErrorLog.h	/^	GEOMETRY_REPRESENTATION_MISMATCH,$/;"	e	enum:TeErrorType
GETPROCTIMES	drivers/SQLite/sqlite3/shell.c	/^typedef BOOL (WINAPI *GETPROCTIMES)(HANDLE, LPFILETIME, LPFILETIME, LPFILETIME, LPFILETIME);$/;"	t	file:
GET_BLACK_PIXEL	drivers/GL/xmesa_x.h	81;"	d
GET_BLACK_PIXEL	drivers/GL/xmesa_xf86.h	161;"	d
GET_BLUEMASK	drivers/GL/xmesa_x.h	79;"	d
GET_BLUEMASK	drivers/GL/xmesa_xf86.h	159;"	d
GET_COLORMAP_SIZE	drivers/GL/xmesa_x.h	76;"	d
GET_COLORMAP_SIZE	drivers/GL/xmesa_xf86.h	156;"	d
GET_GREENMASK	drivers/GL/xmesa_x.h	78;"	d
GET_GREENMASK	drivers/GL/xmesa_xf86.h	158;"	d
GET_RECORD	drivers/Oracle/OCI/include/cdemodp0.h	92;"	d
GET_REDMASK	drivers/GL/xmesa_x.h	77;"	d
GET_REDMASK	drivers/GL/xmesa_xf86.h	157;"	d
GET_VISUAL_DEPTH	drivers/GL/xmesa_x.h	80;"	d
GET_VISUAL_DEPTH	drivers/GL/xmesa_xf86.h	160;"	d
GGIMESA_H	drivers/GL/ggimesa.h	25;"	d
GGIMESA_MAJOR_VERSION	drivers/GL/ggimesa.h	27;"	d
GGIMESA_MINOR_VERSION	drivers/GL/ggimesa.h	28;"	d
GLAPI	drivers/GL/gl.h	55;"	d
GLAPI	drivers/GL/gl.h	57;"	d
GLAPI	drivers/GL/gl.h	59;"	d
GLAPI	drivers/GL/gl.h	63;"	d
GLAPI	drivers/GL/gl.h	66;"	d
GLAPI	drivers/GL/gl.h	96;"	d
GLAPI	drivers/GL/glext.h	49;"	d
GLAPI	drivers/GL/glu.h	48;"	d
GLAPI	drivers/GL/glxext.h	49;"	d
GLAPI	drivers/GL/mesa_wgl.h	44;"	d
GLAPI	drivers/GL/mesa_wgl.h	47;"	d
GLAPI	drivers/GL/mesa_wgl.h	50;"	d
GLAPI	drivers/GL/mesa_wgl.h	56;"	d
GLAPIENTRY	drivers/GL/gl.h	100;"	d
GLAPIENTRY	drivers/GL/gl.h	61;"	d
GLAPIENTRY	drivers/GL/gl.h	64;"	d
GLAPIENTRY	drivers/GL/gl.h	67;"	d
GLAPIENTRY	drivers/GL/glu.h	40;"	d
GLAPIENTRY	drivers/GL/mesa_wgl.h	53;"	d
GLAPIENTRY	drivers/GL/mesa_wgl.h	57;"	d
GLAPIENTRY	drivers/GL/mglmesa.h	52;"	d
GLAPIENTRYP	drivers/GL/gl.h	113;"	d
GLAPIENTRYP	drivers/GL/glu.h	44;"	d
GLCMMatrixCacheKeyT	image_processing/TePDIHaralick.hpp	/^      typedef std::pair< unsigned int, unsigned int > GLCMMatrixCacheKeyT;$/;"	t	class:TePDIHaralick
GLCMMatrixCacheNodeT	image_processing/TePDIHaralick.hpp	/^          GLCMMatrixCacheNodeT()$/;"	f	class:TePDIHaralick::GLCMMatrixCacheNodeT
GLCMMatrixCacheNodeT	image_processing/TePDIHaralick.hpp	/^      class GLCMMatrixCacheNodeT$/;"	c	class:TePDIHaralick
GLCMMatrixCacheT	image_processing/TePDIHaralick.hpp	/^        GLCMMatrixCacheT;    $/;"	t	class:TePDIHaralick
GLCMMatrixKeyT	image_processing/TePDIHaralick.hpp	/^      typedef std::pair< double, double > GLCMMatrixKeyT;$/;"	t	class:TePDIHaralick
GLCMMatrixT	image_processing/TePDIHaralick.hpp	/^      typedef std::map< GLCMMatrixKeyT, double > GLCMMatrixT;$/;"	t	class:TePDIHaralick
GLFBDEV_ACCUM_SIZE	drivers/GL/glfbdev.h	50;"	d
GLFBDEV_COLOR_INDEX	drivers/GL/glfbdev.h	47;"	d
GLFBDEV_DEPTH_SIZE	drivers/GL/glfbdev.h	48;"	d
GLFBDEV_DOUBLE_BUFFER	drivers/GL/glfbdev.h	46;"	d
GLFBDEV_H	drivers/GL/glfbdev.h	27;"	d
GLFBDEV_LEVEL	drivers/GL/glfbdev.h	51;"	d
GLFBDEV_NONE	drivers/GL/glfbdev.h	52;"	d
GLFBDEV_STENCIL_SIZE	drivers/GL/glfbdev.h	49;"	d
GLFBDEV_VENDOR	drivers/GL/glfbdev.h	56;"	d
GLFBDEV_VERSION	drivers/GL/glfbdev.h	55;"	d
GLFBDEV_VERSION_1_0	drivers/GL/glfbdev.h	42;"	d
GLFBDevBufferPtr	drivers/GL/glfbdev.h	/^typedef struct GLFBDevBufferRec *GLFBDevBufferPtr;$/;"	t	typeref:struct:GLFBDevBufferRec
GLFBDevContextPtr	drivers/GL/glfbdev.h	/^typedef struct GLFBDevContextRec *GLFBDevContextPtr;$/;"	t	typeref:struct:GLFBDevContextRec
GLFBDevProc	drivers/GL/glfbdev.h	/^typedef void (*GLFBDevProc)();$/;"	t
GLFBDevVisualPtr	drivers/GL/glfbdev.h	/^typedef struct GLFBDevVisualRec *GLFBDevVisualPtr;$/;"	t	typeref:struct:GLFBDevVisualRec
GLOBAL	drivers/SQLite/sqlite3/sqlite3.c	7875;"	d	file:
GLOBAL	drivers/SQLite/sqlite3/sqlite3.c	7881;"	d	file:
GLUTAPI	drivers/GL/glut.h	119;"	d
GLUTAPI	drivers/GL/glut.h	121;"	d
GLUTAPI	drivers/GL/glut.h	123;"	d
GLUTAPI	drivers/GL/glut.h	199;"	d
GLUTAPIENTRY	drivers/GL/glut.h	112;"	d
GLUTAPIENTRY	drivers/GL/glut.h	114;"	d
GLUTAPIENTRY	drivers/GL/glut.h	196;"	d
GLUTAPIENTRYV	drivers/GL/glut.h	105;"	d
GLUTAPIENTRYV	drivers/GL/glut.h	197;"	d
GLUTCALLBACK	drivers/GL/glut.h	102;"	d
GLUTCALLBACK	drivers/GL/glut.h	198;"	d
GLUTSHAPES_H	drivers/GL/uglglutshapes.h	10;"	d
GLUT_ACCUM	drivers/GL/glut.h	277;"	d
GLUT_ACTIVE_ALT	drivers/GL/glut.h	495;"	d
GLUT_ACTIVE_CTRL	drivers/GL/glut.h	494;"	d
GLUT_ACTIVE_SHIFT	drivers/GL/glut.h	493;"	d
GLUT_ALPHA	drivers/GL/glut.h	278;"	d
GLUT_API_VERSION	drivers/GL/glut.h	228;"	d
GLUT_BITMAP_8_BY_13	drivers/GL/glut.h	358;"	d
GLUT_BITMAP_8_BY_13	drivers/GL/glut.h	386;"	d
GLUT_BITMAP_9_BY_15	drivers/GL/glut.h	357;"	d
GLUT_BITMAP_9_BY_15	drivers/GL/glut.h	385;"	d
GLUT_BITMAP_HELVETICA_10	drivers/GL/glut.h	362;"	d
GLUT_BITMAP_HELVETICA_10	drivers/GL/glut.h	390;"	d
GLUT_BITMAP_HELVETICA_12	drivers/GL/glut.h	363;"	d
GLUT_BITMAP_HELVETICA_12	drivers/GL/glut.h	391;"	d
GLUT_BITMAP_HELVETICA_18	drivers/GL/glut.h	364;"	d
GLUT_BITMAP_HELVETICA_18	drivers/GL/glut.h	392;"	d
GLUT_BITMAP_TIMES_ROMAN_10	drivers/GL/glut.h	359;"	d
GLUT_BITMAP_TIMES_ROMAN_10	drivers/GL/glut.h	387;"	d
GLUT_BITMAP_TIMES_ROMAN_24	drivers/GL/glut.h	360;"	d
GLUT_BITMAP_TIMES_ROMAN_24	drivers/GL/glut.h	388;"	d
GLUT_BLUE	drivers/GL/glut.h	345;"	d
GLUT_CURSOR_BOTTOM_LEFT_CORNER	drivers/GL/glut.h	521;"	d
GLUT_CURSOR_BOTTOM_RIGHT_CORNER	drivers/GL/glut.h	520;"	d
GLUT_CURSOR_BOTTOM_SIDE	drivers/GL/glut.h	515;"	d
GLUT_CURSOR_CROSSHAIR	drivers/GL/glut.h	509;"	d
GLUT_CURSOR_CYCLE	drivers/GL/glut.h	505;"	d
GLUT_CURSOR_DESTROY	drivers/GL/glut.h	503;"	d
GLUT_CURSOR_FULL_CROSSHAIR	drivers/GL/glut.h	527;"	d
GLUT_CURSOR_HELP	drivers/GL/glut.h	504;"	d
GLUT_CURSOR_INFO	drivers/GL/glut.h	502;"	d
GLUT_CURSOR_INHERIT	drivers/GL/glut.h	523;"	d
GLUT_CURSOR_LEFT_ARROW	drivers/GL/glut.h	500;"	d
GLUT_CURSOR_LEFT_RIGHT	drivers/GL/glut.h	512;"	d
GLUT_CURSOR_LEFT_SIDE	drivers/GL/glut.h	516;"	d
GLUT_CURSOR_NONE	drivers/GL/glut.h	525;"	d
GLUT_CURSOR_RIGHT_ARROW	drivers/GL/glut.h	499;"	d
GLUT_CURSOR_RIGHT_SIDE	drivers/GL/glut.h	517;"	d
GLUT_CURSOR_SPRAY	drivers/GL/glut.h	506;"	d
GLUT_CURSOR_TEXT	drivers/GL/glut.h	508;"	d
GLUT_CURSOR_TOP_LEFT_CORNER	drivers/GL/glut.h	518;"	d
GLUT_CURSOR_TOP_RIGHT_CORNER	drivers/GL/glut.h	519;"	d
GLUT_CURSOR_TOP_SIDE	drivers/GL/glut.h	514;"	d
GLUT_CURSOR_UP_DOWN	drivers/GL/glut.h	511;"	d
GLUT_CURSOR_WAIT	drivers/GL/glut.h	507;"	d
GLUT_DEFINED__CRTIMP	drivers/GL/glut.h	95;"	d
GLUT_DEFINED___CDECL	drivers/GL/glut.h	81;"	d
GLUT_DEPTH	drivers/GL/glut.h	279;"	d
GLUT_DEVICE_IGNORE_KEY_REPEAT	drivers/GL/glut.h	456;"	d
GLUT_DEVICE_KEY_REPEAT	drivers/GL/glut.h	457;"	d
GLUT_DISPLAY_MODE_POSSIBLE	drivers/GL/glut.h	429;"	d
GLUT_DOUBLE	drivers/GL/glut.h	276;"	d
GLUT_DOWN	drivers/GL/glut.h	295;"	d
GLUT_ELAPSED_TIME	drivers/GL/glut.h	436;"	d
GLUT_ENTERED	drivers/GL/glut.h	326;"	d
GLUT_FCB_BUTTON_BOX	drivers/GL/glutf90.h	37;"	d
GLUT_FCB_DIALS	drivers/GL/glutf90.h	38;"	d
GLUT_FCB_DISPLAY	drivers/GL/glutf90.h	25;"	d
GLUT_FCB_ENTRY	drivers/GL/glutf90.h	30;"	d
GLUT_FCB_JOYSTICK	drivers/GL/glutf90.h	44;"	d
GLUT_FCB_KEYBOARD	drivers/GL/glutf90.h	31;"	d
GLUT_FCB_KEYBOARD_UP	drivers/GL/glutf90.h	32;"	d
GLUT_FCB_MOTION	drivers/GL/glutf90.h	28;"	d
GLUT_FCB_MOUSE	drivers/GL/glutf90.h	27;"	d
GLUT_FCB_OVERLAY_DISPLAY	drivers/GL/glutf90.h	46;"	d
GLUT_FCB_PASSIVE	drivers/GL/glutf90.h	29;"	d
GLUT_FCB_RESHAPE	drivers/GL/glutf90.h	26;"	d
GLUT_FCB_SELECT	drivers/GL/glutf90.h	47;"	d
GLUT_FCB_SPACE_BUTTON	drivers/GL/glutf90.h	41;"	d
GLUT_FCB_SPACE_MOTION	drivers/GL/glutf90.h	39;"	d
GLUT_FCB_SPACE_ROTATE	drivers/GL/glutf90.h	40;"	d
GLUT_FCB_SPECIAL	drivers/GL/glutf90.h	35;"	d
GLUT_FCB_SPECIAL_UP	drivers/GL/glutf90.h	36;"	d
GLUT_FCB_TABLET_BUTTON	drivers/GL/glutf90.h	43;"	d
GLUT_FCB_TABLET_MOTION	drivers/GL/glutf90.h	42;"	d
GLUT_FCB_TIMER	drivers/GL/glutf90.h	48;"	d
GLUT_FCB_VISIBILITY	drivers/GL/glutf90.h	34;"	d
GLUT_FCB_WINDOW_STATUS	drivers/GL/glutf90.h	33;"	d
GLUT_FULLY_COVERED	drivers/GL/glut.h	340;"	d
GLUT_FULLY_RETAINED	drivers/GL/glut.h	338;"	d
GLUT_GAME_MODE_ACTIVE	drivers/GL/glut.h	730;"	d
GLUT_GAME_MODE_DISPLAY_CHANGED	drivers/GL/glut.h	736;"	d
GLUT_GAME_MODE_HEIGHT	drivers/GL/glut.h	733;"	d
GLUT_GAME_MODE_PIXEL_DEPTH	drivers/GL/glut.h	734;"	d
GLUT_GAME_MODE_POSSIBLE	drivers/GL/glut.h	731;"	d
GLUT_GAME_MODE_REFRESH_RATE	drivers/GL/glut.h	735;"	d
GLUT_GAME_MODE_WIDTH	drivers/GL/glut.h	732;"	d
GLUT_GREEN	drivers/GL/glut.h	344;"	d
GLUT_HAS_DIAL_AND_BUTTON_BOX	drivers/GL/glut.h	447;"	d
GLUT_HAS_JOYSTICK	drivers/GL/glut.h	458;"	d
GLUT_HAS_KEYBOARD	drivers/GL/glut.h	444;"	d
GLUT_HAS_MOUSE	drivers/GL/glut.h	445;"	d
GLUT_HAS_OVERLAY	drivers/GL/glut.h	469;"	d
GLUT_HAS_SPACEBALL	drivers/GL/glut.h	446;"	d
GLUT_HAS_TABLET	drivers/GL/glut.h	448;"	d
GLUT_HIDDEN	drivers/GL/glut.h	337;"	d
GLUT_INDEX	drivers/GL/glut.h	274;"	d
GLUT_INIT_DISPLAY_MODE	drivers/GL/glut.h	434;"	d
GLUT_INIT_WINDOW_HEIGHT	drivers/GL/glut.h	433;"	d
GLUT_INIT_WINDOW_WIDTH	drivers/GL/glut.h	432;"	d
GLUT_INIT_WINDOW_X	drivers/GL/glut.h	430;"	d
GLUT_INIT_WINDOW_Y	drivers/GL/glut.h	431;"	d
GLUT_JOYSTICK_AXES	drivers/GL/glut.h	461;"	d
GLUT_JOYSTICK_BUTTONS	drivers/GL/glut.h	460;"	d
GLUT_JOYSTICK_BUTTON_A	drivers/GL/glut.h	719;"	d
GLUT_JOYSTICK_BUTTON_B	drivers/GL/glut.h	720;"	d
GLUT_JOYSTICK_BUTTON_C	drivers/GL/glut.h	721;"	d
GLUT_JOYSTICK_BUTTON_D	drivers/GL/glut.h	722;"	d
GLUT_JOYSTICK_POLL_RATE	drivers/GL/glut.h	462;"	d
GLUT_KEY_DOWN	drivers/GL/glut.h	316;"	d
GLUT_KEY_END	drivers/GL/glut.h	320;"	d
GLUT_KEY_F1	drivers/GL/glut.h	300;"	d
GLUT_KEY_F10	drivers/GL/glut.h	309;"	d
GLUT_KEY_F11	drivers/GL/glut.h	310;"	d
GLUT_KEY_F12	drivers/GL/glut.h	311;"	d
GLUT_KEY_F2	drivers/GL/glut.h	301;"	d
GLUT_KEY_F3	drivers/GL/glut.h	302;"	d
GLUT_KEY_F4	drivers/GL/glut.h	303;"	d
GLUT_KEY_F5	drivers/GL/glut.h	304;"	d
GLUT_KEY_F6	drivers/GL/glut.h	305;"	d
GLUT_KEY_F7	drivers/GL/glut.h	306;"	d
GLUT_KEY_F8	drivers/GL/glut.h	307;"	d
GLUT_KEY_F9	drivers/GL/glut.h	308;"	d
GLUT_KEY_HOME	drivers/GL/glut.h	319;"	d
GLUT_KEY_INSERT	drivers/GL/glut.h	321;"	d
GLUT_KEY_LEFT	drivers/GL/glut.h	313;"	d
GLUT_KEY_PAGE_DOWN	drivers/GL/glut.h	318;"	d
GLUT_KEY_PAGE_UP	drivers/GL/glut.h	317;"	d
GLUT_KEY_REPEAT_DEFAULT	drivers/GL/glut.h	716;"	d
GLUT_KEY_REPEAT_OFF	drivers/GL/glut.h	714;"	d
GLUT_KEY_REPEAT_ON	drivers/GL/glut.h	715;"	d
GLUT_KEY_RIGHT	drivers/GL/glut.h	315;"	d
GLUT_KEY_UP	drivers/GL/glut.h	314;"	d
GLUT_LAYER_IN_USE	drivers/GL/glut.h	468;"	d
GLUT_LEFT	drivers/GL/glut.h	325;"	d
GLUT_LEFT_BUTTON	drivers/GL/glut.h	290;"	d
GLUT_LUMINANCE	drivers/GL/glut.h	286;"	d
GLUT_MENU_IN_USE	drivers/GL/glut.h	330;"	d
GLUT_MENU_NOT_IN_USE	drivers/GL/glut.h	329;"	d
GLUT_MENU_NUM_ITEMS	drivers/GL/glut.h	428;"	d
GLUT_MIDDLE_BUTTON	drivers/GL/glut.h	291;"	d
GLUT_MULTISAMPLE	drivers/GL/glut.h	282;"	d
GLUT_NORMAL	drivers/GL/glut.h	348;"	d
GLUT_NORMAL	drivers/GL/glut.h	489;"	d
GLUT_NORMAL_DAMAGED	drivers/GL/glut.h	471;"	d
GLUT_NOT_VISIBLE	drivers/GL/glut.h	333;"	d
GLUT_NUM_BUTTON_BOX_BUTTONS	drivers/GL/glut.h	451;"	d
GLUT_NUM_DIALS	drivers/GL/glut.h	452;"	d
GLUT_NUM_MOUSE_BUTTONS	drivers/GL/glut.h	449;"	d
GLUT_NUM_SPACEBALL_BUTTONS	drivers/GL/glut.h	450;"	d
GLUT_NUM_TABLET_BUTTONS	drivers/GL/glut.h	453;"	d
GLUT_OVERLAY	drivers/GL/glut.h	349;"	d
GLUT_OVERLAY	drivers/GL/glut.h	490;"	d
GLUT_OVERLAY_DAMAGED	drivers/GL/glut.h	472;"	d
GLUT_OVERLAY_POSSIBLE	drivers/GL/glut.h	467;"	d
GLUT_OWNS_JOYSTICK	drivers/GL/glut.h	459;"	d
GLUT_PARTIALLY_RETAINED	drivers/GL/glut.h	339;"	d
GLUT_RED	drivers/GL/glut.h	343;"	d
GLUT_RGB	drivers/GL/glut.h	272;"	d
GLUT_RGBA	drivers/GL/glut.h	273;"	d
GLUT_RIGHT_BUTTON	drivers/GL/glut.h	292;"	d
GLUT_SCREEN_HEIGHT	drivers/GL/glut.h	425;"	d
GLUT_SCREEN_HEIGHT_MM	drivers/GL/glut.h	427;"	d
GLUT_SCREEN_WIDTH	drivers/GL/glut.h	424;"	d
GLUT_SCREEN_WIDTH_MM	drivers/GL/glut.h	426;"	d
GLUT_SINGLE	drivers/GL/glut.h	275;"	d
GLUT_STENCIL	drivers/GL/glut.h	280;"	d
GLUT_STEREO	drivers/GL/glut.h	283;"	d
GLUT_STROKE_MONO_ROMAN	drivers/GL/glut.h	354;"	d
GLUT_STROKE_MONO_ROMAN	drivers/GL/glut.h	373;"	d
GLUT_STROKE_ROMAN	drivers/GL/glut.h	353;"	d
GLUT_STROKE_ROMAN	drivers/GL/glut.h	372;"	d
GLUT_TRANSPARENT_INDEX	drivers/GL/glut.h	470;"	d
GLUT_UP	drivers/GL/glut.h	296;"	d
GLUT_VIDEO_RESIZE_HEIGHT	drivers/GL/glut.h	485;"	d
GLUT_VIDEO_RESIZE_HEIGHT_DELTA	drivers/GL/glut.h	481;"	d
GLUT_VIDEO_RESIZE_IN_USE	drivers/GL/glut.h	477;"	d
GLUT_VIDEO_RESIZE_POSSIBLE	drivers/GL/glut.h	476;"	d
GLUT_VIDEO_RESIZE_WIDTH	drivers/GL/glut.h	484;"	d
GLUT_VIDEO_RESIZE_WIDTH_DELTA	drivers/GL/glut.h	480;"	d
GLUT_VIDEO_RESIZE_X	drivers/GL/glut.h	482;"	d
GLUT_VIDEO_RESIZE_X_DELTA	drivers/GL/glut.h	478;"	d
GLUT_VIDEO_RESIZE_Y	drivers/GL/glut.h	483;"	d
GLUT_VIDEO_RESIZE_Y_DELTA	drivers/GL/glut.h	479;"	d
GLUT_VISIBLE	drivers/GL/glut.h	334;"	d
GLUT_WINDOW_ACCUM_ALPHA_SIZE	drivers/GL/glut.h	411;"	d
GLUT_WINDOW_ACCUM_BLUE_SIZE	drivers/GL/glut.h	410;"	d
GLUT_WINDOW_ACCUM_GREEN_SIZE	drivers/GL/glut.h	409;"	d
GLUT_WINDOW_ACCUM_RED_SIZE	drivers/GL/glut.h	408;"	d
GLUT_WINDOW_ALPHA_SIZE	drivers/GL/glut.h	407;"	d
GLUT_WINDOW_BLUE_SIZE	drivers/GL/glut.h	406;"	d
GLUT_WINDOW_BUFFER_SIZE	drivers/GL/glut.h	401;"	d
GLUT_WINDOW_COLORMAP_SIZE	drivers/GL/glut.h	416;"	d
GLUT_WINDOW_CURSOR	drivers/GL/glut.h	422;"	d
GLUT_WINDOW_DEPTH_SIZE	drivers/GL/glut.h	403;"	d
GLUT_WINDOW_DOUBLEBUFFER	drivers/GL/glut.h	412;"	d
GLUT_WINDOW_FORMAT_ID	drivers/GL/glut.h	439;"	d
GLUT_WINDOW_GREEN_SIZE	drivers/GL/glut.h	405;"	d
GLUT_WINDOW_HEIGHT	drivers/GL/glut.h	400;"	d
GLUT_WINDOW_NUM_CHILDREN	drivers/GL/glut.h	415;"	d
GLUT_WINDOW_NUM_SAMPLES	drivers/GL/glut.h	418;"	d
GLUT_WINDOW_PARENT	drivers/GL/glut.h	414;"	d
GLUT_WINDOW_RED_SIZE	drivers/GL/glut.h	404;"	d
GLUT_WINDOW_RGBA	drivers/GL/glut.h	413;"	d
GLUT_WINDOW_STENCIL_SIZE	drivers/GL/glut.h	402;"	d
GLUT_WINDOW_STEREO	drivers/GL/glut.h	419;"	d
GLUT_WINDOW_WIDTH	drivers/GL/glut.h	399;"	d
GLUT_WINDOW_X	drivers/GL/glut.h	397;"	d
GLUT_WINDOW_Y	drivers/GL/glut.h	398;"	d
GLUT_XLIB_IMPLEMENTATION	drivers/GL/glut.h	268;"	d
GLUTbuttonBoxFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTbuttonBoxFCB) (int *, int *);$/;"	t
GLUTdialsFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTdialsFCB) (int *, int *);$/;"	t
GLUTdisplayFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTdisplayFCB) (void);$/;"	t
GLUTentryFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTentryFCB) (int *);$/;"	t
GLUTidleFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTidleFCB) (void);$/;"	t
GLUTjoystickFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTjoystickFCB) (unsigned int *buttonMask, int *x, int *y, int *z);$/;"	t
GLUTkeyboardFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTkeyboardFCB) (int *, int *, int *);$/;"	t
GLUTmenuStateFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTmenuStateFCB) (int *);  \/* DEPRICATED. *\/$/;"	t
GLUTmenuStatusFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTmenuStatusFCB) (int *, int *, int *);$/;"	t
GLUTmotionFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTmotionFCB) (int *, int *);$/;"	t
GLUTmouseFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTmouseFCB) (int *, int *, int *, int *);$/;"	t
GLUTpassiveFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTpassiveFCB) (int *, int *);$/;"	t
GLUTproc	drivers/GL/glut.h	/^typedef void (*GLUTproc)();$/;"	t
GLUTreshapeFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTreshapeFCB) (int *, int *);$/;"	t
GLUTselectFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTselectFCB) (int *);$/;"	t
GLUTspaceButtonFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTspaceButtonFCB) (int *, int *);$/;"	t
GLUTspaceMotionFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTspaceMotionFCB) (int *, int *, int *);$/;"	t
GLUTspaceRotateFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTspaceRotateFCB) (int *, int *, int *);$/;"	t
GLUTspecialFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTspecialFCB) (int *, int *, int *);$/;"	t
GLUTtabletButtonFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTtabletButtonFCB) (int *, int *, int *, int *);$/;"	t
GLUTtabletMotionFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTtabletMotionFCB) (int *, int *);$/;"	t
GLUTtimerFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTtimerFCB) (int *);$/;"	t
GLUTvisibilityFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTvisibilityFCB) (int *);$/;"	t
GLUTwindowStatusFCB	drivers/GL/glutf90.h	/^typedef void (GLUTCALLBACK *GLUTwindowStatusFCB) (int *);$/;"	t
GLU_AUTO_LOAD_MATRIX	drivers/GL/glu.h	154;"	d
GLU_BEGIN	drivers/GL/glu.h	202;"	d
GLU_CCW	drivers/GL/glu.h	220;"	d
GLU_CULLING	drivers/GL/glu.h	155;"	d
GLU_CW	drivers/GL/glu.h	219;"	d
GLU_DISPLAY_MODE	drivers/GL/glu.h	157;"	d
GLU_DOMAIN_DISTANCE	drivers/GL/glu.h	176;"	d
GLU_EDGE_FLAG	drivers/GL/glu.h	209;"	d
GLU_END	drivers/GL/glu.h	206;"	d
GLU_ERROR	drivers/GL/glu.h	88;"	d
GLU_EXTENSIONS	drivers/GL/glu.h	72;"	d
GLU_EXTERIOR	drivers/GL/glu.h	222;"	d
GLU_EXT_nurbs_tessellator	drivers/GL/glu.h	59;"	d
GLU_EXT_object_space_tess	drivers/GL/glu.h	58;"	d
GLU_FALSE	drivers/GL/glu.h	62;"	d
GLU_FILL	drivers/GL/glu.h	185;"	d
GLU_FLAT	drivers/GL/glu.h	193;"	d
GLU_INCOMPATIBLE_GL_VERSION	drivers/GL/glu.h	78;"	d
GLU_INSIDE	drivers/GL/glu.h	198;"	d
GLU_INTERIOR	drivers/GL/glu.h	221;"	d
GLU_INVALID_ENUM	drivers/GL/glu.h	75;"	d
GLU_INVALID_OPERATION	drivers/GL/glu.h	79;"	d
GLU_INVALID_VALUE	drivers/GL/glu.h	76;"	d
GLU_LINE	drivers/GL/glu.h	184;"	d
GLU_MANGLE_H	drivers/GL/glu_mangle.h	23;"	d
GLU_MAP1_TRIM_2	drivers/GL/glu.h	179;"	d
GLU_MAP1_TRIM_3	drivers/GL/glu.h	180;"	d
GLU_NONE	drivers/GL/glu.h	194;"	d
GLU_NURBS_BEGIN	drivers/GL/glu.h	89;"	d
GLU_NURBS_BEGIN_DATA	drivers/GL/glu.h	101;"	d
GLU_NURBS_BEGIN_DATA_EXT	drivers/GL/glu.h	102;"	d
GLU_NURBS_BEGIN_EXT	drivers/GL/glu.h	90;"	d
GLU_NURBS_COLOR	drivers/GL/glu.h	95;"	d
GLU_NURBS_COLOR_DATA	drivers/GL/glu.h	107;"	d
GLU_NURBS_COLOR_DATA_EXT	drivers/GL/glu.h	108;"	d
GLU_NURBS_COLOR_EXT	drivers/GL/glu.h	96;"	d
GLU_NURBS_END	drivers/GL/glu.h	99;"	d
GLU_NURBS_END_DATA	drivers/GL/glu.h	111;"	d
GLU_NURBS_END_DATA_EXT	drivers/GL/glu.h	112;"	d
GLU_NURBS_END_EXT	drivers/GL/glu.h	100;"	d
GLU_NURBS_ERROR	drivers/GL/glu.h	87;"	d
GLU_NURBS_ERROR1	drivers/GL/glu.h	115;"	d
GLU_NURBS_ERROR10	drivers/GL/glu.h	124;"	d
GLU_NURBS_ERROR11	drivers/GL/glu.h	125;"	d
GLU_NURBS_ERROR12	drivers/GL/glu.h	126;"	d
GLU_NURBS_ERROR13	drivers/GL/glu.h	127;"	d
GLU_NURBS_ERROR14	drivers/GL/glu.h	128;"	d
GLU_NURBS_ERROR15	drivers/GL/glu.h	129;"	d
GLU_NURBS_ERROR16	drivers/GL/glu.h	130;"	d
GLU_NURBS_ERROR17	drivers/GL/glu.h	131;"	d
GLU_NURBS_ERROR18	drivers/GL/glu.h	132;"	d
GLU_NURBS_ERROR19	drivers/GL/glu.h	133;"	d
GLU_NURBS_ERROR2	drivers/GL/glu.h	116;"	d
GLU_NURBS_ERROR20	drivers/GL/glu.h	134;"	d
GLU_NURBS_ERROR21	drivers/GL/glu.h	135;"	d
GLU_NURBS_ERROR22	drivers/GL/glu.h	136;"	d
GLU_NURBS_ERROR23	drivers/GL/glu.h	137;"	d
GLU_NURBS_ERROR24	drivers/GL/glu.h	138;"	d
GLU_NURBS_ERROR25	drivers/GL/glu.h	139;"	d
GLU_NURBS_ERROR26	drivers/GL/glu.h	140;"	d
GLU_NURBS_ERROR27	drivers/GL/glu.h	141;"	d
GLU_NURBS_ERROR28	drivers/GL/glu.h	142;"	d
GLU_NURBS_ERROR29	drivers/GL/glu.h	143;"	d
GLU_NURBS_ERROR3	drivers/GL/glu.h	117;"	d
GLU_NURBS_ERROR30	drivers/GL/glu.h	144;"	d
GLU_NURBS_ERROR31	drivers/GL/glu.h	145;"	d
GLU_NURBS_ERROR32	drivers/GL/glu.h	146;"	d
GLU_NURBS_ERROR33	drivers/GL/glu.h	147;"	d
GLU_NURBS_ERROR34	drivers/GL/glu.h	148;"	d
GLU_NURBS_ERROR35	drivers/GL/glu.h	149;"	d
GLU_NURBS_ERROR36	drivers/GL/glu.h	150;"	d
GLU_NURBS_ERROR37	drivers/GL/glu.h	151;"	d
GLU_NURBS_ERROR4	drivers/GL/glu.h	118;"	d
GLU_NURBS_ERROR5	drivers/GL/glu.h	119;"	d
GLU_NURBS_ERROR6	drivers/GL/glu.h	120;"	d
GLU_NURBS_ERROR7	drivers/GL/glu.h	121;"	d
GLU_NURBS_ERROR8	drivers/GL/glu.h	122;"	d
GLU_NURBS_ERROR9	drivers/GL/glu.h	123;"	d
GLU_NURBS_MODE	drivers/GL/glu.h	162;"	d
GLU_NURBS_MODE_EXT	drivers/GL/glu.h	163;"	d
GLU_NURBS_NORMAL	drivers/GL/glu.h	93;"	d
GLU_NURBS_NORMAL_DATA	drivers/GL/glu.h	105;"	d
GLU_NURBS_NORMAL_DATA_EXT	drivers/GL/glu.h	106;"	d
GLU_NURBS_NORMAL_EXT	drivers/GL/glu.h	94;"	d
GLU_NURBS_RENDERER	drivers/GL/glu.h	166;"	d
GLU_NURBS_RENDERER_EXT	drivers/GL/glu.h	167;"	d
GLU_NURBS_TESSELLATOR	drivers/GL/glu.h	164;"	d
GLU_NURBS_TESSELLATOR_EXT	drivers/GL/glu.h	165;"	d
GLU_NURBS_TEXTURE_COORD	drivers/GL/glu.h	97;"	d
GLU_NURBS_TEXTURE_COORD_DATA	drivers/GL/glu.h	109;"	d
GLU_NURBS_TEX_COORD_DATA_EXT	drivers/GL/glu.h	110;"	d
GLU_NURBS_TEX_COORD_EXT	drivers/GL/glu.h	98;"	d
GLU_NURBS_VERTEX	drivers/GL/glu.h	91;"	d
GLU_NURBS_VERTEX_DATA	drivers/GL/glu.h	103;"	d
GLU_NURBS_VERTEX_DATA_EXT	drivers/GL/glu.h	104;"	d
GLU_NURBS_VERTEX_EXT	drivers/GL/glu.h	92;"	d
GLU_OBJECT_PARAMETRIC_ERROR	drivers/GL/glu.h	170;"	d
GLU_OBJECT_PARAMETRIC_ERROR_EXT	drivers/GL/glu.h	171;"	d
GLU_OBJECT_PATH_LENGTH	drivers/GL/glu.h	172;"	d
GLU_OBJECT_PATH_LENGTH_EXT	drivers/GL/glu.h	173;"	d
GLU_OUTLINE_PATCH	drivers/GL/glu.h	84;"	d
GLU_OUTLINE_POLYGON	drivers/GL/glu.h	83;"	d
GLU_OUTSIDE	drivers/GL/glu.h	197;"	d
GLU_OUT_OF_MEMORY	drivers/GL/glu.h	77;"	d
GLU_PARAMETRIC_ERROR	drivers/GL/glu.h	175;"	d
GLU_PARAMETRIC_TOLERANCE	drivers/GL/glu.h	158;"	d
GLU_PATH_LENGTH	drivers/GL/glu.h	174;"	d
GLU_POINT	drivers/GL/glu.h	183;"	d
GLU_SAMPLING_METHOD	drivers/GL/glu.h	159;"	d
GLU_SAMPLING_TOLERANCE	drivers/GL/glu.h	156;"	d
GLU_SILHOUETTE	drivers/GL/glu.h	186;"	d
GLU_SMOOTH	drivers/GL/glu.h	192;"	d
GLU_TESS_BEGIN	drivers/GL/glu.h	201;"	d
GLU_TESS_BEGIN_DATA	drivers/GL/glu.h	211;"	d
GLU_TESS_BOUNDARY_ONLY	drivers/GL/glu.h	227;"	d
GLU_TESS_COMBINE	drivers/GL/glu.h	210;"	d
GLU_TESS_COMBINE_DATA	drivers/GL/glu.h	216;"	d
GLU_TESS_COORD_TOO_LARGE	drivers/GL/glu.h	243;"	d
GLU_TESS_EDGE_FLAG	drivers/GL/glu.h	208;"	d
GLU_TESS_EDGE_FLAG_DATA	drivers/GL/glu.h	215;"	d
GLU_TESS_END	drivers/GL/glu.h	205;"	d
GLU_TESS_END_DATA	drivers/GL/glu.h	213;"	d
GLU_TESS_ERROR	drivers/GL/glu.h	207;"	d
GLU_TESS_ERROR1	drivers/GL/glu.h	231;"	d
GLU_TESS_ERROR2	drivers/GL/glu.h	232;"	d
GLU_TESS_ERROR3	drivers/GL/glu.h	233;"	d
GLU_TESS_ERROR4	drivers/GL/glu.h	234;"	d
GLU_TESS_ERROR5	drivers/GL/glu.h	235;"	d
GLU_TESS_ERROR6	drivers/GL/glu.h	236;"	d
GLU_TESS_ERROR7	drivers/GL/glu.h	237;"	d
GLU_TESS_ERROR8	drivers/GL/glu.h	238;"	d
GLU_TESS_ERROR_DATA	drivers/GL/glu.h	214;"	d
GLU_TESS_MAX_COORD	drivers/GL/glu.h	271;"	d
GLU_TESS_MISSING_BEGIN_CONTOUR	drivers/GL/glu.h	240;"	d
GLU_TESS_MISSING_BEGIN_POLYGON	drivers/GL/glu.h	239;"	d
GLU_TESS_MISSING_END_CONTOUR	drivers/GL/glu.h	242;"	d
GLU_TESS_MISSING_END_POLYGON	drivers/GL/glu.h	241;"	d
GLU_TESS_NEED_COMBINE_CALLBACK	drivers/GL/glu.h	244;"	d
GLU_TESS_TOLERANCE	drivers/GL/glu.h	228;"	d
GLU_TESS_VERTEX	drivers/GL/glu.h	203;"	d
GLU_TESS_VERTEX_DATA	drivers/GL/glu.h	212;"	d
GLU_TESS_WINDING_ABS_GEQ_TWO	drivers/GL/glu.h	251;"	d
GLU_TESS_WINDING_NEGATIVE	drivers/GL/glu.h	250;"	d
GLU_TESS_WINDING_NONZERO	drivers/GL/glu.h	248;"	d
GLU_TESS_WINDING_ODD	drivers/GL/glu.h	247;"	d
GLU_TESS_WINDING_POSITIVE	drivers/GL/glu.h	249;"	d
GLU_TESS_WINDING_RULE	drivers/GL/glu.h	226;"	d
GLU_TRUE	drivers/GL/glu.h	63;"	d
GLU_UNKNOWN	drivers/GL/glu.h	223;"	d
GLU_U_STEP	drivers/GL/glu.h	160;"	d
GLU_VERSION	drivers/GL/glu.h	71;"	d
GLU_VERSION_1_1	drivers/GL/glu.h	66;"	d
GLU_VERSION_1_2	drivers/GL/glu.h	67;"	d
GLU_VERSION_1_3	drivers/GL/glu.h	68;"	d
GLU_VERTEX	drivers/GL/glu.h	204;"	d
GLU_V_STEP	drivers/GL/glu.h	161;"	d
GLUnurbs	drivers/GL/glu.h	/^typedef struct GLUnurbs GLUnurbs;$/;"	t	typeref:struct:GLUnurbs
GLUnurbsObj	drivers/GL/glu.h	/^typedef GLUnurbs GLUnurbsObj;$/;"	t
GLUquadric	drivers/GL/glu.h	/^typedef struct GLUquadric GLUquadric;$/;"	t	typeref:struct:GLUquadric
GLUquadricObj	drivers/GL/glu.h	/^typedef GLUquadric GLUquadricObj;$/;"	t
GLUtesselator	drivers/GL/glu.h	/^typedef struct GLUtesselator GLUtesselator;$/;"	t	typeref:struct:GLUtesselator
GLUtesselatorObj	drivers/GL/glu.h	/^typedef GLUtesselator GLUtesselatorObj;$/;"	t
GLUtriangulatorObj	drivers/GL/glu.h	/^typedef GLUtesselator GLUtriangulatorObj;$/;"	t
GLXBadContext	drivers/GL/glxproto.h	46;"	d
GLXBadContextState	drivers/GL/glxproto.h	47;"	d
GLXBadContextTag	drivers/GL/glxproto.h	50;"	d
GLXBadCurrentDrawable	drivers/GL/glxproto.h	57;"	d
GLXBadCurrentWindow	drivers/GL/glxproto.h	51;"	d
GLXBadDrawable	drivers/GL/glxproto.h	48;"	d
GLXBadFBConfig	drivers/GL/glxproto.h	55;"	d
GLXBadLargeRequest	drivers/GL/glxproto.h	53;"	d
GLXBadPbuffer	drivers/GL/glxproto.h	56;"	d
GLXBadPixmap	drivers/GL/glxproto.h	49;"	d
GLXBadRenderRequest	drivers/GL/glxproto.h	52;"	d
GLXBadWindow	drivers/GL/glxproto.h	58;"	d
GLXBindSwapBarrierSGIX	drivers/GL/glxproto.h	/^typedef struct GLXBindSwapBarrierSGIX {$/;"	s
GLXBufferClobberEventSGIX	drivers/GL/glxext.h	/^} GLXBufferClobberEventSGIX;$/;"	t	typeref:struct:__anon93
GLXChangeDrawableAttributes	drivers/GL/glxproto.h	/^typedef struct GLXChangeDrawableAttributes {$/;"	s
GLXClientInfo	drivers/GL/glxproto.h	/^typedef struct GLXClientInfo {$/;"	s
GLXContext	drivers/GL/glx.h	/^typedef struct __GLXcontextRec *GLXContext;$/;"	t	typeref:struct:__GLXcontextRec
GLXContextID	drivers/GL/glx.h	/^typedef XID GLXContextID;$/;"	t
GLXContextID	drivers/GL/glxproto.h	1922;"	d
GLXContextID	drivers/GL/glxproto.h	94;"	d
GLXContextTag	drivers/GL/glxproto.h	/^typedef CARD32 GLXContextTag;$/;"	t
GLXCopyContext	drivers/GL/glxproto.h	/^typedef struct GLXCopyContext {$/;"	s
GLXCreateContext	drivers/GL/glxproto.h	/^typedef struct GLXCreateContext {$/;"	s
GLXCreateContextWithConfigSGIX	drivers/GL/glxproto.h	/^typedef struct GLXCreateContextWithConfigSGIX {$/;"	s
GLXCreateGLXPixmap	drivers/GL/glxproto.h	/^typedef struct GLXCreateGLXPixmap {$/;"	s
GLXCreateGLXPixmapWithConfigSGIX	drivers/GL/glxproto.h	/^typedef struct GLXCreateGLXPixmapWithConfigSGIX {$/;"	s
GLXCreateNewContext	drivers/GL/glxproto.h	/^typedef struct GLXCreateNewContext {$/;"	s
GLXCreatePbuffer	drivers/GL/glxproto.h	/^typedef struct GLXCreatePbuffer {$/;"	s
GLXCreatePixmap	drivers/GL/glxproto.h	/^typedef struct GLXCreatePixmap {$/;"	s
GLXCreateWindow	drivers/GL/glxproto.h	/^typedef struct GLXCreateWindow {$/;"	s
GLXDestroyContext	drivers/GL/glxproto.h	/^typedef struct GLXDestroyContext {$/;"	s
GLXDestroyGLXPixmap	drivers/GL/glxproto.h	/^typedef struct GLXDestroyGLXPixmap {$/;"	s
GLXDestroyHyperpipeConfigSGIX	drivers/GL/glxproto.h	/^typedef struct GLXDestroyHyperpipeConfigSGIX {$/;"	s
GLXDestroyPbuffer	drivers/GL/glxproto.h	/^typedef struct GLXDestroyPbuffer {$/;"	s
GLXDestroyPixmap	drivers/GL/glxproto.h	/^typedef struct GLXDestroyPixmap {$/;"	s
GLXDestroyWindow	drivers/GL/glxproto.h	/^typedef struct GLXDestroyWindow {$/;"	s
GLXDrawable	drivers/GL/glx.h	/^typedef XID GLXDrawable;$/;"	t
GLXDrawable	drivers/GL/glxproto.h	1924;"	d
GLXDrawable	drivers/GL/glxproto.h	96;"	d
GLXEvent	drivers/GL/glx.h	/^} GLXEvent;$/;"	t	typeref:union:__GLXEvent
GLXFBConfig	drivers/GL/glx.h	/^typedef struct __GLXFBConfigRec *GLXFBConfig;$/;"	t	typeref:struct:__GLXFBConfigRec
GLXFBConfigID	drivers/GL/glx.h	/^typedef XID GLXFBConfigID;$/;"	t
GLXFBConfigID	drivers/GL/glxproto.h	1927;"	d
GLXFBConfigID	drivers/GL/glxproto.h	99;"	d
GLXFBConfigIDSGIX	drivers/GL/glxext.h	/^typedef XID GLXFBConfigIDSGIX;$/;"	t
GLXFBConfigIDSGIX	drivers/GL/glxproto.h	100;"	d
GLXFBConfigIDSGIX	drivers/GL/glxproto.h	1928;"	d
GLXFBConfigSGIX	drivers/GL/glxext.h	/^typedef struct __GLXFBConfigRec *GLXFBConfigSGIX;$/;"	t	typeref:struct:__GLXFBConfigRec
GLXGetDrawableAttributes	drivers/GL/glxproto.h	/^typedef struct GLXGetDrawableAttributes {$/;"	s
GLXGetFBConfigs	drivers/GL/glxproto.h	/^typedef struct GLXGetFBConfigs {$/;"	s
GLXGetFBConfigsSGIX	drivers/GL/glxproto.h	/^typedef struct GLXGetFBConfigsSGIX {$/;"	s
GLXGetVisualConfigs	drivers/GL/glxproto.h	/^typedef struct GLXGetVisualConfigs {$/;"	s
GLXHyperpipeConfigSGIX	drivers/GL/glxext.h	/^} GLXHyperpipeConfigSGIX;$/;"	t	typeref:struct:__anon95
GLXHyperpipeConfigSGIX	drivers/GL/glxproto.h	/^typedef struct GLXHyperpipeConfigSGIX {$/;"	s
GLXHyperpipeNetworkSGIX	drivers/GL/glxext.h	/^} GLXHyperpipeNetworkSGIX;$/;"	t	typeref:struct:__anon94
GLXIsDirect	drivers/GL/glxproto.h	/^typedef struct GLXIsDirect {$/;"	s
GLXJoinSwapGroupSGIX	drivers/GL/glxproto.h	/^typedef struct GLXJoinSwapGroupSGIX {$/;"	s
GLXMakeContextCurrent	drivers/GL/glxproto.h	/^typedef struct GLXMakeContextCurrent {$/;"	s
GLXMakeCurrent	drivers/GL/glxproto.h	/^typedef struct GLXMakeCurrent {$/;"	s
GLXMakeCurrentReadSGI	drivers/GL/glxproto.h	/^typedef struct GLXMakeCurrentReadSGI {$/;"	s
GLXPbuffer	drivers/GL/glx.h	/^typedef XID GLXPbuffer;$/;"	t
GLXPbuffer	drivers/GL/glxproto.h	1925;"	d
GLXPbuffer	drivers/GL/glxproto.h	97;"	d
GLXPbufferClobberEvent	drivers/GL/glx.h	/^} GLXPbufferClobberEvent;$/;"	t	typeref:struct:__anon176
GLXPbufferSGIX	drivers/GL/glxext.h	/^typedef XID GLXPbufferSGIX;$/;"	t
GLXPbufferSGIX	drivers/GL/glxproto.h	101;"	d
GLXPbufferSGIX	drivers/GL/glxproto.h	1929;"	d
GLXPipeRect	drivers/GL/glxext.h	/^} GLXPipeRect;$/;"	t	typeref:struct:__anon96
GLXPipeRectLimits	drivers/GL/glxext.h	/^} GLXPipeRectLimits;$/;"	t	typeref:struct:__anon97
GLXPixmap	drivers/GL/glx.h	/^typedef XID GLXPixmap;$/;"	t
GLXPixmap	drivers/GL/glxproto.h	1923;"	d
GLXPixmap	drivers/GL/glxproto.h	95;"	d
GLXQueryContext	drivers/GL/glxproto.h	/^typedef struct GLXQueryContext {$/;"	s
GLXQueryContextInfoEXT	drivers/GL/glxproto.h	/^typedef struct GLXQueryContextInfoEXT {$/;"	s
GLXQueryExtensionsString	drivers/GL/glxproto.h	/^typedef struct GLXQueryExtensionsString {$/;"	s
GLXQueryHyperpipeConfigSGIX	drivers/GL/glxproto.h	/^typedef struct GLXQueryHyperpipeConfigSGIX {$/;"	s
GLXQueryHyperpipeNetworkSGIX	drivers/GL/glxproto.h	/^typedef struct GLXQueryHyperpipeNetworkSGIX {$/;"	s
GLXQueryMaxSwapBarriersSGIX	drivers/GL/glxproto.h	/^typedef struct GLXQueryMaxSwapBarriersSGIX {$/;"	s
GLXQueryServerString	drivers/GL/glxproto.h	/^typedef struct GLXQueryServerString {$/;"	s
GLXQueryVersion	drivers/GL/glxproto.h	/^typedef struct GLXQueryVersion {$/;"	s
GLXRender	drivers/GL/glxproto.h	/^typedef struct GLXRender {$/;"	s
GLXRenderLarge	drivers/GL/glxproto.h	/^typedef struct GLXRenderLarge {$/;"	s
GLXSingle	drivers/GL/glxproto.h	/^typedef struct GLXSingle {$/;"	s
GLXSwapBuffers	drivers/GL/glxproto.h	/^typedef struct GLXSwapBuffers {$/;"	s
GLXUnsupportedPrivateRequest	drivers/GL/glxproto.h	54;"	d
GLXUseXFont	drivers/GL/glxproto.h	/^typedef struct GLXUseXFont {$/;"	s
GLXVendorPrivate	drivers/GL/glxproto.h	/^typedef struct GLXVendorPrivate {$/;"	s
GLXVendorPrivateWithReply	drivers/GL/glxproto.h	/^typedef struct GLXVendorPrivateWithReply {$/;"	s
GLXVideoSourceSGIX	drivers/GL/glxext.h	/^typedef XID GLXVideoSourceSGIX;$/;"	t
GLXWaitGL	drivers/GL/glxproto.h	/^typedef struct GLXWaitGL {$/;"	s
GLXWaitX	drivers/GL/glxproto.h	/^typedef struct GLXWaitX {$/;"	s
GLXWindow	drivers/GL/glx.h	/^typedef XID GLXWindow;$/;"	t
GLXWindow	drivers/GL/glxproto.h	1926;"	d
GLXWindow	drivers/GL/glxproto.h	98;"	d
GLX_3DFX_FULLSCREEN_MODE_MESA	drivers/GL/glxext.h	268;"	d
GLX_3DFX_WINDOW_MODE_MESA	drivers/GL/glxext.h	267;"	d
GLX_ACCUM_ALPHA_SIZE	drivers/GL/glx.h	86;"	d
GLX_ACCUM_ALPHA_SIZE	drivers/GL/glxtokens.h	67;"	d
GLX_ACCUM_BLUE_SIZE	drivers/GL/glx.h	85;"	d
GLX_ACCUM_BLUE_SIZE	drivers/GL/glxtokens.h	66;"	d
GLX_ACCUM_BUFFER_BIT	drivers/GL/glx.h	131;"	d
GLX_ACCUM_BUFFER_BIT	drivers/GL/glxext.h	73;"	d
GLX_ACCUM_BUFFER_BIT	drivers/GL/glxtokens.h	178;"	d
GLX_ACCUM_BUFFER_BIT_SGIX	drivers/GL/glxext.h	204;"	d
GLX_ACCUM_GREEN_SIZE	drivers/GL/glx.h	84;"	d
GLX_ACCUM_GREEN_SIZE	drivers/GL/glxtokens.h	65;"	d
GLX_ACCUM_RED_SIZE	drivers/GL/glx.h	83;"	d
GLX_ACCUM_RED_SIZE	drivers/GL/glxtokens.h	64;"	d
GLX_ALPHA_SIZE	drivers/GL/glx.h	80;"	d
GLX_ALPHA_SIZE	drivers/GL/glxtokens.h	61;"	d
GLX_ARB_get_proc_address	drivers/GL/glx.h	310;"	d
GLX_ARB_get_proc_address	drivers/GL/glxext.h	405;"	d
GLX_ARB_multisample	drivers/GL/glxext.h	413;"	d
GLX_AUX0_EXT	drivers/GL/glx.h	440;"	d
GLX_AUX0_EXT	drivers/GL/glxtokens.h	265;"	d
GLX_AUX1_EXT	drivers/GL/glx.h	441;"	d
GLX_AUX1_EXT	drivers/GL/glxtokens.h	266;"	d
GLX_AUX2_EXT	drivers/GL/glx.h	442;"	d
GLX_AUX2_EXT	drivers/GL/glxtokens.h	267;"	d
GLX_AUX3_EXT	drivers/GL/glx.h	443;"	d
GLX_AUX3_EXT	drivers/GL/glxtokens.h	268;"	d
GLX_AUX4_EXT	drivers/GL/glx.h	444;"	d
GLX_AUX4_EXT	drivers/GL/glxtokens.h	269;"	d
GLX_AUX5_EXT	drivers/GL/glx.h	445;"	d
GLX_AUX5_EXT	drivers/GL/glxtokens.h	270;"	d
GLX_AUX6_EXT	drivers/GL/glx.h	446;"	d
GLX_AUX6_EXT	drivers/GL/glxtokens.h	271;"	d
GLX_AUX7_EXT	drivers/GL/glx.h	447;"	d
GLX_AUX7_EXT	drivers/GL/glxtokens.h	272;"	d
GLX_AUX8_EXT	drivers/GL/glx.h	448;"	d
GLX_AUX8_EXT	drivers/GL/glxtokens.h	273;"	d
GLX_AUX9_EXT	drivers/GL/glx.h	449;"	d
GLX_AUX9_EXT	drivers/GL/glxtokens.h	274;"	d
GLX_AUX_BUFFERS	drivers/GL/glx.h	76;"	d
GLX_AUX_BUFFERS	drivers/GL/glxtokens.h	57;"	d
GLX_AUX_BUFFERS_BIT	drivers/GL/glx.h	124;"	d
GLX_AUX_BUFFERS_BIT	drivers/GL/glxext.h	70;"	d
GLX_AUX_BUFFERS_BIT	drivers/GL/glxtokens.h	175;"	d
GLX_AUX_BUFFERS_BIT_SGIX	drivers/GL/glxext.h	201;"	d
GLX_BACK_EXT	drivers/GL/glx.h	439;"	d
GLX_BACK_EXT	drivers/GL/glxtokens.h	264;"	d
GLX_BACK_LEFT_BUFFER_BIT	drivers/GL/glx.h	127;"	d
GLX_BACK_LEFT_BUFFER_BIT	drivers/GL/glxext.h	68;"	d
GLX_BACK_LEFT_BUFFER_BIT	drivers/GL/glxtokens.h	173;"	d
GLX_BACK_LEFT_BUFFER_BIT_SGIX	drivers/GL/glxext.h	199;"	d
GLX_BACK_LEFT_EXT	drivers/GL/glx.h	436;"	d
GLX_BACK_LEFT_EXT	drivers/GL/glxtokens.h	261;"	d
GLX_BACK_RIGHT_BUFFER_BIT	drivers/GL/glx.h	128;"	d
GLX_BACK_RIGHT_BUFFER_BIT	drivers/GL/glxext.h	69;"	d
GLX_BACK_RIGHT_BUFFER_BIT	drivers/GL/glxtokens.h	174;"	d
GLX_BACK_RIGHT_BUFFER_BIT_SGIX	drivers/GL/glxext.h	200;"	d
GLX_BACK_RIGHT_EXT	drivers/GL/glx.h	437;"	d
GLX_BACK_RIGHT_EXT	drivers/GL/glxtokens.h	262;"	d
GLX_BAD_ATTRIBUTE	drivers/GL/glx.h	93;"	d
GLX_BAD_ATTRIBUTE	drivers/GL/glxtokens.h	97;"	d
GLX_BAD_CONTEXT	drivers/GL/glx.h	96;"	d
GLX_BAD_CONTEXT	drivers/GL/glxtokens.h	100;"	d
GLX_BAD_ENUM	drivers/GL/glx.h	98;"	d
GLX_BAD_ENUM	drivers/GL/glxtokens.h	102;"	d
GLX_BAD_HYPERPIPE_CONFIG_SGIX	drivers/GL/glxext.h	287;"	d
GLX_BAD_HYPERPIPE_SGIX	drivers/GL/glxext.h	288;"	d
GLX_BAD_SCREEN	drivers/GL/glx.h	92;"	d
GLX_BAD_SCREEN	drivers/GL/glxtokens.h	96;"	d
GLX_BAD_VALUE	drivers/GL/glx.h	97;"	d
GLX_BAD_VALUE	drivers/GL/glxtokens.h	101;"	d
GLX_BAD_VISUAL	drivers/GL/glx.h	95;"	d
GLX_BAD_VISUAL	drivers/GL/glxtokens.h	99;"	d
GLX_BIND_TO_MIPMAP_TEXTURE_EXT	drivers/GL/glx.h	414;"	d
GLX_BIND_TO_MIPMAP_TEXTURE_EXT	drivers/GL/glxtokens.h	239;"	d
GLX_BIND_TO_TEXTURE_RGBA_EXT	drivers/GL/glx.h	413;"	d
GLX_BIND_TO_TEXTURE_RGBA_EXT	drivers/GL/glxtokens.h	238;"	d
GLX_BIND_TO_TEXTURE_RGB_EXT	drivers/GL/glx.h	412;"	d
GLX_BIND_TO_TEXTURE_RGB_EXT	drivers/GL/glxtokens.h	237;"	d
GLX_BIND_TO_TEXTURE_TARGETS_EXT	drivers/GL/glx.h	415;"	d
GLX_BIND_TO_TEXTURE_TARGETS_EXT	drivers/GL/glxtokens.h	240;"	d
GLX_BLENDED_RGBA_SGIS	drivers/GL/glxext.h	241;"	d
GLX_BLUE_SIZE	drivers/GL/glx.h	79;"	d
GLX_BLUE_SIZE	drivers/GL/glxtokens.h	60;"	d
GLX_BUFFER_CLOBBER_MASK_SGIX	drivers/GL/glxext.h	196;"	d
GLX_BUFFER_SIZE	drivers/GL/glx.h	71;"	d
GLX_BUFFER_SIZE	drivers/GL/glxtokens.h	52;"	d
GLX_COLOR_INDEX_BIT	drivers/GL/glcore.h	165;"	d
GLX_COLOR_INDEX_BIT	drivers/GL/glx.h	166;"	d
GLX_COLOR_INDEX_BIT	drivers/GL/glxext.h	64;"	d
GLX_COLOR_INDEX_BIT	drivers/GL/glxtokens.h	114;"	d
GLX_COLOR_INDEX_BIT	drivers/GL/internal/glcore.h	165;"	d
GLX_COLOR_INDEX_BIT_SGIX	drivers/GL/glxext.h	184;"	d
GLX_COLOR_INDEX_TYPE	drivers/GL/glx.h	150;"	d
GLX_COLOR_INDEX_TYPE	drivers/GL/glxext.h	101;"	d
GLX_COLOR_INDEX_TYPE	drivers/GL/glxtokens.h	152;"	d
GLX_COLOR_INDEX_TYPE_SGIX	drivers/GL/glxext.h	190;"	d
GLX_CONFIG_CAVEAT	drivers/GL/glx.h	112;"	d
GLX_CONFIG_CAVEAT	drivers/GL/glxext.h	74;"	d
GLX_CONFIG_CAVEAT	drivers/GL/glxtokens.h	72;"	d
GLX_DAMAGED	drivers/GL/glx.h	159;"	d
GLX_DAMAGED	drivers/GL/glxext.h	110;"	d
GLX_DAMAGED	drivers/GL/glxtokens.h	163;"	d
GLX_DAMAGED_SGIX	drivers/GL/glxext.h	216;"	d
GLX_DEPTH_BUFFER_BIT	drivers/GL/glx.h	129;"	d
GLX_DEPTH_BUFFER_BIT	drivers/GL/glxext.h	71;"	d
GLX_DEPTH_BUFFER_BIT	drivers/GL/glxtokens.h	176;"	d
GLX_DEPTH_BUFFER_BIT_SGIX	drivers/GL/glxext.h	202;"	d
GLX_DEPTH_SIZE	drivers/GL/glx.h	81;"	d
GLX_DEPTH_SIZE	drivers/GL/glxtokens.h	62;"	d
GLX_DIGITAL_MEDIA_PBUFFER_SGIX	drivers/GL/glxext.h	231;"	d
GLX_DIRECT_COLOR	drivers/GL/glcore.h	150;"	d
GLX_DIRECT_COLOR	drivers/GL/glx.h	135;"	d
GLX_DIRECT_COLOR	drivers/GL/glxext.h	86;"	d
GLX_DIRECT_COLOR	drivers/GL/glxtokens.h	128;"	d
GLX_DIRECT_COLOR	drivers/GL/internal/glcore.h	150;"	d
GLX_DIRECT_COLOR_EXT	drivers/GL/glxext.h	146;"	d
GLX_DIRECT_COLOR_EXT	drivers/GL/glxtokens.h	195;"	d
GLX_DONT_CARE	drivers/GL/glcore.h	162;"	d
GLX_DONT_CARE	drivers/GL/glx.h	113;"	d
GLX_DONT_CARE	drivers/GL/glxext.h	82;"	d
GLX_DONT_CARE	drivers/GL/glxtokens.h	110;"	d
GLX_DONT_CARE	drivers/GL/internal/glcore.h	162;"	d
GLX_DOUBLEBUFFER	drivers/GL/glx.h	74;"	d
GLX_DOUBLEBUFFER	drivers/GL/glxtokens.h	55;"	d
GLX_DRAWABLE_TYPE	drivers/GL/glx.h	145;"	d
GLX_DRAWABLE_TYPE	drivers/GL/glxext.h	96;"	d
GLX_DRAWABLE_TYPE	drivers/GL/glxtokens.h	79;"	d
GLX_DRAWABLE_TYPE_SGIX	drivers/GL/glxext.h	185;"	d
GLX_EVENT_MASK	drivers/GL/glx.h	158;"	d
GLX_EVENT_MASK	drivers/GL/glxext.h	109;"	d
GLX_EVENT_MASK	drivers/GL/glxtokens.h	148;"	d
GLX_EVENT_MASK_SGIX	drivers/GL/glxext.h	215;"	d
GLX_EXTENSIONS	drivers/GL/glx.h	106;"	d
GLX_EXTENSIONS	drivers/GL/glxproto.h	84;"	d
GLX_EXTENSIONS	drivers/GL/glxtokens.h	225;"	d
GLX_EXTENSION_ALIAS	drivers/GL/glxproto.h	73;"	d
GLX_EXTENSION_NAME	drivers/GL/glx.h	63;"	d
GLX_EXTENSION_NAME	drivers/GL/glxproto.h	72;"	d
GLX_EXT_import_context	drivers/GL/glxext.h	469;"	d
GLX_EXT_texture_from_pixmap	drivers/GL/glx.h	410;"	d
GLX_EXT_visual_info	drivers/GL/glxext.h	421;"	d
GLX_EXT_visual_rating	drivers/GL/glxext.h	465;"	d
GLX_FBCONFIG_ID	drivers/GL/glx.h	148;"	d
GLX_FBCONFIG_ID	drivers/GL/glxext.h	99;"	d
GLX_FBCONFIG_ID	drivers/GL/glxtokens.h	82;"	d
GLX_FBCONFIG_ID_SGIX	drivers/GL/glxext.h	188;"	d
GLX_FLOAT_COMPONENTS_NV	drivers/GL/glx.h	363;"	d
GLX_FRONT_EXT	drivers/GL/glx.h	438;"	d
GLX_FRONT_EXT	drivers/GL/glxtokens.h	263;"	d
GLX_FRONT_LEFT_BUFFER_BIT	drivers/GL/glx.h	125;"	d
GLX_FRONT_LEFT_BUFFER_BIT	drivers/GL/glxext.h	66;"	d
GLX_FRONT_LEFT_BUFFER_BIT	drivers/GL/glxtokens.h	171;"	d
GLX_FRONT_LEFT_BUFFER_BIT_SGIX	drivers/GL/glxext.h	197;"	d
GLX_FRONT_LEFT_EXT	drivers/GL/glx.h	434;"	d
GLX_FRONT_LEFT_EXT	drivers/GL/glxtokens.h	259;"	d
GLX_FRONT_RIGHT_BUFFER_BIT	drivers/GL/glx.h	126;"	d
GLX_FRONT_RIGHT_BUFFER_BIT	drivers/GL/glxext.h	67;"	d
GLX_FRONT_RIGHT_BUFFER_BIT	drivers/GL/glxtokens.h	172;"	d
GLX_FRONT_RIGHT_BUFFER_BIT_SGIX	drivers/GL/glxext.h	198;"	d
GLX_FRONT_RIGHT_EXT	drivers/GL/glx.h	435;"	d
GLX_FRONT_RIGHT_EXT	drivers/GL/glxtokens.h	260;"	d
GLX_GLXEXT_VERSION	drivers/GL/glxext.h	57;"	d
GLX_GLXWINDOW_TYPE	drivers/GL/glxproto.h	1915;"	d
GLX_GRAY_SCALE	drivers/GL/glcore.h	153;"	d
GLX_GRAY_SCALE	drivers/GL/glx.h	138;"	d
GLX_GRAY_SCALE	drivers/GL/glxext.h	89;"	d
GLX_GRAY_SCALE	drivers/GL/glxtokens.h	131;"	d
GLX_GRAY_SCALE	drivers/GL/internal/glcore.h	153;"	d
GLX_GRAY_SCALE_EXT	drivers/GL/glxext.h	149;"	d
GLX_GRAY_SCALE_EXT	drivers/GL/glxtokens.h	198;"	d
GLX_GREEN_SIZE	drivers/GL/glx.h	78;"	d
GLX_GREEN_SIZE	drivers/GL/glxtokens.h	59;"	d
GLX_H	drivers/GL/glx.h	27;"	d
GLX_HEIGHT	drivers/GL/glx.h	157;"	d
GLX_HEIGHT	drivers/GL/glxext.h	108;"	d
GLX_HEIGHT	drivers/GL/glxtokens.h	147;"	d
GLX_HEIGHT_SGIX	drivers/GL/glxext.h	214;"	d
GLX_HYPERPIPE_DISPLAY_PIPE_SGIX	drivers/GL/glxext.h	289;"	d
GLX_HYPERPIPE_ID_SGIX	drivers/GL/glxext.h	295;"	d
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX	drivers/GL/glxext.h	286;"	d
GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX	drivers/GL/glxext.h	294;"	d
GLX_HYPERPIPE_RENDER_PIPE_SGIX	drivers/GL/glxext.h	290;"	d
GLX_HYPERPIPE_STEREO_SGIX	drivers/GL/glxext.h	293;"	d
GLX_LARGEST_PBUFFER	drivers/GL/glx.h	155;"	d
GLX_LARGEST_PBUFFER	drivers/GL/glxext.h	106;"	d
GLX_LARGEST_PBUFFER	drivers/GL/glxtokens.h	141;"	d
GLX_LARGEST_PBUFFER_SGIX	drivers/GL/glxext.h	212;"	d
GLX_LEVEL	drivers/GL/glx.h	72;"	d
GLX_LEVEL	drivers/GL/glxtokens.h	53;"	d
GLX_MANGLE_H	drivers/GL/glx_mangle.h	23;"	d
GLX_MAX_PBUFFER_HEIGHT	drivers/GL/glx.h	152;"	d
GLX_MAX_PBUFFER_HEIGHT	drivers/GL/glxext.h	103;"	d
GLX_MAX_PBUFFER_HEIGHT	drivers/GL/glxtokens.h	84;"	d
GLX_MAX_PBUFFER_HEIGHT_SGIX	drivers/GL/glxext.h	207;"	d
GLX_MAX_PBUFFER_PIXELS	drivers/GL/glx.h	153;"	d
GLX_MAX_PBUFFER_PIXELS	drivers/GL/glxext.h	104;"	d
GLX_MAX_PBUFFER_PIXELS	drivers/GL/glxtokens.h	85;"	d
GLX_MAX_PBUFFER_PIXELS_SGIX	drivers/GL/glxext.h	208;"	d
GLX_MAX_PBUFFER_WIDTH	drivers/GL/glx.h	151;"	d
GLX_MAX_PBUFFER_WIDTH	drivers/GL/glxext.h	102;"	d
GLX_MAX_PBUFFER_WIDTH	drivers/GL/glxtokens.h	83;"	d
GLX_MAX_PBUFFER_WIDTH_SGIX	drivers/GL/glxext.h	206;"	d
GLX_MESA_agp_offset	drivers/GL/glxext.h	682;"	d
GLX_MESA_allocate_memory	drivers/GL/glx.h	345;"	d
GLX_MESA_copy_sub_buffer	drivers/GL/glxext.h	579;"	d
GLX_MESA_pixmap_colormap	drivers/GL/glxext.h	587;"	d
GLX_MESA_release_buffers	drivers/GL/glxext.h	595;"	d
GLX_MESA_set_3dfx_mode	drivers/GL/glxext.h	603;"	d
GLX_MESA_swap_control	drivers/GL/glx.h	393;"	d
GLX_MESA_swap_frame_usage	drivers/GL/glx.h	373;"	d
GLX_MIPMAP_TEXTURE_EXT	drivers/GL/glx.h	420;"	d
GLX_MIPMAP_TEXTURE_EXT	drivers/GL/glxtokens.h	245;"	d
GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS	drivers/GL/glxext.h	246;"	d
GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS	drivers/GL/glxext.h	245;"	d
GLX_NONE	drivers/GL/glcore.h	147;"	d
GLX_NONE	drivers/GL/glx.h	132;"	d
GLX_NONE	drivers/GL/glxext.h	83;"	d
GLX_NONE	drivers/GL/glxtokens.h	122;"	d
GLX_NONE	drivers/GL/internal/glcore.h	147;"	d
GLX_NONE_EXT	drivers/GL/glxext.h	144;"	d
GLX_NONE_EXT	drivers/GL/glxtokens.h	202;"	d
GLX_NON_CONFORMANT_CONFIG	drivers/GL/glcore.h	157;"	d
GLX_NON_CONFORMANT_CONFIG	drivers/GL/glx.h	144;"	d
GLX_NON_CONFORMANT_CONFIG	drivers/GL/glxext.h	95;"	d
GLX_NON_CONFORMANT_CONFIG	drivers/GL/glxtokens.h	124;"	d
GLX_NON_CONFORMANT_CONFIG	drivers/GL/internal/glcore.h	157;"	d
GLX_NON_CONFORMANT_VISUAL_EXT	drivers/GL/glxext.h	170;"	d
GLX_NON_CONFORMANT_VISUAL_EXT	drivers/GL/glxtokens.h	209;"	d
GLX_NO_EXTENSION	drivers/GL/glx.h	94;"	d
GLX_NO_EXTENSION	drivers/GL/glxtokens.h	98;"	d
GLX_NV_float_buffer	drivers/GL/glx.h	361;"	d
GLX_NV_vertex_array_range	drivers/GL/glx.h	331;"	d
GLX_OML_swap_method	drivers/GL/glxext.h	615;"	d
GLX_OML_sync_control	drivers/GL/glxext.h	619;"	d
GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX	drivers/GL/glxext.h	210;"	d
GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX	drivers/GL/glxtokens.h	90;"	d
GLX_OPTIMAL_PBUFFER_WIDTH_SGIX	drivers/GL/glxext.h	209;"	d
GLX_OPTIMAL_PBUFFER_WIDTH_SGIX	drivers/GL/glxtokens.h	89;"	d
GLX_PBUFFER	drivers/GL/glx.h	162;"	d
GLX_PBUFFER	drivers/GL/glxext.h	113;"	d
GLX_PBUFFER	drivers/GL/glxtokens.h	168;"	d
GLX_PBUFFER_BIT	drivers/GL/glcore.h	168;"	d
GLX_PBUFFER_BIT	drivers/GL/glx.h	123;"	d
GLX_PBUFFER_BIT	drivers/GL/glxext.h	62;"	d
GLX_PBUFFER_BIT	drivers/GL/glxtokens.h	119;"	d
GLX_PBUFFER_BIT	drivers/GL/internal/glcore.h	168;"	d
GLX_PBUFFER_BIT_SGIX	drivers/GL/glxext.h	195;"	d
GLX_PBUFFER_CLOBBER_MASK	drivers/GL/glx.h	167;"	d
GLX_PBUFFER_CLOBBER_MASK	drivers/GL/glxext.h	65;"	d
GLX_PBUFFER_CLOBBER_MASK	drivers/GL/glxtokens.h	160;"	d
GLX_PBUFFER_HEIGHT	drivers/GL/glx.h	163;"	d
GLX_PBUFFER_HEIGHT	drivers/GL/glxext.h	114;"	d
GLX_PBUFFER_HEIGHT	drivers/GL/glxtokens.h	142;"	d
GLX_PBUFFER_SGIX	drivers/GL/glxext.h	219;"	d
GLX_PBUFFER_TYPE	drivers/GL/glxproto.h	1913;"	d
GLX_PBUFFER_WIDTH	drivers/GL/glx.h	164;"	d
GLX_PBUFFER_WIDTH	drivers/GL/glxext.h	115;"	d
GLX_PBUFFER_WIDTH	drivers/GL/glxtokens.h	143;"	d
GLX_PIPE_RECT_LIMITS_SGIX	drivers/GL/glxext.h	292;"	d
GLX_PIPE_RECT_SGIX	drivers/GL/glxext.h	291;"	d
GLX_PIXMAP_BIT	drivers/GL/glcore.h	167;"	d
GLX_PIXMAP_BIT	drivers/GL/glx.h	122;"	d
GLX_PIXMAP_BIT	drivers/GL/glxext.h	61;"	d
GLX_PIXMAP_BIT	drivers/GL/glxtokens.h	118;"	d
GLX_PIXMAP_BIT	drivers/GL/internal/glcore.h	167;"	d
GLX_PIXMAP_BIT_SGIX	drivers/GL/glxext.h	182;"	d
GLX_PIXMAP_TYPE	drivers/GL/glxproto.h	1911;"	d
GLX_PRESERVED_CONTENTS	drivers/GL/glx.h	154;"	d
GLX_PRESERVED_CONTENTS	drivers/GL/glxext.h	105;"	d
GLX_PRESERVED_CONTENTS	drivers/GL/glxtokens.h	140;"	d
GLX_PRESERVED_CONTENTS_SGIX	drivers/GL/glxext.h	211;"	d
GLX_PSEUDO_COLOR	drivers/GL/glcore.h	151;"	d
GLX_PSEUDO_COLOR	drivers/GL/glx.h	136;"	d
GLX_PSEUDO_COLOR	drivers/GL/glxext.h	87;"	d
GLX_PSEUDO_COLOR	drivers/GL/glxtokens.h	129;"	d
GLX_PSEUDO_COLOR	drivers/GL/internal/glcore.h	151;"	d
GLX_PSEUDO_COLOR_EXT	drivers/GL/glxext.h	147;"	d
GLX_PSEUDO_COLOR_EXT	drivers/GL/glxtokens.h	196;"	d
GLX_PbufferClobber	drivers/GL/glxproto.h	68;"	d
GLX_RED_SIZE	drivers/GL/glx.h	77;"	d
GLX_RED_SIZE	drivers/GL/glxtokens.h	58;"	d
GLX_RENDER_TYPE	drivers/GL/glx.h	146;"	d
GLX_RENDER_TYPE	drivers/GL/glxext.h	97;"	d
GLX_RENDER_TYPE	drivers/GL/glxtokens.h	80;"	d
GLX_RENDER_TYPE_SGIX	drivers/GL/glxext.h	186;"	d
GLX_RGBA	drivers/GL/glx.h	73;"	d
GLX_RGBA	drivers/GL/glxtokens.h	54;"	d
GLX_RGBA_BIT	drivers/GL/glcore.h	164;"	d
GLX_RGBA_BIT	drivers/GL/glx.h	165;"	d
GLX_RGBA_BIT	drivers/GL/glxext.h	63;"	d
GLX_RGBA_BIT	drivers/GL/glxtokens.h	113;"	d
GLX_RGBA_BIT	drivers/GL/internal/glcore.h	164;"	d
GLX_RGBA_BIT_SGIX	drivers/GL/glxext.h	183;"	d
GLX_RGBA_TYPE	drivers/GL/glx.h	149;"	d
GLX_RGBA_TYPE	drivers/GL/glxext.h	100;"	d
GLX_RGBA_TYPE	drivers/GL/glxtokens.h	151;"	d
GLX_RGBA_TYPE_SGIX	drivers/GL/glxext.h	189;"	d
GLX_SAMPLES	drivers/GL/glx.h	174;"	d
GLX_SAMPLES	drivers/GL/glxext.h	120;"	d
GLX_SAMPLES_3DFX	drivers/GL/glxext.h	254;"	d
GLX_SAMPLES_ARB	drivers/GL/glxext.h	128;"	d
GLX_SAMPLES_SGIS	drivers/GL/glxext.h	133;"	d
GLX_SAMPLES_SGIS	drivers/GL/glxtokens.h	280;"	d
GLX_SAMPLE_BUFFERS	drivers/GL/glx.h	173;"	d
GLX_SAMPLE_BUFFERS	drivers/GL/glxext.h	119;"	d
GLX_SAMPLE_BUFFERS_3DFX	drivers/GL/glxext.h	253;"	d
GLX_SAMPLE_BUFFERS_ARB	drivers/GL/glxext.h	127;"	d
GLX_SAMPLE_BUFFERS_BIT_SGIX	drivers/GL/glxext.h	205;"	d
GLX_SAMPLE_BUFFERS_SGIS	drivers/GL/glxext.h	132;"	d
GLX_SAMPLE_BUFFERS_SGIS	drivers/GL/glxtokens.h	279;"	d
GLX_SAVED	drivers/GL/glx.h	160;"	d
GLX_SAVED	drivers/GL/glxext.h	111;"	d
GLX_SAVED	drivers/GL/glxtokens.h	164;"	d
GLX_SAVED_SGIX	drivers/GL/glxext.h	217;"	d
GLX_SCREEN	drivers/GL/glx.h	143;"	d
GLX_SCREEN	drivers/GL/glxext.h	94;"	d
GLX_SCREEN	drivers/GL/glxtokens.h	157;"	d
GLX_SCREEN_EXT	drivers/GL/glxext.h	177;"	d
GLX_SCREEN_EXT	drivers/GL/glxtokens.h	232;"	d
GLX_SGIS_multisample	drivers/GL/glxext.h	417;"	d
GLX_SGIX_dmbuffer	drivers/GL/glxext.h	543;"	d
GLX_SGIX_fbconfig	drivers/GL/glxext.h	485;"	d
GLX_SGIX_hyperpipe_group	drivers/GL/glxext.h	635;"	d
GLX_SGIX_pbuffer	drivers/GL/glxext.h	503;"	d
GLX_SGIX_swap_barrier	drivers/GL/glxext.h	561;"	d
GLX_SGIX_swap_group	drivers/GL/glxext.h	553;"	d
GLX_SGIX_video_resize	drivers/GL/glxext.h	527;"	d
GLX_SGIX_video_source	drivers/GL/glxext.h	453;"	d
GLX_SGIX_visual_select_group	drivers/GL/glxext.h	611;"	d
GLX_SGI_cushion	drivers/GL/glxext.h	519;"	d
GLX_SGI_make_current_read	drivers/GL/glxext.h	443;"	d
GLX_SGI_swap_control	drivers/GL/glxext.h	425;"	d
GLX_SGI_video_sync	drivers/GL/glxext.h	433;"	d
GLX_SHARE_CONTEXT_EXT	drivers/GL/glxext.h	175;"	d
GLX_SHARE_CONTEXT_EXT	drivers/GL/glxtokens.h	230;"	d
GLX_SLOW_CONFIG	drivers/GL/glcore.h	148;"	d
GLX_SLOW_CONFIG	drivers/GL/glx.h	133;"	d
GLX_SLOW_CONFIG	drivers/GL/glxext.h	84;"	d
GLX_SLOW_CONFIG	drivers/GL/glxtokens.h	123;"	d
GLX_SLOW_CONFIG	drivers/GL/internal/glcore.h	148;"	d
GLX_SLOW_VISUAL_EXT	drivers/GL/glxext.h	169;"	d
GLX_SLOW_VISUAL_EXT	drivers/GL/glxtokens.h	208;"	d
GLX_STATIC_COLOR	drivers/GL/glcore.h	152;"	d
GLX_STATIC_COLOR	drivers/GL/glx.h	137;"	d
GLX_STATIC_COLOR	drivers/GL/glxext.h	88;"	d
GLX_STATIC_COLOR	drivers/GL/glxtokens.h	130;"	d
GLX_STATIC_COLOR	drivers/GL/internal/glcore.h	152;"	d
GLX_STATIC_COLOR_EXT	drivers/GL/glxext.h	148;"	d
GLX_STATIC_COLOR_EXT	drivers/GL/glxtokens.h	197;"	d
GLX_STATIC_GRAY	drivers/GL/glcore.h	154;"	d
GLX_STATIC_GRAY	drivers/GL/glx.h	139;"	d
GLX_STATIC_GRAY	drivers/GL/glxext.h	90;"	d
GLX_STATIC_GRAY	drivers/GL/glxtokens.h	132;"	d
GLX_STATIC_GRAY	drivers/GL/internal/glcore.h	154;"	d
GLX_STATIC_GRAY_EXT	drivers/GL/glxext.h	150;"	d
GLX_STATIC_GRAY_EXT	drivers/GL/glxtokens.h	199;"	d
GLX_STENCIL_BUFFER_BIT	drivers/GL/glx.h	130;"	d
GLX_STENCIL_BUFFER_BIT	drivers/GL/glxext.h	72;"	d
GLX_STENCIL_BUFFER_BIT	drivers/GL/glxtokens.h	177;"	d
GLX_STENCIL_BUFFER_BIT_SGIX	drivers/GL/glxext.h	203;"	d
GLX_STENCIL_SIZE	drivers/GL/glx.h	82;"	d
GLX_STENCIL_SIZE	drivers/GL/glxtokens.h	63;"	d
GLX_STEREO	drivers/GL/glx.h	75;"	d
GLX_STEREO	drivers/GL/glxtokens.h	56;"	d
GLX_SUN_get_transparent_index	drivers/GL/glxext.h	571;"	d
GLX_SWAP_COPY_OML	drivers/GL/glcore.h	159;"	d
GLX_SWAP_COPY_OML	drivers/GL/glxext.h	278;"	d
GLX_SWAP_COPY_OML	drivers/GL/glxtokens.h	214;"	d
GLX_SWAP_COPY_OML	drivers/GL/internal/glcore.h	159;"	d
GLX_SWAP_EXCHANGE_OML	drivers/GL/glcore.h	158;"	d
GLX_SWAP_EXCHANGE_OML	drivers/GL/glxext.h	277;"	d
GLX_SWAP_EXCHANGE_OML	drivers/GL/glxtokens.h	213;"	d
GLX_SWAP_EXCHANGE_OML	drivers/GL/internal/glcore.h	158;"	d
GLX_SWAP_METHOD_OML	drivers/GL/glxext.h	276;"	d
GLX_SWAP_METHOD_OML	drivers/GL/glxtokens.h	212;"	d
GLX_SWAP_UNDEFINED_OML	drivers/GL/glcore.h	160;"	d
GLX_SWAP_UNDEFINED_OML	drivers/GL/glxext.h	279;"	d
GLX_SWAP_UNDEFINED_OML	drivers/GL/glxtokens.h	215;"	d
GLX_SWAP_UNDEFINED_OML	drivers/GL/internal/glcore.h	160;"	d
GLX_SYNC_FRAME_SGIX	drivers/GL/glxext.h	226;"	d
GLX_SYNC_SWAP_SGIX	drivers/GL/glxext.h	227;"	d
GLX_TEXTURE_1D_BIT_EXT	drivers/GL/glx.h	426;"	d
GLX_TEXTURE_1D_BIT_EXT	drivers/GL/glxtokens.h	251;"	d
GLX_TEXTURE_1D_EXT	drivers/GL/glx.h	430;"	d
GLX_TEXTURE_1D_EXT	drivers/GL/glxtokens.h	255;"	d
GLX_TEXTURE_2D_BIT_EXT	drivers/GL/glx.h	427;"	d
GLX_TEXTURE_2D_BIT_EXT	drivers/GL/glxtokens.h	252;"	d
GLX_TEXTURE_2D_EXT	drivers/GL/glx.h	431;"	d
GLX_TEXTURE_2D_EXT	drivers/GL/glxtokens.h	256;"	d
GLX_TEXTURE_FORMAT_EXT	drivers/GL/glx.h	418;"	d
GLX_TEXTURE_FORMAT_EXT	drivers/GL/glxtokens.h	243;"	d
GLX_TEXTURE_FORMAT_NONE_EXT	drivers/GL/glx.h	422;"	d
GLX_TEXTURE_FORMAT_NONE_EXT	drivers/GL/glxtokens.h	247;"	d
GLX_TEXTURE_FORMAT_RGBA_EXT	drivers/GL/glx.h	424;"	d
GLX_TEXTURE_FORMAT_RGBA_EXT	drivers/GL/glxtokens.h	249;"	d
GLX_TEXTURE_FORMAT_RGB_EXT	drivers/GL/glx.h	423;"	d
GLX_TEXTURE_FORMAT_RGB_EXT	drivers/GL/glxtokens.h	248;"	d
GLX_TEXTURE_RECTANGLE_BIT_EXT	drivers/GL/glx.h	428;"	d
GLX_TEXTURE_RECTANGLE_BIT_EXT	drivers/GL/glxtokens.h	253;"	d
GLX_TEXTURE_RECTANGLE_EXT	drivers/GL/glx.h	432;"	d
GLX_TEXTURE_RECTANGLE_EXT	drivers/GL/glxtokens.h	257;"	d
GLX_TEXTURE_TARGET_EXT	drivers/GL/glx.h	419;"	d
GLX_TEXTURE_TARGET_EXT	drivers/GL/glxtokens.h	244;"	d
GLX_TRANSPARENT_ALPHA_VALUE	drivers/GL/glx.h	120;"	d
GLX_TRANSPARENT_ALPHA_VALUE	drivers/GL/glxext.h	81;"	d
GLX_TRANSPARENT_ALPHA_VALUE	drivers/GL/glxtokens.h	78;"	d
GLX_TRANSPARENT_ALPHA_VALUE_EXT	drivers/GL/glxext.h	143;"	d
GLX_TRANSPARENT_ALPHA_VALUE_EXT	drivers/GL/glxtokens.h	191;"	d
GLX_TRANSPARENT_BLUE_VALUE	drivers/GL/glx.h	119;"	d
GLX_TRANSPARENT_BLUE_VALUE	drivers/GL/glxext.h	80;"	d
GLX_TRANSPARENT_BLUE_VALUE	drivers/GL/glxtokens.h	77;"	d
GLX_TRANSPARENT_BLUE_VALUE_EXT	drivers/GL/glxext.h	142;"	d
GLX_TRANSPARENT_BLUE_VALUE_EXT	drivers/GL/glxtokens.h	190;"	d
GLX_TRANSPARENT_GREEN_VALUE	drivers/GL/glx.h	118;"	d
GLX_TRANSPARENT_GREEN_VALUE	drivers/GL/glxext.h	79;"	d
GLX_TRANSPARENT_GREEN_VALUE	drivers/GL/glxtokens.h	76;"	d
GLX_TRANSPARENT_GREEN_VALUE_EXT	drivers/GL/glxext.h	141;"	d
GLX_TRANSPARENT_GREEN_VALUE_EXT	drivers/GL/glxtokens.h	189;"	d
GLX_TRANSPARENT_INDEX	drivers/GL/glcore.h	156;"	d
GLX_TRANSPARENT_INDEX	drivers/GL/glx.h	141;"	d
GLX_TRANSPARENT_INDEX	drivers/GL/glxext.h	92;"	d
GLX_TRANSPARENT_INDEX	drivers/GL/glxtokens.h	137;"	d
GLX_TRANSPARENT_INDEX	drivers/GL/internal/glcore.h	156;"	d
GLX_TRANSPARENT_INDEX_EXT	drivers/GL/glxext.h	152;"	d
GLX_TRANSPARENT_INDEX_EXT	drivers/GL/glxtokens.h	204;"	d
GLX_TRANSPARENT_INDEX_VALUE	drivers/GL/glx.h	116;"	d
GLX_TRANSPARENT_INDEX_VALUE	drivers/GL/glxext.h	77;"	d
GLX_TRANSPARENT_INDEX_VALUE	drivers/GL/glxtokens.h	74;"	d
GLX_TRANSPARENT_INDEX_VALUE_EXT	drivers/GL/glxext.h	139;"	d
GLX_TRANSPARENT_INDEX_VALUE_EXT	drivers/GL/glxtokens.h	187;"	d
GLX_TRANSPARENT_RED_VALUE	drivers/GL/glx.h	117;"	d
GLX_TRANSPARENT_RED_VALUE	drivers/GL/glxext.h	78;"	d
GLX_TRANSPARENT_RED_VALUE	drivers/GL/glxtokens.h	75;"	d
GLX_TRANSPARENT_RED_VALUE_EXT	drivers/GL/glxext.h	140;"	d
GLX_TRANSPARENT_RED_VALUE_EXT	drivers/GL/glxtokens.h	188;"	d
GLX_TRANSPARENT_RGB	drivers/GL/glcore.h	155;"	d
GLX_TRANSPARENT_RGB	drivers/GL/glx.h	140;"	d
GLX_TRANSPARENT_RGB	drivers/GL/glxext.h	91;"	d
GLX_TRANSPARENT_RGB	drivers/GL/glxtokens.h	136;"	d
GLX_TRANSPARENT_RGB	drivers/GL/internal/glcore.h	155;"	d
GLX_TRANSPARENT_RGB_EXT	drivers/GL/glxext.h	151;"	d
GLX_TRANSPARENT_RGB_EXT	drivers/GL/glxtokens.h	203;"	d
GLX_TRANSPARENT_TYPE	drivers/GL/glx.h	115;"	d
GLX_TRANSPARENT_TYPE	drivers/GL/glxext.h	76;"	d
GLX_TRANSPARENT_TYPE	drivers/GL/glxtokens.h	73;"	d
GLX_TRANSPARENT_TYPE_EXT	drivers/GL/glxext.h	138;"	d
GLX_TRANSPARENT_TYPE_EXT	drivers/GL/glxtokens.h	186;"	d
GLX_TRUE_COLOR	drivers/GL/glcore.h	149;"	d
GLX_TRUE_COLOR	drivers/GL/glx.h	134;"	d
GLX_TRUE_COLOR	drivers/GL/glxext.h	85;"	d
GLX_TRUE_COLOR	drivers/GL/glxtokens.h	127;"	d
GLX_TRUE_COLOR	drivers/GL/internal/glcore.h	149;"	d
GLX_TRUE_COLOR_EXT	drivers/GL/glxext.h	145;"	d
GLX_TRUE_COLOR_EXT	drivers/GL/glxtokens.h	194;"	d
GLX_USE_GL	drivers/GL/glx.h	70;"	d
GLX_USE_GL	drivers/GL/glxtokens.h	51;"	d
GLX_VENDOR	drivers/GL/glx.h	104;"	d
GLX_VENDOR	drivers/GL/glxproto.h	78;"	d
GLX_VENDOR	drivers/GL/glxtokens.h	223;"	d
GLX_VERSION	drivers/GL/glx.h	105;"	d
GLX_VERSION	drivers/GL/glxproto.h	81;"	d
GLX_VERSION	drivers/GL/glxtokens.h	224;"	d
GLX_VERSION_1_1	drivers/GL/glx.h	58;"	d
GLX_VERSION_1_1	drivers/GL/glxtokens.h	43;"	d
GLX_VERSION_1_2	drivers/GL/glx.h	59;"	d
GLX_VERSION_1_2	drivers/GL/glxtokens.h	44;"	d
GLX_VERSION_1_3	drivers/GL/glx.h	60;"	d
GLX_VERSION_1_3	drivers/GL/glxext.h	355;"	d
GLX_VERSION_1_3	drivers/GL/glxtokens.h	45;"	d
GLX_VERSION_1_4	drivers/GL/glx.h	61;"	d
GLX_VERSION_1_4	drivers/GL/glxext.h	397;"	d
GLX_VERSION_1_4	drivers/GL/glxtokens.h	46;"	d
GLX_VIDEO_SOURCE_TYPE	drivers/GL/glxproto.h	1912;"	d
GLX_VISUAL_CAVEAT_EXT	drivers/GL/glxext.h	168;"	d
GLX_VISUAL_CAVEAT_EXT	drivers/GL/glxtokens.h	207;"	d
GLX_VISUAL_ID	drivers/GL/glx.h	142;"	d
GLX_VISUAL_ID	drivers/GL/glxext.h	93;"	d
GLX_VISUAL_ID	drivers/GL/glxtokens.h	86;"	d
GLX_VISUAL_ID_EXT	drivers/GL/glxext.h	176;"	d
GLX_VISUAL_ID_EXT	drivers/GL/glxtokens.h	231;"	d
GLX_VISUAL_SELECT_GROUP_SGIX	drivers/GL/glxext.h	272;"	d
GLX_VISUAL_SELECT_GROUP_SGIX	drivers/GL/glxtokens.h	218;"	d
GLX_WIDTH	drivers/GL/glx.h	156;"	d
GLX_WIDTH	drivers/GL/glxext.h	107;"	d
GLX_WIDTH	drivers/GL/glxtokens.h	146;"	d
GLX_WIDTH_SGIX	drivers/GL/glxext.h	213;"	d
GLX_WINDOW	drivers/GL/glx.h	161;"	d
GLX_WINDOW	drivers/GL/glxext.h	112;"	d
GLX_WINDOW	drivers/GL/glxtokens.h	167;"	d
GLX_WINDOW_BIT	drivers/GL/glcore.h	166;"	d
GLX_WINDOW_BIT	drivers/GL/glx.h	121;"	d
GLX_WINDOW_BIT	drivers/GL/glxext.h	60;"	d
GLX_WINDOW_BIT	drivers/GL/glxtokens.h	117;"	d
GLX_WINDOW_BIT	drivers/GL/internal/glcore.h	166;"	d
GLX_WINDOW_BIT_SGIX	drivers/GL/glxext.h	181;"	d
GLX_WINDOW_SGIX	drivers/GL/glxext.h	218;"	d
GLX_WINDOW_TYPE	drivers/GL/glxproto.h	1910;"	d
GLX_X_RENDERABLE	drivers/GL/glx.h	147;"	d
GLX_X_RENDERABLE	drivers/GL/glxext.h	98;"	d
GLX_X_RENDERABLE	drivers/GL/glxtokens.h	81;"	d
GLX_X_RENDERABLE_SGIX	drivers/GL/glxext.h	187;"	d
GLX_X_VISUAL_TYPE	drivers/GL/glx.h	114;"	d
GLX_X_VISUAL_TYPE	drivers/GL/glxext.h	75;"	d
GLX_X_VISUAL_TYPE	drivers/GL/glxtokens.h	71;"	d
GLX_X_VISUAL_TYPE_EXT	drivers/GL/glxext.h	137;"	d
GLX_X_VISUAL_TYPE_EXT	drivers/GL/glxtokens.h	185;"	d
GLX_Y_INVERTED_EXT	drivers/GL/glx.h	416;"	d
GLX_Y_INVERTED_EXT	drivers/GL/glxtokens.h	241;"	d
GLYPHMETRICSFLOAT	drivers/GL/glut.h	/^typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT, *PGLYPHMETRICSFLOAT, *LPGLYPHMETRICSFLOAT;$/;"	t	typeref:struct:_GLYPHMETRICSFLOAT
GLYPHMETRICSFLOAT	drivers/GL/mesa_wgl.h	/^typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT, *PGLYPHMETRICSFLOAT, *LPGLYPHMETRICSFLOAT;$/;"	t	typeref:struct:_GLYPHMETRICSFLOAT
GL_1PASS_EXT	drivers/GL/glext.h	2118;"	d
GL_1PASS_SGIS	drivers/GL/glext.h	1200;"	d
GL_2D	drivers/GL/gl.h	388;"	d
GL_2PASS_0_EXT	drivers/GL/glext.h	2119;"	d
GL_2PASS_0_SGIS	drivers/GL/glext.h	1201;"	d
GL_2PASS_1_EXT	drivers/GL/glext.h	2120;"	d
GL_2PASS_1_SGIS	drivers/GL/glext.h	1202;"	d
GL_2X_BIT_ATI	drivers/GL/glext.h	2541;"	d
GL_2_BYTES	drivers/GL/gl.h	180;"	d
GL_3D	drivers/GL/gl.h	389;"	d
GL_3DFX_multisample	drivers/GL/glext.h	5453;"	d
GL_3DFX_tbuffer	drivers/GL/glext.h	5457;"	d
GL_3DFX_texture_compression_FXT1	drivers/GL/glext.h	5449;"	d
GL_3D_COLOR	drivers/GL/gl.h	390;"	d
GL_3D_COLOR_TEXTURE	drivers/GL/gl.h	391;"	d
GL_3_BYTES	drivers/GL/gl.h	181;"	d
GL_422_AVERAGE_EXT	drivers/GL/glext.h	1883;"	d
GL_422_EXT	drivers/GL/glext.h	1881;"	d
GL_422_REV_AVERAGE_EXT	drivers/GL/glext.h	1884;"	d
GL_422_REV_EXT	drivers/GL/glext.h	1882;"	d
GL_4D_COLOR_TEXTURE	drivers/GL/gl.h	392;"	d
GL_4PASS_0_EXT	drivers/GL/glext.h	2121;"	d
GL_4PASS_0_SGIS	drivers/GL/glext.h	1203;"	d
GL_4PASS_1_EXT	drivers/GL/glext.h	2122;"	d
GL_4PASS_1_SGIS	drivers/GL/glext.h	1204;"	d
GL_4PASS_2_EXT	drivers/GL/glext.h	2123;"	d
GL_4PASS_2_SGIS	drivers/GL/glext.h	1205;"	d
GL_4PASS_3_EXT	drivers/GL/glext.h	2124;"	d
GL_4PASS_3_SGIS	drivers/GL/glext.h	1206;"	d
GL_4X_BIT_ATI	drivers/GL/glext.h	2542;"	d
GL_4_BYTES	drivers/GL/gl.h	182;"	d
GL_8X_BIT_ATI	drivers/GL/glext.h	2543;"	d
GL_ABGR_EXT	drivers/GL/glext.h	958;"	d
GL_ACCUM	drivers/GL/gl.h	355;"	d
GL_ACCUM_ALPHA_BITS	drivers/GL/gl.h	353;"	d
GL_ACCUM_BLUE_BITS	drivers/GL/gl.h	352;"	d
GL_ACCUM_BUFFER_BIT	drivers/GL/gl.h	707;"	d
GL_ACCUM_CLEAR_VALUE	drivers/GL/gl.h	354;"	d
GL_ACCUM_GREEN_BITS	drivers/GL/gl.h	351;"	d
GL_ACCUM_RED_BITS	drivers/GL/gl.h	350;"	d
GL_ACTIVE_ATTRIBUTES	drivers/GL/glext.h	449;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	drivers/GL/glext.h	450;"	d
GL_ACTIVE_STENCIL_FACE_EXT	drivers/GL/glext.h	2766;"	d
GL_ACTIVE_TEXTURE	drivers/GL/gl.h	1810;"	d
GL_ACTIVE_TEXTURE	drivers/GL/glext.h	214;"	d
GL_ACTIVE_TEXTURE_ARB	drivers/GL/gl.h	2061;"	d
GL_ACTIVE_TEXTURE_ARB	drivers/GL/glext.h	495;"	d
GL_ACTIVE_UNIFORMS	drivers/GL/glext.h	446;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	drivers/GL/glext.h	447;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	drivers/GL/glext.h	564;"	d
GL_ADD	drivers/GL/gl.h	356;"	d
GL_ADD_ATI	drivers/GL/glext.h	2513;"	d
GL_ADD_SIGNED	drivers/GL/gl.h	1870;"	d
GL_ADD_SIGNED	drivers/GL/glext.h	270;"	d
GL_ADD_SIGNED_ARB	drivers/GL/glext.h	637;"	d
GL_ADD_SIGNED_EXT	drivers/GL/glext.h	1788;"	d
GL_ALIASED_LINE_WIDTH_RANGE	drivers/GL/gl.h	1506;"	d
GL_ALIASED_LINE_WIDTH_RANGE	drivers/GL/glext.h	100;"	d
GL_ALIASED_POINT_SIZE_RANGE	drivers/GL/gl.h	1505;"	d
GL_ALIASED_POINT_SIZE_RANGE	drivers/GL/glext.h	99;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	drivers/GL/glext.h	1503;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	drivers/GL/glext.h	1504;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	drivers/GL/glext.h	1501;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	drivers/GL/glext.h	1502;"	d
GL_ALL_ATTRIB_BITS	drivers/GL/gl.h	718;"	d
GL_ALL_CLIENT_ATTRIB_BITS	drivers/GL/gl.h	764;"	d
GL_ALL_COMPLETED_NV	drivers/GL/glext.h	2176;"	d
GL_ALPHA	drivers/GL/gl.h	479;"	d
GL_ALPHA12	drivers/GL/gl.h	731;"	d
GL_ALPHA12_EXT	drivers/GL/glext.h	978;"	d
GL_ALPHA16	drivers/GL/gl.h	732;"	d
GL_ALPHA16F_ARB	drivers/GL/glext.h	944;"	d
GL_ALPHA16_EXT	drivers/GL/glext.h	979;"	d
GL_ALPHA32F_ARB	drivers/GL/glext.h	938;"	d
GL_ALPHA4	drivers/GL/gl.h	729;"	d
GL_ALPHA4_EXT	drivers/GL/glext.h	976;"	d
GL_ALPHA8	drivers/GL/gl.h	730;"	d
GL_ALPHA8_EXT	drivers/GL/glext.h	977;"	d
GL_ALPHA_BIAS	drivers/GL/gl.h	599;"	d
GL_ALPHA_BITS	drivers/GL/gl.h	482;"	d
GL_ALPHA_BLEND_EQUATION_ATI	drivers/GL/gl.h	2226;"	d
GL_ALPHA_FLOAT16_ATI	drivers/GL/glext.h	2854;"	d
GL_ALPHA_FLOAT32_ATI	drivers/GL/glext.h	2848;"	d
GL_ALPHA_MAX_CLAMP_INGR	drivers/GL/glext.h	1868;"	d
GL_ALPHA_MAX_SGIX	drivers/GL/glext.h	1655;"	d
GL_ALPHA_MIN_CLAMP_INGR	drivers/GL/glext.h	1864;"	d
GL_ALPHA_MIN_SGIX	drivers/GL/glext.h	1654;"	d
GL_ALPHA_SCALE	drivers/GL/gl.h	598;"	d
GL_ALPHA_TEST	drivers/GL/gl.h	362;"	d
GL_ALPHA_TEST_FUNC	drivers/GL/gl.h	364;"	d
GL_ALPHA_TEST_REF	drivers/GL/gl.h	363;"	d
GL_ALWAYS	drivers/GL/gl.h	296;"	d
GL_ALWAYS_FAST_HINT_PGI	drivers/GL/glext.h	1499;"	d
GL_ALWAYS_SOFT_HINT_PGI	drivers/GL/glext.h	1500;"	d
GL_AMBIENT	drivers/GL/gl.h	320;"	d
GL_AMBIENT_AND_DIFFUSE	drivers/GL/gl.h	327;"	d
GL_AND	drivers/GL/gl.h	432;"	d
GL_AND_INVERTED	drivers/GL/gl.h	439;"	d
GL_AND_REVERSE	drivers/GL/gl.h	438;"	d
GL_APPLE_client_storage	drivers/GL/glext.h	6111;"	d
GL_APPLE_element_array	drivers/GL/glext.h	6115;"	d
GL_APPLE_fence	drivers/GL/glext.h	6131;"	d
GL_APPLE_specular_vector	drivers/GL/glext.h	5061;"	d
GL_APPLE_transform_hint	drivers/GL/glext.h	5065;"	d
GL_APPLE_vertex_array_object	drivers/GL/glext.h	6153;"	d
GL_APPLE_vertex_array_range	drivers/GL/glext.h	6167;"	d
GL_APPLE_ycbcr_422	drivers/GL/glext.h	6179;"	d
GL_ARB_color_buffer_float	drivers/GL/glext.h	4149;"	d
GL_ARB_depth_texture	drivers/GL/glext.h	3786;"	d
GL_ARB_draw_buffers	drivers/GL/glext.h	4137;"	d
GL_ARB_fragment_program	drivers/GL/glext.h	3966;"	d
GL_ARB_fragment_program_shadow	drivers/GL/glext.h	4133;"	d
GL_ARB_fragment_shader	drivers/GL/glext.h	4117;"	d
GL_ARB_half_float_pixel	drivers/GL/glext.h	4157;"	d
GL_ARB_imaging	drivers/GL/gl.h	140;"	d
GL_ARB_matrix_palette	drivers/GL/glext.h	3754;"	d
GL_ARB_multisample	drivers/GL/glext.h	3678;"	d
GL_ARB_multitexture	drivers/GL/gl.h	2027;"	d
GL_ARB_multitexture	drivers/GL/glext.h	3590;"	d
GL_ARB_occlusion_query	drivers/GL/glext.h	3999;"	d
GL_ARB_pixel_buffer_object	drivers/GL/glext.h	4165;"	d
GL_ARB_point_parameters	drivers/GL/glext.h	3718;"	d
GL_ARB_point_sprite	drivers/GL/glext.h	4129;"	d
GL_ARB_shader_objects	drivers/GL/glext.h	4021;"	d
GL_ARB_shading_language_100	drivers/GL/glext.h	4121;"	d
GL_ARB_shadow	drivers/GL/glext.h	3790;"	d
GL_ARB_shadow_ambient	drivers/GL/glext.h	3794;"	d
GL_ARB_texture_border_clamp	drivers/GL/glext.h	3714;"	d
GL_ARB_texture_compression	drivers/GL/glext.h	3694;"	d
GL_ARB_texture_cube_map	drivers/GL/glext.h	3690;"	d
GL_ARB_texture_env_add	drivers/GL/glext.h	3686;"	d
GL_ARB_texture_env_combine	drivers/GL/glext.h	3770;"	d
GL_ARB_texture_env_crossbar	drivers/GL/glext.h	3774;"	d
GL_ARB_texture_env_dot3	drivers/GL/glext.h	3778;"	d
GL_ARB_texture_float	drivers/GL/glext.h	4161;"	d
GL_ARB_texture_mirrored_repeat	drivers/GL/glext.h	3782;"	d
GL_ARB_texture_non_power_of_two	drivers/GL/glext.h	4125;"	d
GL_ARB_texture_rectangle	drivers/GL/glext.h	4145;"	d
GL_ARB_transpose_matrix	drivers/GL/glext.h	3664;"	d
GL_ARB_vertex_blend	drivers/GL/glext.h	3728;"	d
GL_ARB_vertex_buffer_object	drivers/GL/glext.h	3971;"	d
GL_ARB_vertex_program	drivers/GL/glext.h	3836;"	d
GL_ARB_vertex_shader	drivers/GL/glext.h	4105;"	d
GL_ARB_window_pos	drivers/GL/glext.h	3798;"	d
GL_ARRAY_BUFFER	drivers/GL/glext.h	329;"	d
GL_ARRAY_BUFFER_ARB	drivers/GL/glext.h	781;"	d
GL_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	331;"	d
GL_ARRAY_BUFFER_BINDING_ARB	drivers/GL/glext.h	783;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	drivers/GL/glext.h	1579;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	drivers/GL/glext.h	1578;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	drivers/GL/glext.h	2572;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	drivers/GL/glext.h	2573;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	drivers/GL/glext.h	1679;"	d
GL_ASYNC_HISTOGRAM_SGIX	drivers/GL/glext.h	1687;"	d
GL_ASYNC_MARKER_SGIX	drivers/GL/glext.h	1674;"	d
GL_ASYNC_READ_PIXELS_SGIX	drivers/GL/glext.h	1680;"	d
GL_ASYNC_TEX_IMAGE_SGIX	drivers/GL/glext.h	1678;"	d
GL_ATI_blend_equation_separate	drivers/GL/gl.h	2224;"	d
GL_ATI_draw_buffers	drivers/GL/glext.h	6187;"	d
GL_ATI_element_array	drivers/GL/glext.h	6025;"	d
GL_ATI_envmap_bumpmap	drivers/GL/glext.h	5751;"	d
GL_ATI_fragment_shader	drivers/GL/glext.h	5765;"	d
GL_ATI_map_object_buffer	drivers/GL/glext.h	6359;"	d
GL_ATI_pixel_format_float	drivers/GL/glext.h	6195;"	d
GL_ATI_pn_triangles	drivers/GL/glext.h	5799;"	d
GL_ATI_separate_stencil	drivers/GL/glext.h	6369;"	d
GL_ATI_text_fragment_shader	drivers/GL/glext.h	6107;"	d
GL_ATI_texture_env_combine3	drivers/GL/glext.h	6202;"	d
GL_ATI_texture_float	drivers/GL/glext.h	6206;"	d
GL_ATI_texture_mirror_once	drivers/GL/glext.h	5511;"	d
GL_ATI_vertex_array_object	drivers/GL/glext.h	5809;"	d
GL_ATI_vertex_attrib_array_object	drivers/GL/glext.h	6379;"	d
GL_ATI_vertex_streams	drivers/GL/glext.h	5929;"	d
GL_ATTACHED_SHADERS	drivers/GL/glext.h	445;"	d
GL_ATTENUATION_EXT	drivers/GL/glext.h	1644;"	d
GL_ATTRIB_ARRAY_POINTER_NV	drivers/GL/glext.h	2344;"	d
GL_ATTRIB_ARRAY_SIZE_NV	drivers/GL/glext.h	2318;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	drivers/GL/glext.h	2319;"	d
GL_ATTRIB_ARRAY_TYPE_NV	drivers/GL/glext.h	2320;"	d
GL_ATTRIB_STACK_DEPTH	drivers/GL/gl.h	517;"	d
GL_AUTO_NORMAL	drivers/GL/gl.h	546;"	d
GL_AUX0	drivers/GL/gl.h	471;"	d
GL_AUX1	drivers/GL/gl.h	472;"	d
GL_AUX2	drivers/GL/gl.h	473;"	d
GL_AUX3	drivers/GL/gl.h	474;"	d
GL_AUX_BUFFERS	drivers/GL/gl.h	488;"	d
GL_AVERAGE_EXT	drivers/GL/glext.h	1713;"	d
GL_AVERAGE_HP	drivers/GL/glext.h	1444;"	d
GL_BACK	drivers/GL/gl.h	267;"	d
GL_BACK_LEFT	drivers/GL/gl.h	469;"	d
GL_BACK_NORMALS_HINT_PGI	drivers/GL/glext.h	1512;"	d
GL_BACK_RIGHT	drivers/GL/gl.h	470;"	d
GL_BGR	drivers/GL/gl.h	1480;"	d
GL_BGR	drivers/GL/glext.h	83;"	d
GL_BGRA	drivers/GL/gl.h	1481;"	d
GL_BGRA	drivers/GL/glext.h	84;"	d
GL_BGRA_EXT	drivers/GL/glext.h	1670;"	d
GL_BGR_EXT	drivers/GL/glext.h	1669;"	d
GL_BIAS_BIT_ATI	drivers/GL/glext.h	2550;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	drivers/GL/glext.h	1983;"	d
GL_BINORMAL_ARRAY_EXT	drivers/GL/glext.h	1768;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	drivers/GL/glext.h	1776;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	drivers/GL/glext.h	1774;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	drivers/GL/glext.h	1773;"	d
GL_BITMAP	drivers/GL/gl.h	493;"	d
GL_BITMAP_TOKEN	drivers/GL/gl.h	397;"	d
GL_BLEND	drivers/GL/gl.h	367;"	d
GL_BLEND_COLOR	drivers/GL/gl.h	1625;"	d
GL_BLEND_COLOR	drivers/GL/glext.h	108;"	d
GL_BLEND_COLOR_EXT	drivers/GL/glext.h	966;"	d
GL_BLEND_DST	drivers/GL/gl.h	369;"	d
GL_BLEND_DST_ALPHA	drivers/GL/glext.h	283;"	d
GL_BLEND_DST_ALPHA_EXT	drivers/GL/glext.h	1856;"	d
GL_BLEND_DST_RGB	drivers/GL/glext.h	281;"	d
GL_BLEND_DST_RGB_EXT	drivers/GL/glext.h	1854;"	d
GL_BLEND_EQUATION	drivers/GL/gl.h	1619;"	d
GL_BLEND_EQUATION	drivers/GL/glext.h	112;"	d
GL_BLEND_EQUATION_ALPHA	drivers/GL/glext.h	406;"	d
GL_BLEND_EQUATION_ALPHA_EXT	drivers/GL/glext.h	2943;"	d
GL_BLEND_EQUATION_EXT	drivers/GL/glext.h	1295;"	d
GL_BLEND_EQUATION_RGB	drivers/GL/glext.h	376;"	d
GL_BLEND_EQUATION_RGB_EXT	drivers/GL/glext.h	2942;"	d
GL_BLEND_SRC	drivers/GL/gl.h	368;"	d
GL_BLEND_SRC_ALPHA	drivers/GL/glext.h	284;"	d
GL_BLEND_SRC_ALPHA_EXT	drivers/GL/glext.h	1857;"	d
GL_BLEND_SRC_RGB	drivers/GL/glext.h	282;"	d
GL_BLEND_SRC_RGB_EXT	drivers/GL/glext.h	1855;"	d
GL_BLUE	drivers/GL/gl.h	478;"	d
GL_BLUE_BIAS	drivers/GL/gl.h	597;"	d
GL_BLUE_BITS	drivers/GL/gl.h	485;"	d
GL_BLUE_BIT_ATI	drivers/GL/glext.h	2540;"	d
GL_BLUE_MAX_CLAMP_INGR	drivers/GL/glext.h	1867;"	d
GL_BLUE_MIN_CLAMP_INGR	drivers/GL/glext.h	1863;"	d
GL_BLUE_SCALE	drivers/GL/gl.h	596;"	d
GL_BOOL	drivers/GL/glext.h	427;"	d
GL_BOOL_ARB	drivers/GL/glext.h	831;"	d
GL_BOOL_VEC2	drivers/GL/glext.h	428;"	d
GL_BOOL_VEC2_ARB	drivers/GL/glext.h	832;"	d
GL_BOOL_VEC3	drivers/GL/glext.h	429;"	d
GL_BOOL_VEC3_ARB	drivers/GL/glext.h	833;"	d
GL_BOOL_VEC4	drivers/GL/glext.h	430;"	d
GL_BOOL_VEC4_ARB	drivers/GL/glext.h	834;"	d
GL_BUFFER_ACCESS	drivers/GL/glext.h	346;"	d
GL_BUFFER_ACCESS_ARB	drivers/GL/glext.h	798;"	d
GL_BUFFER_MAPPED	drivers/GL/glext.h	347;"	d
GL_BUFFER_MAPPED_ARB	drivers/GL/glext.h	799;"	d
GL_BUFFER_MAP_POINTER	drivers/GL/glext.h	348;"	d
GL_BUFFER_MAP_POINTER_ARB	drivers/GL/glext.h	800;"	d
GL_BUFFER_SIZE	drivers/GL/glext.h	323;"	d
GL_BUFFER_SIZE_ARB	drivers/GL/glext.h	779;"	d
GL_BUFFER_USAGE	drivers/GL/glext.h	324;"	d
GL_BUFFER_USAGE_ARB	drivers/GL/glext.h	780;"	d
GL_BUMP_ENVMAP_ATI	drivers/GL/glext.h	2442;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	drivers/GL/glext.h	2438;"	d
GL_BUMP_ROT_MATRIX_ATI	drivers/GL/glext.h	2436;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	drivers/GL/glext.h	2437;"	d
GL_BUMP_TARGET_ATI	drivers/GL/glext.h	2443;"	d
GL_BUMP_TEX_UNITS_ATI	drivers/GL/glext.h	2439;"	d
GL_BYTE	drivers/GL/gl.h	173;"	d
GL_C3F_V3F	drivers/GL/gl.h	228;"	d
GL_C4F_N3F_V3F	drivers/GL/gl.h	230;"	d
GL_C4UB_V2F	drivers/GL/gl.h	226;"	d
GL_C4UB_V3F	drivers/GL/gl.h	227;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	drivers/GL/glext.h	1538;"	d
GL_CCW	drivers/GL/gl.h	265;"	d
GL_CLAMP	drivers/GL/gl.h	674;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	drivers/GL/glext.h	918;"	d
GL_CLAMP_READ_COLOR_ARB	drivers/GL/glext.h	919;"	d
GL_CLAMP_TO_BORDER	drivers/GL/gl.h	1880;"	d
GL_CLAMP_TO_BORDER	drivers/GL/glext.h	253;"	d
GL_CLAMP_TO_BORDER_ARB	drivers/GL/glext.h	552;"	d
GL_CLAMP_TO_BORDER_SGIS	drivers/GL/glext.h	1288;"	d
GL_CLAMP_TO_EDGE	drivers/GL/gl.h	1477;"	d
GL_CLAMP_TO_EDGE	drivers/GL/glext.h	87;"	d
GL_CLAMP_TO_EDGE_SGIS	drivers/GL/glext.h	1284;"	d
GL_CLAMP_VERTEX_COLOR_ARB	drivers/GL/glext.h	917;"	d
GL_CLEAR	drivers/GL/gl.h	426;"	d
GL_CLIENT_ACTIVE_TEXTURE	drivers/GL/gl.h	1811;"	d
GL_CLIENT_ACTIVE_TEXTURE	drivers/GL/glext.h	215;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	drivers/GL/gl.h	2062;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	drivers/GL/glext.h	496;"	d
GL_CLIENT_ALL_ATTRIB_BITS	drivers/GL/gl.h	765;"	d
GL_CLIENT_ATTRIB_STACK_DEPTH	drivers/GL/gl.h	518;"	d
GL_CLIENT_PIXEL_STORE_BIT	drivers/GL/gl.h	762;"	d
GL_CLIENT_VERTEX_ARRAY_BIT	drivers/GL/gl.h	763;"	d
GL_CLIP_FAR_HINT_PGI	drivers/GL/glext.h	1510;"	d
GL_CLIP_NEAR_HINT_PGI	drivers/GL/glext.h	1509;"	d
GL_CLIP_PLANE0	drivers/GL/gl.h	342;"	d
GL_CLIP_PLANE1	drivers/GL/gl.h	343;"	d
GL_CLIP_PLANE2	drivers/GL/gl.h	344;"	d
GL_CLIP_PLANE3	drivers/GL/gl.h	345;"	d
GL_CLIP_PLANE4	drivers/GL/gl.h	346;"	d
GL_CLIP_PLANE5	drivers/GL/gl.h	347;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	drivers/GL/glext.h	1526;"	d
GL_CMYKA_EXT	drivers/GL/glext.h	1149;"	d
GL_CMYK_EXT	drivers/GL/glext.h	1148;"	d
GL_CND0_ATI	drivers/GL/glext.h	2521;"	d
GL_CND_ATI	drivers/GL/glext.h	2520;"	d
GL_COEFF	drivers/GL/gl.h	569;"	d
GL_COLOR	drivers/GL/gl.h	494;"	d
GL_COLOR3_BIT_PGI	drivers/GL/glext.h	1472;"	d
GL_COLOR4_BIT_PGI	drivers/GL/glext.h	1473;"	d
GL_COLOR_ALPHA_PAIRING_ATI	drivers/GL/glext.h	2531;"	d
GL_COLOR_ARRAY	drivers/GL/gl.h	200;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	335;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	drivers/GL/glext.h	787;"	d
GL_COLOR_ARRAY_COUNT_EXT	drivers/GL/glext.h	1235;"	d
GL_COLOR_ARRAY_EXT	drivers/GL/glext.h	1221;"	d
GL_COLOR_ARRAY_LIST_IBM	drivers/GL/glext.h	2060;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	drivers/GL/glext.h	2068;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	drivers/GL/glext.h	1698;"	d
GL_COLOR_ARRAY_POINTER	drivers/GL/gl.h	220;"	d
GL_COLOR_ARRAY_POINTER_EXT	drivers/GL/glext.h	1247;"	d
GL_COLOR_ARRAY_SIZE	drivers/GL/gl.h	209;"	d
GL_COLOR_ARRAY_SIZE_EXT	drivers/GL/glext.h	1232;"	d
GL_COLOR_ARRAY_STRIDE	drivers/GL/gl.h	211;"	d
GL_COLOR_ARRAY_STRIDE_EXT	drivers/GL/glext.h	1234;"	d
GL_COLOR_ARRAY_TYPE	drivers/GL/gl.h	210;"	d
GL_COLOR_ARRAY_TYPE_EXT	drivers/GL/glext.h	1233;"	d
GL_COLOR_ATTACHMENT0_EXT	drivers/GL/glext.h	3003;"	d
GL_COLOR_ATTACHMENT10_EXT	drivers/GL/glext.h	3013;"	d
GL_COLOR_ATTACHMENT11_EXT	drivers/GL/glext.h	3014;"	d
GL_COLOR_ATTACHMENT12_EXT	drivers/GL/glext.h	3015;"	d
GL_COLOR_ATTACHMENT13_EXT	drivers/GL/glext.h	3016;"	d
GL_COLOR_ATTACHMENT14_EXT	drivers/GL/glext.h	3017;"	d
GL_COLOR_ATTACHMENT15_EXT	drivers/GL/glext.h	3018;"	d
GL_COLOR_ATTACHMENT1_EXT	drivers/GL/glext.h	3004;"	d
GL_COLOR_ATTACHMENT2_EXT	drivers/GL/glext.h	3005;"	d
GL_COLOR_ATTACHMENT3_EXT	drivers/GL/glext.h	3006;"	d
GL_COLOR_ATTACHMENT4_EXT	drivers/GL/glext.h	3007;"	d
GL_COLOR_ATTACHMENT5_EXT	drivers/GL/glext.h	3008;"	d
GL_COLOR_ATTACHMENT6_EXT	drivers/GL/glext.h	3009;"	d
GL_COLOR_ATTACHMENT7_EXT	drivers/GL/glext.h	3010;"	d
GL_COLOR_ATTACHMENT8_EXT	drivers/GL/glext.h	3011;"	d
GL_COLOR_ATTACHMENT9_EXT	drivers/GL/glext.h	3012;"	d
GL_COLOR_BUFFER_BIT	drivers/GL/gl.h	712;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	drivers/GL/glext.h	2836;"	d
GL_COLOR_CLEAR_VALUE	drivers/GL/gl.h	519;"	d
GL_COLOR_INDEX	drivers/GL/gl.h	475;"	d
GL_COLOR_INDEX12_EXT	drivers/GL/glext.h	1520;"	d
GL_COLOR_INDEX16_EXT	drivers/GL/glext.h	1521;"	d
GL_COLOR_INDEX1_EXT	drivers/GL/glext.h	1516;"	d
GL_COLOR_INDEX2_EXT	drivers/GL/glext.h	1517;"	d
GL_COLOR_INDEX4_EXT	drivers/GL/glext.h	1518;"	d
GL_COLOR_INDEX8_EXT	drivers/GL/glext.h	1519;"	d
GL_COLOR_INDEXES	drivers/GL/gl.h	328;"	d
GL_COLOR_LOGIC_OP	drivers/GL/gl.h	424;"	d
GL_COLOR_MATERIAL	drivers/GL/gl.h	336;"	d
GL_COLOR_MATERIAL_FACE	drivers/GL/gl.h	337;"	d
GL_COLOR_MATERIAL_PARAMETER	drivers/GL/gl.h	338;"	d
GL_COLOR_MATRIX	drivers/GL/gl.h	1594;"	d
GL_COLOR_MATRIX	drivers/GL/glext.h	149;"	d
GL_COLOR_MATRIX_SGI	drivers/GL/glext.h	1085;"	d
GL_COLOR_MATRIX_STACK_DEPTH	drivers/GL/gl.h	1595;"	d
GL_COLOR_MATRIX_STACK_DEPTH	drivers/GL/glext.h	150;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	drivers/GL/glext.h	1086;"	d
GL_COLOR_SUM	drivers/GL/glext.h	303;"	d
GL_COLOR_SUM_ARB	drivers/GL/glext.h	679;"	d
GL_COLOR_SUM_CLAMP_NV	drivers/GL/glext.h	1997;"	d
GL_COLOR_SUM_EXT	drivers/GL/glext.h	1733;"	d
GL_COLOR_TABLE	drivers/GL/gl.h	1555;"	d
GL_COLOR_TABLE	drivers/GL/glext.h	160;"	d
GL_COLOR_TABLE_ALPHA_SIZE	drivers/GL/gl.h	1568;"	d
GL_COLOR_TABLE_ALPHA_SIZE	drivers/GL/glext.h	173;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	drivers/GL/glext.h	1112;"	d
GL_COLOR_TABLE_BIAS	drivers/GL/gl.h	1562;"	d
GL_COLOR_TABLE_BIAS	drivers/GL/glext.h	167;"	d
GL_COLOR_TABLE_BIAS_SGI	drivers/GL/glext.h	1106;"	d
GL_COLOR_TABLE_BLUE_SIZE	drivers/GL/gl.h	1567;"	d
GL_COLOR_TABLE_BLUE_SIZE	drivers/GL/glext.h	172;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	drivers/GL/glext.h	1111;"	d
GL_COLOR_TABLE_FORMAT	drivers/GL/gl.h	1563;"	d
GL_COLOR_TABLE_FORMAT	drivers/GL/glext.h	168;"	d
GL_COLOR_TABLE_FORMAT_SGI	drivers/GL/glext.h	1107;"	d
GL_COLOR_TABLE_GREEN_SIZE	drivers/GL/gl.h	1566;"	d
GL_COLOR_TABLE_GREEN_SIZE	drivers/GL/glext.h	171;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	drivers/GL/glext.h	1110;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	drivers/GL/gl.h	1570;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	drivers/GL/glext.h	175;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	drivers/GL/glext.h	1114;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	drivers/GL/gl.h	1569;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	drivers/GL/glext.h	174;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	drivers/GL/glext.h	1113;"	d
GL_COLOR_TABLE_RED_SIZE	drivers/GL/gl.h	1565;"	d
GL_COLOR_TABLE_RED_SIZE	drivers/GL/glext.h	170;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	drivers/GL/glext.h	1109;"	d
GL_COLOR_TABLE_SCALE	drivers/GL/gl.h	1561;"	d
GL_COLOR_TABLE_SCALE	drivers/GL/glext.h	166;"	d
GL_COLOR_TABLE_SCALE_SGI	drivers/GL/glext.h	1105;"	d
GL_COLOR_TABLE_SGI	drivers/GL/glext.h	1099;"	d
GL_COLOR_TABLE_WIDTH	drivers/GL/gl.h	1564;"	d
GL_COLOR_TABLE_WIDTH	drivers/GL/glext.h	169;"	d
GL_COLOR_TABLE_WIDTH_SGI	drivers/GL/glext.h	1108;"	d
GL_COLOR_WRITEMASK	drivers/GL/gl.h	520;"	d
GL_COMBINE	drivers/GL/gl.h	1854;"	d
GL_COMBINE	drivers/GL/glext.h	254;"	d
GL_COMBINE4_NV	drivers/GL/glext.h	2030;"	d
GL_COMBINER0_NV	drivers/GL/glext.h	1998;"	d
GL_COMBINER1_NV	drivers/GL/glext.h	1999;"	d
GL_COMBINER2_NV	drivers/GL/glext.h	2000;"	d
GL_COMBINER3_NV	drivers/GL/glext.h	2001;"	d
GL_COMBINER4_NV	drivers/GL/glext.h	2002;"	d
GL_COMBINER5_NV	drivers/GL/glext.h	2003;"	d
GL_COMBINER6_NV	drivers/GL/glext.h	2004;"	d
GL_COMBINER7_NV	drivers/GL/glext.h	2005;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	drivers/GL/glext.h	1987;"	d
GL_COMBINER_AB_OUTPUT_NV	drivers/GL/glext.h	1992;"	d
GL_COMBINER_BIAS_NV	drivers/GL/glext.h	1991;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	drivers/GL/glext.h	1988;"	d
GL_COMBINER_CD_OUTPUT_NV	drivers/GL/glext.h	1993;"	d
GL_COMBINER_COMPONENT_USAGE_NV	drivers/GL/glext.h	1986;"	d
GL_COMBINER_INPUT_NV	drivers/GL/glext.h	1984;"	d
GL_COMBINER_MAPPING_NV	drivers/GL/glext.h	1985;"	d
GL_COMBINER_MUX_SUM_NV	drivers/GL/glext.h	1989;"	d
GL_COMBINER_SCALE_NV	drivers/GL/glext.h	1990;"	d
GL_COMBINER_SUM_OUTPUT_NV	drivers/GL/glext.h	1994;"	d
GL_COMBINE_ALPHA	drivers/GL/gl.h	1856;"	d
GL_COMBINE_ALPHA	drivers/GL/glext.h	256;"	d
GL_COMBINE_ALPHA_ARB	drivers/GL/glext.h	623;"	d
GL_COMBINE_ALPHA_EXT	drivers/GL/glext.h	1786;"	d
GL_COMBINE_ARB	drivers/GL/glext.h	621;"	d
GL_COMBINE_EXT	drivers/GL/glext.h	1784;"	d
GL_COMBINE_RGB	drivers/GL/gl.h	1855;"	d
GL_COMBINE_RGB	drivers/GL/glext.h	255;"	d
GL_COMBINE_RGB_ARB	drivers/GL/glext.h	622;"	d
GL_COMBINE_RGB_EXT	drivers/GL/glext.h	1785;"	d
GL_COMPARE_R_TO_TEXTURE	drivers/GL/glext.h	319;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	drivers/GL/glext.h	668;"	d
GL_COMPILE	drivers/GL/gl.h	282;"	d
GL_COMPILE_AND_EXECUTE	drivers/GL/gl.h	283;"	d
GL_COMPILE_STATUS	drivers/GL/glext.h	441;"	d
GL_COMPRESSED_ALPHA	drivers/GL/gl.h	1827;"	d
GL_COMPRESSED_ALPHA	drivers/GL/glext.h	242;"	d
GL_COMPRESSED_ALPHA_ARB	drivers/GL/glext.h	538;"	d
GL_COMPRESSED_INTENSITY	drivers/GL/gl.h	1830;"	d
GL_COMPRESSED_INTENSITY	drivers/GL/glext.h	245;"	d
GL_COMPRESSED_INTENSITY_ARB	drivers/GL/glext.h	541;"	d
GL_COMPRESSED_LUMINANCE	drivers/GL/gl.h	1828;"	d
GL_COMPRESSED_LUMINANCE	drivers/GL/glext.h	243;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	drivers/GL/gl.h	1829;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	drivers/GL/glext.h	244;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	drivers/GL/glext.h	540;"	d
GL_COMPRESSED_LUMINANCE_ARB	drivers/GL/glext.h	539;"	d
GL_COMPRESSED_RGB	drivers/GL/gl.h	1831;"	d
GL_COMPRESSED_RGB	drivers/GL/glext.h	246;"	d
GL_COMPRESSED_RGBA	drivers/GL/gl.h	1832;"	d
GL_COMPRESSED_RGBA	drivers/GL/glext.h	247;"	d
GL_COMPRESSED_RGBA_ARB	drivers/GL/glext.h	543;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	drivers/GL/glext.h	2100;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	drivers/GL/glext.h	2045;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	drivers/GL/glext.h	2046;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	drivers/GL/glext.h	2047;"	d
GL_COMPRESSED_RGB_ARB	drivers/GL/glext.h	542;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	drivers/GL/glext.h	2099;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	drivers/GL/glext.h	2044;"	d
GL_COMPRESSED_TEXTURE_FORMATS	drivers/GL/gl.h	1837;"	d
GL_COMPRESSED_TEXTURE_FORMATS	drivers/GL/glext.h	252;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	drivers/GL/glext.h	548;"	d
GL_COMP_BIT_ATI	drivers/GL/glext.h	2548;"	d
GL_CONSERVE_MEMORY_HINT_PGI	drivers/GL/glext.h	1494;"	d
GL_CONSTANT	drivers/GL/gl.h	1873;"	d
GL_CONSTANT	drivers/GL/glext.h	273;"	d
GL_CONSTANT_ALPHA	drivers/GL/gl.h	1553;"	d
GL_CONSTANT_ALPHA	drivers/GL/glext.h	106;"	d
GL_CONSTANT_ALPHA_EXT	drivers/GL/glext.h	964;"	d
GL_CONSTANT_ARB	drivers/GL/glext.h	640;"	d
GL_CONSTANT_ATTENUATION	drivers/GL/gl.h	317;"	d
GL_CONSTANT_BORDER	drivers/GL/gl.h	1591;"	d
GL_CONSTANT_BORDER	drivers/GL/glext.h	176;"	d
GL_CONSTANT_BORDER_HP	drivers/GL/glext.h	1452;"	d
GL_CONSTANT_COLOR	drivers/GL/gl.h	1551;"	d
GL_CONSTANT_COLOR	drivers/GL/glext.h	104;"	d
GL_CONSTANT_COLOR0_NV	drivers/GL/glext.h	1963;"	d
GL_CONSTANT_COLOR1_NV	drivers/GL/glext.h	1964;"	d
GL_CONSTANT_COLOR_EXT	drivers/GL/glext.h	962;"	d
GL_CONSTANT_EXT	drivers/GL/glext.h	1790;"	d
GL_CONST_EYE_NV	drivers/GL/glext.h	2250;"	d
GL_CONVOLUTION_1D	drivers/GL/gl.h	1571;"	d
GL_CONVOLUTION_1D	drivers/GL/glext.h	115;"	d
GL_CONVOLUTION_1D_EXT	drivers/GL/glext.h	1062;"	d
GL_CONVOLUTION_2D	drivers/GL/gl.h	1572;"	d
GL_CONVOLUTION_2D	drivers/GL/glext.h	116;"	d
GL_CONVOLUTION_2D_EXT	drivers/GL/glext.h	1063;"	d
GL_CONVOLUTION_BORDER_COLOR	drivers/GL/gl.h	1593;"	d
GL_CONVOLUTION_BORDER_COLOR	drivers/GL/glext.h	178;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	drivers/GL/glext.h	1454;"	d
GL_CONVOLUTION_BORDER_MODE	drivers/GL/gl.h	1574;"	d
GL_CONVOLUTION_BORDER_MODE	drivers/GL/glext.h	118;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	drivers/GL/glext.h	1065;"	d
GL_CONVOLUTION_FILTER_BIAS	drivers/GL/gl.h	1576;"	d
GL_CONVOLUTION_FILTER_BIAS	drivers/GL/glext.h	120;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	drivers/GL/glext.h	1067;"	d
GL_CONVOLUTION_FILTER_SCALE	drivers/GL/gl.h	1575;"	d
GL_CONVOLUTION_FILTER_SCALE	drivers/GL/glext.h	119;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	drivers/GL/glext.h	1066;"	d
GL_CONVOLUTION_FORMAT	drivers/GL/gl.h	1578;"	d
GL_CONVOLUTION_FORMAT	drivers/GL/glext.h	122;"	d
GL_CONVOLUTION_FORMAT_EXT	drivers/GL/glext.h	1069;"	d
GL_CONVOLUTION_HEIGHT	drivers/GL/gl.h	1580;"	d
GL_CONVOLUTION_HEIGHT	drivers/GL/glext.h	124;"	d
GL_CONVOLUTION_HEIGHT_EXT	drivers/GL/glext.h	1071;"	d
GL_CONVOLUTION_HINT_SGIX	drivers/GL/glext.h	2139;"	d
GL_CONVOLUTION_WIDTH	drivers/GL/gl.h	1579;"	d
GL_CONVOLUTION_WIDTH	drivers/GL/glext.h	123;"	d
GL_CONVOLUTION_WIDTH_EXT	drivers/GL/glext.h	1070;"	d
GL_CON_0_ATI	drivers/GL/glext.h	2480;"	d
GL_CON_10_ATI	drivers/GL/glext.h	2490;"	d
GL_CON_11_ATI	drivers/GL/glext.h	2491;"	d
GL_CON_12_ATI	drivers/GL/glext.h	2492;"	d
GL_CON_13_ATI	drivers/GL/glext.h	2493;"	d
GL_CON_14_ATI	drivers/GL/glext.h	2494;"	d
GL_CON_15_ATI	drivers/GL/glext.h	2495;"	d
GL_CON_16_ATI	drivers/GL/glext.h	2496;"	d
GL_CON_17_ATI	drivers/GL/glext.h	2497;"	d
GL_CON_18_ATI	drivers/GL/glext.h	2498;"	d
GL_CON_19_ATI	drivers/GL/glext.h	2499;"	d
GL_CON_1_ATI	drivers/GL/glext.h	2481;"	d
GL_CON_20_ATI	drivers/GL/glext.h	2500;"	d
GL_CON_21_ATI	drivers/GL/glext.h	2501;"	d
GL_CON_22_ATI	drivers/GL/glext.h	2502;"	d
GL_CON_23_ATI	drivers/GL/glext.h	2503;"	d
GL_CON_24_ATI	drivers/GL/glext.h	2504;"	d
GL_CON_25_ATI	drivers/GL/glext.h	2505;"	d
GL_CON_26_ATI	drivers/GL/glext.h	2506;"	d
GL_CON_27_ATI	drivers/GL/glext.h	2507;"	d
GL_CON_28_ATI	drivers/GL/glext.h	2508;"	d
GL_CON_29_ATI	drivers/GL/glext.h	2509;"	d
GL_CON_2_ATI	drivers/GL/glext.h	2482;"	d
GL_CON_30_ATI	drivers/GL/glext.h	2510;"	d
GL_CON_31_ATI	drivers/GL/glext.h	2511;"	d
GL_CON_3_ATI	drivers/GL/glext.h	2483;"	d
GL_CON_4_ATI	drivers/GL/glext.h	2484;"	d
GL_CON_5_ATI	drivers/GL/glext.h	2485;"	d
GL_CON_6_ATI	drivers/GL/glext.h	2486;"	d
GL_CON_7_ATI	drivers/GL/glext.h	2487;"	d
GL_CON_8_ATI	drivers/GL/glext.h	2488;"	d
GL_CON_9_ATI	drivers/GL/glext.h	2489;"	d
GL_COORD_REPLACE	drivers/GL/glext.h	408;"	d
GL_COORD_REPLACE_ARB	drivers/GL/glext.h	882;"	d
GL_COORD_REPLACE_NV	drivers/GL/glext.h	2734;"	d
GL_COPY	drivers/GL/gl.h	428;"	d
GL_COPY_INVERTED	drivers/GL/gl.h	429;"	d
GL_COPY_PIXEL_TOKEN	drivers/GL/gl.h	399;"	d
GL_CORE_APPLE	drivers/GL/glcore.h	51;"	d
GL_CORE_APPLE	drivers/GL/internal/glcore.h	51;"	d
GL_CORE_MESA	drivers/GL/glcore.h	50;"	d
GL_CORE_MESA	drivers/GL/internal/glcore.h	50;"	d
GL_CORE_SGI	drivers/GL/glcore.h	49;"	d
GL_CORE_SGI	drivers/GL/internal/glcore.h	49;"	d
GL_CORE_WINDOWS	drivers/GL/glcore.h	52;"	d
GL_CORE_WINDOWS	drivers/GL/internal/glcore.h	52;"	d
GL_CUBIC_EXT	drivers/GL/glext.h	1712;"	d
GL_CUBIC_HP	drivers/GL/glext.h	1443;"	d
GL_CULL_FACE	drivers/GL/gl.h	272;"	d
GL_CULL_FACE_MODE	drivers/GL/gl.h	273;"	d
GL_CULL_FRAGMENT_NV	drivers/GL/glext.h	2252;"	d
GL_CULL_MODES_NV	drivers/GL/glext.h	2242;"	d
GL_CULL_VERTEX_EXT	drivers/GL/glext.h	1583;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	drivers/GL/glext.h	1584;"	d
GL_CULL_VERTEX_IBM	drivers/GL/glext.h	2051;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	drivers/GL/glext.h	1585;"	d
GL_CURRENT_ATTRIB_NV	drivers/GL/glext.h	2321;"	d
GL_CURRENT_BINORMAL_EXT	drivers/GL/glext.h	1770;"	d
GL_CURRENT_BIT	drivers/GL/gl.h	698;"	d
GL_CURRENT_COLOR	drivers/GL/gl.h	522;"	d
GL_CURRENT_FOG_COORD	drivers/GL/glext.h	361;"	d
GL_CURRENT_FOG_COORDINATE	drivers/GL/glext.h	298;"	d
GL_CURRENT_FOG_COORDINATE_EXT	drivers/GL/glext.h	1754;"	d
GL_CURRENT_INDEX	drivers/GL/gl.h	521;"	d
GL_CURRENT_MATRIX_ARB	drivers/GL/glext.h	691;"	d
GL_CURRENT_MATRIX_INDEX_ARB	drivers/GL/glext.h	613;"	d
GL_CURRENT_MATRIX_NV	drivers/GL/glext.h	2340;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	drivers/GL/glext.h	690;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	drivers/GL/glext.h	2339;"	d
GL_CURRENT_NORMAL	drivers/GL/gl.h	523;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	drivers/GL/glext.h	2727;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	drivers/GL/glext.h	611;"	d
GL_CURRENT_PROGRAM	drivers/GL/glext.h	453;"	d
GL_CURRENT_QUERY	drivers/GL/glext.h	326;"	d
GL_CURRENT_QUERY_ARB	drivers/GL/glext.h	814;"	d
GL_CURRENT_RASTER_COLOR	drivers/GL/gl.h	524;"	d
GL_CURRENT_RASTER_DISTANCE	drivers/GL/gl.h	525;"	d
GL_CURRENT_RASTER_INDEX	drivers/GL/gl.h	526;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	drivers/GL/glext.h	1600;"	d
GL_CURRENT_RASTER_POSITION	drivers/GL/gl.h	527;"	d
GL_CURRENT_RASTER_POSITION_VALID	drivers/GL/gl.h	529;"	d
GL_CURRENT_RASTER_TEXTURE_COORDS	drivers/GL/gl.h	528;"	d
GL_CURRENT_SECONDARY_COLOR	drivers/GL/glext.h	304;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	drivers/GL/glext.h	1734;"	d
GL_CURRENT_TANGENT_EXT	drivers/GL/glext.h	1769;"	d
GL_CURRENT_TEXTURE_COORDS	drivers/GL/gl.h	530;"	d
GL_CURRENT_VERTEX_ATTRIB	drivers/GL/glext.h	381;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	drivers/GL/glext.h	685;"	d
GL_CURRENT_VERTEX_EXT	drivers/GL/glext.h	2675;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	drivers/GL/glext.h	1933;"	d
GL_CURRENT_WEIGHT_ARB	drivers/GL/glext.h	567;"	d
GL_CW	drivers/GL/gl.h	264;"	d
GL_DECAL	drivers/GL/gl.h	670;"	d
GL_DECR	drivers/GL/gl.h	458;"	d
GL_DECR_WRAP	drivers/GL/glext.h	314;"	d
GL_DECR_WRAP_EXT	drivers/GL/glext.h	1877;"	d
GL_DEFORMATIONS_MASK_SGIX	drivers/GL/glext.h	1403;"	d
GL_DELETE_STATUS	drivers/GL/glext.h	440;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	drivers/GL/glext.h	2254;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	drivers/GL/glext.h	2255;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	drivers/GL/glext.h	2747;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	drivers/GL/glext.h	2748;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	drivers/GL/glext.h	2749;"	d
GL_DEPTH	drivers/GL/gl.h	495;"	d
GL_DEPTH24_STENCIL8_EXT	drivers/GL/gl.h	2290;"	d
GL_DEPTH_ATTACHMENT_EXT	drivers/GL/glext.h	3019;"	d
GL_DEPTH_BIAS	drivers/GL/gl.h	601;"	d
GL_DEPTH_BITS	drivers/GL/gl.h	298;"	d
GL_DEPTH_BOUNDS_EXT	drivers/GL/glext.h	2932;"	d
GL_DEPTH_BOUNDS_TEST_EXT	drivers/GL/glext.h	2931;"	d
GL_DEPTH_BUFFER_BIT	drivers/GL/gl.h	706;"	d
GL_DEPTH_CLAMP_NV	drivers/GL/glext.h	2722;"	d
GL_DEPTH_CLEAR_VALUE	drivers/GL/gl.h	299;"	d
GL_DEPTH_COMPONENT	drivers/GL/gl.h	303;"	d
GL_DEPTH_COMPONENT16	drivers/GL/glext.h	291;"	d
GL_DEPTH_COMPONENT16_ARB	drivers/GL/glext.h	658;"	d
GL_DEPTH_COMPONENT16_SGIX	drivers/GL/glext.h	1416;"	d
GL_DEPTH_COMPONENT24	drivers/GL/glext.h	292;"	d
GL_DEPTH_COMPONENT24_ARB	drivers/GL/glext.h	659;"	d
GL_DEPTH_COMPONENT24_SGIX	drivers/GL/glext.h	1417;"	d
GL_DEPTH_COMPONENT32	drivers/GL/glext.h	293;"	d
GL_DEPTH_COMPONENT32_ARB	drivers/GL/glext.h	660;"	d
GL_DEPTH_COMPONENT32_SGIX	drivers/GL/glext.h	1418;"	d
GL_DEPTH_FUNC	drivers/GL/gl.h	300;"	d
GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX	drivers/GL/glext.h	2094;"	d
GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX	drivers/GL/glext.h	2095;"	d
GL_DEPTH_PASS_INSTRUMENT_SGIX	drivers/GL/glext.h	2093;"	d
GL_DEPTH_RANGE	drivers/GL/gl.h	301;"	d
GL_DEPTH_SCALE	drivers/GL/gl.h	600;"	d
GL_DEPTH_STENCIL_EXT	drivers/GL/gl.h	2288;"	d
GL_DEPTH_STENCIL_MESA	drivers/GL/gl.h	2193;"	d
GL_DEPTH_STENCIL_NV	drivers/GL/glext.h	2213;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	drivers/GL/glext.h	2432;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	drivers/GL/glext.h	2431;"	d
GL_DEPTH_TEST	drivers/GL/gl.h	297;"	d
GL_DEPTH_TEXTURE_MODE	drivers/GL/glext.h	316;"	d
GL_DEPTH_TEXTURE_MODE_ARB	drivers/GL/glext.h	662;"	d
GL_DEPTH_WRITEMASK	drivers/GL/gl.h	302;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	drivers/GL/glext.h	1164;"	d
GL_DETAIL_TEXTURE_2D_SGIS	drivers/GL/glext.h	1163;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	drivers/GL/glext.h	1170;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	drivers/GL/glext.h	1168;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	drivers/GL/glext.h	1169;"	d
GL_DIFFUSE	drivers/GL/gl.h	321;"	d
GL_DISCARD_ATI	drivers/GL/glext.h	2569;"	d
GL_DISCARD_NV	drivers/GL/glext.h	1969;"	d
GL_DISTANCE_ATTENUATION_EXT	drivers/GL/glext.h	1364;"	d
GL_DISTANCE_ATTENUATION_SGIS	drivers/GL/glext.h	1371;"	d
GL_DITHER	drivers/GL/gl.h	497;"	d
GL_DOMAIN	drivers/GL/gl.h	570;"	d
GL_DONT_CARE	drivers/GL/gl.h	579;"	d
GL_DOT2_ADD_ATI	drivers/GL/glext.h	2522;"	d
GL_DOT3_ATI	drivers/GL/glext.h	2516;"	d
GL_DOT3_RGB	drivers/GL/gl.h	1877;"	d
GL_DOT3_RGB	drivers/GL/glext.h	276;"	d
GL_DOT3_RGBA	drivers/GL/gl.h	1878;"	d
GL_DOT3_RGBA	drivers/GL/glext.h	277;"	d
GL_DOT3_RGBA_ARB	drivers/GL/glext.h	650;"	d
GL_DOT3_RGBA_EXT	drivers/GL/glext.h	2167;"	d
GL_DOT3_RGB_ARB	drivers/GL/glext.h	649;"	d
GL_DOT3_RGB_EXT	drivers/GL/glext.h	2166;"	d
GL_DOT4_ATI	drivers/GL/glext.h	2517;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	drivers/GL/glext.h	2752;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	drivers/GL/glext.h	2262;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	drivers/GL/glext.h	2257;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	drivers/GL/glext.h	2260;"	d
GL_DOT_PRODUCT_NV	drivers/GL/glext.h	2256;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	drivers/GL/glext.h	2750;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	drivers/GL/glext.h	2261;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	drivers/GL/glext.h	2751;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	drivers/GL/glext.h	2258;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	drivers/GL/glext.h	2308;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	drivers/GL/glext.h	2259;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	drivers/GL/glext.h	2234;"	d
GL_DOUBLE	drivers/GL/gl.h	183;"	d
GL_DOUBLEBUFFER	drivers/GL/gl.h	491;"	d
GL_DRAW_BUFFER	drivers/GL/gl.h	490;"	d
GL_DRAW_BUFFER0	drivers/GL/glext.h	390;"	d
GL_DRAW_BUFFER0_ARB	drivers/GL/glext.h	890;"	d
GL_DRAW_BUFFER0_ATI	drivers/GL/glext.h	2816;"	d
GL_DRAW_BUFFER1	drivers/GL/glext.h	391;"	d
GL_DRAW_BUFFER10	drivers/GL/glext.h	400;"	d
GL_DRAW_BUFFER10_ARB	drivers/GL/glext.h	900;"	d
GL_DRAW_BUFFER10_ATI	drivers/GL/glext.h	2826;"	d
GL_DRAW_BUFFER11	drivers/GL/glext.h	401;"	d
GL_DRAW_BUFFER11_ARB	drivers/GL/glext.h	901;"	d
GL_DRAW_BUFFER11_ATI	drivers/GL/glext.h	2827;"	d
GL_DRAW_BUFFER12	drivers/GL/glext.h	402;"	d
GL_DRAW_BUFFER12_ARB	drivers/GL/glext.h	902;"	d
GL_DRAW_BUFFER12_ATI	drivers/GL/glext.h	2828;"	d
GL_DRAW_BUFFER13	drivers/GL/glext.h	403;"	d
GL_DRAW_BUFFER13_ARB	drivers/GL/glext.h	903;"	d
GL_DRAW_BUFFER13_ATI	drivers/GL/glext.h	2829;"	d
GL_DRAW_BUFFER14	drivers/GL/glext.h	404;"	d
GL_DRAW_BUFFER14_ARB	drivers/GL/glext.h	904;"	d
GL_DRAW_BUFFER14_ATI	drivers/GL/glext.h	2830;"	d
GL_DRAW_BUFFER15	drivers/GL/glext.h	405;"	d
GL_DRAW_BUFFER15_ARB	drivers/GL/glext.h	905;"	d
GL_DRAW_BUFFER15_ATI	drivers/GL/glext.h	2831;"	d
GL_DRAW_BUFFER1_ARB	drivers/GL/glext.h	891;"	d
GL_DRAW_BUFFER1_ATI	drivers/GL/glext.h	2817;"	d
GL_DRAW_BUFFER2	drivers/GL/glext.h	392;"	d
GL_DRAW_BUFFER2_ARB	drivers/GL/glext.h	892;"	d
GL_DRAW_BUFFER2_ATI	drivers/GL/glext.h	2818;"	d
GL_DRAW_BUFFER3	drivers/GL/glext.h	393;"	d
GL_DRAW_BUFFER3_ARB	drivers/GL/glext.h	893;"	d
GL_DRAW_BUFFER3_ATI	drivers/GL/glext.h	2819;"	d
GL_DRAW_BUFFER4	drivers/GL/glext.h	394;"	d
GL_DRAW_BUFFER4_ARB	drivers/GL/glext.h	894;"	d
GL_DRAW_BUFFER4_ATI	drivers/GL/glext.h	2820;"	d
GL_DRAW_BUFFER5	drivers/GL/glext.h	395;"	d
GL_DRAW_BUFFER5_ARB	drivers/GL/glext.h	895;"	d
GL_DRAW_BUFFER5_ATI	drivers/GL/glext.h	2821;"	d
GL_DRAW_BUFFER6	drivers/GL/glext.h	396;"	d
GL_DRAW_BUFFER6_ARB	drivers/GL/glext.h	896;"	d
GL_DRAW_BUFFER6_ATI	drivers/GL/glext.h	2822;"	d
GL_DRAW_BUFFER7	drivers/GL/glext.h	397;"	d
GL_DRAW_BUFFER7_ARB	drivers/GL/glext.h	897;"	d
GL_DRAW_BUFFER7_ATI	drivers/GL/glext.h	2823;"	d
GL_DRAW_BUFFER8	drivers/GL/glext.h	398;"	d
GL_DRAW_BUFFER8_ARB	drivers/GL/glext.h	898;"	d
GL_DRAW_BUFFER8_ATI	drivers/GL/glext.h	2824;"	d
GL_DRAW_BUFFER9	drivers/GL/glext.h	399;"	d
GL_DRAW_BUFFER9_ARB	drivers/GL/glext.h	899;"	d
GL_DRAW_BUFFER9_ATI	drivers/GL/glext.h	2825;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	drivers/GL/gl.h	2268;"	d
GL_DRAW_FRAMEBUFFER_EXT	drivers/GL/gl.h	2267;"	d
GL_DRAW_PIXELS_APPLE	drivers/GL/glext.h	2784;"	d
GL_DRAW_PIXEL_TOKEN	drivers/GL/gl.h	398;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	drivers/GL/glext.h	2284;"	d
GL_DSDT8_MAG8_NV	drivers/GL/glext.h	2283;"	d
GL_DSDT8_NV	drivers/GL/glext.h	2282;"	d
GL_DSDT_MAG_INTENSITY_NV	drivers/GL/glext.h	2238;"	d
GL_DSDT_MAG_NV	drivers/GL/glext.h	2265;"	d
GL_DSDT_MAG_VIB_NV	drivers/GL/glext.h	2266;"	d
GL_DSDT_NV	drivers/GL/glext.h	2264;"	d
GL_DST_ALPHA	drivers/GL/gl.h	376;"	d
GL_DST_COLOR	drivers/GL/gl.h	378;"	d
GL_DS_BIAS_NV	drivers/GL/glext.h	2295;"	d
GL_DS_SCALE_NV	drivers/GL/glext.h	2289;"	d
GL_DT_BIAS_NV	drivers/GL/glext.h	2296;"	d
GL_DT_SCALE_NV	drivers/GL/glext.h	2290;"	d
GL_DU8DV8_ATI	drivers/GL/glext.h	2441;"	d
GL_DUAL_ALPHA12_SGIS	drivers/GL/glext.h	1324;"	d
GL_DUAL_ALPHA16_SGIS	drivers/GL/glext.h	1325;"	d
GL_DUAL_ALPHA4_SGIS	drivers/GL/glext.h	1322;"	d
GL_DUAL_ALPHA8_SGIS	drivers/GL/glext.h	1323;"	d
GL_DUAL_INTENSITY12_SGIS	drivers/GL/glext.h	1332;"	d
GL_DUAL_INTENSITY16_SGIS	drivers/GL/glext.h	1333;"	d
GL_DUAL_INTENSITY4_SGIS	drivers/GL/glext.h	1330;"	d
GL_DUAL_INTENSITY8_SGIS	drivers/GL/glext.h	1331;"	d
GL_DUAL_LUMINANCE12_SGIS	drivers/GL/glext.h	1328;"	d
GL_DUAL_LUMINANCE16_SGIS	drivers/GL/glext.h	1329;"	d
GL_DUAL_LUMINANCE4_SGIS	drivers/GL/glext.h	1326;"	d
GL_DUAL_LUMINANCE8_SGIS	drivers/GL/glext.h	1327;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	drivers/GL/glext.h	1334;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	drivers/GL/glext.h	1335;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	drivers/GL/glext.h	1342;"	d
GL_DUDV_ATI	drivers/GL/glext.h	2440;"	d
GL_DYNAMIC_ATI	drivers/GL/glext.h	2567;"	d
GL_DYNAMIC_COPY	drivers/GL/glext.h	357;"	d
GL_DYNAMIC_COPY_ARB	drivers/GL/glext.h	809;"	d
GL_DYNAMIC_DRAW	drivers/GL/glext.h	355;"	d
GL_DYNAMIC_DRAW_ARB	drivers/GL/glext.h	807;"	d
GL_DYNAMIC_READ	drivers/GL/glext.h	356;"	d
GL_DYNAMIC_READ_ARB	drivers/GL/glext.h	808;"	d
GL_EDGEFLAG_BIT_PGI	drivers/GL/glext.h	1474;"	d
GL_EDGE_FLAG	drivers/GL/gl.h	271;"	d
GL_EDGE_FLAG_ARRAY	drivers/GL/gl.h	203;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	338;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	drivers/GL/glext.h	790;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	drivers/GL/glext.h	1244;"	d
GL_EDGE_FLAG_ARRAY_EXT	drivers/GL/glext.h	1224;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	drivers/GL/glext.h	2063;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	drivers/GL/glext.h	2071;"	d
GL_EDGE_FLAG_ARRAY_POINTER	drivers/GL/gl.h	223;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	drivers/GL/glext.h	1250;"	d
GL_EDGE_FLAG_ARRAY_STRIDE	drivers/GL/gl.h	217;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	drivers/GL/glext.h	1243;"	d
GL_EIGHTH_BIT_ATI	drivers/GL/glext.h	2546;"	d
GL_ELEMENT_ARRAY_APPLE	drivers/GL/glext.h	2778;"	d
GL_ELEMENT_ARRAY_ATI	drivers/GL/glext.h	2703;"	d
GL_ELEMENT_ARRAY_BUFFER	drivers/GL/glext.h	330;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	drivers/GL/glext.h	782;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	332;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	drivers/GL/glext.h	784;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	drivers/GL/glext.h	2780;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	drivers/GL/glext.h	2705;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	drivers/GL/glext.h	2779;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	drivers/GL/glext.h	2704;"	d
GL_EMBOSS_CONSTANT_NV	drivers/GL/glext.h	2022;"	d
GL_EMBOSS_LIGHT_NV	drivers/GL/glext.h	2021;"	d
GL_EMBOSS_MAP_NV	drivers/GL/glext.h	2023;"	d
GL_EMISSION	drivers/GL/gl.h	324;"	d
GL_ENABLE_BIT	drivers/GL/gl.h	711;"	d
GL_EQUAL	drivers/GL/gl.h	291;"	d
GL_EQUIV	drivers/GL/gl.h	437;"	d
GL_EVAL_2D_NV	drivers/GL/glext.h	2186;"	d
GL_EVAL_BIT	drivers/GL/gl.h	714;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	drivers/GL/glext.h	2191;"	d
GL_EVAL_TRIANGULAR_2D_NV	drivers/GL/glext.h	2187;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	drivers/GL/glext.h	2192;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	drivers/GL/glext.h	2202;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	drivers/GL/glext.h	2203;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	drivers/GL/glext.h	2204;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	drivers/GL/glext.h	2205;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	drivers/GL/glext.h	2206;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	drivers/GL/glext.h	2207;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	drivers/GL/glext.h	2193;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	drivers/GL/glext.h	2194;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	drivers/GL/glext.h	2195;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	drivers/GL/glext.h	2196;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	drivers/GL/glext.h	2197;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	drivers/GL/glext.h	2198;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	drivers/GL/glext.h	2199;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	drivers/GL/glext.h	2200;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	drivers/GL/glext.h	2201;"	d
GL_EXP	drivers/GL/gl.h	418;"	d
GL_EXP2	drivers/GL/gl.h	419;"	d
GL_EXPAND_NEGATE_NV	drivers/GL/glext.h	1975;"	d
GL_EXPAND_NORMAL_NV	drivers/GL/glext.h	1974;"	d
GL_EXTENSIONS	drivers/GL/gl.h	686;"	d
GL_EXT_422_pixels	drivers/GL/glext.h	5237;"	d
GL_EXT_abgr	drivers/GL/glext.h	4169;"	d
GL_EXT_bgra	drivers/GL/glext.h	4855;"	d
GL_EXT_blend_color	drivers/GL/glext.h	4173;"	d
GL_EXT_blend_equation_separate	drivers/GL/glext.h	6407;"	d
GL_EXT_blend_func_separate	drivers/GL/glext.h	5209;"	d
GL_EXT_blend_logic_op	drivers/GL/glext.h	4485;"	d
GL_EXT_blend_minmax	drivers/GL/glext.h	4473;"	d
GL_EXT_blend_subtract	drivers/GL/glext.h	4481;"	d
GL_EXT_clip_volume_hint	drivers/GL/glext.h	4687;"	d
GL_EXT_cmyka	drivers/GL/glext.h	4361;"	d
GL_EXT_color_matrix	drivers/GL/glext.h	4297;"	d
GL_EXT_color_subtable	drivers/GL/glext.h	4651;"	d
GL_EXT_compiled_vertex_array	drivers/GL/glext.h	4749;"	d
GL_EXT_convolution	drivers/GL/glext.h	4265;"	d
GL_EXT_coordinate_frame	drivers/GL/glext.h	5007;"	d
GL_EXT_copy_texture	drivers/GL/glext.h	4223;"	d
GL_EXT_cull_vertex	drivers/GL/glext.h	4759;"	d
GL_EXT_depth_bounds_test	drivers/GL/glext.h	6395;"	d
GL_EXT_draw_range_elements	drivers/GL/glext.h	4823;"	d
GL_EXT_fog_coord	drivers/GL/glext.h	4987;"	d
GL_EXT_framebuffer_blit	drivers/GL/gl.h	2264;"	d
GL_EXT_framebuffer_object	drivers/GL/glext.h	6443;"	d
GL_EXT_histogram	drivers/GL/glext.h	4239;"	d
GL_EXT_index_array_formats	drivers/GL/glext.h	4745;"	d
GL_EXT_index_func	drivers/GL/glext.h	4737;"	d
GL_EXT_index_material	drivers/GL/glext.h	4729;"	d
GL_EXT_index_texture	drivers/GL/glext.h	4725;"	d
GL_EXT_light_texture	drivers/GL/glext.h	4839;"	d
GL_EXT_misc_attribute	drivers/GL/glext.h	4449;"	d
GL_EXT_multi_draw_arrays	drivers/GL/glext.h	4977;"	d
GL_EXT_multisample	drivers/GL/glext.h	5465;"	d
GL_EXT_packed_depth_stencil	drivers/GL/gl.h	2286;"	d
GL_EXT_packed_pixels	drivers/GL/glext.h	4403;"	d
GL_EXT_paletted_texture	drivers/GL/glext.h	4673;"	d
GL_EXT_pixel_buffer_object	drivers/GL/glext.h	6423;"	d
GL_EXT_pixel_transform	drivers/GL/glext.h	4903;"	d
GL_EXT_pixel_transform_color_table	drivers/GL/glext.h	4917;"	d
GL_EXT_point_parameters	drivers/GL/glext.h	4519;"	d
GL_EXT_polygon_offset	drivers/GL/glext.h	4181;"	d
GL_EXT_rescale_normal	drivers/GL/glext.h	4421;"	d
GL_EXT_secondary_color	drivers/GL/glext.h	4929;"	d
GL_EXT_separate_specular_color	drivers/GL/glext.h	4925;"	d
GL_EXT_shadow_funcs	drivers/GL/glext.h	6095;"	d
GL_EXT_shared_texture_palette	drivers/GL/glext.h	4921;"	d
GL_EXT_stencil_two_side	drivers/GL/glext.h	6099;"	d
GL_EXT_stencil_wrap	drivers/GL/glext.h	5233;"	d
GL_EXT_subtexture	drivers/GL/glext.h	4213;"	d
GL_EXT_texture	drivers/GL/glext.h	4189;"	d
GL_EXT_texture3D	drivers/GL/glext.h	4193;"	d
GL_EXT_texture_env_add	drivers/GL/glext.h	5249;"	d
GL_EXT_texture_env_combine	drivers/GL/glext.h	5057;"	d
GL_EXT_texture_env_dot3	drivers/GL/glext.h	5507;"	d
GL_EXT_texture_filter_anisotropic	drivers/GL/glext.h	5257;"	d
GL_EXT_texture_lod_bias	drivers/GL/glext.h	5253;"	d
GL_EXT_texture_mirror_clamp	drivers/GL/glext.h	6403;"	d
GL_EXT_texture_object	drivers/GL/glext.h	4365;"	d
GL_EXT_texture_perturb_normal	drivers/GL/glext.h	4969;"	d
GL_EXT_timer_query	drivers/GL/gl.h	2236;"	d
GL_EXT_vertex_array	drivers/GL/glext.h	4425;"	d
GL_EXT_vertex_shader	drivers/GL/glext.h	5839;"	d
GL_EXT_vertex_weighting	drivers/GL/glext.h	5261;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	drivers/GL/glext.h	2153;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	drivers/GL/glext.h	2151;"	d
GL_EYE_LINEAR	drivers/GL/gl.h	667;"	d
GL_EYE_LINE_SGIS	drivers/GL/glext.h	2157;"	d
GL_EYE_PLANE	drivers/GL/gl.h	668;"	d
GL_EYE_PLANE_ABSOLUTE_NV	drivers/GL/glext.h	2016;"	d
GL_EYE_POINT_SGIS	drivers/GL/glext.h	2155;"	d
GL_EYE_RADIAL_NV	drivers/GL/glext.h	2015;"	d
GL_E_TIMES_F_NV	drivers/GL/glext.h	1970;"	d
GL_FALSE	drivers/GL/gl.h	169;"	d
GL_FASTEST	drivers/GL/gl.h	580;"	d
GL_FEEDBACK	drivers/GL/gl.h	383;"	d
GL_FEEDBACK_BUFFER_POINTER	drivers/GL/gl.h	401;"	d
GL_FEEDBACK_BUFFER_SIZE	drivers/GL/gl.h	402;"	d
GL_FEEDBACK_BUFFER_TYPE	drivers/GL/gl.h	403;"	d
GL_FENCE_APPLE	drivers/GL/glext.h	2785;"	d
GL_FENCE_CONDITION_NV	drivers/GL/glext.h	2178;"	d
GL_FENCE_STATUS_NV	drivers/GL/glext.h	2177;"	d
GL_FILL	drivers/GL/gl.h	263;"	d
GL_FILTER4_SGIS	drivers/GL/glext.h	1034;"	d
GL_FIXED_ONLY_ARB	drivers/GL/glext.h	920;"	d
GL_FLAT	drivers/GL/gl.h	334;"	d
GL_FLOAT	drivers/GL/gl.h	179;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	drivers/GL/glext.h	2874;"	d
GL_FLOAT_MAT2	drivers/GL/glext.h	431;"	d
GL_FLOAT_MAT2_ARB	drivers/GL/glext.h	835;"	d
GL_FLOAT_MAT3	drivers/GL/glext.h	432;"	d
GL_FLOAT_MAT3_ARB	drivers/GL/glext.h	836;"	d
GL_FLOAT_MAT4	drivers/GL/glext.h	433;"	d
GL_FLOAT_MAT4_ARB	drivers/GL/glext.h	837;"	d
GL_FLOAT_R16_NV	drivers/GL/glext.h	2865;"	d
GL_FLOAT_R32_NV	drivers/GL/glext.h	2866;"	d
GL_FLOAT_RG16_NV	drivers/GL/glext.h	2867;"	d
GL_FLOAT_RG32_NV	drivers/GL/glext.h	2868;"	d
GL_FLOAT_RGB16_NV	drivers/GL/glext.h	2869;"	d
GL_FLOAT_RGB32_NV	drivers/GL/glext.h	2870;"	d
GL_FLOAT_RGBA16_NV	drivers/GL/glext.h	2871;"	d
GL_FLOAT_RGBA32_NV	drivers/GL/glext.h	2872;"	d
GL_FLOAT_RGBA_MODE_NV	drivers/GL/glext.h	2875;"	d
GL_FLOAT_RGBA_NV	drivers/GL/glext.h	2864;"	d
GL_FLOAT_RGB_NV	drivers/GL/glext.h	2863;"	d
GL_FLOAT_RG_NV	drivers/GL/glext.h	2862;"	d
GL_FLOAT_R_NV	drivers/GL/glext.h	2861;"	d
GL_FLOAT_VEC2	drivers/GL/glext.h	421;"	d
GL_FLOAT_VEC2_ARB	drivers/GL/glext.h	825;"	d
GL_FLOAT_VEC3	drivers/GL/glext.h	422;"	d
GL_FLOAT_VEC3_ARB	drivers/GL/glext.h	826;"	d
GL_FLOAT_VEC4	drivers/GL/glext.h	423;"	d
GL_FLOAT_VEC4_ARB	drivers/GL/glext.h	827;"	d
GL_FOG	drivers/GL/gl.h	410;"	d
GL_FOG_BIT	drivers/GL/gl.h	705;"	d
GL_FOG_COLOR	drivers/GL/gl.h	413;"	d
GL_FOG_COORD	drivers/GL/glext.h	360;"	d
GL_FOG_COORDINATE	drivers/GL/glext.h	296;"	d
GL_FOG_COORDINATE_ARRAY	drivers/GL/glext.h	302;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	340;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	drivers/GL/glext.h	792;"	d
GL_FOG_COORDINATE_ARRAY_EXT	drivers/GL/glext.h	1758;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	drivers/GL/glext.h	2064;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	drivers/GL/glext.h	2072;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	drivers/GL/glext.h	301;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	drivers/GL/glext.h	1757;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	drivers/GL/glext.h	300;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	drivers/GL/glext.h	1756;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	drivers/GL/glext.h	299;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	drivers/GL/glext.h	1755;"	d
GL_FOG_COORDINATE_EXT	drivers/GL/glext.h	1752;"	d
GL_FOG_COORDINATE_SOURCE	drivers/GL/glext.h	295;"	d
GL_FOG_COORDINATE_SOURCE_EXT	drivers/GL/glext.h	1751;"	d
GL_FOG_COORD_ARRAY	drivers/GL/glext.h	365;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	366;"	d
GL_FOG_COORD_ARRAY_POINTER	drivers/GL/glext.h	364;"	d
GL_FOG_COORD_ARRAY_STRIDE	drivers/GL/glext.h	363;"	d
GL_FOG_COORD_ARRAY_TYPE	drivers/GL/glext.h	362;"	d
GL_FOG_COORD_SRC	drivers/GL/glext.h	359;"	d
GL_FOG_DENSITY	drivers/GL/gl.h	412;"	d
GL_FOG_DISTANCE_MODE_NV	drivers/GL/glext.h	2014;"	d
GL_FOG_END	drivers/GL/gl.h	416;"	d
GL_FOG_FUNC_POINTS_SGIS	drivers/GL/glext.h	1423;"	d
GL_FOG_FUNC_SGIS	drivers/GL/glext.h	1422;"	d
GL_FOG_HINT	drivers/GL/gl.h	574;"	d
GL_FOG_INDEX	drivers/GL/gl.h	414;"	d
GL_FOG_MODE	drivers/GL/gl.h	411;"	d
GL_FOG_OFFSET_SGIX	drivers/GL/glext.h	1428;"	d
GL_FOG_OFFSET_VALUE_SGIX	drivers/GL/glext.h	1429;"	d
GL_FOG_SCALE_SGIX	drivers/GL/glext.h	1816;"	d
GL_FOG_SCALE_VALUE_SGIX	drivers/GL/glext.h	1817;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	drivers/GL/glext.h	1637;"	d
GL_FOG_START	drivers/GL/gl.h	415;"	d
GL_FORCE_BLUE_TO_ONE_NV	drivers/GL/glext.h	2755;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	drivers/GL/glext.h	2418;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	drivers/GL/glext.h	2417;"	d
GL_FRAGMENT_COLOR_EXT	drivers/GL/glext.h	1643;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	drivers/GL/glext.h	1596;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	drivers/GL/glext.h	1597;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	drivers/GL/glext.h	1595;"	d
GL_FRAGMENT_DEPTH	drivers/GL/glext.h	297;"	d
GL_FRAGMENT_DEPTH_EXT	drivers/GL/glext.h	1753;"	d
GL_FRAGMENT_LIGHT0_SGIX	drivers/GL/glext.h	1606;"	d
GL_FRAGMENT_LIGHT1_SGIX	drivers/GL/glext.h	1607;"	d
GL_FRAGMENT_LIGHT2_SGIX	drivers/GL/glext.h	1608;"	d
GL_FRAGMENT_LIGHT3_SGIX	drivers/GL/glext.h	1609;"	d
GL_FRAGMENT_LIGHT4_SGIX	drivers/GL/glext.h	1610;"	d
GL_FRAGMENT_LIGHT5_SGIX	drivers/GL/glext.h	1611;"	d
GL_FRAGMENT_LIGHT6_SGIX	drivers/GL/glext.h	1612;"	d
GL_FRAGMENT_LIGHT7_SGIX	drivers/GL/glext.h	1613;"	d
GL_FRAGMENT_LIGHTING_SGIX	drivers/GL/glext.h	1594;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	drivers/GL/glext.h	1604;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	drivers/GL/glext.h	1602;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	drivers/GL/glext.h	1605;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	drivers/GL/glext.h	1603;"	d
GL_FRAGMENT_MATERIAL_EXT	drivers/GL/glext.h	1641;"	d
GL_FRAGMENT_NORMAL_EXT	drivers/GL/glext.h	1642;"	d
GL_FRAGMENT_PROGRAM_ARB	drivers/GL/glext.h	761;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	drivers/GL/glext.h	2883;"	d
GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA	drivers/GL/gl.h	2208;"	d
GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA	drivers/GL/gl.h	2207;"	d
GL_FRAGMENT_PROGRAM_CALLBACK_MESA	drivers/GL/gl.h	2206;"	d
GL_FRAGMENT_PROGRAM_NV	drivers/GL/glext.h	2880;"	d
GL_FRAGMENT_PROGRAM_POSITION_MESA	drivers/GL/gl.h	2205;"	d
GL_FRAGMENT_SHADER	drivers/GL/glext.h	413;"	d
GL_FRAGMENT_SHADER_ARB	drivers/GL/glext.h	868;"	d
GL_FRAGMENT_SHADER_ATI	drivers/GL/glext.h	2447;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	drivers/GL/glext.h	451;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	drivers/GL/glext.h	870;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	drivers/GL/glext.h	2989;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	drivers/GL/glext.h	2988;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	drivers/GL/glext.h	2992;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	drivers/GL/glext.h	2991;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	drivers/GL/glext.h	2990;"	d
GL_FRAMEBUFFER_BINDING_EXT	drivers/GL/glext.h	2986;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	drivers/GL/glext.h	2993;"	d
GL_FRAMEBUFFER_EXT	drivers/GL/glext.h	3021;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	drivers/GL/glext.h	2994;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	drivers/GL/glext.h	2997;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	drivers/GL/glext.h	2999;"	d
GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT	drivers/GL/glext.h	2996;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	drivers/GL/glext.h	2998;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	drivers/GL/glext.h	2995;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	drivers/GL/glext.h	3000;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	drivers/GL/glext.h	3001;"	d
GL_FRAMEZOOM_FACTOR_SGIX	drivers/GL/glext.h	1388;"	d
GL_FRAMEZOOM_SGIX	drivers/GL/glext.h	1387;"	d
GL_FRONT	drivers/GL/gl.h	266;"	d
GL_FRONT_AND_BACK	drivers/GL/gl.h	332;"	d
GL_FRONT_FACE	drivers/GL/gl.h	274;"	d
GL_FRONT_LEFT	drivers/GL/gl.h	467;"	d
GL_FRONT_RIGHT	drivers/GL/gl.h	468;"	d
GL_FULL_RANGE_EXT	drivers/GL/glext.h	2674;"	d
GL_FULL_STIPPLE_HINT_PGI	drivers/GL/glext.h	1508;"	d
GL_FUNC_ADD	drivers/GL/gl.h	1622;"	d
GL_FUNC_ADD	drivers/GL/glext.h	109;"	d
GL_FUNC_ADD_EXT	drivers/GL/glext.h	1292;"	d
GL_FUNC_REVERSE_SUBTRACT	drivers/GL/gl.h	1624;"	d
GL_FUNC_REVERSE_SUBTRACT	drivers/GL/glext.h	114;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	drivers/GL/glext.h	1300;"	d
GL_FUNC_SUBTRACT	drivers/GL/gl.h	1623;"	d
GL_FUNC_SUBTRACT	drivers/GL/glext.h	113;"	d
GL_FUNC_SUBTRACT_EXT	drivers/GL/glext.h	1299;"	d
GL_GENERATE_MIPMAP	drivers/GL/glext.h	289;"	d
GL_GENERATE_MIPMAP_HINT	drivers/GL/glext.h	290;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	drivers/GL/glext.h	1258;"	d
GL_GENERATE_MIPMAP_SGIS	drivers/GL/glext.h	1257;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	drivers/GL/glext.h	1397;"	d
GL_GEOMETRY_DEFORMATION_SGIX	drivers/GL/glext.h	1401;"	d
GL_GEQUAL	drivers/GL/gl.h	295;"	d
GL_GLEXT_VERSION	drivers/GL/glext.h	57;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	drivers/GL/glext.h	1827;"	d
GL_GLOBAL_ALPHA_SUN	drivers/GL/glext.h	1826;"	d
GL_GREATER	drivers/GL/gl.h	293;"	d
GL_GREEN	drivers/GL/gl.h	477;"	d
GL_GREEN_BIAS	drivers/GL/gl.h	595;"	d
GL_GREEN_BITS	drivers/GL/gl.h	484;"	d
GL_GREEN_BIT_ATI	drivers/GL/glext.h	2539;"	d
GL_GREEN_MAX_CLAMP_INGR	drivers/GL/glext.h	1866;"	d
GL_GREEN_MIN_CLAMP_INGR	drivers/GL/glext.h	1862;"	d
GL_GREEN_SCALE	drivers/GL/gl.h	594;"	d
GL_GREMEDY_string_marker	drivers/GL/glext.h	6483;"	d
GL_HALF_BIAS_NEGATE_NV	drivers/GL/glext.h	1977;"	d
GL_HALF_BIAS_NORMAL_NV	drivers/GL/glext.h	1976;"	d
GL_HALF_BIT_ATI	drivers/GL/glext.h	2544;"	d
GL_HALF_FLOAT_ARB	drivers/GL/glext.h	924;"	d
GL_HALF_FLOAT_NV	drivers/GL/glext.h	2888;"	d
GL_HILO16_NV	drivers/GL/glext.h	2267;"	d
GL_HILO8_NV	drivers/GL/glext.h	2753;"	d
GL_HILO_NV	drivers/GL/glext.h	2263;"	d
GL_HINT_BIT	drivers/GL/gl.h	713;"	d
GL_HISTOGRAM	drivers/GL/gl.h	1605;"	d
GL_HISTOGRAM	drivers/GL/glext.h	135;"	d
GL_HISTOGRAM_ALPHA_SIZE	drivers/GL/gl.h	1612;"	d
GL_HISTOGRAM_ALPHA_SIZE	drivers/GL/glext.h	142;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	drivers/GL/glext.h	1052;"	d
GL_HISTOGRAM_BLUE_SIZE	drivers/GL/gl.h	1611;"	d
GL_HISTOGRAM_BLUE_SIZE	drivers/GL/glext.h	141;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	drivers/GL/glext.h	1051;"	d
GL_HISTOGRAM_EXT	drivers/GL/glext.h	1045;"	d
GL_HISTOGRAM_FORMAT	drivers/GL/gl.h	1608;"	d
GL_HISTOGRAM_FORMAT	drivers/GL/glext.h	138;"	d
GL_HISTOGRAM_FORMAT_EXT	drivers/GL/glext.h	1048;"	d
GL_HISTOGRAM_GREEN_SIZE	drivers/GL/gl.h	1610;"	d
GL_HISTOGRAM_GREEN_SIZE	drivers/GL/glext.h	140;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	drivers/GL/glext.h	1050;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	drivers/GL/gl.h	1613;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	drivers/GL/glext.h	143;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	drivers/GL/glext.h	1053;"	d
GL_HISTOGRAM_RED_SIZE	drivers/GL/gl.h	1609;"	d
GL_HISTOGRAM_RED_SIZE	drivers/GL/glext.h	139;"	d
GL_HISTOGRAM_RED_SIZE_EXT	drivers/GL/glext.h	1049;"	d
GL_HISTOGRAM_SINK	drivers/GL/gl.h	1614;"	d
GL_HISTOGRAM_SINK	drivers/GL/glext.h	144;"	d
GL_HISTOGRAM_SINK_EXT	drivers/GL/glext.h	1054;"	d
GL_HISTOGRAM_WIDTH	drivers/GL/gl.h	1607;"	d
GL_HISTOGRAM_WIDTH	drivers/GL/glext.h	137;"	d
GL_HISTOGRAM_WIDTH_EXT	drivers/GL/glext.h	1047;"	d
GL_HI_BIAS_NV	drivers/GL/glext.h	2293;"	d
GL_HI_SCALE_NV	drivers/GL/glext.h	2287;"	d
GL_HP_convolution_border_modes	drivers/GL/glext.h	4643;"	d
GL_HP_image_transform	drivers/GL/glext.h	4625;"	d
GL_HP_occlusion_test	drivers/GL/glext.h	4899;"	d
GL_HP_texture_lighting	drivers/GL/glext.h	4819;"	d
GL_IBM_cull_vertex	drivers/GL/glext.h	5397;"	d
GL_IBM_multimode_draw_arrays	drivers/GL/glext.h	5401;"	d
GL_IBM_rasterpos_clip	drivers/GL/glext.h	4815;"	d
GL_IBM_vertex_array_lists	drivers/GL/glext.h	5411;"	d
GL_IDENTITY_NV	drivers/GL/glext.h	2325;"	d
GL_IGNORE_BORDER_HP	drivers/GL/glext.h	1451;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	drivers/GL/glext.h	1442;"	d
GL_IMAGE_MAG_FILTER_HP	drivers/GL/glext.h	1440;"	d
GL_IMAGE_MIN_FILTER_HP	drivers/GL/glext.h	1441;"	d
GL_IMAGE_ROTATE_ANGLE_HP	drivers/GL/glext.h	1437;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	drivers/GL/glext.h	1438;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	drivers/GL/glext.h	1439;"	d
GL_IMAGE_SCALE_X_HP	drivers/GL/glext.h	1433;"	d
GL_IMAGE_SCALE_Y_HP	drivers/GL/glext.h	1434;"	d
GL_IMAGE_TRANSFORM_2D_HP	drivers/GL/glext.h	1445;"	d
GL_IMAGE_TRANSLATE_X_HP	drivers/GL/glext.h	1435;"	d
GL_IMAGE_TRANSLATE_Y_HP	drivers/GL/glext.h	1436;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	drivers/GL/glext.h	2927;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	drivers/GL/glext.h	2926;"	d
GL_INCR	drivers/GL/gl.h	457;"	d
GL_INCR_WRAP	drivers/GL/glext.h	313;"	d
GL_INCR_WRAP_EXT	drivers/GL/glext.h	1876;"	d
GL_INDEX_ARRAY	drivers/GL/gl.h	201;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	336;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	drivers/GL/glext.h	788;"	d
GL_INDEX_ARRAY_COUNT_EXT	drivers/GL/glext.h	1238;"	d
GL_INDEX_ARRAY_EXT	drivers/GL/glext.h	1222;"	d
GL_INDEX_ARRAY_LIST_IBM	drivers/GL/glext.h	2061;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	drivers/GL/glext.h	2069;"	d
GL_INDEX_ARRAY_POINTER	drivers/GL/gl.h	221;"	d
GL_INDEX_ARRAY_POINTER_EXT	drivers/GL/glext.h	1248;"	d
GL_INDEX_ARRAY_STRIDE	drivers/GL/gl.h	213;"	d
GL_INDEX_ARRAY_STRIDE_EXT	drivers/GL/glext.h	1237;"	d
GL_INDEX_ARRAY_TYPE	drivers/GL/gl.h	212;"	d
GL_INDEX_ARRAY_TYPE_EXT	drivers/GL/glext.h	1236;"	d
GL_INDEX_BITS	drivers/GL/gl.h	486;"	d
GL_INDEX_BIT_PGI	drivers/GL/glext.h	1475;"	d
GL_INDEX_CLEAR_VALUE	drivers/GL/gl.h	531;"	d
GL_INDEX_LOGIC_OP	drivers/GL/gl.h	423;"	d
GL_INDEX_MATERIAL_EXT	drivers/GL/glext.h	1555;"	d
GL_INDEX_MATERIAL_FACE_EXT	drivers/GL/glext.h	1557;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	drivers/GL/glext.h	1556;"	d
GL_INDEX_MODE	drivers/GL/gl.h	532;"	d
GL_INDEX_OFFSET	drivers/GL/gl.h	591;"	d
GL_INDEX_SHIFT	drivers/GL/gl.h	590;"	d
GL_INDEX_TEST_EXT	drivers/GL/glext.h	1561;"	d
GL_INDEX_TEST_FUNC_EXT	drivers/GL/glext.h	1562;"	d
GL_INDEX_TEST_REF_EXT	drivers/GL/glext.h	1563;"	d
GL_INDEX_WRITEMASK	drivers/GL/gl.h	533;"	d
GL_INFO_LOG_LENGTH	drivers/GL/glext.h	444;"	d
GL_INGR_blend_func_separate	drivers/GL/glext.h	5217;"	d
GL_INGR_color_clamp	drivers/GL/glext.h	5225;"	d
GL_INGR_interlace_read	drivers/GL/glext.h	5229;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	drivers/GL/glext.h	1375;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	drivers/GL/glext.h	1376;"	d
GL_INT	drivers/GL/gl.h	177;"	d
GL_INTEL_parallel_arrays	drivers/GL/glext.h	4885;"	d
GL_INTENSITY	drivers/GL/gl.h	743;"	d
GL_INTENSITY12	drivers/GL/gl.h	746;"	d
GL_INTENSITY12_EXT	drivers/GL/glext.h	993;"	d
GL_INTENSITY16	drivers/GL/gl.h	747;"	d
GL_INTENSITY16F_ARB	drivers/GL/glext.h	945;"	d
GL_INTENSITY16_EXT	drivers/GL/glext.h	994;"	d
GL_INTENSITY32F_ARB	drivers/GL/glext.h	939;"	d
GL_INTENSITY4	drivers/GL/gl.h	744;"	d
GL_INTENSITY4_EXT	drivers/GL/glext.h	991;"	d
GL_INTENSITY8	drivers/GL/gl.h	745;"	d
GL_INTENSITY8_EXT	drivers/GL/glext.h	992;"	d
GL_INTENSITY_EXT	drivers/GL/glext.h	990;"	d
GL_INTENSITY_FLOAT16_ATI	drivers/GL/glext.h	2855;"	d
GL_INTENSITY_FLOAT32_ATI	drivers/GL/glext.h	2849;"	d
GL_INTERLACE_OML	drivers/GL/glext.h	2412;"	d
GL_INTERLACE_READ_INGR	drivers/GL/glext.h	1872;"	d
GL_INTERLACE_READ_OML	drivers/GL/glext.h	2413;"	d
GL_INTERLACE_SGIX	drivers/GL/glext.h	1307;"	d
GL_INTERPOLATE	drivers/GL/gl.h	1871;"	d
GL_INTERPOLATE	drivers/GL/glext.h	271;"	d
GL_INTERPOLATE_ARB	drivers/GL/glext.h	638;"	d
GL_INTERPOLATE_EXT	drivers/GL/glext.h	1789;"	d
GL_INT_VEC2	drivers/GL/glext.h	424;"	d
GL_INT_VEC2_ARB	drivers/GL/glext.h	828;"	d
GL_INT_VEC3	drivers/GL/glext.h	425;"	d
GL_INT_VEC3_ARB	drivers/GL/glext.h	829;"	d
GL_INT_VEC4	drivers/GL/glext.h	426;"	d
GL_INT_VEC4_ARB	drivers/GL/glext.h	830;"	d
GL_INVALID_ENUM	drivers/GL/gl.h	691;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	drivers/GL/glext.h	2984;"	d
GL_INVALID_OPERATION	drivers/GL/gl.h	692;"	d
GL_INVALID_VALUE	drivers/GL/gl.h	690;"	d
GL_INVARIANT_DATATYPE_EXT	drivers/GL/glext.h	2684;"	d
GL_INVARIANT_EXT	drivers/GL/glext.h	2643;"	d
GL_INVARIANT_VALUE_EXT	drivers/GL/glext.h	2683;"	d
GL_INVERSE_NV	drivers/GL/glext.h	2326;"	d
GL_INVERSE_TRANSPOSE_NV	drivers/GL/glext.h	2328;"	d
GL_INVERT	drivers/GL/gl.h	431;"	d
GL_INVERTED_SCREEN_W_REND	drivers/GL/glext.h	1763;"	d
GL_IR_INSTRUMENT1_SGIX	drivers/GL/glext.h	1534;"	d
GL_IUI_N3F_V2F_EXT	drivers/GL/glext.h	1569;"	d
GL_IUI_N3F_V3F_EXT	drivers/GL/glext.h	1570;"	d
GL_IUI_V2F_EXT	drivers/GL/glext.h	1567;"	d
GL_IUI_V3F_EXT	drivers/GL/glext.h	1568;"	d
GL_KEEP	drivers/GL/gl.h	455;"	d
GL_LEFT	drivers/GL/gl.h	462;"	d
GL_LEQUAL	drivers/GL/gl.h	292;"	d
GL_LERP_ATI	drivers/GL/glext.h	2519;"	d
GL_LESS	drivers/GL/gl.h	290;"	d
GL_LIGHT0	drivers/GL/gl.h	307;"	d
GL_LIGHT1	drivers/GL/gl.h	308;"	d
GL_LIGHT2	drivers/GL/gl.h	309;"	d
GL_LIGHT3	drivers/GL/gl.h	310;"	d
GL_LIGHT4	drivers/GL/gl.h	311;"	d
GL_LIGHT5	drivers/GL/gl.h	312;"	d
GL_LIGHT6	drivers/GL/gl.h	313;"	d
GL_LIGHT7	drivers/GL/gl.h	314;"	d
GL_LIGHTING	drivers/GL/gl.h	306;"	d
GL_LIGHTING_BIT	drivers/GL/gl.h	704;"	d
GL_LIGHT_ENV_MODE_SGIX	drivers/GL/glext.h	1601;"	d
GL_LIGHT_MODEL_AMBIENT	drivers/GL/gl.h	331;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	drivers/GL/gl.h	1494;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	drivers/GL/glext.h	92;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	drivers/GL/glext.h	1727;"	d
GL_LIGHT_MODEL_LOCAL_VIEWER	drivers/GL/gl.h	330;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	drivers/GL/glext.h	1808;"	d
GL_LIGHT_MODEL_TWO_SIDE	drivers/GL/gl.h	329;"	d
GL_LINE	drivers/GL/gl.h	262;"	d
GL_LINEAR	drivers/GL/gl.h	417;"	d
GL_LINEAR_ATTENUATION	drivers/GL/gl.h	318;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	drivers/GL/glext.h	1262;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	drivers/GL/glext.h	1273;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	drivers/GL/glext.h	1166;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	drivers/GL/glext.h	1167;"	d
GL_LINEAR_DETAIL_SGIS	drivers/GL/glext.h	1165;"	d
GL_LINEAR_MIPMAP_LINEAR	drivers/GL/gl.h	664;"	d
GL_LINEAR_MIPMAP_NEAREST	drivers/GL/gl.h	663;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	drivers/GL/glext.h	1175;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	drivers/GL/glext.h	1176;"	d
GL_LINEAR_SHARPEN_SGIS	drivers/GL/glext.h	1174;"	d
GL_LINES	drivers/GL/gl.h	187;"	d
GL_LINE_BIT	drivers/GL/gl.h	700;"	d
GL_LINE_LOOP	drivers/GL/gl.h	188;"	d
GL_LINE_RESET_TOKEN	drivers/GL/gl.h	395;"	d
GL_LINE_SMOOTH	drivers/GL/gl.h	252;"	d
GL_LINE_SMOOTH_HINT	drivers/GL/gl.h	575;"	d
GL_LINE_STIPPLE	drivers/GL/gl.h	253;"	d
GL_LINE_STIPPLE_PATTERN	drivers/GL/gl.h	254;"	d
GL_LINE_STIPPLE_REPEAT	drivers/GL/gl.h	255;"	d
GL_LINE_STRIP	drivers/GL/gl.h	189;"	d
GL_LINE_TOKEN	drivers/GL/gl.h	394;"	d
GL_LINE_WIDTH	drivers/GL/gl.h	256;"	d
GL_LINE_WIDTH_GRANULARITY	drivers/GL/gl.h	257;"	d
GL_LINE_WIDTH_RANGE	drivers/GL/gl.h	258;"	d
GL_LINK_STATUS	drivers/GL/glext.h	442;"	d
GL_LIST_BASE	drivers/GL/gl.h	284;"	d
GL_LIST_BIT	drivers/GL/gl.h	715;"	d
GL_LIST_INDEX	drivers/GL/gl.h	285;"	d
GL_LIST_MODE	drivers/GL/gl.h	286;"	d
GL_LIST_PRIORITY_SGIX	drivers/GL/glext.h	1530;"	d
GL_LOAD	drivers/GL/gl.h	357;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	drivers/GL/glext.h	2686;"	d
GL_LOCAL_CONSTANT_EXT	drivers/GL/glext.h	2644;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	drivers/GL/glext.h	2685;"	d
GL_LOCAL_EXT	drivers/GL/glext.h	2645;"	d
GL_LOGIC_OP	drivers/GL/gl.h	422;"	d
GL_LOGIC_OP_MODE	drivers/GL/gl.h	425;"	d
GL_LOWER_LEFT	drivers/GL/glext.h	455;"	d
GL_LO_BIAS_NV	drivers/GL/glext.h	2294;"	d
GL_LO_SCALE_NV	drivers/GL/glext.h	2288;"	d
GL_LUMINANCE	drivers/GL/gl.h	480;"	d
GL_LUMINANCE12	drivers/GL/gl.h	735;"	d
GL_LUMINANCE12_ALPHA12	drivers/GL/gl.h	741;"	d
GL_LUMINANCE12_ALPHA12_EXT	drivers/GL/glext.h	988;"	d
GL_LUMINANCE12_ALPHA4	drivers/GL/gl.h	740;"	d
GL_LUMINANCE12_ALPHA4_EXT	drivers/GL/glext.h	987;"	d
GL_LUMINANCE12_EXT	drivers/GL/glext.h	982;"	d
GL_LUMINANCE16	drivers/GL/gl.h	736;"	d
GL_LUMINANCE16F_ARB	drivers/GL/glext.h	946;"	d
GL_LUMINANCE16_ALPHA16	drivers/GL/gl.h	742;"	d
GL_LUMINANCE16_ALPHA16_EXT	drivers/GL/glext.h	989;"	d
GL_LUMINANCE16_EXT	drivers/GL/glext.h	983;"	d
GL_LUMINANCE32F_ARB	drivers/GL/glext.h	940;"	d
GL_LUMINANCE4	drivers/GL/gl.h	733;"	d
GL_LUMINANCE4_ALPHA4	drivers/GL/gl.h	737;"	d
GL_LUMINANCE4_ALPHA4_EXT	drivers/GL/glext.h	984;"	d
GL_LUMINANCE4_EXT	drivers/GL/glext.h	980;"	d
GL_LUMINANCE6_ALPHA2	drivers/GL/gl.h	738;"	d
GL_LUMINANCE6_ALPHA2_EXT	drivers/GL/glext.h	985;"	d
GL_LUMINANCE8	drivers/GL/gl.h	734;"	d
GL_LUMINANCE8_ALPHA8	drivers/GL/gl.h	739;"	d
GL_LUMINANCE8_ALPHA8_EXT	drivers/GL/glext.h	986;"	d
GL_LUMINANCE8_EXT	drivers/GL/glext.h	981;"	d
GL_LUMINANCE_ALPHA	drivers/GL/gl.h	481;"	d
GL_LUMINANCE_ALPHA16F_ARB	drivers/GL/glext.h	947;"	d
GL_LUMINANCE_ALPHA32F_ARB	drivers/GL/glext.h	941;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	drivers/GL/glext.h	2857;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	drivers/GL/glext.h	2851;"	d
GL_LUMINANCE_FLOAT16_ATI	drivers/GL/glext.h	2856;"	d
GL_LUMINANCE_FLOAT32_ATI	drivers/GL/glext.h	2850;"	d
GL_MAD_ATI	drivers/GL/glext.h	2518;"	d
GL_MAGNITUDE_BIAS_NV	drivers/GL/glext.h	2297;"	d
GL_MAGNITUDE_SCALE_NV	drivers/GL/glext.h	2291;"	d
GL_MANGLE_H	drivers/GL/gl_mangle.h	24;"	d
GL_MAP1_BINORMAL_EXT	drivers/GL/glext.h	1779;"	d
GL_MAP1_COLOR_4	drivers/GL/gl.h	547;"	d
GL_MAP1_GRID_DOMAIN	drivers/GL/gl.h	565;"	d
GL_MAP1_GRID_SEGMENTS	drivers/GL/gl.h	566;"	d
GL_MAP1_INDEX	drivers/GL/gl.h	548;"	d
GL_MAP1_NORMAL	drivers/GL/gl.h	549;"	d
GL_MAP1_TANGENT_EXT	drivers/GL/glext.h	1777;"	d
GL_MAP1_TEXTURE_COORD_1	drivers/GL/gl.h	550;"	d
GL_MAP1_TEXTURE_COORD_2	drivers/GL/gl.h	551;"	d
GL_MAP1_TEXTURE_COORD_3	drivers/GL/gl.h	552;"	d
GL_MAP1_TEXTURE_COORD_4	drivers/GL/gl.h	553;"	d
GL_MAP1_VERTEX_3	drivers/GL/gl.h	554;"	d
GL_MAP1_VERTEX_4	drivers/GL/gl.h	555;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	drivers/GL/glext.h	2367;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	drivers/GL/glext.h	2377;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	drivers/GL/glext.h	2378;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	drivers/GL/glext.h	2379;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	drivers/GL/glext.h	2380;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	drivers/GL/glext.h	2381;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	drivers/GL/glext.h	2382;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	drivers/GL/glext.h	2368;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	drivers/GL/glext.h	2369;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	drivers/GL/glext.h	2370;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	drivers/GL/glext.h	2371;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	drivers/GL/glext.h	2372;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	drivers/GL/glext.h	2373;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	drivers/GL/glext.h	2374;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	drivers/GL/glext.h	2375;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	drivers/GL/glext.h	2376;"	d
GL_MAP2_BINORMAL_EXT	drivers/GL/glext.h	1780;"	d
GL_MAP2_COLOR_4	drivers/GL/gl.h	556;"	d
GL_MAP2_GRID_DOMAIN	drivers/GL/gl.h	567;"	d
GL_MAP2_GRID_SEGMENTS	drivers/GL/gl.h	568;"	d
GL_MAP2_INDEX	drivers/GL/gl.h	557;"	d
GL_MAP2_NORMAL	drivers/GL/gl.h	558;"	d
GL_MAP2_TANGENT_EXT	drivers/GL/glext.h	1778;"	d
GL_MAP2_TEXTURE_COORD_1	drivers/GL/gl.h	559;"	d
GL_MAP2_TEXTURE_COORD_2	drivers/GL/gl.h	560;"	d
GL_MAP2_TEXTURE_COORD_3	drivers/GL/gl.h	561;"	d
GL_MAP2_TEXTURE_COORD_4	drivers/GL/gl.h	562;"	d
GL_MAP2_VERTEX_3	drivers/GL/gl.h	563;"	d
GL_MAP2_VERTEX_4	drivers/GL/gl.h	564;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	drivers/GL/glext.h	2383;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	drivers/GL/glext.h	2393;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	drivers/GL/glext.h	2394;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	drivers/GL/glext.h	2395;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	drivers/GL/glext.h	2396;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	drivers/GL/glext.h	2397;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	drivers/GL/glext.h	2398;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	drivers/GL/glext.h	2384;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	drivers/GL/glext.h	2385;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	drivers/GL/glext.h	2386;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	drivers/GL/glext.h	2387;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	drivers/GL/glext.h	2388;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	drivers/GL/glext.h	2389;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	drivers/GL/glext.h	2390;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	drivers/GL/glext.h	2391;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	drivers/GL/glext.h	2392;"	d
GL_MAP_ATTRIB_U_ORDER_NV	drivers/GL/glext.h	2189;"	d
GL_MAP_ATTRIB_V_ORDER_NV	drivers/GL/glext.h	2190;"	d
GL_MAP_COLOR	drivers/GL/gl.h	588;"	d
GL_MAP_STENCIL	drivers/GL/gl.h	589;"	d
GL_MAP_TESSELLATION_NV	drivers/GL/glext.h	2188;"	d
GL_MATERIAL_SIDE_HINT_PGI	drivers/GL/glext.h	1470;"	d
GL_MATRIX0_ARB	drivers/GL/glext.h	726;"	d
GL_MATRIX0_NV	drivers/GL/glext.h	2331;"	d
GL_MATRIX10_ARB	drivers/GL/glext.h	736;"	d
GL_MATRIX11_ARB	drivers/GL/glext.h	737;"	d
GL_MATRIX12_ARB	drivers/GL/glext.h	738;"	d
GL_MATRIX13_ARB	drivers/GL/glext.h	739;"	d
GL_MATRIX14_ARB	drivers/GL/glext.h	740;"	d
GL_MATRIX15_ARB	drivers/GL/glext.h	741;"	d
GL_MATRIX16_ARB	drivers/GL/glext.h	742;"	d
GL_MATRIX17_ARB	drivers/GL/glext.h	743;"	d
GL_MATRIX18_ARB	drivers/GL/glext.h	744;"	d
GL_MATRIX19_ARB	drivers/GL/glext.h	745;"	d
GL_MATRIX1_ARB	drivers/GL/glext.h	727;"	d
GL_MATRIX1_NV	drivers/GL/glext.h	2332;"	d
GL_MATRIX20_ARB	drivers/GL/glext.h	746;"	d
GL_MATRIX21_ARB	drivers/GL/glext.h	747;"	d
GL_MATRIX22_ARB	drivers/GL/glext.h	748;"	d
GL_MATRIX23_ARB	drivers/GL/glext.h	749;"	d
GL_MATRIX24_ARB	drivers/GL/glext.h	750;"	d
GL_MATRIX25_ARB	drivers/GL/glext.h	751;"	d
GL_MATRIX26_ARB	drivers/GL/glext.h	752;"	d
GL_MATRIX27_ARB	drivers/GL/glext.h	753;"	d
GL_MATRIX28_ARB	drivers/GL/glext.h	754;"	d
GL_MATRIX29_ARB	drivers/GL/glext.h	755;"	d
GL_MATRIX2_ARB	drivers/GL/glext.h	728;"	d
GL_MATRIX2_NV	drivers/GL/glext.h	2333;"	d
GL_MATRIX30_ARB	drivers/GL/glext.h	756;"	d
GL_MATRIX31_ARB	drivers/GL/glext.h	757;"	d
GL_MATRIX3_ARB	drivers/GL/glext.h	729;"	d
GL_MATRIX3_NV	drivers/GL/glext.h	2334;"	d
GL_MATRIX4_ARB	drivers/GL/glext.h	730;"	d
GL_MATRIX4_NV	drivers/GL/glext.h	2335;"	d
GL_MATRIX5_ARB	drivers/GL/glext.h	731;"	d
GL_MATRIX5_NV	drivers/GL/glext.h	2336;"	d
GL_MATRIX6_ARB	drivers/GL/glext.h	732;"	d
GL_MATRIX6_NV	drivers/GL/glext.h	2337;"	d
GL_MATRIX7_ARB	drivers/GL/glext.h	733;"	d
GL_MATRIX7_NV	drivers/GL/glext.h	2338;"	d
GL_MATRIX8_ARB	drivers/GL/glext.h	734;"	d
GL_MATRIX9_ARB	drivers/GL/glext.h	735;"	d
GL_MATRIX_EXT	drivers/GL/glext.h	2641;"	d
GL_MATRIX_INDEX_ARRAY_ARB	drivers/GL/glext.h	612;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	drivers/GL/glext.h	617;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	drivers/GL/glext.h	614;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	drivers/GL/glext.h	616;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	drivers/GL/glext.h	615;"	d
GL_MATRIX_MODE	drivers/GL/gl.h	240;"	d
GL_MATRIX_PALETTE_ARB	drivers/GL/glext.h	608;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	drivers/GL/glext.h	1477;"	d
GL_MAT_AMBIENT_BIT_PGI	drivers/GL/glext.h	1476;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	drivers/GL/glext.h	1480;"	d
GL_MAT_DIFFUSE_BIT_PGI	drivers/GL/glext.h	1478;"	d
GL_MAT_EMISSION_BIT_PGI	drivers/GL/glext.h	1479;"	d
GL_MAT_SHININESS_BIT_PGI	drivers/GL/glext.h	1481;"	d
GL_MAT_SPECULAR_BIT_PGI	drivers/GL/glext.h	1482;"	d
GL_MAX	drivers/GL/gl.h	1621;"	d
GL_MAX	drivers/GL/glext.h	111;"	d
GL_MAX_3D_TEXTURE_SIZE	drivers/GL/gl.h	1515;"	d
GL_MAX_3D_TEXTURE_SIZE	drivers/GL/glext.h	75;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	drivers/GL/glext.h	1030;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	drivers/GL/glext.h	1138;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	drivers/GL/glext.h	1599;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	drivers/GL/glext.h	1682;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	drivers/GL/glext.h	1688;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	drivers/GL/glext.h	1683;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	drivers/GL/glext.h	1681;"	d
GL_MAX_ATTRIB_STACK_DEPTH	drivers/GL/gl.h	503;"	d
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	drivers/GL/gl.h	514;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	drivers/GL/glext.h	1269;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	drivers/GL/glext.h	1270;"	d
GL_MAX_CLIP_PLANES	drivers/GL/gl.h	510;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	drivers/GL/glext.h	3002;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	drivers/GL/gl.h	1596;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	drivers/GL/glext.h	151;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	drivers/GL/glext.h	1087;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	drivers/GL/glext.h	419;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	drivers/GL/glext.h	862;"	d
GL_MAX_CONVOLUTION_HEIGHT	drivers/GL/gl.h	1582;"	d
GL_MAX_CONVOLUTION_HEIGHT	drivers/GL/glext.h	126;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	drivers/GL/glext.h	1073;"	d
GL_MAX_CONVOLUTION_WIDTH	drivers/GL/gl.h	1581;"	d
GL_MAX_CONVOLUTION_WIDTH	drivers/GL/glext.h	125;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	drivers/GL/glext.h	1072;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	drivers/GL/gl.h	1825;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	drivers/GL/glext.h	241;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	drivers/GL/glext.h	534;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	drivers/GL/glext.h	1904;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	drivers/GL/glext.h	1404;"	d
GL_MAX_DRAW_BUFFERS	drivers/GL/glext.h	389;"	d
GL_MAX_DRAW_BUFFERS_ARB	drivers/GL/glext.h	889;"	d
GL_MAX_DRAW_BUFFERS_ATI	drivers/GL/glext.h	2815;"	d
GL_MAX_ELEMENTS_INDICES	drivers/GL/gl.h	1479;"	d
GL_MAX_ELEMENTS_INDICES	drivers/GL/glext.h	86;"	d
GL_MAX_ELEMENTS_INDICES_EXT	drivers/GL/glext.h	1628;"	d
GL_MAX_ELEMENTS_VERTICES	drivers/GL/gl.h	1478;"	d
GL_MAX_ELEMENTS_VERTICES	drivers/GL/glext.h	85;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	drivers/GL/glext.h	1627;"	d
GL_MAX_EVAL_ORDER	drivers/GL/gl.h	508;"	d
GL_MAX_EXT	drivers/GL/glext.h	1294;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	drivers/GL/glext.h	1424;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	drivers/GL/glext.h	1598;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	drivers/GL/glext.h	2879;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	drivers/GL/glext.h	415;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	drivers/GL/glext.h	869;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	drivers/GL/glext.h	1389;"	d
GL_MAX_GENERAL_COMBINERS_NV	drivers/GL/glext.h	1995;"	d
GL_MAX_LIGHTS	drivers/GL/gl.h	509;"	d
GL_MAX_LIST_NESTING	drivers/GL/gl.h	502;"	d
GL_MAX_MAP_TESSELLATION_NV	drivers/GL/glext.h	2208;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	drivers/GL/glext.h	609;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	drivers/GL/gl.h	504;"	d
GL_MAX_NAME_STACK_DEPTH	drivers/GL/gl.h	505;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	drivers/GL/glext.h	2651;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	drivers/GL/glext.h	2654;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	drivers/GL/glext.h	2655;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	drivers/GL/glext.h	2653;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	drivers/GL/glext.h	2652;"	d
GL_MAX_PALETTE_MATRICES_ARB	drivers/GL/glext.h	610;"	d
GL_MAX_PIXEL_MAP_TABLE	drivers/GL/gl.h	512;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	drivers/GL/glext.h	1715;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	drivers/GL/glext.h	2555;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	drivers/GL/glext.h	719;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	drivers/GL/glext.h	768;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	drivers/GL/glext.h	715;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	drivers/GL/glext.h	2968;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	drivers/GL/glext.h	723;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	drivers/GL/glext.h	2967;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	drivers/GL/glext.h	2969;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	drivers/GL/glext.h	703;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	drivers/GL/glext.h	722;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	drivers/GL/glext.h	2971;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	drivers/GL/glext.h	2970;"	d
GL_MAX_PROGRAM_MATRICES_ARB	drivers/GL/glext.h	689;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	drivers/GL/glext.h	688;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	drivers/GL/glext.h	721;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	drivers/GL/glext.h	771;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	drivers/GL/glext.h	717;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	drivers/GL/glext.h	705;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	drivers/GL/glext.h	713;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	drivers/GL/glext.h	709;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	drivers/GL/glext.h	773;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	drivers/GL/glext.h	772;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	drivers/GL/glext.h	711;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	drivers/GL/glext.h	707;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	drivers/GL/glext.h	770;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	drivers/GL/glext.h	769;"	d
GL_MAX_PROJECTION_STACK_DEPTH	drivers/GL/gl.h	506;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	drivers/GL/glext.h	2209;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	drivers/GL/glext.h	912;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	drivers/GL/glext.h	2228;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	drivers/GL/glext.h	2985;"	d
GL_MAX_SHININESS_NV	drivers/GL/glext.h	1942;"	d
GL_MAX_SPOT_EXPONENT_NV	drivers/GL/glext.h	1943;"	d
GL_MAX_TEXTURE_COORDS	drivers/GL/glext.h	411;"	d
GL_MAX_TEXTURE_COORDS_ARB	drivers/GL/glext.h	774;"	d
GL_MAX_TEXTURE_COORDS_NV	drivers/GL/glext.h	2881;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	drivers/GL/glext.h	412;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	drivers/GL/glext.h	775;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	drivers/GL/glext.h	2882;"	d
GL_MAX_TEXTURE_LOD_BIAS	drivers/GL/glext.h	310;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	drivers/GL/glext.h	1915;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	drivers/GL/glext.h	1922;"	d
GL_MAX_TEXTURE_SIZE	drivers/GL/gl.h	511;"	d
GL_MAX_TEXTURE_STACK_DEPTH	drivers/GL/gl.h	507;"	d
GL_MAX_TEXTURE_UNITS	drivers/GL/gl.h	1812;"	d
GL_MAX_TEXTURE_UNITS	drivers/GL/glext.h	216;"	d
GL_MAX_TEXTURE_UNITS_ARB	drivers/GL/gl.h	2063;"	d
GL_MAX_TEXTURE_UNITS_ARB	drivers/GL/glext.h	497;"	d
GL_MAX_TRACK_MATRICES_NV	drivers/GL/glext.h	2330;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	drivers/GL/glext.h	2329;"	d
GL_MAX_VARYING_FLOATS	drivers/GL/glext.h	417;"	d
GL_MAX_VARYING_FLOATS_ARB	drivers/GL/glext.h	860;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	drivers/GL/glext.h	1950;"	d
GL_MAX_VERTEX_ATTRIBS	drivers/GL/glext.h	409;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	drivers/GL/glext.h	697;"	d
GL_MAX_VERTEX_HINT_PGI	drivers/GL/glext.h	1471;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	drivers/GL/glext.h	2646;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	drivers/GL/glext.h	2648;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	drivers/GL/glext.h	2650;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	drivers/GL/glext.h	2649;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	drivers/GL/glext.h	2647;"	d
GL_MAX_VERTEX_STREAMS_ATI	drivers/GL/glext.h	2690;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	drivers/GL/glext.h	418;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	drivers/GL/glext.h	861;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	drivers/GL/glext.h	416;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	drivers/GL/glext.h	859;"	d
GL_MAX_VERTEX_UNITS_ARB	drivers/GL/glext.h	563;"	d
GL_MAX_VIEWPORT_DIMS	drivers/GL/gl.h	513;"	d
GL_MESA_pack_invert	drivers/GL/glext.h	6415;"	d
GL_MESA_packed_depth_stencil	drivers/GL/gl.h	2191;"	d
GL_MESA_program_debug	drivers/GL/gl.h	2203;"	d
GL_MESA_resize_buffers	drivers/GL/glext.h	5335;"	d
GL_MESA_trace	drivers/GL/gl.h	2160;"	d
GL_MESA_window_pos	drivers/GL/glext.h	5343;"	d
GL_MESA_ycbcr_texture	drivers/GL/glext.h	6419;"	d
GL_MIN	drivers/GL/gl.h	1620;"	d
GL_MIN	drivers/GL/glext.h	110;"	d
GL_MINMAX	drivers/GL/gl.h	1615;"	d
GL_MINMAX	drivers/GL/glext.h	145;"	d
GL_MINMAX_EXT	drivers/GL/glext.h	1055;"	d
GL_MINMAX_FORMAT	drivers/GL/gl.h	1616;"	d
GL_MINMAX_FORMAT	drivers/GL/glext.h	146;"	d
GL_MINMAX_FORMAT_EXT	drivers/GL/glext.h	1056;"	d
GL_MINMAX_SINK	drivers/GL/gl.h	1617;"	d
GL_MINMAX_SINK	drivers/GL/glext.h	147;"	d
GL_MINMAX_SINK_EXT	drivers/GL/glext.h	1057;"	d
GL_MIN_EXT	drivers/GL/glext.h	1293;"	d
GL_MIRRORED_REPEAT	drivers/GL/glext.h	294;"	d
GL_MIRRORED_REPEAT_ARB	drivers/GL/glext.h	654;"	d
GL_MIRRORED_REPEAT_IBM	drivers/GL/glext.h	2182;"	d
GL_MIRROR_CLAMP_ATI	drivers/GL/glext.h	2171;"	d
GL_MIRROR_CLAMP_EXT	drivers/GL/glext.h	2936;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	drivers/GL/glext.h	2938;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	drivers/GL/glext.h	2172;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	drivers/GL/glext.h	2937;"	d
GL_MODELVIEW	drivers/GL/gl.h	241;"	d
GL_MODELVIEW0_ARB	drivers/GL/glext.h	573;"	d
GL_MODELVIEW0_EXT	drivers/GL/glext.h	1931;"	d
GL_MODELVIEW0_MATRIX_EXT	drivers/GL/glext.h	1928;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	drivers/GL/glext.h	1926;"	d
GL_MODELVIEW10_ARB	drivers/GL/glext.h	583;"	d
GL_MODELVIEW11_ARB	drivers/GL/glext.h	584;"	d
GL_MODELVIEW12_ARB	drivers/GL/glext.h	585;"	d
GL_MODELVIEW13_ARB	drivers/GL/glext.h	586;"	d
GL_MODELVIEW14_ARB	drivers/GL/glext.h	587;"	d
GL_MODELVIEW15_ARB	drivers/GL/glext.h	588;"	d
GL_MODELVIEW16_ARB	drivers/GL/glext.h	589;"	d
GL_MODELVIEW17_ARB	drivers/GL/glext.h	590;"	d
GL_MODELVIEW18_ARB	drivers/GL/glext.h	591;"	d
GL_MODELVIEW19_ARB	drivers/GL/glext.h	592;"	d
GL_MODELVIEW1_ARB	drivers/GL/glext.h	574;"	d
GL_MODELVIEW1_EXT	drivers/GL/glext.h	1932;"	d
GL_MODELVIEW1_MATRIX_EXT	drivers/GL/glext.h	1929;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	drivers/GL/glext.h	1927;"	d
GL_MODELVIEW20_ARB	drivers/GL/glext.h	593;"	d
GL_MODELVIEW21_ARB	drivers/GL/glext.h	594;"	d
GL_MODELVIEW22_ARB	drivers/GL/glext.h	595;"	d
GL_MODELVIEW23_ARB	drivers/GL/glext.h	596;"	d
GL_MODELVIEW24_ARB	drivers/GL/glext.h	597;"	d
GL_MODELVIEW25_ARB	drivers/GL/glext.h	598;"	d
GL_MODELVIEW26_ARB	drivers/GL/glext.h	599;"	d
GL_MODELVIEW27_ARB	drivers/GL/glext.h	600;"	d
GL_MODELVIEW28_ARB	drivers/GL/glext.h	601;"	d
GL_MODELVIEW29_ARB	drivers/GL/glext.h	602;"	d
GL_MODELVIEW2_ARB	drivers/GL/glext.h	575;"	d
GL_MODELVIEW30_ARB	drivers/GL/glext.h	603;"	d
GL_MODELVIEW31_ARB	drivers/GL/glext.h	604;"	d
GL_MODELVIEW3_ARB	drivers/GL/glext.h	576;"	d
GL_MODELVIEW4_ARB	drivers/GL/glext.h	577;"	d
GL_MODELVIEW5_ARB	drivers/GL/glext.h	578;"	d
GL_MODELVIEW6_ARB	drivers/GL/glext.h	579;"	d
GL_MODELVIEW7_ARB	drivers/GL/glext.h	580;"	d
GL_MODELVIEW8_ARB	drivers/GL/glext.h	581;"	d
GL_MODELVIEW9_ARB	drivers/GL/glext.h	582;"	d
GL_MODELVIEW_MATRIX	drivers/GL/gl.h	534;"	d
GL_MODELVIEW_PROJECTION_NV	drivers/GL/glext.h	2324;"	d
GL_MODELVIEW_STACK_DEPTH	drivers/GL/gl.h	535;"	d
GL_MODULATE	drivers/GL/gl.h	671;"	d
GL_MODULATE_ADD_ATI	drivers/GL/glext.h	2840;"	d
GL_MODULATE_SIGNED_ADD_ATI	drivers/GL/glext.h	2841;"	d
GL_MODULATE_SUBTRACT_ATI	drivers/GL/glext.h	2842;"	d
GL_MOV_ATI	drivers/GL/glext.h	2512;"	d
GL_MULT	drivers/GL/gl.h	358;"	d
GL_MULTISAMPLE	drivers/GL/gl.h	1839;"	d
GL_MULTISAMPLE	drivers/GL/glext.h	221;"	d
GL_MULTISAMPLE_3DFX	drivers/GL/glext.h	2104;"	d
GL_MULTISAMPLE_ARB	drivers/GL/glext.h	508;"	d
GL_MULTISAMPLE_BIT	drivers/GL/gl.h	1847;"	d
GL_MULTISAMPLE_BIT	drivers/GL/glext.h	229;"	d
GL_MULTISAMPLE_BIT_3DFX	drivers/GL/glext.h	2107;"	d
GL_MULTISAMPLE_BIT_ARB	drivers/GL/glext.h	516;"	d
GL_MULTISAMPLE_BIT_EXT	drivers/GL/glext.h	2130;"	d
GL_MULTISAMPLE_EXT	drivers/GL/glext.h	2114;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	drivers/GL/glext.h	2718;"	d
GL_MULTISAMPLE_SGIS	drivers/GL/glext.h	1196;"	d
GL_MUL_ATI	drivers/GL/glext.h	2514;"	d
GL_MVP_MATRIX_EXT	drivers/GL/glext.h	2676;"	d
GL_N3F_V3F	drivers/GL/gl.h	229;"	d
GL_NAME_STACK_DEPTH	drivers/GL/gl.h	536;"	d
GL_NAND	drivers/GL/gl.h	433;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	drivers/GL/glext.h	1497;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	drivers/GL/glext.h	1498;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	drivers/GL/glext.h	1496;"	d
GL_NEAREST	drivers/GL/gl.h	672;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	drivers/GL/glext.h	1272;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	drivers/GL/glext.h	1271;"	d
GL_NEAREST_MIPMAP_LINEAR	drivers/GL/gl.h	662;"	d
GL_NEAREST_MIPMAP_NEAREST	drivers/GL/gl.h	661;"	d
GL_NEGATE_BIT_ATI	drivers/GL/glext.h	2549;"	d
GL_NEGATIVE_ONE_EXT	drivers/GL/glext.h	2672;"	d
GL_NEGATIVE_W_EXT	drivers/GL/glext.h	2669;"	d
GL_NEGATIVE_X_EXT	drivers/GL/glext.h	2666;"	d
GL_NEGATIVE_Y_EXT	drivers/GL/glext.h	2667;"	d
GL_NEGATIVE_Z_EXT	drivers/GL/glext.h	2668;"	d
GL_NEVER	drivers/GL/gl.h	289;"	d
GL_NICEST	drivers/GL/gl.h	581;"	d
GL_NONE	drivers/GL/gl.h	461;"	d
GL_NOOP	drivers/GL/gl.h	430;"	d
GL_NOR	drivers/GL/gl.h	435;"	d
GL_NORMALIZE	drivers/GL/gl.h	339;"	d
GL_NORMALIZED_RANGE_EXT	drivers/GL/glext.h	2673;"	d
GL_NORMAL_ARRAY	drivers/GL/gl.h	199;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	334;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	drivers/GL/glext.h	786;"	d
GL_NORMAL_ARRAY_COUNT_EXT	drivers/GL/glext.h	1231;"	d
GL_NORMAL_ARRAY_EXT	drivers/GL/glext.h	1220;"	d
GL_NORMAL_ARRAY_LIST_IBM	drivers/GL/glext.h	2059;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	drivers/GL/glext.h	2067;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	drivers/GL/glext.h	1697;"	d
GL_NORMAL_ARRAY_POINTER	drivers/GL/gl.h	219;"	d
GL_NORMAL_ARRAY_POINTER_EXT	drivers/GL/glext.h	1246;"	d
GL_NORMAL_ARRAY_STRIDE	drivers/GL/gl.h	208;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	drivers/GL/glext.h	1230;"	d
GL_NORMAL_ARRAY_TYPE	drivers/GL/gl.h	207;"	d
GL_NORMAL_ARRAY_TYPE_EXT	drivers/GL/glext.h	1229;"	d
GL_NORMAL_BIT_PGI	drivers/GL/glext.h	1483;"	d
GL_NORMAL_MAP	drivers/GL/gl.h	1814;"	d
GL_NORMAL_MAP	drivers/GL/glext.h	230;"	d
GL_NORMAL_MAP_ARB	drivers/GL/glext.h	523;"	d
GL_NORMAL_MAP_EXT	drivers/GL/glext.h	1893;"	d
GL_NORMAL_MAP_NV	drivers/GL/glext.h	1888;"	d
GL_NOTEQUAL	drivers/GL/gl.h	294;"	d
GL_NO_ERROR	drivers/GL/gl.h	689;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	drivers/GL/gl.h	1836;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	drivers/GL/glext.h	251;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	drivers/GL/glext.h	547;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	drivers/GL/glext.h	2525;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	drivers/GL/glext.h	2524;"	d
GL_NUM_GENERAL_COMBINERS_NV	drivers/GL/glext.h	1996;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	drivers/GL/glext.h	2529;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	drivers/GL/glext.h	2527;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	drivers/GL/glext.h	2528;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	drivers/GL/glext.h	2530;"	d
GL_NUM_PASSES_ATI	drivers/GL/glext.h	2526;"	d
GL_NV_blend_square	drivers/GL/glext.h	5327;"	d
GL_NV_copy_depth_to_color	drivers/GL/glext.h	5747;"	d
GL_NV_depth_clamp	drivers/GL/glext.h	6053;"	d
GL_NV_evaluators	drivers/GL/glext.h	5535;"	d
GL_NV_fence	drivers/GL/glext.h	5515;"	d
GL_NV_float_buffer	drivers/GL/glext.h	6210;"	d
GL_NV_fog_distance	drivers/GL/glext.h	5319;"	d
GL_NV_fragment_program	drivers/GL/glext.h	6214;"	d
GL_NV_fragment_program2	drivers/GL/glext.h	6431;"	d
GL_NV_fragment_program_option	drivers/GL/glext.h	6427;"	d
GL_NV_half_float	drivers/GL/glext.h	6233;"	d
GL_NV_light_max_exponent	drivers/GL/glext.h	5273;"	d
GL_NV_multisample_filter_hint	drivers/GL/glext.h	6049;"	d
GL_NV_occlusion_query	drivers/GL/glext.h	6057;"	d
GL_NV_packed_depth_stencil	drivers/GL/glext.h	5559;"	d
GL_NV_pixel_data_range	drivers/GL/glext.h	6331;"	d
GL_NV_point_sprite	drivers/GL/glext.h	6077;"	d
GL_NV_primitive_restart	drivers/GL/glext.h	6341;"	d
GL_NV_register_combiners	drivers/GL/glext.h	5287;"	d
GL_NV_register_combiners2	drivers/GL/glext.h	5563;"	d
GL_NV_texgen_emboss	drivers/GL/glext.h	5323;"	d
GL_NV_texgen_reflection	drivers/GL/glext.h	5241;"	d
GL_NV_texture_compression_vtc	drivers/GL/glext.h	5573;"	d
GL_NV_texture_env_combine4	drivers/GL/glext.h	5331;"	d
GL_NV_texture_expand_normal	drivers/GL/glext.h	6351;"	d
GL_NV_texture_rectangle	drivers/GL/glext.h	5577;"	d
GL_NV_texture_shader	drivers/GL/glext.h	5581;"	d
GL_NV_texture_shader2	drivers/GL/glext.h	5585;"	d
GL_NV_texture_shader3	drivers/GL/glext.h	6087;"	d
GL_NV_vertex_array_range	drivers/GL/glext.h	5277;"	d
GL_NV_vertex_array_range2	drivers/GL/glext.h	5589;"	d
GL_NV_vertex_program	drivers/GL/glext.h	5593;"	d
GL_NV_vertex_program1_1	drivers/GL/glext.h	6091;"	d
GL_NV_vertex_program2	drivers/GL/glext.h	6355;"	d
GL_NV_vertex_program2_option	drivers/GL/glext.h	6435;"	d
GL_NV_vertex_program3	drivers/GL/glext.h	6439;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	drivers/GL/glext.h	863;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	drivers/GL/glext.h	864;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	drivers/GL/glext.h	852;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	drivers/GL/glext.h	853;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	drivers/GL/glext.h	851;"	d
GL_OBJECT_BUFFER_SIZE_ATI	drivers/GL/glext.h	2570;"	d
GL_OBJECT_BUFFER_USAGE_ATI	drivers/GL/glext.h	2571;"	d
GL_OBJECT_COMPILE_STATUS_ARB	drivers/GL/glext.h	847;"	d
GL_OBJECT_DELETE_STATUS_ARB	drivers/GL/glext.h	846;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	drivers/GL/glext.h	2154;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	drivers/GL/glext.h	2152;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	drivers/GL/glext.h	850;"	d
GL_OBJECT_LINEAR	drivers/GL/gl.h	665;"	d
GL_OBJECT_LINE_SGIS	drivers/GL/glext.h	2158;"	d
GL_OBJECT_LINK_STATUS_ARB	drivers/GL/glext.h	848;"	d
GL_OBJECT_PLANE	drivers/GL/gl.h	666;"	d
GL_OBJECT_POINT_SGIS	drivers/GL/glext.h	2156;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	drivers/GL/glext.h	854;"	d
GL_OBJECT_SUBTYPE_ARB	drivers/GL/glext.h	824;"	d
GL_OBJECT_TYPE_ARB	drivers/GL/glext.h	823;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	drivers/GL/glext.h	849;"	d
GL_OCCLUSION_TEST_HP	drivers/GL/glext.h	1703;"	d
GL_OCCLUSION_TEST_RESULT_HP	drivers/GL/glext.h	1704;"	d
GL_OES_read_format	drivers/GL/glext.h	6391;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	drivers/GL/glext.h	2745;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	drivers/GL/glext.h	2746;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	drivers/GL/glext.h	2743;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	drivers/GL/glext.h	2744;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	drivers/GL/glext.h	2739;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	drivers/GL/glext.h	2740;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	drivers/GL/glext.h	2741;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	drivers/GL/glext.h	2742;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	drivers/GL/glext.h	2248;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	drivers/GL/glext.h	2246;"	d
GL_OFFSET_TEXTURE_2D_NV	drivers/GL/glext.h	2253;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	drivers/GL/glext.h	2247;"	d
GL_OFFSET_TEXTURE_BIAS_NV	drivers/GL/glext.h	2245;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	drivers/GL/glext.h	2243;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	drivers/GL/glext.h	2232;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	drivers/GL/glext.h	2233;"	d
GL_OFFSET_TEXTURE_SCALE_NV	drivers/GL/glext.h	2244;"	d
GL_OML_interlace	drivers/GL/glext.h	5735;"	d
GL_OML_resample	drivers/GL/glext.h	5743;"	d
GL_OML_subsample	drivers/GL/glext.h	5739;"	d
GL_ONE	drivers/GL/gl.h	371;"	d
GL_ONE_EXT	drivers/GL/glext.h	2671;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	drivers/GL/gl.h	1554;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	drivers/GL/glext.h	107;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	drivers/GL/glext.h	965;"	d
GL_ONE_MINUS_CONSTANT_COLOR	drivers/GL/gl.h	1552;"	d
GL_ONE_MINUS_CONSTANT_COLOR	drivers/GL/glext.h	105;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	drivers/GL/glext.h	963;"	d
GL_ONE_MINUS_DST_ALPHA	drivers/GL/gl.h	377;"	d
GL_ONE_MINUS_DST_COLOR	drivers/GL/gl.h	379;"	d
GL_ONE_MINUS_SRC_ALPHA	drivers/GL/gl.h	375;"	d
GL_ONE_MINUS_SRC_COLOR	drivers/GL/gl.h	373;"	d
GL_OPERAND0_ALPHA	drivers/GL/gl.h	1866;"	d
GL_OPERAND0_ALPHA	drivers/GL/glext.h	266;"	d
GL_OPERAND0_ALPHA_ARB	drivers/GL/glext.h	633;"	d
GL_OPERAND0_ALPHA_EXT	drivers/GL/glext.h	1802;"	d
GL_OPERAND0_RGB	drivers/GL/gl.h	1863;"	d
GL_OPERAND0_RGB	drivers/GL/glext.h	263;"	d
GL_OPERAND0_RGB_ARB	drivers/GL/glext.h	630;"	d
GL_OPERAND0_RGB_EXT	drivers/GL/glext.h	1799;"	d
GL_OPERAND1_ALPHA	drivers/GL/gl.h	1867;"	d
GL_OPERAND1_ALPHA	drivers/GL/glext.h	267;"	d
GL_OPERAND1_ALPHA_ARB	drivers/GL/glext.h	634;"	d
GL_OPERAND1_ALPHA_EXT	drivers/GL/glext.h	1803;"	d
GL_OPERAND1_RGB	drivers/GL/gl.h	1864;"	d
GL_OPERAND1_RGB	drivers/GL/glext.h	264;"	d
GL_OPERAND1_RGB_ARB	drivers/GL/glext.h	631;"	d
GL_OPERAND1_RGB_EXT	drivers/GL/glext.h	1800;"	d
GL_OPERAND2_ALPHA	drivers/GL/gl.h	1868;"	d
GL_OPERAND2_ALPHA	drivers/GL/glext.h	268;"	d
GL_OPERAND2_ALPHA_ARB	drivers/GL/glext.h	635;"	d
GL_OPERAND2_ALPHA_EXT	drivers/GL/glext.h	1804;"	d
GL_OPERAND2_RGB	drivers/GL/gl.h	1865;"	d
GL_OPERAND2_RGB	drivers/GL/glext.h	265;"	d
GL_OPERAND2_RGB_ARB	drivers/GL/glext.h	632;"	d
GL_OPERAND2_RGB_EXT	drivers/GL/glext.h	1801;"	d
GL_OPERAND3_ALPHA_NV	drivers/GL/glext.h	2034;"	d
GL_OPERAND3_RGB_NV	drivers/GL/glext.h	2033;"	d
GL_OP_ADD_EXT	drivers/GL/glext.h	2584;"	d
GL_OP_CLAMP_EXT	drivers/GL/glext.h	2591;"	d
GL_OP_CROSS_PRODUCT_EXT	drivers/GL/glext.h	2600;"	d
GL_OP_DOT3_EXT	drivers/GL/glext.h	2581;"	d
GL_OP_DOT4_EXT	drivers/GL/glext.h	2582;"	d
GL_OP_EXP_BASE_2_EXT	drivers/GL/glext.h	2594;"	d
GL_OP_FLOOR_EXT	drivers/GL/glext.h	2592;"	d
GL_OP_FRAC_EXT	drivers/GL/glext.h	2586;"	d
GL_OP_INDEX_EXT	drivers/GL/glext.h	2579;"	d
GL_OP_LOG_BASE_2_EXT	drivers/GL/glext.h	2595;"	d
GL_OP_MADD_EXT	drivers/GL/glext.h	2585;"	d
GL_OP_MAX_EXT	drivers/GL/glext.h	2587;"	d
GL_OP_MIN_EXT	drivers/GL/glext.h	2588;"	d
GL_OP_MOV_EXT	drivers/GL/glext.h	2602;"	d
GL_OP_MULTIPLY_MATRIX_EXT	drivers/GL/glext.h	2601;"	d
GL_OP_MUL_EXT	drivers/GL/glext.h	2583;"	d
GL_OP_NEGATE_EXT	drivers/GL/glext.h	2580;"	d
GL_OP_POWER_EXT	drivers/GL/glext.h	2596;"	d
GL_OP_RECIP_EXT	drivers/GL/glext.h	2597;"	d
GL_OP_RECIP_SQRT_EXT	drivers/GL/glext.h	2598;"	d
GL_OP_ROUND_EXT	drivers/GL/glext.h	2593;"	d
GL_OP_SET_GE_EXT	drivers/GL/glext.h	2589;"	d
GL_OP_SET_LT_EXT	drivers/GL/glext.h	2590;"	d
GL_OP_SUB_EXT	drivers/GL/glext.h	2599;"	d
GL_OR	drivers/GL/gl.h	434;"	d
GL_ORDER	drivers/GL/gl.h	571;"	d
GL_OR_INVERTED	drivers/GL/gl.h	441;"	d
GL_OR_REVERSE	drivers/GL/gl.h	440;"	d
GL_OUTPUT_COLOR0_EXT	drivers/GL/glext.h	2604;"	d
GL_OUTPUT_COLOR1_EXT	drivers/GL/glext.h	2605;"	d
GL_OUTPUT_FOG_EXT	drivers/GL/glext.h	2638;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	drivers/GL/glext.h	2606;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	drivers/GL/glext.h	2616;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	drivers/GL/glext.h	2617;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	drivers/GL/glext.h	2618;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	drivers/GL/glext.h	2619;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	drivers/GL/glext.h	2620;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	drivers/GL/glext.h	2621;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	drivers/GL/glext.h	2622;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	drivers/GL/glext.h	2623;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	drivers/GL/glext.h	2624;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	drivers/GL/glext.h	2625;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	drivers/GL/glext.h	2607;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	drivers/GL/glext.h	2626;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	drivers/GL/glext.h	2627;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	drivers/GL/glext.h	2628;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	drivers/GL/glext.h	2629;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	drivers/GL/glext.h	2630;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	drivers/GL/glext.h	2631;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	drivers/GL/glext.h	2632;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	drivers/GL/glext.h	2633;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	drivers/GL/glext.h	2634;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	drivers/GL/glext.h	2635;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	drivers/GL/glext.h	2608;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	drivers/GL/glext.h	2636;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	drivers/GL/glext.h	2637;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	drivers/GL/glext.h	2609;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	drivers/GL/glext.h	2610;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	drivers/GL/glext.h	2611;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	drivers/GL/glext.h	2612;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	drivers/GL/glext.h	2613;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	drivers/GL/glext.h	2614;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	drivers/GL/glext.h	2615;"	d
GL_OUTPUT_VERTEX_EXT	drivers/GL/glext.h	2603;"	d
GL_OUT_OF_MEMORY	drivers/GL/gl.h	695;"	d
GL_PACK_ALIGNMENT	drivers/GL/gl.h	622;"	d
GL_PACK_CMYK_HINT_EXT	drivers/GL/glext.h	1150;"	d
GL_PACK_IMAGE_DEPTH_SGIS	drivers/GL/glext.h	1131;"	d
GL_PACK_IMAGE_HEIGHT	drivers/GL/gl.h	1508;"	d
GL_PACK_IMAGE_HEIGHT	drivers/GL/glext.h	68;"	d
GL_PACK_IMAGE_HEIGHT_EXT	drivers/GL/glext.h	1023;"	d
GL_PACK_INVERT_MESA	drivers/GL/glext.h	2947;"	d
GL_PACK_LSB_FIRST	drivers/GL/gl.h	623;"	d
GL_PACK_RESAMPLE_OML	drivers/GL/glext.h	2422;"	d
GL_PACK_RESAMPLE_SGIX	drivers/GL/glext.h	2143;"	d
GL_PACK_ROW_LENGTH	drivers/GL/gl.h	624;"	d
GL_PACK_SKIP_IMAGES	drivers/GL/gl.h	1507;"	d
GL_PACK_SKIP_IMAGES	drivers/GL/glext.h	67;"	d
GL_PACK_SKIP_IMAGES_EXT	drivers/GL/glext.h	1022;"	d
GL_PACK_SKIP_PIXELS	drivers/GL/gl.h	625;"	d
GL_PACK_SKIP_ROWS	drivers/GL/gl.h	626;"	d
GL_PACK_SKIP_VOLUMES_SGIS	drivers/GL/glext.h	1130;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	drivers/GL/glext.h	2077;"	d
GL_PACK_SWAP_BYTES	drivers/GL/gl.h	627;"	d
GL_PARALLEL_ARRAYS_INTEL	drivers/GL/glext.h	1695;"	d
GL_PASS_THROUGH_NV	drivers/GL/glext.h	2251;"	d
GL_PASS_THROUGH_TOKEN	drivers/GL/gl.h	400;"	d
GL_PERSPECTIVE_CORRECTION_HINT	drivers/GL/gl.h	576;"	d
GL_PERTURB_EXT	drivers/GL/glext.h	1743;"	d
GL_PER_STAGE_CONSTANTS_NV	drivers/GL/glext.h	2218;"	d
GL_PGI_misc_hints	drivers/GL/glext.h	4665;"	d
GL_PGI_vertex_hints	drivers/GL/glext.h	4661;"	d
GL_PHONG_HINT_WIN	drivers/GL/glext.h	1633;"	d
GL_PHONG_WIN	drivers/GL/glext.h	1632;"	d
GL_PIXEL_COUNTER_BITS_NV	drivers/GL/glext.h	2726;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	drivers/GL/glext.h	2729;"	d
GL_PIXEL_COUNT_NV	drivers/GL/glext.h	2728;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	drivers/GL/glext.h	1711;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	drivers/GL/glext.h	1120;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	drivers/GL/glext.h	1119;"	d
GL_PIXEL_GROUP_COLOR_SGIS	drivers/GL/glext.h	1121;"	d
GL_PIXEL_MAG_FILTER_EXT	drivers/GL/glext.h	1709;"	d
GL_PIXEL_MAP_A_TO_A	drivers/GL/gl.h	621;"	d
GL_PIXEL_MAP_A_TO_A_SIZE	drivers/GL/gl.h	611;"	d
GL_PIXEL_MAP_B_TO_B	drivers/GL/gl.h	620;"	d
GL_PIXEL_MAP_B_TO_B_SIZE	drivers/GL/gl.h	610;"	d
GL_PIXEL_MAP_G_TO_G	drivers/GL/gl.h	619;"	d
GL_PIXEL_MAP_G_TO_G_SIZE	drivers/GL/gl.h	609;"	d
GL_PIXEL_MAP_I_TO_A	drivers/GL/gl.h	617;"	d
GL_PIXEL_MAP_I_TO_A_SIZE	drivers/GL/gl.h	607;"	d
GL_PIXEL_MAP_I_TO_B	drivers/GL/gl.h	616;"	d
GL_PIXEL_MAP_I_TO_B_SIZE	drivers/GL/gl.h	606;"	d
GL_PIXEL_MAP_I_TO_G	drivers/GL/gl.h	615;"	d
GL_PIXEL_MAP_I_TO_G_SIZE	drivers/GL/gl.h	605;"	d
GL_PIXEL_MAP_I_TO_I	drivers/GL/gl.h	613;"	d
GL_PIXEL_MAP_I_TO_I_SIZE	drivers/GL/gl.h	603;"	d
GL_PIXEL_MAP_I_TO_R	drivers/GL/gl.h	614;"	d
GL_PIXEL_MAP_I_TO_R_SIZE	drivers/GL/gl.h	604;"	d
GL_PIXEL_MAP_R_TO_R	drivers/GL/gl.h	618;"	d
GL_PIXEL_MAP_R_TO_R_SIZE	drivers/GL/gl.h	608;"	d
GL_PIXEL_MAP_S_TO_S	drivers/GL/gl.h	612;"	d
GL_PIXEL_MAP_S_TO_S_SIZE	drivers/GL/gl.h	602;"	d
GL_PIXEL_MIN_FILTER_EXT	drivers/GL/glext.h	1710;"	d
GL_PIXEL_MODE_BIT	drivers/GL/gl.h	703;"	d
GL_PIXEL_PACK_BUFFER_ARB	drivers/GL/glext.h	951;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	drivers/GL/glext.h	953;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	drivers/GL/glext.h	2959;"	d
GL_PIXEL_PACK_BUFFER_EXT	drivers/GL/glext.h	2957;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	drivers/GL/glext.h	2080;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	drivers/GL/glext.h	2081;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	drivers/GL/glext.h	2079;"	d
GL_PIXEL_TEXTURE_SGIS	drivers/GL/glext.h	1118;"	d
GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX	drivers/GL/glext.h	1664;"	d
GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX	drivers/GL/glext.h	1665;"	d
GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX	drivers/GL/glext.h	1663;"	d
GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX	drivers/GL/glext.h	1662;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	drivers/GL/glext.h	1126;"	d
GL_PIXEL_TEX_GEN_Q_CEILING_SGIX	drivers/GL/glext.h	1659;"	d
GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX	drivers/GL/glext.h	1661;"	d
GL_PIXEL_TEX_GEN_Q_ROUND_SGIX	drivers/GL/glext.h	1660;"	d
GL_PIXEL_TEX_GEN_SGIX	drivers/GL/glext.h	1125;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	drivers/GL/glext.h	1311;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	drivers/GL/glext.h	1312;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	drivers/GL/glext.h	1318;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	drivers/GL/glext.h	1317;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	drivers/GL/glext.h	1316;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	drivers/GL/glext.h	1315;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	drivers/GL/glext.h	1314;"	d
GL_PIXEL_TILE_WIDTH_SGIX	drivers/GL/glext.h	1313;"	d
GL_PIXEL_TRANSFORM_2D_EXT	drivers/GL/glext.h	1708;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	drivers/GL/glext.h	1716;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	drivers/GL/glext.h	1714;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	drivers/GL/glext.h	952;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	drivers/GL/glext.h	954;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	drivers/GL/glext.h	2960;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	drivers/GL/glext.h	2958;"	d
GL_PN_TRIANGLES_ATI	drivers/GL/glext.h	2554;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	drivers/GL/glext.h	2557;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	drivers/GL/glext.h	2561;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	drivers/GL/glext.h	2562;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	drivers/GL/glext.h	2556;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	drivers/GL/glext.h	2560;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	drivers/GL/glext.h	2559;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	drivers/GL/glext.h	2558;"	d
GL_POINT	drivers/GL/gl.h	261;"	d
GL_POINTS	drivers/GL/gl.h	186;"	d
GL_POINT_BIT	drivers/GL/gl.h	699;"	d
GL_POINT_DISTANCE_ATTENUATION	drivers/GL/glext.h	288;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	drivers/GL/glext.h	559;"	d
GL_POINT_FADE_THRESHOLD_SIZE	drivers/GL/glext.h	287;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	drivers/GL/glext.h	558;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	drivers/GL/glext.h	1363;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	drivers/GL/glext.h	1370;"	d
GL_POINT_SIZE	drivers/GL/gl.h	247;"	d
GL_POINT_SIZE_GRANULARITY	drivers/GL/gl.h	248;"	d
GL_POINT_SIZE_MAX	drivers/GL/glext.h	286;"	d
GL_POINT_SIZE_MAX_ARB	drivers/GL/glext.h	557;"	d
GL_POINT_SIZE_MAX_EXT	drivers/GL/glext.h	1362;"	d
GL_POINT_SIZE_MAX_SGIS	drivers/GL/glext.h	1369;"	d
GL_POINT_SIZE_MIN	drivers/GL/glext.h	285;"	d
GL_POINT_SIZE_MIN_ARB	drivers/GL/glext.h	556;"	d
GL_POINT_SIZE_MIN_EXT	drivers/GL/glext.h	1361;"	d
GL_POINT_SIZE_MIN_SGIS	drivers/GL/glext.h	1368;"	d
GL_POINT_SIZE_RANGE	drivers/GL/gl.h	249;"	d
GL_POINT_SMOOTH	drivers/GL/gl.h	246;"	d
GL_POINT_SMOOTH_HINT	drivers/GL/gl.h	577;"	d
GL_POINT_SPRITE	drivers/GL/glext.h	407;"	d
GL_POINT_SPRITE_ARB	drivers/GL/glext.h	881;"	d
GL_POINT_SPRITE_COORD_ORIGIN	drivers/GL/glext.h	454;"	d
GL_POINT_SPRITE_NV	drivers/GL/glext.h	2733;"	d
GL_POINT_SPRITE_R_MODE_NV	drivers/GL/glext.h	2735;"	d
GL_POINT_TOKEN	drivers/GL/gl.h	393;"	d
GL_POLYGON	drivers/GL/gl.h	195;"	d
GL_POLYGON_BIT	drivers/GL/gl.h	701;"	d
GL_POLYGON_MODE	drivers/GL/gl.h	268;"	d
GL_POLYGON_OFFSET_BIAS_EXT	drivers/GL/glext.h	972;"	d
GL_POLYGON_OFFSET_EXT	drivers/GL/glext.h	970;"	d
GL_POLYGON_OFFSET_FACTOR	drivers/GL/gl.h	275;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	drivers/GL/glext.h	971;"	d
GL_POLYGON_OFFSET_FILL	drivers/GL/gl.h	279;"	d
GL_POLYGON_OFFSET_LINE	drivers/GL/gl.h	278;"	d
GL_POLYGON_OFFSET_POINT	drivers/GL/gl.h	277;"	d
GL_POLYGON_OFFSET_UNITS	drivers/GL/gl.h	276;"	d
GL_POLYGON_SMOOTH	drivers/GL/gl.h	269;"	d
GL_POLYGON_SMOOTH_HINT	drivers/GL/gl.h	578;"	d
GL_POLYGON_STIPPLE	drivers/GL/gl.h	270;"	d
GL_POLYGON_STIPPLE_BIT	drivers/GL/gl.h	702;"	d
GL_POLYGON_TOKEN	drivers/GL/gl.h	396;"	d
GL_POSITION	drivers/GL/gl.h	325;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	drivers/GL/gl.h	1604;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	drivers/GL/glext.h	159;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	drivers/GL/glext.h	1095;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	drivers/GL/gl.h	1600;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	drivers/GL/glext.h	155;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	drivers/GL/glext.h	1091;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	drivers/GL/gl.h	1603;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	drivers/GL/glext.h	158;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	drivers/GL/glext.h	1094;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	drivers/GL/gl.h	1599;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	drivers/GL/glext.h	154;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	drivers/GL/glext.h	1090;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	drivers/GL/gl.h	1557;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	drivers/GL/glext.h	162;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	drivers/GL/glext.h	1101;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	drivers/GL/gl.h	1602;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	drivers/GL/glext.h	157;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	drivers/GL/glext.h	1093;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	drivers/GL/gl.h	1598;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	drivers/GL/glext.h	153;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	drivers/GL/glext.h	1089;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	drivers/GL/gl.h	1601;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	drivers/GL/glext.h	156;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	drivers/GL/glext.h	1092;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	drivers/GL/gl.h	1597;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	drivers/GL/glext.h	152;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	drivers/GL/glext.h	1088;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	drivers/GL/gl.h	1590;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	drivers/GL/glext.h	134;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	drivers/GL/glext.h	1081;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	drivers/GL/gl.h	1586;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	drivers/GL/glext.h	130;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	drivers/GL/glext.h	1077;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	drivers/GL/gl.h	1589;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	drivers/GL/glext.h	133;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	drivers/GL/glext.h	1080;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	drivers/GL/gl.h	1585;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	drivers/GL/glext.h	129;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	drivers/GL/glext.h	1076;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	drivers/GL/gl.h	1556;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	drivers/GL/glext.h	161;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	drivers/GL/glext.h	1100;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	drivers/GL/gl.h	1588;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	drivers/GL/glext.h	132;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	drivers/GL/glext.h	1079;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	drivers/GL/gl.h	1584;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	drivers/GL/glext.h	128;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	drivers/GL/glext.h	1075;"	d
GL_POST_CONVOLUTION_RED_BIAS	drivers/GL/gl.h	1587;"	d
GL_POST_CONVOLUTION_RED_BIAS	drivers/GL/glext.h	131;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	drivers/GL/glext.h	1078;"	d
GL_POST_CONVOLUTION_RED_SCALE	drivers/GL/gl.h	1583;"	d
GL_POST_CONVOLUTION_RED_SCALE	drivers/GL/glext.h	127;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	drivers/GL/glext.h	1074;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	drivers/GL/glext.h	1446;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	drivers/GL/glext.h	1382;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	drivers/GL/glext.h	1380;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	drivers/GL/glext.h	1383;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	drivers/GL/glext.h	1381;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	drivers/GL/glext.h	1493;"	d
GL_PRESERVE_ATI	drivers/GL/glext.h	2568;"	d
GL_PREVIOUS	drivers/GL/gl.h	1875;"	d
GL_PREVIOUS	drivers/GL/glext.h	275;"	d
GL_PREVIOUS_ARB	drivers/GL/glext.h	642;"	d
GL_PREVIOUS_EXT	drivers/GL/glext.h	1792;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	drivers/GL/glext.h	2249;"	d
GL_PRIMARY_COLOR	drivers/GL/gl.h	1874;"	d
GL_PRIMARY_COLOR	drivers/GL/glext.h	274;"	d
GL_PRIMARY_COLOR_ARB	drivers/GL/glext.h	641;"	d
GL_PRIMARY_COLOR_EXT	drivers/GL/glext.h	1791;"	d
GL_PRIMARY_COLOR_NV	drivers/GL/glext.h	1965;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	drivers/GL/glext.h	2902;"	d
GL_PRIMITIVE_RESTART_NV	drivers/GL/glext.h	2901;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	drivers/GL/glext.h	718;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	drivers/GL/glext.h	762;"	d
GL_PROGRAM_ATTRIBS_ARB	drivers/GL/glext.h	714;"	d
GL_PROGRAM_BINDING_ARB	drivers/GL/glext.h	696;"	d
GL_PROGRAM_ERROR_POSITION_ARB	drivers/GL/glext.h	695;"	d
GL_PROGRAM_ERROR_POSITION_NV	drivers/GL/glext.h	2350;"	d
GL_PROGRAM_ERROR_STRING_ARB	drivers/GL/glext.h	699;"	d
GL_PROGRAM_ERROR_STRING_NV	drivers/GL/glext.h	2884;"	d
GL_PROGRAM_FORMAT_ARB	drivers/GL/glext.h	701;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	drivers/GL/glext.h	700;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	drivers/GL/glext.h	702;"	d
GL_PROGRAM_LENGTH_ARB	drivers/GL/glext.h	686;"	d
GL_PROGRAM_LENGTH_NV	drivers/GL/glext.h	2322;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	drivers/GL/glext.h	720;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	drivers/GL/glext.h	765;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	drivers/GL/glext.h	716;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	drivers/GL/glext.h	704;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	drivers/GL/glext.h	712;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	drivers/GL/glext.h	708;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	drivers/GL/glext.h	767;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	drivers/GL/glext.h	766;"	d
GL_PROGRAM_OBJECT_ARB	drivers/GL/glext.h	821;"	d
GL_PROGRAM_PARAMETERS_ARB	drivers/GL/glext.h	710;"	d
GL_PROGRAM_PARAMETER_NV	drivers/GL/glext.h	2343;"	d
GL_PROGRAM_RESIDENT_NV	drivers/GL/glext.h	2346;"	d
GL_PROGRAM_STRING_ARB	drivers/GL/glext.h	687;"	d
GL_PROGRAM_STRING_NV	drivers/GL/glext.h	2323;"	d
GL_PROGRAM_TARGET_NV	drivers/GL/glext.h	2345;"	d
GL_PROGRAM_TEMPORARIES_ARB	drivers/GL/glext.h	706;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	drivers/GL/glext.h	764;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	drivers/GL/glext.h	763;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	drivers/GL/glext.h	724;"	d
GL_PROJECTION	drivers/GL/gl.h	242;"	d
GL_PROJECTION_MATRIX	drivers/GL/gl.h	537;"	d
GL_PROJECTION_STACK_DEPTH	drivers/GL/gl.h	538;"	d
GL_PROXY_COLOR_TABLE	drivers/GL/gl.h	1558;"	d
GL_PROXY_COLOR_TABLE	drivers/GL/glext.h	163;"	d
GL_PROXY_COLOR_TABLE_SGI	drivers/GL/glext.h	1102;"	d
GL_PROXY_HISTOGRAM	drivers/GL/gl.h	1606;"	d
GL_PROXY_HISTOGRAM	drivers/GL/glext.h	136;"	d
GL_PROXY_HISTOGRAM_EXT	drivers/GL/glext.h	1046;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	drivers/GL/gl.h	1560;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	drivers/GL/glext.h	165;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	drivers/GL/glext.h	1104;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	drivers/GL/gl.h	1559;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	drivers/GL/glext.h	164;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	drivers/GL/glext.h	1103;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	drivers/GL/glext.h	1447;"	d
GL_PROXY_TEXTURE_1D	drivers/GL/gl.h	722;"	d
GL_PROXY_TEXTURE_1D_EXT	drivers/GL/glext.h	1016;"	d
GL_PROXY_TEXTURE_2D	drivers/GL/gl.h	723;"	d
GL_PROXY_TEXTURE_2D_EXT	drivers/GL/glext.h	1017;"	d
GL_PROXY_TEXTURE_3D	drivers/GL/gl.h	1512;"	d
GL_PROXY_TEXTURE_3D	drivers/GL/glext.h	72;"	d
GL_PROXY_TEXTURE_3D_EXT	drivers/GL/glext.h	1027;"	d
GL_PROXY_TEXTURE_4D_SGIS	drivers/GL/glext.h	1135;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	drivers/GL/glext.h	1144;"	d
GL_PROXY_TEXTURE_CUBE_MAP	drivers/GL/gl.h	1824;"	d
GL_PROXY_TEXTURE_CUBE_MAP	drivers/GL/glext.h	240;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	drivers/GL/glext.h	533;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	drivers/GL/glext.h	1903;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	drivers/GL/glext.h	911;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	drivers/GL/glext.h	2227;"	d
GL_Q	drivers/GL/gl.h	678;"	d
GL_QUADRATIC_ATTENUATION	drivers/GL/gl.h	319;"	d
GL_QUADS	drivers/GL/gl.h	193;"	d
GL_QUAD_ALPHA4_SGIS	drivers/GL/glext.h	1336;"	d
GL_QUAD_ALPHA8_SGIS	drivers/GL/glext.h	1337;"	d
GL_QUAD_INTENSITY4_SGIS	drivers/GL/glext.h	1340;"	d
GL_QUAD_INTENSITY8_SGIS	drivers/GL/glext.h	1341;"	d
GL_QUAD_LUMINANCE4_SGIS	drivers/GL/glext.h	1338;"	d
GL_QUAD_LUMINANCE8_SGIS	drivers/GL/glext.h	1339;"	d
GL_QUAD_MESH_SUN	drivers/GL/glext.h	2709;"	d
GL_QUAD_STRIP	drivers/GL/gl.h	194;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	drivers/GL/glext.h	1343;"	d
GL_QUARTER_BIT_ATI	drivers/GL/glext.h	2545;"	d
GL_QUERY_COUNTER_BITS	drivers/GL/glext.h	325;"	d
GL_QUERY_COUNTER_BITS_ARB	drivers/GL/glext.h	813;"	d
GL_QUERY_RESULT	drivers/GL/glext.h	327;"	d
GL_QUERY_RESULT_ARB	drivers/GL/glext.h	815;"	d
GL_QUERY_RESULT_AVAILABLE	drivers/GL/glext.h	328;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	drivers/GL/glext.h	816;"	d
GL_R	drivers/GL/gl.h	677;"	d
GL_R1UI_C3F_V3F_SUN	drivers/GL/glext.h	1842;"	d
GL_R1UI_C4F_N3F_V3F_SUN	drivers/GL/glext.h	1844;"	d
GL_R1UI_C4UB_V3F_SUN	drivers/GL/glext.h	1841;"	d
GL_R1UI_N3F_V3F_SUN	drivers/GL/glext.h	1843;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	drivers/GL/glext.h	1847;"	d
GL_R1UI_T2F_N3F_V3F_SUN	drivers/GL/glext.h	1846;"	d
GL_R1UI_T2F_V3F_SUN	drivers/GL/glext.h	1845;"	d
GL_R1UI_V3F_SUN	drivers/GL/glext.h	1840;"	d
GL_R3_G3_B2	drivers/GL/gl.h	748;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	drivers/GL/glext.h	1617;"	d
GL_READ_BUFFER	drivers/GL/gl.h	489;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	drivers/GL/gl.h	2269;"	d
GL_READ_FRAMEBUFFER_EXT	drivers/GL/gl.h	2266;"	d
GL_READ_ONLY	drivers/GL/glext.h	343;"	d
GL_READ_ONLY_ARB	drivers/GL/glext.h	795;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	drivers/GL/glext.h	2895;"	d
GL_READ_PIXEL_DATA_RANGE_NV	drivers/GL/glext.h	2893;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	drivers/GL/glext.h	2897;"	d
GL_READ_WRITE	drivers/GL/glext.h	345;"	d
GL_READ_WRITE_ARB	drivers/GL/glext.h	797;"	d
GL_RECLAIM_MEMORY_HINT_PGI	drivers/GL/glext.h	1495;"	d
GL_RED	drivers/GL/gl.h	476;"	d
GL_REDUCE	drivers/GL/gl.h	1577;"	d
GL_REDUCE	drivers/GL/glext.h	121;"	d
GL_REDUCE_EXT	drivers/GL/glext.h	1068;"	d
GL_RED_BIAS	drivers/GL/gl.h	593;"	d
GL_RED_BITS	drivers/GL/gl.h	483;"	d
GL_RED_BIT_ATI	drivers/GL/glext.h	2538;"	d
GL_RED_MAX_CLAMP_INGR	drivers/GL/glext.h	1865;"	d
GL_RED_MIN_CLAMP_INGR	drivers/GL/glext.h	1861;"	d
GL_RED_SCALE	drivers/GL/gl.h	592;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	drivers/GL/glext.h	1409;"	d
GL_REFERENCE_PLANE_SGIX	drivers/GL/glext.h	1408;"	d
GL_REFLECTION_MAP	drivers/GL/gl.h	1815;"	d
GL_REFLECTION_MAP	drivers/GL/glext.h	231;"	d
GL_REFLECTION_MAP_ARB	drivers/GL/glext.h	524;"	d
GL_REFLECTION_MAP_EXT	drivers/GL/glext.h	1894;"	d
GL_REFLECTION_MAP_NV	drivers/GL/glext.h	1889;"	d
GL_REGISTER_COMBINERS_NV	drivers/GL/glext.h	1955;"	d
GL_REG_0_ATI	drivers/GL/glext.h	2448;"	d
GL_REG_10_ATI	drivers/GL/glext.h	2458;"	d
GL_REG_11_ATI	drivers/GL/glext.h	2459;"	d
GL_REG_12_ATI	drivers/GL/glext.h	2460;"	d
GL_REG_13_ATI	drivers/GL/glext.h	2461;"	d
GL_REG_14_ATI	drivers/GL/glext.h	2462;"	d
GL_REG_15_ATI	drivers/GL/glext.h	2463;"	d
GL_REG_16_ATI	drivers/GL/glext.h	2464;"	d
GL_REG_17_ATI	drivers/GL/glext.h	2465;"	d
GL_REG_18_ATI	drivers/GL/glext.h	2466;"	d
GL_REG_19_ATI	drivers/GL/glext.h	2467;"	d
GL_REG_1_ATI	drivers/GL/glext.h	2449;"	d
GL_REG_20_ATI	drivers/GL/glext.h	2468;"	d
GL_REG_21_ATI	drivers/GL/glext.h	2469;"	d
GL_REG_22_ATI	drivers/GL/glext.h	2470;"	d
GL_REG_23_ATI	drivers/GL/glext.h	2471;"	d
GL_REG_24_ATI	drivers/GL/glext.h	2472;"	d
GL_REG_25_ATI	drivers/GL/glext.h	2473;"	d
GL_REG_26_ATI	drivers/GL/glext.h	2474;"	d
GL_REG_27_ATI	drivers/GL/glext.h	2475;"	d
GL_REG_28_ATI	drivers/GL/glext.h	2476;"	d
GL_REG_29_ATI	drivers/GL/glext.h	2477;"	d
GL_REG_2_ATI	drivers/GL/glext.h	2450;"	d
GL_REG_30_ATI	drivers/GL/glext.h	2478;"	d
GL_REG_31_ATI	drivers/GL/glext.h	2479;"	d
GL_REG_3_ATI	drivers/GL/glext.h	2451;"	d
GL_REG_4_ATI	drivers/GL/glext.h	2452;"	d
GL_REG_5_ATI	drivers/GL/glext.h	2453;"	d
GL_REG_6_ATI	drivers/GL/glext.h	2454;"	d
GL_REG_7_ATI	drivers/GL/glext.h	2455;"	d
GL_REG_8_ATI	drivers/GL/glext.h	2456;"	d
GL_REG_9_ATI	drivers/GL/glext.h	2457;"	d
GL_RENDER	drivers/GL/gl.h	384;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	drivers/GL/glext.h	3033;"	d
GL_RENDERBUFFER_BINDING_EXT	drivers/GL/glext.h	2987;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	drivers/GL/glext.h	3032;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	drivers/GL/glext.h	3034;"	d
GL_RENDERBUFFER_EXT	drivers/GL/glext.h	3022;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	drivers/GL/glext.h	3031;"	d
GL_RENDERBUFFER_HEIGHT_EXT	drivers/GL/glext.h	3024;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	drivers/GL/glext.h	3025;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	drivers/GL/glext.h	3030;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	drivers/GL/glext.h	3035;"	d
GL_RENDERBUFFER_WIDTH_EXT	drivers/GL/glext.h	3023;"	d
GL_RENDERER	drivers/GL/gl.h	684;"	d
GL_RENDER_MODE	drivers/GL/gl.h	539;"	d
GL_REND_screen_coordinates	drivers/GL/glext.h	5003;"	d
GL_REPEAT	drivers/GL/gl.h	673;"	d
GL_REPLACE	drivers/GL/gl.h	456;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	drivers/GL/glext.h	1839;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	drivers/GL/glext.h	1838;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	drivers/GL/glext.h	1836;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	drivers/GL/glext.h	1837;"	d
GL_REPLACEMENT_CODE_SUN	drivers/GL/glext.h	1835;"	d
GL_REPLACE_EXT	drivers/GL/glext.h	1015;"	d
GL_REPLACE_MIDDLE_SUN	drivers/GL/glext.h	1832;"	d
GL_REPLACE_OLDEST_SUN	drivers/GL/glext.h	1833;"	d
GL_REPLICATE_BORDER	drivers/GL/gl.h	1592;"	d
GL_REPLICATE_BORDER	drivers/GL/glext.h	177;"	d
GL_REPLICATE_BORDER_HP	drivers/GL/glext.h	1453;"	d
GL_RESAMPLE_AVERAGE_OML	drivers/GL/glext.h	2426;"	d
GL_RESAMPLE_DECIMATE_OML	drivers/GL/glext.h	2427;"	d
GL_RESAMPLE_DECIMATE_SGIX	drivers/GL/glext.h	2147;"	d
GL_RESAMPLE_REPLICATE_OML	drivers/GL/glext.h	2424;"	d
GL_RESAMPLE_REPLICATE_SGIX	drivers/GL/glext.h	2145;"	d
GL_RESAMPLE_ZERO_FILL_OML	drivers/GL/glext.h	2425;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	drivers/GL/glext.h	2146;"	d
GL_RESCALE_NORMAL	drivers/GL/gl.h	1476;"	d
GL_RESCALE_NORMAL	drivers/GL/glext.h	65;"	d
GL_RESCALE_NORMAL_EXT	drivers/GL/glext.h	1215;"	d
GL_RESTART_SUN	drivers/GL/glext.h	1831;"	d
GL_RETURN	drivers/GL/gl.h	359;"	d
GL_RGB	drivers/GL/gl.h	498;"	d
GL_RGB10	drivers/GL/gl.h	752;"	d
GL_RGB10_A2	drivers/GL/gl.h	759;"	d
GL_RGB10_A2_EXT	drivers/GL/glext.h	1006;"	d
GL_RGB10_EXT	drivers/GL/glext.h	999;"	d
GL_RGB12	drivers/GL/gl.h	753;"	d
GL_RGB12_EXT	drivers/GL/glext.h	1000;"	d
GL_RGB16	drivers/GL/gl.h	754;"	d
GL_RGB16F_ARB	drivers/GL/glext.h	943;"	d
GL_RGB16_EXT	drivers/GL/glext.h	1001;"	d
GL_RGB2_EXT	drivers/GL/glext.h	995;"	d
GL_RGB32F_ARB	drivers/GL/glext.h	937;"	d
GL_RGB4	drivers/GL/gl.h	749;"	d
GL_RGB4_EXT	drivers/GL/glext.h	996;"	d
GL_RGB4_S3TC	drivers/GL/glext.h	2809;"	d
GL_RGB5	drivers/GL/gl.h	750;"	d
GL_RGB5_A1	drivers/GL/gl.h	757;"	d
GL_RGB5_A1_EXT	drivers/GL/glext.h	1004;"	d
GL_RGB5_EXT	drivers/GL/glext.h	997;"	d
GL_RGB8	drivers/GL/gl.h	751;"	d
GL_RGB8_EXT	drivers/GL/glext.h	998;"	d
GL_RGBA	drivers/GL/gl.h	499;"	d
GL_RGBA12	drivers/GL/gl.h	760;"	d
GL_RGBA12_EXT	drivers/GL/glext.h	1007;"	d
GL_RGBA16	drivers/GL/gl.h	761;"	d
GL_RGBA16F_ARB	drivers/GL/glext.h	942;"	d
GL_RGBA16_EXT	drivers/GL/glext.h	1008;"	d
GL_RGBA2	drivers/GL/gl.h	755;"	d
GL_RGBA2_EXT	drivers/GL/glext.h	1002;"	d
GL_RGBA32F_ARB	drivers/GL/glext.h	936;"	d
GL_RGBA4	drivers/GL/gl.h	756;"	d
GL_RGBA4_EXT	drivers/GL/glext.h	1003;"	d
GL_RGBA4_S3TC	drivers/GL/glext.h	2811;"	d
GL_RGBA8	drivers/GL/gl.h	758;"	d
GL_RGBA8_EXT	drivers/GL/glext.h	1005;"	d
GL_RGBA_FLOAT16_ATI	drivers/GL/glext.h	2852;"	d
GL_RGBA_FLOAT32_ATI	drivers/GL/glext.h	2846;"	d
GL_RGBA_FLOAT_MODE_ARB	drivers/GL/glext.h	916;"	d
GL_RGBA_MODE	drivers/GL/gl.h	540;"	d
GL_RGBA_S3TC	drivers/GL/glext.h	2810;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	drivers/GL/glext.h	2235;"	d
GL_RGB_FLOAT16_ATI	drivers/GL/glext.h	2853;"	d
GL_RGB_FLOAT32_ATI	drivers/GL/glext.h	2847;"	d
GL_RGB_S3TC	drivers/GL/glext.h	2808;"	d
GL_RGB_SCALE	drivers/GL/gl.h	1869;"	d
GL_RGB_SCALE	drivers/GL/glext.h	269;"	d
GL_RGB_SCALE_ARB	drivers/GL/glext.h	636;"	d
GL_RGB_SCALE_EXT	drivers/GL/glext.h	1787;"	d
GL_RIGHT	drivers/GL/gl.h	463;"	d
GL_S	drivers/GL/gl.h	675;"	d
GL_S3_s3tc	drivers/GL/glext.h	6183;"	d
GL_SAMPLER_1D	drivers/GL/glext.h	434;"	d
GL_SAMPLER_1D_ARB	drivers/GL/glext.h	838;"	d
GL_SAMPLER_1D_SHADOW	drivers/GL/glext.h	438;"	d
GL_SAMPLER_1D_SHADOW_ARB	drivers/GL/glext.h	842;"	d
GL_SAMPLER_2D	drivers/GL/glext.h	435;"	d
GL_SAMPLER_2D_ARB	drivers/GL/glext.h	839;"	d
GL_SAMPLER_2D_RECT_ARB	drivers/GL/glext.h	844;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	drivers/GL/glext.h	845;"	d
GL_SAMPLER_2D_SHADOW	drivers/GL/glext.h	439;"	d
GL_SAMPLER_2D_SHADOW_ARB	drivers/GL/glext.h	843;"	d
GL_SAMPLER_3D	drivers/GL/glext.h	436;"	d
GL_SAMPLER_3D_ARB	drivers/GL/glext.h	840;"	d
GL_SAMPLER_CUBE	drivers/GL/glext.h	437;"	d
GL_SAMPLER_CUBE_ARB	drivers/GL/glext.h	841;"	d
GL_SAMPLES	drivers/GL/gl.h	1844;"	d
GL_SAMPLES	drivers/GL/glext.h	226;"	d
GL_SAMPLES_3DFX	drivers/GL/glext.h	2106;"	d
GL_SAMPLES_ARB	drivers/GL/glext.h	513;"	d
GL_SAMPLES_EXT	drivers/GL/glext.h	2126;"	d
GL_SAMPLES_PASSED	drivers/GL/glext.h	358;"	d
GL_SAMPLES_PASSED_ARB	drivers/GL/glext.h	817;"	d
GL_SAMPLES_SGIS	drivers/GL/glext.h	1208;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	drivers/GL/gl.h	1840;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	drivers/GL/glext.h	222;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	drivers/GL/glext.h	509;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	drivers/GL/glext.h	2115;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	drivers/GL/glext.h	1197;"	d
GL_SAMPLE_ALPHA_TO_ONE	drivers/GL/gl.h	1841;"	d
GL_SAMPLE_ALPHA_TO_ONE	drivers/GL/glext.h	223;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	drivers/GL/glext.h	510;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	drivers/GL/glext.h	2116;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	drivers/GL/glext.h	1198;"	d
GL_SAMPLE_BUFFERS	drivers/GL/gl.h	1843;"	d
GL_SAMPLE_BUFFERS	drivers/GL/glext.h	225;"	d
GL_SAMPLE_BUFFERS_3DFX	drivers/GL/glext.h	2105;"	d
GL_SAMPLE_BUFFERS_ARB	drivers/GL/glext.h	512;"	d
GL_SAMPLE_BUFFERS_EXT	drivers/GL/glext.h	2125;"	d
GL_SAMPLE_BUFFERS_SGIS	drivers/GL/glext.h	1207;"	d
GL_SAMPLE_COVERAGE	drivers/GL/gl.h	1842;"	d
GL_SAMPLE_COVERAGE	drivers/GL/glext.h	224;"	d
GL_SAMPLE_COVERAGE_ARB	drivers/GL/glext.h	511;"	d
GL_SAMPLE_COVERAGE_INVERT	drivers/GL/gl.h	1846;"	d
GL_SAMPLE_COVERAGE_INVERT	drivers/GL/glext.h	228;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	drivers/GL/glext.h	515;"	d
GL_SAMPLE_COVERAGE_VALUE	drivers/GL/gl.h	1845;"	d
GL_SAMPLE_COVERAGE_VALUE	drivers/GL/glext.h	227;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	drivers/GL/glext.h	514;"	d
GL_SAMPLE_MASK_EXT	drivers/GL/glext.h	2117;"	d
GL_SAMPLE_MASK_INVERT_EXT	drivers/GL/glext.h	2128;"	d
GL_SAMPLE_MASK_INVERT_SGIS	drivers/GL/glext.h	1210;"	d
GL_SAMPLE_MASK_SGIS	drivers/GL/glext.h	1199;"	d
GL_SAMPLE_MASK_VALUE_EXT	drivers/GL/glext.h	2127;"	d
GL_SAMPLE_MASK_VALUE_SGIS	drivers/GL/glext.h	1209;"	d
GL_SAMPLE_PATTERN_EXT	drivers/GL/glext.h	2129;"	d
GL_SAMPLE_PATTERN_SGIS	drivers/GL/glext.h	1211;"	d
GL_SATURATE_BIT_ATI	drivers/GL/glext.h	2547;"	d
GL_SCALAR_EXT	drivers/GL/glext.h	2639;"	d
GL_SCALEBIAS_HINT_SGIX	drivers/GL/glext.h	2408;"	d
GL_SCALE_BY_FOUR_NV	drivers/GL/glext.h	1981;"	d
GL_SCALE_BY_ONE_HALF_NV	drivers/GL/glext.h	1982;"	d
GL_SCALE_BY_TWO_NV	drivers/GL/glext.h	1980;"	d
GL_SCISSOR_BIT	drivers/GL/gl.h	717;"	d
GL_SCISSOR_BOX	drivers/GL/gl.h	585;"	d
GL_SCISSOR_TEST	drivers/GL/gl.h	584;"	d
GL_SCREEN_COORDINATES_REND	drivers/GL/glext.h	1762;"	d
GL_SECONDARY_COLOR_ARRAY	drivers/GL/glext.h	309;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	339;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	drivers/GL/glext.h	791;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	drivers/GL/glext.h	1739;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	drivers/GL/glext.h	2065;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	drivers/GL/glext.h	2073;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	drivers/GL/glext.h	308;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	drivers/GL/glext.h	1738;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	drivers/GL/glext.h	305;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	drivers/GL/glext.h	1735;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	drivers/GL/glext.h	307;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	drivers/GL/glext.h	1737;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	drivers/GL/glext.h	306;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	drivers/GL/glext.h	1736;"	d
GL_SECONDARY_COLOR_NV	drivers/GL/glext.h	1966;"	d
GL_SECONDARY_INTERPOLATOR_ATI	drivers/GL/glext.h	2523;"	d
GL_SELECT	drivers/GL/gl.h	385;"	d
GL_SELECTION_BUFFER_POINTER	drivers/GL/gl.h	406;"	d
GL_SELECTION_BUFFER_SIZE	drivers/GL/gl.h	407;"	d
GL_SEPARABLE_2D	drivers/GL/gl.h	1573;"	d
GL_SEPARABLE_2D	drivers/GL/glext.h	117;"	d
GL_SEPARABLE_2D_EXT	drivers/GL/glext.h	1064;"	d
GL_SEPARATE_SPECULAR_COLOR	drivers/GL/gl.h	1496;"	d
GL_SEPARATE_SPECULAR_COLOR	drivers/GL/glext.h	94;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	drivers/GL/glext.h	1729;"	d
GL_SET	drivers/GL/gl.h	427;"	d
GL_SGIS_detail_texture	drivers/GL/glext.h	4383;"	d
GL_SGIS_fog_function	drivers/GL/glext.h	4611;"	d
GL_SGIS_generate_mipmap	drivers/GL/glext.h	4453;"	d
GL_SGIS_multisample	drivers/GL/glext.h	4411;"	d
GL_SGIS_pixel_texture	drivers/GL/glext.h	4329;"	d
GL_SGIS_point_line_texgen	drivers/GL/glext.h	5487;"	d
GL_SGIS_point_parameters	drivers/GL/glext.h	4529;"	d
GL_SGIS_sharpen_texture	drivers/GL/glext.h	4393;"	d
GL_SGIS_texture4D	drivers/GL/glext.h	4347;"	d
GL_SGIS_texture_border_clamp	drivers/GL/glext.h	4469;"	d
GL_SGIS_texture_color_mask	drivers/GL/glext.h	5491;"	d
GL_SGIS_texture_edge_clamp	drivers/GL/glext.h	4465;"	d
GL_SGIS_texture_filter4	drivers/GL/glext.h	4203;"	d
GL_SGIS_texture_lod	drivers/GL/glext.h	4407;"	d
GL_SGIX_async	drivers/GL/glext.h	4859;"	d
GL_SGIX_async_histogram	drivers/GL/glext.h	4881;"	d
GL_SGIX_async_pixel	drivers/GL/glext.h	4877;"	d
GL_SGIX_blend_alpha_minmax	drivers/GL/glext.h	4851;"	d
GL_SGIX_calligraphic_fragment	drivers/GL/glext.h	4713;"	d
GL_SGIX_clipmap	drivers/GL/glext.h	4457;"	d
GL_SGIX_convolution_accuracy	drivers/GL/glext.h	5479;"	d
GL_SGIX_depth_pass_instrument	drivers/GL/glext.h	5445;"	d
GL_SGIX_depth_texture	drivers/GL/glext.h	4607;"	d
GL_SGIX_flush_raster	drivers/GL/glext.h	4599;"	d
GL_SGIX_fog_offset	drivers/GL/glext.h	4621;"	d
GL_SGIX_fog_scale	drivers/GL/glext.h	5069;"	d
GL_SGIX_fragment_lighting	drivers/GL/glext.h	4773;"	d
GL_SGIX_framezoom	drivers/GL/glext.h	4561;"	d
GL_SGIX_igloo_interface	drivers/GL/glext.h	5499;"	d
GL_SGIX_instruments	drivers/GL/glext.h	4539;"	d
GL_SGIX_interlace	drivers/GL/glext.h	4489;"	d
GL_SGIX_ir_instrument1	drivers/GL/glext.h	4709;"	d
GL_SGIX_list_priority	drivers/GL/glext.h	4691;"	d
GL_SGIX_pixel_texture	drivers/GL/glext.h	4321;"	d
GL_SGIX_pixel_tiles	drivers/GL/glext.h	4493;"	d
GL_SGIX_polynomial_ffd	drivers/GL/glext.h	4577;"	d
GL_SGIX_reference_plane	drivers/GL/glext.h	4591;"	d
GL_SGIX_resample	drivers/GL/glext.h	5483;"	d
GL_SGIX_scalebias_hint	drivers/GL/glext.h	5731;"	d
GL_SGIX_shadow	drivers/GL/glext.h	4461;"	d
GL_SGIX_shadow_ambient	drivers/GL/glext.h	4721;"	d
GL_SGIX_sprite	drivers/GL/glext.h	4501;"	d
GL_SGIX_subsample	drivers/GL/glext.h	5433;"	d
GL_SGIX_tag_sample_buffer	drivers/GL/glext.h	4569;"	d
GL_SGIX_texture_add_env	drivers/GL/glext.h	4647;"	d
GL_SGIX_texture_coordinate_clamp	drivers/GL/glext.h	5727;"	d
GL_SGIX_texture_lod_bias	drivers/GL/glext.h	4717;"	d
GL_SGIX_texture_multi_buffer	drivers/GL/glext.h	4515;"	d
GL_SGIX_texture_scale_bias	drivers/GL/glext.h	4557;"	d
GL_SGIX_texture_select	drivers/GL/glext.h	4497;"	d
GL_SGIX_vertex_preclip	drivers/GL/glext.h	5475;"	d
GL_SGIX_ycrcb	drivers/GL/glext.h	4769;"	d
GL_SGIX_ycrcb_subsample	drivers/GL/glext.h	5441;"	d
GL_SGIX_ycrcba	drivers/GL/glext.h	5437;"	d
GL_SGI_color_table	drivers/GL/glext.h	4301;"	d
GL_SGI_texture_color_table	drivers/GL/glext.h	4357;"	d
GL_SHADER_CONSISTENT_NV	drivers/GL/glext.h	2239;"	d
GL_SHADER_OBJECT_ARB	drivers/GL/glext.h	822;"	d
GL_SHADER_OPERATION_NV	drivers/GL/glext.h	2241;"	d
GL_SHADER_SOURCE_LENGTH	drivers/GL/glext.h	448;"	d
GL_SHADER_TYPE	drivers/GL/glext.h	420;"	d
GL_SHADE_MODEL	drivers/GL/gl.h	333;"	d
GL_SHADING_LANGUAGE_VERSION	drivers/GL/glext.h	452;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	drivers/GL/glext.h	874;"	d
GL_SHADOW_AMBIENT_SGIX	drivers/GL/glext.h	1548;"	d
GL_SHADOW_ATTENUATION_EXT	drivers/GL/glext.h	1645;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	drivers/GL/glext.h	1723;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	drivers/GL/glext.h	1177;"	d
GL_SHININESS	drivers/GL/gl.h	323;"	d
GL_SHORT	drivers/GL/gl.h	175;"	d
GL_SIGNED_ALPHA8_NV	drivers/GL/glext.h	2279;"	d
GL_SIGNED_ALPHA_NV	drivers/GL/glext.h	2278;"	d
GL_SIGNED_HILO16_NV	drivers/GL/glext.h	2269;"	d
GL_SIGNED_HILO8_NV	drivers/GL/glext.h	2754;"	d
GL_SIGNED_HILO_NV	drivers/GL/glext.h	2268;"	d
GL_SIGNED_IDENTITY_NV	drivers/GL/glext.h	1978;"	d
GL_SIGNED_INTENSITY8_NV	drivers/GL/glext.h	2281;"	d
GL_SIGNED_INTENSITY_NV	drivers/GL/glext.h	2280;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	drivers/GL/glext.h	2277;"	d
GL_SIGNED_LUMINANCE8_NV	drivers/GL/glext.h	2275;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	drivers/GL/glext.h	2276;"	d
GL_SIGNED_LUMINANCE_NV	drivers/GL/glext.h	2274;"	d
GL_SIGNED_NEGATE_NV	drivers/GL/glext.h	1979;"	d
GL_SIGNED_RGB8_NV	drivers/GL/glext.h	2273;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	drivers/GL/glext.h	2286;"	d
GL_SIGNED_RGBA8_NV	drivers/GL/glext.h	2271;"	d
GL_SIGNED_RGBA_NV	drivers/GL/glext.h	2270;"	d
GL_SIGNED_RGB_NV	drivers/GL/glext.h	2272;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	drivers/GL/glext.h	2285;"	d
GL_SINGLE_COLOR	drivers/GL/gl.h	1495;"	d
GL_SINGLE_COLOR	drivers/GL/glext.h	93;"	d
GL_SINGLE_COLOR_EXT	drivers/GL/glext.h	1728;"	d
GL_SLICE_ACCUM_SUN	drivers/GL/glext.h	2714;"	d
GL_SMOOTH	drivers/GL/gl.h	335;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	drivers/GL/gl.h	1504;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	drivers/GL/glext.h	98;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	drivers/GL/gl.h	1503;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	drivers/GL/glext.h	97;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	drivers/GL/gl.h	1502;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	drivers/GL/glext.h	96;"	d
GL_SMOOTH_POINT_SIZE_RANGE	drivers/GL/gl.h	1501;"	d
GL_SMOOTH_POINT_SIZE_RANGE	drivers/GL/glext.h	95;"	d
GL_SOURCE0_ALPHA	drivers/GL/gl.h	1860;"	d
GL_SOURCE0_ALPHA	drivers/GL/glext.h	260;"	d
GL_SOURCE0_ALPHA_ARB	drivers/GL/glext.h	627;"	d
GL_SOURCE0_ALPHA_EXT	drivers/GL/glext.h	1796;"	d
GL_SOURCE0_RGB	drivers/GL/gl.h	1857;"	d
GL_SOURCE0_RGB	drivers/GL/glext.h	257;"	d
GL_SOURCE0_RGB_ARB	drivers/GL/glext.h	624;"	d
GL_SOURCE0_RGB_EXT	drivers/GL/glext.h	1793;"	d
GL_SOURCE1_ALPHA	drivers/GL/gl.h	1861;"	d
GL_SOURCE1_ALPHA	drivers/GL/glext.h	261;"	d
GL_SOURCE1_ALPHA_ARB	drivers/GL/glext.h	628;"	d
GL_SOURCE1_ALPHA_EXT	drivers/GL/glext.h	1797;"	d
GL_SOURCE1_RGB	drivers/GL/gl.h	1858;"	d
GL_SOURCE1_RGB	drivers/GL/glext.h	258;"	d
GL_SOURCE1_RGB_ARB	drivers/GL/glext.h	625;"	d
GL_SOURCE1_RGB_EXT	drivers/GL/glext.h	1794;"	d
GL_SOURCE2_ALPHA	drivers/GL/gl.h	1862;"	d
GL_SOURCE2_ALPHA	drivers/GL/glext.h	262;"	d
GL_SOURCE2_ALPHA_ARB	drivers/GL/glext.h	629;"	d
GL_SOURCE2_ALPHA_EXT	drivers/GL/glext.h	1798;"	d
GL_SOURCE2_RGB	drivers/GL/gl.h	1859;"	d
GL_SOURCE2_RGB	drivers/GL/glext.h	259;"	d
GL_SOURCE2_RGB_ARB	drivers/GL/glext.h	626;"	d
GL_SOURCE2_RGB_EXT	drivers/GL/glext.h	1795;"	d
GL_SOURCE3_ALPHA_NV	drivers/GL/glext.h	2032;"	d
GL_SOURCE3_RGB_NV	drivers/GL/glext.h	2031;"	d
GL_SPARE0_NV	drivers/GL/glext.h	1967;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	drivers/GL/glext.h	1971;"	d
GL_SPARE1_NV	drivers/GL/glext.h	1968;"	d
GL_SPECULAR	drivers/GL/gl.h	322;"	d
GL_SPHERE_MAP	drivers/GL/gl.h	669;"	d
GL_SPOT_CUTOFF	drivers/GL/gl.h	316;"	d
GL_SPOT_DIRECTION	drivers/GL/gl.h	326;"	d
GL_SPOT_EXPONENT	drivers/GL/gl.h	315;"	d
GL_SPRITE_AXIAL_SGIX	drivers/GL/glext.h	1351;"	d
GL_SPRITE_AXIS_SGIX	drivers/GL/glext.h	1349;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	drivers/GL/glext.h	1353;"	d
GL_SPRITE_MODE_SGIX	drivers/GL/glext.h	1348;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	drivers/GL/glext.h	1352;"	d
GL_SPRITE_SGIX	drivers/GL/glext.h	1347;"	d
GL_SPRITE_TRANSLATION_SGIX	drivers/GL/glext.h	1350;"	d
GL_SRC0_ALPHA	drivers/GL/glext.h	370;"	d
GL_SRC0_RGB	drivers/GL/glext.h	367;"	d
GL_SRC1_ALPHA	drivers/GL/glext.h	371;"	d
GL_SRC1_RGB	drivers/GL/glext.h	368;"	d
GL_SRC2_ALPHA	drivers/GL/glext.h	372;"	d
GL_SRC2_RGB	drivers/GL/glext.h	369;"	d
GL_SRC_ALPHA	drivers/GL/gl.h	374;"	d
GL_SRC_ALPHA_SATURATE	drivers/GL/gl.h	380;"	d
GL_SRC_COLOR	drivers/GL/gl.h	372;"	d
GL_STACK_OVERFLOW	drivers/GL/gl.h	693;"	d
GL_STACK_UNDERFLOW	drivers/GL/gl.h	694;"	d
GL_STATIC_ATI	drivers/GL/glext.h	2566;"	d
GL_STATIC_COPY	drivers/GL/glext.h	354;"	d
GL_STATIC_COPY_ARB	drivers/GL/glext.h	806;"	d
GL_STATIC_DRAW	drivers/GL/glext.h	352;"	d
GL_STATIC_DRAW_ARB	drivers/GL/glext.h	804;"	d
GL_STATIC_READ	drivers/GL/glext.h	353;"	d
GL_STATIC_READ_ARB	drivers/GL/glext.h	805;"	d
GL_STENCIL	drivers/GL/gl.h	496;"	d
GL_STENCIL_ATTACHMENT_EXT	drivers/GL/glext.h	3020;"	d
GL_STENCIL_BACK_FAIL	drivers/GL/glext.h	386;"	d
GL_STENCIL_BACK_FAIL_ATI	drivers/GL/glext.h	2917;"	d
GL_STENCIL_BACK_FUNC	drivers/GL/glext.h	385;"	d
GL_STENCIL_BACK_FUNC_ATI	drivers/GL/glext.h	2916;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	drivers/GL/glext.h	387;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	drivers/GL/glext.h	2918;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	drivers/GL/glext.h	388;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	drivers/GL/glext.h	2919;"	d
GL_STENCIL_BACK_REF	drivers/GL/glext.h	457;"	d
GL_STENCIL_BACK_VALUE_MASK	drivers/GL/glext.h	458;"	d
GL_STENCIL_BACK_WRITEMASK	drivers/GL/glext.h	459;"	d
GL_STENCIL_BITS	drivers/GL/gl.h	446;"	d
GL_STENCIL_BUFFER_BIT	drivers/GL/gl.h	708;"	d
GL_STENCIL_CLEAR_VALUE	drivers/GL/gl.h	453;"	d
GL_STENCIL_FAIL	drivers/GL/gl.h	450;"	d
GL_STENCIL_FUNC	drivers/GL/gl.h	447;"	d
GL_STENCIL_INDEX	drivers/GL/gl.h	454;"	d
GL_STENCIL_INDEX16_EXT	drivers/GL/glext.h	3029;"	d
GL_STENCIL_INDEX1_EXT	drivers/GL/glext.h	3026;"	d
GL_STENCIL_INDEX4_EXT	drivers/GL/glext.h	3027;"	d
GL_STENCIL_INDEX8_EXT	drivers/GL/glext.h	3028;"	d
GL_STENCIL_PASS_DEPTH_FAIL	drivers/GL/gl.h	452;"	d
GL_STENCIL_PASS_DEPTH_PASS	drivers/GL/gl.h	451;"	d
GL_STENCIL_REF	drivers/GL/gl.h	449;"	d
GL_STENCIL_TEST	drivers/GL/gl.h	444;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	drivers/GL/glext.h	2765;"	d
GL_STENCIL_VALUE_MASK	drivers/GL/gl.h	448;"	d
GL_STENCIL_WRITEMASK	drivers/GL/gl.h	445;"	d
GL_STEREO	drivers/GL/gl.h	492;"	d
GL_STORAGE_CACHED_APPLE	drivers/GL/glext.h	2797;"	d
GL_STORAGE_SHARED_APPLE	drivers/GL/glext.h	2798;"	d
GL_STREAM_COPY	drivers/GL/glext.h	351;"	d
GL_STREAM_COPY_ARB	drivers/GL/glext.h	803;"	d
GL_STREAM_DRAW	drivers/GL/glext.h	349;"	d
GL_STREAM_DRAW_ARB	drivers/GL/glext.h	801;"	d
GL_STREAM_READ	drivers/GL/glext.h	350;"	d
GL_STREAM_READ_ARB	drivers/GL/glext.h	802;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	drivers/GL/glext.h	1505;"	d
GL_STRICT_LIGHTING_HINT_PGI	drivers/GL/glext.h	1506;"	d
GL_STRICT_SCISSOR_HINT_PGI	drivers/GL/glext.h	1507;"	d
GL_SUBPIXEL_BITS	drivers/GL/gl.h	487;"	d
GL_SUBTRACT	drivers/GL/gl.h	1872;"	d
GL_SUBTRACT	drivers/GL/glext.h	272;"	d
GL_SUBTRACT_ARB	drivers/GL/glext.h	639;"	d
GL_SUB_ATI	drivers/GL/glext.h	2515;"	d
GL_SUNX_constant_data	drivers/GL/glext.h	5073;"	d
GL_SUN_convolution_border_modes	drivers/GL/glext.h	5245;"	d
GL_SUN_global_alpha	drivers/GL/glext.h	5081;"	d
GL_SUN_mesh_array	drivers/GL/glext.h	6037;"	d
GL_SUN_slice_accum	drivers/GL/glext.h	6045;"	d
GL_SUN_triangle_list	drivers/GL/glext.h	5103;"	d
GL_SUN_vertex	drivers/GL/glext.h	5123;"	d
GL_SWIZZLE_STQ_ATI	drivers/GL/glext.h	2533;"	d
GL_SWIZZLE_STQ_DQ_ATI	drivers/GL/glext.h	2535;"	d
GL_SWIZZLE_STRQ_ATI	drivers/GL/glext.h	2536;"	d
GL_SWIZZLE_STRQ_DQ_ATI	drivers/GL/glext.h	2537;"	d
GL_SWIZZLE_STR_ATI	drivers/GL/glext.h	2532;"	d
GL_SWIZZLE_STR_DR_ATI	drivers/GL/glext.h	2534;"	d
GL_T	drivers/GL/gl.h	676;"	d
GL_T2F_C3F_V3F	drivers/GL/gl.h	234;"	d
GL_T2F_C4F_N3F_V3F	drivers/GL/gl.h	236;"	d
GL_T2F_C4UB_V3F	drivers/GL/gl.h	233;"	d
GL_T2F_IUI_N3F_V2F_EXT	drivers/GL/glext.h	1573;"	d
GL_T2F_IUI_N3F_V3F_EXT	drivers/GL/glext.h	1574;"	d
GL_T2F_IUI_V2F_EXT	drivers/GL/glext.h	1571;"	d
GL_T2F_IUI_V3F_EXT	drivers/GL/glext.h	1572;"	d
GL_T2F_N3F_V3F	drivers/GL/gl.h	235;"	d
GL_T2F_V3F	drivers/GL/gl.h	231;"	d
GL_T4F_C4F_N3F_V4F	drivers/GL/gl.h	237;"	d
GL_T4F_V4F	drivers/GL/gl.h	232;"	d
GL_TABLE_TOO_LARGE	drivers/GL/gl.h	1618;"	d
GL_TABLE_TOO_LARGE	drivers/GL/glext.h	148;"	d
GL_TABLE_TOO_LARGE_EXT	drivers/GL/glext.h	1058;"	d
GL_TANGENT_ARRAY_EXT	drivers/GL/glext.h	1767;"	d
GL_TANGENT_ARRAY_POINTER_EXT	drivers/GL/glext.h	1775;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	drivers/GL/glext.h	1772;"	d
GL_TANGENT_ARRAY_TYPE_EXT	drivers/GL/glext.h	1771;"	d
GL_TEXCOORD1_BIT_PGI	drivers/GL/glext.h	1484;"	d
GL_TEXCOORD2_BIT_PGI	drivers/GL/glext.h	1485;"	d
GL_TEXCOORD3_BIT_PGI	drivers/GL/glext.h	1486;"	d
GL_TEXCOORD4_BIT_PGI	drivers/GL/glext.h	1487;"	d
GL_TEXTURE	drivers/GL/gl.h	243;"	d
GL_TEXTURE0	drivers/GL/gl.h	1778;"	d
GL_TEXTURE0	drivers/GL/glext.h	182;"	d
GL_TEXTURE0_ARB	drivers/GL/gl.h	2029;"	d
GL_TEXTURE0_ARB	drivers/GL/glext.h	463;"	d
GL_TEXTURE1	drivers/GL/gl.h	1779;"	d
GL_TEXTURE1	drivers/GL/glext.h	183;"	d
GL_TEXTURE10	drivers/GL/gl.h	1788;"	d
GL_TEXTURE10	drivers/GL/glext.h	192;"	d
GL_TEXTURE10_ARB	drivers/GL/gl.h	2039;"	d
GL_TEXTURE10_ARB	drivers/GL/glext.h	473;"	d
GL_TEXTURE11	drivers/GL/gl.h	1789;"	d
GL_TEXTURE11	drivers/GL/glext.h	193;"	d
GL_TEXTURE11_ARB	drivers/GL/gl.h	2040;"	d
GL_TEXTURE11_ARB	drivers/GL/glext.h	474;"	d
GL_TEXTURE12	drivers/GL/gl.h	1790;"	d
GL_TEXTURE12	drivers/GL/glext.h	194;"	d
GL_TEXTURE12_ARB	drivers/GL/gl.h	2041;"	d
GL_TEXTURE12_ARB	drivers/GL/glext.h	475;"	d
GL_TEXTURE13	drivers/GL/gl.h	1791;"	d
GL_TEXTURE13	drivers/GL/glext.h	195;"	d
GL_TEXTURE13_ARB	drivers/GL/gl.h	2042;"	d
GL_TEXTURE13_ARB	drivers/GL/glext.h	476;"	d
GL_TEXTURE14	drivers/GL/gl.h	1792;"	d
GL_TEXTURE14	drivers/GL/glext.h	196;"	d
GL_TEXTURE14_ARB	drivers/GL/gl.h	2043;"	d
GL_TEXTURE14_ARB	drivers/GL/glext.h	477;"	d
GL_TEXTURE15	drivers/GL/gl.h	1793;"	d
GL_TEXTURE15	drivers/GL/glext.h	197;"	d
GL_TEXTURE15_ARB	drivers/GL/gl.h	2044;"	d
GL_TEXTURE15_ARB	drivers/GL/glext.h	478;"	d
GL_TEXTURE16	drivers/GL/gl.h	1794;"	d
GL_TEXTURE16	drivers/GL/glext.h	198;"	d
GL_TEXTURE16_ARB	drivers/GL/gl.h	2045;"	d
GL_TEXTURE16_ARB	drivers/GL/glext.h	479;"	d
GL_TEXTURE17	drivers/GL/gl.h	1795;"	d
GL_TEXTURE17	drivers/GL/glext.h	199;"	d
GL_TEXTURE17_ARB	drivers/GL/gl.h	2046;"	d
GL_TEXTURE17_ARB	drivers/GL/glext.h	480;"	d
GL_TEXTURE18	drivers/GL/gl.h	1796;"	d
GL_TEXTURE18	drivers/GL/glext.h	200;"	d
GL_TEXTURE18_ARB	drivers/GL/gl.h	2047;"	d
GL_TEXTURE18_ARB	drivers/GL/glext.h	481;"	d
GL_TEXTURE19	drivers/GL/gl.h	1797;"	d
GL_TEXTURE19	drivers/GL/glext.h	201;"	d
GL_TEXTURE19_ARB	drivers/GL/gl.h	2048;"	d
GL_TEXTURE19_ARB	drivers/GL/glext.h	482;"	d
GL_TEXTURE1_ARB	drivers/GL/gl.h	2030;"	d
GL_TEXTURE1_ARB	drivers/GL/glext.h	464;"	d
GL_TEXTURE2	drivers/GL/gl.h	1780;"	d
GL_TEXTURE2	drivers/GL/glext.h	184;"	d
GL_TEXTURE20	drivers/GL/gl.h	1798;"	d
GL_TEXTURE20	drivers/GL/glext.h	202;"	d
GL_TEXTURE20_ARB	drivers/GL/gl.h	2049;"	d
GL_TEXTURE20_ARB	drivers/GL/glext.h	483;"	d
GL_TEXTURE21	drivers/GL/gl.h	1799;"	d
GL_TEXTURE21	drivers/GL/glext.h	203;"	d
GL_TEXTURE21_ARB	drivers/GL/gl.h	2050;"	d
GL_TEXTURE21_ARB	drivers/GL/glext.h	484;"	d
GL_TEXTURE22	drivers/GL/gl.h	1800;"	d
GL_TEXTURE22	drivers/GL/glext.h	204;"	d
GL_TEXTURE22_ARB	drivers/GL/gl.h	2051;"	d
GL_TEXTURE22_ARB	drivers/GL/glext.h	485;"	d
GL_TEXTURE23	drivers/GL/gl.h	1801;"	d
GL_TEXTURE23	drivers/GL/glext.h	205;"	d
GL_TEXTURE23_ARB	drivers/GL/gl.h	2052;"	d
GL_TEXTURE23_ARB	drivers/GL/glext.h	486;"	d
GL_TEXTURE24	drivers/GL/gl.h	1802;"	d
GL_TEXTURE24	drivers/GL/glext.h	206;"	d
GL_TEXTURE24_ARB	drivers/GL/gl.h	2053;"	d
GL_TEXTURE24_ARB	drivers/GL/glext.h	487;"	d
GL_TEXTURE25	drivers/GL/gl.h	1803;"	d
GL_TEXTURE25	drivers/GL/glext.h	207;"	d
GL_TEXTURE25_ARB	drivers/GL/gl.h	2054;"	d
GL_TEXTURE25_ARB	drivers/GL/glext.h	488;"	d
GL_TEXTURE26	drivers/GL/gl.h	1804;"	d
GL_TEXTURE26	drivers/GL/glext.h	208;"	d
GL_TEXTURE26_ARB	drivers/GL/gl.h	2055;"	d
GL_TEXTURE26_ARB	drivers/GL/glext.h	489;"	d
GL_TEXTURE27	drivers/GL/gl.h	1805;"	d
GL_TEXTURE27	drivers/GL/glext.h	209;"	d
GL_TEXTURE27_ARB	drivers/GL/gl.h	2056;"	d
GL_TEXTURE27_ARB	drivers/GL/glext.h	490;"	d
GL_TEXTURE28	drivers/GL/gl.h	1806;"	d
GL_TEXTURE28	drivers/GL/glext.h	210;"	d
GL_TEXTURE28_ARB	drivers/GL/gl.h	2057;"	d
GL_TEXTURE28_ARB	drivers/GL/glext.h	491;"	d
GL_TEXTURE29	drivers/GL/gl.h	1807;"	d
GL_TEXTURE29	drivers/GL/glext.h	211;"	d
GL_TEXTURE29_ARB	drivers/GL/gl.h	2058;"	d
GL_TEXTURE29_ARB	drivers/GL/glext.h	492;"	d
GL_TEXTURE2_ARB	drivers/GL/gl.h	2031;"	d
GL_TEXTURE2_ARB	drivers/GL/glext.h	465;"	d
GL_TEXTURE3	drivers/GL/gl.h	1781;"	d
GL_TEXTURE3	drivers/GL/glext.h	185;"	d
GL_TEXTURE30	drivers/GL/gl.h	1808;"	d
GL_TEXTURE30	drivers/GL/glext.h	212;"	d
GL_TEXTURE30_ARB	drivers/GL/gl.h	2059;"	d
GL_TEXTURE30_ARB	drivers/GL/glext.h	493;"	d
GL_TEXTURE31	drivers/GL/gl.h	1809;"	d
GL_TEXTURE31	drivers/GL/glext.h	213;"	d
GL_TEXTURE31_ARB	drivers/GL/gl.h	2060;"	d
GL_TEXTURE31_ARB	drivers/GL/glext.h	494;"	d
GL_TEXTURE3_ARB	drivers/GL/gl.h	2032;"	d
GL_TEXTURE3_ARB	drivers/GL/glext.h	466;"	d
GL_TEXTURE4	drivers/GL/gl.h	1782;"	d
GL_TEXTURE4	drivers/GL/glext.h	186;"	d
GL_TEXTURE4_ARB	drivers/GL/gl.h	2033;"	d
GL_TEXTURE4_ARB	drivers/GL/glext.h	467;"	d
GL_TEXTURE5	drivers/GL/gl.h	1783;"	d
GL_TEXTURE5	drivers/GL/glext.h	187;"	d
GL_TEXTURE5_ARB	drivers/GL/gl.h	2034;"	d
GL_TEXTURE5_ARB	drivers/GL/glext.h	468;"	d
GL_TEXTURE6	drivers/GL/gl.h	1784;"	d
GL_TEXTURE6	drivers/GL/glext.h	188;"	d
GL_TEXTURE6_ARB	drivers/GL/gl.h	2035;"	d
GL_TEXTURE6_ARB	drivers/GL/glext.h	469;"	d
GL_TEXTURE7	drivers/GL/gl.h	1785;"	d
GL_TEXTURE7	drivers/GL/glext.h	189;"	d
GL_TEXTURE7_ARB	drivers/GL/gl.h	2036;"	d
GL_TEXTURE7_ARB	drivers/GL/glext.h	470;"	d
GL_TEXTURE8	drivers/GL/gl.h	1786;"	d
GL_TEXTURE8	drivers/GL/glext.h	190;"	d
GL_TEXTURE8_ARB	drivers/GL/gl.h	2037;"	d
GL_TEXTURE8_ARB	drivers/GL/glext.h	471;"	d
GL_TEXTURE9	drivers/GL/gl.h	1787;"	d
GL_TEXTURE9	drivers/GL/glext.h	191;"	d
GL_TEXTURE9_ARB	drivers/GL/gl.h	2038;"	d
GL_TEXTURE9_ARB	drivers/GL/glext.h	472;"	d
GL_TEXTURE_1D	drivers/GL/gl.h	640;"	d
GL_TEXTURE_1D_BINDING_EXT	drivers/GL/glext.h	1157;"	d
GL_TEXTURE_2D	drivers/GL/gl.h	641;"	d
GL_TEXTURE_2D_BINDING_EXT	drivers/GL/glext.h	1158;"	d
GL_TEXTURE_3D	drivers/GL/gl.h	1511;"	d
GL_TEXTURE_3D	drivers/GL/glext.h	71;"	d
GL_TEXTURE_3D_BINDING_EXT	drivers/GL/glext.h	1159;"	d
GL_TEXTURE_3D_EXT	drivers/GL/glext.h	1026;"	d
GL_TEXTURE_4DSIZE_SGIS	drivers/GL/glext.h	1136;"	d
GL_TEXTURE_4D_BINDING_SGIS	drivers/GL/glext.h	1139;"	d
GL_TEXTURE_4D_SGIS	drivers/GL/glext.h	1134;"	d
GL_TEXTURE_ALPHA_SIZE	drivers/GL/gl.h	658;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	drivers/GL/glext.h	1012;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	drivers/GL/glext.h	931;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	drivers/GL/glext.h	1646;"	d
GL_TEXTURE_BASE_LEVEL	drivers/GL/gl.h	1499;"	d
GL_TEXTURE_BASE_LEVEL	drivers/GL/glext.h	90;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	drivers/GL/glext.h	1191;"	d
GL_TEXTURE_BINDING_1D	drivers/GL/gl.h	726;"	d
GL_TEXTURE_BINDING_2D	drivers/GL/gl.h	727;"	d
GL_TEXTURE_BINDING_3D	drivers/GL/gl.h	1516;"	d
GL_TEXTURE_BINDING_3D	drivers/GL/glext.h	66;"	d
GL_TEXTURE_BINDING_CUBE_MAP	drivers/GL/gl.h	1817;"	d
GL_TEXTURE_BINDING_CUBE_MAP	drivers/GL/glext.h	233;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	drivers/GL/glext.h	526;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	drivers/GL/glext.h	1896;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	drivers/GL/glext.h	910;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	drivers/GL/glext.h	2226;"	d
GL_TEXTURE_BIT	drivers/GL/gl.h	716;"	d
GL_TEXTURE_BLUE_SIZE	drivers/GL/gl.h	657;"	d
GL_TEXTURE_BLUE_SIZE_EXT	drivers/GL/glext.h	1011;"	d
GL_TEXTURE_BLUE_TYPE_ARB	drivers/GL/glext.h	930;"	d
GL_TEXTURE_BORDER	drivers/GL/gl.h	653;"	d
GL_TEXTURE_BORDER_COLOR	drivers/GL/gl.h	650;"	d
GL_TEXTURE_BORDER_VALUES_NV	drivers/GL/glext.h	2299;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	drivers/GL/glext.h	1263;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	drivers/GL/glext.h	1268;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	drivers/GL/glext.h	1264;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	drivers/GL/glext.h	1267;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	drivers/GL/glext.h	1265;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	drivers/GL/glext.h	1266;"	d
GL_TEXTURE_COLOR_TABLE_SGI	drivers/GL/glext.h	1143;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	drivers/GL/glext.h	2162;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	drivers/GL/glext.h	672;"	d
GL_TEXTURE_COMPARE_FUNC	drivers/GL/glext.h	318;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	drivers/GL/glext.h	667;"	d
GL_TEXTURE_COMPARE_MODE	drivers/GL/glext.h	317;"	d
GL_TEXTURE_COMPARE_MODE_ARB	drivers/GL/glext.h	666;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	drivers/GL/glext.h	1278;"	d
GL_TEXTURE_COMPARE_SGIX	drivers/GL/glext.h	1277;"	d
GL_TEXTURE_COMPONENTS	drivers/GL/gl.h	654;"	d
GL_TEXTURE_COMPRESSED	drivers/GL/gl.h	1835;"	d
GL_TEXTURE_COMPRESSED	drivers/GL/glext.h	250;"	d
GL_TEXTURE_COMPRESSED_ARB	drivers/GL/glext.h	546;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	drivers/GL/gl.h	1834;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	drivers/GL/glext.h	249;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	drivers/GL/glext.h	545;"	d
GL_TEXTURE_COMPRESSION_HINT	drivers/GL/gl.h	1833;"	d
GL_TEXTURE_COMPRESSION_HINT	drivers/GL/glext.h	248;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	drivers/GL/glext.h	544;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	drivers/GL/glext.h	1822;"	d
GL_TEXTURE_COORD_ARRAY	drivers/GL/gl.h	202;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	337;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	drivers/GL/glext.h	789;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	drivers/GL/glext.h	1242;"	d
GL_TEXTURE_COORD_ARRAY_EXT	drivers/GL/glext.h	1223;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	drivers/GL/glext.h	2062;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	drivers/GL/glext.h	2070;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	drivers/GL/glext.h	1699;"	d
GL_TEXTURE_COORD_ARRAY_POINTER	drivers/GL/gl.h	222;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	drivers/GL/glext.h	1249;"	d
GL_TEXTURE_COORD_ARRAY_SIZE	drivers/GL/gl.h	214;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	drivers/GL/glext.h	1239;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE	drivers/GL/gl.h	216;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	drivers/GL/glext.h	1241;"	d
GL_TEXTURE_COORD_ARRAY_TYPE	drivers/GL/gl.h	215;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	drivers/GL/glext.h	1240;"	d
GL_TEXTURE_CUBE_MAP	drivers/GL/gl.h	1816;"	d
GL_TEXTURE_CUBE_MAP	drivers/GL/glext.h	232;"	d
GL_TEXTURE_CUBE_MAP_ARB	drivers/GL/glext.h	525;"	d
GL_TEXTURE_CUBE_MAP_EXT	drivers/GL/glext.h	1895;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	drivers/GL/gl.h	1819;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	drivers/GL/glext.h	235;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	drivers/GL/glext.h	528;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	drivers/GL/glext.h	1898;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	drivers/GL/gl.h	1821;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	drivers/GL/glext.h	237;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	drivers/GL/glext.h	530;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	drivers/GL/glext.h	1900;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	drivers/GL/gl.h	1823;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	drivers/GL/glext.h	239;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	drivers/GL/glext.h	532;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	drivers/GL/glext.h	1902;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	drivers/GL/gl.h	1818;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	drivers/GL/glext.h	234;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	drivers/GL/glext.h	527;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	drivers/GL/glext.h	1897;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	drivers/GL/gl.h	1820;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	drivers/GL/glext.h	236;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	drivers/GL/glext.h	529;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	drivers/GL/glext.h	1899;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	drivers/GL/gl.h	1822;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	drivers/GL/glext.h	238;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	drivers/GL/glext.h	531;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	drivers/GL/glext.h	1901;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	drivers/GL/glext.h	1396;"	d
GL_TEXTURE_DEFORMATION_SGIX	drivers/GL/glext.h	1402;"	d
GL_TEXTURE_DEPTH	drivers/GL/gl.h	1513;"	d
GL_TEXTURE_DEPTH	drivers/GL/glext.h	73;"	d
GL_TEXTURE_DEPTH_EXT	drivers/GL/glext.h	1028;"	d
GL_TEXTURE_DEPTH_SIZE	drivers/GL/glext.h	315;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	drivers/GL/glext.h	661;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	drivers/GL/glext.h	934;"	d
GL_TEXTURE_DS_SIZE_NV	drivers/GL/glext.h	2302;"	d
GL_TEXTURE_DT_SIZE_NV	drivers/GL/glext.h	2303;"	d
GL_TEXTURE_ENV	drivers/GL/gl.h	638;"	d
GL_TEXTURE_ENV_BIAS_SGIX	drivers/GL/glext.h	1461;"	d
GL_TEXTURE_ENV_COLOR	drivers/GL/gl.h	646;"	d
GL_TEXTURE_ENV_MODE	drivers/GL/gl.h	639;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	drivers/GL/glext.h	1035;"	d
GL_TEXTURE_FILTER_CONTROL	drivers/GL/glext.h	311;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	drivers/GL/glext.h	1916;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	drivers/GL/glext.h	2873;"	d
GL_TEXTURE_GEN_MODE	drivers/GL/gl.h	649;"	d
GL_TEXTURE_GEN_Q	drivers/GL/gl.h	680;"	d
GL_TEXTURE_GEN_R	drivers/GL/gl.h	679;"	d
GL_TEXTURE_GEN_S	drivers/GL/gl.h	647;"	d
GL_TEXTURE_GEN_T	drivers/GL/gl.h	648;"	d
GL_TEXTURE_GEQUAL_R_SGIX	drivers/GL/glext.h	1280;"	d
GL_TEXTURE_GREEN_SIZE	drivers/GL/gl.h	656;"	d
GL_TEXTURE_GREEN_SIZE_EXT	drivers/GL/glext.h	1010;"	d
GL_TEXTURE_GREEN_TYPE_ARB	drivers/GL/glext.h	929;"	d
GL_TEXTURE_HEIGHT	drivers/GL/gl.h	652;"	d
GL_TEXTURE_HI_SIZE_NV	drivers/GL/glext.h	2300;"	d
GL_TEXTURE_INDEX_SIZE_EXT	drivers/GL/glext.h	1522;"	d
GL_TEXTURE_INTENSITY_SIZE	drivers/GL/gl.h	660;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	drivers/GL/glext.h	1014;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	drivers/GL/glext.h	933;"	d
GL_TEXTURE_INTERNAL_FORMAT	drivers/GL/gl.h	728;"	d
GL_TEXTURE_LEQUAL_R_SGIX	drivers/GL/glext.h	1279;"	d
GL_TEXTURE_LIGHTING_MODE_HP	drivers/GL/glext.h	1621;"	d
GL_TEXTURE_LIGHT_EXT	drivers/GL/glext.h	1647;"	d
GL_TEXTURE_LOD_BIAS	drivers/GL/glext.h	312;"	d
GL_TEXTURE_LOD_BIAS_EXT	drivers/GL/glext.h	1917;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	drivers/GL/glext.h	1544;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	drivers/GL/glext.h	1542;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	drivers/GL/glext.h	1543;"	d
GL_TEXTURE_LO_SIZE_NV	drivers/GL/glext.h	2301;"	d
GL_TEXTURE_LUMINANCE_SIZE	drivers/GL/gl.h	659;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	drivers/GL/glext.h	1013;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	drivers/GL/glext.h	932;"	d
GL_TEXTURE_MAG_FILTER	drivers/GL/gl.h	644;"	d
GL_TEXTURE_MAG_SIZE_NV	drivers/GL/glext.h	2304;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	drivers/GL/glext.h	1648;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	drivers/GL/glext.h	1649;"	d
GL_TEXTURE_MATRIX	drivers/GL/gl.h	541;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	drivers/GL/glext.h	1921;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	drivers/GL/glext.h	2404;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	drivers/GL/glext.h	2402;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	drivers/GL/glext.h	2403;"	d
GL_TEXTURE_MAX_LEVEL	drivers/GL/gl.h	1500;"	d
GL_TEXTURE_MAX_LEVEL	drivers/GL/glext.h	91;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	drivers/GL/glext.h	1192;"	d
GL_TEXTURE_MAX_LOD	drivers/GL/gl.h	1498;"	d
GL_TEXTURE_MAX_LOD	drivers/GL/glext.h	89;"	d
GL_TEXTURE_MAX_LOD_SGIS	drivers/GL/glext.h	1190;"	d
GL_TEXTURE_MIN_FILTER	drivers/GL/gl.h	645;"	d
GL_TEXTURE_MIN_LOD	drivers/GL/gl.h	1497;"	d
GL_TEXTURE_MIN_LOD	drivers/GL/glext.h	88;"	d
GL_TEXTURE_MIN_LOD_SGIS	drivers/GL/glext.h	1189;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	drivers/GL/glext.h	1357;"	d
GL_TEXTURE_NORMAL_EXT	drivers/GL/glext.h	1744;"	d
GL_TEXTURE_POST_SPECULAR_HP	drivers/GL/glext.h	1622;"	d
GL_TEXTURE_PRE_SPECULAR_HP	drivers/GL/glext.h	1623;"	d
GL_TEXTURE_PRIORITY	drivers/GL/gl.h	724;"	d
GL_TEXTURE_PRIORITY_EXT	drivers/GL/glext.h	1155;"	d
GL_TEXTURE_RECTANGLE_ARB	drivers/GL/glext.h	909;"	d
GL_TEXTURE_RECTANGLE_NV	drivers/GL/glext.h	2225;"	d
GL_TEXTURE_RED_SIZE	drivers/GL/gl.h	655;"	d
GL_TEXTURE_RED_SIZE_EXT	drivers/GL/glext.h	1009;"	d
GL_TEXTURE_RED_TYPE_ARB	drivers/GL/glext.h	928;"	d
GL_TEXTURE_RESIDENT	drivers/GL/gl.h	725;"	d
GL_TEXTURE_RESIDENT_EXT	drivers/GL/glext.h	1156;"	d
GL_TEXTURE_SHADER_NV	drivers/GL/glext.h	2240;"	d
GL_TEXTURE_STACK_DEPTH	drivers/GL/gl.h	542;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	drivers/GL/gl.h	2291;"	d
GL_TEXTURE_TOO_LARGE_EXT	drivers/GL/glext.h	1018;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	drivers/GL/glext.h	2906;"	d
GL_TEXTURE_WIDTH	drivers/GL/gl.h	651;"	d
GL_TEXTURE_WRAP_Q_SGIS	drivers/GL/glext.h	1137;"	d
GL_TEXTURE_WRAP_R	drivers/GL/gl.h	1514;"	d
GL_TEXTURE_WRAP_R	drivers/GL/glext.h	74;"	d
GL_TEXTURE_WRAP_R_EXT	drivers/GL/glext.h	1029;"	d
GL_TEXTURE_WRAP_S	drivers/GL/gl.h	642;"	d
GL_TEXTURE_WRAP_T	drivers/GL/gl.h	643;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	drivers/GL/glext.h	2770;"	d
GL_TIME_ELAPSED_EXT	drivers/GL/gl.h	2251;"	d
GL_TRACE_ALL_BITS_MESA	drivers/GL/gl.h	2162;"	d
GL_TRACE_ARRAYS_BIT_MESA	drivers/GL/gl.h	2165;"	d
GL_TRACE_ERRORS_BIT_MESA	drivers/GL/gl.h	2168;"	d
GL_TRACE_MASK_MESA	drivers/GL/gl.h	2169;"	d
GL_TRACE_NAME_MESA	drivers/GL/gl.h	2170;"	d
GL_TRACE_OPERATIONS_BIT_MESA	drivers/GL/gl.h	2163;"	d
GL_TRACE_PIXELS_BIT_MESA	drivers/GL/gl.h	2167;"	d
GL_TRACE_PRIMITIVES_BIT_MESA	drivers/GL/gl.h	2164;"	d
GL_TRACE_TEXTURES_BIT_MESA	drivers/GL/gl.h	2166;"	d
GL_TRACK_MATRIX_NV	drivers/GL/glext.h	2347;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	drivers/GL/glext.h	2348;"	d
GL_TRANSFORM_BIT	drivers/GL/gl.h	710;"	d
GL_TRANSFORM_HINT_APPLE	drivers/GL/glext.h	1812;"	d
GL_TRANSPOSE_COLOR_MATRIX	drivers/GL/gl.h	1852;"	d
GL_TRANSPOSE_COLOR_MATRIX	drivers/GL/glext.h	220;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	drivers/GL/glext.h	504;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	drivers/GL/glext.h	725;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	drivers/GL/gl.h	1849;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	drivers/GL/glext.h	217;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	drivers/GL/glext.h	501;"	d
GL_TRANSPOSE_NV	drivers/GL/glext.h	2327;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	drivers/GL/gl.h	1850;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	drivers/GL/glext.h	218;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	drivers/GL/glext.h	502;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	drivers/GL/gl.h	1851;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	drivers/GL/glext.h	219;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	drivers/GL/glext.h	503;"	d
GL_TRIANGLES	drivers/GL/gl.h	190;"	d
GL_TRIANGLE_FAN	drivers/GL/gl.h	192;"	d
GL_TRIANGLE_LIST_SUN	drivers/GL/glext.h	1834;"	d
GL_TRIANGLE_MESH_SUN	drivers/GL/glext.h	2710;"	d
GL_TRIANGLE_STRIP	drivers/GL/gl.h	191;"	d
GL_TRUE	drivers/GL/gl.h	170;"	d
GL_TYPE_RGBA_FLOAT_ATI	drivers/GL/glext.h	2835;"	d
GL_UNPACK_ALIGNMENT	drivers/GL/gl.h	628;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	drivers/GL/glext.h	2774;"	d
GL_UNPACK_CMYK_HINT_EXT	drivers/GL/glext.h	1151;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	drivers/GL/glext.h	1821;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	drivers/GL/glext.h	1133;"	d
GL_UNPACK_IMAGE_HEIGHT	drivers/GL/gl.h	1510;"	d
GL_UNPACK_IMAGE_HEIGHT	drivers/GL/glext.h	70;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	drivers/GL/glext.h	1025;"	d
GL_UNPACK_LSB_FIRST	drivers/GL/gl.h	629;"	d
GL_UNPACK_RESAMPLE_OML	drivers/GL/glext.h	2423;"	d
GL_UNPACK_RESAMPLE_SGIX	drivers/GL/glext.h	2144;"	d
GL_UNPACK_ROW_LENGTH	drivers/GL/gl.h	630;"	d
GL_UNPACK_SKIP_IMAGES	drivers/GL/gl.h	1509;"	d
GL_UNPACK_SKIP_IMAGES	drivers/GL/glext.h	69;"	d
GL_UNPACK_SKIP_IMAGES_EXT	drivers/GL/glext.h	1024;"	d
GL_UNPACK_SKIP_PIXELS	drivers/GL/gl.h	631;"	d
GL_UNPACK_SKIP_ROWS	drivers/GL/gl.h	632;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	drivers/GL/glext.h	1132;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	drivers/GL/glext.h	2078;"	d
GL_UNPACK_SWAP_BYTES	drivers/GL/gl.h	633;"	d
GL_UNSIGNED_BYTE	drivers/GL/gl.h	174;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	drivers/GL/gl.h	1483;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	drivers/GL/glext.h	76;"	d
GL_UNSIGNED_BYTE_3_3_2	drivers/GL/gl.h	1482;"	d
GL_UNSIGNED_BYTE_3_3_2	drivers/GL/glext.h	60;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	drivers/GL/glext.h	1181;"	d
GL_UNSIGNED_IDENTITY_NV	drivers/GL/glext.h	1972;"	d
GL_UNSIGNED_INT	drivers/GL/gl.h	178;"	d
GL_UNSIGNED_INT_10_10_10_2	drivers/GL/gl.h	1492;"	d
GL_UNSIGNED_INT_10_10_10_2	drivers/GL/glext.h	64;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	drivers/GL/glext.h	1185;"	d
GL_UNSIGNED_INT_24_8_EXT	drivers/GL/gl.h	2289;"	d
GL_UNSIGNED_INT_24_8_MESA	drivers/GL/gl.h	2194;"	d
GL_UNSIGNED_INT_24_8_NV	drivers/GL/glext.h	2214;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	drivers/GL/gl.h	1493;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	drivers/GL/glext.h	82;"	d
GL_UNSIGNED_INT_8_24_REV_MESA	drivers/GL/gl.h	2195;"	d
GL_UNSIGNED_INT_8_8_8_8	drivers/GL/gl.h	1490;"	d
GL_UNSIGNED_INT_8_8_8_8	drivers/GL/glext.h	63;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	drivers/GL/glext.h	1184;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	drivers/GL/gl.h	1491;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	drivers/GL/glext.h	81;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	drivers/GL/glext.h	2237;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	drivers/GL/glext.h	2236;"	d
GL_UNSIGNED_INVERT_NV	drivers/GL/glext.h	1973;"	d
GL_UNSIGNED_NORMALIZED_ARB	drivers/GL/glext.h	935;"	d
GL_UNSIGNED_SHORT	drivers/GL/gl.h	176;"	d
GL_UNSIGNED_SHORT_15_1_MESA	drivers/GL/gl.h	2196;"	d
GL_UNSIGNED_SHORT_1_15_REV_MESA	drivers/GL/gl.h	2197;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	drivers/GL/gl.h	1489;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	drivers/GL/glext.h	80;"	d
GL_UNSIGNED_SHORT_4_4_4_4	drivers/GL/gl.h	1486;"	d
GL_UNSIGNED_SHORT_4_4_4_4	drivers/GL/glext.h	61;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	drivers/GL/glext.h	1182;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	drivers/GL/gl.h	1487;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	drivers/GL/glext.h	79;"	d
GL_UNSIGNED_SHORT_5_5_5_1	drivers/GL/gl.h	1488;"	d
GL_UNSIGNED_SHORT_5_5_5_1	drivers/GL/glext.h	62;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	drivers/GL/glext.h	1183;"	d
GL_UNSIGNED_SHORT_5_6_5	drivers/GL/gl.h	1484;"	d
GL_UNSIGNED_SHORT_5_6_5	drivers/GL/glext.h	77;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	drivers/GL/gl.h	1485;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	drivers/GL/glext.h	78;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	drivers/GL/glext.h	2803;"	d
GL_UNSIGNED_SHORT_8_8_MESA	drivers/GL/glext.h	2951;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	drivers/GL/glext.h	2804;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	drivers/GL/glext.h	2952;"	d
GL_UPPER_LEFT	drivers/GL/glext.h	456;"	d
GL_V2F	drivers/GL/gl.h	224;"	d
GL_V3F	drivers/GL/gl.h	225;"	d
GL_VALIDATE_STATUS	drivers/GL/glext.h	443;"	d
GL_VARIABLE_A_NV	drivers/GL/glext.h	1956;"	d
GL_VARIABLE_B_NV	drivers/GL/glext.h	1957;"	d
GL_VARIABLE_C_NV	drivers/GL/glext.h	1958;"	d
GL_VARIABLE_D_NV	drivers/GL/glext.h	1959;"	d
GL_VARIABLE_E_NV	drivers/GL/glext.h	1960;"	d
GL_VARIABLE_F_NV	drivers/GL/glext.h	1961;"	d
GL_VARIABLE_G_NV	drivers/GL/glext.h	1962;"	d
GL_VARIANT_ARRAY_EXT	drivers/GL/glext.h	2681;"	d
GL_VARIANT_ARRAY_POINTER_EXT	drivers/GL/glext.h	2682;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	drivers/GL/glext.h	2679;"	d
GL_VARIANT_ARRAY_TYPE_EXT	drivers/GL/glext.h	2680;"	d
GL_VARIANT_DATATYPE_EXT	drivers/GL/glext.h	2678;"	d
GL_VARIANT_EXT	drivers/GL/glext.h	2642;"	d
GL_VARIANT_VALUE_EXT	drivers/GL/glext.h	2677;"	d
GL_VECTOR_EXT	drivers/GL/glext.h	2640;"	d
GL_VENDOR	drivers/GL/gl.h	683;"	d
GL_VERSION	drivers/GL/gl.h	685;"	d
GL_VERSION_1_1	drivers/GL/gl.h	137;"	d
GL_VERSION_1_2	drivers/GL/gl.h	138;"	d
GL_VERSION_1_2	drivers/GL/glext.h	3078;"	d
GL_VERSION_1_3	drivers/GL/gl.h	139;"	d
GL_VERSION_1_3	drivers/GL/glext.h	3160;"	d
GL_VERSION_1_4	drivers/GL/glext.h	3258;"	d
GL_VERSION_1_5	drivers/GL/glext.h	3354;"	d
GL_VERSION_2_0	drivers/GL/glext.h	3398;"	d
GL_VERTEX23_BIT_PGI	drivers/GL/glext.h	1488;"	d
GL_VERTEX4_BIT_PGI	drivers/GL/glext.h	1489;"	d
GL_VERTEX_ARRAY	drivers/GL/gl.h	198;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	drivers/GL/glext.h	2789;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	333;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	drivers/GL/glext.h	785;"	d
GL_VERTEX_ARRAY_COUNT_EXT	drivers/GL/glext.h	1228;"	d
GL_VERTEX_ARRAY_EXT	drivers/GL/glext.h	1219;"	d
GL_VERTEX_ARRAY_LIST_IBM	drivers/GL/glext.h	2058;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	drivers/GL/glext.h	2066;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	drivers/GL/glext.h	1696;"	d
GL_VERTEX_ARRAY_POINTER	drivers/GL/gl.h	218;"	d
GL_VERTEX_ARRAY_POINTER_EXT	drivers/GL/glext.h	1245;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	drivers/GL/glext.h	2793;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	drivers/GL/glext.h	2794;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	drivers/GL/glext.h	1948;"	d
GL_VERTEX_ARRAY_RANGE_NV	drivers/GL/glext.h	1947;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	drivers/GL/glext.h	2796;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	drivers/GL/glext.h	1951;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	drivers/GL/glext.h	1949;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	drivers/GL/glext.h	2312;"	d
GL_VERTEX_ARRAY_SIZE	drivers/GL/gl.h	204;"	d
GL_VERTEX_ARRAY_SIZE_EXT	drivers/GL/glext.h	1225;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	drivers/GL/glext.h	2795;"	d
GL_VERTEX_ARRAY_STRIDE	drivers/GL/gl.h	206;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	drivers/GL/glext.h	1227;"	d
GL_VERTEX_ARRAY_TYPE	drivers/GL/gl.h	205;"	d
GL_VERTEX_ARRAY_TYPE_EXT	drivers/GL/glext.h	1226;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	drivers/GL/glext.h	2351;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	drivers/GL/glext.h	2361;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	drivers/GL/glext.h	2362;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	drivers/GL/glext.h	2363;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	drivers/GL/glext.h	2364;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	drivers/GL/glext.h	2365;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	drivers/GL/glext.h	2366;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	drivers/GL/glext.h	2352;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	drivers/GL/glext.h	2353;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	drivers/GL/glext.h	2354;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	drivers/GL/glext.h	2355;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	drivers/GL/glext.h	2356;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	drivers/GL/glext.h	2357;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	drivers/GL/glext.h	2358;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	drivers/GL/glext.h	2359;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	drivers/GL/glext.h	2360;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	342;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	drivers/GL/glext.h	794;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	drivers/GL/glext.h	377;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	drivers/GL/glext.h	681;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	drivers/GL/glext.h	410;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	drivers/GL/glext.h	698;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	drivers/GL/glext.h	384;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	drivers/GL/glext.h	694;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	drivers/GL/glext.h	378;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	drivers/GL/glext.h	682;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	drivers/GL/glext.h	379;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	drivers/GL/glext.h	683;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	drivers/GL/glext.h	380;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	drivers/GL/glext.h	684;"	d
GL_VERTEX_BLEND_ARB	drivers/GL/glext.h	566;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	drivers/GL/glext.h	1469;"	d
GL_VERTEX_DATA_HINT_PGI	drivers/GL/glext.h	1468;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	drivers/GL/glext.h	2135;"	d
GL_VERTEX_PRECLIP_SGIX	drivers/GL/glext.h	2134;"	d
GL_VERTEX_PROGRAM_ARB	drivers/GL/glext.h	680;"	d
GL_VERTEX_PROGRAM_BINDING_NV	drivers/GL/glext.h	2349;"	d
GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA	drivers/GL/gl.h	2212;"	d
GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA	drivers/GL/gl.h	2211;"	d
GL_VERTEX_PROGRAM_CALLBACK_MESA	drivers/GL/gl.h	2210;"	d
GL_VERTEX_PROGRAM_NV	drivers/GL/glext.h	2316;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	drivers/GL/glext.h	382;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	drivers/GL/glext.h	692;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	drivers/GL/glext.h	2341;"	d
GL_VERTEX_PROGRAM_POSITION_MESA	drivers/GL/gl.h	2209;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	drivers/GL/glext.h	383;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	drivers/GL/glext.h	693;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	drivers/GL/glext.h	2342;"	d
GL_VERTEX_SHADER	drivers/GL/glext.h	414;"	d
GL_VERTEX_SHADER_ARB	drivers/GL/glext.h	858;"	d
GL_VERTEX_SHADER_BINDING_EXT	drivers/GL/glext.h	2578;"	d
GL_VERTEX_SHADER_EXT	drivers/GL/glext.h	2577;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	drivers/GL/glext.h	2656;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	drivers/GL/glext.h	2658;"	d
GL_VERTEX_SHADER_LOCALS_EXT	drivers/GL/glext.h	2660;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	drivers/GL/glext.h	2659;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	drivers/GL/glext.h	2661;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	drivers/GL/glext.h	2657;"	d
GL_VERTEX_SOURCE_ATI	drivers/GL/glext.h	2699;"	d
GL_VERTEX_STATE_PROGRAM_NV	drivers/GL/glext.h	2317;"	d
GL_VERTEX_STREAM0_ATI	drivers/GL/glext.h	2691;"	d
GL_VERTEX_STREAM1_ATI	drivers/GL/glext.h	2692;"	d
GL_VERTEX_STREAM2_ATI	drivers/GL/glext.h	2693;"	d
GL_VERTEX_STREAM3_ATI	drivers/GL/glext.h	2694;"	d
GL_VERTEX_STREAM4_ATI	drivers/GL/glext.h	2695;"	d
GL_VERTEX_STREAM5_ATI	drivers/GL/glext.h	2696;"	d
GL_VERTEX_STREAM6_ATI	drivers/GL/glext.h	2697;"	d
GL_VERTEX_STREAM7_ATI	drivers/GL/glext.h	2698;"	d
GL_VERTEX_WEIGHTING_EXT	drivers/GL/glext.h	1930;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	drivers/GL/glext.h	1934;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	drivers/GL/glext.h	1938;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	drivers/GL/glext.h	1935;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	drivers/GL/glext.h	1937;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	drivers/GL/glext.h	1936;"	d
GL_VIBRANCE_BIAS_NV	drivers/GL/glext.h	2298;"	d
GL_VIBRANCE_SCALE_NV	drivers/GL/glext.h	2292;"	d
GL_VIEWPORT	drivers/GL/gl.h	543;"	d
GL_VIEWPORT_BIT	drivers/GL/gl.h	709;"	d
GL_WEIGHT_ARRAY_ARB	drivers/GL/glext.h	572;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	drivers/GL/glext.h	341;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	drivers/GL/glext.h	793;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	drivers/GL/glext.h	571;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	drivers/GL/glext.h	570;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	drivers/GL/glext.h	569;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	drivers/GL/glext.h	568;"	d
GL_WEIGHT_SUM_UNITY_ARB	drivers/GL/glext.h	565;"	d
GL_WIDE_LINE_HINT_PGI	drivers/GL/glext.h	1511;"	d
GL_WIN_phong_shading	drivers/GL/glext.h	4831;"	d
GL_WIN_specular_fog	drivers/GL/glext.h	4835;"	d
GL_WRAP_BORDER_SUN	drivers/GL/glext.h	1908;"	d
GL_WRITE_ONLY	drivers/GL/glext.h	344;"	d
GL_WRITE_ONLY_ARB	drivers/GL/glext.h	796;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	drivers/GL/glext.h	2894;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	drivers/GL/glext.h	2892;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	drivers/GL/glext.h	2896;"	d
GL_W_EXT	drivers/GL/glext.h	2665;"	d
GL_XOR	drivers/GL/gl.h	436;"	d
GL_X_EXT	drivers/GL/glext.h	2662;"	d
GL_YCBCR_422_APPLE	drivers/GL/glext.h	2802;"	d
GL_YCBCR_MESA	drivers/GL/glext.h	2953;"	d
GL_YCRCBA_SGIX	drivers/GL/glext.h	2089;"	d
GL_YCRCB_422_SGIX	drivers/GL/glext.h	1589;"	d
GL_YCRCB_444_SGIX	drivers/GL/glext.h	1590;"	d
GL_YCRCB_SGIX	drivers/GL/glext.h	2088;"	d
GL_Y_EXT	drivers/GL/glext.h	2663;"	d
GL_ZERO	drivers/GL/gl.h	370;"	d
GL_ZERO_EXT	drivers/GL/glext.h	2670;"	d
GL_ZOOM_X	drivers/GL/gl.h	634;"	d
GL_ZOOM_Y	drivers/GL/gl.h	635;"	d
GL_Z_EXT	drivers/GL/glext.h	2664;"	d
GLbitfield	drivers/GL/gl.h	/^typedef unsigned int	GLbitfield;$/;"	t
GLboolean	drivers/GL/gl.h	/^typedef unsigned char	GLboolean;$/;"	t
GLbyte	drivers/GL/gl.h	/^typedef signed char	GLbyte;		\/* 1-byte signed *\/$/;"	t
GLchar	drivers/GL/glext.h	/^typedef char GLchar;			\/* native character *\/$/;"	t
GLcharARB	drivers/GL/glext.h	/^typedef char GLcharARB;		\/* native character *\/$/;"	t
GLclampd	drivers/GL/gl.h	/^typedef double		GLclampd;	\/* double precision float in [0,1] *\/$/;"	t
GLclampf	drivers/GL/gl.h	/^typedef float		GLclampf;	\/* single precision float in [0,1] *\/$/;"	t
GLdouble	drivers/GL/gl.h	/^typedef double		GLdouble;	\/* double precision float *\/$/;"	t
GLenum	drivers/GL/gl.h	/^typedef unsigned int	GLenum;$/;"	t
GLfloat	drivers/GL/gl.h	/^typedef float		GLfloat;	\/* single precision float *\/$/;"	t
GLhalfARB	drivers/GL/glext.h	/^typedef unsigned short GLhalfARB;$/;"	t
GLhalfNV	drivers/GL/glext.h	/^typedef unsigned short GLhalfNV;$/;"	t
GLhandleARB	drivers/GL/glext.h	/^typedef unsigned int GLhandleARB;	\/* shader object handle *\/$/;"	t
GLint	drivers/GL/gl.h	/^typedef int		GLint;		\/* 4-byte signed *\/$/;"	t
GLint64EXT	drivers/GL/gl.h	/^   typedef __int64 GLint64EXT;$/;"	t
GLint64EXT	drivers/GL/gl.h	/^   typedef long int GLint64EXT;$/;"	t
GLint64EXT	drivers/GL/gl.h	/^   typedef long long int GLint64EXT;$/;"	t
GLintptr	drivers/GL/glext.h	/^typedef ptrdiff_t GLintptr;$/;"	t
GLintptrARB	drivers/GL/glext.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t
GLprogramcallbackMESA	drivers/GL/gl.h	/^typedef void (*GLprogramcallbackMESA)(GLenum target, GLvoid *data);$/;"	t
GLshort	drivers/GL/gl.h	/^typedef short		GLshort;	\/* 2-byte signed *\/$/;"	t
GLsizei	drivers/GL/gl.h	/^typedef int		GLsizei;	\/* 4-byte signed *\/$/;"	t
GLsizeiptr	drivers/GL/glext.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptrARB	drivers/GL/glext.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t
GLubyte	drivers/GL/gl.h	/^typedef unsigned char	GLubyte;	\/* 1-byte unsigned *\/$/;"	t
GLuint	drivers/GL/gl.h	/^typedef unsigned int	GLuint;		\/* 4-byte unsigned *\/$/;"	t
GLuint64EXT	drivers/GL/gl.h	/^   typedef unsigned __int64 GLuint64EXT;$/;"	t
GLuint64EXT	drivers/GL/gl.h	/^   typedef unsigned long int GLuint64EXT;$/;"	t
GLuint64EXT	drivers/GL/gl.h	/^   typedef unsigned long long int GLuint64EXT;$/;"	t
GLushort	drivers/GL/gl.h	/^typedef unsigned short	GLushort;	\/* 2-byte unsigned *\/$/;"	t
GLvoid	drivers/GL/gl.h	/^typedef void		GLvoid;$/;"	t
GPdatum	kernel/TeProjection.h	/^	TeDatum GPdatum;             \/\/ spheroid$/;"	m	class:TeProjection
GPdestination	kernel/TeProjection.h	/^	TeProjection* GPdestination; \/\/ destination projection$/;"	m	class:TeProjection
GPepsgCode	kernel/TeProjection.h	/^    int		GPepsgCode;		\/\/the epsg code associated to the given projection$/;"	m	class:TeProjection
GPhemisphere	kernel/TeProjection.h	/^	TeHemisphere  GPhemisphere;  \/\/ Hemisphere$/;"	m	class:TeProjection
GPid	kernel/TeProjection.h	/^	int	      GPid;          \/\/ id$/;"	m	class:TeProjection
GPlat0	kernel/TeProjection.h	/^	double  GPlat0;	             \/\/ Latitude of origin (rad)  $/;"	m	class:TeProjection
GPlon0	kernel/TeProjection.h	/^	double	GPlon0;	             \/\/ Longitude of origin (rad)$/;"	m	class:TeProjection
GPname	kernel/TeProjection.h	/^	string	GPname;	             \/\/ projection name$/;"	m	class:TeProjection
GPoffx	kernel/TeProjection.h	/^	double	GPoffx;	             \/\/ X (projection coordinate) offset (m)$/;"	m	class:TeProjection
GPoffy	kernel/TeProjection.h	/^	double	GPoffy;	             \/\/ Y (projection coordinate) offset (m)$/;"	m	class:TeProjection
GPpcor	kernel/TeGraph.h	/^	TeColor GPpcor;			   \/*piechart color *\/$/;"	m	class:TeGraphPlot
GPpieleg	kernel/TeGraph.h	/^	char *GPpieleg;$/;"	m	class:TeGraphPlot
GPpointheight	kernel/TeGraph.h	/^	int GPpointwidth, GPpointheight;$/;"	m	class:TeGraphPlot
GPpointwidth	kernel/TeGraph.h	/^	int GPpointwidth, GPpointheight;$/;"	m	class:TeGraphPlot
GPscale	kernel/TeProjection.h	/^	double  GPscale;             \/\/ scale (used for UTM)$/;"	m	class:TeProjection
GPstlat1	kernel/TeProjection.h	/^	double	GPstlat1;            \/\/ First standard parallel (rad)$/;"	m	class:TeProjection
GPstlat2	kernel/TeProjection.h	/^	double  GPstlat2;            \/\/ Second standard parallel (rad)$/;"	m	class:TeProjection
GPunits	kernel/TeProjection.h	/^	string  GPunits;             \/\/ units$/;"	m	class:TeProjection
GPunitsEnum	kernel/TeProjection.h	/^	TeUnits		GPunitsEnum; \/\/an enum to store the units and used for performance porpouses$/;"	m	class:TeProjection
GRAPH_ALGORITHMS_H	kernel/Gra_algo.h	26;"	d
GRAPH_H	kernel/graph.h	29;"	d
GRAPH_UTILITIES_H	kernel/gra_util.h	2;"	d
Gamax	stat/TeSkaterGrafo.h	/^    double Cx,Gamax;   \/\/Usados na conversao de escala$/;"	m	class:TSkaterGrafo
Gamay	stat/TeSkaterGrafo.h	/^    double Cy,Gamay;   \/\/Usados na conversao de escala$/;"	m	class:TSkaterGrafo
GenerateClassificationParameters	image_processing/TePDIKMeansClas.cpp	/^bool TePDIKMeansClas::GenerateClassificationParameters()$/;"	f	class:TePDIKMeansClas
GenerateClusters	image_processing/TePDIIsosegClas.cpp	/^bool TePDIIsosegClas::GenerateClusters()$/;"	f	class:TePDIIsosegClas
GenerateCorrelationFeaturesParams	image_processing/TePDIMMIOMatching.hpp	/^      struct GenerateCorrelationFeaturesParams$/;"	s	class:TePDIMMIOMatching
GenerateLevel	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::GenerateLevel( unsigned int level,$/;"	f	class:TePDIMallatWavelets
GeoId1_	stat/TeTreeMinimum.h	/^	string GeoId1_;$/;"	m	class:TeMSTGraphLink
GeoId2_	stat/TeTreeMinimum.h	/^	string GeoId2_;$/;"	m	class:TeMSTGraphLink
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, IBPP::Array& retarray)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, IBPP::DBKey& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, IBPP::Date& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, IBPP::Time& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, IBPP::Timestamp& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, bool& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, char* retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, double& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, float& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, int16_t& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, int32_t& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, int64_t& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, std::string& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string& name, void* retvalue, int& count)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(const std::string&name, IBPP::Blob& retblob)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, IBPP::Array& retarray)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, IBPP::Blob& retblob)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, IBPP::DBKey& retkey)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, IBPP::Date& date)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, IBPP::Time& time)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, IBPP::Timestamp& timestamp)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, bool& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, char* retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, double& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, float& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, int16_t& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, int32_t& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, int64_t& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, std::string& retvalue)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Get(int column, void* bindata, int& userlen)$/;"	f	class:RowImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, IBPP::Array& retarray)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, IBPP::DBKey& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, IBPP::Date& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, IBPP::Time& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, IBPP::Timestamp& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, bool& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, bool* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, char* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, double& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, double* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, float& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, float* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, int16_t& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, int16_t* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, int32_t& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, int32_t* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, int64_t& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, int64_t* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, std::string& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string& name, void* retvalue, int& count)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(const std::string&name, IBPP::Blob& retblob)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, IBPP::Array& array)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, IBPP::Blob& blob)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, IBPP::DBKey& key)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, IBPP::Date& date)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, IBPP::Time& time)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, IBPP::Timestamp& timestamp)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, bool& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, bool* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, char* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, double& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, double* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, float& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, float* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, int16_t& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, int16_t* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, int32_t& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, int32_t* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, int64_t& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, int64_t* retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, std::string& retvalue)$/;"	f	class:StatementImpl
Get	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::Get(int column, void* bindata, int& userlen)$/;"	f	class:StatementImpl
Get	kernel/TeTime.h	/^  inline const time_t& Get() const { return last_; };  $/;"	f	class:TeTime
GetAFiltersShift	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::GetAFiltersShift( $/;"	f	class:TePDIMallatWavelets
GetAnalysisFilters	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::GetAnalysisFilters( std::vector< double >& low_filter,$/;"	f	class:TePDIMallatWavelets
GetArea	image_processing/TePDICluster.hpp	/^    long GetArea()$/;"	f	class:TePDICluster
GetArea	image_processing/TePDIRegion.hpp	/^    long GetArea()$/;"	f	class:TePDIRegion
GetBool	drivers/Firebird/ibpp/core/_rb.cpp	/^bool RB::GetBool(char token)$/;"	f	class:RB
GetClass	image_processing/TePDIRegion.hpp	/^    int GetClass()$/;"	f	class:TePDIRegion
GetColumns	image_processing/TePDIMatrix.hpp	/^  unsigned int TePDIMatrix< ElementType >::GetColumns() const$/;"	f	class:TePDIMatrix
GetCorrelation	image_processing/TePDIMatrixFunctions.cpp	/^  double GetCorrelation( const TePDIMatrix< double >& matrix1,$/;"	f	namespace:TePDIMatrixFunctions
GetCountValue	drivers/Firebird/ibpp/core/_rb.cpp	/^int RB::GetCountValue(char token)$/;"	f	class:RB
GetCovar	image_processing/TePDIRegion.hpp	/^    TeMatrix GetCovar()$/;"	f	class:TePDIRegion
GetCovariance	image_processing/TePDICluster.hpp	/^    TeMatrix GetCovariance()$/;"	f	class:TePDICluster
GetCurrentProcessId	drivers/SQLite/sqlite3/sqlite3.c	/^int GetCurrentProcessId(void) {$/;"	f
GetDate	drivers/Firebird/ibpp/core/date.cpp	/^void IBPP::Date::GetDate(int& year, int& month, int& day) const$/;"	f	class:IBPP::Date
GetDate	drivers/Firebird/ibpp/core/ibpp.h	/^		int GetDate() const	{ return mDate; }$/;"	f	class:IBPP::Date
GetEleFunctPtrT	kernel/TeDecoderMemory.h	/^	typedef void (TeDecoderMemory::*GetEleFunctPtrT)( const long& pos, double& val );$/;"	t	class:TeDecoderMemory
GetEleFunctPtrT	kernel/TeDecoderSmartMem.h	/^  typedef void (TeDecoderSmartMem::*GetEleFunctPtrT)( const int& col,$/;"	t	class:TeDecoderSmartMem
GetEleFunctPtrT	kernel/TeDecoderTIFF.h	/^	typedef void (TeDecoderTIFF::*GetEleFunctPtrT)( const long& plane, const long& pos, double& val );$/;"	t	class:TeDecoderTIFF
GetFirst	kernel/TeRedBlackTree.h	/^			virtual bool GetFirst(TeRedBlackNodeData& d)$/;"	f	class:TeREDBLACK::TeRBTree
GetGeoFilesInfo	kernel/TeGDriverFactory.cpp	/^const std::vector<TeGeoFileInfo>& TeGDriverFactory::GetGeoFilesInfo()$/;"	f	class:TeGDriverFactory
GetHandle	drivers/Firebird/ibpp/core/_ibpp.h	/^	isc_db_handle GetHandle() { return mHandle; }$/;"	f	class:ibpp_internals::DatabaseImpl
GetHandle	drivers/Firebird/ibpp/core/_ibpp.h	/^	isc_stmt_handle GetHandle() { return mHandle; }$/;"	f	class:ibpp_internals::StatementImpl
GetHandle	drivers/Firebird/ibpp/core/_ibpp.h	/^	isc_svc_handle GetHandle() { return mHandle; }$/;"	f	class:ibpp_internals::ServiceImpl
GetHandle	drivers/Firebird/ibpp/core/_ibpp.h	/^	isc_tr_handle GetHandle() { return mHandle; }$/;"	f	class:ibpp_internals::TransactionImpl
GetHandlePtr	drivers/Firebird/ibpp/core/_ibpp.h	/^	isc_db_handle* GetHandlePtr() { return &mHandle; }$/;"	f	class:ibpp_internals::DatabaseImpl
GetHandlePtr	drivers/Firebird/ibpp/core/_ibpp.h	/^	isc_svc_handle* GetHandlePtr() { return &mHandle; }$/;"	f	class:ibpp_internals::ServiceImpl
GetHandlePtr	drivers/Firebird/ibpp/core/_ibpp.h	/^	isc_tr_handle* GetHandlePtr() { return &mHandle; }$/;"	f	class:ibpp_internals::TransactionImpl
GetHistEqualizerLut	image_processing/TePDIContrast.cpp	/^TePDITypes::TePDILutType TePDIContrast::GetHistEqualizerLut($/;"	f	class:TePDIContrast
GetHistRef	image_processing/TePDILevelRemap.cpp	/^TePDIHistogram::pointer TePDILevelRemap::GetHistRef($/;"	f	class:TePDILevelRemap
GetId	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::GetId(ISC_QUAD* quad)$/;"	f	class:ArrayImpl
GetId	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::GetId(ISC_QUAD* quad)$/;"	f	class:BlobImpl
GetId	image_processing/TePDICluster.hpp	/^    int GetId(){ return id; }$/;"	f	class:TePDICluster
GetId	image_processing/TePDIRegion.hpp	/^    long GetId()$/;"	f	class:TePDIRegion
GetInitialized	image_processing/TePDICluster.hpp	/^    bool GetInitialized()$/;"	f	class:TePDICluster
GetKey	drivers/Firebird/ibpp/core/dbkey.cpp	/^void IBPP::DBKey::GetKey(void* key, int size) const$/;"	f	class:IBPP::DBKey
GetKey	stat/heap.cpp	/^double  THeap::GetKey(int Indice){$/;"	f	class:THeap
GetLinearLut	image_processing/TePDIContrast.cpp	/^TePDITypes::TePDILutType TePDIContrast::GetLinearLut($/;"	f	class:TePDIContrast
GetLines	image_processing/TePDIMatrix.hpp	/^  unsigned int TePDIMatrix< ElementType >::GetLines() const$/;"	f	class:TePDIMatrix
GetLnDet	image_processing/TePDICluster.hpp	/^    double GetLnDet()$/;"	f	class:TePDICluster
GetLogLut	image_processing/TePDIContrast.cpp	/^TePDITypes::TePDILutType TePDIContrast::GetLogLut($/;"	f	class:TePDIContrast
GetMaxCount	image_processing/TePDIHistogram.cpp	/^unsigned int TePDIHistogram::GetMaxCount() const$/;"	f	class:TePDIHistogram
GetMaxLevel	image_processing/TePDIHistogram.cpp	/^double TePDIHistogram::GetMaxLevel() const$/;"	f	class:TePDIHistogram
GetMean	image_processing/TePDIRegion.cpp	/^vector<double> TePDIRegion::GetMean()$/;"	f	class:TePDIRegion
GetMinCount	image_processing/TePDIHistogram.cpp	/^unsigned int TePDIHistogram::GetMinCount() const$/;"	f	class:TePDIHistogram
GetMinLevel	image_processing/TePDIHistogram.cpp	/^double TePDIHistogram::GetMinLevel() const$/;"	f	class:TePDIHistogram
GetMinMaxLut	image_processing/TePDIContrast.cpp	/^TePDITypes::TePDILutType TePDIContrast::GetMinMaxLut($/;"	f	class:TePDIContrast
GetNban	image_processing/TePDICluster.hpp	/^    int GetNban()$/;"	f	class:TePDICluster
GetNban	image_processing/TePDIRegGrowSeg.hpp	/^   int GetNban() { return Nban_; }$/;"	f	class:TePDIRGSCell
GetNban	image_processing/TePDIRegion.hpp	/^    int GetNban()$/;"	f	class:TePDIRegion
GetNegativeLut	image_processing/TePDIContrast.cpp	/^TePDITypes::TePDILutType TePDIContrast::GetNegativeLut($/;"	f	class:TePDIContrast
GetNum_Var	stat/TeSkaterGrafo.cpp	/^int  TSkaterGrafo::GetNum_Var(){$/;"	f	class:TSkaterGrafo
GetParameter	image_processing/TePDIParameters.hpp	/^      bool GetParameter( const std::string& pname,$/;"	f	class:TePDIParameters
GetParameters	image_processing/TePDIAlgorithm.cpp	/^const TePDIParameters& TePDIAlgorithm::GetParameters() const$/;"	f	class:TePDIAlgorithm
GetSFiltersShift	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::GetSFiltersShift( $/;"	f	class:TePDIMallatWavelets
GetSimpleSlicerLut	image_processing/TePDIContrast.cpp	/^void TePDIContrast::GetSimpleSlicerLut($/;"	f	class:TePDIContrast
GetSize	stat/TeSkaterGrafo.cpp	/^int TSkaterGrafo::GetSize(){$/;"	f	class:TSkaterGrafo
GetSize	stat/filaDouble.cpp	/^int  TFilaDouble::GetSize(){$/;"	f	class:TFilaDouble
GetSize	stat/filaInt.cpp	/^int  TFilaInt::GetSize(){$/;"	f	class:TFilaInt
GetSize	stat/lista.cpp	/^int TListaVizinho::GetSize(){$/;"	f	class:TListaVizinho
GetSquareLut	image_processing/TePDIContrast.cpp	/^TePDITypes::TePDILutType TePDIContrast::GetSquareLut($/;"	f	class:TePDIContrast
GetSquareRootLut	image_processing/TePDIContrast.cpp	/^TePDITypes::TePDILutType TePDIContrast::GetSquareRootLut($/;"	f	class:TePDIContrast
GetStatLut	image_processing/TePDIContrast.cpp	/^void TePDIContrast::GetStatLut( TePDIHistogram::pointer hist,$/;"	f	class:TePDIContrast
GetString	drivers/Firebird/ibpp/core/_rb.cpp	/^int RB::GetString(char token, std::string& data)$/;"	f	class:RB
GetSubBand	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::GetSubBand( unsigned int level, $/;"	f	class:TePDIMallatWavelets
GetSynthesisFilters	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::GetSynthesisFilters( std::vector< double >& low_filter,$/;"	f	class:TePDIMallatWavelets
GetTempPathA	drivers/SQLite/sqlite3/sqlite3.c	32326;"	d	file:
GetTime	drivers/Firebird/ibpp/core/ibpp.h	/^		int GetTime() const	{ return mTime; }$/;"	f	class:IBPP::Time
GetTime	drivers/Firebird/ibpp/core/time.cpp	/^void IBPP::Time::GetTime(int& hour, int& minute, int& second) const$/;"	f	class:IBPP::Time
GetTime	drivers/Firebird/ibpp/core/time.cpp	/^void IBPP::Time::GetTime(int& hour, int& minute, int& second, int& tenthousandths) const$/;"	f	class:IBPP::Time
GetUser	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::GetUser(IBPP::User& user)$/;"	f	class:ServiceImpl
GetUsers	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::GetUsers(std::vector<IBPP::User>& users)$/;"	f	class:ServiceImpl
GetValue	drivers/Firebird/ibpp/core/_rb.cpp	/^int RB::GetValue(char token)$/;"	f	class:RB
GetValue	drivers/Firebird/ibpp/core/_rb.cpp	/^int RB::GetValue(char token, char subtoken)$/;"	f	class:RB
GetValue	drivers/Firebird/ibpp/core/row.cpp	/^void* RowImpl::GetValue(int varnum, IITYPE ivType, void* retvalue)$/;"	f	class:RowImpl
GetVersion	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::GetVersion(std::string& version)$/;"	f	class:ServiceImpl
Get_X	stat/TeSkaterGrafo.cpp	/^double  TSkaterGrafo::Get_X(int Indice){$/;"	f	class:TSkaterGrafo
Get_Y	stat/TeSkaterGrafo.cpp	/^double  TSkaterGrafo::Get_Y(int Indice){$/;"	f	class:TSkaterGrafo
GlogUpperToLower	drivers/SQLite/sqlite3/sqlite3.c	84881;"	d	file:
GlogUpperToLower	drivers/SQLite/sqlite3/sqlite3.c	84883;"	d	file:
Grafo	stat/TeSkaterFunctions.h	/^  TSkaterGrafo *Grafo;$/;"	m	class:TParticao
Grafo	stat/TeSkaterGrafo.h	/^    typedef struct Grafo$/;"	s	class:TSkaterGrafo
GrafoH	stat/TeSkaterGrafo.h	4;"	d
Grafo_ptr	stat/TeSkaterGrafo.h	/^    } Grafo_t, *Grafo_ptr;$/;"	t	class:TSkaterGrafo	typeref:struct:TSkaterGrafo::No_Grafo
Grafo_t	stat/TeSkaterGrafo.h	/^    } Grafo_t, *Grafo_ptr;$/;"	t	class:TSkaterGrafo	typeref:struct:TSkaterGrafo::No_Grafo
GranuleInfo	drivers/Oracle/OCI/include/odci.h	/^   OCIInd GranuleInfo;$/;"	m	struct:ODCIExtTableQCInfo_ind
GranuleInfo	drivers/Oracle/OCI/include/odci.h	/^   ODCIGranuleList* GranuleInfo;$/;"	m	struct:ODCIExtTableQCInfo
GranuleSize	drivers/Oracle/OCI/include/odci.h	/^   OCIInd GranuleSize;$/;"	m	struct:ODCIExtTableInfo_ind
GranuleSize	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        GranuleSize;$/;"	m	struct:ODCIExtTableInfo
Graph	kernel/graph.h	/^		Graph(bool g, std::ostream& os = cerr)$/;"	f	class:br_stl::Graph
Graph	kernel/graph.h	/^	class Graph$/;"	c	namespace:br_stl
GraphType	kernel/graph.h	/^		typedef std::vector<vertex> GraphType;$/;"	t	class:br_stl::Graph
Graph_color	kernel/TeGraph.cpp	/^} Graph_color;$/;"	v	typeref:struct:Grc
Grc	kernel/TeGraph.cpp	/^struct Grc{$/;"	s	file:
GroupDataThreadEntryParams	image_processing/TePDIParallelSegmenter.hpp	/^          GroupDataThreadEntryParams()$/;"	f	class:TePDIParallelSegmenter::GroupDataThreadEntryParams
GroupDataThreadEntryParams	image_processing/TePDIParallelSegmenter.hpp	/^      class GroupDataThreadEntryParams$/;"	c	class:TePDIParallelSegmenter
Grow	drivers/Firebird/ibpp/core/_dpb.cpp	/^void DPB::Grow(int needed)$/;"	f	class:DPB
Grow	drivers/Firebird/ibpp/core/_spb.cpp	/^void SPB::Grow(int needed)$/;"	f	class:SPB
Grow	drivers/Firebird/ibpp/core/_tpb.cpp	/^void TPB::Grow(int needed)$/;"	f	class:TPB
H	image_processing/TePDIEMClas.hpp	/^      long W, H;$/;"	m	class:TePDIEMClas
H	image_processing/TePDIIsosegClas.hpp	/^    long W, H;$/;"	m	class:TePDIIsosegClas
HANDLE_TO_WINFILE	drivers/SQLite/sqlite3/sqlite3.c	32332;"	d	file:
HASHSIZE	drivers/SQLite/sqlite3/sqlite3.c	127968;"	d	file:
HASHTABLE_HASH_1	drivers/SQLite/sqlite3/sqlite3.c	44676;"	d	file:
HASHTABLE_NPAGE	drivers/SQLite/sqlite3/sqlite3.c	44675;"	d	file:
HASHTABLE_NPAGE_ONE	drivers/SQLite/sqlite3/sqlite3.c	44684;"	d	file:
HASHTABLE_NSLOT	drivers/SQLite/sqlite3/sqlite3.c	44677;"	d	file:
HASH_SIZE	stat/hash.h	11;"	d
HAS_HDRSTOP	drivers/Firebird/ibpp/core/_ibpp.h	37;"	d
HAS_TIMER	drivers/SQLite/sqlite3/shell.c	130;"	d	file:
HAS_TIMER	drivers/SQLite/sqlite3/shell.c	202;"	d	file:
HAS_TIMER	drivers/SQLite/sqlite3/shell.c	207;"	d	file:
HAVE_FULLFSYNC	drivers/SQLite/sqlite3/sqlite3.c	27754;"	d	file:
HAVE_FULLFSYNC	drivers/SQLite/sqlite3/sqlite3.c	27756;"	d	file:
HAVE_LOCALTIME_S	drivers/SQLite/sqlite3/sqlite3.c	13698;"	d	file:
HDA_SIZE	drivers/Oracle/OCI/include/ocidfn.h	116;"	d
HDA_SIZE	drivers/Oracle/OCI/include/ocidfn.h	118;"	d
HDC	drivers/GL/glut.h	/^typedef void *HDC;$/;"	t
HETEROGENEOUS	drivers/Oracle/OCI/include/occiControl.h	/^      HETEROGENEOUS = OCI_DEFAULT,$/;"	e	enum:oracle::occi::StatelessConnectionPool::PoolType
HGLRC	drivers/GL/glut.h	/^typedef void *HGLRC;$/;"	t
HOMOGENEOUS	drivers/Oracle/OCI/include/occiControl.h	/^      HOMOGENEOUS = OCI_SPC_HOMOGENEOUS$/;"	e	enum:oracle::occi::StatelessConnectionPool::PoolType
HORIZ_FONT	kernel/TeGraph.cpp	50;"	d	file:
HSVtoRGB	utils/TeColorUtils.cpp	/^void HSVtoRGB( double& r, double& g, double& b, const double& h, const double& s, const double& v )$/;"	f
Hand	drivers/qt/TeQtCanvas.h	/^    enum CursorMode { Pointer, Area, Pan, Hand, SizeVer, SizeBDiag,$/;"	e	enum:TeQtCanvas::CursorMode
Hash	drivers/SQLite/sqlite3/sqlite3.c	/^struct Hash {$/;"	s	file:
Hash	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Hash Hash;$/;"	t	typeref:struct:Hash	file:
HashElem	drivers/SQLite/sqlite3/sqlite3.c	/^struct HashElem {$/;"	s	file:
HashElem	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct HashElem HashElem;$/;"	t	typeref:struct:HashElem	file:
HashH	stat/hash.h	10;"	d
Hash_	stat/TeSkaterGrafo.h	/^	std::map<std::string,unsigned int> Hash_;$/;"	m	class:TSkaterGrafo
Hash_Function	stat/hash.cpp	/^unsigned int  THash::Hash_Function(unsigned long Key){$/;"	f	class:THash
Hash_Type	stat/hash.h	/^  typedef struct Hash_Type{$/;"	s	class:THash
Hash_ptr	stat/hash.h	/^  }Hash_t,*Hash_ptr;$/;"	t	class:THash	typeref:struct:THash::Hash_Type
Hash_t	stat/hash.h	/^  }Hash_t,*Hash_ptr;$/;"	t	class:THash	typeref:struct:THash::Hash_Type
Head	stat/filaDouble.h	/^      Item_ptr Head;$/;"	m	struct:TFilaDouble::Fila
Head	stat/filaInt.h	/^      Item_ptr Head;$/;"	m	struct:TFilaInt::Fila
Head	stat/filaR.h	/^      Item_ptr Head;$/;"	m	struct:TFilaR::Fila
Head	stat/lista.h	/^      Vizinho_ptr Head;$/;"	m	struct:TListaVizinho::ListaVizinho
Heap	stat/TeSkaterArvore.h	/^      THeap *Heap;$/;"	m	class:TArvore
Heap	stat/heap.h	/^    typedef struct Heap {$/;"	s	class:THeap
Heap_ptr	stat/heap.h	/^        }Heap_t, *Heap_ptr;$/;"	t	class:THeap	typeref:struct:THeap::Heap
Heap_t	stat/heap.h	/^        }Heap_t, *Heap_ptr;$/;"	t	class:THeap	typeref:struct:THeap::Heap
HistoCacheT	image_processing/TePDIStatistic.hpp	/^        HistoCacheT;$/;"	t	class:TePDIStatistic
Hls2Rgb	image_processing/TePDIColorTransform.hpp	/^		Hls2Rgb = 4$/;"	e	enum:TePDIColorTransform::ColorTransfTypes
Hours	drivers/Firebird/ibpp/core/time.cpp	/^int IBPP::Time::Hours() const$/;"	f	class:IBPP::Time
I	kernel/TeSparseMatrix.h	/^    typename ContainerType::iterator I;$/;"	m	class:MatrixElement
IArray	drivers/Firebird/ibpp/core/ibpp.h	/^	class IArray$/;"	c	namespace:IBPP
IBPP	drivers/Firebird/ibpp/core/_ibpp.cpp	/^namespace IBPP$/;"	n	file:
IBPP	drivers/Firebird/ibpp/core/ibpp.h	/^namespace IBPP$/;"	n
IBPP_UNIX	drivers/Firebird/ibpp/core/ibpp.h	60;"	d
IBS	drivers/Firebird/ibpp/core/_ibpp.h	/^class IBS$/;"	c	namespace:ibpp_internals
IBS	drivers/Firebird/ibpp/core/_ibs.cpp	/^IBS::IBS()$/;"	f	class:IBS
IBS	drivers/Firebird/ibpp/core/_ibs.cpp	/^IBS::IBS(IBS& copied)$/;"	f	class:IBS
IB_ENTRYPOINT	drivers/Firebird/ibpp/core/_ibpp.cpp	222;"	d	file:
IB_ENTRYPOINT	drivers/Firebird/ibpp/core/_ibpp.cpp	228;"	d	file:
IBlob	drivers/Firebird/ibpp/core/ibpp.h	/^	class IBlob$/;"	c	namespace:IBPP
IDX_ATTR	stat/TeKernelFunctions.h	37;"	d
IDX_KERNEL	stat/TeKernelFunctions.h	38;"	d
IDX_KERNEL1	stat/TeKernelFunctions.h	40;"	d
IDX_KERNEL2	stat/TeKernelFunctions.h	41;"	d
IDX_NUMERATOR	stat/TeKernelFunctions.h	39;"	d
IDatabase	drivers/Firebird/ibpp/core/ibpp.h	/^	class IDatabase$/;"	c	namespace:IBPP
IEvents	drivers/Firebird/ibpp/core/ibpp.h	/^	class IEvents$/;"	c	namespace:IBPP
IITYPE	drivers/Firebird/ibpp/core/_ibpp.h	/^			ivBool, ivDBKey, ivByte} IITYPE;$/;"	t	namespace:ibpp_internals	typeref:enum:ibpp_internals::__anon66
IKONOS	image_processing/TePDIWiSpeRFusion.hpp	/^      enum TeSatellitesTypes {CBERS, CBERS2B, IKONOS, QUICKBIRD, SPOT4, SPOT5};$/;"	e	enum:TePDIWiSpeRFusion::TeSatellitesTypes
INACTIVE	drivers/Oracle/OCI/include/occiControl.h	/^    enum Status {READY_FOR_READ, READY_FOR_WRITE, INACTIVE};$/;"	e	enum:oracle::occi::Stream::Status
INCLUDE_TYPES_PUB_H	drivers/Firebird/ibpp/core/ibase.h	61;"	d
INCL_DOSDATETIME	drivers/SQLite/sqlite3/sqlite3.c	9069;"	d	file:
INCL_DOSERRORS	drivers/SQLite/sqlite3/sqlite3.c	9071;"	d	file:
INCL_DOSFILEMGR	drivers/SQLite/sqlite3/sqlite3.c	9070;"	d	file:
INCL_DOSMISC	drivers/SQLite/sqlite3/sqlite3.c	9072;"	d	file:
INCL_DOSMODULEMGR	drivers/SQLite/sqlite3/sqlite3.c	9074;"	d	file:
INCL_DOSPROCESS	drivers/SQLite/sqlite3/sqlite3.c	9073;"	d	file:
INCL_DOSSEMAPHORES	drivers/SQLite/sqlite3/sqlite3.c	9075;"	d	file:
INFOLAYER	drivers/qt/TeQtCheckListItem.h	/^	enum ItemType {DATABASE, INFOLAYER, VIEW, THEME, LEGENDTITLE, LEGEND, CHARTTITLE, CHART};$/;"	e	enum:TeQtCheckListItem::ItemType
INITIAL	kernel/lexTemporal.cpp	622;"	d	file:
INSERT_GLCM_ELEMENT	image_processing/TePDIHaralick.cpp	9;"	d	file:
INT16_TYPE	drivers/SQLite/sqlite3/sqlite3.c	7708;"	d	file:
INT16_TYPE	drivers/SQLite/sqlite3/sqlite3.c	7710;"	d	file:
INT64CONST	drivers/PostgreSQL/TePGInterface.cpp	212;"	d	file:
INT8_TYPE	drivers/SQLite/sqlite3/sqlite3.c	7722;"	d	file:
INT8_TYPE	drivers/SQLite/sqlite3/sqlite3.c	7724;"	d	file:
INTERFACE	drivers/SQLite/sqlite3/sqlite3.c	106073;"	d	file:
INTERVAL	kernel/TeAttribute.h	/^{ ORDINAL, NOMINAL, RATIO, INTERVAL, CYCLIC, PROBABILITY, FUZZY };$/;"	e	enum:TeMeasurementScale
INT_TYPE	drivers/Oracle/OCI/include/ocidem.h	49;"	d
INVALID_FILE_ATTRIBUTES	drivers/SQLite/sqlite3/sqlite3.c	31655;"	d	file:
INVALID_KERNEL	stat/TeKernelFunctions.h	35;"	d
INVALID_SET_FILE_POINTER	drivers/SQLite/sqlite3/sqlite3.c	32623;"	d	file:
INV_READ	drivers/PostgreSQL/TePGInterface.cpp	43;"	d	file:
INV_WRITE	drivers/PostgreSQL/TePGInterface.cpp	42;"	d	file:
IN_DECLARE_VTAB	drivers/SQLite/sqlite3/sqlite3.c	10971;"	d	file:
IN_DECLARE_VTAB	drivers/SQLite/sqlite3/sqlite3.c	10973;"	d	file:
IN_INDEX_EPH	drivers/SQLite/sqlite3/sqlite3.c	11852;"	d	file:
IN_INDEX_INDEX	drivers/SQLite/sqlite3/sqlite3.c	11853;"	d	file:
IN_INDEX_ROWID	drivers/SQLite/sqlite3/sqlite3.c	11851;"	d	file:
IOMETHODS	drivers/SQLite/sqlite3/sqlite3.c	28856;"	d	file:
IOTRACE	drivers/SQLite/sqlite3/sqlite3.c	11901;"	d	file:
IOTRACE	drivers/SQLite/sqlite3/sqlite3.c	11905;"	d	file:
IOcost	drivers/Oracle/OCI/include/odci.h	/^   OCIInd IOcost;$/;"	m	struct:ODCICost_ind
IOcost	drivers/Oracle/OCI/include/odci.h	/^   OCINumber  IOcost;$/;"	m	struct:ODCICost
IRow	drivers/Firebird/ibpp/core/ibpp.h	/^	class IRow$/;"	c	namespace:IBPP
ISAUTOVACUUM	drivers/SQLite/sqlite3/sqlite3.c	47776;"	d	file:
ISAUTOVACUUM	drivers/SQLite/sqlite3/sqlite3.c	47778;"	d	file:
ISC_ARRAY_BOUND	drivers/Firebird/ibpp/core/ibase.h	/^} ISC_ARRAY_BOUND;$/;"	t	typeref:struct:__anon60
ISC_ARRAY_DESC	drivers/Firebird/ibpp/core/ibase.h	/^} ISC_ARRAY_DESC;$/;"	t	typeref:struct:__anon61
ISC_BLOB_CTL	drivers/Firebird/ibpp/core/ibase.h	/^} * ISC_BLOB_CTL;$/;"	t	typeref:struct:isc_blob_ctl
ISC_BLOB_DESC	drivers/Firebird/ibpp/core/ibase.h	/^} ISC_BLOB_DESC;$/;"	t	typeref:struct:__anon62
ISC_DATE	drivers/Firebird/ibpp/core/ibase.h	/^typedef int                     ISC_DATE;$/;"	t
ISC_EVENT_CALLBACK	drivers/Firebird/ibpp/core/ibase.h	/^typedef void (*ISC_EVENT_CALLBACK)(void*, ISC_USHORT, const ISC_UCHAR*);$/;"	t
ISC_EXPORT	drivers/Firebird/ibpp/core/ibase.h	75;"	d
ISC_EXPORT	drivers/Firebird/ibpp/core/ibase.h	78;"	d
ISC_EXPORT_VARARG	drivers/Firebird/ibpp/core/ibase.h	76;"	d
ISC_EXPORT_VARARG	drivers/Firebird/ibpp/core/ibase.h	79;"	d
ISC_FALSE	drivers/Firebird/ibpp/core/ibase.h	43;"	d
ISC_FAR	drivers/Firebird/ibpp/core/ibase.h	49;"	d
ISC_INT64	drivers/Firebird/ibpp/core/ibase.h	/^typedef __int64                         ISC_INT64;$/;"	t
ISC_INT64	drivers/Firebird/ibpp/core/ibase.h	/^typedef long long int                   ISC_INT64;$/;"	t
ISC_LONG	drivers/Firebird/ibpp/core/ibase.h	/^typedef int             ISC_LONG;$/;"	t
ISC_LONG	drivers/Firebird/ibpp/core/ibase.h	/^typedef signed long     ISC_LONG;$/;"	t
ISC_PRINT_CALLBACK	drivers/Firebird/ibpp/core/ibase.h	/^typedef void (*ISC_PRINT_CALLBACK) (void*, ISC_SHORT, const char*);$/;"	t
ISC_QUAD	drivers/Firebird/ibpp/core/ibase.h	/^typedef struct GDS_QUAD_t ISC_QUAD;$/;"	t	typeref:struct:GDS_QUAD_t
ISC_SCHAR	drivers/Firebird/ibpp/core/ibase.h	/^typedef char            ISC_SCHAR;$/;"	t
ISC_SHORT	drivers/Firebird/ibpp/core/ibase.h	/^typedef signed short    ISC_SHORT;$/;"	t
ISC_STATUS	drivers/Firebird/ibpp/core/ibase.h	/^typedef long ISC_STATUS;$/;"	t
ISC_STATUS_ARRAY	drivers/Firebird/ibpp/core/ibase.h	/^typedef ISC_STATUS ISC_STATUS_ARRAY[ISC_STATUS_LENGTH];$/;"	t
ISC_STATUS_LENGTH	drivers/Firebird/ibpp/core/ibase.h	71;"	d
ISC_TIME	drivers/Firebird/ibpp/core/ibase.h	/^typedef unsigned int    ISC_TIME;$/;"	t
ISC_TIMESTAMP	drivers/Firebird/ibpp/core/ibase.h	/^} ISC_TIMESTAMP;$/;"	t	typeref:struct:__anon59
ISC_TIMESTAMP_DEFINED	drivers/Firebird/ibpp/core/ibase.h	112;"	d
ISC_TIME_SECONDS_PRECISION	drivers/Firebird/ibpp/core/ibase.h	316;"	d
ISC_TIME_SECONDS_PRECISION_SCALE	drivers/Firebird/ibpp/core/ibase.h	317;"	d
ISC_TRUE	drivers/Firebird/ibpp/core/ibase.h	42;"	d
ISC_UCHAR	drivers/Firebird/ibpp/core/ibase.h	/^typedef unsigned char   ISC_UCHAR;$/;"	t
ISC_UINT64	drivers/Firebird/ibpp/core/ibase.h	/^typedef unsigned __int64        ISC_UINT64;$/;"	t
ISC_UINT64	drivers/Firebird/ibpp/core/ibase.h	/^typedef unsigned long long int  ISC_UINT64;$/;"	t
ISC_ULONG	drivers/Firebird/ibpp/core/ibase.h	/^typedef unsigned int    ISC_ULONG;$/;"	t
ISC_ULONG	drivers/Firebird/ibpp/core/ibase.h	/^typedef unsigned long   ISC_ULONG;$/;"	t
ISC_USHORT	drivers/Firebird/ibpp/core/ibase.h	/^typedef unsigned short  ISC_USHORT;$/;"	t
ISC_VERSION_CALLBACK	drivers/Firebird/ibpp/core/ibase.h	/^typedef void (*ISC_VERSION_CALLBACK)(void*, const char*);$/;"	t
ISC__FALSE	drivers/Firebird/ibpp/core/ibase.h	46;"	d
ISC__TRUE	drivers/Firebird/ibpp/core/ibase.h	45;"	d
IS_BIG_INT	drivers/SQLite/sqlite3/sqlite3.c	525;"	d	file:
IS_LOCK_ERROR	drivers/SQLite/sqlite3/sqlite3.c	24578;"	d	file:
IService	drivers/Firebird/ibpp/core/ibpp.h	/^	class IService$/;"	c	namespace:IBPP
IStatement	drivers/Firebird/ibpp/core/ibpp.h	/^	class IStatement$/;"	c	namespace:IBPP
ITransaction	drivers/Firebird/ibpp/core/ibpp.h	/^	class ITransaction$/;"	c	namespace:IBPP
IcuCursor	drivers/SQLite/sqlite3/sqlite3.c	/^struct IcuCursor {$/;"	s	file:
IcuCursor	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct IcuCursor IcuCursor;$/;"	t	typeref:struct:IcuCursor	file:
IcuTokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^struct IcuTokenizer {$/;"	s	file:
IcuTokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct IcuTokenizer IcuTokenizer;$/;"	t	typeref:struct:IcuTokenizer	file:
Id	image_processing/TePDIRegGrowSeg.hpp	/^   long Id() { return Idnumber_; }$/;"	f	class:TePDIRGSCell
IdChar	drivers/SQLite/sqlite3/sqlite3.c	109719;"	d	file:
IdChar	drivers/SQLite/sqlite3/sqlite3.c	109737;"	d	file:
IdChar	drivers/SQLite/sqlite3/sqlite3.c	110189;"	d	file:
IdChar	drivers/SQLite/sqlite3/sqlite3.c	110193;"	d	file:
IdList	drivers/SQLite/sqlite3/sqlite3.c	/^struct IdList {$/;"	s	file:
IdList	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct IdList IdList;$/;"	t	typeref:struct:IdList	file:
IdList_item	drivers/SQLite/sqlite3/sqlite3.c	/^  struct IdList_item {$/;"	s	struct:IdList	file:
Idnumber_	image_processing/TePDIRegGrowSeg.hpp	/^        long            Idnumber_;$/;"	m	class:TePDIRGSCell
IgnorableOrderby	drivers/SQLite/sqlite3/sqlite3.c	10784;"	d	file:
Ihs2Rgb	image_processing/TePDIColorTransform.hpp	/^        Ihs2Rgb = 2,$/;"	e	enum:TePDIColorTransform::ColorTransfTypes
Imageexc_	image_processing/TePDIRegGrowSeg.hpp	/^      TePDITypes::TePDIRasterPtrType  Imageexc_;$/;"	m	class:TePDIRegGrowSeg
Imagein_	image_processing/TePDIRegGrowSeg.hpp	/^      TePDITypes::TePDIRasterPtrType  Imagein_;$/;"	m	class:TePDIRegGrowSeg
Imagelab_	image_processing/TePDIRegGrowSeg.hpp	/^      TePDITypes::TePDIRasterPtrType  Imagelab_;$/;"	m	class:TePDIRegGrowSeg
ImgMatrixT	image_processing/TePDICorrelationMatching.hpp	/^      typedef TePDIMatrix< double > ImgMatrixT;$/;"	t	class:TePDICorrelationMatching
ImgMatrixT	image_processing/TePDIMIMatching.hpp	/^      typedef TePDIMatrix< double > ImgMatrixT;$/;"	t	class:TePDIMIMatching
ImgMatrixT	image_processing/TePDIOFMatching.hpp	/^      typedef TePDIMatrix< double > ImgMatrixT;$/;"	t	class:TePDIOFMatching
Impl_	kernel/TeQuerier.h	/^		TeQuerierImpl*		Impl_;		\/\/!<  querier implementation (handle\/bory pattern)$/;"	m	class:TeQuerier
Implementation	image_processing/TePDIPrincoMixModelStrategy.cpp	/^bool TePDIPrincoMixModelStrategy::Implementation(const TePDIParameters& params)$/;"	f	class:TePDIPrincoMixModelStrategy
InLoop	drivers/SQLite/sqlite3/sqlite3.c	/^      struct InLoop {$/;"	s	struct:WhereLevel::__anon45::__anon46	file:
Inactivate	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::Inactivate()$/;"	f	class:DatabaseImpl
IncProgInt	image_processing/TePDIAlgorithm.cpp	/^bool TePDIAlgorithm::IncProgInt()$/;"	f	class:TePDIAlgorithm
Incrblob	drivers/SQLite/sqlite3/sqlite3.c	/^struct Incrblob {$/;"	s	file:
Incrblob	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Incrblob Incrblob;$/;"	t	typeref:struct:Incrblob	file:
Increment	image_processing/TePDIPIManager.hpp	/^      inline bool Increment()$/;"	f	class:TePDIPIManager
Index	drivers/SQLite/sqlite3/sqlite3.c	/^struct Index {$/;"	s	file:
Index	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Index Index;$/;"	t	typeref:struct:Index	file:
Index1	kernel/TeSparseMatrix.h	/^   size_type Index1(iterator& I) const$/;"	f	class:TeSparseMatrix
Index2	kernel/TeSparseMatrix.h	/^   size_type Index2(iterator& I) const$/;"	f	class:TeSparseMatrix
IndexCols	drivers/Oracle/OCI/include/odci.h	/^   OCIInd IndexCols;$/;"	m	struct:ODCIIndexInfo_ind
IndexCols	drivers/Oracle/OCI/include/odci.h	/^   ODCIColInfoList* IndexCols;$/;"	m	struct:ODCIIndexInfo
IndexCostInfo	drivers/Oracle/OCI/include/odci.h	/^   OCIInd IndexCostInfo;$/;"	m	struct:ODCICost_ind
IndexCostInfo	drivers/Oracle/OCI/include/odci.h	/^   OCIString* IndexCostInfo;$/;"	m	struct:ODCICost
IndexInfo	drivers/Oracle/OCI/include/odci.h	/^   struct ODCIIndexInfo IndexInfo;$/;"	m	struct:ODCIIndexCtx	typeref:struct:ODCIIndexCtx::ODCIIndexInfo
IndexInfo	drivers/Oracle/OCI/include/odci.h	/^   struct ODCIIndexInfo_ind IndexInfo;$/;"	m	struct:ODCIIndexCtx_ind	typeref:struct:ODCIIndexCtx_ind::ODCIIndexInfo_ind
IndexInfoFlags	drivers/Oracle/OCI/include/odci.h	/^   OCIInd IndexInfoFlags;$/;"	m	struct:ODCIIndexInfo_ind
IndexInfoFlags	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        IndexInfoFlags;$/;"	m	struct:ODCIIndexInfo
IndexName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd IndexName;$/;"	m	struct:ODCIIndexInfo_ind
IndexName	drivers/Oracle/OCI/include/odci.h	/^   OCIString*       IndexName;$/;"	m	struct:ODCIIndexInfo
IndexPair	kernel/TeSparseMatrix.h	/^     typedef pair<IndexType, IndexType> IndexPair;$/;"	t	class:TeSparseMatrix
IndexPair	kernel/TeSparseMatrix.h	/^    typedef pair<IndexType, IndexType> IndexPair;$/;"	t	class:MatrixElement
IndexParaDegree	drivers/Oracle/OCI/include/odci.h	/^   OCIInd IndexParaDegree;$/;"	m	struct:ODCIIndexInfo_ind
IndexParaDegree	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        IndexParaDegree;$/;"	m	struct:ODCIIndexInfo
IndexPartition	drivers/Oracle/OCI/include/odci.h	/^   OCIInd IndexPartition;$/;"	m	struct:ODCIIndexInfo_ind
IndexPartition	drivers/Oracle/OCI/include/odci.h	/^   OCIInd IndexPartition;$/;"	m	struct:ODCIPartInfo_ind
IndexPartition	drivers/Oracle/OCI/include/odci.h	/^   OCIString*       IndexPartition;$/;"	m	struct:ODCIIndexInfo
IndexPartition	drivers/Oracle/OCI/include/odci.h	/^   OCIString* IndexPartition;$/;"	m	struct:ODCIPartInfo
IndexSample	drivers/SQLite/sqlite3/sqlite3.c	/^struct IndexSample {$/;"	s	file:
IndexSample	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct IndexSample IndexSample;$/;"	t	typeref:struct:IndexSample	file:
IndexSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIInd IndexSchema;$/;"	m	struct:ODCIIndexInfo_ind
IndexSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIString*       IndexSchema;$/;"	m	struct:ODCIIndexInfo
Indice	stat/hash.h	/^     unsigned int Indice;$/;"	m	struct:THash::Hash_Type
Indice	stat/heap.h	/^        int Indice;$/;"	m	struct:THeap::TipoHeap
Indice	stat/lista.h	/^      int Indice;$/;"	m	struct:TListaVizinho::Vizinho
Indices	kernel/dynpq.h	/^		vector<index_type> Indices;      \/\/ auxiliary vector$/;"	m	class:br_stl::dynamic_priority_queue
Info	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::Info(int* Size, int* Largest, int* Segments)$/;"	f	class:BlobImpl
Info	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::Info(int* ODSMajor, int* ODSMinor,$/;"	f	class:DatabaseImpl
Information	drivers/qt/TeQtCanvas.h	/^		 UpArrow, Edit, Distance, Information, ZoomIn, ZoomOut };$/;"	e	enum:TeQtCanvas::CursorMode
Init	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::Init()$/;"	f	class:ArrayImpl
Init	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::Init()$/;"	f	class:BlobImpl
Init	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::Init()$/;"	f	class:TransactionImpl
Init	image_processing/TePDICluster.cpp	/^bool TePDICluster::Init(int ident, TePDIRegion reg)$/;"	f	class:TePDICluster
Init	image_processing/TePDIEspecData.cpp	/^bool TePDIEspecData::Init(int nband)$/;"	f	class:TePDIEspecData
Init	image_processing/TePDIRegGrowSeg.cpp	/^void TePDIRGSCell :: Init( unsigned long* tuple, long id, short lin, short col, short Nban )$/;"	f	class:TePDIRGSCell
Init	image_processing/TePDIRegion.cpp	/^bool TePDIRegion::Init(int n, long a, vector<double> m, TeMatrix c)$/;"	f	class:TePDIRegion
Init	kernel/TeMatrix.cpp	/^TeMatrix::Init( int nl, int nc , double* f )$/;"	f	class:TeMatrix
Init	kernel/TeMatrix.cpp	/^TeMatrix::Init(int k, double f)$/;"	f	class:TeMatrix
Init	kernel/TeMatrix.cpp	/^TeMatrix::Init(int k, double* f)$/;"	f	class:TeMatrix
Init	kernel/TeMatrix.cpp	/^TeMatrix::Init(int nl, int nc, double f )$/;"	f	class:TeMatrix
Init	kernel/TeRaster.cpp	/^	void Init(TeRaster* r, double y)$/;"	f	class:TeStrategic
InitData	drivers/SQLite/sqlite3/sqlite3.c	/^} InitData;$/;"	t	typeref:struct:__anon47	file:
InitWindow	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRegGrowSeg :: InitWindow()$/;"	f	class:TePDIRegGrowSeg
Initialize	stat/TeKMeansGrouping.h	/^Initialize(T& centroide, vector<double>& minValue, vector<double>& maxValue)$/;"	f
Initialized	kernel/TeMatrix.h	/^	int Initialized(){ return ( nrow > 0 && ncol > 0 ) ? (true) : (false); }$/;"	f	class:TeMatrix
Input_format	kernel/TeGraph.h	/^	int Input_format[CURVES_MAX];          \/* format of file loaded *\/$/;"	m	class:TeGraphPlot
Insere	stat/filaDouble.cpp	/^void TFilaDouble::Insere(double Item){$/;"	f	class:TFilaDouble
Insere	stat/filaInt.cpp	/^void  TFilaInt::Insere(int Raiz){$/;"	f	class:TFilaInt
Insere	stat/filaR.cpp	/^void  TFilaR::Insere(int Raiz,double Desvio,long Populacao){$/;"	f	class:TFilaR
Insere	stat/hash.cpp	/^void  THash::Insere(char* SKey,unsigned int Indice){$/;"	f	class:THash
Insere	stat/lista.cpp	/^void  TListaVizinho::Insere(int indice,double peso){$/;"	f	class:TListaVizinho
Insert	drivers/Firebird/ibpp/core/_dpb.cpp	/^void DPB::Insert(char type, bool data)$/;"	f	class:DPB
Insert	drivers/Firebird/ibpp/core/_dpb.cpp	/^void DPB::Insert(char type, char data)$/;"	f	class:DPB
Insert	drivers/Firebird/ibpp/core/_dpb.cpp	/^void DPB::Insert(char type, const char* data)$/;"	f	class:DPB
Insert	drivers/Firebird/ibpp/core/_dpb.cpp	/^void DPB::Insert(char type, int16_t data)$/;"	f	class:DPB
Insert	drivers/Firebird/ibpp/core/_spb.cpp	/^void SPB::Insert(char opcode)$/;"	f	class:SPB
Insert	drivers/Firebird/ibpp/core/_tpb.cpp	/^void TPB::Insert(char item)$/;"	f	class:TPB
Insert	drivers/Firebird/ibpp/core/_tpb.cpp	/^void TPB::Insert(const std::string& data)$/;"	f	class:TPB
Insert	image_processing/TePDIRegGrowSeg.hpp	/^        Insert( TePDIRGSCell *cell, float dist )$/;"	f	class:CloserCells
Insert	kernel/TeNeighbours.cpp	/^TeNeighbours:: Insert (const string& object_id, const TeProxMatrixAttributes& attr)$/;"	f	class:TeNeighbours
InsertByte	drivers/Firebird/ibpp/core/_spb.cpp	/^void SPB::InsertByte(char type, char data)$/;"	f	class:SPB
InsertFixUp	kernel/TeRedBlackTree.h	/^			void InsertFixUp(NODE*& n, NODE*& root)$/;"	f	class:TeREDBLACK::TeRBTree
InsertNeighbor	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRGSCell :: InsertNeighbor( TePDIRGSCell* c, float dist )$/;"	f	class:TePDIRGSCell
InsertQuad	drivers/Firebird/ibpp/core/_spb.cpp	/^void SPB::InsertQuad(char type, int32_t data)$/;"	f	class:SPB
InsertString	drivers/Firebird/ibpp/core/_spb.cpp	/^void SPB::InsertString(char type, int lenwidth, const char* data)$/;"	f	class:SPB
IntContainerT	kernel/TeMultiContainer.h	/^        TeMCNodeInterface< TeMultiContainerKeyT >* > IntContainerT;$/;"	t	class:TeMultiContainer
IntegrityCk	drivers/SQLite/sqlite3/sqlite3.c	/^struct IntegrityCk {$/;"	s	file:
IntegrityCk	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct IntegrityCk IntegrityCk;$/;"	t	typeref:struct:IntegrityCk	file:
InternalManagerDataStruct	kernel/TeThreadJobsManager.h	/^    struct InternalManagerDataStruct$/;"	s	class:TeThreadJobsManager
InterpFunctPtr	image_processing/TePDIInterpolator.hpp	/^      typedef void (TePDIInterpolator::*InterpFunctPtr)( const double& line, $/;"	t	class:TePDIInterpolator
InterpMethod	image_processing/TePDIIHSWaveletFusion.hpp	/^      enum InterpMethod {$/;"	g	class:TePDIIHSWaveletFusion
InterpMethod	image_processing/TePDIInterpolator.hpp	/^      enum InterpMethod {$/;"	g	class:TePDIInterpolator
InterpMethod	image_processing/TePDIPCAWaveletFusion.hpp	/^      enum InterpMethod {$/;"	g	class:TePDIPCAWaveletFusion
InterpMethod	image_processing/TePDIWaveletAtrousFusion.hpp	/^      enum InterpMethod {$/;"	g	class:TePDIWaveletAtrousFusion
InterpMethod	image_processing/TePDIWiSpeRFusion.hpp	/^      enum InterpMethod {$/;"	g	class:TePDIWiSpeRFusion
IntervalDS	drivers/Oracle/OCI/include/occiData.h	/^class IntervalDS$/;"	c	namespace:oracle::occi
IntervalYM	drivers/Oracle/OCI/include/occiData.h	/^class IntervalYM$/;"	c	namespace:oracle::occi
IntraSourceConcurrency	drivers/Oracle/OCI/include/odci.h	/^   OCIInd IntraSourceConcurrency;$/;"	m	struct:ODCIExtTableQCInfo_ind
IntraSourceConcurrency	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        IntraSourceConcurrency;$/;"	m	struct:ODCIExtTableQCInfo
Inverse	kernel/TeMatrix.cpp	/^TeMatrix::Inverse( TeMatrix& matinv ) const$/;"	f	class:TeMatrix
IsDifferent	kernel/TeGeometryAlgorithms.h	/^		static bool IsDifferent(const double& d1, const double& d2)$/;"	f	class:TeGeometryAlgorithmsPrecision
IsDigit	drivers/SQLite/sqlite3/shell.c	90;"	d	file:
IsDiscrete	image_processing/TePDIHistogram.cpp	/^bool TePDIHistogram::IsDiscrete() const$/;"	f	class:TePDIHistogram
IsDiscreteLut	image_processing/TePDIUtils.cpp	/^  bool IsDiscreteLut( const TePDITypes::TePDILutType& lut )$/;"	f	namespace:TePDIUtils
IsEmpty	image_processing/TePDIMatrix.hpp	/^  bool TePDIMatrix< ElementType >::IsEmpty() const$/;"	f	class:TePDIMatrix
IsEmpty	kernel/TeRedBlackTree.h	/^			bool IsEmpty(void) const$/;"	f	class:TeREDBLACK::TeRBTree
IsEqual	kernel/TeGeometryAlgorithms.h	/^		static bool IsEqual(const double& d1, const double& d2)$/;"	f	class:TeGeometryAlgorithmsPrecision
IsEqual	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixClosedNetworkStrategy::IsEqual (const TeProxMatrixConstructionStrategy<TeSTElementSet>& other) const$/;"	f	class:TeProxMatrixClosedNetworkStrategy
IsEqual	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixOpenNetworkStrategy2::IsEqual (const TeProxMatrixConstructionStrategy<TeSTElementSet>& other) const$/;"	f	class:TeProxMatrixOpenNetworkStrategy2
IsEqual	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixOpenNetworkStrategy::IsEqual (const TeProxMatrixConstructionStrategy<TeSTElementSet>& other) const$/;"	f	class:TeProxMatrixOpenNetworkStrategy
IsEqual	kernel/TeProxMatrixConstructionStrategy.h	/^TeProxMatrixConstructionStrategy<T>::IsEqual (const TeProxMatrixConstructionStrategy<T>& other) const$/;"	f	class:TeProxMatrixConstructionStrategy
IsFloatBand	image_processing/TePDIUtils.cpp	/^  bool IsFloatBand( const TePDITypes::TePDIRasterPtrType& raster, $/;"	f	namespace:TePDIUtils
IsGreater	kernel/TeGeometryAlgorithms.h	/^		static bool IsGreater(const double& d1, const double& d2)$/;"	f	class:TeGeometryAlgorithmsPrecision
IsGreaterEqual	kernel/TeGeometryAlgorithms.h	/^		static bool IsGreaterEqual(const double& d1, const double& d2)$/;"	f	class:TeGeometryAlgorithmsPrecision
IsHiddenColumn	drivers/SQLite/sqlite3/sqlite3.c	10012;"	d	file:
IsHiddenColumn	drivers/SQLite/sqlite3/sqlite3.c	10015;"	d	file:
IsNull	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::IsNull(const std::string& name)$/;"	f	class:RowImpl
IsNull	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::IsNull(int column)$/;"	f	class:RowImpl
IsNull	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::IsNull(const std::string& name)$/;"	f	class:StatementImpl
IsNull	drivers/Firebird/ibpp/core/statement.cpp	/^bool StatementImpl::IsNull(int column)$/;"	f	class:StatementImpl
IsSmaller	kernel/TeGeometryAlgorithms.h	/^		static bool IsSmaller(const double& d1, const double& d2)$/;"	f	class:TeGeometryAlgorithmsPrecision
IsSmallerEqual	kernel/TeGeometryAlgorithms.h	/^		static bool IsSmallerEqual(const double& d1, const double& d2)$/;"	f	class:TeGeometryAlgorithmsPrecision
IsSpace	drivers/SQLite/sqlite3/shell.c	89;"	d	file:
IsVirtual	drivers/SQLite/sqlite3/sqlite3.c	10011;"	d	file:
IsVirtual	drivers/SQLite/sqlite3/sqlite3.c	10014;"	d	file:
Item	stat/filaDouble.h	/^      double Item;$/;"	m	struct:TFilaDouble::it
Item	stat/filaR.h	/^    typedef struct Item {$/;"	s	class:TFilaR
ItemType	drivers/qt/TeQtCheckListItem.h	/^	enum ItemType {DATABASE, INFOLAYER, VIEW, THEME, LEGENDTITLE, LEGEND, CHARTTITLE, CHART};$/;"	g	class:TeQtCheckListItem
Item_ptr	stat/filaDouble.h	/^    }Item_t,*Item_ptr;$/;"	t	class:TFilaDouble	typeref:struct:TFilaDouble::it
Item_ptr	stat/filaInt.h	/^    }Item_t,*Item_ptr;$/;"	t	class:TFilaInt	typeref:struct:TFilaInt::it
Item_ptr	stat/filaR.h	/^    }Item_t,*Item_ptr;$/;"	t	class:TFilaR	typeref:struct:TFilaR::Item
Item_t	stat/filaDouble.h	/^    }Item_t,*Item_ptr;$/;"	t	class:TFilaDouble	typeref:struct:TFilaDouble::it
Item_t	stat/filaInt.h	/^    }Item_t,*Item_ptr;$/;"	t	class:TFilaInt	typeref:struct:TFilaInt::it
Item_t	stat/filaR.h	/^    }Item_t,*Item_ptr;$/;"	t	class:TFilaR	typeref:struct:TFilaR::Item
IterGreater	kernel/dynpq.h	/^	struct IterGreater$/;"	s	namespace:br_stl
JHistoCacheT	image_processing/TePDIStatistic.hpp	/^        JHistoCacheT;$/;"	t	class:TePDIStatistic
JOURNAL_CHUNKSIZE	drivers/SQLite/sqlite3/sqlite3.c	71323;"	d	file:
JOURNAL_HDR_SZ	drivers/SQLite/sqlite3/sqlite3.c	38068;"	d	file:
JOURNAL_PG_SZ	drivers/SQLite/sqlite3/sqlite3.c	38062;"	d	file:
JRD_BLR_H	drivers/Firebird/ibpp/core/ibase.h	1285;"	d
JRD_DSC_PUB_H	drivers/Firebird/ibpp/core/ibase.h	289;"	d
JRD_GEN_IBERROR_H	drivers/Firebird/ibpp/core/iberror.h	3;"	d
JRD_IBASE_H	drivers/Firebird/ibpp/core/ibase.h	37;"	d
JRD_INF_PUB_H	drivers/Firebird/ibpp/core/ibase.h	1769;"	d
JT_CROSS	drivers/SQLite/sqlite3/sqlite3.c	10568;"	d	file:
JT_ERROR	drivers/SQLite/sqlite3/sqlite3.c	10573;"	d	file:
JT_INNER	drivers/SQLite/sqlite3/sqlite3.c	10567;"	d	file:
JT_LEFT	drivers/SQLite/sqlite3/sqlite3.c	10570;"	d	file:
JT_NATURAL	drivers/SQLite/sqlite3/sqlite3.c	10569;"	d	file:
JT_OUTER	drivers/SQLite/sqlite3/sqlite3.c	10572;"	d	file:
JT_RIGHT	drivers/SQLite/sqlite3/sqlite3.c	10571;"	d	file:
JobAwaiting	kernel/TeThreadJobsManager.h	/^    enum JobStatus { JobRunning, JobAwaiting, JobNotRunning };$/;"	e	enum:TeThreadJobsManager::JobStatus
JobNotRunning	kernel/TeThreadJobsManager.h	/^    enum JobStatus { JobRunning, JobAwaiting, JobNotRunning };$/;"	e	enum:TeThreadJobsManager::JobStatus
JobRunning	kernel/TeThreadJobsManager.h	/^    enum JobStatus { JobRunning, JobAwaiting, JobNotRunning };$/;"	e	enum:TeThreadJobsManager::JobStatus
JobStatus	kernel/TeThreadJobsManager.h	/^    enum JobStatus { JobRunning, JobAwaiting, JobNotRunning };$/;"	g	class:TeThreadJobsManager
JobsListT	kernel/TeThreadJobsManager.h	/^    typedef std::list< TeThreadJob* > JobsListT;$/;"	t	class:TeThreadJobsManager
JournalFile	drivers/SQLite/sqlite3/sqlite3.c	/^struct JournalFile {$/;"	s	file:
JournalFile	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct JournalFile JournalFile;$/;"	t	typeref:struct:JournalFile	file:
JournalFileMethods	drivers/SQLite/sqlite3/sqlite3.c	/^static struct sqlite3_io_methods JournalFileMethods = {$/;"	v	typeref:struct:sqlite3_io_methods	file:
Jpeg	drivers/libjpeg/TeLibJpegWrapper.cpp	/^namespace Jpeg$/;"	n	file:
Jpeg	drivers/libjpeg/TeLibJpegWrapper.h	/^namespace Jpeg$/;"	n
KDNODE	kernel/TeComputeAttributeStrategies.h	/^typedef TeSAM::TeAdaptativeKdTreeNode<TeCoord2D, vector<TePoint>, TePoint> KDNODE;$/;"	t
KDTREE	kernel/TeComputeAttributeStrategies.h	/^typedef TeSAM::TeAdaptativeKdTree<KDNODE> KDTREE;$/;"	t
KERNEL_ALL_NULL	stat/TeKernelFunctions.h	/^   KERNEL_ALL_NULL,$/;"	e	enum:TeKernelError
KERNEL_INVALID_AREA	stat/TeKernelFunctions.h	/^   KERNEL_INVALID_AREA,$/;"	e	enum:TeKernelError
KERNEL_INVALID_VALUE	stat/TeKernelFunctions.h	/^   KERNEL_INVALID_VALUE,$/;"	e	enum:TeKernelError
KERNEL_NO_CENTROID	stat/TeKernelFunctions.h	/^ KERNEL_NO_CENTROID,$/;"	e	enum:TeKernelError
KERNEL_NO_VALUE	stat/TeKernelFunctions.h	/^   KERNEL_NO_VALUE$/;"	e	enum:TeKernelError
KUS100_ACTION	drivers/Oracle/OCI/include/kustags.h	713;"	d
KUS101_ACTION_HASH	drivers/Oracle/OCI/include/kustags.h	714;"	d
KUS102_CLIENT_INFO	drivers/Oracle/OCI/include/kustags.h	715;"	d
KUS103_FIXED_TABLE_SEQUENCE	drivers/Oracle/OCI/include/kustags.h	716;"	d
KUS104_ROW_WAIT_OBJECT	drivers/Oracle/OCI/include/kustags.h	717;"	d
KUS105_ROW_WAIT_FILE	drivers/Oracle/OCI/include/kustags.h	718;"	d
KUS106_ROW_WAIT_BLOCK	drivers/Oracle/OCI/include/kustags.h	719;"	d
KUS107_ROW_WAIT_ROW	drivers/Oracle/OCI/include/kustags.h	720;"	d
KUS108_LOGON_TIME	drivers/Oracle/OCI/include/kustags.h	721;"	d
KUS109_LAST_CALL_ELAPSE_TIME	drivers/Oracle/OCI/include/kustags.h	722;"	d
KUS10_PHYWRTS	drivers/Oracle/OCI/include/kustags.h	623;"	d
KUS110_OBJECT_STATE	drivers/Oracle/OCI/include/kustags.h	723;"	d
KUS111_SESSION_FLAGS	drivers/Oracle/OCI/include/kustags.h	724;"	d
KUS112_SGA_NAME	drivers/Oracle/OCI/include/kustags.h	725;"	d
KUS113_SGA_SIZE	drivers/Oracle/OCI/include/kustags.h	726;"	d
KUS114_SQL_TEXT_ADDR	drivers/Oracle/OCI/include/kustags.h	727;"	d
KUS115_HASH_VALUE	drivers/Oracle/OCI/include/kustags.h	728;"	d
KUS116_SQL_TEXT_PIECE	drivers/Oracle/OCI/include/kustags.h	729;"	d
KUS117_SQL_TEXT	drivers/Oracle/OCI/include/kustags.h	730;"	d
KUS118_SESSION_STATS_ARRAY	drivers/Oracle/OCI/include/kustags.h	731;"	d
KUS119_SYS_STATISTIC_NUM	drivers/Oracle/OCI/include/kustags.h	732;"	d
KUS11_READTIM	drivers/Oracle/OCI/include/kustags.h	624;"	d
KUS121_SYS_STATISTIC_NAME	drivers/Oracle/OCI/include/kustags.h	733;"	d
KUS122_SYS_STATISTIC_CLASS	drivers/Oracle/OCI/include/kustags.h	734;"	d
KUS123_SYS_STATISTIC_VALUE	drivers/Oracle/OCI/include/kustags.h	735;"	d
KUS124_EVENT_NUMBER	drivers/Oracle/OCI/include/kustags.h	736;"	d
KUS125_EVENT_NAME	drivers/Oracle/OCI/include/kustags.h	737;"	d
KUS126_PARAM_1_TEXT	drivers/Oracle/OCI/include/kustags.h	738;"	d
KUS127_PARAM_2_TEXT	drivers/Oracle/OCI/include/kustags.h	739;"	d
KUS128_PARAM_3_TEXT	drivers/Oracle/OCI/include/kustags.h	740;"	d
KUS129_SESSION_SEQ_NUM	drivers/Oracle/OCI/include/kustags.h	741;"	d
KUS12_WRITETIM	drivers/Oracle/OCI/include/kustags.h	625;"	d
KUS130_P1	drivers/Oracle/OCI/include/kustags.h	742;"	d
KUS131_P1_RAW	drivers/Oracle/OCI/include/kustags.h	743;"	d
KUS132_P2	drivers/Oracle/OCI/include/kustags.h	744;"	d
KUS133_P2_RAW	drivers/Oracle/OCI/include/kustags.h	745;"	d
KUS134_P3	drivers/Oracle/OCI/include/kustags.h	746;"	d
KUS135_P3_RAW	drivers/Oracle/OCI/include/kustags.h	747;"	d
KUS136_WAIT_TIME	drivers/Oracle/OCI/include/kustags.h	748;"	d
KUS137_SECONDS_IN_WAIT	drivers/Oracle/OCI/include/kustags.h	749;"	d
KUS138_OBJECT_STATE_FLAGS	drivers/Oracle/OCI/include/kustags.h	750;"	d
KUS139_LATCH_ADDRESS	drivers/Oracle/OCI/include/kustags.h	751;"	d
KUS13_PHYBLKRD	drivers/Oracle/OCI/include/kustags.h	626;"	d
KUS140_USER_NAME	drivers/Oracle/OCI/include/kustags.h	752;"	d
KUS141_CURSOR_ADDRESS	drivers/Oracle/OCI/include/kustags.h	753;"	d
KUS142_CURSOR_HASH_VALUE	drivers/Oracle/OCI/include/kustags.h	754;"	d
KUS143_CURSOR_SQL_TEXT	drivers/Oracle/OCI/include/kustags.h	755;"	d
KUS144_CURSOR_OBJ_NAME_SPACE	drivers/Oracle/OCI/include/kustags.h	756;"	d
KUS145_CURSOR_OBJ_HANDLE	drivers/Oracle/OCI/include/kustags.h	757;"	d
KUS146_LATCH_NUMBER	drivers/Oracle/OCI/include/kustags.h	758;"	d
KUS147_LATCH_WHERE	drivers/Oracle/OCI/include/kustags.h	759;"	d
KUS148_LATCH_PARENT_NAME	drivers/Oracle/OCI/include/kustags.h	760;"	d
KUS149_LATCH_NO_WAIT_FAIL_COUNT	drivers/Oracle/OCI/include/kustags.h	761;"	d
KUS14_PHYBLKWRT	drivers/Oracle/OCI/include/kustags.h	627;"	d
KUS150_LATCH_NAME	drivers/Oracle/OCI/include/kustags.h	762;"	d
KUS151_LATCH_LEVEL_NUMBER	drivers/Oracle/OCI/include/kustags.h	763;"	d
KUS152_LATCH_GETS	drivers/Oracle/OCI/include/kustags.h	764;"	d
KUS153_LATCH_MISSES	drivers/Oracle/OCI/include/kustags.h	765;"	d
KUS154_SLEEPS	drivers/Oracle/OCI/include/kustags.h	766;"	d
KUS155_IMMEDIATE_GETS	drivers/Oracle/OCI/include/kustags.h	767;"	d
KUS156_IMMEDIATE_MISSES	drivers/Oracle/OCI/include/kustags.h	768;"	d
KUS157_WAITERS_WOKEN	drivers/Oracle/OCI/include/kustags.h	769;"	d
KUS158_WAITS_HOLDING_LATCH	drivers/Oracle/OCI/include/kustags.h	770;"	d
KUS159_SPIN_GETS	drivers/Oracle/OCI/include/kustags.h	771;"	d
KUS15_LIBRARYCACHE_NDX	drivers/Oracle/OCI/include/kustags.h	628;"	d
KUS160_SLEEP1	drivers/Oracle/OCI/include/kustags.h	772;"	d
KUS161_SLEEP2	drivers/Oracle/OCI/include/kustags.h	773;"	d
KUS162_SLEEP3	drivers/Oracle/OCI/include/kustags.h	774;"	d
KUS163_SLEEP4	drivers/Oracle/OCI/include/kustags.h	775;"	d
KUS164_SLEEP5	drivers/Oracle/OCI/include/kustags.h	776;"	d
KUS165_SLEEP6	drivers/Oracle/OCI/include/kustags.h	777;"	d
KUS166_SLEEP7	drivers/Oracle/OCI/include/kustags.h	778;"	d
KUS167_SLEEP8	drivers/Oracle/OCI/include/kustags.h	779;"	d
KUS168_SLEEP9	drivers/Oracle/OCI/include/kustags.h	780;"	d
KUS169_SLEEP10	drivers/Oracle/OCI/include/kustags.h	781;"	d
KUS16_GETS	drivers/Oracle/OCI/include/kustags.h	629;"	d
KUS170_SLEEP11	drivers/Oracle/OCI/include/kustags.h	782;"	d
KUS171_SLEEP12	drivers/Oracle/OCI/include/kustags.h	783;"	d
KUS172_SLEEP13	drivers/Oracle/OCI/include/kustags.h	784;"	d
KUS173_RESOURCE_ADDR	drivers/Oracle/OCI/include/kustags.h	785;"	d
KUS174_RESOURCE_TYPE	drivers/Oracle/OCI/include/kustags.h	786;"	d
KUS175_RESOURCE_ID_1	drivers/Oracle/OCI/include/kustags.h	787;"	d
KUS176_RESOURCE_ID_2	drivers/Oracle/OCI/include/kustags.h	788;"	d
KUS177_RESOURCE_FLAG	drivers/Oracle/OCI/include/kustags.h	789;"	d
KUS178_LOCK_STATE_ADDRESS	drivers/Oracle/OCI/include/kustags.h	790;"	d
KUS179_LOCK_ADDRESS	drivers/Oracle/OCI/include/kustags.h	791;"	d
KUS17_GETHITS	drivers/Oracle/OCI/include/kustags.h	630;"	d
KUS180_LOCK_MODE_HELD	drivers/Oracle/OCI/include/kustags.h	792;"	d
KUS181_LOCK_MODE_REQUESTED	drivers/Oracle/OCI/include/kustags.h	793;"	d
KUS182_LOCK_HELD_TIME	drivers/Oracle/OCI/include/kustags.h	794;"	d
KUS183_BLOCKING	drivers/Oracle/OCI/include/kustags.h	795;"	d
KUS184_LATCH_SLEEP_COUNT	drivers/Oracle/OCI/include/kustags.h	796;"	d
KUS185_CURRENT_FILE_BLOCKS	drivers/Oracle/OCI/include/kustags.h	797;"	d
KUS18_PINS	drivers/Oracle/OCI/include/kustags.h	631;"	d
KUS19_PINHITS	drivers/Oracle/OCI/include/kustags.h	632;"	d
KUS1_FILE_NUMBER	drivers/Oracle/OCI/include/kustags.h	615;"	d
KUS203_FILE_ENABLED	drivers/Oracle/OCI/include/kustags.h	798;"	d
KUS204_CACHE_NAMESPACE	drivers/Oracle/OCI/include/kustags.h	799;"	d
KUS205_PARAM_IS_MODIFIED	drivers/Oracle/OCI/include/kustags.h	800;"	d
KUS206_PARAM_IS_ADJUSTED	drivers/Oracle/OCI/include/kustags.h	801;"	d
KUS207_PARAM_DESCRIPTION	drivers/Oracle/OCI/include/kustags.h	802;"	d
KUS20_RELOADS	drivers/Oracle/OCI/include/kustags.h	633;"	d
KUS21_INVALIDATIONS	drivers/Oracle/OCI/include/kustags.h	634;"	d
KUS22_DLM_LOCK_REQUESTS	drivers/Oracle/OCI/include/kustags.h	635;"	d
KUS23_DLM_PIN_REQUESTS	drivers/Oracle/OCI/include/kustags.h	636;"	d
KUS24_DLM_PIN_RELEASES	drivers/Oracle/OCI/include/kustags.h	637;"	d
KUS25_DLM_INVALIDATION_REQUESTS	drivers/Oracle/OCI/include/kustags.h	638;"	d
KUS26_DLM_INVALIDATIONS	drivers/Oracle/OCI/include/kustags.h	639;"	d
KUS27_PARAM_NUM	drivers/Oracle/OCI/include/kustags.h	640;"	d
KUS28_PARAM_NAME	drivers/Oracle/OCI/include/kustags.h	641;"	d
KUS29_PARAM_TYPE	drivers/Oracle/OCI/include/kustags.h	642;"	d
KUS2_FILE_NAME	drivers/Oracle/OCI/include/kustags.h	616;"	d
KUS30_PARAM_VALUE	drivers/Oracle/OCI/include/kustags.h	643;"	d
KUS31_PARAM_IS_DEFAULT	drivers/Oracle/OCI/include/kustags.h	644;"	d
KUS32_PARAM_IS_SESS_MODIFIABLE	drivers/Oracle/OCI/include/kustags.h	645;"	d
KUS33_PARAM_IS_SYS_MODIFIABLE	drivers/Oracle/OCI/include/kustags.h	646;"	d
KUS34_PROC_ADDR	drivers/Oracle/OCI/include/kustags.h	647;"	d
KUS35_PID	drivers/Oracle/OCI/include/kustags.h	648;"	d
KUS36_SPID	drivers/Oracle/OCI/include/kustags.h	649;"	d
KUS37_USERNAME	drivers/Oracle/OCI/include/kustags.h	650;"	d
KUS38_SERIAL_NUMBER	drivers/Oracle/OCI/include/kustags.h	651;"	d
KUS39_TERMINAL	drivers/Oracle/OCI/include/kustags.h	652;"	d
KUS40_PROGRAM	drivers/Oracle/OCI/include/kustags.h	653;"	d
KUS41_PROCESS_BACKGROUND	drivers/Oracle/OCI/include/kustags.h	654;"	d
KUS42_LATCHWAIT	drivers/Oracle/OCI/include/kustags.h	655;"	d
KUS43_LATCHSPIN	drivers/Oracle/OCI/include/kustags.h	656;"	d
KUS44_PROCESS_ACTIVE	drivers/Oracle/OCI/include/kustags.h	657;"	d
KUS45_SQL_TEXT	drivers/Oracle/OCI/include/kustags.h	658;"	d
KUS46_SHARABLE_MEM	drivers/Oracle/OCI/include/kustags.h	659;"	d
KUS47_PERSISTENT_MEM	drivers/Oracle/OCI/include/kustags.h	660;"	d
KUS48_RUNTIME_MEM	drivers/Oracle/OCI/include/kustags.h	661;"	d
KUS49_CURS_SORTS	drivers/Oracle/OCI/include/kustags.h	662;"	d
KUS4_FILE_STATUS	drivers/Oracle/OCI/include/kustags.h	617;"	d
KUS50_VERSION_COUNT	drivers/Oracle/OCI/include/kustags.h	663;"	d
KUS51_LOADED_VERSIONS	drivers/Oracle/OCI/include/kustags.h	664;"	d
KUS52_OPEN_VERSIONS	drivers/Oracle/OCI/include/kustags.h	665;"	d
KUS53_USERS_OPENING	drivers/Oracle/OCI/include/kustags.h	666;"	d
KUS54_EXECUTIONS	drivers/Oracle/OCI/include/kustags.h	667;"	d
KUS55_USERS_EXECUTING	drivers/Oracle/OCI/include/kustags.h	668;"	d
KUS56_LOADS	drivers/Oracle/OCI/include/kustags.h	669;"	d
KUS57_FIRST_LOAD_TIME	drivers/Oracle/OCI/include/kustags.h	670;"	d
KUS58_INVALIDATIONS	drivers/Oracle/OCI/include/kustags.h	671;"	d
KUS59_PARSE_CALLS	drivers/Oracle/OCI/include/kustags.h	672;"	d
KUS5_FILE_BLOCK_SIZE	drivers/Oracle/OCI/include/kustags.h	618;"	d
KUS60_DISK_READS	drivers/Oracle/OCI/include/kustags.h	673;"	d
KUS61_BUFFER_GETS	drivers/Oracle/OCI/include/kustags.h	674;"	d
KUS62_COMMAND_TYPE	drivers/Oracle/OCI/include/kustags.h	675;"	d
KUS63_ROWS_PROCESSED	drivers/Oracle/OCI/include/kustags.h	676;"	d
KUS64_OPTIMIZER_MODE	drivers/Oracle/OCI/include/kustags.h	677;"	d
KUS65_PARSING_USER_ID	drivers/Oracle/OCI/include/kustags.h	678;"	d
KUS66_PARSING_SCHEMA_ID	drivers/Oracle/OCI/include/kustags.h	679;"	d
KUS67_KEPT_VERSIONS	drivers/Oracle/OCI/include/kustags.h	680;"	d
KUS68_PARENT_ADDRESS	drivers/Oracle/OCI/include/kustags.h	681;"	d
KUS69_OBJECT_HASH	drivers/Oracle/OCI/include/kustags.h	682;"	d
KUS6_FILE_CREATE_BLOCKS	drivers/Oracle/OCI/include/kustags.h	619;"	d
KUS70_MODULE	drivers/Oracle/OCI/include/kustags.h	683;"	d
KUS71_MODULE_HASH	drivers/Oracle/OCI/include/kustags.h	684;"	d
KUS72_ACTION	drivers/Oracle/OCI/include/kustags.h	685;"	d
KUS73_ACTION_HASH	drivers/Oracle/OCI/include/kustags.h	686;"	d
KUS74_SESSION_ADDR	drivers/Oracle/OCI/include/kustags.h	687;"	d
KUS75_SID	drivers/Oracle/OCI/include/kustags.h	688;"	d
KUS76_SERIAL_NUM	drivers/Oracle/OCI/include/kustags.h	689;"	d
KUS77_AUDSID	drivers/Oracle/OCI/include/kustags.h	690;"	d
KUS78_PADDR	drivers/Oracle/OCI/include/kustags.h	691;"	d
KUS79_USER_NUM	drivers/Oracle/OCI/include/kustags.h	692;"	d
KUS7_SERVER_TYPE	drivers/Oracle/OCI/include/kustags.h	620;"	d
KUS80_USERNAME	drivers/Oracle/OCI/include/kustags.h	693;"	d
KUS81_COMMAND	drivers/Oracle/OCI/include/kustags.h	694;"	d
KUS82_TADDR	drivers/Oracle/OCI/include/kustags.h	695;"	d
KUS83_LOCKWAIT	drivers/Oracle/OCI/include/kustags.h	696;"	d
KUS84_STATUS	drivers/Oracle/OCI/include/kustags.h	697;"	d
KUS85_SERIALIZABLE_ABORTS	drivers/Oracle/OCI/include/kustags.h	698;"	d
KUS86_SCHEMA_NUM	drivers/Oracle/OCI/include/kustags.h	699;"	d
KUS87_SCHEMA_NAME	drivers/Oracle/OCI/include/kustags.h	700;"	d
KUS88_OSUSER	drivers/Oracle/OCI/include/kustags.h	701;"	d
KUS89_PROCESS	drivers/Oracle/OCI/include/kustags.h	702;"	d
KUS8_CHECKPOINT_CHANGE_NUMBER	drivers/Oracle/OCI/include/kustags.h	621;"	d
KUS90_MACHINE	drivers/Oracle/OCI/include/kustags.h	703;"	d
KUS91_TERMINAL	drivers/Oracle/OCI/include/kustags.h	704;"	d
KUS92_PROGRAM	drivers/Oracle/OCI/include/kustags.h	705;"	d
KUS93_SESSION_TYPE	drivers/Oracle/OCI/include/kustags.h	706;"	d
KUS94_SQL_ADDRESS	drivers/Oracle/OCI/include/kustags.h	707;"	d
KUS95_SQL_HASH_VALUE	drivers/Oracle/OCI/include/kustags.h	708;"	d
KUS96_PREV_SQL_ADDR	drivers/Oracle/OCI/include/kustags.h	709;"	d
KUS97_PREV_HASH_VALUE	drivers/Oracle/OCI/include/kustags.h	710;"	d
KUS98_MODULE	drivers/Oracle/OCI/include/kustags.h	711;"	d
KUS99_MODULE_HASH	drivers/Oracle/OCI/include/kustags.h	712;"	d
KUS9_PHYRDS	drivers/Oracle/OCI/include/kustags.h	622;"	d
KUSAPI	drivers/Oracle/OCI/include/kusapi.h	57;"	d
KUSC10_SGA	drivers/Oracle/OCI/include/kustags.h	593;"	d
KUSC11_SQL_TEXT	drivers/Oracle/OCI/include/kustags.h	594;"	d
KUSC12_SESSTAT	drivers/Oracle/OCI/include/kustags.h	595;"	d
KUSC13_SESSIONS_STAT	drivers/Oracle/OCI/include/kustags.h	596;"	d
KUSC14_SYSSTAT	drivers/Oracle/OCI/include/kustags.h	597;"	d
KUSC15_EVENT_DESCRIPTIONS	drivers/Oracle/OCI/include/kustags.h	598;"	d
KUSC16_SESSION_WAIT	drivers/Oracle/OCI/include/kustags.h	599;"	d
KUSC17_OPEN_CURSOR	drivers/Oracle/OCI/include/kustags.h	600;"	d
KUSC18_LATCH_WHERE	drivers/Oracle/OCI/include/kustags.h	601;"	d
KUSC19_LATCH_MISSES	drivers/Oracle/OCI/include/kustags.h	602;"	d
KUSC20_LATCH_HOLDER	drivers/Oracle/OCI/include/kustags.h	603;"	d
KUSC21_LATCH	drivers/Oracle/OCI/include/kustags.h	604;"	d
KUSC23_RESOURCE	drivers/Oracle/OCI/include/kustags.h	605;"	d
KUSC24_LOCKS_1	drivers/Oracle/OCI/include/kustags.h	606;"	d
KUSC25_LOCKS_2	drivers/Oracle/OCI/include/kustags.h	607;"	d
KUSC26_LOCKS_3	drivers/Oracle/OCI/include/kustags.h	608;"	d
KUSC27_LOCKS_4	drivers/Oracle/OCI/include/kustags.h	609;"	d
KUSC28_LOCKS_5	drivers/Oracle/OCI/include/kustags.h	610;"	d
KUSC29_LOCK1_STAT	drivers/Oracle/OCI/include/kustags.h	611;"	d
KUSC2_FILE_ENTRY	drivers/Oracle/OCI/include/kustags.h	585;"	d
KUSC30_LOCK2_STAT	drivers/Oracle/OCI/include/kustags.h	612;"	d
KUSC31_LOCK3_STAT	drivers/Oracle/OCI/include/kustags.h	613;"	d
KUSC32_LOCK4_STAT	drivers/Oracle/OCI/include/kustags.h	614;"	d
KUSC3_FILE_STATS	drivers/Oracle/OCI/include/kustags.h	586;"	d
KUSC4_LIBRARY_CACHE	drivers/Oracle/OCI/include/kustags.h	587;"	d
KUSC5_PARAMETERS	drivers/Oracle/OCI/include/kustags.h	588;"	d
KUSC6_FILE_HEADER	drivers/Oracle/OCI/include/kustags.h	589;"	d
KUSC7_PROCESS	drivers/Oracle/OCI/include/kustags.h	590;"	d
KUSC8_SQL_AREA	drivers/Oracle/OCI/include/kustags.h	591;"	d
KUSC9_SESSIONS	drivers/Oracle/OCI/include/kustags.h	592;"	d
KUSGTBCNT	drivers/Oracle/OCI/include/kustags.h	543;"	d
KUSGTBDTG	drivers/Oracle/OCI/include/kustags.h	544;"	d
KUSGTBEND	drivers/Oracle/OCI/include/kustags.h	539;"	d
KUSGTBKEY	drivers/Oracle/OCI/include/kustags.h	545;"	d
KUSGTBOG	drivers/Oracle/OCI/include/kustags.h	540;"	d
KUSGTBTRN	drivers/Oracle/OCI/include/kustags.h	542;"	d
KUSGTEOG	drivers/Oracle/OCI/include/kustags.h	541;"	d
KUSGTMD	drivers/Oracle/OCI/include/kustags.h	548;"	d
KUSGTNP	drivers/Oracle/OCI/include/kustags.h	549;"	d
KUSGTTAGEND	drivers/Oracle/OCI/include/kustags.h	1015;"	d
KUSGTTAGSTART	drivers/Oracle/OCI/include/kustags.h	1014;"	d
KUSGTUNST	drivers/Oracle/OCI/include/kustags.h	547;"	d
KUSGTWCLS	drivers/Oracle/OCI/include/kustags.h	546;"	d
KUSOCTAGEND	drivers/Oracle/OCI/include/kustags.h	1025;"	d
KUSOCTAGSTART	drivers/Oracle/OCI/include/kustags.h	1024;"	d
KUSOTAGMAX	drivers/Oracle/OCI/include/kustags.h	1030;"	d
KUSOTAGSTART	drivers/Oracle/OCI/include/kustags.h	1029;"	d
KUSRCTAGEND	drivers/Oracle/OCI/include/kustags.h	1020;"	d
KUSRCTAGSTART	drivers/Oracle/OCI/include/kustags.h	1019;"	d
KUSRTAGEND	drivers/Oracle/OCI/include/kustags.h	1010;"	d
KUSRTAGSTART	drivers/Oracle/OCI/include/kustags.h	1009;"	d
KUSST1	drivers/Oracle/OCI/include/kustags.h	803;"	d
KUSST10	drivers/Oracle/OCI/include/kustags.h	812;"	d
KUSST100	drivers/Oracle/OCI/include/kustags.h	902;"	d
KUSST101	drivers/Oracle/OCI/include/kustags.h	903;"	d
KUSST102	drivers/Oracle/OCI/include/kustags.h	904;"	d
KUSST103	drivers/Oracle/OCI/include/kustags.h	905;"	d
KUSST104	drivers/Oracle/OCI/include/kustags.h	906;"	d
KUSST105	drivers/Oracle/OCI/include/kustags.h	907;"	d
KUSST106	drivers/Oracle/OCI/include/kustags.h	908;"	d
KUSST107	drivers/Oracle/OCI/include/kustags.h	909;"	d
KUSST108	drivers/Oracle/OCI/include/kustags.h	910;"	d
KUSST109	drivers/Oracle/OCI/include/kustags.h	911;"	d
KUSST11	drivers/Oracle/OCI/include/kustags.h	813;"	d
KUSST110	drivers/Oracle/OCI/include/kustags.h	912;"	d
KUSST111	drivers/Oracle/OCI/include/kustags.h	913;"	d
KUSST112	drivers/Oracle/OCI/include/kustags.h	914;"	d
KUSST113	drivers/Oracle/OCI/include/kustags.h	915;"	d
KUSST114	drivers/Oracle/OCI/include/kustags.h	916;"	d
KUSST115	drivers/Oracle/OCI/include/kustags.h	917;"	d
KUSST116	drivers/Oracle/OCI/include/kustags.h	918;"	d
KUSST117	drivers/Oracle/OCI/include/kustags.h	919;"	d
KUSST118	drivers/Oracle/OCI/include/kustags.h	920;"	d
KUSST119	drivers/Oracle/OCI/include/kustags.h	921;"	d
KUSST12	drivers/Oracle/OCI/include/kustags.h	814;"	d
KUSST120	drivers/Oracle/OCI/include/kustags.h	922;"	d
KUSST121	drivers/Oracle/OCI/include/kustags.h	923;"	d
KUSST122	drivers/Oracle/OCI/include/kustags.h	924;"	d
KUSST123	drivers/Oracle/OCI/include/kustags.h	925;"	d
KUSST124	drivers/Oracle/OCI/include/kustags.h	926;"	d
KUSST125	drivers/Oracle/OCI/include/kustags.h	927;"	d
KUSST126	drivers/Oracle/OCI/include/kustags.h	928;"	d
KUSST127	drivers/Oracle/OCI/include/kustags.h	929;"	d
KUSST128	drivers/Oracle/OCI/include/kustags.h	930;"	d
KUSST129	drivers/Oracle/OCI/include/kustags.h	931;"	d
KUSST13	drivers/Oracle/OCI/include/kustags.h	815;"	d
KUSST130	drivers/Oracle/OCI/include/kustags.h	932;"	d
KUSST131	drivers/Oracle/OCI/include/kustags.h	933;"	d
KUSST132	drivers/Oracle/OCI/include/kustags.h	934;"	d
KUSST133	drivers/Oracle/OCI/include/kustags.h	935;"	d
KUSST134	drivers/Oracle/OCI/include/kustags.h	936;"	d
KUSST135	drivers/Oracle/OCI/include/kustags.h	937;"	d
KUSST136	drivers/Oracle/OCI/include/kustags.h	938;"	d
KUSST137	drivers/Oracle/OCI/include/kustags.h	939;"	d
KUSST138	drivers/Oracle/OCI/include/kustags.h	940;"	d
KUSST139	drivers/Oracle/OCI/include/kustags.h	941;"	d
KUSST14	drivers/Oracle/OCI/include/kustags.h	816;"	d
KUSST140	drivers/Oracle/OCI/include/kustags.h	942;"	d
KUSST141	drivers/Oracle/OCI/include/kustags.h	943;"	d
KUSST142	drivers/Oracle/OCI/include/kustags.h	944;"	d
KUSST143	drivers/Oracle/OCI/include/kustags.h	945;"	d
KUSST144	drivers/Oracle/OCI/include/kustags.h	946;"	d
KUSST145	drivers/Oracle/OCI/include/kustags.h	947;"	d
KUSST146	drivers/Oracle/OCI/include/kustags.h	948;"	d
KUSST147	drivers/Oracle/OCI/include/kustags.h	949;"	d
KUSST148	drivers/Oracle/OCI/include/kustags.h	950;"	d
KUSST149	drivers/Oracle/OCI/include/kustags.h	951;"	d
KUSST15	drivers/Oracle/OCI/include/kustags.h	817;"	d
KUSST150	drivers/Oracle/OCI/include/kustags.h	952;"	d
KUSST151	drivers/Oracle/OCI/include/kustags.h	953;"	d
KUSST152	drivers/Oracle/OCI/include/kustags.h	954;"	d
KUSST153	drivers/Oracle/OCI/include/kustags.h	955;"	d
KUSST154	drivers/Oracle/OCI/include/kustags.h	956;"	d
KUSST155	drivers/Oracle/OCI/include/kustags.h	957;"	d
KUSST156	drivers/Oracle/OCI/include/kustags.h	958;"	d
KUSST157	drivers/Oracle/OCI/include/kustags.h	959;"	d
KUSST158	drivers/Oracle/OCI/include/kustags.h	960;"	d
KUSST159	drivers/Oracle/OCI/include/kustags.h	961;"	d
KUSST16	drivers/Oracle/OCI/include/kustags.h	818;"	d
KUSST160	drivers/Oracle/OCI/include/kustags.h	962;"	d
KUSST161	drivers/Oracle/OCI/include/kustags.h	963;"	d
KUSST162	drivers/Oracle/OCI/include/kustags.h	964;"	d
KUSST163	drivers/Oracle/OCI/include/kustags.h	965;"	d
KUSST164	drivers/Oracle/OCI/include/kustags.h	966;"	d
KUSST165	drivers/Oracle/OCI/include/kustags.h	967;"	d
KUSST166	drivers/Oracle/OCI/include/kustags.h	968;"	d
KUSST167	drivers/Oracle/OCI/include/kustags.h	969;"	d
KUSST168	drivers/Oracle/OCI/include/kustags.h	970;"	d
KUSST169	drivers/Oracle/OCI/include/kustags.h	971;"	d
KUSST17	drivers/Oracle/OCI/include/kustags.h	819;"	d
KUSST170	drivers/Oracle/OCI/include/kustags.h	972;"	d
KUSST171	drivers/Oracle/OCI/include/kustags.h	973;"	d
KUSST172	drivers/Oracle/OCI/include/kustags.h	974;"	d
KUSST173	drivers/Oracle/OCI/include/kustags.h	975;"	d
KUSST174	drivers/Oracle/OCI/include/kustags.h	976;"	d
KUSST175	drivers/Oracle/OCI/include/kustags.h	977;"	d
KUSST176	drivers/Oracle/OCI/include/kustags.h	978;"	d
KUSST177	drivers/Oracle/OCI/include/kustags.h	979;"	d
KUSST178	drivers/Oracle/OCI/include/kustags.h	980;"	d
KUSST179	drivers/Oracle/OCI/include/kustags.h	981;"	d
KUSST18	drivers/Oracle/OCI/include/kustags.h	820;"	d
KUSST180	drivers/Oracle/OCI/include/kustags.h	982;"	d
KUSST181	drivers/Oracle/OCI/include/kustags.h	983;"	d
KUSST182	drivers/Oracle/OCI/include/kustags.h	984;"	d
KUSST183	drivers/Oracle/OCI/include/kustags.h	985;"	d
KUSST184	drivers/Oracle/OCI/include/kustags.h	986;"	d
KUSST185	drivers/Oracle/OCI/include/kustags.h	987;"	d
KUSST186	drivers/Oracle/OCI/include/kustags.h	988;"	d
KUSST187	drivers/Oracle/OCI/include/kustags.h	989;"	d
KUSST188	drivers/Oracle/OCI/include/kustags.h	990;"	d
KUSST189	drivers/Oracle/OCI/include/kustags.h	991;"	d
KUSST19	drivers/Oracle/OCI/include/kustags.h	821;"	d
KUSST190	drivers/Oracle/OCI/include/kustags.h	992;"	d
KUSST191	drivers/Oracle/OCI/include/kustags.h	993;"	d
KUSST192	drivers/Oracle/OCI/include/kustags.h	994;"	d
KUSST193	drivers/Oracle/OCI/include/kustags.h	995;"	d
KUSST194	drivers/Oracle/OCI/include/kustags.h	996;"	d
KUSST195	drivers/Oracle/OCI/include/kustags.h	997;"	d
KUSST196	drivers/Oracle/OCI/include/kustags.h	998;"	d
KUSST197	drivers/Oracle/OCI/include/kustags.h	999;"	d
KUSST198	drivers/Oracle/OCI/include/kustags.h	1000;"	d
KUSST199	drivers/Oracle/OCI/include/kustags.h	1001;"	d
KUSST2	drivers/Oracle/OCI/include/kustags.h	804;"	d
KUSST20	drivers/Oracle/OCI/include/kustags.h	822;"	d
KUSST21	drivers/Oracle/OCI/include/kustags.h	823;"	d
KUSST22	drivers/Oracle/OCI/include/kustags.h	824;"	d
KUSST23	drivers/Oracle/OCI/include/kustags.h	825;"	d
KUSST24	drivers/Oracle/OCI/include/kustags.h	826;"	d
KUSST25	drivers/Oracle/OCI/include/kustags.h	827;"	d
KUSST26	drivers/Oracle/OCI/include/kustags.h	828;"	d
KUSST27	drivers/Oracle/OCI/include/kustags.h	829;"	d
KUSST28	drivers/Oracle/OCI/include/kustags.h	830;"	d
KUSST29	drivers/Oracle/OCI/include/kustags.h	831;"	d
KUSST3	drivers/Oracle/OCI/include/kustags.h	805;"	d
KUSST30	drivers/Oracle/OCI/include/kustags.h	832;"	d
KUSST31	drivers/Oracle/OCI/include/kustags.h	833;"	d
KUSST32	drivers/Oracle/OCI/include/kustags.h	834;"	d
KUSST33	drivers/Oracle/OCI/include/kustags.h	835;"	d
KUSST34	drivers/Oracle/OCI/include/kustags.h	836;"	d
KUSST35	drivers/Oracle/OCI/include/kustags.h	837;"	d
KUSST36	drivers/Oracle/OCI/include/kustags.h	838;"	d
KUSST37	drivers/Oracle/OCI/include/kustags.h	839;"	d
KUSST38	drivers/Oracle/OCI/include/kustags.h	840;"	d
KUSST39	drivers/Oracle/OCI/include/kustags.h	841;"	d
KUSST4	drivers/Oracle/OCI/include/kustags.h	806;"	d
KUSST40	drivers/Oracle/OCI/include/kustags.h	842;"	d
KUSST41	drivers/Oracle/OCI/include/kustags.h	843;"	d
KUSST42	drivers/Oracle/OCI/include/kustags.h	844;"	d
KUSST43	drivers/Oracle/OCI/include/kustags.h	845;"	d
KUSST44	drivers/Oracle/OCI/include/kustags.h	846;"	d
KUSST45	drivers/Oracle/OCI/include/kustags.h	847;"	d
KUSST46	drivers/Oracle/OCI/include/kustags.h	848;"	d
KUSST47	drivers/Oracle/OCI/include/kustags.h	849;"	d
KUSST48	drivers/Oracle/OCI/include/kustags.h	850;"	d
KUSST49	drivers/Oracle/OCI/include/kustags.h	851;"	d
KUSST5	drivers/Oracle/OCI/include/kustags.h	807;"	d
KUSST50	drivers/Oracle/OCI/include/kustags.h	852;"	d
KUSST51	drivers/Oracle/OCI/include/kustags.h	853;"	d
KUSST52	drivers/Oracle/OCI/include/kustags.h	854;"	d
KUSST53	drivers/Oracle/OCI/include/kustags.h	855;"	d
KUSST54	drivers/Oracle/OCI/include/kustags.h	856;"	d
KUSST55	drivers/Oracle/OCI/include/kustags.h	857;"	d
KUSST56	drivers/Oracle/OCI/include/kustags.h	858;"	d
KUSST57	drivers/Oracle/OCI/include/kustags.h	859;"	d
KUSST58	drivers/Oracle/OCI/include/kustags.h	860;"	d
KUSST59	drivers/Oracle/OCI/include/kustags.h	861;"	d
KUSST6	drivers/Oracle/OCI/include/kustags.h	808;"	d
KUSST60	drivers/Oracle/OCI/include/kustags.h	862;"	d
KUSST61	drivers/Oracle/OCI/include/kustags.h	863;"	d
KUSST62	drivers/Oracle/OCI/include/kustags.h	864;"	d
KUSST63	drivers/Oracle/OCI/include/kustags.h	865;"	d
KUSST64	drivers/Oracle/OCI/include/kustags.h	866;"	d
KUSST65	drivers/Oracle/OCI/include/kustags.h	867;"	d
KUSST66	drivers/Oracle/OCI/include/kustags.h	868;"	d
KUSST67	drivers/Oracle/OCI/include/kustags.h	869;"	d
KUSST68	drivers/Oracle/OCI/include/kustags.h	870;"	d
KUSST69	drivers/Oracle/OCI/include/kustags.h	871;"	d
KUSST7	drivers/Oracle/OCI/include/kustags.h	809;"	d
KUSST70	drivers/Oracle/OCI/include/kustags.h	872;"	d
KUSST71	drivers/Oracle/OCI/include/kustags.h	873;"	d
KUSST72	drivers/Oracle/OCI/include/kustags.h	874;"	d
KUSST73	drivers/Oracle/OCI/include/kustags.h	875;"	d
KUSST74	drivers/Oracle/OCI/include/kustags.h	876;"	d
KUSST75	drivers/Oracle/OCI/include/kustags.h	877;"	d
KUSST76	drivers/Oracle/OCI/include/kustags.h	878;"	d
KUSST77	drivers/Oracle/OCI/include/kustags.h	879;"	d
KUSST78	drivers/Oracle/OCI/include/kustags.h	880;"	d
KUSST79	drivers/Oracle/OCI/include/kustags.h	881;"	d
KUSST8	drivers/Oracle/OCI/include/kustags.h	810;"	d
KUSST80	drivers/Oracle/OCI/include/kustags.h	882;"	d
KUSST81	drivers/Oracle/OCI/include/kustags.h	883;"	d
KUSST82	drivers/Oracle/OCI/include/kustags.h	884;"	d
KUSST83	drivers/Oracle/OCI/include/kustags.h	885;"	d
KUSST84	drivers/Oracle/OCI/include/kustags.h	886;"	d
KUSST85	drivers/Oracle/OCI/include/kustags.h	887;"	d
KUSST86	drivers/Oracle/OCI/include/kustags.h	888;"	d
KUSST87	drivers/Oracle/OCI/include/kustags.h	889;"	d
KUSST88	drivers/Oracle/OCI/include/kustags.h	890;"	d
KUSST89	drivers/Oracle/OCI/include/kustags.h	891;"	d
KUSST9	drivers/Oracle/OCI/include/kustags.h	811;"	d
KUSST90	drivers/Oracle/OCI/include/kustags.h	892;"	d
KUSST91	drivers/Oracle/OCI/include/kustags.h	893;"	d
KUSST92	drivers/Oracle/OCI/include/kustags.h	894;"	d
KUSST93	drivers/Oracle/OCI/include/kustags.h	895;"	d
KUSST94	drivers/Oracle/OCI/include/kustags.h	896;"	d
KUSST95	drivers/Oracle/OCI/include/kustags.h	897;"	d
KUSST96	drivers/Oracle/OCI/include/kustags.h	898;"	d
KUSST97	drivers/Oracle/OCI/include/kustags.h	899;"	d
KUSST98	drivers/Oracle/OCI/include/kustags.h	900;"	d
KUSST99	drivers/Oracle/OCI/include/kustags.h	901;"	d
KUSSTALLC	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTALLC =		7,	\/* unable to allocate memory		*\/$/;"	e	enum:kusst
KUSSTBADVER	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTBADVER =       22,     \/* Db root file wrong version (Rdb only)*\/$/;"	e	enum:kusst
KUSSTBDKY	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTBDKY =         15,     \/* Bad index value for class tag	*\/$/;"	e	enum:kusst
KUSSTBFSML	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTBFSML =	16,	\/* Buffer is too small for data		*\/$/;"	e	enum:kusst
KUSSTBINF	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTBINF =		14,	\/* Input buffer contained a bad tag	*\/$/;"	e	enum:kusst
KUSSTCIU	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTCIU =          23,     \/* Context is already in use            *\/$/;"	e	enum:kusst
KUSSTCONT	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTCONT =		6,	\/* buffer is continued			*\/$/;"	e	enum:kusst
KUSSTDBDOWN	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTDBDOWN =       18,     \/* Database is unavaliable              *\/$/;"	e	enum:kusst
KUSSTDIS	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTDIS =		12,	\/* Stats collection disabled for database *\/$/;"	e	enum:kusst
KUSSTDMPCL	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTDMPCL =        25      \/* Unable to close dump output file     *\/$/;"	e	enum:kusst
KUSSTDMPOP	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTDMPOP =        24,     \/* Unable to open dump output file      *\/$/;"	e	enum:kusst
KUSSTEOB	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTEOB =		2,	\/* Cursor at end of buffer.	        *\/$/;"	e	enum:kusst
KUSSTERR	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTERR =		13,	\/* Unexpected error encountered		*\/$/;"	e	enum:kusst
KUSSTFILACC	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTFILACC =       19,     \/* File cannot be accessed              *\/$/;"	e	enum:kusst
KUSSTIBE	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTIBE =		17,	\/* Information buffer is empty          *\/$/;"	e	enum:kusst
KUSSTICH	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTICH =		9,	\/* Invalid context handle		*\/$/;"	e	enum:kusst
KUSSTIDH	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTIDH =		10,	\/* Invalid database handle		*\/$/;"	e	enum:kusst
KUSSTILN	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTILN =		4,	\/* Invalid length specified when	*\/$/;"	e	enum:kusst
KUSSTINVDB	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTINVDB =        20,     \/* File is not a db root file (Rdb only)*\/$/;"	e	enum:kusst
KUSSTITH	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTITH =		11,	\/* Invalid TLV handle			*\/$/;"	e	enum:kusst
KUSSTNODB	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTNODB =         21,     \/* Db root file doesn't exist (Rdb only)*\/$/;"	e	enum:kusst
KUSSTNWR	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTNWR =		3,	\/* Attempt to write to TLV when no      *\/$/;"	e	enum:kusst
KUSSTOK	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTOK =		1,	\/* Success                              *\/$/;"	e	enum:kusst
KUSSTTRNC	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTTRNC =		5,	\/* buffer was truncated			*\/$/;"	e	enum:kusst
KUSSTUNKC	drivers/Oracle/OCI/include/kusapi.h	/^    KUSSTUNKC =		8,	\/* unknown class tag specified		*\/$/;"	e	enum:kusst
KUSTAGCOUNT	drivers/Oracle/OCI/include/kustags.h	1005;"	d
KUSTAGS	drivers/Oracle/OCI/include/kustags.h	21;"	d
KUSTVS_CONT	drivers/Oracle/OCI/include/kusapi.h	/^    KUSTVS_CONT =	1,	\/* tlv buffer terminated with KUSSTCONT	*\/$/;"	e	enum:kustvs
KUSTVS_END	drivers/Oracle/OCI/include/kusapi.h	/^    KUSTVS_END =	2,	\/* tlv buffer terminated with KUSSTBEND	*\/$/;"	e	enum:kustvs
KUSTVS_TRUNC	drivers/Oracle/OCI/include/kusapi.h	/^    KUSTVS_TRUNC =	3,	\/* tlv buffer terminated with KUSSTTRNC	*\/$/;"	e	enum:kustvs
KUSTVS_UNK	drivers/Oracle/OCI/include/kusapi.h	/^    KUSTVS_UNK =	4	\/* handle specified has not been used	*\/$/;"	e	enum:kustvs
KernelNormalizationFactor	stat/TeKernelFunctions.h	/^double KernelNormalizationFactor(ItEvt itBegin, ItEvt itEnd) {$/;"	f
Key	stat/hash.h	/^     unsigned long Key;$/;"	m	struct:THash::Hash_Type
Key	stat/heap.h	/^   double Key(int Indice) {return GetKey(Indice);}$/;"	f	class:THeap
KeyAux	stat/heap.h	/^   int *KeyAux;$/;"	m	class:THeap
KeyClass	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct KeyClass KeyClass;$/;"	t	typeref:struct:KeyClass	file:
KeyInfo	drivers/SQLite/sqlite3/sqlite3.c	/^struct KeyInfo {$/;"	s	file:
KeyInfo	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct KeyInfo KeyInfo;$/;"	t	typeref:struct:KeyInfo	file:
Kill	image_processing/TePDIRegGrowSeg.hpp	/^   void Kill() { Stat_ = STATDEAD; }$/;"	f	class:TePDIRGSCell
LABEL_MAX	kernel/TeGraph.h	34;"	d
LARGEST_INT64	drivers/SQLite/sqlite3/sqlite3.c	7783;"	d	file:
LAYERPLANEDESCRIPTOR	drivers/GL/glut.h	/^typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR, *PLAYERPLANEDESCRIPTOR, *LPLAYERPLANEDESCRIPTOR;$/;"	t	typeref:struct:tagLAYERPLANEDESCRIPTOR
LAYERPLANEDESCRIPTOR	drivers/GL/mesa_wgl.h	/^typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR, *PLAYERPLANEDESCRIPTOR, *LPLAYERPLANEDESCRIPTOR;$/;"	t	typeref:struct:tagLAYERPLANEDESCRIPTOR
LCS_ITERATOR_FINISHED	drivers/SQLite/sqlite3/sqlite3.c	127206;"	d	file:
LDACHECK	drivers/Oracle/OCI/include/ocidef.h	81;"	d
LDACHK	drivers/Oracle/OCI/include/ocidef.h	317;"	d
LDAFLG	drivers/Oracle/OCI/include/ocidef.h	105;"	d
LDAFLO	drivers/Oracle/OCI/include/ocidef.h	106;"	d
LDANBL	drivers/Oracle/OCI/include/ocidef.h	107;"	d
LDELIM_BOX	drivers/PostgreSQL/TePGUtils.h	50;"	d
LDELIM_LINESTRING	drivers/PostgreSQL/TePGUtils.h	44;"	d
LDELIM_PGGEOMPOLYGON	drivers/PostgreSQL/TePGUtils.h	54;"	d
LDELIM_POINT	drivers/PostgreSQL/TePGUtils.h	41;"	d
LDELIM_POLYGON	drivers/PostgreSQL/TePGUtils.h	47;"	d
LEGEND	drivers/qt/TeQtCheckListItem.h	/^	enum ItemType {DATABASE, INFOLAYER, VIEW, THEME, LEGENDTITLE, LEGEND, CHARTTITLE, CHART};$/;"	e	enum:TeQtCheckListItem::ItemType
LEGEND	kernel/TePieBar.h	/^	enum			TePieBarInput {ALL, TABSEL, QUERYSEL, LEGEND, NOTTABSEL, NOTQUERYSEL, NOTLEGEND};$/;"	e	enum:TePieBar::TePieBarInput
LEGENDTITLE	drivers/qt/TeQtCheckListItem.h	/^	enum ItemType {DATABASE, INFOLAYER, VIEW, THEME, LEGENDTITLE, LEGEND, CHARTTITLE, CHART};$/;"	e	enum:TeQtCheckListItem::ItemType
LEN_PCTX	drivers/Oracle/OCI/include/cdemodp0.h	63;"	d
LIKEFUNC	drivers/SQLite/sqlite3/sqlite3.c	9744;"	d	file:
LINES_DELIM	drivers/PostgreSQL/TePGUtils.h	39;"	d
LINE_IS_NOT_RING	kernel/TeErrorLog.h	/^    LINE_IS_NOT_RING,$/;"	e	enum:TeErrorType
LL2PC	kernel/TeProjection.cpp	/^TeAlbers :: LL2PC (const TeCoord2D& ptll)$/;"	f	class:TeAlbers
LL2PC	kernel/TeProjection.cpp	/^TeCylindricalEquidistant :: LL2PC (const TeCoord2D& ptll)$/;"	f	class:TeCylindricalEquidistant
LL2PC	kernel/TeProjection.cpp	/^TeLambertConformal :: LL2PC (const TeCoord2D& ptll)$/;"	f	class:TeLambertConformal
LL2PC	kernel/TeProjection.cpp	/^TeLatLong :: LL2PC (const TeCoord2D& ptll)$/;"	f	class:TeLatLong
LL2PC	kernel/TeProjection.cpp	/^TeLatLong :: LL2PC (double xi, double yi, double& xo, double& yo) const$/;"	f	class:TeLatLong
LL2PC	kernel/TeProjection.cpp	/^TeMercator :: LL2PC (const TeCoord2D& ptll)$/;"	f	class:TeMercator
LL2PC	kernel/TeProjection.cpp	/^TeMiller :: LL2PC (const TeCoord2D& ptll)$/;"	f	class:TeMiller
LL2PC	kernel/TeProjection.cpp	/^TePolarStereographic :: LL2PC (const TeCoord2D& ptll)$/;"	f	class:TePolarStereographic
LL2PC	kernel/TeProjection.cpp	/^TePolarStereographic :: LL2PC (double xi, double yi, double& xo, double& yo) const$/;"	f	class:TePolarStereographic
LL2PC	kernel/TeProjection.cpp	/^TePolyconic :: LL2PC (const TeCoord2D& ptll)$/;"	f	class:TePolyconic
LL2PC	kernel/TeProjection.cpp	/^TeSatelliteProjection::LL2PC(const TeCoord2D& ptll)$/;"	f	class:TeSatelliteProjection
LL2PC	kernel/TeProjection.cpp	/^TeSinusoidal :: LL2PC (const TeCoord2D& ptll)$/;"	f	class:TeSinusoidal
LL2PC	kernel/TeProjection.cpp	/^TeUtm :: LL2PC (const TeCoord2D& ptll)$/;"	f	class:TeUtm
LL2PC	kernel/TeProjection.cpp	/^TeVirtualEarthMercator :: LL2PC (const TeCoord2D& ptll)$/;"	f	class:TeVirtualEarthMercator
LL2PC	kernel/TeProjection.cpp	/^void TePolarStereographic :: LL2PC (ostream& java) const $/;"	f	class:TePolarStereographic
LL2PC	kernel/TeProjection.h	/^		virtual TeCoord2D LL2PC(const TeCoord2D& p) { return p; }$/;"	f	class:TeNoProjection
LL2PC	kernel/TeProjection.h	/^	virtual	void	  LL2PC (ostream&) const {} \/\/FAMI$/;"	f	class:TeProjection
LL2PC	kernel/TeProjection.h	/^	virtual	void LL2PC (double, double, double&, double&) const {printf("\\nWRONG"); return;} \/\/FAMI$/;"	f	class:TeProjection
LOAD	kernel/TeGraph.cpp	71;"	d	file:
LOAD_ERROR	drivers/Oracle/OCI/include/cdemodp0.h	86;"	d
LOAD_NEED_DATA	drivers/Oracle/OCI/include/cdemodp0.h	87;"	d
LOAD_NO_DATA	drivers/Oracle/OCI/include/cdemodp0.h	88;"	d
LOAD_SUCCESS	drivers/Oracle/OCI/include/cdemodp0.h	85;"	d
LOCKFILE_FAIL_IMMEDIATELY	drivers/SQLite/sqlite3/sqlite3.c	32918;"	d	file:
LOCK_DELAYED	drivers/Oracle/OCI/include/occiControl.h	/^          ,LOCK_DELAYED = OCI_LOCK_DELAYED  $/;"	e	enum:oracle::occi::MetaData::__anon89
LOCK_IMMEDIATE	drivers/Oracle/OCI/include/occiControl.h	/^          ,LOCK_IMMEDIATE = OCI_LOCK_IMMEDIATE$/;"	e	enum:oracle::occi::MetaData::__anon89
LOCK_TIMEOUT	drivers/SQLite/sqlite3/sqlite3.c	22547;"	d	file:
LOGMAX	drivers/SQLite/sqlite3/sqlite3.c	16343;"	d	file:
LOG_MESSAGE	kernel/TeErrorLog.h	/^	LOG_MESSAGE,$/;"	e	enum:TeErrorType
LONGDOUBLE_TYPE	drivers/SQLite/sqlite3/sqlite3.c	7616;"	d	file:
LONGDOUBLE_TYPE	drivers/SQLite/sqlite3/sqlite3.c	7728;"	d	file:
LPGLYPHMETRICSFLOAT	drivers/GL/glut.h	/^typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT, *PGLYPHMETRICSFLOAT, *LPGLYPHMETRICSFLOAT;$/;"	t	typeref:struct:
LPGLYPHMETRICSFLOAT	drivers/GL/mesa_wgl.h	/^typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT, *PGLYPHMETRICSFLOAT, *LPGLYPHMETRICSFLOAT;$/;"	t	typeref:struct:
LPLAYERPLANEDESCRIPTOR	drivers/GL/glut.h	/^typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR, *PLAYERPLANEDESCRIPTOR, *LPLAYERPLANEDESCRIPTOR;$/;"	t	typeref:struct:
LPLAYERPLANEDESCRIPTOR	drivers/GL/mesa_wgl.h	/^typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR, *PLAYERPLANEDESCRIPTOR, *LPLAYERPLANEDESCRIPTOR;$/;"	t	typeref:struct:
LPPIXELFORMATDESCRIPTOR	drivers/GL/mesa_wgl.h	/^typedef struct tagPIXELFORMATDESCRIPTOR PIXELFORMATDESCRIPTOR, *PPIXELFORMATDESCRIPTOR, *LPPIXELFORMATDESCRIPTOR;$/;"	t	typeref:struct:
LUT2ThreeBand	kernel/TeRasterTransform.h	/^	void LUT2ThreeBand(double icol, double ilin, double ocol, double olin)$/;"	f	class:TeRasterTransform
LWOutRemotion	kernel/TeGTParams.h	/^        LWOutRemotion,$/;"	e	enum:TeGTParams::OutRemStrategy
Label	stat/TeSkaterGrafo.h	/^      char Label[50];$/;"	m	struct:TSkaterGrafo::No_Grafo
Labels	kernel/TeGraph.h	/^} Labels;$/;"	t	typeref:struct:__anon27
Last	kernel/TeRedBlackTree.h	/^			NODE* Last(void) const$/;"	f	class:TeREDBLACK::TeRBTree
LcsIterator	drivers/SQLite/sqlite3/sqlite3.c	/^struct LcsIterator {$/;"	s	file:
LcsIterator	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct LcsIterator LcsIterator;$/;"	t	typeref:struct:LcsIterator	file:
Lda_Def	drivers/Oracle/OCI/include/ocidfn.h	/^typedef struct cda_def Lda_Def;$/;"	t	typeref:struct:cda_def
LeftRotate	kernel/TeRedBlackTree.h	/^			virtual void LeftRotate(NODE* x, NODE*& root)$/;"	f	class:TeREDBLACK::TeRBTree
LikeOp	drivers/SQLite/sqlite3/sqlite3.c	/^struct LikeOp {$/;"	s	file:
LimitVal	drivers/SQLite/sqlite3/sqlite3.c	/^struct LimitVal {$/;"	s	file:
LinMax_	image_processing/TePDIRegGrowSeg.hpp	/^        int             LinMax_;$/;"	m	class:TePDIRGSCell
LinMin_	image_processing/TePDIRegGrowSeg.hpp	/^        int             LinMin_;$/;"	m	class:TePDIRGSCell
LineMax	image_processing/TePDIRegGrowSeg.hpp	/^   int LineMax () { return LinMax_;}$/;"	f	class:TePDIRGSCell
LineToVariant	drivers/ado/TeAdoDB.cpp	/^TeAdo::LineToVariant(VARIANT &varArray, TeLine2D& line)$/;"	f	class:TeAdo
LinearPickNext	drivers/SQLite/sqlite3/sqlite3.c	/^static RtreeCell *LinearPickNext($/;"	f	file:
LinearPickSeeds	drivers/SQLite/sqlite3/sqlite3.c	/^static void LinearPickSeeds($/;"	f	file:
LinearRingToVariant	drivers/ado/TeAdoDB.cpp	/^TeAdo::LinearRingToVariant(VARIANT &varArray, TeLinearRing& ring)$/;"	f	class:TeAdo
List	drivers/Firebird/ibpp/core/events.cpp	/^void EventsImpl::List(std::vector<std::string>& events)$/;"	f	class:EventsImpl
ListCell_	image_processing/TePDIRegGrowSeg.hpp	/^      TePDIRGSCellList        *ListCell_;$/;"	m	class:TePDIRegGrowSeg
ListNode	kernel/TeTempFilesRemover.h	/^      struct ListNode$/;"	s	class:TeTempFilesRemover
Lista	stat/lista.h	/^    Lista_ptr Lista;$/;"	m	class:TListaVizinho
ListaH	stat/lista.h	2;"	d
ListaVizinho	stat/lista.h	/^    typedef struct ListaVizinho{$/;"	s	class:TListaVizinho
Lista_ptr	stat/lista.h	/^      }Lista_t, *Lista_ptr;$/;"	t	class:TListaVizinho	typeref:struct:TListaVizinho::ListaVizinho
Lista_t	stat/lista.h	/^      }Lista_t, *Lista_ptr;$/;"	t	class:TListaVizinho	typeref:struct:TListaVizinho::ListaVizinho
Listener	drivers/Oracle/OCI/include/occiAQ.h	/^class Listener$/;"	c	namespace:oracle::occi::aq
LizardTech	drivers/MrSID/TeMrSID.h	/^namespace LizardTech$/;"	n
Load	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::Load(std::string& data)$/;"	f	class:BlobImpl
LoadDoclistCtx	drivers/SQLite/sqlite3/sqlite3.c	/^struct LoadDoclistCtx {$/;"	s	file:
LoadDoclistCtx	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct LoadDoclistCtx LoadDoclistCtx;$/;"	t	typeref:struct:LoadDoclistCtx	file:
LoadImageParams	image_processing/TePDIMMIOMatching.hpp	/^          LoadImageParams()$/;"	f	class:TePDIMMIOMatching::LoadImageParams
LoadImageParams	image_processing/TePDIMMIOMatching.hpp	/^      class PDI_DLL LoadImageParams$/;"	c	class:TePDIMMIOMatching
LobOpenMode	drivers/Oracle/OCI/include/occiCommon.h	/^enum LobOpenMode$/;"	g	namespace:oracle::occi
Locations	drivers/Oracle/OCI/include/odci.h	/^   OCIInd Locations;$/;"	m	struct:ODCIExtTableInfo_ind
Locations	drivers/Oracle/OCI/include/odci.h	/^   ODCIArgDescList* Locations;$/;"	m	struct:ODCIExtTableInfo
LockFile	drivers/SQLite/sqlite3/sqlite3.c	32328;"	d	file:
LockFileEx	drivers/SQLite/sqlite3/sqlite3.c	32330;"	d	file:
LockOption	drivers/Oracle/OCI/include/occiObjects.h	/^        enum LockOption {OCCI_LOCK_WAIT, OCCI_LOCK_NOWAIT};$/;"	g	class:oracle::occi::PObject
LockOptions	drivers/Oracle/OCI/include/occiCommon.h	/^enum LockOptions {OCCI_LOCK_NONE = OCI_LOCK_NONE,$/;"	g	namespace:oracle::occi
LogicException	drivers/Firebird/ibpp/core/ibpp.h	/^	class LogicException : public Exception$/;"	c	namespace:IBPP
LogicExceptionImpl	drivers/Firebird/ibpp/core/_ibpp.h	/^class LogicExceptionImpl : public IBPP::LogicException, public ExceptionBase$/;"	c	namespace:ibpp_internals
LogicExceptionImpl	drivers/Firebird/ibpp/core/exception.cpp	/^LogicExceptionImpl::LogicExceptionImpl() throw()$/;"	f	class:LogicExceptionImpl
LogicExceptionImpl	drivers/Firebird/ibpp/core/exception.cpp	/^LogicExceptionImpl::LogicExceptionImpl(const LogicExceptionImpl& copied) throw()$/;"	f	class:LogicExceptionImpl
LogicExceptionImpl	drivers/Firebird/ibpp/core/exception.cpp	/^LogicExceptionImpl::LogicExceptionImpl(const std::string& context,$/;"	f	class:LogicExceptionImpl
LookAtInnerRings	kernel/TeGeometryAlgorithms.cpp	/^short LookAtInnerRings(const TeLinearRing& rRed, const TePolygon& pBlue, vector<TeLinearRing>& rings, short& rel)$/;"	f
Lookaside	drivers/SQLite/sqlite3/sqlite3.c	/^struct Lookaside {$/;"	s	file:
Lookaside	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Lookaside Lookaside;$/;"	t	typeref:struct:Lookaside	file:
LookasideSlot	drivers/SQLite/sqlite3/sqlite3.c	/^struct LookasideSlot {$/;"	s	file:
LookasideSlot	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct LookasideSlot LookasideSlot;$/;"	t	typeref:struct:LookasideSlot	file:
M	drivers/SQLite/sqlite3/sqlite3.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
M	image_processing/TePDIEMClas.hpp	/^      int M;$/;"	m	class:TePDIEMClas
MAIN_COL	kernel/TeGraph.cpp	66;"	d	file:
MAIN_ROW	kernel/TeGraph.cpp	65;"	d	file:
MANGLE	drivers/GL/gl_mangle.h	27;"	d
MASK	kernel/yyTemporal.cpp	93;"	d	file:
MASK	kernel/yyTemporal.h	32;"	d
MASK_SIZE	kernel/TeGraph.cpp	68;"	d	file:
MASTER_NAME	drivers/SQLite/sqlite3/sqlite3.c	7834;"	d	file:
MASTER_ROOT	drivers/SQLite/sqlite3/sqlite3.c	7840;"	d	file:
MAX	drivers/Firebird/TeFirebird.cpp	31;"	d	file:
MAX	drivers/MySQL/TeMySQL.cpp	60;"	d	file:
MAX	drivers/SQLite/sqlite3/sqlite3.c	128140;"	d	file:
MAX	kernel/TeDefines.h	135;"	d
MAXCHARNUM	drivers/shapelib/TeDriverSHPDBF.cpp	/^const int MAXCHARNUM = 66540;$/;"	v
MAXCHARNUM	functions/TeImportMIF.cpp	/^const int MAXCHARNUM = 66560;$/;"	v
MAXCLOSECELLS	image_processing/TePDIRegGrowSeg.hpp	34;"	d
MAXDATEFIELDS	drivers/PostgreSQL/TePGInterface.cpp	202;"	d	file:
MAXDATELEN	drivers/PostgreSQL/TePGInterface.cpp	201;"	d	file:
MAXDIRNAMELEN	drivers/Oracle/OCI/include/occiData.h	/^    enum {MAXDIRNAMELEN = 32, MAXFILENAMELEN = 256};$/;"	e	enum:oracle::occi::Bfile::__anon80
MAXEB1MINVAL	drivers/Oracle/OCI/include/oratypes.h	139;"	d
MAXEB2MINVAL	drivers/Oracle/OCI/include/oratypes.h	143;"	d
MAXEB4MINVAL	drivers/Oracle/OCI/include/oratypes.h	147;"	d
MAXEVENTNAMELEN	drivers/Firebird/ibpp/core/_ibpp.h	/^	static const size_t MAXEVENTNAMELEN;$/;"	m	class:ibpp_internals::EventsImpl
MAXEVENTNAMELEN	drivers/Firebird/ibpp/core/events.cpp	/^const size_t EventsImpl::MAXEVENTNAMELEN = 127;$/;"	m	class:EventsImpl	file:
MAXEWORDMINVAL	drivers/Oracle/OCI/include/oratypes.h	208;"	d
MAXFILENAMELEN	drivers/Oracle/OCI/include/occiData.h	/^    enum {MAXDIRNAMELEN = 32, MAXFILENAMELEN = 256};$/;"	e	enum:oracle::occi::Bfile::__anon80
MAXORASB8MINVAL	drivers/Oracle/OCI/include/oratypes.h	111;"	d
MAXORAUB8MINVAL	drivers/Oracle/OCI/include/oratypes.h	109;"	d
MAXSB1MINVAL	drivers/Oracle/OCI/include/oratypes.h	47;"	d
MAXSB2MINVAL	drivers/Oracle/OCI/include/oratypes.h	67;"	d
MAXSB4MINVAL	drivers/Oracle/OCI/include/oratypes.h	86;"	d
MAXSBIG_ORAMINVAL	drivers/Oracle/OCI/include/oratypes.h	232;"	d
MAXSBIG_ORAMINVAL	drivers/Oracle/OCI/include/oratypes.h	251;"	d
MAXSWORDMINVAL	drivers/Oracle/OCI/include/oratypes.h	212;"	d
MAXUB1MINVAL	drivers/Oracle/OCI/include/oratypes.h	45;"	d
MAXUB2MINVAL	drivers/Oracle/OCI/include/oratypes.h	65;"	d
MAXUB4MINVAL	drivers/Oracle/OCI/include/oratypes.h	84;"	d
MAXUBIG_ORAMINVAL	drivers/Oracle/OCI/include/oratypes.h	230;"	d
MAXUBIG_ORAMINVAL	drivers/Oracle/OCI/include/oratypes.h	249;"	d
MAXUWORDMINVAL	drivers/Oracle/OCI/include/oratypes.h	210;"	d
MAX_6BYTE	drivers/SQLite/sqlite3/sqlite3.c	60763;"	d	file:
MAX_BLOB_LENGTH	drivers/Oracle/TeOCICursor.h	47;"	d
MAX_FLT	image_processing/TePDIBaatz.cpp	1;"	d	file:
MAX_ITEMS	kernel/TeGraph.cpp	67;"	d	file:
MAX_ITERATIONS	image_processing/TePDIEMClas.hpp	/^      int MAX_ITERATIONS;$/;"	m	class:TePDIEMClas
MAX_PATHNAME	drivers/SQLite/sqlite3/sqlite3.c	24572;"	d	file:
MAX_ROWID	drivers/SQLite/sqlite3/sqlite3.c	67272;"	d	file:
MAX_ROWS	drivers/Oracle/TeOCICursor.h	44;"	d
MAX_SECTOR_SIZE	drivers/SQLite/sqlite3/sqlite3.c	37752;"	d	file:
MAX_STEPS	image_processing/TePDIBaatz.hpp	29;"	d
MEM5LINK	drivers/SQLite/sqlite3/sqlite3.c	16406;"	d	file:
MEMCELLSIZE	drivers/SQLite/sqlite3/sqlite3.c	57628;"	d	file:
MEMDB	drivers/SQLite/sqlite3/sqlite3.c	38077;"	d	file:
MEMDB	drivers/SQLite/sqlite3/sqlite3.c	38079;"	d	file:
MEMTYPE_DB	drivers/SQLite/sqlite3/sqlite3.c	11950;"	d	file:
MEMTYPE_HEAP	drivers/SQLite/sqlite3/sqlite3.c	11946;"	d	file:
MEMTYPE_LOOKASIDE	drivers/SQLite/sqlite3/sqlite3.c	11947;"	d	file:
MEMTYPE_PCACHE	drivers/SQLite/sqlite3/sqlite3.c	11949;"	d	file:
MEMTYPE_SCRATCH	drivers/SQLite/sqlite3/sqlite3.c	11948;"	d	file:
MEM_Agg	drivers/SQLite/sqlite3/sqlite3.c	12791;"	d	file:
MEM_Blob	drivers/SQLite/sqlite3/sqlite3.c	12776;"	d	file:
MEM_Dyn	drivers/SQLite/sqlite3/sqlite3.c	12788;"	d	file:
MEM_Ephem	drivers/SQLite/sqlite3/sqlite3.c	12790;"	d	file:
MEM_Frame	drivers/SQLite/sqlite3/sqlite3.c	12778;"	d	file:
MEM_Int	drivers/SQLite/sqlite3/sqlite3.c	12774;"	d	file:
MEM_Invalid	drivers/SQLite/sqlite3/sqlite3.c	12779;"	d	file:
MEM_Null	drivers/SQLite/sqlite3/sqlite3.c	12772;"	d	file:
MEM_Real	drivers/SQLite/sqlite3/sqlite3.c	12775;"	d	file:
MEM_RowSet	drivers/SQLite/sqlite3/sqlite3.c	12777;"	d	file:
MEM_Static	drivers/SQLite/sqlite3/sqlite3.c	12789;"	d	file:
MEM_Str	drivers/SQLite/sqlite3/sqlite3.c	12773;"	d	file:
MEM_Term	drivers/SQLite/sqlite3/sqlite3.c	12787;"	d	file:
MEM_TypeMask	drivers/SQLite/sqlite3/sqlite3.c	12780;"	d	file:
MEM_Zero	drivers/SQLite/sqlite3/sqlite3.c	12792;"	d	file:
MEM_Zero	drivers/SQLite/sqlite3/sqlite3.c	12794;"	d	file:
MEM_Zero	drivers/SQLite/sqlite3/sqlite3.c	12795;"	d	file:
METHODDEF	drivers/libjpeg/jmemdst.c	/^METHODDEF(boolean)$/;"	f
METHODDEF	drivers/libjpeg/jmemsrc.c	/^METHODDEF(boolean)$/;"	f
MIFCodeMap	functions/TeMIFProjection.cpp	/^typedef map<int, string> MIFCodeMap;$/;"	t	file:
MIF_CONVERSION_ERROR	kernel/TeErrorLog.h	/^    MIF_CONVERSION_ERROR,$/;"	e	enum:TeErrorType
MIF_REGION_CLOSE	kernel/TeErrorLog.h	/^    MIF_REGION_CLOSE,$/;"	e	enum:TeErrorType
MIN	drivers/Firebird/TeFirebird.cpp	34;"	d	file:
MIN	drivers/MySQL/TeMySQL.cpp	63;"	d	file:
MIN	drivers/SQLite/sqlite3/sqlite3.c	114458;"	d	file:
MIN	drivers/SQLite/sqlite3/sqlite3.c	128143;"	d	file:
MIN	drivers/SQLite/sqlite3/sqlite3.c	56325;"	d	file:
MIN	drivers/SQLite/sqlite3/sqlite3.c	71328;"	d	file:
MIN	kernel/TeDefines.h	139;"	d
MINEB1MAXVAL	drivers/Oracle/OCI/include/oratypes.h	138;"	d
MINEB2MAXVAL	drivers/Oracle/OCI/include/oratypes.h	142;"	d
MINEB4MAXVAL	drivers/Oracle/OCI/include/oratypes.h	146;"	d
MINEWORDMAXVAL	drivers/Oracle/OCI/include/oratypes.h	207;"	d
MINORASB8MAXVAL	drivers/Oracle/OCI/include/oratypes.h	112;"	d
MINORAUB8MAXVAL	drivers/Oracle/OCI/include/oratypes.h	110;"	d
MINSB1MAXVAL	drivers/Oracle/OCI/include/oratypes.h	46;"	d
MINSB2MAXVAL	drivers/Oracle/OCI/include/oratypes.h	66;"	d
MINSB4MAXVAL	drivers/Oracle/OCI/include/oratypes.h	85;"	d
MINSBIG_ORAMAXVAL	drivers/Oracle/OCI/include/oratypes.h	231;"	d
MINSBIG_ORAMAXVAL	drivers/Oracle/OCI/include/oratypes.h	250;"	d
MINSIZE_TMAXVAL	drivers/Oracle/OCI/include/oratypes.h	284;"	d
MINSWORDMAXVAL	drivers/Oracle/OCI/include/oratypes.h	211;"	d
MINUB1MAXVAL	drivers/Oracle/OCI/include/oratypes.h	44;"	d
MINUB2MAXVAL	drivers/Oracle/OCI/include/oratypes.h	64;"	d
MINUB4MAXVAL	drivers/Oracle/OCI/include/oratypes.h	83;"	d
MINUBIG_ORAMAXVAL	drivers/Oracle/OCI/include/oratypes.h	229;"	d
MINUBIG_ORAMAXVAL	drivers/Oracle/OCI/include/oratypes.h	248;"	d
MINUWORDMAXVAL	drivers/Oracle/OCI/include/oratypes.h	209;"	d
MODE_Column	drivers/SQLite/sqlite3/shell.c	442;"	d	file:
MODE_Csv	drivers/SQLite/sqlite3/shell.c	448;"	d	file:
MODE_Explain	drivers/SQLite/sqlite3/shell.c	449;"	d	file:
MODE_Html	drivers/SQLite/sqlite3/shell.c	445;"	d	file:
MODE_Insert	drivers/SQLite/sqlite3/shell.c	446;"	d	file:
MODE_Line	drivers/SQLite/sqlite3/shell.c	441;"	d	file:
MODE_List	drivers/SQLite/sqlite3/shell.c	443;"	d	file:
MODE_Semi	drivers/SQLite/sqlite3/shell.c	444;"	d	file:
MODE_Tcl	drivers/SQLite/sqlite3/shell.c	447;"	d	file:
MSG_EXPIRED	drivers/Oracle/OCI/include/occiAQ.h	/^        MSG_EXPIRED = OCI_MSG_EXPIRED$/;"	e	enum:oracle::occi::aq::Message::MessageState
MSG_PROCESSED	drivers/Oracle/OCI/include/occiAQ.h	/^        MSG_PROCESSED = OCI_MSG_PROCESSED,$/;"	e	enum:oracle::occi::aq::Message::MessageState
MSG_READY	drivers/Oracle/OCI/include/occiAQ.h	/^        MSG_READY = OCI_MSG_READY,$/;"	e	enum:oracle::occi::aq::Message::MessageState
MSG_WAITING	drivers/Oracle/OCI/include/occiAQ.h	/^        MSG_WAITING = OCI_MSG_WAITING,$/;"	e	enum:oracle::occi::aq::Message::MessageState
MSVPdir_	stat/TeMSVFactory.h	/^	double		MSVPdir_;$/;"	m	struct:TeMSVParams
MSVPincr_	stat/TeMSVFactory.h	/^	double		MSVPincr_;$/;"	m	struct:TeMSVParams
MSVPmatrix_	stat/TeMSVFactory.h	/^	TeMatrix	MSVPmatrix_;$/;"	m	struct:TeMSVParams
MSVPnlag_	stat/TeMSVFactory.h	/^	double		MSVPnlag_;$/;"	m	struct:TeMSVParams
MSVPtoldir_	stat/TeMSVFactory.h	/^	double		MSVPtoldir_;$/;"	m	struct:TeMSVParams
MSVdir_	stat/TeMSVFactory.h	/^	double		MSVdir_;$/;"	m	class:TeMSV
MSVincr_	stat/TeMSVFactory.h	/^	double		MSVincr_;$/;"	m	class:TeMSV
MSVmatrix_	stat/TeMSVFactory.h	/^	TeMatrix*	MSVmatrix_;$/;"	m	class:TeMSV
MSVnlag_	stat/TeMSVFactory.h	/^	double		MSVnlag_;		$/;"	m	class:TeMSV
MSVtoldir_	stat/TeMSVFactory.h	/^	double		MSVtoldir_;$/;"	m	class:TeMSV
MTRAND_H	utils/mtrand.h	46;"	d
MTRand	utils/mtrand.h	/^  MTRand() : MTRand_int32() {}$/;"	f	class:MTRand
MTRand	utils/mtrand.h	/^  MTRand(const unsigned long* seed, int size) : MTRand_int32(seed, size) {}$/;"	f	class:MTRand
MTRand	utils/mtrand.h	/^  MTRand(unsigned long seed) : MTRand_int32(seed) {}$/;"	f	class:MTRand
MTRand	utils/mtrand.h	/^class TLUTILS_DLL MTRand : public MTRand_int32 {$/;"	c
MTRand53	utils/mtrand.h	/^  MTRand53() : MTRand_int32() {}$/;"	f	class:MTRand53
MTRand53	utils/mtrand.h	/^  MTRand53(const unsigned long* seed, int size) : MTRand_int32(seed, size) {}$/;"	f	class:MTRand53
MTRand53	utils/mtrand.h	/^  MTRand53(unsigned long seed) : MTRand_int32(seed) {}$/;"	f	class:MTRand53
MTRand53	utils/mtrand.h	/^class TLUTILS_DLL MTRand53 : public MTRand_int32 {$/;"	c
MTRand_closed	utils/mtrand.h	/^  MTRand_closed() : MTRand_int32() {}$/;"	f	class:MTRand_closed
MTRand_closed	utils/mtrand.h	/^  MTRand_closed(const unsigned long* seed, int size) : MTRand_int32(seed, size) {}$/;"	f	class:MTRand_closed
MTRand_closed	utils/mtrand.h	/^  MTRand_closed(unsigned long seed) : MTRand_int32(seed) {}$/;"	f	class:MTRand_closed
MTRand_closed	utils/mtrand.h	/^class TLUTILS_DLL MTRand_closed : public MTRand_int32 {$/;"	c
MTRand_int32	utils/mtrand.h	/^  MTRand_int32() { if (!init) seed(5489UL); init = true; }$/;"	f	class:MTRand_int32
MTRand_int32	utils/mtrand.h	/^  MTRand_int32(const unsigned long* array, int size) { seed(array, size); init = true; }$/;"	f	class:MTRand_int32
MTRand_int32	utils/mtrand.h	/^  MTRand_int32(unsigned long s) { seed(s); init = true; }$/;"	f	class:MTRand_int32
MTRand_int32	utils/mtrand.h	/^class TLUTILS_DLL MTRand_int32 { \/\/ Mersenne Twister random number generator$/;"	c
MTRand_open	utils/mtrand.h	/^  MTRand_open() : MTRand_int32() {}$/;"	f	class:MTRand_open
MTRand_open	utils/mtrand.h	/^  MTRand_open(const unsigned long* seed, int size) : MTRand_int32(seed, size) {}$/;"	f	class:MTRand_open
MTRand_open	utils/mtrand.h	/^  MTRand_open(unsigned long seed) : MTRand_int32(seed) {}$/;"	f	class:MTRand_open
MTRand_open	utils/mtrand.h	/^class TLUTILS_DLL MTRand_open : public MTRand_int32 {$/;"	c
MTableName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd MTableName;$/;"	m	struct:ODCIExtTableInfo_ind
MTableName	drivers/Oracle/OCI/include/odci.h	/^   OCIString*       MTableName;$/;"	m	struct:ODCIExtTableInfo
MTableSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIInd MTableSchema;$/;"	m	struct:ODCIExtTableInfo_ind
MTableSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIString*       MTableSchema;$/;"	m	struct:ODCIExtTableInfo
MUTEX_LOGIC	drivers/SQLite/sqlite3/sqlite3.c	9335;"	d	file:
MUTEX_LOGIC	drivers/SQLite/sqlite3/sqlite3.c	9337;"	d	file:
MX_CELL	drivers/SQLite/sqlite3/sqlite3.c	47389;"	d	file:
MX_CELL_SIZE	drivers/SQLite/sqlite3/sqlite3.c	47382;"	d	file:
MX_CLOSE_ATTEMPT	drivers/SQLite/sqlite3/sqlite3.c	32666;"	d	file:
MX_SMALL	drivers/SQLite/sqlite3/sqlite3.c	15616;"	d	file:
M_PI	image_processing/TePDIColorTransform.cpp	9;"	d	file:
M_PI	image_processing/TePDIOFMatching.cpp	14;"	d	file:
M_PI_2	image_processing/TePDIOFMatching.cpp	17;"	d	file:
M_PI_4	image_processing/TePDIOFMatching.cpp	20;"	d	file:
MakeConcreteImplementation	kernel/TeProxMatrixImplementation.h	/^	static TeProxMatrixImplementation* MakeConcreteImplementation (const TeGPMImplementation& impl_type = TeGraphBreymann)$/;"	f	class:TeProxMatrixAbstractFactory
Map	drivers/Oracle/OCI/include/occiControl.h	/^class Map$/;"	c	namespace:oracle::occi
MapCoords2RasterIndexes	image_processing/TePDIUtils.cpp	/^  void MapCoords2RasterIndexes( const TeBox& box_in, $/;"	f	namespace:TePDIUtils
MapCoords2RasterIndexes	image_processing/TePDIUtils.cpp	/^  void MapCoords2RasterIndexes( const TeCoord2D& g_in, $/;"	f	namespace:TePDIUtils
MapCoords2RasterIndexes	image_processing/TePDIUtils.hpp	/^    void MapCoords2RasterIndexes( const Geometry& g_in, $/;"	f	namespace:TePDIUtils
MapMemoryPage	kernel/TeDecoderVirtualMemory.h	/^	typedef map<TeBlockIndex, TeMemoryPage*, TeBlockIndexMapFunc> MapMemoryPage; $/;"	t	class:TeDecoderVirtualMemory
MapMemoryPageIterator	kernel/TeDecoderVirtualMemory.h	/^	typedef MapMemoryPage::const_iterator MapMemoryPageIterator;$/;"	t	class:TeDecoderVirtualMemory
MapRasterIndexes2Coords	image_processing/TePDIUtils.cpp	/^  void MapRasterIndexes2Coords( const TeBox& box_in, $/;"	f	namespace:TePDIUtils
MapRasterIndexes2Coords	image_processing/TePDIUtils.cpp	/^  void MapRasterIndexes2Coords( const TeCoord2D& g_in, $/;"	f	namespace:TePDIUtils
MapRasterIndexes2Coords	image_processing/TePDIUtils.hpp	/^    void MapRasterIndexes2Coords( const Geometry& g_in, $/;"	f	namespace:TePDIUtils
Mark	stat/TeSkaterGrafo.h	/^      char Mark;$/;"	m	struct:TSkaterGrafo::No_Grafo
MaskMatrixT	image_processing/TePDIMMIOMatching.hpp	/^      typedef TePDIMatrix< unsigned char > MaskMatrixT;     $/;"	t	class:TePDIMMIOMatching
MatTransf	kernel/TeMatrix.cpp	/^TeMatrix :: MatTransf( TeMatrix& mt )$/;"	f	class:TeMatrix
MatchInfo	drivers/SQLite/sqlite3/sqlite3.c	/^struct MatchInfo {$/;"	s	file:
MatchInfo	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct MatchInfo MatchInfo;$/;"	t	typeref:struct:MatchInfo	file:
MatrixElement	kernel/TeSparseMatrix.h	/^                           ContainerType> MatrixElement;$/;"	t	class:TeSparseMatrix
MatrixElement	kernel/TeSparseMatrix.h	/^    MatrixElement(ContainerType& Cont, IndexType r, IndexType c)$/;"	f	class:MatrixElement
MatrixElement	kernel/TeSparseMatrix.h	/^class MatrixElement$/;"	c
MaxDate	drivers/Firebird/ibpp/core/ibpp.h	/^	const int MaxDate = 2958464;	\/\/ 31 DEC 9999$/;"	m	namespace:IBPP
MaxDoP	drivers/Oracle/OCI/include/odci.h	/^   OCIInd MaxDoP;$/;"	m	struct:ODCIExtTableInfo_ind
MaxDoP	drivers/Oracle/OCI/include/odci.h	/^   OCIInd MaxDoP;$/;"	m	struct:ODCIExtTableQCInfo_ind
MaxDoP	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        MaxDoP;$/;"	m	struct:ODCIExtTableInfo
MaxDoP	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        MaxDoP;$/;"	m	struct:ODCIExtTableQCInfo
MaxX	stat/TeSkaterGrafo.h	/^ double MaxX() {return X_max;}$/;"	f	class:TSkaterGrafo
MaxY	stat/TeSkaterGrafo.h	/^ double MaxY() {return Y_max;}$/;"	f	class:TSkaterGrafo
MaximasListNodeT	image_processing/TePDIMMIOMatching.hpp	/^      struct MaximasListNodeT$/;"	s	class:TePDIMMIOMatching
MaximasListT	image_processing/TePDIMMIOMatching.hpp	/^      typedef std::list< MaximasListNodeT > MaximasListT;$/;"	t	class:TePDIMMIOMatching
MaximasMapNodeT	image_processing/TePDIMMIOMatching.hpp	/^      typedef std::pair< unsigned int, unsigned int > MaximasMapNodeT;      $/;"	t	class:TePDIMMIOMatching
MaximasMapT	image_processing/TePDIMMIOMatching.hpp	/^      typedef std::multimap< double, MaximasMapNodeT > MaximasMapT;      $/;"	t	class:TePDIMMIOMatching
MayTouches	kernel/TeGeometryAlgorithms.cpp	/^bool MayTouches(const TeLine2D& lRed, const TeLine2D& lBlue, TeINTERSECTOR2::TeVectorBoundaryIP& report)$/;"	f
Mean	image_processing/TePDICluster.cpp	/^double TePDICluster::Mean(int ind)$/;"	f	class:TePDICluster
Mean	image_processing/TePDIEspecData.cpp	/^float TePDIEspecData::Mean(int i)const$/;"	f	class:TePDIEspecData
Mean	image_processing/TePDIRegion.cpp	/^double TePDIRegion::Mean(int ind)$/;"	f	class:TePDIRegion
MeanBlendMethod	image_processing/TePDIBlender.hpp	/^        MeanBlendMethod = 2,        $/;"	e	enum:TePDIBlender::BlendMethod
MeanPreProcessing	image_processing/TePDIGeneralizedIHSFusion.hpp	/^        MeanPreProcessing = 2$/;"	e	enum:TePDIGeneralizedIHSFusion::PreProcessingType
Media_	image_processing/TePDIRegGrowSeg.hpp	/^        float           *Media_;$/;"	m	class:TePDIRGSCell
Mem	drivers/SQLite/sqlite3/sqlite3.c	/^struct Mem {$/;"	s	file:
Mem	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Mem Mem;$/;"	t	typeref:struct:Mem	file:
Mem0Global	drivers/SQLite/sqlite3/sqlite3.c	/^static SQLITE_WSD struct Mem0Global {$/;"	s	file:
Mem3Block	drivers/SQLite/sqlite3/sqlite3.c	/^struct Mem3Block {$/;"	s	file:
Mem3Block	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Mem3Block Mem3Block;$/;"	t	typeref:struct:Mem3Block	file:
Mem3Global	drivers/SQLite/sqlite3/sqlite3.c	/^static SQLITE_WSD struct Mem3Global {$/;"	s	file:
Mem5Global	drivers/SQLite/sqlite3/sqlite3.c	/^static SQLITE_WSD struct Mem5Global {$/;"	s	file:
Mem5Link	drivers/SQLite/sqlite3/sqlite3.c	/^struct Mem5Link {$/;"	s	file:
Mem5Link	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Mem5Link Mem5Link;$/;"	t	typeref:struct:Mem5Link	file:
MemBlockHdr	drivers/SQLite/sqlite3/sqlite3.c	/^struct MemBlockHdr {$/;"	s	file:
MemJournal	drivers/SQLite/sqlite3/sqlite3.c	/^struct MemJournal {$/;"	s	file:
MemJournal	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct MemJournal MemJournal;$/;"	t	typeref:struct:MemJournal	file:
MemJournalMethods	drivers/SQLite/sqlite3/sqlite3.c	/^static const struct sqlite3_io_methods MemJournalMethods = {$/;"	v	typeref:struct:sqlite3_io_methods	file:
MemPage	drivers/SQLite/sqlite3/sqlite3.c	/^struct MemPage {$/;"	s	file:
MemPage	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct MemPage MemPage;$/;"	t	typeref:struct:MemPage	file:
MemReleaseExt	drivers/SQLite/sqlite3/sqlite3.c	12983;"	d	file:
MemSetTypeFlag	drivers/SQLite/sqlite3/sqlite3.c	12801;"	d	file:
MemoryPolicy	image_processing/TePDIMatrix.hpp	/^      enum MemoryPolicy $/;"	g	class:TePDIMatrix
MemoryPolicy	image_processing/TePDIMtxDoubleAdpt.hpp	/^      typedef typename TePDIMatrix< T >::MemoryPolicy MemoryPolicy;$/;"	t	class:TePDIMtxDoubleAdpt
MemoryPolicy	kernel/TeRasterMemManager.h	/^      enum MemoryPolicy {$/;"	g	class:TeRasterMemManager
Merge	image_processing/TePDICluster.cpp	/^void TePDICluster::Merge(TePDICluster clu)$/;"	f	class:TePDICluster
Merge	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRGSCell :: Merge( TePDIRGSCell *c )$/;"	f	class:TePDIRGSCell
MergeCells	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRegGrowSeg :: MergeCells( TePDIRGSCell *c1, TePDIRGSCell *c2 )$/;"	f	class:TePDIRegGrowSeg
MergeClusters	image_processing/TePDIIsosegClas.cpp	/^bool TePDIIsosegClas::MergeClusters()$/;"	f	class:TePDIIsosegClas
MergeMutuallyClosestCells	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRegGrowSeg::MergeMutuallyClosestCells() {$/;"	f	class:TePDIRegGrowSeg
MergeSimilarCells	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRegGrowSeg :: MergeSimilarCells()$/;"	f	class:TePDIRegGrowSeg
MergeSmallCells	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRegGrowSeg :: MergeSmallCells( long area ,int linmax)$/;"	f	class:TePDIRegGrowSeg
MergingSegmentInfo	image_processing/TePDIParaSegRegGrowStrategy.cpp	/^TePDIParaSegRegGrowStrategy::MergingSegmentInfo::MergingSegmentInfo()$/;"	f	class:TePDIParaSegRegGrowStrategy::MergingSegmentInfo
MergingSegmentInfo	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^      class PDI_DLL MergingSegmentInfo$/;"	c	class:TePDIParaSegRegGrowStrategy
MergingSegmentInfoVecT	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^      typedef std::vector< MergingSegmentInfo >  MergingSegmentInfoVecT;       $/;"	t	class:TePDIParaSegRegGrowStrategy
Message	drivers/Oracle/OCI/include/occiAQ.h	/^class Message$/;"	c	namespace:oracle::occi::aq
MessageState	drivers/Oracle/OCI/include/occiAQ.h	/^     enum MessageState$/;"	g	class:oracle::occi::aq::Message
MetaData	drivers/Oracle/OCI/include/occiControl.h	/^class MetaData$/;"	c	namespace:oracle::occi
MethodName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd MethodName;$/;"	m	struct:ODCIFuncInfo_ind
MethodName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd MethodName;$/;"	m	struct:ODCIPredInfo_ind
MethodName	drivers/Oracle/OCI/include/odci.h	/^   OCIString* MethodName;$/;"	m	struct:ODCIFuncInfo
MethodName	drivers/Oracle/OCI/include/odci.h	/^   OCIString* MethodName;$/;"	m	struct:ODCIPredInfo
MinDate	drivers/Firebird/ibpp/core/ibpp.h	/^	const int MinDate = -693594;	\/\/  1 JAN 0001$/;"	m	namespace:IBPP
MinX	stat/TeSkaterGrafo.h	/^ double MinX() {return X_min;}$/;"	f	class:TSkaterGrafo
MinY	stat/TeSkaterGrafo.h	/^ double MinY() {return Y_min;}$/;"	f	class:TSkaterGrafo
Minimum	image_processing/TePDIRegGrowSeg.hpp	/^        Minimum( float& dist )$/;"	f	class:CloserCells
Minutes	drivers/Firebird/ibpp/core/time.cpp	/^int IBPP::Time::Minutes() const$/;"	f	class:IBPP::Time
MissingValues	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::MissingValues()$/;"	f	class:RowImpl
Mode	drivers/Oracle/OCI/include/occiControl.h	/^  enum Mode$/;"	g	class:oracle::occi::Environment
ModifyUser	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::ModifyUser(const IBPP::User& user)$/;"	f	class:ServiceImpl
Module	drivers/SQLite/sqlite3/sqlite3.c	/^struct Module {$/;"	s	file:
Module	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Module Module;$/;"	t	typeref:struct:Module	file:
Mono2LUT	kernel/TeRasterTransform.h	/^	void Mono2LUT(double icol, double ilin, double ocol, double olin)$/;"	f	class:TeRasterTransform
Mono2ThreeBand	kernel/TeRasterTransform.h	/^	void Mono2ThreeBand(double icol, double ilin, double ocol, double olin)$/;"	f	class:TeRasterTransform
MonoBand2LUTMonoBand	kernel/TeRasterTransform.h	/^	void MonoBand2LUTMonoBand(double icol, double ilin, double ocol, double olin)$/;"	f	class:TeRasterTransform
MontaGrafo	stat/TeSkaterGrafo.h	/^TSkaterGrafo::MontaGrafo(TeSTElementSet& regSet, Matrix* proxMatrix)$/;"	f	class:TSkaterGrafo
Monta_Arvore	stat/TeSkaterArvore.cpp	/^void  TArvore::Monta_Arvore(TSkaterGrafo *Grafo){$/;"	f	class:TArvore
Month	drivers/Firebird/ibpp/core/date.cpp	/^int IBPP::Date::Month() const$/;"	f	class:IBPP::Date
MyGrafo	stat/TeSkaterGrafo.h	/^    MyGrafo_ptr MyGrafo;$/;"	m	class:TSkaterGrafo
MyGrafo_ptr	stat/TeSkaterGrafo.h	/^    }MyGrafo_t,*MyGrafo_ptr;$/;"	t	class:TSkaterGrafo	typeref:struct:TSkaterGrafo::Grafo
MyGrafo_t	stat/TeSkaterGrafo.h	/^    }MyGrafo_t,*MyGrafo_ptr;$/;"	t	class:TSkaterGrafo	typeref:struct:TSkaterGrafo::Grafo
MyHash	stat/hash.h	/^  Hash_ptr MyHash;$/;"	m	class:THash
MyHeap	stat/heap.h	/^   Heap_ptr MyHeap;$/;"	m	class:THeap
N	image_processing/TePDIEMClas.hpp	/^      int N, TOTAL_ATTRIBUTES;$/;"	m	class:TePDIEMClas
N	image_processing/TePDIRaster2Vector.cpp	38;"	d	file:
NAME	kernel/yyTemporal.cpp	91;"	d	file:
NAME	kernel/yyTemporal.h	30;"	d
NArq	stat/TeSkaterGrafo.h	/^    char *NArq;$/;"	m	class:TSkaterGrafo
NB	drivers/SQLite/sqlite3/sqlite3.c	53719;"	d	file:
NCELL	drivers/SQLite/sqlite3/sqlite3.c	128095;"	d	file:
NCSIZE	drivers/SQLite/sqlite3/sqlite3.c	15120;"	d	file:
NDEBUG	drivers/SQLite/sqlite3/sqlite3.c	114139;"	d	file:
NDEBUG	drivers/SQLite/sqlite3/sqlite3.c	114534;"	d	file:
NDEBUG	drivers/SQLite/sqlite3/sqlite3.c	127928;"	d	file:
NDEBUG	drivers/SQLite/sqlite3/sqlite3.c	445;"	d	file:
NDELAY	drivers/SQLite/sqlite3/sqlite3.c	111444;"	d	file:
NEEDS_STREAM_DATA	drivers/Oracle/OCI/include/occiControl.h	/^    NEEDS_STREAM_DATA,$/;"	e	enum:oracle::occi::Statement::Status
NEVER	drivers/SQLite/sqlite3/sqlite3.c	114511;"	d	file:
NEVER	drivers/SQLite/sqlite3/sqlite3.c	114514;"	d	file:
NEVER	drivers/SQLite/sqlite3/sqlite3.c	511;"	d	file:
NEVER	drivers/SQLite/sqlite3/sqlite3.c	514;"	d	file:
NEVER	drivers/SQLite/sqlite3/sqlite3.c	517;"	d	file:
NN	drivers/SQLite/sqlite3/sqlite3.c	53718;"	d	file:
NNMethod	image_processing/TePDIIHSWaveletFusion.hpp	/^        NNMethod = 1,$/;"	e	enum:TePDIIHSWaveletFusion::InterpMethod
NNMethod	image_processing/TePDIInterpolator.hpp	/^        NNMethod = 1,$/;"	e	enum:TePDIInterpolator::InterpMethod
NNMethod	image_processing/TePDIPCAWaveletFusion.hpp	/^        NNMethod = 1,$/;"	e	enum:TePDIPCAWaveletFusion::InterpMethod
NNMethod	image_processing/TePDIWaveletAtrousFusion.hpp	/^        NNMethod = 1,$/;"	e	enum:TePDIWaveletAtrousFusion::InterpMethod
NNMethod	image_processing/TePDIWiSpeRFusion.hpp	/^        NNMethod = 1,$/;"	e	enum:TePDIWiSpeRFusion::InterpMethod
NOMINAL	kernel/TeAttribute.h	/^{ ORDINAL, NOMINAL, RATIO, INTERVAL, CYCLIC, PROBABILITY, FUZZY };$/;"	e	enum:TeMeasurementScale
NORMALEDGE	kernel/TeTin.h	/^{ DELETEDEDGE = -1, NORMALEDGE = 0, ONCONTOUREDGE = 1, ONBREAKLINEEDGE = 2 };$/;"	e	enum:TeTinEdgeType
NORMALVERTEX	kernel/TeTin.h	/^{ DELETEDVERTEX = -1, NORMALVERTEX = 0, ONCONTOURVERTEX = 1, ONBOXVERTEX = 2, ONBREAKLINEVERTEX = 3,$/;"	e	enum:TeTinVertexType
NOT	kernel/yyTemporal.cpp	96;"	d	file:
NOT	kernel/yyTemporal.h	35;"	d
NOTLEGEND	kernel/TePieBar.h	/^	enum			TePieBarInput {ALL, TABSEL, QUERYSEL, LEGEND, NOTTABSEL, NOTQUERYSEL, NOTLEGEND};$/;"	e	enum:TePieBar::TePieBarInput
NOTQUERYSEL	kernel/TePieBar.h	/^	enum			TePieBarInput {ALL, TABSEL, QUERYSEL, LEGEND, NOTTABSEL, NOTQUERYSEL, NOTLEGEND};$/;"	e	enum:TePieBar::TePieBarInput
NOTTABSEL	kernel/TePieBar.h	/^	enum			TePieBarInput {ALL, TABSEL, QUERYSEL, LEGEND, NOTTABSEL, NOTQUERYSEL, NOTLEGEND};$/;"	e	enum:TePieBar::TePieBarInput
NOT_CSV	kernel/TeErrorLog.h	/^    NOT_CSV,$/;"	e	enum:TeErrorType
NOT_E00_FILE	kernel/TeErrorLog.h	/^    NOT_E00_FILE,$/;"	e	enum:TeErrorType
NOT_ENOUGH_ROWS	kernel/TeErrorLog.h	/^    NOT_ENOUGH_ROWS,$/;"	e	enum:TeErrorType
NOT_MIF_FILE	kernel/TeErrorLog.h	/^    NOT_MIF_FILE,$/;"	e	enum:TeErrorType
NOT_POLYGON_FILE	kernel/TeErrorLog.h	/^    NOT_POLYGON_FILE,$/;"	e	enum:TeErrorType
NOWAIT	drivers/Oracle/OCI/include/occiControl.h	/^       NOWAIT = OCI_SPOOL_ATTRVAL_NOWAIT,$/;"	e	enum:oracle::occi::StatelessConnectionPool::BusyOption
NO_AC_DDL	drivers/Oracle/OCI/include/occiControl.h	/^          ,NO_AC_DDL = OCI_NO_AC_DDL$/;"	e	enum:oracle::occi::MetaData::__anon89
NO_DATA_FOUND	drivers/Oracle/OCI/include/ocidem.h	58;"	d
NO_DATA_IN_DBF_FILE	kernel/TeErrorLog.h	/^    NO_DATA_IN_DBF_FILE,$/;"	e	enum:TeErrorType
NO_DTM_QUOTE_VALUE	kernel/TeErrorLog.h	/^    NO_DTM_QUOTE_VALUE,$/;"	e	enum:TeErrorType
NO_LOCK	drivers/SQLite/sqlite3/sqlite3.c	9139;"	d	file:
NO_SUCH_ATTRIBUTE	kernel/TeErrorLog.h	/^    NO_SUCH_ATTRIBUTE,$/;"	e	enum:TeErrorType
NO_USERCALLBACKS	drivers/Oracle/OCI/include/occiControl.h	/^    NO_USERCALLBACKS = OCI_NO_UCB,$/;"	e	enum:oracle::occi::Environment::Mode
NS_ANONYMOUS	drivers/Oracle/OCI/include/occiAQ.h	/^       NS_ANONYMOUS = OCI_SUBSCR_NAMESPACE_ANONYMOUS,$/;"	e	enum:oracle::occi::aq::Subscription::Namespace
NS_AQ	drivers/Oracle/OCI/include/occiAQ.h	/^       NS_AQ = OCI_SUBSCR_NAMESPACE_AQ$/;"	e	enum:oracle::occi::aq::Subscription::Namespace
NULL_INFO	drivers/Oracle/OCI/include/occiObjects.h	/^        enum {NULL_INFO = 0x0001, GARBAGE_COLLECTED = 0x0002,$/;"	e	enum:oracle::occi::PObject::__anon83
NULL_VALUE_RETURNED	drivers/Oracle/OCI/include/ocidem.h	60;"	d
NUMBER	kernel/yyTemporal.cpp	92;"	d	file:
NUMBER	kernel/yyTemporal.h	31;"	d
NUMBER_TYPE	drivers/Oracle/OCI/include/ocidem.h	48;"	d
NUMDATUM	kernel/TeDatum.cpp	/^const int NUMDATUM = 11; \/\/ number of pre-defined datums$/;"	v
NUMSPH	kernel/TeDatum.cpp	/^const int NUMSPH   = 10; \/\/ number of pre-defined ellipsoids$/;"	v
NUM_BANDS	image_processing/TePDIBaatz.hpp	30;"	d
NUM_DATUM	kernel/TeDatum.h	/^const int NUM_DATUM = 11; $/;"	v
NUM_MIF_DATUM	functions/TeMIFProjection.cpp	/^const int NUM_MIF_DATUM = 19;$/;"	v
NUM_MIF_PROJ	functions/TeMIFProjection.cpp	/^const int NUM_MIF_PROJ = 7;$/;"	v
NUM_MIF_UNITS	functions/TeMIFProjection.cpp	/^const int NUM_MIF_UNITS = 13;$/;"	v
NUM_OCIXMLDBPARAMS	drivers/Oracle/OCI/include/ocixmldb.h	71;"	d
NUM_PROJ	kernel/TeProjection.h	/^const int NUM_PROJ = 13;$/;"	v
NUN_BANDS_IHS	image_processing/TePDIIHSWaveletFusion.hpp	34;"	d
NViz	stat/TeSkaterGrafo.h	/^    char *NViz;$/;"	m	class:TSkaterGrafo
NW	image_processing/TePDIRaster2Vector.cpp	37;"	d	file:
NW_SUPPORTED	drivers/Oracle/OCI/include/occiControl.h	/^          ,NW_SUPPORTED = OCI_NW_SUPPORTED$/;"	e	enum:oracle::occi::MetaData::__anon89
NW_UNSUPPORTED	drivers/Oracle/OCI/include/occiControl.h	/^          ,NW_UNSUPPORTED = OCI_NW_UNSUPPORTED$/;"	e	enum:oracle::occi::MetaData::__anon89
NWindow_	image_processing/TePDIRegGrowSeg.hpp	/^      long            NWindow_;$/;"	m	class:TePDIRegGrowSeg
NZEROR_BIND_SUBKEY_COUNT	drivers/Oracle/OCI/include/nzerror.h	/^  NZEROR_BIND_SUBKEY_COUNT = 28798,$/;"	e	enum:nzerror
NZERROR_3DES_SELF_TEST_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_3DES_SELF_TEST_FAILED = 29151,$/;"	e	enum:nzerror
NZERROR_ALREADY_INITIALIZED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_ALREADY_INITIALIZED = 28770,$/;"	e	enum:nzerror
NZERROR_ASNBadEncodingErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_ASNBadEncodingErr = 28866,$/;"	e	enum:nzerror
NZERROR_ASNIntegerTooBigErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_ASNIntegerTooBigErr = 28867,$/;"	e	enum:nzerror
NZERROR_ATTRIBUTE_FINISH_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_ATTRIBUTE_FINISH_FAILED = 28795,\/* Did not complete role retrieval *\/$/;"	e	enum:nzerror
NZERROR_ATTRIBUTE_INIT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_ATTRIBUTE_INIT = 28794,           \/* failed to init role retrieval *\/$/;"	e	enum:nzerror
NZERROR_AUTH_SHARED_MEMORY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_AUTH_SHARED_MEMORY = 28799,$/;"	e	enum:nzerror
NZERROR_BAD_FILE_ID	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_BAD_FILE_ID = 28772,                             \/* File ID is bad *\/$/;"	e	enum:nzerror
NZERROR_BAD_MAGIC_NUMBER	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_BAD_MAGIC_NUMBER = 28768,                      \/* Bad magic number *\/$/;"	e	enum:nzerror
NZERROR_BAD_PARAMETER_METHOD	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_BAD_PARAMETER_METHOD = 28780,      \/* Illegal method for data type *\/$/;"	e	enum:nzerror
NZERROR_BAD_PASSWORD	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_BAD_PASSWORD    = 28852,   \/* bad password *\/$/;"	e	enum:nzerror
NZERROR_BAD_VERSION_NUMBER	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_BAD_VERSION_NUMBER = 28767,                  \/* Bad version number *\/$/;"	e	enum:nzerror
NZERROR_BINDING_CREATION_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_BINDING_CREATION_FAILED = 28777,\/* NL failed in creating a binding *\/$/;"	e	enum:nzerror
NZERROR_BIND_SERVICE_ERROR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_BIND_SERVICE_ERROR = 43050,    \/* C_BindService returned error *\/$/;"	e	enum:nzerror
NZERROR_BS_CERTOBJ_CREAT_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_BS_CERTOBJ_CREAT_FAILED = 29140,$/;"	e	enum:nzerror
NZERROR_BS_DER_IMP_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_BS_DER_IMP_FAILED = 29141,$/;"	e	enum:nzerror
NZERROR_BadCipherSuite	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_BadCipherSuite = 28884,$/;"	e	enum:nzerror
NZERROR_CERTIFICATE_VERIFY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CERTIFICATE_VERIFY = 28791,      \/* Failed to verify a certificate *\/$/;"	e	enum:nzerror
NZERROR_CERT_ALREADY_INSTALLED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CERT_ALREADY_INSTALLED = 29225, \/* we are attempting to$/;"	e	enum:nzerror
NZERROR_CERT_CHAIN_CREATION	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CERT_CHAIN_CREATION  = 29223,  \/* unable to create a cert chain$/;"	e	enum:nzerror
NZERROR_CERT_IN_CRL	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CERT_IN_CRL = 29178,           \/*Cert is in CRL - cert is revoked*\/ $/;"	e	enum:nzerror
NZERROR_CERT_IN_CRL_CHECK_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CERT_IN_CRL_CHECK_FAILED = 29179, \/*Cert revocation check failed *\/ $/;"	e	enum:nzerror
NZERROR_CERT_NOT_IN_CRL	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CERT_NOT_IN_CRL = 29177, $/;"	e	enum:nzerror
NZERROR_CIC_ERR_BAD_CTX	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_BAD_CTX = 29094,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_BAD_INDEX	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_BAD_INDEX = 29095,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_BAD_LENGTH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_BAD_LENGTH = 29096,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_CODING_BAD_ENCODING	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_CODING_BAD_ENCODING = 29097,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_CODING_BAD_PEM	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_CODING_BAD_PEM = 29070,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_CODING_BASE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_CODING_BASE = 29071, $/;"	e	enum:nzerror
NZERROR_CIC_ERR_DER_BAD_ENCODING	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_DER_BAD_ENCODING = 29072,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_DER_BAD_ENCODING_LENGTH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_DER_BAD_ENCODING_LENGTH = 29073,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_DER_BASE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_DER_BASE = 29074,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_DER_ELEMENT_TOO_LONG	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_DER_ELEMENT_TOO_LONG = 29075,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_DER_INDEFINITE_LENGTH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_DER_INDEFINITE_LENGTH = 29076,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_DER_NO_MORE_ELEMENTS	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_DER_NO_MORE_ELEMENTS = 29077,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_DER_OBJECT_TOO_LONG	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_DER_OBJECT_TOO_LONG = 29078,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_DER_TAG_SIZE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_DER_TAG_SIZE = 29079,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_DER_TIME_OUT_OF_RANGE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_DER_TIME_OUT_OF_RANGE = 29080,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_DER_UNUSED_BITS_IN_BIT_STR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_DER_UNUSED_BITS_IN_BIT_STR = 29081,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_GENERAL_BASE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_GENERAL_BASE = 29082,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_HASH_BASE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_HASH_BASE = 29083,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_ILLEGAL_PARAM	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_ILLEGAL_PARAM = 29084,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_MEM_NOT_OURS	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_MEM_NOT_OURS = 29085,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_MEM_OVERRUN	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_MEM_OVERRUN = 29086,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_MEM_UNDERRUN	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_MEM_UNDERRUN = 29087,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_MEM_WAS_FREED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_MEM_WAS_FREED = 29088,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_NOT_FOUND	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_NOT_FOUND = 29090,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_NO_PTR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_NO_PTR = 29091,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS12_MISSING_ALG	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS12_MISSING_ALG = 29053,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_AUTH_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_AUTH_FAILED = 29054,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_BAD_CONTENT_TYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_BAD_CONTENT_TYPE = 29055,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_BAD_INPUT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_BAD_INPUT = 29056,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_BAD_PADDING	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_BAD_PADDING = 29057,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_BAD_SN	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_BAD_SN = 29058,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_BAD_SN_LENGTH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_BAD_SN_LENGTH = 29059,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_BAD_VERSION	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_BAD_VERSION = 29060,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_BASE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_BASE = 29061,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_FIELD_NOT_PRESENT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_FIELD_NOT_PRESENT = 29062,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_NEED_CERTVAL	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_NEED_CERTVAL = 29063,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_NEED_PASSWORD	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_NEED_PASSWORD = 29064,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_NEED_PKC	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_NEED_PKC = 29065,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_NEED_PRV_KEY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_NEED_PRV_KEY = 29066,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_NEED_TRUSTED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_NEED_TRUSTED = 29067,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_UNSUPPORTED_CERT_FORMAT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_UNSUPPORTED_CERT_FORMAT = 29068,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_PKCS_UNSUP_PRVKEY_TYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_PKCS_UNSUP_PRVKEY_TYPE = 29069,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_RANDOM	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_RANDOM = 29135,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SMALL_BUFFER	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SMALL_BUFFER = 29136,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_ALERT_CB_FAILURE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_ALERT_CB_FAILURE = 29004,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_CERTIFICATE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_CERTIFICATE = 29005,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_CERTIFICATE_REQUEST	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_CERTIFICATE_REQUEST = 29006,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_CLEAR_KEY_LEN	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_CLEAR_KEY_LEN = 29007,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_CONTEXT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_CONTEXT = 29137,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_DHPARAM_KEY_LENGTH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_DHPARAM_KEY_LENGTH = 29008,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_ENCRYPTED_KEY_LEN	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_ENCRYPTED_KEY_LEN = 29009,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_EXPORT_KEY_LENGTH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_EXPORT_KEY_LENGTH = 29010,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_FINISHED_MESSAGE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_FINISHED_MESSAGE = 29011,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_KEY_ARG_LEN	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_KEY_ARG_LEN = 29012,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_MAC	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_MAC = 29013,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_MAX_FRAGMENT_LENGTH_EXTENSION	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_MAX_FRAGMENT_LENGTH_EXTENSION = 29014,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_MESSAGE_LENGTH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_MESSAGE_LENGTH = 29015,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_PKCS1_PADDING	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_PKCS1_PADDING = 29016,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_PREMASTER_SECRET_LENGTH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_PREMASTER_SECRET_LENGTH = 29017,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_PREMASTER_SECRET_VERSION	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_PREMASTER_SECRET_VERSION = 29018,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_PROTOCOL_VERSION	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_PROTOCOL_VERSION = 29019,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_RECORD_LENGTH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_RECORD_LENGTH = 29020,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_SECRET_KEY_LEN	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_SECRET_KEY_LEN = 29021,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BAD_SIDE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BAD_SIDE = 29022,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_BUFFERS_NOT_EMPTY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_BUFFERS_NOT_EMPTY = 29023,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_CERTIFICATE_VALIDATE_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_CERTIFICATE_VALIDATE_FAILED = 29024,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_CERT_CHECK_CALLBACK	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_CERT_CHECK_CALLBACK = 29025,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_DECRYPT_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_DECRYPT_FAILED = 29026,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_ENTROPY_COLLECTION	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_ENTROPY_COLLECTION = 29027,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_FAIL_SERVER_VERIFY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_FAIL_SERVER_VERIFY = 29028,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_HANDSHAKE_ALREADY_COMPLETED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_HANDSHAKE_ALREADY_COMPLETED = 29029,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_HANDSHAKE_REQUESTED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_HANDSHAKE_REQUESTED = 29030,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_HANDSHAKE_REQUIRED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_HANDSHAKE_REQUIRED = 29031,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_INCOMPLETE_IDENTITY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_INCOMPLETE_IDENTITY = 29032,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_INVALID_PFX	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_INVALID_PFX = 29033,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_NEEDS_CIPHER_OR_CLIENTAUTH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_NEEDS_CIPHER_OR_CLIENTAUTH = 29034,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_NEEDS_PRNG	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_NEEDS_PRNG = 29035,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_NOT_SUPPORTED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_NOT_SUPPORTED = 29036,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_NO_CERTIFICATE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_NO_CERTIFICATE = 29037,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_NO_MATCHING_CERTIFICATES	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_NO_MATCHING_CERTIFICATES = 29038,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_NO_MATCHING_CIPHER_SUITES	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_NO_MATCHING_CIPHER_SUITES = 29039,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_NO_SUPPORTED_CIPHER_SUITES	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_NO_SUPPORTED_CIPHER_SUITES = 29040,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_NULL_CB	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_NULL_CB = 29041,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_READ_BUFFER_NOT_EMPTY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_READ_BUFFER_NOT_EMPTY = 29042,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_READ_REQUIRED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_READ_REQUIRED = 29043,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_RENEGOTIATION_ALREADY_REQUESTED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_RENEGOTIATION_ALREADY_REQUESTED = 29044,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_RENEGOTIATION_REFUSED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_RENEGOTIATION_REFUSED = 29045,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_RESUMABLE_SESSION	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_RESUMABLE_SESSION = 29046,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_TLS_EXTENSION_MISMATCH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_TLS_EXTENSION_MISMATCH = 29047,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_UNEXPECTED_MSG	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_UNEXPECTED_MSG = 29048,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_UNKNOWN_RECORD	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_UNKNOWN_RECORD = 29049,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_UNSUPPORTED_CLIENT_AUTH_MODE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_UNSUPPORTED_CLIENT_AUTH_MODE = 29050,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_UNSUPPORTED_PUBKEY_TYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_UNSUPPORTED_PUBKEY_TYPE = 29051,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_SSL_WRITE_BUFFER_NOT_EMPTY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_SSL_WRITE_BUFFER_NOT_EMPTY = 29052,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_TIMEOUT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_TIMEOUT = 29092,$/;"	e	enum:nzerror
NZERROR_CIC_ERR_UNIT_MASK	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CIC_ERR_UNIT_MASK = 29093,$/;"	e	enum:nzerror
NZERROR_CKEYPAIR_SELF_TEST_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CKEYPAIR_SELF_TEST_FAILED = 29155,$/;"	e	enum:nzerror
NZERROR_CREATE_KEY_OBJ_ERROR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CREATE_KEY_OBJ_ERROR = 43051,  \/* B_CreateKeyObject returned error *\/$/;"	e	enum:nzerror
NZERROR_CREATE_PKCS10_OBJECT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CREATE_PKCS10_OBJECT = 43053,  $/;"	e	enum:nzerror
NZERROR_CRLDP_NO_CRL_FOUND	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CRLDP_NO_CRL_FOUND = 29193,  $/;"	e	enum:nzerror
NZERROR_CRL_EXPIRED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CRL_EXPIRED = 29195,       \/* CRL nextUpdate time is in the past *\/$/;"	e	enum:nzerror
NZERROR_CRL_NOT_IN_CACHE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CRL_NOT_IN_CACHE = 29194,  \/* No CRL found in the cache*\/$/;"	e	enum:nzerror
NZERROR_CRL_SIG_VERIFY_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CRL_SIG_VERIFY_FAILED = 29176, \/*CRL signature verification failed*\/ $/;"	e	enum:nzerror
NZERROR_CRNG_SELF_TEST_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CRNG_SELF_TEST_FAILED = 29156,$/;"	e	enum:nzerror
NZERROR_CertNotInstalled	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_CertNotInstalled = 29000,$/;"	e	enum:nzerror
NZERROR_DAC_SELF_TEST_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_DAC_SELF_TEST_FAILED = 29161,$/;"	e	enum:nzerror
NZERROR_DATA_SOURCE_INIT_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_DATA_SOURCE_INIT_FAILED = 28752,     \/* Failed to init data source *\/$/;"	e	enum:nzerror
NZERROR_DATA_SOURCE_TERM_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_DATA_SOURCE_TERM_FAILED = 28753,\/* Failed to terminate data source *\/$/;"	e	enum:nzerror
NZERROR_DECRYPT_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_DECRYPT_FAILED = 28786,  $/;"	e	enum:nzerror
NZERROR_DES_SELF_TEST_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_DES_SELF_TEST_FAILED = 29150,$/;"	e	enum:nzerror
NZERROR_DN_MATCH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_DN_MATCH  =            29222,  \/* for nztCompareDN *\/$/;"	e	enum:nzerror
NZERROR_DRNG_SELF_TEST_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_DRNG_SELF_TEST_FAILED = 29154,$/;"	e	enum:nzerror
NZERROR_ELEMENT_ADD_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_ELEMENT_ADD_FAILED = 28762,$/;"	e	enum:nzerror
NZERROR_ENCRYPT_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_ENCRYPT_FAILED = 28787,     \/* Private key encryption failed *\/$/;"	e	enum:nzerror
NZERROR_EXTERNAL_PKCS12_NOT_SUPPORTED_FIPS_MODE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_EXTERNAL_PKCS12_NOT_SUPPORTED_FIPS_MODE = 29164,$/;"	e	enum:nzerror
NZERROR_EntrustGetInfoFailed	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_EntrustGetInfoFailed = 28891,$/;"	e	enum:nzerror
NZERROR_EntrustGetNameFailed	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_EntrustGetNameFailed = 28893,$/;"	e	enum:nzerror
NZERROR_EntrustLoadCertificateFailed	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_EntrustLoadCertificateFailed = 28892,$/;"	e	enum:nzerror
NZERROR_EntrustLoginFailed	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_EntrustLoginFailed = 28890,$/;"	e	enum:nzerror
NZERROR_FILE_BAD_PERMISSION	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_FILE_BAD_PERMISSION = 28842,      \/* Bad file permission specified *\/$/;"	e	enum:nzerror
NZERROR_FILE_CLOSE_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_FILE_CLOSE_FAILED = 28775,                 \/* Failed to close file *\/$/;"	e	enum:nzerror
NZERROR_FILE_NAME_TRANSLATION	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_FILE_NAME_TRANSLATION = 28784,\/* Could not translate OSD file name *\/$/;"	e	enum:nzerror
NZERROR_FILE_OPEN_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_FILE_OPEN_FAILED = 28759,$/;"	e	enum:nzerror
NZERROR_FILE_OSD_ERROR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_FILE_OSD_ERROR = 28843,             \/* OSD error when opening file *\/$/;"	e	enum:nzerror
NZERROR_FILE_WRITE_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_FILE_WRITE_FAILED = 28774,              \/* Failed to write to file *\/$/;"	e	enum:nzerror
NZERROR_FIPS_LIB_DIFFERS	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_FIPS_LIB_DIFFERS = 29160,$/;"	e	enum:nzerror
NZERROR_FIPS_LIB_OPEN_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_FIPS_LIB_OPEN_FAILED = 29158,$/;"	e	enum:nzerror
NZERROR_FIPS_LIB_READ_ERROR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_FIPS_LIB_READ_ERROR = 29159,$/;"	e	enum:nzerror
NZERROR_FIPS_PATHNAME_ERROR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_FIPS_PATHNAME_ERROR = 29157,$/;"	e	enum:nzerror
NZERROR_GENERIC	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_GENERIC = 28750,                          \/* A catchall for errors *\/$/;"	e	enum:nzerror
NZERROR_GET_CERT_FIELDS	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_GET_CERT_FIELDS = 43052,       \/* C_GetCertFields returned error *\/$/;"	e	enum:nzerror
NZERROR_GET_PKCS10_DER	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_GET_PKCS10_DER = 43056,        \/* C_GetPKCS10DER returned error *\/$/;"	e	enum:nzerror
NZERROR_INITIALIZATION_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_INITIALIZATION_FAILED   =  28853, \/* init failed or $/;"	e	enum:nzerror
NZERROR_INITIALIZE_CERTC	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_INITIALIZE_CERTC = 43057,      \/* C_InitializeCertC returned error *\/$/;"	e	enum:nzerror
NZERROR_INSERT_PRIVATE_KEY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_INSERT_PRIVATE_KEY = 43058,   \/* C_InsertPrivateKey returned error *\/$/;"	e	enum:nzerror
NZERROR_INVALID_CERT_STATUS_PROTOCOL	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_INVALID_CERT_STATUS_PROTOCOL = 29180, $/;"	e	enum:nzerror
NZERROR_INVALID_HEADER_LENGTH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_INVALID_HEADER_LENGTH = 43070,       \/* bad sso header length *\/$/;"	e	enum:nzerror
NZERROR_INVALID_INPUT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_INVALID_INPUT = 28788,     \/* Incorrect input or unknown error *\/ $/;"	e	enum:nzerror
NZERROR_INVALID_KEY_DATA_TYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_INVALID_KEY_DATA_TYPE = 28797,$/;"	e	enum:nzerror
NZERROR_INVALID_PARAMETER	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_INVALID_PARAMETER = 28783,               \/* Invalid parameter name *\/$/;"	e	enum:nzerror
NZERROR_ImproperClientCredentials	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_ImproperClientCredentials = 28878,$/;"	e	enum:nzerror
NZERROR_ImproperServerCredentials	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_ImproperServerCredentials = 28877,$/;"	e	enum:nzerror
NZERROR_KD_CREATE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_KD_CREATE = 28810,                 \/* Key descriptor create failed *\/$/;"	e	enum:nzerror
NZERROR_LAST_ERROR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LAST_ERROR = 43499,                        \/* Last available error *\/$/;"	e	enum:nzerror
NZERROR_LDAP_BIND_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LDAP_BIND_FAILED = 29182,  \/* ldap_bind failed *\/$/;"	e	enum:nzerror
NZERROR_LDAP_COUNT_ENTRIES_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LDAP_COUNT_ENTRIES_FAILED = 29188,\/* ldap_count_entries failed *\/$/;"	e	enum:nzerror
NZERROR_LDAP_FIRSTATTR_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LDAP_FIRSTATTR_FAILED = 29185,  \/* ldap_first_attribute failed *\/$/;"	e	enum:nzerror
NZERROR_LDAP_GETVALUESLEN_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LDAP_GETVALUESLEN_FAILED = 29186,  \/* ldap_get_values_len failed *\/$/;"	e	enum:nzerror
NZERROR_LDAP_MULTIPLE_ENTRIES_FOUND	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LDAP_MULTIPLE_ENTRIES_FOUND = 29190, \/* Multiple entries in OID*\/$/;"	e	enum:nzerror
NZERROR_LDAP_NO_ENTRY_FOUND	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LDAP_NO_ENTRY_FOUND = 29189, \/* No entry found in OID *\/$/;"	e	enum:nzerror
NZERROR_LDAP_OPEN_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LDAP_OPEN_FAILED = 29181,  \/* ldap_open failed *\/$/;"	e	enum:nzerror
NZERROR_LDAP_RESULT_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LDAP_RESULT_FAILED = 29184,  \/* ldap_result failed *\/$/;"	e	enum:nzerror
NZERROR_LDAP_SEARCH_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LDAP_SEARCH_FAILED = 29183,  \/* ldap_search failed *\/$/;"	e	enum:nzerror
NZERROR_LDAP_UNSUPPORTED_VALMEC	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LDAP_UNSUPPORTED_VALMEC = 29187, $/;"	e	enum:nzerror
NZERROR_LDAP_VALMEC_NOT_SET	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LDAP_VALMEC_NOT_SET = 29192,  $/;"	e	enum:nzerror
NZERROR_LIST_CREATION_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LIST_CREATION_FAILED = 28760,$/;"	e	enum:nzerror
NZERROR_LOCKEYID_CREATE_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_LOCKEYID_CREATE_FAILED = 29100,$/;"	e	enum:nzerror
NZERROR_MEMORY_ALLOC_0_BYTES	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_MEMORY_ALLOC_0_BYTES = 28757,$/;"	e	enum:nzerror
NZERROR_MEMORY_ALLOC_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_MEMORY_ALLOC_FAILED = 28756,$/;"	e	enum:nzerror
NZERROR_MEMORY_FREE_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_MEMORY_FREE_FAILED = 28758,$/;"	e	enum:nzerror
NZERROR_METHOD_NOT_FOUND	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_METHOD_NOT_FOUND = 28769,$/;"	e	enum:nzerror
NZERROR_MUTEX_DESTROY_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_MUTEX_DESTROY_FAILED = 29139,$/;"	e	enum:nzerror
NZERROR_MUTEX_INITIALIZE_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_MUTEX_INITIALIZE_FAILED = 29138,$/;"	e	enum:nzerror
NZERROR_NAME_TYPE_NOT_FOUND	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NAME_TYPE_NOT_FOUND = 28789,$/;"	e	enum:nzerror
NZERROR_NLS_STRING_OPEN_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NLS_STRING_OPEN_FAILED = 28790,$/;"	e	enum:nzerror
NZERROR_NONFIPS_CIPHERSUITE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NONFIPS_CIPHERSUITE = 29162,$/;"	e	enum:nzerror
NZERROR_NOT_ALLOCATED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NOT_ALLOCATED = 28782,             \/* Data source is not allocated *\/$/;"	e	enum:nzerror
NZERROR_NOT_INITIALIZED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NOT_INITIALIZED = 28771,     \/* The data source is not initialized *\/$/;"	e	enum:nzerror
NZERROR_NO_CERTIFICATE_ALERT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_CERTIFICATE_ALERT    = 28845,  \/* no certificate *\/$/;"	e	enum:nzerror
NZERROR_NO_CLEAR_PRIVATE_KEY_FILE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_CLEAR_PRIVATE_KEY_FILE   = 28847,   \/* no clear key-file *\/$/;"	e	enum:nzerror
NZERROR_NO_CLEAR_TRUSTPOINT_FILE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_CLEAR_TRUSTPOINT_FILE    = 28850,   \/* no clear trustpoints *\/$/;"	e	enum:nzerror
NZERROR_NO_ELEMENT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_ELEMENT = 28761,$/;"	e	enum:nzerror
NZERROR_NO_ENCRYPTED_PRIVATE_KEY_FILE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_ENCRYPTED_PRIVATE_KEY_FILE = 28848,  \/* no encrypted priv key *\/$/;"	e	enum:nzerror
NZERROR_NO_ENCRYPTED_TRUSTPOINT_FILE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_ENCRYPTED_TRUSTPOINT_FILE = 28851,   \/* no encrypted trustpoints *\/$/;"	e	enum:nzerror
NZERROR_NO_LIST	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_LIST = 28765,                \/* Data method list does not exist *\/$/;"	e	enum:nzerror
NZERROR_NO_MATCHING_CERT_REQ	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_MATCHING_CERT_REQ = 29224,  \/* No matching cert_req was $/;"	e	enum:nzerror
NZERROR_NO_MATCHING_PRIVATE_KEY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_MATCHING_PRIVATE_KEY = 29226, \/* could not find a matching $/;"	e	enum:nzerror
NZERROR_NO_MEMORY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_MEMORY = 28751,                               \/* No more memory *\/$/;"	e	enum:nzerror
NZERROR_NO_PRIVATE_KEY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_PRIVATE_KEY          = 28846,  \/* no private-key *\/$/;"	e	enum:nzerror
NZERROR_NO_SUCH_PARAMETER	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_SUCH_PARAMETER = 28785,   \/* Selected parameter is non-existent *\/$/;"	e	enum:nzerror
NZERROR_NO_TRUSTPOINTS	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_TRUSTPOINTS     = 28849,       \/* no trustpoints *\/$/;"	e	enum:nzerror
NZERROR_NO_WALLET	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NO_WALLET  = 28844,  \/* cert + privkey + tp files do not exist *\/$/;"	e	enum:nzerror
NZERROR_NoKeyPairForKeyUsage	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NoKeyPairForKeyUsage = 28885,$/;"	e	enum:nzerror
NZERROR_NoProtocolSideSet	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_NoProtocolSideSet = 28879,$/;"	e	enum:nzerror
NZERROR_OBJECT_GET_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_OBJECT_GET_FAILED = 28755,$/;"	e	enum:nzerror
NZERROR_OBJECT_STORE_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_OBJECT_STORE_FAILED = 28754, \/* Store object in data source failed *\/$/;"	e	enum:nzerror
NZERROR_OCI_BIND_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_OCI_BIND_FAILED = 28793,$/;"	e	enum:nzerror
NZERROR_OCI_PLSQL_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_OCI_PLSQL_FAILED = 28792,$/;"	e	enum:nzerror
NZERROR_OID_INFO_NOT_SET	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_OID_INFO_NOT_SET = 29191, $/;"	e	enum:nzerror
NZERROR_OK	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_OK = 0,$/;"	e	enum:nzerror
NZERROR_ORACLE	drivers/Oracle/OCI/include/nzerror.h	108;"	d
NZERROR_OUTPUT_BUFFER_TOO_SMALL	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_OUTPUT_BUFFER_TOO_SMALL = 28776,$/;"	e	enum:nzerror
NZERROR_P12_ADD_ATTRIB_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_ADD_ATTRIB_FAILED = 29117,$/;"	e	enum:nzerror
NZERROR_P12_ADD_CERTREQ_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_ADD_CERTREQ_FAILED = 29104,$/;"	e	enum:nzerror
NZERROR_P12_ADD_CERT_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_ADD_CERT_FAILED = 29102,$/;"	e	enum:nzerror
NZERROR_P12_ADD_PKCS11INFO_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_ADD_PKCS11INFO_FAILED = 29122,$/;"	e	enum:nzerror
NZERROR_P12_ADD_PVTKEY_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_ADD_PVTKEY_FAILED = 29101,$/;"	e	enum:nzerror
NZERROR_P12_ADD_SECRET_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_ADD_SECRET_FAILED = 29121,$/;"	e	enum:nzerror
NZERROR_P12_CREATE_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_CREATE_FAILED = 29107,$/;"	e	enum:nzerror
NZERROR_P12_CRT_ATTRIB_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_CRT_ATTRIB_FAILED = 29118,$/;"	e	enum:nzerror
NZERROR_P12_DEST_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_DEST_FAILED = 29107,$/;"	e	enum:nzerror
NZERROR_P12_EXP_CERT_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_EXP_CERT_FAILED = 29120,$/;"	e	enum:nzerror
NZERROR_P12_EXP_PVTKEY_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_EXP_PVTKEY_FAILED = 29115,$/;"	e	enum:nzerror
NZERROR_P12_GET_ATTRIB_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_GET_ATTRIB_FAILED = 29116,$/;"	e	enum:nzerror
NZERROR_P12_GET_CERT_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_GET_CERT_FAILED = 29112,$/;"	e	enum:nzerror
NZERROR_P12_GET_PKCS11INFO_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_GET_PKCS11INFO_FAILED = 29123,$/;"	e	enum:nzerror
NZERROR_P12_GET_PVTKEY_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_GET_PVTKEY_FAILED = 29113,$/;"	e	enum:nzerror
NZERROR_P12_IMP_CERT_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_IMP_CERT_FAILED = 29119,$/;"	e	enum:nzerror
NZERROR_P12_IMP_PVTKEY_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_IMP_PVTKEY_FAILED = 29114,$/;"	e	enum:nzerror
NZERROR_P12_INVALID_BAG	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_INVALID_BAG = 29110,$/;"	e	enum:nzerror
NZERROR_P12_INVALID_INDEX	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_INVALID_INDEX = 29111,$/;"	e	enum:nzerror
NZERROR_P12_MULTIPLE_PKCS11_LIBNAME	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_MULTIPLE_PKCS11_LIBNAME = 29124,$/;"	e	enum:nzerror
NZERROR_P12_MULTIPLE_PKCS11_TOKENLABEL	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_MULTIPLE_PKCS11_TOKENLABEL = 29125,$/;"	e	enum:nzerror
NZERROR_P12_MULTIPLE_PKCS11_TOKENPASSPHRASE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_MULTIPLE_PKCS11_TOKENPASSPHRASE = 29126,$/;"	e	enum:nzerror
NZERROR_P12_PKCS11_LIBNAME_NOT_SET	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_PKCS11_LIBNAME_NOT_SET = 29128,$/;"	e	enum:nzerror
NZERROR_P12_PKCS11_TOKENLABEL_NOT_SET	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_PKCS11_TOKENLABEL_NOT_SET = 29129,$/;"	e	enum:nzerror
NZERROR_P12_PKCS11_TOKENPASSPHRASE_NOT_SET	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_PKCS11_TOKENPASSPHRASE_NOT_SET = 29130,$/;"	e	enum:nzerror
NZERROR_P12_PVTKEY_CRT_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_PVTKEY_CRT_FAILED = 29109,$/;"	e	enum:nzerror
NZERROR_P12_RAND_ERROR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_RAND_ERROR = 29108, $/;"	e	enum:nzerror
NZERROR_P12_UNKNOWN_PKCS11INFO	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_UNKNOWN_PKCS11INFO = 29127,$/;"	e	enum:nzerror
NZERROR_P12_WLT_CREATE_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_WLT_CREATE_FAILED = 29103,$/;"	e	enum:nzerror
NZERROR_P12_WLT_EXP_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_WLT_EXP_FAILED = 29105,$/;"	e	enum:nzerror
NZERROR_P12_WLT_IMP_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_P12_WLT_IMP_FAILED = 29106,$/;"	e	enum:nzerror
NZERROR_PARAMETER_BAD_TYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PARAMETER_BAD_TYPE = 28763,$/;"	e	enum:nzerror
NZERROR_PARAMETER_MALFORMED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PARAMETER_MALFORMED = 28778,    \/* A parameter was in a bad format *\/$/;"	e	enum:nzerror
NZERROR_PARAMETER_NO_DATA	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PARAMETER_NO_DATA = 28781,    \/* No method specified when required *\/$/;"	e	enum:nzerror
NZERROR_PARAMETER_NO_METHOD	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PARAMETER_NO_METHOD = 28779,$/;"	e	enum:nzerror
NZERROR_PARAMETER_RETRIEVAL	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PARAMETER_RETRIEVAL = 28764,      \/* Retrieval of parameter failed *\/$/;"	e	enum:nzerror
NZERROR_PKCS11_BAD_PASSPHRASE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_BAD_PASSPHRASE = 43002,  \/* passphrase is incorrect\/expired *\/$/;"	e	enum:nzerror
NZERROR_PKCS11_CHANGE_PROVIDERS_ERROR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_CHANGE_PROVIDERS_ERROR = 43013, \/* Change providers error *\/$/;"	e	enum:nzerror
NZERROR_PKCS11_CREATE_KEYPAIR_ERROR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_CREATE_KEYPAIR_ERROR = 43015, \/* Key pair gen error *\/$/;"	e	enum:nzerror
NZERROR_PKCS11_GET_FUNC_LIST	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_GET_FUNC_LIST = 43003,  \/* C_GetFunctionList returned error *\/$/;"	e	enum:nzerror
NZERROR_PKCS11_GET_PRIVATE_KEY_ERROR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_GET_PRIVATE_KEY_ERROR = 43014, $/;"	e	enum:nzerror
NZERROR_PKCS11_GET_SLOT_LIST	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_GET_SLOT_LIST = 43006,  \/* C_GetSlotList returned error *\/$/;"	e	enum:nzerror
NZERROR_PKCS11_GET_TOKEN_INFO	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_GET_TOKEN_INFO = 43008,  \/* C_GetTokenInfo returned error *\/$/;"	e	enum:nzerror
NZERROR_PKCS11_INITIALIZE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_INITIALIZE = 43004,     \/* C_Initialize returned error *\/$/;"	e	enum:nzerror
NZERROR_PKCS11_LIBRARY_NOT_FOUND	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_LIBRARY_NOT_FOUND = 43000, \/* PKCS #11 library not found *\/$/;"	e	enum:nzerror
NZERROR_PKCS11_NO_TOKENS_PRESENT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_NO_TOKENS_PRESENT = 43005, \/* No tokens present *\/$/;"	e	enum:nzerror
NZERROR_PKCS11_SYMBOL_NOT_FOUND	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_SYMBOL_NOT_FOUND = 43009, \/* Symbol not found in PKCS11 lib *\/$/;"	e	enum:nzerror
NZERROR_PKCS11_TOKEN_LOGIN_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_TOKEN_LOGIN_FAILED = 43011, \/* Token login failed *\/$/;"	e	enum:nzerror
NZERROR_PKCS11_TOKEN_NOT_FOUND	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_TOKEN_NOT_FOUND = 43001, $/;"	e	enum:nzerror
NZERROR_PKCS11_WALLET_CONTAINS_P11_INFO	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PKCS11_WALLET_CONTAINS_P11_INFO = 43016, \/* Wallet already contains$/;"	e	enum:nzerror
NZERROR_PLSQL_ORACLE_TO_REAL	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PLSQL_ORACLE_TO_REAL = 28814,$/;"	e	enum:nzerror
NZERROR_PLSQL_REAL_TO_ORACLE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_PLSQL_REAL_TO_ORACLE = 28815,$/;"	e	enum:nzerror
NZERROR_RIO_ACCESS_DESCRIPTOR	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_ACCESS_DESCRIPTOR = 28811,        \/* access descriptor invalid *\/$/;"	e	enum:nzerror
NZERROR_RIO_CLOSE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_CLOSE = 28804,                             \/* RIO close failed *\/$/;"	e	enum:nzerror
NZERROR_RIO_DELETE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_DELETE = 28809,                           \/* RIO delete failed *\/$/;"	e	enum:nzerror
NZERROR_RIO_INFO	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_INFO = 28808,                               \/* RIO info failed *\/$/;"	e	enum:nzerror
NZERROR_RIO_IO	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_IO = 28803,                     \/* RIO io set or numberinvalid *\/$/;"	e	enum:nzerror
NZERROR_RIO_MODE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_MODE = 28802,                              \/* RIO mode invalid *\/$/;"	e	enum:nzerror
NZERROR_RIO_OBJECT_TYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_OBJECT_TYPE = 28801,                \/* RIO object type invalid *\/$/;"	e	enum:nzerror
NZERROR_RIO_OPEN	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_OPEN = 28800,                               \/* RIO Open Failed *\/$/;"	e	enum:nzerror
NZERROR_RIO_RECORD	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_RECORD = 28812,                              \/* record invalid *\/$/;"	e	enum:nzerror
NZERROR_RIO_RECORD_TYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_RECORD_TYPE = 28813,    \/* record type and AD type not matched *\/$/;"	e	enum:nzerror
NZERROR_RIO_RETRIEVE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_RETRIEVE = 28805,                       \/* RIO retrieve failed *\/$/;"	e	enum:nzerror
NZERROR_RIO_STORE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_STORE = 28806,                             \/* RIO store failed *\/$/;"	e	enum:nzerror
NZERROR_RIO_UPDATE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RIO_UPDATE = 28807,                           \/* RIO update failed *\/$/;"	e	enum:nzerror
NZERROR_RSA_SELF_TEST_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_RSA_SELF_TEST_FAILED = 29153,$/;"	e	enum:nzerror
NZERROR_SET_PKCS10_FIELDS	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SET_PKCS10_FIELDS = 43054,     \/* C_SetPKCS10Fields returned error *\/$/;"	e	enum:nzerror
NZERROR_SHA_SELF_TEST_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SHA_SELF_TEST_FAILED = 29152,$/;"	e	enum:nzerror
NZERROR_SIGN_CERT_REQUEST	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SIGN_CERT_REQUEST = 43055,     \/* C_SignCertRequest returned error *\/$/;"	e	enum:nzerror
NZERROR_SLTSCTX_INIT_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SLTSCTX_INIT_FAILED = 43060,    \/* sltsini() returned error *\/$/;"	e	enum:nzerror
NZERROR_SLTSCTX_TERM_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SLTSCTX_TERM_FAILED = 43062,    \/* sltster() returned error *\/$/;"	e	enum:nzerror
NZERROR_SLTSKYC_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SLTSKYC_FAILED = 43061,         \/* sltskyc() returned error *\/$/;"	e	enum:nzerror
NZERROR_SLTSKYS_FAILED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SLTSKYS_FAILED = 43063,         \/* sltskys() returned error *\/$/;"	e	enum:nzerror
NZERROR_SSLBadParameterErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLBadParameterErr = 28873,$/;"	e	enum:nzerror
NZERROR_SSLConnectionClosedError	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLConnectionClosedError = 28865,$/;"	e	enum:nzerror
NZERROR_SSLConnectionClosedGraceful	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLConnectionClosedGraceful = 28864,$/;"	e	enum:nzerror
NZERROR_SSLFatalAlert	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLFatalAlert = 28860,$/;"	e	enum:nzerror
NZERROR_SSLIOClosedOverrideGoodbyeKiss	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLIOClosedOverrideGoodbyeKiss = 28874,$/;"	e	enum:nzerror
NZERROR_SSLIOErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLIOErr = 28862,$/;"	e	enum:nzerror
NZERROR_SSLMemoryErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLMemoryErr = 28854,$/;"	e	enum:nzerror
NZERROR_SSLNegotiationErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLNegotiationErr = 28859,$/;"	e	enum:nzerror
NZERROR_SSLOverflowErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLOverflowErr = 28856,$/;"	e	enum:nzerror
NZERROR_SSLProtocolErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLProtocolErr = 28858,$/;"	e	enum:nzerror
NZERROR_SSLSessionNotFoundErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLSessionNotFoundErr = 28863,$/;"	e	enum:nzerror
NZERROR_SSLUnknownErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLUnknownErr = 28857,$/;"	e	enum:nzerror
NZERROR_SSLUnsupportedErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLUnsupportedErr = 28855,$/;"	e	enum:nzerror
NZERROR_SSLWouldBlockErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_SSLWouldBlockErr = 28861,$/;"	e	enum:nzerror
NZERROR_SSL_TO_ORACLE	drivers/Oracle/OCI/include/nzerror.h	640;"	d
NZERROR_ServerDNMisConfigured	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_ServerDNMisConfigured = 29003,$/;"	e	enum:nzerror
NZERROR_ServerDNMisMatched	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_ServerDNMisMatched = 29002,$/;"	e	enum:nzerror
NZERROR_TERMINATE_FAIL	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TERMINATE_FAIL = 28766,                     \/* Failed to terminate *\/$/;"	e	enum:nzerror
NZERROR_THIS_MUST_BE_LAST	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_THIS_MUST_BE_LAST$/;"	e	enum:nzerror
NZERROR_TK_ALGORITHM	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_ALGORITHM = 29240,      \/* Have no idea what algorithm you want *\/$/;"	e	enum:nzerror
NZERROR_TK_BAD_HEADER_LENGTH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_BAD_HEADER_LENGTH = 29230,$/;"	e	enum:nzerror
NZERROR_TK_BAD_MAGIC_NUMBER	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_BAD_MAGIC_NUMBER = 29229,$/;"	e	enum:nzerror
NZERROR_TK_BYTES_NEEDED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_BYTES_NEEDED = 29228,   \/* Couldn't determine # of bytes needed *\/$/;"	e	enum:nzerror
NZERROR_TK_CANNOT_GROW	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_CANNOT_GROW = 29241,         \/* Cannot grow output buffer block *\/$/;"	e	enum:nzerror
NZERROR_TK_CE_ALGAPPLY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_CE_ALGAPPLY = 29238,        \/* Couldn't apply algorithm to data *\/$/;"	e	enum:nzerror
NZERROR_TK_CE_ALGFINISH	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_CE_ALGFINISH = 29237,              \/* Couldn't finish algorithm *\/$/;"	e	enum:nzerror
NZERROR_TK_CE_ALGINIT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_CE_ALGINIT = 29239,           \/* Couldn't init CE for algorithm *\/$/;"	e	enum:nzerror
NZERROR_TK_CE_DECODE_KEY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_CE_DECODE_KEY = 29234,      \/* Could not decode key into object *\/$/;"	e	enum:nzerror
NZERROR_TK_CE_ENCODE_KEY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_CE_ENCODE_KEY = 29233,           \/* Count not encode key object *\/$/;"	e	enum:nzerror
NZERROR_TK_CE_FUNC	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_CE_FUNC = 29245,              \/* Unknown crypto engine function *\/$/;"	e	enum:nzerror
NZERROR_TK_CE_GEYKEYINFO	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_CE_GEYKEYINFO = 29235,  \/* Crypto engine failed to get key info *\/$/;"	e	enum:nzerror
NZERROR_TK_CE_INIT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_CE_INIT = 29231,          \/* Crypto engine failed to initialize *\/$/;"	e	enum:nzerror
NZERROR_TK_CE_KEYINIT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_CE_KEYINIT = 29232,  \/* Crypto engine key initialization failed *\/$/;"	e	enum:nzerror
NZERROR_TK_CE_STATE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_CE_STATE = 29249,  \/* Bad state specified for the crypto engine *\/$/;"	e	enum:nzerror
NZERROR_TK_INVALID_STATE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_INVALID_STATE = 28824,$/;"	e	enum:nzerror
NZERROR_TK_INV_CIPHR_TYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_INV_CIPHR_TYPE = 28827,$/;"	e	enum:nzerror
NZERROR_TK_INV_DATA_FMT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_INV_DATA_FMT = 28832,$/;"	e	enum:nzerror
NZERROR_TK_INV_ENG_FUNC	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_INV_ENG_FUNC = 28826,$/;"	e	enum:nzerror
NZERROR_TK_INV_IDENT_TYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_INV_IDENT_TYPE = 28828,$/;"	e	enum:nzerror
NZERROR_TK_KEYSIZE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_KEYSIZE = 29242,               \/* Key not large enough for data *\/$/;"	e	enum:nzerror
NZERROR_TK_KEYTYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_KEYTYPE = 29243,                           \/* Unknown key type. *\/$/;"	e	enum:nzerror
NZERROR_TK_NOTOPEN	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_NOTOPEN = 29247,                         \/* Object must be open *\/$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_BUF_TOO_SMALL	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_BUF_TOO_SMALL = 28834,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_GENERIC	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_GENERIC = 28817,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_INSUFF_INFO	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_INSUFF_INFO = 28833,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_INV_IDENT_DESC	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_INV_IDENT_DESC = 28835,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_BYTES	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_BYTES = 28823,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_CIPHER_TYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_CIPHER_TYPE = 28829,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_CONTEXT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_CONTEXT = 28818,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_DATA_FMT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_DATA_FMT = 28831,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_DIST_NAME	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_DIST_NAME = 28819,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_ENG_FUNC	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_ENG_FUNC = 28825,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_IDENTITY	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_IDENTITY = 28838,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_IDENT_TYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_IDENT_TYPE = 28830,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_INPUT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_INPUT = 28821,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_PASSWORD	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_PASSWORD = 28816,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_PERSONA	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_PERSONA = 28839,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_SEED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_SEED = 28822,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_STATE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_STATE = 28820,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_WALLET	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_WALLET = 28837,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_NO_WRL	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_NO_WRL = 29244,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_WALLET_NOTOPEN	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_WALLET_NOTOPEN = 28836,$/;"	e	enum:nzerror
NZERROR_TK_PLSQL_WALLET_OPEN	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_PLSQL_WALLET_OPEN = 28840,$/;"	e	enum:nzerror
NZERROR_TK_SEED_RANDOM	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_SEED_RANDOM = 29236,   \/* Couldn't seed random number generator *\/$/;"	e	enum:nzerror
NZERROR_TK_TDU_FORMAT	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_TDU_FORMAT = 29246,                       \/* Unknown TDU format *\/$/;"	e	enum:nzerror
NZERROR_TK_WRLTYPE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_TK_WRLTYPE = 29248,                                \/* Bad WRL type *\/$/;"	e	enum:nzerror
NZERROR_UNSUPPORTED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_UNSUPPORTED = 28841,                 \/* Operation is not supported *\/$/;"	e	enum:nzerror
NZERROR_UNSUPPORTED_METHOD	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_UNSUPPORTED_METHOD = 28796, \/* Data method specified not supported *\/$/;"	e	enum:nzerror
NZERROR_VALIDITY_EXPIRED	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_VALIDITY_EXPIRED = 29227, \/* certificate validity date expired *\/$/;"	e	enum:nzerror
NZERROR_VENDOR_NOT_SUPPORTED_FIPS_MODE	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_VENDOR_NOT_SUPPORTED_FIPS_MODE = 29163,$/;"	e	enum:nzerror
NZERROR_WRITE_MAGIC_VERSION	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_WRITE_MAGIC_VERSION = 28773,  \/* Failed to write magic and version *\/$/;"	e	enum:nzerror
NZERROR_X509CertChainIncompleteErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_X509CertChainIncompleteErr = 28871,$/;"	e	enum:nzerror
NZERROR_X509CertChainInvalidErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_X509CertChainInvalidErr = 28868,$/;"	e	enum:nzerror
NZERROR_X509CertExpiredErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_X509CertExpiredErr = 28869,$/;"	e	enum:nzerror
NZERROR_X509DataNotFoundErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_X509DataNotFoundErr = 28872,$/;"	e	enum:nzerror
NZERROR_X509IESGCErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_X509IESGCErr       =  28876,$/;"	e	enum:nzerror
NZERROR_X509MozillaSGCErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_X509MozillaSGCErr  =  28875,$/;"	e	enum:nzerror
NZERROR_X509NamesNotEqualErr	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_X509NamesNotEqualErr = 28870,$/;"	e	enum:nzerror
NZERROR_setCertFailed	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_setCertFailed = 28881,$/;"	e	enum:nzerror
NZERROR_setPersonaFailed	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_setPersonaFailed = 28880,$/;"	e	enum:nzerror
NZERROR_setTPFailed	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_setTPFailed = 28883,$/;"	e	enum:nzerror
NZERROR_setVKeyFailed	drivers/Oracle/OCI/include/nzerror.h	/^  NZERROR_setVKeyFailed = 28882,$/;"	e	enum:nzerror
NZTTCEF_DETACHEDSIGNATURE	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCEF_DETACHEDSIGNATURE = 1,   \/* Signature, detached from content *\/$/;"	e	enum:nzttcef
NZTTCEF_ENCRYPTION	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCEF_ENCRYPTION,              \/* Symmetric encryption *\/$/;"	e	enum:nzttcef
NZTTCEF_ENVELOPING	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCEF_ENVELOPING,              \/* Signature and encryption with content *\/$/;"	e	enum:nzttcef
NZTTCEF_HASH	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCEF_HASH,                    \/* Hash\/checsum *\/$/;"	e	enum:nzttcef
NZTTCEF_KEYEDHASH	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCEF_KEYEDHASH,               \/* Keyed hash\/checkusm *\/$/;"	e	enum:nzttcef
NZTTCEF_LAST	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCEF_LAST                     \/* Used for array size *\/$/;"	e	enum:nzttcef
NZTTCEF_PKENCRYPTION	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCEF_PKENCRYPTION,            \/* Encryption for one or more recipients *\/$/;"	e	enum:nzttcef
NZTTCEF_RANDOM	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCEF_RANDOM,                  \/* Random byte generation *\/$/;"	e	enum:nzttcef
NZTTCEF_SIGNATURE	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCEF_SIGNATURE,               \/* Signature combined with content *\/$/;"	e	enum:nzttcef
NZTTCES_CONTINUE	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCES_CONTINUE = 1,    \/* Continue processing input *\/$/;"	e	enum:nzttces
NZTTCES_END	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCES_END,             \/* End processing input *\/$/;"	e	enum:nzttces
NZTTCES_RESET	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCES_RESET            \/* Reset processing and skip generating output *\/$/;"	e	enum:nzttces
NZTTCIPHERTYPE_DES	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCIPHERTYPE_DES,              \/* DES *\/$/;"	e	enum:nzttCipherType
NZTTCIPHERTYPE_MD5	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCIPHERTYPE_MD5,              \/* MD5 *\/$/;"	e	enum:nzttCipherType
NZTTCIPHERTYPE_MD5DES	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCIPHERTYPE_MD5DES,           \/* DES encrypted MD5 with salt (PBE) *\/$/;"	e	enum:nzttCipherType
NZTTCIPHERTYPE_MD5RC2	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCIPHERTYPE_MD5RC2,           \/* RC2 encrypted MD5 with salt (PBE) *\/$/;"	e	enum:nzttCipherType
NZTTCIPHERTYPE_RC4	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCIPHERTYPE_RC4,              \/* RC4 *\/$/;"	e	enum:nzttCipherType
NZTTCIPHERTYPE_RSA	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCIPHERTYPE_RSA = 1,          \/* RSA public key *\/$/;"	e	enum:nzttCipherType
NZTTCIPHERTYPE_SHA	drivers/Oracle/OCI/include/nzt.h	/^   NZTTCIPHERTYPE_SHA               \/* SHA *\/$/;"	e	enum:nzttCipherType
NZTTIDENTITYTYPE_CERTIFICTAE	drivers/Oracle/OCI/include/nzt.h	/^   NZTTIDENTITYTYPE_CERTIFICTAE,      $/;"	e	enum:nzttIdentType
NZTTIDENTITYTYPE_CERT_REQ	drivers/Oracle/OCI/include/nzt.h	/^   NZTTIDENTITYTYPE_CERT_REQ,      $/;"	e	enum:nzttIdentType
NZTTIDENTITYTYPE_CLEAR_ETP	drivers/Oracle/OCI/include/nzt.h	/^   NZTTIDENTITYTYPE_CLEAR_ETP,      $/;"	e	enum:nzttIdentType
NZTTIDENTITYTYPE_CLEAR_PTP	drivers/Oracle/OCI/include/nzt.h	/^   NZTTIDENTITYTYPE_CLEAR_PTP       $/;"	e	enum:nzttIdentType
NZTTIDENTITYTYPE_CLEAR_UTP	drivers/Oracle/OCI/include/nzt.h	/^   NZTTIDENTITYTYPE_CLEAR_UTP,      $/;"	e	enum:nzttIdentType
NZTTIDENTITYTYPE_INVALID_TYPE	drivers/Oracle/OCI/include/nzt.h	/^   NZTTIDENTITYTYPE_INVALID_TYPE = 0,  $/;"	e	enum:nzttIdentType
NZTTIDENTITYTYPE_RENEW_CERT_REQ	drivers/Oracle/OCI/include/nzt.h	/^   NZTTIDENTITYTYPE_RENEW_CERT_REQ,      $/;"	e	enum:nzttIdentType
NZTTKPUSAGE_CERT_SIGN	drivers/Oracle/OCI/include/nzt.h	398;"	d
NZTTKPUSAGE_CODE_SIGN	drivers/Oracle/OCI/include/nzt.h	397;"	d
NZTTKPUSAGE_INVALID_USE	drivers/Oracle/OCI/include/nzt.h	399;"	d
NZTTKPUSAGE_NONE	drivers/Oracle/OCI/include/nzt.h	393;"	d
NZTTKPUSAGE_SMIME_ENCR	drivers/Oracle/OCI/include/nzt.h	395;"	d
NZTTKPUSAGE_SMIME_SIGN	drivers/Oracle/OCI/include/nzt.h	396;"	d
NZTTKPUSAGE_SSL	drivers/Oracle/OCI/include/nzt.h	394;"	d
NZTTPOLICY_NONE	drivers/Oracle/OCI/include/nzt.h	/^   NZTTPOLICY_NONE = 0,$/;"	e	enum:nzttPolicy
NZTTPOLICY_RETRY_1	drivers/Oracle/OCI/include/nzt.h	/^   NZTTPOLICY_RETRY_1, \/* number of retries for decryption = 1 *\/$/;"	e	enum:nzttPolicy
NZTTPOLICY_RETRY_2	drivers/Oracle/OCI/include/nzt.h	/^   NZTTPOLICY_RETRY_2, \/* number of retries for decryption = 2 *\/$/;"	e	enum:nzttPolicy
NZTTPOLICY_RETRY_3	drivers/Oracle/OCI/include/nzt.h	/^   NZTTPOLICY_RETRY_3  \/* number of retries for decryption = 3 *\/$/;"	e	enum:nzttPolicy
NZTTSTATE_EMPTY	drivers/Oracle/OCI/include/nzt.h	/^   NZTTSTATE_EMPTY = 0,     \/* is not in any state(senseless???) *\/$/;"	e	enum:nzttState
NZTTSTATE_INVALID	drivers/Oracle/OCI/include/nzt.h	/^   NZTTSTATE_INVALID,         \/* certificate *\/$/;"	e	enum:nzttState
NZTTSTATE_READY	drivers/Oracle/OCI/include/nzt.h	/^   NZTTSTATE_READY,         \/* certificate *\/$/;"	e	enum:nzttState
NZTTSTATE_RENEWAL	drivers/Oracle/OCI/include/nzt.h	/^   NZTTSTATE_RENEWAL        \/* renewal-requested *\/$/;"	e	enum:nzttState
NZTTSTATE_REQUESTED	drivers/Oracle/OCI/include/nzt.h	/^   NZTTSTATE_REQUESTED,     \/* cert-request *\/$/;"	e	enum:nzttState
NZTTTDUFMT_LAST	drivers/Oracle/OCI/include/nzt.h	/^   NZTTTDUFMT_LAST                  \/* Used for array size *\/$/;"	e	enum:nztttdufmt
NZTTTDUFMT_ORACLEv1	drivers/Oracle/OCI/include/nzt.h	/^   NZTTTDUFMT_ORACLEv1,             \/* Oracle v1 format *\/$/;"	e	enum:nztttdufmt
NZTTTDUFMT_PKCS7	drivers/Oracle/OCI/include/nzt.h	/^   NZTTTDUFMT_PKCS7 = 1,            \/* PKCS7 format *\/$/;"	e	enum:nztttdufmt
NZTTTDUFMT_RSAPAD	drivers/Oracle/OCI/include/nzt.h	/^   NZTTTDUFMT_RSAPAD,               \/* RSA padded format *\/$/;"	e	enum:nztttdufmt
NZTTUSAGE_NONE	drivers/Oracle/OCI/include/nzt.h	/^   NZTTUSAGE_NONE = 0,$/;"	e	enum:nzttUsage
NZTTUSAGE_SSL	drivers/Oracle/OCI/include/nzt.h	/^   NZTTUSAGE_SSL  \/* persona for SSL usage *\/$/;"	e	enum:nzttUsage
NZTTVALSTATE_GOOD	drivers/Oracle/OCI/include/nzt.h	/^   NZTTVALSTATE_GOOD,            \/* Validated *\/$/;"	e	enum:nzttValState
NZTTVALSTATE_NONE	drivers/Oracle/OCI/include/nzt.h	/^   NZTTVALSTATE_NONE = 1,        \/* Needs to be validated *\/$/;"	e	enum:nzttValState
NZTTVALSTATE_REVOKED	drivers/Oracle/OCI/include/nzt.h	/^   NZTTVALSTATE_REVOKED          \/* Failed to validate *\/$/;"	e	enum:nzttValState
NZTTVERSION_INVALID_TYPE	drivers/Oracle/OCI/include/nzt.h	/^   NZTTVERSION_INVALID_TYPE       \/* For Initialization *\/$/;"	e	enum:nzttVersion
NZTTVERSION_SYMMETRIC	drivers/Oracle/OCI/include/nzt.h	/^   NZTTVERSION_SYMMETRIC,         \/* Symmetric *\/$/;"	e	enum:nzttVersion
NZTTVERSION_X509v1	drivers/Oracle/OCI/include/nzt.h	/^   NZTTVERSION_X509v1 = 1,        \/* X.509v1 *\/$/;"	e	enum:nzttVersion
NZTTVERSION_X509v3	drivers/Oracle/OCI/include/nzt.h	/^   NZTTVERSION_X509v3,            \/* X.509v3 *\/$/;"	e	enum:nzttVersion
NZTTWRL_DEFAULT	drivers/Oracle/OCI/include/nzt.h	/^   NZTTWRL_DEFAULT = 1,    \/* Default, use SNZD_DEFAULT_FILE_DIRECTORY *\/$/;"	e	enum:nzttwrl
NZTTWRL_ENTR	drivers/Oracle/OCI/include/nzt.h	/^   NZTTWRL_ENTR,           \/* Find the entrust profile in this directory *\/$/;"	e	enum:nzttwrl
NZTTWRL_FILE	drivers/Oracle/OCI/include/nzt.h	/^   NZTTWRL_FILE,           \/* Find the oracle wallet in this directory *\/$/;"	e	enum:nzttwrl
NZTTWRL_MCS	drivers/Oracle/OCI/include/nzt.h	/^   NZTTWRL_MCS,            \/* WRL for Microsoft *\/$/;"	e	enum:nzttwrl
NZTTWRL_NULL	drivers/Oracle/OCI/include/nzt.h	/^   NZTTWRL_NULL,           \/* New SSO defaulting mechanism *\/$/;"	e	enum:nzttwrl
NZTTWRL_ORACLE	drivers/Oracle/OCI/include/nzt.h	/^   NZTTWRL_ORACLE,	   \/* Get the wallet from OSS db *\/$/;"	e	enum:nzttwrl
NZTTWRL_REGISTRY	drivers/Oracle/OCI/include/nzt.h	/^   NZTTWRL_REGISTRY        \/* Find the wallet in Windows Registry *\/$/;"	e	enum:nzttwrl
NZTTWRL_SQLNET	drivers/Oracle/OCI/include/nzt.h	/^   NZTTWRL_SQLNET,         \/* Use oss.source.my_wallet in sqlnet.ora file *\/$/;"	e	enum:nzttwrl
NZT_DEFAULT_WRL	drivers/Oracle/OCI/include/nzt.h	182;"	d
NZT_ENTR_WRL	drivers/Oracle/OCI/include/nzt.h	185;"	d
NZT_FILE_WRL	drivers/Oracle/OCI/include/nzt.h	184;"	d
NZT_MAX_MD5	drivers/Oracle/OCI/include/nzt.h	151;"	d
NZT_MAX_SHA1	drivers/Oracle/OCI/include/nzt.h	150;"	d
NZT_MCS_WRL	drivers/Oracle/OCI/include/nzt.h	186;"	d
NZT_NO_AUTO_REALLOC	drivers/Oracle/OCI/include/nzt.h	432;"	d
NZT_ORACLE	drivers/Oracle/OCI/include/nzt.h	139;"	d
NZT_ORACLE_WRL	drivers/Oracle/OCI/include/nzt.h	187;"	d
NZT_REGISTRY_WRL	drivers/Oracle/OCI/include/nzt.h	188;"	d
NZT_SQLNET_WRL	drivers/Oracle/OCI/include/nzt.h	183;"	d
N_HASH	drivers/SQLite/sqlite3/sqlite3.c	15622;"	d	file:
N_SORT_BUCKET	drivers/SQLite/sqlite3/sqlite3.c	35699;"	d	file:
N_STATEMENT	drivers/SQLite/sqlite3/sqlite3.c	130721;"	d	file:
NameContext	drivers/SQLite/sqlite3/sqlite3.c	/^struct NameContext {$/;"	s	file:
NameContext	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct NameContext NameContext;$/;"	t	typeref:struct:NameContext	file:
NameMap	functions/TeMIFProjection.cpp	/^typedef map<int,string> NameMap;$/;"	t	file:
Namespace	drivers/Oracle/OCI/include/occiAQ.h	/^    enum Namespace$/;"	g	class:oracle::occi::aq::Subscription
Navigation	drivers/Oracle/OCI/include/occiAQ.h	/^     enum Navigation$/;"	g	class:oracle::occi::aq::Consumer
Nban_	image_processing/TePDIRegGrowSeg.hpp	/^        int             Nban_;$/;"	m	class:TePDIRGSCell
Nban_	image_processing/TePDIRegGrowSeg.hpp	/^      int             Nban_;$/;"	m	class:TePDIRegGrowSeg
Ncol	kernel/TeMatrix.h	/^	int	Ncol()	const { return ncol; } $/;"	f	class:TeMatrix
Ncol_	image_processing/TePDIRegGrowSeg.hpp	/^      int             Ncol_;$/;"	m	class:TePDIRegGrowSeg
Negate	image_processing/TePDIMatrixFunctions.cpp	/^  bool Negate( const TePDIMatrix< double >& inMatrix,$/;"	f	namespace:TePDIMatrixFunctions
Neighbors_	image_processing/TePDIRegGrowSeg.hpp	/^        TePDIRGSCellList        *Neighbors_;$/;"	m	class:TePDIRGSCell
NetworkCost	drivers/Oracle/OCI/include/odci.h	/^   OCIInd NetworkCost;$/;"	m	struct:ODCICost_ind
NetworkCost	drivers/Oracle/OCI/include/odci.h	/^   OCINumber  NetworkCost;$/;"	m	struct:ODCICost
NetworkMinimumPath	kernel/TeNeighbours.h	/^		double	NetworkMinimumPath () {return _net_minimum_path;}$/;"	f	class:TeProxMatrixAttributes
NetworkMinimumPath	kernel/TeNeighbours.h	/^		void NetworkMinimumPath (double d) {_net_minimum_path = d;}$/;"	f	class:TeProxMatrixAttributes
NetworkObjectsDistance	kernel/TeNeighbours.h	/^		double	NetworkObjectsDistance() {return _net_objects_distance;}$/;"	f	class:TeProxMatrixAttributes
NetworkObjectsDistance	kernel/TeNeighbours.h	/^		void NetworkObjectsDistance(double d) {_net_objects_distance = d;}$/;"	f	class:TeProxMatrixAttributes
Next	stat/filaR.h	/^      Item_ptr Next; \/\/Para Pesquisa$/;"	m	struct:TFilaR::Fila
Next	stat/hash.h	/^     struct Hash_Type *Next;$/;"	m	struct:THash::Hash_Type	typeref:struct:THash::Hash_Type::Hash_Type
Next	stat/lista.h	/^      Vizinho_ptr Next; \/* Utilizado para pesquisa *\/$/;"	m	struct:TListaVizinho::ListaVizinho
NextB	stat/lista.h	/^      Vizinho_ptr NextB; \/* Utilizado para pesquisa e apelacao *\/$/;"	m	struct:TListaVizinho::ListaVizinho
Nlin_	image_processing/TePDIRegGrowSeg.hpp	/^      int             Nlin_;$/;"	m	class:TePDIRegGrowSeg
NoBlendMethod	image_processing/TePDIBlender.hpp	/^        NoBlendMethod = 1,$/;"	e	enum:TePDIBlender::BlendMethod
NoDirection	image_processing/TePDIHaralick.hpp	/^        NoDirection = 0,$/;"	e	enum:TePDIHaralick::DirectionT
NoOutRemotion	kernel/TeGTParams.h	/^        NoOutRemotion,$/;"	e	enum:TeGTParams::OutRemStrategy
NoPreProcessing	image_processing/TePDIGeneralizedIHSFusion.hpp	/^        NoPreProcessing = 0,$/;"	e	enum:TePDIGeneralizedIHSFusion::PreProcessingType
No_Grafo	stat/TeSkaterGrafo.h	/^    typedef struct No_Grafo$/;"	s	class:TSkaterGrafo
NormCrossCorrMethod	image_processing/TePDIMMIOMatching.hpp	/^        NormCrossCorrMethod$/;"	e	enum:TePDIMMIOMatching::FeatMatchingMethod
NormalizeMatrix	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::NormalizeMatrix( $/;"	f	class:TePDIMallatWavelets
North	image_processing/TePDIHaralick.hpp	/^        North = 1,$/;"	e	enum:TePDIHaralick::DirectionT
NorthEast	image_processing/TePDIHaralick.hpp	/^        NorthEast = 2,$/;"	e	enum:TePDIHaralick::DirectionT
NorthWest	image_processing/TePDIHaralick.hpp	/^        NorthWest = 128$/;"	e	enum:TePDIHaralick::DirectionT
Nos	stat/TeSkaterGrafo.h	/^       Grafo_ptr Nos;$/;"	m	struct:TSkaterGrafo::Grafo
Nos	stat/heap.h	/^        TipoHeap_ptr Nos;$/;"	m	struct:THeap::Heap
Nothing	image_processing/TePDIIHSWaveletFusion.hpp	/^        Nothing = 0,$/;"	e	enum:TePDIIHSWaveletFusion::InterpMethod
Nothing	image_processing/TePDIPCAWaveletFusion.hpp	/^        Nothing = 0,$/;"	e	enum:TePDIPCAWaveletFusion::InterpMethod
Nothing	image_processing/TePDIWaveletAtrousFusion.hpp	/^        Nothing = 0,$/;"	e	enum:TePDIWaveletAtrousFusion::InterpMethod
Nothing	image_processing/TePDIWiSpeRFusion.hpp	/^        Nothing = 0,$/;"	e	enum:TePDIWiSpeRFusion::InterpMethod
NotifyResult	drivers/Oracle/OCI/include/occiAQ.h	/^class NotifyResult$/;"	c	namespace:oracle::occi::aq
Now	drivers/Firebird/ibpp/core/ibpp.h	/^		void Now()		{ Date::Today(); Time::Now(); }$/;"	f	class:IBPP::Timestamp
Now	drivers/Firebird/ibpp/core/time.cpp	/^void IBPP::Time::Now()$/;"	f	class:IBPP::Time
Npix_	image_processing/TePDIRegGrowSeg.hpp	/^        long            Npix_;$/;"	m	class:TePDIRGSCell
Nrow	kernel/TeMatrix.h	/^	int	Nrow() const { return nrow; }$/;"	f	class:TeMatrix
NumGranules	drivers/Oracle/OCI/include/odci.h	/^   OCIInd NumGranules;$/;"	m	struct:ODCIExtTableQCInfo_ind
NumGranules	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        NumGranules;$/;"	m	struct:ODCIExtTableQCInfo
NumLocations	drivers/Oracle/OCI/include/odci.h	/^   OCIInd NumLocations;$/;"	m	struct:ODCIExtTableQCInfo_ind
NumLocations	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        NumLocations;$/;"	m	struct:ODCIExtTableQCInfo
Num_Areas	stat/filaR.h	/^      int Num_Areas; \/\/ Numero de areas dentro do grupamento$/;"	m	struct:TFilaR::Item
Num_Grupos	stat/TeSkaterFunctions.h	/^  int Num_Grupos;$/;"	m	class:TParticao
Num_Var	stat/TeSkaterGrafo.h	/^       int Num_Var;$/;"	m	struct:TSkaterGrafo::Grafo
Num_Var	stat/TeSkaterGrafo.h	/^ int Num_Var() {return GetNum_Var();}$/;"	f	class:TSkaterGrafo
Number	drivers/Oracle/OCI/include/occiData.h	/^class Number$/;"	c	namespace:oracle::occi
OBJECT	drivers/Oracle/OCI/include/occiAQ.h	/^        OBJECT$/;"	e	enum:oracle::occi::aq::Message::PayloadType
OBJECT	drivers/Oracle/OCI/include/occiControl.h	/^    OBJECT = OCI_OBJECT,$/;"	e	enum:oracle::occi::Environment::Mode
OBJ_ANY	drivers/SQLite/sqlite3/sqlite3.c	22554;"	d	file:
OCCIANYDATA	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIANYDATA ,$/;"	e	enum:oracle::occi::Type
OCCIAQ_ORACLE	drivers/Oracle/OCI/include/occiAQ.h	34;"	d
OCCIBDOUBLE	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIBDOUBLE = SQLT_BDOUBLE,$/;"	e	enum:oracle::occi::Type
OCCIBFILE	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIBFILE,$/;"	e	enum:oracle::occi::Type
OCCIBFLOAT	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIBFLOAT = SQLT_BFLOAT,$/;"	e	enum:oracle::occi::Type
OCCIBLOB	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIBLOB,$/;"	e	enum:oracle::occi::Type
OCCIBOOL	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIBOOL,$/;"	e	enum:oracle::occi::Type
OCCIBYTES	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIBYTES,$/;"	e	enum:oracle::occi::Type
OCCICHAR	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCICHAR = 32 *1024,$/;"	e	enum:oracle::occi::Type
OCCICLOB	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCICLOB ,$/;"	e	enum:oracle::occi::Type
OCCICOMMON_ORACLE	drivers/Oracle/OCI/include/occiCommon.h	111;"	d
OCCICONTROL_ORACLE	drivers/Oracle/OCI/include/occiControl.h	155;"	d
OCCICURSOR	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCICURSOR$/;"	e	enum:oracle::occi::Type
OCCIDATA_ORACLE	drivers/Oracle/OCI/include/occiData.h	90;"	d
OCCIDATE	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIDATE  ,$/;"	e	enum:oracle::occi::Type
OCCIDOUBLE	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIDOUBLE,$/;"	e	enum:oracle::occi::Type
OCCIFLOAT	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIFLOAT = SQLT_FLT,$/;"	e	enum:oracle::occi::Type
OCCIIBDOUBLE	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIIBDOUBLE = SQLT_IBDOUBLE,$/;"	e	enum:oracle::occi::Type
OCCIIBFLOAT	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIIBFLOAT = SQLT_IBFLOAT,$/;"	e	enum:oracle::occi::Type
OCCIINT	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIINT = SQLT_INT,$/;"	e	enum:oracle::occi::Type
OCCIINTERVALDS	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIINTERVALDS  ,$/;"	e	enum:oracle::occi::Type
OCCIINTERVALYM	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIINTERVALYM  ,$/;"	e	enum:oracle::occi::Type
OCCIMETADATA	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIMETADATA,$/;"	e	enum:oracle::occi::Type
OCCINUMBER	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCINUMBER,$/;"	e	enum:oracle::occi::Type
OCCIOBJECTS_ORACLE	drivers/Oracle/OCI/include/occiObjects.h	105;"	d
OCCIPOBJECT	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIPOBJECT,$/;"	e	enum:oracle::occi::Type
OCCIREF	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIREF ,$/;"	e	enum:oracle::occi::Type
OCCIREFANY	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIREFANY,$/;"	e	enum:oracle::occi::Type
OCCIROWID	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIROWID,$/;"	e	enum:oracle::occi::Type
OCCISTREAM	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCISTREAM  ,$/;"	e	enum:oracle::occi::Type
OCCISTRING	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCISTRING  ,$/;"	e	enum:oracle::occi::Type
OCCITIMESTAMP	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCITIMESTAMP,$/;"	e	enum:oracle::occi::Type
OCCIUNSIGNED_INT	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIUNSIGNED_INT = SQLT_UIN,$/;"	e	enum:oracle::occi::Type
OCCIVECTOR	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCIVECTOR,$/;"	e	enum:oracle::occi::Type
OCCI_HAVE_STD_NAMESPACE	drivers/Oracle/OCI/include/occiCommon.h	135;"	d
OCCI_LOB_READONLY	drivers/Oracle/OCI/include/occiCommon.h	/^{ OCCI_LOB_READONLY = OCI_LOB_READONLY$/;"	e	enum:oracle::occi::LobOpenMode
OCCI_LOB_READWRITE	drivers/Oracle/OCI/include/occiCommon.h	/^ ,OCCI_LOB_READWRITE = OCI_LOB_READWRITE$/;"	e	enum:oracle::occi::LobOpenMode
OCCI_LOCK_NONE	drivers/Oracle/OCI/include/occiCommon.h	/^enum LockOptions {OCCI_LOCK_NONE = OCI_LOCK_NONE,$/;"	e	enum:oracle::occi::LockOptions
OCCI_LOCK_NOWAIT	drivers/Oracle/OCI/include/occiObjects.h	/^        enum LockOption {OCCI_LOCK_WAIT, OCCI_LOCK_NOWAIT};$/;"	e	enum:oracle::occi::PObject::LockOption
OCCI_LOCK_WAIT	drivers/Oracle/OCI/include/occiObjects.h	/^        enum LockOption {OCCI_LOCK_WAIT, OCCI_LOCK_NOWAIT};$/;"	e	enum:oracle::occi::PObject::LockOption
OCCI_LOCK_X	drivers/Oracle/OCI/include/occiCommon.h	/^                      OCCI_LOCK_X = OCI_LOCK_X, $/;"	e	enum:oracle::occi::LockOptions
OCCI_LOCK_X_NOWAIT	drivers/Oracle/OCI/include/occiCommon.h	/^                      OCCI_LOCK_X_NOWAIT = OCI_LOCK_X_NOWAIT$/;"	e	enum:oracle::occi::LockOptions
OCCI_MAX_PREFETCH_DEPTH	drivers/Oracle/OCI/include/occiCommon.h	/^enum {OCCI_MAX_PREFETCH_DEPTH = UB4MAXVAL};$/;"	e	enum:oracle::occi::__anon92
OCCI_ORACLE	drivers/Oracle/OCI/include/occi.h	36;"	d
OCCI_PINCOUNT_DECR	drivers/Oracle/OCI/include/occiObjects.h	/^        enum UnpinOption {OCCI_PINCOUNT_DECR, OCCI_PINCOUNT_RESET};$/;"	e	enum:oracle::occi::PObject::UnpinOption
OCCI_PINCOUNT_RESET	drivers/Oracle/OCI/include/occiObjects.h	/^        enum UnpinOption {OCCI_PINCOUNT_DECR, OCCI_PINCOUNT_RESET};$/;"	e	enum:oracle::occi::PObject::UnpinOption
OCCI_SQLCS_EXPLICIT	drivers/Oracle/OCI/include/occiCommon.h	/^ ,OCCI_SQLCS_EXPLICIT = SQLCS_EXPLICIT \/\/ char set explicitly specified$/;"	e	enum:oracle::occi::CharSetForm
OCCI_SQLCS_FLEXIBLE	drivers/Oracle/OCI/include/occiCommon.h	/^ ,OCCI_SQLCS_FLEXIBLE = SQLCS_FLEXIBLE \/\/ pl\/sql flexible parameter$/;"	e	enum:oracle::occi::CharSetForm
OCCI_SQLCS_IMPLICIT	drivers/Oracle/OCI/include/occiCommon.h	/^  OCCI_SQLCS_IMPLICIT = SQLCS_IMPLICIT \/\/ use local db char set$/;"	e	enum:oracle::occi::CharSetForm
OCCI_SQLCS_NCHAR	drivers/Oracle/OCI/include/occiCommon.h	/^ ,OCCI_SQLCS_NCHAR = SQLCS_NCHAR \/\/ use local db nchar set$/;"	e	enum:oracle::occi::CharSetForm
OCCI_SQLT_AFC	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_AFC=SQLT_AFC,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_AVC	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_AVC=SQLT_AVC,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_BFILE	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_BFILE=SQLT_BFILE,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_BFILEE	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_BFILEE=SQLT_BFILEE,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_BIN	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_BIN=SQLT_BIN,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_BLOB	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_BLOB=SQLT_BLOB,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_CFILE	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_CFILE=SQLT_CFILE,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_CFILEE	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_CFILEE=SQLT_CFILEE,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_CHR	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_CHR=SQLT_CHR,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_CLOB	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_CLOB=SQLT_CLOB,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_CUR	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_CUR=SQLT_CUR,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_DAT	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_DAT=SQLT_DAT,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_DATE	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_DATE=SQLT_DATE,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_FILE	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_FILE=SQLT_FILE,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_INTERVAL_DS	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_INTERVAL_DS=SQLT_INTERVAL_DS,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_INTERVAL_YM	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_INTERVAL_YM=SQLT_INTERVAL_YM,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_LAB	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_LAB=SQLT_LAB,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_LBI	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_LBI=SQLT_LBI,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_LNG	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_LNG=SQLT_LNG,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_LVB	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_LVB=SQLT_LVB,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_LVC	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_LVC=SQLT_LVC,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_NCO	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_NCO=SQLT_NCO,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_NON	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_NON=SQLT_NON,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_NTY	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_NTY=SQLT_NTY,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_NUM	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_NUM=SQLT_NUM,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_ODT	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_ODT=SQLT_ODT,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_OSL	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_OSL=SQLT_OSL,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_PDN	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_PDN=SQLT_PDN,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_RDD	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_RDD=SQLT_RDD,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_REF	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_REF=SQLT_REF,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_RID	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_RID=SQLT_RID,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_RSET	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_RSET=SQLT_RSET,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_SLS	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_SLS=SQLT_SLS,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_STR	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_STR=SQLT_STR,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_TIME	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_TIME=SQLT_TIME,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_TIMESTAMP	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_TIMESTAMP=SQLT_TIMESTAMP,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_TIMESTAMP_LTZ	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_TIMESTAMP_LTZ=SQLT_TIMESTAMP_LTZ,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_TIMESTAMP_TZ	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_TIMESTAMP_TZ=SQLT_TIMESTAMP_TZ,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_TIME_TZ	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_TIME_TZ=SQLT_TIME_TZ,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_VBI	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_VBI=SQLT_VBI,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_VCS	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_VCS=SQLT_VCS,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_VNU	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_VNU=SQLT_VNU,$/;"	e	enum:oracle::occi::Type
OCCI_SQLT_VST	drivers/Oracle/OCI/include/occiCommon.h	/^ OCCI_SQLT_VST=SQLT_VST,$/;"	e	enum:oracle::occi::Type
OCCI_STD_NAMESPACE	drivers/Oracle/OCI/include/occiCommon.h	134;"	d
OCCI_TYPECODE_BDOUBLE	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_BDOUBLE = OCI_TYPECODE_BDOUBLE,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_BFILE	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_BFILE = OCI_TYPECODE_BFILE,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_BFLOAT	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_BFLOAT = OCI_TYPECODE_BFLOAT,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_BLOB	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_BLOB = OCI_TYPECODE_BLOB,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_CHAR	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_CHAR = OCI_TYPECODE_CHAR,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_CLOB	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_CLOB = OCI_TYPECODE_CLOB,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_DATE	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_DATE = OCI_TYPECODE_DATE,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_DECIMAL	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_DECIMAL = OCI_TYPECODE_DECIMAL,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_DOUBLE	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_DOUBLE = OCI_TYPECODE_DOUBLE,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_FLOAT	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_FLOAT = OCI_TYPECODE_FLOAT,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_INTEGER	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_INTEGER = OCI_TYPECODE_INTEGER,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_NAMEDCOLLECTION	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_NAMEDCOLLECTION = OCI_TYPECODE_NAMEDCOLLECTION$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_NUMBER	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_NUMBER = OCI_TYPECODE_NUMBER,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_OBJECT	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_OBJECT = OCI_TYPECODE_OBJECT,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_OCTET	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_OCTET = OCI_TYPECODE_OCTET,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_RAW	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_RAW = OCI_TYPECODE_RAW,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_REAL	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_REAL = OCI_TYPECODE_REAL,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_REF	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_REF = OCI_TYPECODE_REF,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_SMALLINT	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_SMALLINT= OCI_TYPECODE_SMALLINT,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_TABLE	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_TABLE = OCI_TYPECODE_TABLE,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_VARCHAR	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_VARCHAR = OCI_TYPECODE_VARCHAR,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_VARCHAR2	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_VARCHAR2 = OCI_TYPECODE_VARCHAR2,$/;"	e	enum:oracle::occi::TypeCode
OCCI_TYPECODE_VARRAY	drivers/Oracle/OCI/include/occiCommon.h	/^OCCI_TYPECODE_VARRAY= OCI_TYPECODE_VARRAY,$/;"	e	enum:oracle::occi::TypeCode
OCI1_ORACLE	drivers/Oracle/OCI/include/oci1.h	57;"	d
OCI8DP_ORACLE	drivers/Oracle/OCI/include/oci8dp.h	41;"	d
OCIAPR	drivers/Oracle/OCI/include/ociapr.h	33;"	d
OCIAP_ORACLE	drivers/Oracle/OCI/include/ociap.h	190;"	d
OCIAP_ORACLE	drivers/Oracle/ociap.h	170;"	d
OCIAQAgent	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIAQAgent         OCIAQAgent;         \/* AQ Agent descriptor *\/$/;"	t	typeref:struct:OCIAQAgent
OCIAQDeq	drivers/Oracle/OCI/include/oci.h	672;"	d
OCIAQDeqOptions	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIAQDeqOptions    OCIAQDeqOptions; \/* AQ Dequeue Options hdl *\/$/;"	t	typeref:struct:OCIAQDeqOptions
OCIAQEnq	drivers/Oracle/OCI/include/oci.h	673;"	d
OCIAQEnqOptions	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIAQEnqOptions    OCIAQEnqOptions; \/* AQ Enqueue Options hdl *\/$/;"	t	typeref:struct:OCIAQEnqOptions
OCIAQMsgProperties	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIAQMsgProperties OCIAQMsgProperties;  \/* AQ Mesg Properties *\/$/;"	t	typeref:struct:OCIAQMsgProperties
OCIAQNfyDescriptor	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIAQNfyDescriptor OCIAQNfyDescriptor;   \/* AQ Nfy descriptor *\/$/;"	t	typeref:struct:OCIAQNfyDescriptor
OCIAQSignature	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIAQSignature     OCIAQSignature;            \/* AQ Siganture *\/$/;"	t	typeref:struct:OCIAQSignature
OCIAnyData	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIAnyData OCIAnyData;$/;"	t	typeref:struct:OCIAnyData
OCIAnyDataCtx	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIAnyDataCtx OCIAnyDataCtx;$/;"	t	typeref:struct:OCIAnyDataCtx
OCIAnyDataSet	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIAnyDataSet OCIAnyDataSet;$/;"	t	typeref:struct:OCIAnyDataSet
OCIArray	drivers/Oracle/OCI/include/orl.h	/^typedef OCIColl OCIArray;$/;"	t
OCIArray	drivers/Oracle/OCI/include/orl.h	356;"	d
OCIAttrGet	drivers/Oracle/OCI/include/oci.h	435;"	d
OCIAttrSet	drivers/Oracle/OCI/include/oci.h	437;"	d
OCIAuthInfo	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIAuthInfo      OCIAuthInfo;                  \/* auth handle *\/$/;"	t	typeref:struct:OCIAuthInfo
OCIAuthInfo	drivers/Oracle/OCI/include/oci.h	642;"	d
OCIBFileLocator	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCILobLocator OCIBFileLocator; \/* OCI Binary LOB File Locator *\/$/;"	t	typeref:struct:OCILobLocator
OCIBFileLocator	drivers/Oracle/OCI/include/oci.h	653;"	d
OCIBind	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIBind          OCIBind;                  \/* OCI bind handle *\/$/;"	t	typeref:struct:OCIBind
OCIBind	drivers/Oracle/OCI/include/oci.h	633;"	d
OCIBindArrayOfStruct	drivers/Oracle/OCI/include/oci.h	425;"	d
OCIBindByName	drivers/Oracle/OCI/include/oci.h	422;"	d
OCIBindByPos	drivers/Oracle/OCI/include/oci.h	423;"	d
OCIBindDynamic	drivers/Oracle/OCI/include/oci.h	421;"	d
OCIBindObject	drivers/Oracle/OCI/include/oci.h	427;"	d
OCIBindRowCallback	drivers/Oracle/OCI/include/ociap.h	/^typedef sword (*OCIBindRowCallback)(dvoid *ctx);$/;"	t
OCIBlobLocator	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCILobLocator OCIBlobLocator;       \/* OCI Binary LOB Locator *\/$/;"	t	typeref:struct:OCILobLocator
OCIBlobLocator	drivers/Oracle/OCI/include/oci.h	651;"	d
OCIBreak	drivers/Oracle/OCI/include/oci.h	472;"	d
OCICPool	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCICPool         OCICPool;          \/* connection pool handle *\/$/;"	t	typeref:struct:OCICPool
OCICPool	drivers/Oracle/OCI/include/oci.h	639;"	d
OCICacheFlush	drivers/Oracle/OCI/include/ori.h	560;"	d
OCICacheFlushRefresh	drivers/Oracle/OCI/include/ori.h	523;"	d
OCICacheFree	drivers/Oracle/OCI/include/ori.h	525;"	d
OCICacheGetObjects	drivers/Oracle/OCI/include/ori.h	527;"	d
OCICacheRefresh	drivers/Oracle/OCI/include/ori.h	561;"	d
OCICacheRegister	drivers/Oracle/OCI/include/ori.h	528;"	d
OCICacheUnmark	drivers/Oracle/OCI/include/ori.h	526;"	d
OCICacheUnpin	drivers/Oracle/OCI/include/ori.h	524;"	d
OCICallbackAQDeq	drivers/Oracle/OCI/include/ociap.h	/^typedef sb4 (*OCICallbackAQDeq)(dvoid *ctxp, dvoid **payload, $/;"	t
OCICallbackAQEnq	drivers/Oracle/OCI/include/ociap.h	/^typedef sb4 (*OCICallbackAQEnq)(dvoid *ctxp, dvoid **payload, $/;"	t
OCICallbackDefine	drivers/Oracle/OCI/include/oci.h	664;"	d
OCICallbackDefine	drivers/Oracle/OCI/include/ociap.h	/^typedef sb4 (*OCICallbackDefine)(dvoid *octxp, OCIDefine *defnp, ub4 iter,$/;"	t
OCICallbackDefine	drivers/Oracle/OCI/include/ocikp.h	/^typedef sb4 (*OCICallbackDefine)(\/*_ dvoid *octxp, OCIDefine *defnp, ub4 iter,$/;"	t
OCICallbackDefine	drivers/Oracle/ociap.h	/^typedef sb4 (*OCICallbackDefine)(dvoid *octxp, OCIDefine *defnp, ub4 iter,$/;"	t
OCICallbackFailover	drivers/Oracle/OCI/include/ociap.h	/^typedef sb4 (*OCICallbackFailover)(dvoid *svcctx, dvoid *envctx,$/;"	t
OCICallbackFailover	drivers/Oracle/OCI/include/ocikp.h	/^typedef sb4 (*OCICallbackFailover)(\/*_ dvoid *svcctx, dvoid *envctx,$/;"	t
OCICallbackFailover	drivers/Oracle/ociap.h	/^typedef sb4 (*OCICallbackFailover)(dvoid *svcctx, dvoid *envctx,$/;"	t
OCICallbackInBind	drivers/Oracle/OCI/include/oci.h	662;"	d
OCICallbackInBind	drivers/Oracle/OCI/include/ociap.h	/^typedef sb4 (*OCICallbackInBind)(dvoid *ictxp, OCIBind *bindp, ub4 iter,$/;"	t
OCICallbackInBind	drivers/Oracle/OCI/include/ocikp.h	/^typedef sb4 (*OCICallbackInBind)(\/*_ dvoid *ictxp, OCIBind *bindp, ub4 iter,$/;"	t
OCICallbackInBind	drivers/Oracle/ociap.h	/^typedef sb4 (*OCICallbackInBind)(dvoid *ictxp, OCIBind *bindp, ub4 iter,$/;"	t
OCICallbackLobRead	drivers/Oracle/OCI/include/oci.h	665;"	d
OCICallbackLobRead	drivers/Oracle/OCI/include/ociap.h	/^typedef sb4 (*OCICallbackLobRead)(dvoid *ctxp, CONST dvoid *bufp,$/;"	t
OCICallbackLobRead	drivers/Oracle/OCI/include/ocikp.h	/^typedef sb4 (*OCICallbackLobRead)(\/*_ dvoid *ctxp,$/;"	t
OCICallbackLobRead	drivers/Oracle/ociap.h	/^typedef sb4 (*OCICallbackLobRead)(dvoid *ctxp, CONST dvoid *bufp,$/;"	t
OCICallbackLobRead2	drivers/Oracle/OCI/include/ociap.h	/^typedef sb4 (*OCICallbackLobRead2)(dvoid *ctxp, CONST dvoid *bufp, oraub8 len,$/;"	t
OCICallbackLobWrite	drivers/Oracle/OCI/include/oci.h	666;"	d
OCICallbackLobWrite	drivers/Oracle/OCI/include/ociap.h	/^typedef sb4 (*OCICallbackLobWrite)(dvoid *ctxp, dvoid *bufp, $/;"	t
OCICallbackLobWrite	drivers/Oracle/OCI/include/ocikp.h	/^typedef sb4 (*OCICallbackLobWrite)(\/*_ dvoid *ctxp,$/;"	t
OCICallbackLobWrite	drivers/Oracle/ociap.h	/^typedef sb4 (*OCICallbackLobWrite)(dvoid *ctxp, dvoid *bufp, $/;"	t
OCICallbackLobWrite2	drivers/Oracle/OCI/include/ociap.h	/^typedef sb4 (*OCICallbackLobWrite2)(dvoid *ctxp, dvoid *bufp, oraub8 *lenp,$/;"	t
OCICallbackOutBind	drivers/Oracle/OCI/include/oci.h	663;"	d
OCICallbackOutBind	drivers/Oracle/OCI/include/ociap.h	/^typedef sb4 (*OCICallbackOutBind)(dvoid *octxp, OCIBind *bindp, ub4 iter,$/;"	t
OCICallbackOutBind	drivers/Oracle/OCI/include/ocikp.h	/^typedef sb4 (*OCICallbackOutBind)(\/*_ dvoid *octxp, OCIBind *bindp, ub4 iter,$/;"	t
OCICallbackOutBind	drivers/Oracle/ociap.h	/^typedef sb4 (*OCICallbackOutBind)(dvoid *octxp, OCIBind *bindp, ub4 iter,$/;"	t
OCIClobLocator	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCILobLocator OCIClobLocator;    \/* OCI Character LOB Locator *\/$/;"	t	typeref:struct:OCILobLocator
OCIClobLocator	drivers/Oracle/OCI/include/oci.h	652;"	d
OCICoherency	drivers/Oracle/OCI/include/oro.h	877;"	d
OCIColl	drivers/Oracle/OCI/include/orl.h	/^typedef struct OCIColl OCIColl;$/;"	t	typeref:struct:OCIColl
OCIColl	drivers/Oracle/OCI/include/orl.h	357;"	d
OCICollAppend	drivers/Oracle/OCI/include/orl.h	358;"	d
OCICollAssign	drivers/Oracle/OCI/include/orl.h	359;"	d
OCICollAssignElem	drivers/Oracle/OCI/include/orl.h	360;"	d
OCICollGetElem	drivers/Oracle/OCI/include/orl.h	361;"	d
OCICollGetElemArray	drivers/Oracle/OCI/include/orl.h	362;"	d
OCICollIsLocator	drivers/Oracle/OCI/include/orl.h	366;"	d
OCICollMax	drivers/Oracle/OCI/include/orl.h	363;"	d
OCICollSize	drivers/Oracle/OCI/include/orl.h	364;"	d
OCICollTrim	drivers/Oracle/OCI/include/orl.h	365;"	d
OCIComplexObject	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIComplexObject OCIComplexObject;          \/* OCI COR handle *\/$/;"	t	typeref:struct:OCIComplexObject
OCIComplexObject	drivers/Oracle/OCI/include/oci.h	668;"	d
OCIComplexObjectComp	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIComplexObjectComp OCIComplexObjectComp;$/;"	t	typeref:struct:OCIComplexObjectComp
OCIComplexObjectComp	drivers/Oracle/OCI/include/oci.h	669;"	d
OCIConnectionPoolCreate	drivers/Oracle/OCI/include/oci.h	674;"	d
OCIConnectionPoolDestroy	drivers/Oracle/OCI/include/oci.h	675;"	d
OCICursor_H	drivers/Oracle/TeOCICursor.h	28;"	d
OCIDEF	drivers/Oracle/OCI/include/ocidef.h	77;"	d
OCIDEM	drivers/Oracle/OCI/include/ocidem.h	43;"	d
OCIDFN	drivers/Oracle/OCI/include/ocidfn.h	75;"	d
OCIDOMDocument	drivers/Oracle/OCI/include/orl.h	/^typedef struct OCIDOMDocument OCIDOMDocument;$/;"	t	typeref:struct:OCIDOMDocument
OCIDate	drivers/Oracle/OCI/include/orl.h	/^struct OCIDate$/;"	s
OCIDate	drivers/Oracle/OCI/include/orl.h	/^typedef struct OCIDate OCIDate;$/;"	t	typeref:struct:OCIDate
OCIDate	drivers/Oracle/OCI/include/orl.h	367;"	d
OCIDateAddDays	drivers/Oracle/OCI/include/orl.h	368;"	d
OCIDateAddMonths	drivers/Oracle/OCI/include/orl.h	369;"	d
OCIDateCheck	drivers/Oracle/OCI/include/orl.h	370;"	d
OCIDateCompare	drivers/Oracle/OCI/include/orl.h	371;"	d
OCIDateDD	drivers/Oracle/OCI/include/orl.h	/^  ub1 OCIDateDD;                             \/* day; range is 1 <= day <= 31 *\/$/;"	m	struct:OCIDate
OCIDateDD	drivers/Oracle/OCI/include/orl.h	372;"	d
OCIDateDaysBetween	drivers/Oracle/OCI/include/orl.h	373;"	d
OCIDateFromText	drivers/Oracle/OCI/include/orl.h	374;"	d
OCIDateGetDate	drivers/Oracle/OCI/include/orl.h	1808;"	d
OCIDateGetTime	drivers/Oracle/OCI/include/orl.h	1785;"	d
OCIDateLastDay	drivers/Oracle/OCI/include/orl.h	375;"	d
OCIDateMM	drivers/Oracle/OCI/include/orl.h	/^  ub1 OCIDateMM;                          \/* month; range is 1 <= month < 12 *\/$/;"	m	struct:OCIDate
OCIDateMM	drivers/Oracle/OCI/include/orl.h	376;"	d
OCIDateNextDay	drivers/Oracle/OCI/include/orl.h	377;"	d
OCIDateSetDate	drivers/Oracle/OCI/include/orl.h	1851;"	d
OCIDateSetTime	drivers/Oracle/OCI/include/orl.h	1830;"	d
OCIDateSysDate	drivers/Oracle/OCI/include/orl.h	378;"	d
OCIDateTime	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIDateTime OCIDateTime;           \/* OCI DateTime descriptor *\/$/;"	t	typeref:struct:OCIDateTime
OCIDateTime	drivers/Oracle/OCI/include/orl.h	/^  OCITime OCIDateTime;                                               \/* time *\/$/;"	m	struct:OCIDate
OCIDateTime	drivers/Oracle/OCI/include/orl.h	379;"	d
OCIDateTimeAssign	drivers/Oracle/OCI/include/oci.h	538;"	d
OCIDateTimeCheck	drivers/Oracle/OCI/include/oci.h	542;"	d
OCIDateTimeCompare	drivers/Oracle/OCI/include/oci.h	541;"	d
OCIDateTimeConvert	drivers/Oracle/OCI/include/oci.h	543;"	d
OCIDateTimeFromArray	drivers/Oracle/OCI/include/oci.h	549;"	d
OCIDateTimeFromText	drivers/Oracle/OCI/include/oci.h	540;"	d
OCIDateTimeGetDate	drivers/Oracle/OCI/include/oci.h	535;"	d
OCIDateTimeGetTime	drivers/Oracle/OCI/include/oci.h	534;"	d
OCIDateTimeGetTimeZoneName	drivers/Oracle/OCI/include/oci.h	547;"	d
OCIDateTimeGetTimeZoneOffset	drivers/Oracle/OCI/include/oci.h	536;"	d
OCIDateTimeIntervalAdd	drivers/Oracle/OCI/include/oci.h	545;"	d
OCIDateTimeIntervalSub	drivers/Oracle/OCI/include/oci.h	546;"	d
OCIDateTimeSubtract	drivers/Oracle/OCI/include/oci.h	544;"	d
OCIDateTimeSysTimeStamp	drivers/Oracle/OCI/include/oci.h	537;"	d
OCIDateTimeToArray	drivers/Oracle/OCI/include/oci.h	548;"	d
OCIDateTimeToText	drivers/Oracle/OCI/include/oci.h	539;"	d
OCIDateYYYY	drivers/Oracle/OCI/include/orl.h	/^  sb2 OCIDateYYYY;         \/* gregorian year; range is -4712 <= year <= 9999 *\/$/;"	m	struct:OCIDate
OCIDateYYYY	drivers/Oracle/OCI/include/orl.h	380;"	d
OCIDateZoneToZone	drivers/Oracle/OCI/include/orl.h	381;"	d
OCIDefine	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIDefine        OCIDefine;              \/* OCI Define handle *\/$/;"	t	typeref:struct:OCIDefine
OCIDefine	drivers/Oracle/OCI/include/oci.h	635;"	d
OCIDefineArrayOfStruct	drivers/Oracle/OCI/include/oci.h	440;"	d
OCIDefineByPos	drivers/Oracle/OCI/include/oci.h	436;"	d
OCIDefineDynamic	drivers/Oracle/OCI/include/oci.h	438;"	d
OCIDefineObject	drivers/Oracle/OCI/include/oci.h	442;"	d
OCIDescribe	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIDescribe      OCIDescribe;          \/* OCI Describe handle *\/$/;"	t	typeref:struct:OCIDescribe
OCIDescribe	drivers/Oracle/OCI/include/oci.h	634;"	d
OCIDescribeAny	drivers/Oracle/OCI/include/oci.h	420;"	d
OCIDescriptorAlloc	drivers/Oracle/OCI/include/oci.h	416;"	d
OCIDescriptorFree	drivers/Oracle/OCI/include/oci.h	418;"	d
OCIDirPathColArray	drivers/Oracle/OCI/include/oci8dp.h	/^typedef struct OCIDirPathColArray OCIDirPathColArray;        \/* column array *\/$/;"	t	typeref:struct:OCIDirPathColArray
OCIDirPathCtx	drivers/Oracle/OCI/include/oci8dp.h	/^typedef struct OCIDirPathCtx      OCIDirPathCtx;                  \/* context *\/$/;"	t	typeref:struct:OCIDirPathCtx
OCIDirPathDesc	drivers/Oracle/OCI/include/oci8dp.h	/^typedef struct OCIDirPathDesc     OCIDirPathDesc;  \/* direct path descriptor *\/$/;"	t	typeref:struct:OCIDirPathDesc
OCIDirPathFuncCtx	drivers/Oracle/OCI/include/oci8dp.h	/^typedef struct OCIDirPathFuncCtx  OCIDirPathFuncCtx;     \/* function context *\/$/;"	t	typeref:struct:OCIDirPathFuncCtx
OCIDirPathStream	drivers/Oracle/OCI/include/oci8dp.h	/^typedef struct OCIDirPathStream   OCIDirPathStream;                \/* stream *\/$/;"	t	typeref:struct:OCIDirPathStream
OCIDuration	drivers/Oracle/OCI/include/oro.h	/^typedef ub2 OCIDuration;$/;"	t
OCIDuration	drivers/Oracle/OCI/include/oro.h	199;"	d
OCIDurationBegin	drivers/Oracle/OCI/include/ori.h	520;"	d
OCIDurationEnd	drivers/Oracle/OCI/include/ori.h	521;"	d
OCIDurationGetParent	drivers/Oracle/OCI/include/ori.h	522;"	d
OCIEVDEF	drivers/Oracle/OCI/include/ocidef.h	267;"	d
OCIEVTSF	drivers/Oracle/OCI/include/ocidef.h	268;"	d
OCIEXTPROC_ERROR	drivers/Oracle/OCI/include/ociextp.h	75;"	d
OCIEXTPROC_SUCCESS	drivers/Oracle/OCI/include/ociextp.h	74;"	d
OCIEXTP_ORACLE	drivers/Oracle/OCI/include/ociextp.h	53;"	d
OCIEnv	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIEnv           OCIEnv;            \/* OCI environment handle *\/$/;"	t	typeref:struct:OCIEnv
OCIEnv	drivers/Oracle/OCI/include/oci.h	636;"	d
OCIEnvCallbackType	drivers/Oracle/OCI/include/ociap.h	/^typedef sword (*OCIEnvCallbackType)(OCIEnv *env, ub4 mode,$/;"	t
OCIEnvCallbackType	drivers/Oracle/OCI/include/ocikp.h	/^typedef sword (*OCIEnvCallbackType)(\/*_ OCIEnv *env, ub4 mode,$/;"	t
OCIEnvCallbackType	drivers/Oracle/ociap.h	/^typedef sword (*OCIEnvCallbackType)(OCIEnv *env, ub4 mode,$/;"	t
OCIEnvCreate	drivers/Oracle/OCI/include/oci.h	676;"	d
OCIEnvInit	drivers/Oracle/OCI/include/oci.h	426;"	d
OCIError	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIError         OCIError;                \/* OCI error handle *\/$/;"	t	typeref:struct:OCIError
OCIError	drivers/Oracle/OCI/include/oci.h	637;"	d
OCIErrorGet	drivers/Oracle/OCI/include/oci.h	424;"	d
OCIExtProcAllocCallMemory	drivers/Oracle/OCI/include/ociextp.h	127;"	d
OCIExtProcContext	drivers/Oracle/OCI/include/ociextp.h	/^typedef struct OCIExtProcContext OCIExtProcContext;$/;"	t	typeref:struct:OCIExtProcContext
OCIExtProcGetEnv	drivers/Oracle/OCI/include/ociextp.h	217;"	d
OCIExtProcRaiseExcp	drivers/Oracle/OCI/include/ociextp.h	159;"	d
OCIExtProcRaiseExcpWithMsg	drivers/Oracle/OCI/include/ociextp.h	193;"	d
OCIExtractFromFile	drivers/Oracle/OCI/include/oci.h	525;"	d
OCIExtractFromList	drivers/Oracle/OCI/include/oci.h	532;"	d
OCIExtractFromStr	drivers/Oracle/OCI/include/oci.h	526;"	d
OCIExtractInit	drivers/Oracle/OCI/include/oci.h	520;"	d
OCIExtractReset	drivers/Oracle/OCI/include/oci.h	522;"	d
OCIExtractSetKey	drivers/Oracle/OCI/include/oci.h	524;"	d
OCIExtractSetNumKeys	drivers/Oracle/OCI/include/oci.h	523;"	d
OCIExtractTerm	drivers/Oracle/OCI/include/oci.h	521;"	d
OCIExtractToBool	drivers/Oracle/OCI/include/oci.h	528;"	d
OCIExtractToInt	drivers/Oracle/OCI/include/oci.h	527;"	d
OCIExtractToList	drivers/Oracle/OCI/include/oci.h	531;"	d
OCIExtractToOCINum	drivers/Oracle/OCI/include/oci.h	530;"	d
OCIExtractToStr	drivers/Oracle/OCI/include/oci.h	529;"	d
OCIFetchRowCallback	drivers/Oracle/OCI/include/ociap.h	/^typedef sword (*OCIFetchRowCallback)(dvoid *ctx);$/;"	t
OCIFileClose	drivers/Oracle/OCI/include/oci.h	594;"	d
OCIFileExists	drivers/Oracle/OCI/include/oci.h	598;"	d
OCIFileFlush	drivers/Oracle/OCI/include/oci.h	600;"	d
OCIFileGetLength	drivers/Oracle/OCI/include/oci.h	599;"	d
OCIFileInit	drivers/Oracle/OCI/include/oci.h	591;"	d
OCIFileObject	drivers/Oracle/OCI/include/oci1.h	/^typedef struct OCIFileObject OCIFileObject;$/;"	t	typeref:struct:OCIFileObject
OCIFileOpen	drivers/Oracle/OCI/include/oci.h	593;"	d
OCIFileRead	drivers/Oracle/OCI/include/oci.h	595;"	d
OCIFileSeek	drivers/Oracle/OCI/include/oci.h	597;"	d
OCIFileTerm	drivers/Oracle/OCI/include/oci.h	592;"	d
OCIFileWrite	drivers/Oracle/OCI/include/oci.h	596;"	d
OCIFocbkStruct	drivers/Oracle/OCI/include/ociap.h	/^OCIFocbkStruct;$/;"	t	typeref:struct:__anon81
OCIFocbkStruct	drivers/Oracle/OCI/include/ocikp.h	/^OCIFocbkStruct;$/;"	t	typeref:struct:__anon91
OCIFocbkStruct	drivers/Oracle/ociap.h	/^OCIFocbkStruct;$/;"	t	typeref:struct:__anon77
OCIFormatChar	drivers/Oracle/OCI/include/oci1.h	84;"	d
OCIFormatDP	drivers/Oracle/OCI/include/oci1.h	90;"	d
OCIFormatDouble	drivers/Oracle/OCI/include/oci1.h	86;"	d
OCIFormatDvoid	drivers/Oracle/OCI/include/oci1.h	87;"	d
OCIFormatEb1	drivers/Oracle/OCI/include/oci1.h	80;"	d
OCIFormatEb2	drivers/Oracle/OCI/include/oci1.h	81;"	d
OCIFormatEb4	drivers/Oracle/OCI/include/oci1.h	82;"	d
OCIFormatEnd	drivers/Oracle/OCI/include/oci1.h	88;"	d
OCIFormatEword	drivers/Oracle/OCI/include/oci1.h	83;"	d
OCIFormatInit	drivers/Oracle/OCI/include/oci.h	568;"	d
OCIFormatSb1	drivers/Oracle/OCI/include/oci1.h	75;"	d
OCIFormatSb2	drivers/Oracle/OCI/include/oci1.h	76;"	d
OCIFormatSb4	drivers/Oracle/OCI/include/oci1.h	77;"	d
OCIFormatSbig_ora	drivers/Oracle/OCI/include/oci1.h	79;"	d
OCIFormatString	drivers/Oracle/OCI/include/oci.h	569;"	d
OCIFormatSword	drivers/Oracle/OCI/include/oci1.h	78;"	d
OCIFormatTChar	drivers/Oracle/OCI/include/oci.h	585;"	d
OCIFormatTDouble	drivers/Oracle/OCI/include/oci.h	587;"	d
OCIFormatTDvoid	drivers/Oracle/OCI/include/oci.h	588;"	d
OCIFormatTEb1	drivers/Oracle/OCI/include/oci.h	581;"	d
OCIFormatTEb2	drivers/Oracle/OCI/include/oci.h	582;"	d
OCIFormatTEb4	drivers/Oracle/OCI/include/oci.h	583;"	d
OCIFormatTEnd	drivers/Oracle/OCI/include/oci.h	589;"	d
OCIFormatTEword	drivers/Oracle/OCI/include/oci.h	584;"	d
OCIFormatTSb1	drivers/Oracle/OCI/include/oci.h	576;"	d
OCIFormatTSb2	drivers/Oracle/OCI/include/oci.h	577;"	d
OCIFormatTSb4	drivers/Oracle/OCI/include/oci.h	578;"	d
OCIFormatTSbig_ora	drivers/Oracle/OCI/include/oci.h	580;"	d
OCIFormatTSword	drivers/Oracle/OCI/include/oci.h	579;"	d
OCIFormatTText	drivers/Oracle/OCI/include/oci.h	586;"	d
OCIFormatTUb1	drivers/Oracle/OCI/include/oci.h	571;"	d
OCIFormatTUb2	drivers/Oracle/OCI/include/oci.h	572;"	d
OCIFormatTUb4	drivers/Oracle/OCI/include/oci.h	573;"	d
OCIFormatTUbig_ora	drivers/Oracle/OCI/include/oci.h	575;"	d
OCIFormatTUword	drivers/Oracle/OCI/include/oci.h	574;"	d
OCIFormatTerm	drivers/Oracle/OCI/include/oci.h	570;"	d
OCIFormatText	drivers/Oracle/OCI/include/oci1.h	85;"	d
OCIFormatUb1	drivers/Oracle/OCI/include/oci1.h	70;"	d
OCIFormatUb2	drivers/Oracle/OCI/include/oci1.h	71;"	d
OCIFormatUb4	drivers/Oracle/OCI/include/oci1.h	72;"	d
OCIFormatUbig_ora	drivers/Oracle/OCI/include/oci1.h	74;"	d
OCIFormatUword	drivers/Oracle/OCI/include/oci1.h	73;"	d
OCIHandleAlloc	drivers/Oracle/OCI/include/oci.h	428;"	d
OCIHandleFree	drivers/Oracle/OCI/include/oci.h	429;"	d
OCIInd	drivers/Oracle/OCI/include/oro.h	/^typedef sb2 OCIInd;$/;"	t
OCIInd	drivers/Oracle/OCI/include/oro.h	200;"	d
OCIInitialize	drivers/Oracle/OCI/include/oci.h	441;"	d
OCIInitializeStatementHandle	drivers/Oracle/OCI/include/ociextp.h	242;"	d
OCIInterval	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIInterval OCIInterval;           \/* OCI Interval descriptor *\/$/;"	t	typeref:struct:OCIInterval
OCIIntervalAdd	drivers/Oracle/OCI/include/oci.h	552;"	d
OCIIntervalAssign	drivers/Oracle/OCI/include/oci.h	560;"	d
OCIIntervalCheck	drivers/Oracle/OCI/include/oci.h	559;"	d
OCIIntervalCompare	drivers/Oracle/OCI/include/oci.h	555;"	d
OCIIntervalDivide	drivers/Oracle/OCI/include/oci.h	554;"	d
OCIIntervalFromNumber	drivers/Oracle/OCI/include/oci.h	565;"	d
OCIIntervalFromTZ	drivers/Oracle/OCI/include/oci.h	566;"	d
OCIIntervalFromText	drivers/Oracle/OCI/include/oci.h	556;"	d
OCIIntervalGetDaySecond	drivers/Oracle/OCI/include/oci.h	563;"	d
OCIIntervalGetYearMonth	drivers/Oracle/OCI/include/oci.h	561;"	d
OCIIntervalMultiply	drivers/Oracle/OCI/include/oci.h	553;"	d
OCIIntervalSetDaySecond	drivers/Oracle/OCI/include/oci.h	564;"	d
OCIIntervalSetYearMonth	drivers/Oracle/OCI/include/oci.h	562;"	d
OCIIntervalSubtract	drivers/Oracle/OCI/include/oci.h	551;"	d
OCIIntervalToNumber	drivers/Oracle/OCI/include/oci.h	558;"	d
OCIIntervalToText	drivers/Oracle/OCI/include/oci.h	557;"	d
OCIIter	drivers/Oracle/OCI/include/orl.h	/^typedef struct OCIIter OCIIter;$/;"	t	typeref:struct:OCIIter
OCIIter	drivers/Oracle/OCI/include/orl.h	382;"	d
OCIIterCreate	drivers/Oracle/OCI/include/orl.h	383;"	d
OCIIterDelete	drivers/Oracle/OCI/include/orl.h	384;"	d
OCIIterGetCurrent	drivers/Oracle/OCI/include/orl.h	385;"	d
OCIIterInit	drivers/Oracle/OCI/include/orl.h	386;"	d
OCIIterNext	drivers/Oracle/OCI/include/orl.h	387;"	d
OCIIterPrev	drivers/Oracle/OCI/include/orl.h	388;"	d
OCIKPR	drivers/Oracle/OCI/include/ocikpr.h	37;"	d
OCIKP_ORACLE	drivers/Oracle/OCI/include/ocikp.h	201;"	d
OCILMDEF	drivers/Oracle/OCI/include/ocidef.h	275;"	d
OCILMESY	drivers/Oracle/OCI/include/ocidef.h	277;"	d
OCILMISY	drivers/Oracle/OCI/include/ocidef.h	278;"	d
OCILMNBL	drivers/Oracle/OCI/include/ocidef.h	276;"	d
OCILMTRY	drivers/Oracle/OCI/include/ocidef.h	279;"	d
OCILdaToSvcCtx	drivers/Oracle/OCI/include/oci.h	439;"	d
OCILob	drivers/Oracle/OCI/include/oci.h	645;"	d
OCILobAppend	drivers/Oracle/OCI/include/oci.h	444;"	d
OCILobAssign	drivers/Oracle/OCI/include/oci.h	677;"	d
OCILobCharSetForm	drivers/Oracle/OCI/include/oci.h	678;"	d
OCILobCharSetId	drivers/Oracle/OCI/include/oci.h	679;"	d
OCILobCloseFile	drivers/Oracle/OCI/include/oci.h	446;"	d
OCILobCopy	drivers/Oracle/OCI/include/oci.h	448;"	d
OCILobDisableBuffering	drivers/Oracle/OCI/include/oci.h	680;"	d
OCILobEnableBuffering	drivers/Oracle/OCI/include/oci.h	681;"	d
OCILobErase	drivers/Oracle/OCI/include/oci.h	454;"	d
OCILobFileClose	drivers/Oracle/OCI/include/oci.h	682;"	d
OCILobFileCloseAll	drivers/Oracle/OCI/include/oci.h	683;"	d
OCILobFileCreate	drivers/Oracle/OCI/include/oci.h	449;"	d
OCILobFileDelete	drivers/Oracle/OCI/include/oci.h	450;"	d
OCILobFileExists	drivers/Oracle/OCI/include/oci.h	684;"	d
OCILobFileGetName	drivers/Oracle/OCI/include/oci.h	685;"	d
OCILobFileIsOpen	drivers/Oracle/OCI/include/oci.h	686;"	d
OCILobFileOpen	drivers/Oracle/OCI/include/oci.h	687;"	d
OCILobFileSetName	drivers/Oracle/OCI/include/oci.h	688;"	d
OCILobFlushBuffer	drivers/Oracle/OCI/include/oci.h	689;"	d
OCILobGetLength	drivers/Oracle/OCI/include/oci.h	451;"	d
OCILobIsEqual	drivers/Oracle/OCI/include/oci.h	690;"	d
OCILobLength	drivers/Oracle/OCI/include/oci.h	/^typedef ub4 OCILobLength;$/;"	t
OCILobLength	drivers/Oracle/OCI/include/oci.h	646;"	d
OCILobLoadFromFile	drivers/Oracle/OCI/include/oci.h	691;"	d
OCILobLocator	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCILobLocator    OCILobLocator; \/* OCI Lob Locator descriptor *\/$/;"	t	typeref:struct:OCILobLocator
OCILobLocator	drivers/Oracle/OCI/include/oci.h	447;"	d
OCILobLocator	drivers/Oracle/OCI/include/oci.h	650;"	d
OCILobLocatorAssign	drivers/Oracle/OCI/include/oci.h	693;"	d
OCILobLocatorIsInit	drivers/Oracle/OCI/include/oci.h	692;"	d
OCILobMode	drivers/Oracle/OCI/include/oci.h	/^enum OCILobMode$/;"	g
OCILobMode	drivers/Oracle/OCI/include/oci.h	/^typedef enum OCILobMode OCILobMode;$/;"	t	typeref:enum:OCILobMode
OCILobMode	drivers/Oracle/OCI/include/oci.h	647;"	d
OCILobOffset	drivers/Oracle/OCI/include/oci.h	/^typedef ub4 OCILobOffset;$/;"	t
OCILobOffset	drivers/Oracle/OCI/include/oci.h	648;"	d
OCILobOpenFile	drivers/Oracle/OCI/include/oci.h	445;"	d
OCILobRead	drivers/Oracle/OCI/include/oci.h	453;"	d
OCILobTrim	drivers/Oracle/OCI/include/oci.h	455;"	d
OCILobWrite	drivers/Oracle/OCI/include/oci.h	452;"	d
OCILockOpt	drivers/Oracle/OCI/include/oro.h	/^enum OCILockOpt$/;"	g
OCILockOpt	drivers/Oracle/OCI/include/oro.h	/^typedef enum OCILockOpt OCILockOpt;$/;"	t	typeref:enum:OCILockOpt
OCILockOpt	drivers/Oracle/OCI/include/oro.h	201;"	d
OCILogoff	drivers/Oracle/OCI/include/oci.h	696;"	d
OCILogon	drivers/Oracle/OCI/include/oci.h	694;"	d
OCILogon2	drivers/Oracle/OCI/include/oci.h	695;"	d
OCIMarkOpt	drivers/Oracle/OCI/include/oro.h	/^enum OCIMarkOpt$/;"	g
OCIMarkOpt	drivers/Oracle/OCI/include/oro.h	/^typedef enum OCIMarkOpt OCIMarkOpt;$/;"	t	typeref:enum:OCIMarkOpt
OCIMarkOpt	drivers/Oracle/OCI/include/oro.h	202;"	d
OCIMsg	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIMsg  OCIMsg;$/;"	t	typeref:struct:OCIMsg
OCINumber	drivers/Oracle/OCI/include/orl.h	/^struct OCINumber$/;"	s
OCINumber	drivers/Oracle/OCI/include/orl.h	/^typedef struct OCINumber OCINumber;$/;"	t	typeref:struct:OCINumber
OCINumber	drivers/Oracle/OCI/include/orl.h	389;"	d
OCINumberAbs	drivers/Oracle/OCI/include/orl.h	390;"	d
OCINumberAdd	drivers/Oracle/OCI/include/orl.h	391;"	d
OCINumberArcCos	drivers/Oracle/OCI/include/orl.h	392;"	d
OCINumberArcSin	drivers/Oracle/OCI/include/orl.h	393;"	d
OCINumberArcTan	drivers/Oracle/OCI/include/orl.h	394;"	d
OCINumberArcTan2	drivers/Oracle/OCI/include/orl.h	427;"	d
OCINumberAssign	drivers/Oracle/OCI/include/orl.h	395;"	d
OCINumberCeil	drivers/Oracle/OCI/include/orl.h	396;"	d
OCINumberCmp	drivers/Oracle/OCI/include/orl.h	433;"	d
OCINumberCos	drivers/Oracle/OCI/include/orl.h	397;"	d
OCINumberDec	drivers/Oracle/OCI/include/orl.h	409;"	d
OCINumberDiv	drivers/Oracle/OCI/include/orl.h	398;"	d
OCINumberExp	drivers/Oracle/OCI/include/orl.h	417;"	d
OCINumberFloor	drivers/Oracle/OCI/include/orl.h	400;"	d
OCINumberFromInt	drivers/Oracle/OCI/include/orl.h	401;"	d
OCINumberFromReal	drivers/Oracle/OCI/include/orl.h	402;"	d
OCINumberFromText	drivers/Oracle/OCI/include/orl.h	403;"	d
OCINumberHypCos	drivers/Oracle/OCI/include/orl.h	404;"	d
OCINumberHypSin	drivers/Oracle/OCI/include/orl.h	405;"	d
OCINumberHypTan	drivers/Oracle/OCI/include/orl.h	426;"	d
OCINumberInc	drivers/Oracle/OCI/include/orl.h	408;"	d
OCINumberIntPower	drivers/Oracle/OCI/include/orl.h	410;"	d
OCINumberIsInt	drivers/Oracle/OCI/include/orl.h	435;"	d
OCINumberIsZero	drivers/Oracle/OCI/include/orl.h	434;"	d
OCINumberLn	drivers/Oracle/OCI/include/orl.h	411;"	d
OCINumberLog	drivers/Oracle/OCI/include/orl.h	412;"	d
OCINumberMod	drivers/Oracle/OCI/include/orl.h	413;"	d
OCINumberMul	drivers/Oracle/OCI/include/orl.h	414;"	d
OCINumberNeg	drivers/Oracle/OCI/include/orl.h	415;"	d
OCINumberPart	drivers/Oracle/OCI/include/orl.h	/^  ub1 OCINumberPart[OCI_NUMBER_SIZE];$/;"	m	struct:OCINumber
OCINumberPart	drivers/Oracle/OCI/include/orl.h	416;"	d
OCINumberPower	drivers/Oracle/OCI/include/orl.h	399;"	d
OCINumberPrec	drivers/Oracle/OCI/include/orl.h	419;"	d
OCINumberRound	drivers/Oracle/OCI/include/orl.h	418;"	d
OCINumberSetPi	drivers/Oracle/OCI/include/orl.h	407;"	d
OCINumberSetZero	drivers/Oracle/OCI/include/orl.h	406;"	d
OCINumberShift	drivers/Oracle/OCI/include/orl.h	420;"	d
OCINumberSign	drivers/Oracle/OCI/include/orl.h	421;"	d
OCINumberSin	drivers/Oracle/OCI/include/orl.h	422;"	d
OCINumberSqrt	drivers/Oracle/OCI/include/orl.h	423;"	d
OCINumberSub	drivers/Oracle/OCI/include/orl.h	424;"	d
OCINumberTan	drivers/Oracle/OCI/include/orl.h	425;"	d
OCINumberToInt	drivers/Oracle/OCI/include/orl.h	428;"	d
OCINumberToLnx	drivers/Oracle/OCI/include/orl.h	3608;"	d
OCINumberToReal	drivers/Oracle/OCI/include/orl.h	429;"	d
OCINumberToRealArray	drivers/Oracle/OCI/include/orl.h	430;"	d
OCINumberToText	drivers/Oracle/OCI/include/orl.h	431;"	d
OCINumberTrunc	drivers/Oracle/OCI/include/orl.h	432;"	d
OCIObjectAlwaysLatest	drivers/Oracle/OCI/include/ori.h	536;"	d
OCIObjectArrayPin	drivers/Oracle/OCI/include/ori.h	556;"	d
OCIObjectCopy	drivers/Oracle/OCI/include/ori.h	542;"	d
OCIObjectEvent	drivers/Oracle/OCI/include/oro.h	/^enum OCIObjectEvent$/;"	g
OCIObjectEvent	drivers/Oracle/OCI/include/oro.h	/^typedef enum OCIObjectEvent OCIObjectEvent;$/;"	t	typeref:enum:OCIObjectEvent
OCIObjectEvent	drivers/Oracle/OCI/include/oro.h	203;"	d
OCIObjectExists	drivers/Oracle/OCI/include/ori.h	546;"	d
OCIObjectFlush	drivers/Oracle/OCI/include/ori.h	540;"	d
OCIObjectFlushRefresh	drivers/Oracle/OCI/include/ori.h	541;"	d
OCIObjectFree	drivers/Oracle/OCI/include/ori.h	555;"	d
OCIObjectGetAttr	drivers/Oracle/OCI/include/orid.h	274;"	d
OCIObjectGetInd	drivers/Oracle/OCI/include/ori.h	545;"	d
OCIObjectGetObjectRef	drivers/Oracle/OCI/include/ori.h	544;"	d
OCIObjectGetPrimaryKeyTypeRef	drivers/Oracle/OCI/include/ori.h	550;"	d
OCIObjectGetProperty	drivers/Oracle/OCI/include/ori.h	547;"	d
OCIObjectGetTypeRef	drivers/Oracle/OCI/include/ori.h	543;"	d
OCIObjectIsDirtied	drivers/Oracle/OCI/include/ori.h	558;"	d
OCIObjectIsDirty	drivers/Oracle/OCI/include/ori.h	557;"	d
OCIObjectIsLoaded	drivers/Oracle/OCI/include/ori.h	559;"	d
OCIObjectLifetime	drivers/Oracle/OCI/include/oro.h	/^enum OCIObjectLifetime$/;"	g
OCIObjectLifetime	drivers/Oracle/OCI/include/oro.h	/^typedef enum OCIObjectLifetime OCIObjectLifetime;$/;"	t	typeref:enum:OCIObjectLifetime
OCIObjectLifetime	drivers/Oracle/OCI/include/oro.h	214;"	d
OCIObjectLock	drivers/Oracle/OCI/include/ori.h	531;"	d
OCIObjectLockNoWait	drivers/Oracle/OCI/include/ori.h	532;"	d
OCIObjectMakeObjectRef	drivers/Oracle/OCI/include/ori.h	551;"	d
OCIObjectMarkDelete	drivers/Oracle/OCI/include/ori.h	539;"	d
OCIObjectMarkDeleteByRef	drivers/Oracle/OCI/include/ori.h	538;"	d
OCIObjectMarkStatus	drivers/Oracle/OCI/include/oro.h	/^typedef uword OCIObjectMarkStatus;$/;"	t
OCIObjectMarkUpdate	drivers/Oracle/OCI/include/ori.h	533;"	d
OCIObjectMarkstatus	drivers/Oracle/OCI/include/oro.h	215;"	d
OCIObjectNew	drivers/Oracle/OCI/include/ori.h	553;"	d
OCIObjectNotAlwaysLatest	drivers/Oracle/OCI/include/ori.h	537;"	d
OCIObjectPin	drivers/Oracle/OCI/include/ori.h	554;"	d
OCIObjectPinCountReset	drivers/Oracle/OCI/include/ori.h	530;"	d
OCIObjectPinTable	drivers/Oracle/OCI/include/ori.h	549;"	d
OCIObjectPropId	drivers/Oracle/OCI/include/oro.h	/^typedef ub1 OCIObjectPropId;$/;"	t
OCIObjectPropId	drivers/Oracle/OCI/include/oro.h	213;"	d
OCIObjectProperty	drivers/Oracle/OCI/include/oro.h	/^enum OCIObjectProperty$/;"	g
OCIObjectProperty	drivers/Oracle/OCI/include/oro.h	/^typedef enum OCIObjectProperty OCIObjectProperty;$/;"	t	typeref:enum:OCIObjectProperty
OCIObjectProperty	drivers/Oracle/OCI/include/oro.h	204;"	d
OCIObjectRefresh	drivers/Oracle/OCI/include/ori.h	548;"	d
OCIObjectSetAttr	drivers/Oracle/OCI/include/orid.h	273;"	d
OCIObjectUnmark	drivers/Oracle/OCI/include/ori.h	534;"	d
OCIObjectUnmarkByRef	drivers/Oracle/OCI/include/ori.h	535;"	d
OCIObjectUnpin	drivers/Oracle/OCI/include/ori.h	529;"	d
OCIP_ATTR_DIRPATH_VARRAY_INDEX	drivers/Oracle/OCI/include/oci.h	1080;"	d
OCIP_ICACHE	drivers/Oracle/OCI/include/oci.h	1388;"	d
OCIParam	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIParam         OCIParam;        \/* OCI PARameter descriptor *\/$/;"	t	typeref:struct:OCIParam
OCIParam	drivers/Oracle/OCI/include/oci.h	655;"	d
OCIParamGet	drivers/Oracle/OCI/include/oci.h	473;"	d
OCIParamSet	drivers/Oracle/OCI/include/oci.h	474;"	d
OCIPasswordChange	drivers/Oracle/OCI/include/oci.h	468;"	d
OCIPicklerFdo	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIPicklerFdo OCIPicklerFdo;$/;"	t	typeref:struct:OCIPicklerFdo
OCIPicklerImage	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIPicklerImage OCIPicklerImage;$/;"	t	typeref:struct:OCIPicklerImage
OCIPicklerTds	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIPicklerTds OCIPicklerTds;$/;"	t	typeref:struct:OCIPicklerTds
OCIPicklerTdsCtx	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIPicklerTdsCtx OCIPicklerTdsCtx;$/;"	t	typeref:struct:OCIPicklerTdsCtx
OCIPicklerTdsElement	drivers/Oracle/OCI/include/oci.h	/^typedef ub4 OCIPicklerTdsElement;$/;"	t
OCIPinOpt	drivers/Oracle/OCI/include/oro.h	/^enum OCIPinOpt$/;"	g
OCIPinOpt	drivers/Oracle/OCI/include/oro.h	/^typedef enum OCIPinOpt OCIPinOpt;$/;"	t	typeref:enum:OCIPinOpt
OCIPinOpt	drivers/Oracle/OCI/include/oro.h	205;"	d
OCIRaw	drivers/Oracle/OCI/include/orl.h	/^typedef struct OCIRaw OCIRaw;$/;"	t	typeref:struct:OCIRaw
OCIRaw	drivers/Oracle/OCI/include/orl.h	436;"	d
OCIRawAllocSize	drivers/Oracle/OCI/include/orl.h	437;"	d
OCIRawAssignBytes	drivers/Oracle/OCI/include/orl.h	438;"	d
OCIRawAssignRaw	drivers/Oracle/OCI/include/orl.h	439;"	d
OCIRawPtr	drivers/Oracle/OCI/include/orl.h	440;"	d
OCIRawResize	drivers/Oracle/OCI/include/orl.h	441;"	d
OCIRawSize	drivers/Oracle/OCI/include/orl.h	442;"	d
OCIRef	drivers/Oracle/OCI/include/oro.h	/^typedef struct OCIRef OCIRef;$/;"	t	typeref:struct:OCIRef
OCIRef	drivers/Oracle/OCI/include/oro.h	206;"	d
OCIRefAssign	drivers/Oracle/OCI/include/orl.h	443;"	d
OCIRefClear	drivers/Oracle/OCI/include/orl.h	444;"	d
OCIRefFromHex	drivers/Oracle/OCI/include/orl.h	445;"	d
OCIRefHexSize	drivers/Oracle/OCI/include/orl.h	446;"	d
OCIRefIsEqual	drivers/Oracle/OCI/include/orl.h	447;"	d
OCIRefIsNull	drivers/Oracle/OCI/include/orl.h	448;"	d
OCIRefToHex	drivers/Oracle/OCI/include/orl.h	449;"	d
OCIRefreshOpt	drivers/Oracle/OCI/include/oro.h	/^enum OCIRefreshOpt$/;"	g
OCIRefreshOpt	drivers/Oracle/OCI/include/oro.h	/^typedef enum OCIRefreshOpt OCIRefreshOpt; $/;"	t	typeref:enum:OCIRefreshOpt
OCIRefreshOpt	drivers/Oracle/OCI/include/oro.h	207;"	d
OCIResult	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIResult        OCIResult;      \/* OCI Result Set Descriptor *\/$/;"	t	typeref:struct:OCIResult
OCIResult	drivers/Oracle/OCI/include/oci.h	656;"	d
OCIResultSetToStmt	drivers/Oracle/OCI/include/oci.h	413;"	d
OCIRowid	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIRowid OCIRowid;                    \/* OCI ROWID descriptor *\/$/;"	t	typeref:struct:OCIRowid
OCIRowid	drivers/Oracle/OCI/include/oci.h	670;"	d
OCIRowidToChar	drivers/Oracle/OCI/include/oci.h	430;"	d
OCISPool	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCISPool         OCISPool;             \/* session pool handle *\/$/;"	t	typeref:struct:OCISPool
OCISPool	drivers/Oracle/OCI/include/oci.h	641;"	d
OCISecurity	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCISecurity      OCISecurity;          \/* OCI Security handle *\/$/;"	t	typeref:struct:OCISecurity
OCISecurity	drivers/Oracle/OCI/include/oci.h	667;"	d
OCISecurityAbortIdentity	drivers/Oracle/OCI/include/oci.h	489;"	d
OCISecurityClosePersona	drivers/Oracle/OCI/include/oci.h	482;"	d
OCISecurityCloseWallet	drivers/Oracle/OCI/include/oci.h	477;"	d
OCISecurityCreateIdentity	drivers/Oracle/OCI/include/oci.h	488;"	d
OCISecurityCreatePersona	drivers/Oracle/OCI/include/oci.h	484;"	d
OCISecurityCreateWallet	drivers/Oracle/OCI/include/oci.h	478;"	d
OCISecurityDeEnvelope	drivers/Oracle/OCI/include/oci.h	506;"	d
OCISecurityDecrypt	drivers/Oracle/OCI/include/oci.h	504;"	d
OCISecurityDestroyWallet	drivers/Oracle/OCI/include/oci.h	479;"	d
OCISecurityEncrypt	drivers/Oracle/OCI/include/oci.h	502;"	d
OCISecurityEncryptExpansion	drivers/Oracle/OCI/include/oci.h	503;"	d
OCISecurityEnvelope	drivers/Oracle/OCI/include/oci.h	505;"	d
OCISecurityFreeIdentity	drivers/Oracle/OCI/include/oci.h	490;"	d
OCISecurityGetIdentity	drivers/Oracle/OCI/include/oci.h	518;"	d
OCISecurityGetProtection	drivers/Oracle/OCI/include/oci.h	486;"	d
OCISecurityHash	drivers/Oracle/OCI/include/oci.h	509;"	d
OCISecurityHashExpansion	drivers/Oracle/OCI/include/oci.h	510;"	d
OCISecurityInitBlock	drivers/Oracle/OCI/include/oci.h	514;"	d
OCISecurityKeyedHash	drivers/Oracle/OCI/include/oci.h	507;"	d
OCISecurityKeyedHashExpansion	drivers/Oracle/OCI/include/oci.h	508;"	d
OCISecurityOpenPersona	drivers/Oracle/OCI/include/oci.h	481;"	d
OCISecurityOpenWallet	drivers/Oracle/OCI/include/oci.h	476;"	d
OCISecurityPKDecrypt	drivers/Oracle/OCI/include/oci.h	501;"	d
OCISecurityPKEncryptExpansion	drivers/Oracle/OCI/include/oci.h	500;"	d
OCISecurityPurgeBlock	drivers/Oracle/OCI/include/oci.h	516;"	d
OCISecurityRandomBytes	drivers/Oracle/OCI/include/oci.h	512;"	d
OCISecurityRandomNumber	drivers/Oracle/OCI/include/oci.h	513;"	d
OCISecurityRemoveIdentity	drivers/Oracle/OCI/include/oci.h	487;"	d
OCISecurityRemovePersona	drivers/Oracle/OCI/include/oci.h	483;"	d
OCISecurityReuseBlock	drivers/Oracle/OCI/include/oci.h	515;"	d
OCISecuritySeedRandom	drivers/Oracle/OCI/include/oci.h	511;"	d
OCISecuritySetBlock	drivers/Oracle/OCI/include/oci.h	517;"	d
OCISecuritySetProtection	drivers/Oracle/OCI/include/oci.h	485;"	d
OCISecuritySign	drivers/Oracle/OCI/include/oci.h	492;"	d
OCISecuritySignDetExpansion	drivers/Oracle/OCI/include/oci.h	497;"	d
OCISecuritySignDetached	drivers/Oracle/OCI/include/oci.h	496;"	d
OCISecuritySignExpansion	drivers/Oracle/OCI/include/oci.h	493;"	d
OCISecurityStorePersona	drivers/Oracle/OCI/include/oci.h	480;"	d
OCISecurityStoreTrustedIdentity	drivers/Oracle/OCI/include/oci.h	491;"	d
OCISecurityValidate	drivers/Oracle/OCI/include/oci.h	495;"	d
OCISecurityVerify	drivers/Oracle/OCI/include/oci.h	494;"	d
OCISecurityVerifyDetached	drivers/Oracle/OCI/include/oci.h	498;"	d
OCISecurity_PKEncrypt	drivers/Oracle/OCI/include/oci.h	499;"	d
OCIServer	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIServer        OCIServer;              \/* OCI Server handle *\/$/;"	t	typeref:struct:OCIServer
OCIServer	drivers/Oracle/OCI/include/oci.h	658;"	d
OCIServerAttach	drivers/Oracle/OCI/include/oci.h	415;"	d
OCIServerDNs	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIServerDNs     OCIServerDNs;    \/* OCI server DN descriptor *\/$/;"	t	typeref:struct:OCIServerDNs
OCIServerDetach	drivers/Oracle/OCI/include/oci.h	417;"	d
OCIServerVersion	drivers/Oracle/OCI/include/oci.h	419;"	d
OCISession	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCISession       OCISession;     \/* OCI Authentication handle *\/$/;"	t	typeref:struct:OCISession
OCISession	drivers/Oracle/OCI/include/oci.h	632;"	d
OCISessionBegin	drivers/Oracle/OCI/include/oci.h	414;"	d
OCISessionEnd	drivers/Oracle/OCI/include/oci.h	412;"	d
OCISnapshot	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCISnapshot      OCISnapshot;      \/* OCI snapshot descriptor *\/$/;"	t	typeref:struct:OCISnapshot
OCISnapshot	drivers/Oracle/OCI/include/oci.h	657;"	d
OCIStmt	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIStmt          OCIStmt;             \/* OCI statement handle *\/$/;"	t	typeref:struct:OCIStmt
OCIStmt	drivers/Oracle/OCI/include/oci.h	659;"	d
OCIStmtBindByName	drivers/Oracle/OCI/include/oci.h	433;"	d
OCIStmtBindByPos	drivers/Oracle/OCI/include/oci.h	432;"	d
OCIStmtExecute	drivers/Oracle/OCI/include/oci.h	443;"	d
OCIStmtFetch	drivers/Oracle/OCI/include/oci.h	457;"	d
OCIStmtGetBindInfo	drivers/Oracle/OCI/include/oci.h	458;"	d
OCIStmtGetPieceInfo	drivers/Oracle/OCI/include/oci.h	459;"	d
OCIStmtPrepare	drivers/Oracle/OCI/include/oci.h	460;"	d
OCIStmtSetPieceInfo	drivers/Oracle/OCI/include/oci.h	461;"	d
OCIString	drivers/Oracle/OCI/include/orl.h	/^typedef struct OCIString OCIString;$/;"	t	typeref:struct:OCIString
OCIString	drivers/Oracle/OCI/include/orl.h	450;"	d
OCIStringAllocSize	drivers/Oracle/OCI/include/orl.h	451;"	d
OCIStringAssign	drivers/Oracle/OCI/include/orl.h	452;"	d
OCIStringAssignText	drivers/Oracle/OCI/include/orl.h	453;"	d
OCIStringPtr	drivers/Oracle/OCI/include/orl.h	454;"	d
OCIStringResize	drivers/Oracle/OCI/include/orl.h	455;"	d
OCIStringSize	drivers/Oracle/OCI/include/orl.h	456;"	d
OCISubscription	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCISubscription  OCISubscription;      \/* subscription handle *\/$/;"	t	typeref:struct:OCISubscription
OCISubscriptionNotify	drivers/Oracle/OCI/include/ociap.h	/^typedef ub4 (*OCISubscriptionNotify)(dvoid *ctx, OCISubscription *subscrhp, $/;"	t
OCISubscriptionNotify	drivers/Oracle/OCI/include/ocikp.h	/^typedef ub4 (*OCISubscriptionNotify)(\/*_ dvoid *ctx, OCISubscription *subscrhp,$/;"	t
OCISubscriptionNotify	drivers/Oracle/ociap.h	/^typedef ub4 (*OCISubscriptionNotify)(dvoid *ctx, OCISubscription *subscrhp, $/;"	t
OCISvcCtx	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCISvcCtx        OCISvcCtx;             \/* OCI service handle *\/$/;"	t	typeref:struct:OCISvcCtx
OCISvcCtx	drivers/Oracle/OCI/include/oci.h	660;"	d
OCISvcCtxToLda	drivers/Oracle/OCI/include/oci.h	462;"	d
OCITable	drivers/Oracle/OCI/include/orl.h	/^typedef OCIColl OCITable;$/;"	t
OCITable	drivers/Oracle/OCI/include/orl.h	457;"	d
OCITableDelete	drivers/Oracle/OCI/include/orl.h	458;"	d
OCITableExists	drivers/Oracle/OCI/include/orl.h	459;"	d
OCITableFirst	drivers/Oracle/OCI/include/orl.h	460;"	d
OCITableLast	drivers/Oracle/OCI/include/orl.h	461;"	d
OCITableNext	drivers/Oracle/OCI/include/orl.h	462;"	d
OCITablePrev	drivers/Oracle/OCI/include/orl.h	463;"	d
OCITableSize	drivers/Oracle/OCI/include/orl.h	464;"	d
OCIThreadClose	drivers/Oracle/OCI/include/oci.h	627;"	d
OCIThreadContext	drivers/Oracle/OCI/include/oci1.h	/^typedef struct OCIThreadContext OCIThreadContext;$/;"	t	typeref:struct:OCIThreadContext
OCIThreadCreate	drivers/Oracle/OCI/include/oci.h	625;"	d
OCIThreadHandle	drivers/Oracle/OCI/include/oci1.h	/^typedef struct OCIThreadHandle  OCIThreadHandle;  $/;"	t	typeref:struct:OCIThreadHandle
OCIThreadHandleGet	drivers/Oracle/OCI/include/oci.h	628;"	d
OCIThreadHndDestroy	drivers/Oracle/OCI/include/oci.h	624;"	d
OCIThreadHndInit	drivers/Oracle/OCI/include/oci.h	623;"	d
OCIThreadId	drivers/Oracle/OCI/include/oci1.h	/^typedef struct OCIThreadId      OCIThreadId;  $/;"	t	typeref:struct:OCIThreadId
OCIThreadIdDestroy	drivers/Oracle/OCI/include/oci.h	617;"	d
OCIThreadIdGet	drivers/Oracle/OCI/include/oci.h	620;"	d
OCIThreadIdInit	drivers/Oracle/OCI/include/oci.h	616;"	d
OCIThreadIdNull	drivers/Oracle/OCI/include/oci.h	622;"	d
OCIThreadIdSame	drivers/Oracle/OCI/include/oci.h	621;"	d
OCIThreadIdSet	drivers/Oracle/OCI/include/oci.h	618;"	d
OCIThreadIdSetNull	drivers/Oracle/OCI/include/oci.h	619;"	d
OCIThreadInit	drivers/Oracle/OCI/include/oci.h	605;"	d
OCIThreadIsMulti	drivers/Oracle/OCI/include/oci.h	607;"	d
OCIThreadJoin	drivers/Oracle/OCI/include/oci.h	626;"	d
OCIThreadKey	drivers/Oracle/OCI/include/oci1.h	/^typedef struct OCIThreadKey     OCIThreadKey;  $/;"	t	typeref:struct:OCIThreadKey
OCIThreadKeyDestFunc	drivers/Oracle/OCI/include/oci1.h	/^typedef void (*OCIThreadKeyDestFunc)(\/*_ dvoid * _*\/);$/;"	t
OCIThreadKeyDestroy	drivers/Oracle/OCI/include/oci.h	613;"	d
OCIThreadKeyGet	drivers/Oracle/OCI/include/oci.h	614;"	d
OCIThreadKeyInit	drivers/Oracle/OCI/include/oci.h	612;"	d
OCIThreadKeySet	drivers/Oracle/OCI/include/oci.h	615;"	d
OCIThreadMutex	drivers/Oracle/OCI/include/oci1.h	/^typedef struct OCIThreadMutex   OCIThreadMutex; $/;"	t	typeref:struct:OCIThreadMutex
OCIThreadMutexAcquire	drivers/Oracle/OCI/include/oci.h	610;"	d
OCIThreadMutexDestroy	drivers/Oracle/OCI/include/oci.h	609;"	d
OCIThreadMutexInit	drivers/Oracle/OCI/include/oci.h	608;"	d
OCIThreadMutexRelease	drivers/Oracle/OCI/include/oci.h	611;"	d
OCIThreadProcessInit	drivers/Oracle/OCI/include/oci.h	604;"	d
OCIThreadTerm	drivers/Oracle/OCI/include/oci.h	606;"	d
OCITime	drivers/Oracle/OCI/include/orl.h	/^struct OCITime$/;"	s
OCITime	drivers/Oracle/OCI/include/orl.h	/^typedef struct OCITime OCITime;$/;"	t	typeref:struct:OCITime
OCITime	drivers/Oracle/OCI/include/orl.h	465;"	d
OCITimeHH	drivers/Oracle/OCI/include/orl.h	/^  ub1 OCITimeHH;                          \/* hours; range is 0 <= hours <=23 *\/$/;"	m	struct:OCITime
OCITimeHH	drivers/Oracle/OCI/include/orl.h	466;"	d
OCITimeMI	drivers/Oracle/OCI/include/orl.h	/^  ub1 OCITimeMI;                     \/* minutes; range is 0 <= minutes <= 59 *\/$/;"	m	struct:OCITime
OCITimeMI	drivers/Oracle/OCI/include/orl.h	467;"	d
OCITimeSS	drivers/Oracle/OCI/include/orl.h	/^  ub1 OCITimeSS;                     \/* seconds; range is 0 <= seconds <= 59 *\/$/;"	m	struct:OCITime
OCITimeSS	drivers/Oracle/OCI/include/orl.h	468;"	d
OCITrans	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCITrans         OCITrans;          \/* OCI Transaction handle *\/$/;"	t	typeref:struct:OCITrans
OCITrans	drivers/Oracle/OCI/include/oci.h	661;"	d
OCITransCommit	drivers/Oracle/OCI/include/oci.h	463;"	d
OCITransDetach	drivers/Oracle/OCI/include/oci.h	464;"	d
OCITransForget	drivers/Oracle/OCI/include/oci.h	465;"	d
OCITransMultiPrepare	drivers/Oracle/OCI/include/oci.h	470;"	d
OCITransPrepare	drivers/Oracle/OCI/include/oci.h	466;"	d
OCITransRollback	drivers/Oracle/OCI/include/oci.h	467;"	d
OCITransStart	drivers/Oracle/OCI/include/oci.h	469;"	d
OCIType	drivers/Oracle/OCI/include/ort.h	/^typedef struct OCIType OCIType;$/;"	t	typeref:struct:OCIType
OCITypeArrayByName	drivers/Oracle/OCI/include/ort.h	627;"	d
OCITypeAttrByName	drivers/Oracle/OCI/include/ort.h	628;"	d
OCITypeAttrNext	drivers/Oracle/OCI/include/ort.h	629;"	d
OCITypeAttrs	drivers/Oracle/OCI/include/ort.h	630;"	d
OCITypeByRef	drivers/Oracle/OCI/include/ort.h	631;"	d
OCITypeCode	drivers/Oracle/OCI/include/oro.h	/^typedef ub2 OCITypeCode;$/;"	t
OCITypeCode	drivers/Oracle/OCI/include/oro.h	208;"	d
OCITypeCollElem	drivers/Oracle/OCI/include/ort.h	632;"	d
OCITypeCollExtTypeCode	drivers/Oracle/OCI/include/ort.h	633;"	d
OCITypeCollSize	drivers/Oracle/OCI/include/ort.h	634;"	d
OCITypeCollTypeCode	drivers/Oracle/OCI/include/ort.h	635;"	d
OCITypeElem	drivers/Oracle/OCI/include/ort.h	/^typedef struct OCITypeElem OCITypeElem;$/;"	t	typeref:struct:OCITypeElem
OCITypeElem	drivers/Oracle/OCI/include/ort.h	636;"	d
OCITypeElemCharSetForm	drivers/Oracle/OCI/include/ort.h	637;"	d
OCITypeElemCharSetID	drivers/Oracle/OCI/include/ort.h	638;"	d
OCITypeElemDefaultValue	drivers/Oracle/OCI/include/ort.h	639;"	d
OCITypeElemExtTypeCode	drivers/Oracle/OCI/include/ort.h	640;"	d
OCITypeElemLength	drivers/Oracle/OCI/include/ort.h	641;"	d
OCITypeElemName	drivers/Oracle/OCI/include/ort.h	642;"	d
OCITypeElemNumPrec	drivers/Oracle/OCI/include/ort.h	643;"	d
OCITypeElemNumScale	drivers/Oracle/OCI/include/ort.h	644;"	d
OCITypeElemParamMode	drivers/Oracle/OCI/include/ort.h	645;"	d
OCITypeElemParameterizedType	drivers/Oracle/OCI/include/ort.h	646;"	d
OCITypeElemType	drivers/Oracle/OCI/include/ort.h	647;"	d
OCITypeElemTypeCode	drivers/Oracle/OCI/include/ort.h	648;"	d
OCITypeEncap	drivers/Oracle/OCI/include/oro.h	/^enum OCITypeEncap$/;"	g
OCITypeEncap	drivers/Oracle/OCI/include/oro.h	/^typedef enum OCITypeEncap OCITypeEncap;$/;"	t	typeref:enum:OCITypeEncap
OCITypeEncap	drivers/Oracle/OCI/include/oro.h	209;"	d
OCITypeGetOpt	drivers/Oracle/OCI/include/oro.h	/^enum OCITypeGetOpt$/;"	g
OCITypeGetOpt	drivers/Oracle/OCI/include/oro.h	/^typedef enum OCITypeGetOpt OCITypeGetOpt;$/;"	t	typeref:enum:OCITypeGetOpt
OCITypeGetOpt	drivers/Oracle/OCI/include/oro.h	210;"	d
OCITypeIter	drivers/Oracle/OCI/include/ort.h	/^typedef struct OCITypeIter OCITypeIter;$/;"	t	typeref:struct:OCITypeIter
OCITypeIter	drivers/Oracle/OCI/include/ort.h	649;"	d
OCITypeIterFree	drivers/Oracle/OCI/include/ort.h	650;"	d
OCITypeIterNew	drivers/Oracle/OCI/include/ort.h	651;"	d
OCITypeIterSet	drivers/Oracle/OCI/include/ort.h	652;"	d
OCITypeMethod	drivers/Oracle/OCI/include/ort.h	/^typedef struct OCITypeMethod OCITypeMethod;$/;"	t	typeref:struct:OCITypeMethod
OCITypeMethod	drivers/Oracle/OCI/include/ort.h	653;"	d
OCITypeMethodByName	drivers/Oracle/OCI/include/ort.h	654;"	d
OCITypeMethodEncap	drivers/Oracle/OCI/include/ort.h	655;"	d
OCITypeMethodFlag	drivers/Oracle/OCI/include/oro.h	/^enum OCITypeMethodFlag$/;"	g
OCITypeMethodFlag	drivers/Oracle/OCI/include/oro.h	/^typedef enum OCITypeMethodFlag OCITypeMethodFlag;$/;"	t	typeref:enum:OCITypeMethodFlag
OCITypeMethodFlag	drivers/Oracle/OCI/include/oro.h	211;"	d
OCITypeMethodFlags	drivers/Oracle/OCI/include/ort.h	656;"	d
OCITypeMethodMap	drivers/Oracle/OCI/include/ort.h	657;"	d
OCITypeMethodName	drivers/Oracle/OCI/include/ort.h	658;"	d
OCITypeMethodNext	drivers/Oracle/OCI/include/ort.h	659;"	d
OCITypeMethodOrder	drivers/Oracle/OCI/include/ort.h	660;"	d
OCITypeMethodOverload	drivers/Oracle/OCI/include/ort.h	661;"	d
OCITypeMethodParams	drivers/Oracle/OCI/include/ort.h	662;"	d
OCITypeMethods	drivers/Oracle/OCI/include/ort.h	663;"	d
OCITypeName	drivers/Oracle/OCI/include/ort.h	664;"	d
OCITypeParamByName	drivers/Oracle/OCI/include/ort.h	665;"	d
OCITypeParamMode	drivers/Oracle/OCI/include/oro.h	/^enum OCITypeParamMode$/;"	g
OCITypeParamMode	drivers/Oracle/OCI/include/oro.h	/^typedef enum OCITypeParamMode OCITypeParamMode;$/;"	t	typeref:enum:OCITypeParamMode
OCITypeParamMode	drivers/Oracle/OCI/include/oro.h	212;"	d
OCITypeParamPos	drivers/Oracle/OCI/include/ort.h	666;"	d
OCITypeSchema	drivers/Oracle/OCI/include/ort.h	667;"	d
OCITypeTypeCode	drivers/Oracle/OCI/include/ort.h	668;"	d
OCITypeVTInit	drivers/Oracle/OCI/include/ort.h	669;"	d
OCITypeVTInsert	drivers/Oracle/OCI/include/ort.h	670;"	d
OCITypeVTSelect	drivers/Oracle/OCI/include/ort.h	671;"	d
OCITypeVersion	drivers/Oracle/OCI/include/ort.h	672;"	d
OCIUcb	drivers/Oracle/OCI/include/oci.h	/^typedef struct OCIUcb           OCIUcb;      \/* OCI User Callback descriptor *\/$/;"	t	typeref:struct:OCIUcb
OCIUserCallback	drivers/Oracle/OCI/include/ociap.h	/^typedef sword (*OCIUserCallback)(dvoid *ctxp, dvoid *hndlp, ub4 type,$/;"	t
OCIUserCallback	drivers/Oracle/OCI/include/ocikp.h	/^typedef sword (*OCIUserCallback)(\/*_ dvoid *ctxp, dvoid *hndlp, ub4 type,$/;"	t
OCIUserCallback	drivers/Oracle/ociap.h	/^typedef sword (*OCIUserCallback)(dvoid *ctxp, dvoid *hndlp, ub4 type,$/;"	t
OCIWchar	drivers/Oracle/OCI/include/oci.h	/^typedef ub4            OCIWchar;$/;"	t
OCIXADConfig	drivers/Oracle/OCI/include/ocixad.h	/^typedef sword (*OCIXADConfig)(OraText *driverType,       \/* driver type name *\/$/;"	t
OCIXADField	drivers/Oracle/OCI/include/ocixad.h	/^typedef struct OCIXADField        OCIXADField;               \/* field handle *\/$/;"	t	typeref:struct:OCIXADField
OCIXADGranule	drivers/Oracle/OCI/include/ocixad.h	/^typedef struct OCIXADGranule      OCIXADGranule;           \/* granule handle *\/$/;"	t	typeref:struct:OCIXADGranule
OCIXADMethodClose	drivers/Oracle/OCI/include/ocixad.h	/^typedef sword  (*OCIXADMethodClose)(OCIXADSession *xadses,$/;"	t
OCIXADMethodEntry	drivers/Oracle/OCI/include/ocixad.h	/^struct OCIXADMethodEntry$/;"	s
OCIXADMethodEntry	drivers/Oracle/OCI/include/ocixad.h	/^typedef struct OCIXADMethodEntry OCIXADMethodEntry;$/;"	t	typeref:struct:OCIXADMethodEntry
OCIXADMethodErrorCallback	drivers/Oracle/OCI/include/ocixad.h	/^typedef void (*OCIXADMethodErrorCallback)(OCIXADSession *xadses,$/;"	t
OCIXADMethodFetch	drivers/Oracle/OCI/include/ocixad.h	/^typedef sword (*OCIXADMethodFetch)(OCIXADSession *xadses,$/;"	t
OCIXADMethodFetchInit	drivers/Oracle/OCI/include/ocixad.h	/^typedef sword (*OCIXADMethodFetchInit)(OCIXADSession *xadses,$/;"	t
OCIXADMethodGranuleInfo	drivers/Oracle/OCI/include/ocixad.h	/^typedef void (*OCIXADMethodGranuleInfo)(OCIXADGranule *xadgran,$/;"	t
OCIXADMethodOpen	drivers/Oracle/OCI/include/ocixad.h	/^typedef sword (*OCIXADMethodOpen)(OCIXADSession *xadses,$/;"	t
OCIXADMethodPopulate	drivers/Oracle/OCI/include/ocixad.h	/^typedef void (*OCIXADMethodPopulate)(OCIXADSession *xadses,$/;"	t
OCIXADMethodPopulateInit	drivers/Oracle/OCI/include/ocixad.h	/^typedef void (*OCIXADMethodPopulateInit)(OCIXADSession *xadses,$/;"	t
OCIXADMethodPopulateTerm	drivers/Oracle/OCI/include/ocixad.h	/^typedef void (*OCIXADMethodPopulateTerm)(OCIXADSession *xadses,$/;"	t
OCIXADSession	drivers/Oracle/OCI/include/ocixad.h	/^typedef struct OCIXADSession      OCIXADSession;           \/* session handle *\/$/;"	t	typeref:struct:OCIXADSession
OCIXADTable	drivers/Oracle/OCI/include/ocixad.h	/^typedef struct OCIXADTable        OCIXADTable;               \/* table handle *\/$/;"	t	typeref:struct:OCIXADTable
OCIXAD_METHOD_ENTRY_VERSION_1	drivers/Oracle/OCI/include/ocixad.h	110;"	d
OCIXAD_METHOD_ENTRY_VERSION_CUR	drivers/Oracle/OCI/include/ocixad.h	111;"	d
OCIXAD_ORACLE	drivers/Oracle/OCI/include/ocixad.h	34;"	d
OCIXMLDB_ORACLE	drivers/Oracle/OCI/include/ocixmldb.h	45;"	d
OCIXMLType	drivers/Oracle/OCI/include/orl.h	/^typedef struct OCIXMLType OCIXMLType;$/;"	t	typeref:struct:OCIXMLType
OCI_AC_DDL	drivers/Oracle/OCI/include/oci.h	1800;"	d
OCI_ADJUST_UNK	drivers/Oracle/OCI/include/oci.h	2032;"	d
OCI_AFC_PAD_ON	drivers/Oracle/OCI/include/oci.h	1267;"	d
OCI_ALWAYS_BLOCKING	drivers/Oracle/OCI/include/oci.h	1262;"	d
OCI_ANSI_DATE	drivers/Oracle/OCI/include/oci.h	2034;"	d
OCI_AQ_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1502;"	d
OCI_AQ_RESERVED_2	drivers/Oracle/OCI/include/oci.h	1503;"	d
OCI_AQ_RESERVED_3	drivers/Oracle/OCI/include/oci.h	1504;"	d
OCI_ATCH_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1405;"	d
OCI_ATCH_RESERVED_2	drivers/Oracle/OCI/include/oci.h	1406;"	d
OCI_ATCH_RESERVED_3	drivers/Oracle/OCI/include/oci.h	1407;"	d
OCI_ATCH_RESERVED_4	drivers/Oracle/OCI/include/oci.h	1409;"	d
OCI_ATTR_ACTION	drivers/Oracle/OCI/include/oci.h	1773;"	d
OCI_ATTR_ACTION_CONTEXT	drivers/Oracle/OCI/include/oci.h	1748;"	d
OCI_ATTR_AGENT_ADDRESS	drivers/Oracle/OCI/include/oci.h	873;"	d
OCI_ATTR_AGENT_NAME	drivers/Oracle/OCI/include/oci.h	872;"	d
OCI_ATTR_AGENT_PROTOCOL	drivers/Oracle/OCI/include/oci.h	874;"	d
OCI_ATTR_ALLOC_DURATION	drivers/Oracle/OCI/include/oci.h	837;"	d
OCI_ATTR_APPCTX_ATTR	drivers/Oracle/OCI/include/oci.h	1636;"	d
OCI_ATTR_APPCTX_LIST	drivers/Oracle/OCI/include/oci.h	1634;"	d
OCI_ATTR_APPCTX_NAME	drivers/Oracle/OCI/include/oci.h	1635;"	d
OCI_ATTR_APPCTX_SIZE	drivers/Oracle/OCI/include/oci.h	1633;"	d
OCI_ATTR_APPCTX_VALUE	drivers/Oracle/OCI/include/oci.h	1637;"	d
OCI_ATTR_AQ_ERROR_INDEX	drivers/Oracle/OCI/include/oci.h	888;"	d
OCI_ATTR_AQ_NUM_ERRORS	drivers/Oracle/OCI/include/oci.h	887;"	d
OCI_ATTR_ATTEMPTS	drivers/Oracle/OCI/include/oci.h	866;"	d
OCI_ATTR_AUDIT_SESSION_ID	drivers/Oracle/OCI/include/oci.h	1762;"	d
OCI_ATTR_AUTOCOMMIT_DDL	drivers/Oracle/OCI/include/oci.h	1629;"	d
OCI_ATTR_BIND_COUNT	drivers/Oracle/OCI/include/oci.h	1045;"	d
OCI_ATTR_BIND_DN	drivers/Oracle/OCI/include/oci.h	1000;"	d
OCI_ATTR_BIND_ROWCBK	drivers/Oracle/OCI/include/oci.h	1104;"	d
OCI_ATTR_BIND_ROWCTX	drivers/Oracle/OCI/include/oci.h	1105;"	d
OCI_ATTR_BUF_ADDR	drivers/Oracle/OCI/include/oci.h	891;"	d
OCI_ATTR_BUF_SIZE	drivers/Oracle/OCI/include/oci.h	892;"	d
OCI_ATTR_CACHE	drivers/Oracle/OCI/include/oci.h	941;"	d
OCI_ATTR_CACHE_ARRAYFLUSH	drivers/Oracle/OCI/include/oro.h	318;"	d
OCI_ATTR_CACHE_CLIENT_CONTEXT	drivers/Oracle/OCI/include/oci.h	1603;"	d
OCI_ATTR_CACHE_MAX_SIZE	drivers/Oracle/OCI/include/oci.h	835;"	d
OCI_ATTR_CACHE_OPT_SIZE	drivers/Oracle/OCI/include/oci.h	834;"	d
OCI_ATTR_CALL_TIME	drivers/Oracle/OCI/include/oci.h	1776;"	d
OCI_ATTR_CANONICAL_ALGO	drivers/Oracle/OCI/include/oci.h	1021;"	d
OCI_ATTR_CATALOG_LOCATION	drivers/Oracle/OCI/include/oci.h	1626;"	d
OCI_ATTR_CERTIFICATE	drivers/Oracle/OCI/include/oci.h	1019;"	d
OCI_ATTR_CHARSET	drivers/Oracle/OCI/include/oci.h	820;"	d
OCI_ATTR_CHARSET_FORM	drivers/Oracle/OCI/include/oci.h	832;"	d
OCI_ATTR_CHARSET_ID	drivers/Oracle/OCI/include/oci.h	831;"	d
OCI_ATTR_CHAR_COUNT	drivers/Oracle/OCI/include/oci.h	810;"	d
OCI_ATTR_CHAR_SIZE	drivers/Oracle/OCI/include/oci.h	1652;"	d
OCI_ATTR_CHAR_USED	drivers/Oracle/OCI/include/oci.h	1651;"	d
OCI_ATTR_CLIENT_IDENTIFIER	drivers/Oracle/OCI/include/oci.h	1640;"	d
OCI_ATTR_CLIENT_INFO	drivers/Oracle/OCI/include/oci.h	1774;"	d
OCI_ATTR_CLUSTERED	drivers/Oracle/OCI/include/oci.h	931;"	d
OCI_ATTR_COLLECTION_ELEMENT	drivers/Oracle/OCI/include/oci.h	1572;"	d
OCI_ATTR_COLLECTION_TYPECODE	drivers/Oracle/OCI/include/oci.h	1562;"	d
OCI_ATTR_COLLECT_CALL_TIME	drivers/Oracle/OCI/include/oci.h	1775;"	d
OCI_ATTR_COL_COUNT	drivers/Oracle/OCI/include/oci.h	900;"	d
OCI_ATTR_COMMENT	drivers/Oracle/OCI/include/oci.h	1740;"	d
OCI_ATTR_COMPLEXOBJECTCOMP_TYPE	drivers/Oracle/OCI/include/oci.h	1544;"	d
OCI_ATTR_COMPLEXOBJECTCOMP_TYPE_LEVEL	drivers/Oracle/OCI/include/oci.h	1545;"	d
OCI_ATTR_COMPLEXOBJECT_COLL_OUTOFLINE	drivers/Oracle/OCI/include/oci.h	1547;"	d
OCI_ATTR_COMPLEXOBJECT_LEVEL	drivers/Oracle/OCI/include/oci.h	1546;"	d
OCI_ATTR_CONDITION	drivers/Oracle/OCI/include/oci.h	1739;"	d
OCI_ATTR_CONN_BUSY_COUNT	drivers/Oracle/OCI/include/oci.h	1032;"	d
OCI_ATTR_CONN_INCR	drivers/Oracle/OCI/include/oci.h	1038;"	d
OCI_ATTR_CONN_MAX	drivers/Oracle/OCI/include/oci.h	1037;"	d
OCI_ATTR_CONN_MIN	drivers/Oracle/OCI/include/oci.h	1036;"	d
OCI_ATTR_CONN_NOWAIT	drivers/Oracle/OCI/include/oci.h	1031;"	d
OCI_ATTR_CONN_OPEN_COUNT	drivers/Oracle/OCI/include/oci.h	1033;"	d
OCI_ATTR_CONN_TIMEOUT	drivers/Oracle/OCI/include/oci.h	1034;"	d
OCI_ATTR_CONSUMER_NAME	drivers/Oracle/OCI/include/oci.h	856;"	d
OCI_ATTR_CORRELATION	drivers/Oracle/OCI/include/oci.h	865;"	d
OCI_ATTR_CURRENT_POSITION	drivers/Oracle/OCI/include/oci.h	1012;"	d
OCI_ATTR_CURSOR_COMMIT_BEHAVIOR	drivers/Oracle/OCI/include/oci.h	1624;"	d
OCI_ATTR_DATA_SIZE	drivers/Oracle/OCI/include/oci.h	1530;"	d
OCI_ATTR_DATA_TYPE	drivers/Oracle/OCI/include/oci.h	1531;"	d
OCI_ATTR_DATEFORMAT	drivers/Oracle/OCI/include/oci.h	890;"	d
OCI_ATTR_DELAY	drivers/Oracle/OCI/include/oci.h	863;"	d
OCI_ATTR_DEQCOND	drivers/Oracle/OCI/include/oci.h	983;"	d
OCI_ATTR_DEQ_MODE	drivers/Oracle/OCI/include/oci.h	857;"	d
OCI_ATTR_DEQ_MSGID	drivers/Oracle/OCI/include/oci.h	860;"	d
OCI_ATTR_DESCRIBE_NATIVE	drivers/Oracle/OCI/include/oci.h	1043;"	d
OCI_ATTR_DESC_PUBLIC	drivers/Oracle/OCI/include/oci.h	1600;"	d
OCI_ATTR_DIGEST_ALGO	drivers/Oracle/OCI/include/oci.h	1018;"	d
OCI_ATTR_DIGEST_VALUE	drivers/Oracle/OCI/include/oci.h	1023;"	d
OCI_ATTR_DIRPATH_BADROW	drivers/Oracle/OCI/include/oci.h	1715;"	d
OCI_ATTR_DIRPATH_BADROW_LENGTH	drivers/Oracle/OCI/include/oci.h	1716;"	d
OCI_ATTR_DIRPATH_CONVERT	drivers/Oracle/OCI/include/oci.h	1714;"	d
OCI_ATTR_DIRPATH_DCACHE_DISABLE	drivers/Oracle/OCI/include/oci.h	1674;"	d
OCI_ATTR_DIRPATH_DCACHE_HITS	drivers/Oracle/OCI/include/oci.h	1673;"	d
OCI_ATTR_DIRPATH_DCACHE_MISSES	drivers/Oracle/OCI/include/oci.h	1672;"	d
OCI_ATTR_DIRPATH_DCACHE_NUM	drivers/Oracle/OCI/include/oci.h	1670;"	d
OCI_ATTR_DIRPATH_DCACHE_SIZE	drivers/Oracle/OCI/include/oci.h	1671;"	d
OCI_ATTR_DIRPATH_EXPR_TYPE	drivers/Oracle/OCI/include/oci.h	991;"	d
OCI_ATTR_DIRPATH_FILE	drivers/Oracle/OCI/include/oci.h	971;"	d
OCI_ATTR_DIRPATH_FN_CTX	drivers/Oracle/OCI/include/oci.h	1017;"	d
OCI_ATTR_DIRPATH_GRANULE_OFFSET	drivers/Oracle/OCI/include/oci.h	1719;"	d
OCI_ATTR_DIRPATH_GRANULE_SIZE	drivers/Oracle/OCI/include/oci.h	1718;"	d
OCI_ATTR_DIRPATH_INDEX_MAINT_METHOD	drivers/Oracle/OCI/include/oci.h	967;"	d
OCI_ATTR_DIRPATH_INPUT	drivers/Oracle/OCI/include/oci.h	993;"	d
OCI_ATTR_DIRPATH_LOCK_WAIT	drivers/Oracle/OCI/include/oci.h	1756;"	d
OCI_ATTR_DIRPATH_MODE	drivers/Oracle/OCI/include/oci.h	893;"	d
OCI_ATTR_DIRPATH_NOLOG	drivers/Oracle/OCI/include/oci.h	894;"	d
OCI_ATTR_DIRPATH_OBJ_CONSTR	drivers/Oracle/OCI/include/oci.h	1069;"	d
OCI_ATTR_DIRPATH_OID	drivers/Oracle/OCI/include/oci.h	1040;"	d
OCI_ATTR_DIRPATH_PARALLEL	drivers/Oracle/OCI/include/oci.h	895;"	d
OCI_ATTR_DIRPATH_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1720;"	d
OCI_ATTR_DIRPATH_RESERVED_2	drivers/Oracle/OCI/include/oci.h	1721;"	d
OCI_ATTR_DIRPATH_RESERVED_3	drivers/Oracle/OCI/include/oci.h	1727;"	d
OCI_ATTR_DIRPATH_RESERVED_4	drivers/Oracle/OCI/include/oci.h	1728;"	d
OCI_ATTR_DIRPATH_RESERVED_5	drivers/Oracle/OCI/include/oci.h	1753;"	d
OCI_ATTR_DIRPATH_RESERVED_6	drivers/Oracle/OCI/include/oci.h	1754;"	d
OCI_ATTR_DIRPATH_RESERVED_7	drivers/Oracle/OCI/include/oci.h	1712;"	d
OCI_ATTR_DIRPATH_RESERVED_8	drivers/Oracle/OCI/include/oci.h	1713;"	d
OCI_ATTR_DIRPATH_SID	drivers/Oracle/OCI/include/oci.h	1050;"	d
OCI_ATTR_DIRPATH_SKIPINDEX_METHOD	drivers/Oracle/OCI/include/oci.h	981;"	d
OCI_ATTR_DIRPATH_SORTED_INDEX	drivers/Oracle/OCI/include/oci.h	964;"	d
OCI_ATTR_DIRPATH_STORAGE_INITIAL	drivers/Oracle/OCI/include/oci.h	972;"	d
OCI_ATTR_DIRPATH_STORAGE_NEXT	drivers/Oracle/OCI/include/oci.h	973;"	d
OCI_ATTR_DIRPATH_STREAM_VERSION	drivers/Oracle/OCI/include/oci.h	1078;"	d
OCI_ATTR_DIRPATH_WRITE_ORDER	drivers/Oracle/OCI/include/oci.h	1717;"	d
OCI_ATTR_DISP_NAME	drivers/Oracle/OCI/include/oci.h	1550;"	d
OCI_ATTR_DISP_SIZE	drivers/Oracle/OCI/include/oci.h	1532;"	d
OCI_ATTR_DISTINGUISHED_NAME	drivers/Oracle/OCI/include/oci.h	1658;"	d
OCI_ATTR_DML_ROW_OFFSET	drivers/Oracle/OCI/include/oci.h	884;"	d
OCI_ATTR_DN_COUNT	drivers/Oracle/OCI/include/oci.h	1007;"	d
OCI_ATTR_DURATION	drivers/Oracle/OCI/include/oci.h	958;"	d
OCI_ATTR_ECONTEXT_ID	drivers/Oracle/OCI/include/oci.h	1777;"	d
OCI_ATTR_ECONTEXT_SEQ	drivers/Oracle/OCI/include/oci.h	1778;"	d
OCI_ATTR_ENCAPSULATION	drivers/Oracle/OCI/include/oci.h	1584;"	d
OCI_ATTR_ENQ_TIME	drivers/Oracle/OCI/include/oci.h	869;"	d
OCI_ATTR_ENV	drivers/Oracle/OCI/include/oci.h	800;"	d
OCI_ATTR_ENV_CHARSET_ID	drivers/Oracle/OCI/include/oci.h	1109;"	d
OCI_ATTR_ENV_NCHARSET_ID	drivers/Oracle/OCI/include/oci.h	1110;"	d
OCI_ATTR_ENV_UTF16	drivers/Oracle/OCI/include/oci.h	1073;"	d
OCI_ATTR_ERRONEOUS_COLUMN	drivers/Oracle/OCI/include/oci.h	1065;"	d
OCI_ATTR_EVALUATION_FUNCTION	drivers/Oracle/OCI/include/oci.h	1744;"	d
OCI_ATTR_EVAL_CONTEXT_NAME	drivers/Oracle/OCI/include/oci.h	1743;"	d
OCI_ATTR_EVAL_CONTEXT_OWNER	drivers/Oracle/OCI/include/oci.h	1742;"	d
OCI_ATTR_EXCEPTION_QUEUE	drivers/Oracle/OCI/include/oci.h	868;"	d
OCI_ATTR_EXPIRATION	drivers/Oracle/OCI/include/oci.h	864;"	d
OCI_ATTR_EXTERNAL_NAME	drivers/Oracle/OCI/include/oci.h	826;"	d
OCI_ATTR_FDO	drivers/Oracle/OCI/include/oci.h	840;"	d
OCI_ATTR_FNCODE	drivers/Oracle/OCI/include/oci.h	796;"	d
OCI_ATTR_FOCBK	drivers/Oracle/OCI/include/oci.h	847;"	d
OCI_ATTR_FSPRECISION	drivers/Oracle/OCI/include/oci.h	813;"	d
OCI_ATTR_HANDLE_POSITION	drivers/Oracle/OCI/include/oci.h	1046;"	d
OCI_ATTR_HAS_DEFAULT	drivers/Oracle/OCI/include/oci.h	1555;"	d
OCI_ATTR_HAS_FILE	drivers/Oracle/OCI/include/oci.h	1571;"	d
OCI_ATTR_HAS_LOB	drivers/Oracle/OCI/include/oci.h	1570;"	d
OCI_ATTR_HAS_NESTED_TABLE	drivers/Oracle/OCI/include/oci.h	1569;"	d
OCI_ATTR_HAS_RESULT	drivers/Oracle/OCI/include/oci.h	1589;"	d
OCI_ATTR_HAS_SUBTYPES	drivers/Oracle/OCI/include/oci.h	1701;"	d
OCI_ATTR_HEAPALLOC	drivers/Oracle/OCI/include/oci.h	830;"	d
OCI_ATTR_HW_MARK	drivers/Oracle/OCI/include/oci.h	943;"	d
OCI_ATTR_INCR	drivers/Oracle/OCI/include/oci.h	940;"	d
OCI_ATTR_INDEX_ONLY	drivers/Oracle/OCI/include/oci.h	933;"	d
OCI_ATTR_INITIAL_CLIENT_ROLES	drivers/Oracle/OCI/include/oci.h	925;"	d
OCI_ATTR_INST_TYPE	drivers/Oracle/OCI/include/oci.h	1070;"	d
OCI_ATTR_INTERNAL_NAME	drivers/Oracle/OCI/include/oci.h	825;"	d
OCI_ATTR_IN_V8_MODE	drivers/Oracle/OCI/include/oci.h	848;"	d
OCI_ATTR_IOMODE	drivers/Oracle/OCI/include/oci.h	1556;"	d
OCI_ATTR_IS_CONSTANT	drivers/Oracle/OCI/include/oci.h	1588;"	d
OCI_ATTR_IS_CONSTRUCTOR	drivers/Oracle/OCI/include/oci.h	1590;"	d
OCI_ATTR_IS_DESTRUCTOR	drivers/Oracle/OCI/include/oci.h	1591;"	d
OCI_ATTR_IS_EXTERNAL	drivers/Oracle/OCI/include/oci.h	1084;"	d
OCI_ATTR_IS_FINAL_METHOD	drivers/Oracle/OCI/include/oci.h	1645;"	d
OCI_ATTR_IS_FINAL_TYPE	drivers/Oracle/OCI/include/oci.h	1643;"	d
OCI_ATTR_IS_INCOMPLETE_TYPE	drivers/Oracle/OCI/include/oci.h	1564;"	d
OCI_ATTR_IS_INLINE	drivers/Oracle/OCI/include/oci.h	1587;"	d
OCI_ATTR_IS_INSTANTIABLE_METHOD	drivers/Oracle/OCI/include/oci.h	1646;"	d
OCI_ATTR_IS_INSTANTIABLE_TYPE	drivers/Oracle/OCI/include/oci.h	1644;"	d
OCI_ATTR_IS_INVOKER_RIGHTS	drivers/Oracle/OCI/include/oci.h	959;"	d
OCI_ATTR_IS_JAVA_TYPE	drivers/Oracle/OCI/include/oci.h	1655;"	d
OCI_ATTR_IS_MAP	drivers/Oracle/OCI/include/oci.h	1593;"	d
OCI_ATTR_IS_NULL	drivers/Oracle/OCI/include/oci.h	1536;"	d
OCI_ATTR_IS_OPERATOR	drivers/Oracle/OCI/include/oci.h	1592;"	d
OCI_ATTR_IS_ORDER	drivers/Oracle/OCI/include/oci.h	1594;"	d
OCI_ATTR_IS_OVERRIDDEN_METHOD	drivers/Oracle/OCI/include/oci.h	1709;"	d
OCI_ATTR_IS_OVERRIDING_METHOD	drivers/Oracle/OCI/include/oci.h	1647;"	d
OCI_ATTR_IS_PREDEFINED_TYPE	drivers/Oracle/OCI/include/oci.h	1566;"	d
OCI_ATTR_IS_RNDS	drivers/Oracle/OCI/include/oci.h	1595;"	d
OCI_ATTR_IS_RNPS	drivers/Oracle/OCI/include/oci.h	1596;"	d
OCI_ATTR_IS_SELFISH	drivers/Oracle/OCI/include/oci.h	1585;"	d
OCI_ATTR_IS_SUBTYPE	drivers/Oracle/OCI/include/oci.h	1612;"	d
OCI_ATTR_IS_SYSTEM_GENERATED_TYPE	drivers/Oracle/OCI/include/oci.h	1568;"	d
OCI_ATTR_IS_SYSTEM_TYPE	drivers/Oracle/OCI/include/oci.h	1565;"	d
OCI_ATTR_IS_TEMPORARY	drivers/Oracle/OCI/include/oci.h	956;"	d
OCI_ATTR_IS_TRANSIENT_TYPE	drivers/Oracle/OCI/include/oci.h	1567;"	d
OCI_ATTR_IS_TYPED	drivers/Oracle/OCI/include/oci.h	957;"	d
OCI_ATTR_IS_VIRTUAL	drivers/Oracle/OCI/include/oci.h	1586;"	d
OCI_ATTR_IS_WNDS	drivers/Oracle/OCI/include/oci.h	1597;"	d
OCI_ATTR_IS_WNPS	drivers/Oracle/OCI/include/oci.h	1598;"	d
OCI_ATTR_IS_XMLTYPE	drivers/Oracle/OCI/include/oci.h	1692;"	d
OCI_ATTR_KERBEROS_CID	drivers/Oracle/OCI/include/oci.h	1735;"	d
OCI_ATTR_KERBEROS_CID_KEY	drivers/Oracle/OCI/include/oci.h	1766;"	d
OCI_ATTR_KERBEROS_KEY	drivers/Oracle/OCI/include/oci.h	1765;"	d
OCI_ATTR_KERBEROS_TICKET	drivers/Oracle/OCI/include/oci.h	1659;"	d
OCI_ATTR_LDAP_AUTH	drivers/Oracle/OCI/include/oci.h	1003;"	d
OCI_ATTR_LDAP_CRED	drivers/Oracle/OCI/include/oci.h	1001;"	d
OCI_ATTR_LDAP_CTX	drivers/Oracle/OCI/include/oci.h	1004;"	d
OCI_ATTR_LDAP_HOST	drivers/Oracle/OCI/include/oci.h	998;"	d
OCI_ATTR_LDAP_PORT	drivers/Oracle/OCI/include/oci.h	999;"	d
OCI_ATTR_LEVEL	drivers/Oracle/OCI/include/oci.h	1554;"	d
OCI_ATTR_LFPRECISION	drivers/Oracle/OCI/include/oci.h	816;"	d
OCI_ATTR_LINK	drivers/Oracle/OCI/include/oci.h	937;"	d
OCI_ATTR_LIST_ARGUMENTS	drivers/Oracle/OCI/include/oci.h	934;"	d
OCI_ATTR_LIST_COLUMNS	drivers/Oracle/OCI/include/oci.h	929;"	d
OCI_ATTR_LIST_OBJECTS	drivers/Oracle/OCI/include/oci.h	1617;"	d
OCI_ATTR_LIST_SCHEMAS	drivers/Oracle/OCI/include/oci.h	1621;"	d
OCI_ATTR_LIST_SUBPROGRAMS	drivers/Oracle/OCI/include/oci.h	935;"	d
OCI_ATTR_LIST_SUBTYPES	drivers/Oracle/OCI/include/oci.h	1703;"	d
OCI_ATTR_LIST_TABLE_ALIASES	drivers/Oracle/OCI/include/oci.h	1749;"	d
OCI_ATTR_LIST_TYPE_ATTRS	drivers/Oracle/OCI/include/oci.h	1574;"	d
OCI_ATTR_LIST_TYPE_METHODS	drivers/Oracle/OCI/include/oci.h	1576;"	d
OCI_ATTR_LIST_VARIABLE_TYPES	drivers/Oracle/OCI/include/oci.h	1750;"	d
OCI_ATTR_LOBEMPTY	drivers/Oracle/OCI/include/oci.h	849;"	d
OCI_ATTR_LOCKING_MODE	drivers/Oracle/OCI/include/oci.h	1630;"	d
OCI_ATTR_LTYPE	drivers/Oracle/OCI/include/oci.h	954;"	d
OCI_ATTR_MAP_METHOD	drivers/Oracle/OCI/include/oci.h	1577;"	d
OCI_ATTR_MAX	drivers/Oracle/OCI/include/oci.h	939;"	d
OCI_ATTR_MAXCHAR_SIZE	drivers/Oracle/OCI/include/oci.h	1010;"	d
OCI_ATTR_MAXDATA_SIZE	drivers/Oracle/OCI/include/oci.h	833;"	d
OCI_ATTR_MAX_CATALOG_NAMELEN	drivers/Oracle/OCI/include/oci.h	1625;"	d
OCI_ATTR_MAX_COLUMN_LEN	drivers/Oracle/OCI/include/oci.h	1623;"	d
OCI_ATTR_MAX_PROC_LEN	drivers/Oracle/OCI/include/oci.h	1622;"	d
OCI_ATTR_MEMPOOL_APPNAME	drivers/Oracle/OCI/include/oci.h	913;"	d
OCI_ATTR_MEMPOOL_HOMENAME	drivers/Oracle/OCI/include/oci.h	914;"	d
OCI_ATTR_MEMPOOL_INSTNAME	drivers/Oracle/OCI/include/oci.h	912;"	d
OCI_ATTR_MEMPOOL_MODEL	drivers/Oracle/OCI/include/oci.h	915;"	d
OCI_ATTR_MEMPOOL_SIZE	drivers/Oracle/OCI/include/oci.h	911;"	d
OCI_ATTR_MESSAGE_CSCN	drivers/Oracle/OCI/include/oci.h	1758;"	d
OCI_ATTR_MESSAGE_DSCN	drivers/Oracle/OCI/include/oci.h	1759;"	d
OCI_ATTR_MIGSESSION	drivers/Oracle/OCI/include/oci.h	907;"	d
OCI_ATTR_MIN	drivers/Oracle/OCI/include/oci.h	938;"	d
OCI_ATTR_MODES	drivers/Oracle/OCI/include/oci.h	916;"	d
OCI_ATTR_MODULE	drivers/Oracle/OCI/include/oci.h	1772;"	d
OCI_ATTR_MSG_PROP	drivers/Oracle/OCI/include/oci.h	881;"	d
OCI_ATTR_MSG_STATE	drivers/Oracle/OCI/include/oci.h	870;"	d
OCI_ATTR_NAME	drivers/Oracle/OCI/include/oci.h	1533;"	d
OCI_ATTR_NAVIGATION	drivers/Oracle/OCI/include/oci.h	858;"	d
OCI_ATTR_NCHAR	drivers/Oracle/OCI/include/oci.h	821;"	d
OCI_ATTR_NCHARSET_ID	drivers/Oracle/OCI/include/oci.h	1620;"	d
OCI_ATTR_NESTED_PREFETCH_MEMORY	drivers/Oracle/OCI/include/oci.h	809;"	d
OCI_ATTR_NESTED_PREFETCH_ROWS	drivers/Oracle/OCI/include/oci.h	807;"	d
OCI_ATTR_NFY_MSGID	drivers/Oracle/OCI/include/oci.h	880;"	d
OCI_ATTR_NOCACHE	drivers/Oracle/OCI/include/oci.h	909;"	d
OCI_ATTR_NONBLOCKING_MODE	drivers/Oracle/OCI/include/oci.h	798;"	d
OCI_ATTR_NOWAIT_SUPPORT	drivers/Oracle/OCI/include/oci.h	1628;"	d
OCI_ATTR_NUM_ARGS	drivers/Oracle/OCI/include/oci.h	1558;"	d
OCI_ATTR_NUM_ATTRS	drivers/Oracle/OCI/include/oci.h	946;"	d
OCI_ATTR_NUM_COLS	drivers/Oracle/OCI/include/oci.h	928;"	d
OCI_ATTR_NUM_DML_ERRORS	drivers/Oracle/OCI/include/oci.h	883;"	d
OCI_ATTR_NUM_ELEMS	drivers/Oracle/OCI/include/oci.h	1581;"	d
OCI_ATTR_NUM_OPEN_STMTS	drivers/Oracle/OCI/include/oci.h	1042;"	d
OCI_ATTR_NUM_PARAMS	drivers/Oracle/OCI/include/oci.h	947;"	d
OCI_ATTR_NUM_ROWS	drivers/Oracle/OCI/include/oci.h	896;"	d
OCI_ATTR_NUM_SUBTYPES	drivers/Oracle/OCI/include/oci.h	1702;"	d
OCI_ATTR_NUM_TYPE_ATTRS	drivers/Oracle/OCI/include/oci.h	1573;"	d
OCI_ATTR_NUM_TYPE_METHODS	drivers/Oracle/OCI/include/oci.h	1575;"	d
OCI_ATTR_OBJECT	drivers/Oracle/OCI/include/oci.h	797;"	d
OCI_ATTR_OBJECT_DETECTCHANGE	drivers/Oracle/OCI/include/oro.h	306;"	d
OCI_ATTR_OBJECT_NEWNOTNULL	drivers/Oracle/OCI/include/oro.h	312;"	d
OCI_ATTR_OBJID	drivers/Oracle/OCI/include/oci.h	948;"	d
OCI_ATTR_OBJ_ID	drivers/Oracle/OCI/include/oci.h	962;"	d
OCI_ATTR_OBJ_NAME	drivers/Oracle/OCI/include/oci.h	960;"	d
OCI_ATTR_OBJ_SCHEMA	drivers/Oracle/OCI/include/oci.h	961;"	d
OCI_ATTR_OBJ_SUBS	drivers/Oracle/OCI/include/oci.h	1724;"	d
OCI_ATTR_ORA_DEBUG_JDWP	drivers/Oracle/OCI/include/oci.h	1662;"	d
OCI_ATTR_ORDER	drivers/Oracle/OCI/include/oci.h	942;"	d
OCI_ATTR_ORDER_METHOD	drivers/Oracle/OCI/include/oci.h	1578;"	d
OCI_ATTR_ORIGINAL_MSGID	drivers/Oracle/OCI/include/oci.h	877;"	d
OCI_ATTR_OVERLOAD	drivers/Oracle/OCI/include/oci.h	1553;"	d
OCI_ATTR_OVERLOAD_ID	drivers/Oracle/OCI/include/oci.h	951;"	d
OCI_ATTR_PARAM	drivers/Oracle/OCI/include/oci.h	950;"	d
OCI_ATTR_PARAM_COUNT	drivers/Oracle/OCI/include/oci.h	818;"	d
OCI_ATTR_PARSE_ERROR_OFFSET	drivers/Oracle/OCI/include/oci.h	955;"	d
OCI_ATTR_PARTITIONED	drivers/Oracle/OCI/include/oci.h	932;"	d
OCI_ATTR_PASSWORD	drivers/Oracle/OCI/include/oci.h	823;"	d
OCI_ATTR_PDPRC	drivers/Oracle/OCI/include/oci.h	815;"	d
OCI_ATTR_PDSCL	drivers/Oracle/OCI/include/oci.h	812;"	d
OCI_ATTR_PINOPTION	drivers/Oracle/OCI/include/oci.h	836;"	d
OCI_ATTR_PIN_DURATION	drivers/Oracle/OCI/include/oci.h	839;"	d
OCI_ATTR_POSITION	drivers/Oracle/OCI/include/oci.h	1541;"	d
OCI_ATTR_POSTPROCESSING_CALLBACK	drivers/Oracle/OCI/include/oci.h	841;"	d
OCI_ATTR_POSTPROCESSING_CONTEXT	drivers/Oracle/OCI/include/oci.h	843;"	d
OCI_ATTR_PRECISION	drivers/Oracle/OCI/include/oci.h	1534;"	d
OCI_ATTR_PREFETCH_MEMORY	drivers/Oracle/OCI/include/oci.h	808;"	d
OCI_ATTR_PREFETCH_ROWS	drivers/Oracle/OCI/include/oci.h	806;"	d
OCI_ATTR_PRIORITY	drivers/Oracle/OCI/include/oci.h	862;"	d
OCI_ATTR_PRIVATE_KEY	drivers/Oracle/OCI/include/oci.h	1022;"	d
OCI_ATTR_PROXY_CREDENTIALS	drivers/Oracle/OCI/include/oci.h	924;"	d
OCI_ATTR_PTYPE	drivers/Oracle/OCI/include/oci.h	949;"	d
OCI_ATTR_QUEUE_NAME	drivers/Oracle/OCI/include/oci.h	879;"	d
OCI_ATTR_RADIX	drivers/Oracle/OCI/include/oci.h	1557;"	d
OCI_ATTR_RDBA	drivers/Oracle/OCI/include/oci.h	930;"	d
OCI_ATTR_READONLY_TXN	drivers/Oracle/OCI/include/oci.h	1063;"	d
OCI_ATTR_RECIPIENT_LIST	drivers/Oracle/OCI/include/oci.h	867;"	d
OCI_ATTR_REF_TDO	drivers/Oracle/OCI/include/oci.h	936;"	d
OCI_ATTR_RELATIVE_MSGID	drivers/Oracle/OCI/include/oci.h	853;"	d
OCI_ATTR_RESERVED_10	drivers/Oracle/OCI/include/oci.h	1075;"	d
OCI_ATTR_RESERVED_12	drivers/Oracle/OCI/include/oci.h	1082;"	d
OCI_ATTR_RESERVED_13	drivers/Oracle/OCI/include/oci.h	1083;"	d
OCI_ATTR_RESERVED_14	drivers/Oracle/OCI/include/oci.h	1664;"	d
OCI_ATTR_RESERVED_15	drivers/Oracle/OCI/include/oci.h	1089;"	d
OCI_ATTR_RESERVED_16	drivers/Oracle/OCI/include/oci.h	1091;"	d
OCI_ATTR_RESERVED_17	drivers/Oracle/OCI/include/oci.h	1092;"	d
OCI_ATTR_RESERVED_18	drivers/Oracle/OCI/include/oci.h	1093;"	d
OCI_ATTR_RESERVED_19	drivers/Oracle/OCI/include/oci.h	1096;"	d
OCI_ATTR_RESERVED_2	drivers/Oracle/OCI/include/oci.h	984;"	d
OCI_ATTR_RESERVED_3	drivers/Oracle/OCI/include/oci.h	1015;"	d
OCI_ATTR_RESERVED_4	drivers/Oracle/OCI/include/oci.h	1016;"	d
OCI_ATTR_RESERVED_5	drivers/Oracle/OCI/include/oci.h	1047;"	d
OCI_ATTR_RESERVED_6	drivers/Oracle/OCI/include/oci.h	1062;"	d
OCI_ATTR_RESERVED_7	drivers/Oracle/OCI/include/oci.h	1064;"	d
OCI_ATTR_RESERVED_8	drivers/Oracle/OCI/include/oci.h	1066;"	d
OCI_ATTR_RESERVED_9	drivers/Oracle/OCI/include/oci.h	1074;"	d
OCI_ATTR_ROWID	drivers/Oracle/OCI/include/oci.h	819;"	d
OCI_ATTR_ROWS_FETCHED	drivers/Oracle/OCI/include/oci.h	1055;"	d
OCI_ATTR_ROWS_RETURNED	drivers/Oracle/OCI/include/oci.h	845;"	d
OCI_ATTR_ROW_COUNT	drivers/Oracle/OCI/include/oci.h	804;"	d
OCI_ATTR_SAVEPOINT_SUPPORT	drivers/Oracle/OCI/include/oci.h	1627;"	d
OCI_ATTR_SCALE	drivers/Oracle/OCI/include/oci.h	1535;"	d
OCI_ATTR_SCHEMA_NAME	drivers/Oracle/OCI/include/oci.h	1539;"	d
OCI_ATTR_SCN_BASE	drivers/Oracle/OCI/include/oci.h	1058;"	d
OCI_ATTR_SCN_WRAP	drivers/Oracle/OCI/include/oci.h	1059;"	d
OCI_ATTR_SENDER_ID	drivers/Oracle/OCI/include/oci.h	876;"	d
OCI_ATTR_SEQUENCE_DEVIATION	drivers/Oracle/OCI/include/oci.h	854;"	d
OCI_ATTR_SERVER	drivers/Oracle/OCI/include/oci.h	801;"	d
OCI_ATTR_SERVER_BUSY	drivers/Oracle/OCI/include/oci.h	1048;"	d
OCI_ATTR_SERVER_DN	drivers/Oracle/OCI/include/oci.h	1008;"	d
OCI_ATTR_SERVER_DNS	drivers/Oracle/OCI/include/oci.h	1005;"	d
OCI_ATTR_SERVER_GROUP	drivers/Oracle/OCI/include/oci.h	905;"	d
OCI_ATTR_SERVER_STATUS	drivers/Oracle/OCI/include/oci.h	977;"	d
OCI_ATTR_SESSION	drivers/Oracle/OCI/include/oci.h	802;"	d
OCI_ATTR_SESSLANG	drivers/Oracle/OCI/include/oci.h	850;"	d
OCI_ATTR_SHARED_HEAPALLOC	drivers/Oracle/OCI/include/oci.h	903;"	d
OCI_ATTR_SIGNATURE	drivers/Oracle/OCI/include/oci.h	1025;"	d
OCI_ATTR_SIGNATURE_ALGO	drivers/Oracle/OCI/include/oci.h	1020;"	d
OCI_ATTR_SIGNATURE_VAL	drivers/Oracle/OCI/include/oci.h	1024;"	d
OCI_ATTR_SKIP_BUFFER	drivers/Oracle/OCI/include/oci.h	1106;"	d
OCI_ATTR_SPOOL_BUSY_COUNT	drivers/Oracle/OCI/include/oci.h	1683;"	d
OCI_ATTR_SPOOL_GETMODE	drivers/Oracle/OCI/include/oci.h	1682;"	d
OCI_ATTR_SPOOL_INCR	drivers/Oracle/OCI/include/oci.h	1687;"	d
OCI_ATTR_SPOOL_MAX	drivers/Oracle/OCI/include/oci.h	1686;"	d
OCI_ATTR_SPOOL_MIN	drivers/Oracle/OCI/include/oci.h	1685;"	d
OCI_ATTR_SPOOL_OPEN_COUNT	drivers/Oracle/OCI/include/oci.h	1684;"	d
OCI_ATTR_SPOOL_STMTCACHESIZE	drivers/Oracle/OCI/include/oci.h	1688;"	d
OCI_ATTR_SPOOL_TIMEOUT	drivers/Oracle/OCI/include/oci.h	1681;"	d
OCI_ATTR_SQLCODE	drivers/Oracle/OCI/include/oci.h	799;"	d
OCI_ATTR_SQLFNCODE	drivers/Oracle/OCI/include/oci.h	805;"	d
OCI_ATTR_STATEMENT	drivers/Oracle/OCI/include/oci.h	978;"	d
OCI_ATTR_STMTCACHESIZE	drivers/Oracle/OCI/include/oci.h	1028;"	d
OCI_ATTR_STMT_IS_RETURNING	drivers/Oracle/OCI/include/oci.h	1090;"	d
OCI_ATTR_STMT_STATE	drivers/Oracle/OCI/include/oci.h	1035;"	d
OCI_ATTR_STMT_TYPE	drivers/Oracle/OCI/include/oci.h	824;"	d
OCI_ATTR_STREAM_OFFSET	drivers/Oracle/OCI/include/oci.h	902;"	d
OCI_ATTR_SUBSCR_CALLBACK	drivers/Oracle/OCI/include/oci.h	919;"	d
OCI_ATTR_SUBSCR_CTX	drivers/Oracle/OCI/include/oci.h	920;"	d
OCI_ATTR_SUBSCR_NAME	drivers/Oracle/OCI/include/oci.h	918;"	d
OCI_ATTR_SUBSCR_NAMESPACE	drivers/Oracle/OCI/include/oci.h	922;"	d
OCI_ATTR_SUBSCR_PAYLOAD	drivers/Oracle/OCI/include/oci.h	921;"	d
OCI_ATTR_SUBSCR_RECPT	drivers/Oracle/OCI/include/oci.h	987;"	d
OCI_ATTR_SUBSCR_RECPTPRES	drivers/Oracle/OCI/include/oci.h	1052;"	d
OCI_ATTR_SUBSCR_RECPTPROTO	drivers/Oracle/OCI/include/oci.h	988;"	d
OCI_ATTR_SUB_NAME	drivers/Oracle/OCI/include/oci.h	1540;"	d
OCI_ATTR_SUPERTYPE_NAME	drivers/Oracle/OCI/include/oci.h	1614;"	d
OCI_ATTR_SUPERTYPE_SCHEMA_NAME	drivers/Oracle/OCI/include/oci.h	1613;"	d
OCI_ATTR_TABLESPACE	drivers/Oracle/OCI/include/oci.h	952;"	d
OCI_ATTR_TABLE_NAME	drivers/Oracle/OCI/include/oci.h	1751;"	d
OCI_ATTR_TDO	drivers/Oracle/OCI/include/oci.h	953;"	d
OCI_ATTR_TIMESTAMP	drivers/Oracle/OCI/include/oci.h	945;"	d
OCI_ATTR_TRANS	drivers/Oracle/OCI/include/oci.h	803;"	d
OCI_ATTR_TRANSACTION_NO	drivers/Oracle/OCI/include/oci.h	1769;"	d
OCI_ATTR_TRANSFORMATION	drivers/Oracle/OCI/include/oci.h	1053;"	d
OCI_ATTR_TRANS_LOCK	drivers/Oracle/OCI/include/oci.h	828;"	d
OCI_ATTR_TRANS_NAME	drivers/Oracle/OCI/include/oci.h	829;"	d
OCI_ATTR_TRANS_TIMEOUT	drivers/Oracle/OCI/include/oci.h	976;"	d
OCI_ATTR_TYPECODE	drivers/Oracle/OCI/include/oci.h	1561;"	d
OCI_ATTR_TYPE_NAME	drivers/Oracle/OCI/include/oci.h	1537;"	d
OCI_ATTR_TYPE_SCHEMA	drivers/Oracle/OCI/include/oci.h	944;"	d
OCI_ATTR_UCI_CONSTRUCT	drivers/Oracle/OCI/include/oci.h	1604;"	d
OCI_ATTR_UCI_COPY	drivers/Oracle/OCI/include/oci.h	1606;"	d
OCI_ATTR_UCI_DESTRUCT	drivers/Oracle/OCI/include/oci.h	1605;"	d
OCI_ATTR_UCI_PICKLE	drivers/Oracle/OCI/include/oci.h	1607;"	d
OCI_ATTR_UCI_REFRESH	drivers/Oracle/OCI/include/oci.h	1609;"	d
OCI_ATTR_UCI_UNPICKLE	drivers/Oracle/OCI/include/oci.h	1608;"	d
OCI_ATTR_UNK	drivers/Oracle/OCI/include/oci.h	927;"	d
OCI_ATTR_USERNAME	drivers/Oracle/OCI/include/oci.h	822;"	d
OCI_ATTR_USER_PROPERTY	drivers/Oracle/OCI/include/oci.h	875;"	d
OCI_ATTR_VALUE	drivers/Oracle/OCI/include/oci.h	1741;"	d
OCI_ATTR_VAR_METHOD_FUNCTION	drivers/Oracle/OCI/include/oci.h	1747;"	d
OCI_ATTR_VAR_TYPE	drivers/Oracle/OCI/include/oci.h	1745;"	d
OCI_ATTR_VAR_VALUE_FUNCTION	drivers/Oracle/OCI/include/oci.h	1746;"	d
OCI_ATTR_VERSION	drivers/Oracle/OCI/include/oci.h	1563;"	d
OCI_ATTR_VISIBILITY	drivers/Oracle/OCI/include/oci.h	852;"	d
OCI_ATTR_WAIT	drivers/Oracle/OCI/include/oci.h	859;"	d
OCI_ATTR_WALL_LOC	drivers/Oracle/OCI/include/oci.h	1002;"	d
OCI_ATTR_XADFIELD_ADDR	drivers/Oracle/OCI/include/ocixad.h	222;"	d
OCI_ATTR_XADFIELD_CHARSET_ID	drivers/Oracle/OCI/include/ocixad.h	220;"	d
OCI_ATTR_XADFIELD_COLUMN_NUM	drivers/Oracle/OCI/include/ocixad.h	216;"	d
OCI_ATTR_XADFIELD_DATA_TYPE	drivers/Oracle/OCI/include/ocixad.h	217;"	d
OCI_ATTR_XADFIELD_FORMAT_MASK	drivers/Oracle/OCI/include/ocixad.h	221;"	d
OCI_ATTR_XADFIELD_ISNULL	drivers/Oracle/OCI/include/ocixad.h	224;"	d
OCI_ATTR_XADFIELD_ISPARTIAL	drivers/Oracle/OCI/include/ocixad.h	225;"	d
OCI_ATTR_XADFIELD_LENGTH	drivers/Oracle/OCI/include/ocixad.h	223;"	d
OCI_ATTR_XADFIELD_OPAQUECTX	drivers/Oracle/OCI/include/ocixad.h	226;"	d
OCI_ATTR_XADFIELD_PRECISION	drivers/Oracle/OCI/include/ocixad.h	218;"	d
OCI_ATTR_XADFIELD_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1732;"	d
OCI_ATTR_XADFIELD_RESERVED_2	drivers/Oracle/OCI/include/oci.h	1733;"	d
OCI_ATTR_XADFIELD_SCALE	drivers/Oracle/OCI/include/ocixad.h	219;"	d
OCI_ATTR_XADGRANULE_INFO_METHOD	drivers/Oracle/OCI/include/ocixad.h	236;"	d
OCI_ATTR_XADGRANULE_INTRA_SRC_CONCURRENCY	drivers/Oracle/OCI/include/ocixad.h	232;"	d
OCI_ATTR_XADGRANULE_NUM_GRANULES	drivers/Oracle/OCI/include/ocixad.h	230;"	d
OCI_ATTR_XADGRANULE_NUM_SRC	drivers/Oracle/OCI/include/ocixad.h	231;"	d
OCI_ATTR_XADGRANULE_OPAQUECTX	drivers/Oracle/OCI/include/ocixad.h	233;"	d
OCI_ATTR_XADSESSION_ACCESS_PARM_TYPE	drivers/Oracle/OCI/include/ocixad.h	171;"	d
OCI_ATTR_XADSESSION_AGENT_NUMBER	drivers/Oracle/OCI/include/ocixad.h	157;"	d
OCI_ATTR_XADSESSION_CALLERID	drivers/Oracle/OCI/include/ocixad.h	154;"	d
OCI_ATTR_XADSESSION_DATAMODE	drivers/Oracle/OCI/include/ocixad.h	156;"	d
OCI_ATTR_XADSESSION_DCACHE_DISABLE	drivers/Oracle/OCI/include/ocixad.h	174;"	d
OCI_ATTR_XADSESSION_DCACHE_HITS	drivers/Oracle/OCI/include/ocixad.h	175;"	d
OCI_ATTR_XADSESSION_DCACHE_MISSES	drivers/Oracle/OCI/include/ocixad.h	176;"	d
OCI_ATTR_XADSESSION_DCACHE_NUM	drivers/Oracle/OCI/include/ocixad.h	173;"	d
OCI_ATTR_XADSESSION_DCACHE_SIZE	drivers/Oracle/OCI/include/ocixad.h	172;"	d
OCI_ATTR_XADSESSION_DEFAULT_DIRECTORY	drivers/Oracle/OCI/include/ocixad.h	167;"	d
OCI_ATTR_XADSESSION_DIRECTORIES	drivers/Oracle/OCI/include/ocixad.h	151;"	d
OCI_ATTR_XADSESSION_DRIVER_TYPE	drivers/Oracle/OCI/include/ocixad.h	168;"	d
OCI_ATTR_XADSESSION_GRANULE	drivers/Oracle/OCI/include/ocixad.h	152;"	d
OCI_ATTR_XADSESSION_GRANULESIZE	drivers/Oracle/OCI/include/ocixad.h	155;"	d
OCI_ATTR_XADSESSION_LOCATIONS	drivers/Oracle/OCI/include/ocixad.h	149;"	d
OCI_ATTR_XADSESSION_METHOD_ENTRY_POINTS	drivers/Oracle/OCI/include/ocixad.h	161;"	d
OCI_ATTR_XADSESSION_NAMES	drivers/Oracle/OCI/include/ocixad.h	150;"	d
OCI_ATTR_XADSESSION_OPAQUECTX	drivers/Oracle/OCI/include/ocixad.h	158;"	d
OCI_ATTR_XADSESSION_OPCODE	drivers/Oracle/OCI/include/ocixad.h	153;"	d
OCI_ATTR_XADSESSION_SAMPLE_PERCENT	drivers/Oracle/OCI/include/ocixad.h	170;"	d
OCI_ATTR_XADSESSION_SAMPLE_TYPE	drivers/Oracle/OCI/include/ocixad.h	169;"	d
OCI_ATTR_XADSESSION_TABLE	drivers/Oracle/OCI/include/ocixad.h	148;"	d
OCI_ATTR_XADTABLE_COLUMNS	drivers/Oracle/OCI/include/ocixad.h	205;"	d
OCI_ATTR_XADTABLE_FIELDS	drivers/Oracle/OCI/include/ocixad.h	207;"	d
OCI_ATTR_XADTABLE_NAME	drivers/Oracle/OCI/include/ocixad.h	204;"	d
OCI_ATTR_XADTABLE_NUM_COLS	drivers/Oracle/OCI/include/ocixad.h	210;"	d
OCI_ATTR_XADTABLE_NUM_FIELDS	drivers/Oracle/OCI/include/ocixad.h	208;"	d
OCI_ATTR_XADTABLE_NUM_REF_COLS	drivers/Oracle/OCI/include/ocixad.h	211;"	d
OCI_ATTR_XADTABLE_OPAQUECTX	drivers/Oracle/OCI/include/ocixad.h	209;"	d
OCI_ATTR_XADTABLE_REF_COLUMNS	drivers/Oracle/OCI/include/ocixad.h	206;"	d
OCI_ATTR_XADTABLE_SCHEMA	drivers/Oracle/OCI/include/ocixad.h	212;"	d
OCI_ATTR_XADTABLE_SESSION	drivers/Oracle/OCI/include/ocixad.h	203;"	d
OCI_ATTR_XID	drivers/Oracle/OCI/include/oci.h	827;"	d
OCI_ATTR_XMLELEMENT_NAME	drivers/Oracle/OCI/include/oci.h	1694;"	d
OCI_ATTR_XMLSCHEMA_NAME	drivers/Oracle/OCI/include/oci.h	1693;"	d
OCI_ATTR_XMLSQLTYPE_NAME	drivers/Oracle/OCI/include/oci.h	1696;"	d
OCI_ATTR_XMLSQLTYPSCH_NAME	drivers/Oracle/OCI/include/oci.h	1695;"	d
OCI_ATTR_XMLTYPE_STORED_OBJ	drivers/Oracle/OCI/include/oci.h	1697;"	d
OCI_ATTR_XML_HRCHY_ENABLED	drivers/Oracle/OCI/include/oci.h	1706;"	d
OCI_AUTH	drivers/Oracle/OCI/include/oci.h	1815;"	d
OCI_AUTH_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1389;"	d
OCI_BATCH_ERRORS	drivers/Oracle/OCI/include/oci.h	1371;"	d
OCI_BATCH_MODE	drivers/Oracle/OCI/include/oci.h	1364;"	d
OCI_BIND_RESERVED_2	drivers/Oracle/OCI/include/oci.h	1240;"	d
OCI_BIND_SOFT	drivers/Oracle/OCI/include/oci.h	1242;"	d
OCI_CLIENT_STATS	drivers/Oracle/OCI/include/oci.h	1340;"	d
OCI_CL_END	drivers/Oracle/OCI/include/oci.h	1789;"	d
OCI_CL_START	drivers/Oracle/OCI/include/oci.h	1788;"	d
OCI_COHERENCY_ALWAYS	drivers/Oracle/OCI/include/oro.h	880;"	d
OCI_COHERENCY_NONE	drivers/Oracle/OCI/include/oro.h	878;"	d
OCI_COHERENCY_NULL	drivers/Oracle/OCI/include/oro.h	879;"	d
OCI_COMMIT_ON_SUCCESS	drivers/Oracle/OCI/include/oci.h	1369;"	d
OCI_CONNECT_H	drivers/Oracle/TeOCIConnect.h	28;"	d
OCI_CONTINUE	drivers/Oracle/OCI/include/oci.h	1166;"	d
OCI_CPOOL	drivers/Oracle/OCI/include/oci.h	1408;"	d
OCI_CPOOL_REINITIALIZE	drivers/Oracle/OCI/include/oci.h	1279;"	d
OCI_CRED_EXT	drivers/Oracle/OCI/include/oci.h	1148;"	d
OCI_CRED_PROXY	drivers/Oracle/OCI/include/oci.h	1149;"	d
OCI_CRED_RDBMS	drivers/Oracle/OCI/include/oci.h	1147;"	d
OCI_CRED_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1150;"	d
OCI_CRED_RESERVED_2	drivers/Oracle/OCI/include/oci.h	1151;"	d
OCI_CURSOR_CLOSED	drivers/Oracle/OCI/include/oci.h	1785;"	d
OCI_CURSOR_OPEN	drivers/Oracle/OCI/include/oci.h	1784;"	d
OCI_DATA_AT_EXEC	drivers/Oracle/OCI/include/oci.h	1236;"	d
OCI_DATE_DAY_BELOW_VALID	drivers/Oracle/OCI/include/orl.h	2168;"	d
OCI_DATE_DAY_MISSING_FROM_1582	drivers/Oracle/OCI/include/orl.h	2181;"	d
OCI_DATE_HOUR_BELOW_VALID	drivers/Oracle/OCI/include/orl.h	2174;"	d
OCI_DATE_INVALID_DAY	drivers/Oracle/OCI/include/orl.h	2167;"	d
OCI_DATE_INVALID_FORMAT	drivers/Oracle/OCI/include/orl.h	2184;"	d
OCI_DATE_INVALID_HOUR	drivers/Oracle/OCI/include/orl.h	2173;"	d
OCI_DATE_INVALID_MINUTE	drivers/Oracle/OCI/include/orl.h	2175;"	d
OCI_DATE_INVALID_MONTH	drivers/Oracle/OCI/include/orl.h	2169;"	d
OCI_DATE_INVALID_SECOND	drivers/Oracle/OCI/include/orl.h	2178;"	d
OCI_DATE_INVALID_YEAR	drivers/Oracle/OCI/include/orl.h	2171;"	d
OCI_DATE_MINUTE_BELOW_VALID	drivers/Oracle/OCI/include/orl.h	2176;"	d
OCI_DATE_MONTH_BELOW_VALID	drivers/Oracle/OCI/include/orl.h	2170;"	d
OCI_DATE_SECOND_BELOW_VALID	drivers/Oracle/OCI/include/orl.h	2179;"	d
OCI_DATE_YEAR_BELOW_VALID	drivers/Oracle/OCI/include/orl.h	2172;"	d
OCI_DATE_YEAR_ZERO	drivers/Oracle/OCI/include/orl.h	2183;"	d
OCI_DEFAULT	drivers/Oracle/OCI/include/oci.h	1247;"	d
OCI_DEFINE_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1239;"	d
OCI_DEFINE_RESERVED_2	drivers/Oracle/OCI/include/oci.h	1241;"	d
OCI_DEFINE_SOFT	drivers/Oracle/OCI/include/oci.h	1243;"	d
OCI_DEQ_BROWSE	drivers/Oracle/OCI/include/oci.h	1462;"	d
OCI_DEQ_FIRST_MSG	drivers/Oracle/OCI/include/oci.h	1469;"	d
OCI_DEQ_GETSIG	drivers/Oracle/OCI/include/oci.h	1466;"	d
OCI_DEQ_IMMEDIATE	drivers/Oracle/OCI/include/oci.h	1488;"	d
OCI_DEQ_LOCKED	drivers/Oracle/OCI/include/oci.h	1463;"	d
OCI_DEQ_MULT_TRANSACTION	drivers/Oracle/OCI/include/oci.h	1472;"	d
OCI_DEQ_NEXT_MSG	drivers/Oracle/OCI/include/oci.h	1470;"	d
OCI_DEQ_NEXT_TRANSACTION	drivers/Oracle/OCI/include/oci.h	1471;"	d
OCI_DEQ_NO_WAIT	drivers/Oracle/OCI/include/oci.h	1493;"	d
OCI_DEQ_ON_COMMIT	drivers/Oracle/OCI/include/oci.h	1489;"	d
OCI_DEQ_REMOVE	drivers/Oracle/OCI/include/oci.h	1464;"	d
OCI_DEQ_REMOVE_NODATA	drivers/Oracle/OCI/include/oci.h	1465;"	d
OCI_DEQ_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1475;"	d
OCI_DEQ_WAIT_FOREVER	drivers/Oracle/OCI/include/oci.h	1492;"	d
OCI_DESCRIBE_ONLY	drivers/Oracle/OCI/include/oci.h	1368;"	d
OCI_DESC_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1377;"	d
OCI_DIRPATH_COL_COMPLETE	drivers/Oracle/OCI/include/oci8dp.h	98;"	d
OCI_DIRPATH_COL_NULL	drivers/Oracle/OCI/include/oci8dp.h	99;"	d
OCI_DIRPATH_COL_PARTIAL	drivers/Oracle/OCI/include/oci8dp.h	100;"	d
OCI_DIRPATH_CONVERT	drivers/Oracle/OCI/include/oci8dp.h	73;"	d
OCI_DIRPATH_DATASAVE_FINISH	drivers/Oracle/OCI/include/oci8dp.h	104;"	d
OCI_DIRPATH_DATASAVE_PARTIAL	drivers/Oracle/OCI/include/oci8dp.h	106;"	d
OCI_DIRPATH_DATASAVE_SAVEONLY	drivers/Oracle/OCI/include/oci8dp.h	103;"	d
OCI_DIRPATH_EXPR_OBJ_CONSTR	drivers/Oracle/OCI/include/oci8dp.h	109;"	d
OCI_DIRPATH_EXPR_REF_TBLNAME	drivers/Oracle/OCI/include/oci8dp.h	111;"	d
OCI_DIRPATH_EXPR_SQL	drivers/Oracle/OCI/include/oci8dp.h	110;"	d
OCI_DIRPATH_INDEX_MAINT_DONT_SKIP_UNUSABLE	drivers/Oracle/OCI/include/oci8dp.h	89;"	d
OCI_DIRPATH_INDEX_MAINT_SINGLE_ROW	drivers/Oracle/OCI/include/oci8dp.h	76;"	d
OCI_DIRPATH_INDEX_MAINT_SKIP_ALL	drivers/Oracle/OCI/include/oci8dp.h	90;"	d
OCI_DIRPATH_INDEX_MAINT_SKIP_UNUSABLE	drivers/Oracle/OCI/include/oci8dp.h	88;"	d
OCI_DIRPATH_INPUT_STREAM	drivers/Oracle/OCI/include/oci.h	995;"	d
OCI_DIRPATH_INPUT_TEXT	drivers/Oracle/OCI/include/oci.h	994;"	d
OCI_DIRPATH_INPUT_UNKNOWN	drivers/Oracle/OCI/include/oci.h	996;"	d
OCI_DIRPATH_LOAD	drivers/Oracle/OCI/include/oci8dp.h	71;"	d
OCI_DIRPATH_NORMAL	drivers/Oracle/OCI/include/oci8dp.h	93;"	d
OCI_DIRPATH_NOT_PREPARED	drivers/Oracle/OCI/include/oci8dp.h	95;"	d
OCI_DIRPATH_PARTIAL	drivers/Oracle/OCI/include/oci8dp.h	94;"	d
OCI_DIRPATH_STREAM_VERSION_1	drivers/Oracle/OCI/include/oci.h	1099;"	d
OCI_DIRPATH_STREAM_VERSION_2	drivers/Oracle/OCI/include/oci.h	1100;"	d
OCI_DIRPATH_STREAM_VERSION_3	drivers/Oracle/OCI/include/oci.h	1101;"	d
OCI_DIRPATH_UNLOAD	drivers/Oracle/OCI/include/oci8dp.h	72;"	d
OCI_DTYPE_AQAGENT	drivers/Oracle/OCI/include/oci.h	754;"	d
OCI_DTYPE_AQDEQ_OPTIONS	drivers/Oracle/OCI/include/oci.h	752;"	d
OCI_DTYPE_AQENQ_OPTIONS	drivers/Oracle/OCI/include/oci.h	751;"	d
OCI_DTYPE_AQMSG_PROPERTIES	drivers/Oracle/OCI/include/oci.h	753;"	d
OCI_DTYPE_AQNFY_DESCRIPTOR	drivers/Oracle/OCI/include/oci.h	758;"	d
OCI_DTYPE_COMPLEXOBJECTCOMP	drivers/Oracle/OCI/include/oci.h	748;"	d
OCI_DTYPE_DATE	drivers/Oracle/OCI/include/oci.h	759;"	d
OCI_DTYPE_FILE	drivers/Oracle/OCI/include/oci.h	750;"	d
OCI_DTYPE_FIRST	drivers/Oracle/OCI/include/oci.h	742;"	d
OCI_DTYPE_INTERVAL_DS	drivers/Oracle/OCI/include/oci.h	757;"	d
OCI_DTYPE_INTERVAL_YM	drivers/Oracle/OCI/include/oci.h	756;"	d
OCI_DTYPE_LAST	drivers/Oracle/OCI/include/oci.h	769;"	d
OCI_DTYPE_LOB	drivers/Oracle/OCI/include/oci.h	743;"	d
OCI_DTYPE_LOCATOR	drivers/Oracle/OCI/include/oci.h	755;"	d
OCI_DTYPE_PARAM	drivers/Oracle/OCI/include/oci.h	746;"	d
OCI_DTYPE_RESERVED_1	drivers/Oracle/OCI/include/oci.h	768;"	d
OCI_DTYPE_ROWID	drivers/Oracle/OCI/include/oci.h	747;"	d
OCI_DTYPE_RSET	drivers/Oracle/OCI/include/oci.h	745;"	d
OCI_DTYPE_SIGNATURE	drivers/Oracle/OCI/include/oci.h	767;"	d
OCI_DTYPE_SNAP	drivers/Oracle/OCI/include/oci.h	744;"	d
OCI_DTYPE_SRVDN	drivers/Oracle/OCI/include/oci.h	766;"	d
OCI_DTYPE_TIME	drivers/Oracle/OCI/include/oci.h	760;"	d
OCI_DTYPE_TIMESTAMP	drivers/Oracle/OCI/include/oci.h	762;"	d
OCI_DTYPE_TIMESTAMP_LTZ	drivers/Oracle/OCI/include/oci.h	764;"	d
OCI_DTYPE_TIMESTAMP_TZ	drivers/Oracle/OCI/include/oci.h	763;"	d
OCI_DTYPE_TIME_TZ	drivers/Oracle/OCI/include/oci.h	761;"	d
OCI_DTYPE_UCB	drivers/Oracle/OCI/include/oci.h	765;"	d
OCI_DT_DAY_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1174;"	d
OCI_DT_DAY_MISSING_FROM_1582	drivers/Oracle/OCI/include/oci.h	1185;"	d
OCI_DT_HOUR_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1180;"	d
OCI_DT_INVALID_DAY	drivers/Oracle/OCI/include/oci.h	1173;"	d
OCI_DT_INVALID_FORMAT	drivers/Oracle/OCI/include/oci.h	1189;"	d
OCI_DT_INVALID_HOUR	drivers/Oracle/OCI/include/oci.h	1179;"	d
OCI_DT_INVALID_MINUTE	drivers/Oracle/OCI/include/oci.h	1181;"	d
OCI_DT_INVALID_MONTH	drivers/Oracle/OCI/include/oci.h	1175;"	d
OCI_DT_INVALID_SECOND	drivers/Oracle/OCI/include/oci.h	1183;"	d
OCI_DT_INVALID_TIMEZONE	drivers/Oracle/OCI/include/oci.h	1188;"	d
OCI_DT_INVALID_YEAR	drivers/Oracle/OCI/include/oci.h	1177;"	d
OCI_DT_MINUTE_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1182;"	d
OCI_DT_MONTH_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1176;"	d
OCI_DT_SECOND_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1184;"	d
OCI_DT_YEAR_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1178;"	d
OCI_DT_YEAR_ZERO	drivers/Oracle/OCI/include/oci.h	1187;"	d
OCI_DUMP_HEAP	drivers/Oracle/OCI/include/oci.h	1338;"	d
OCI_DURATION_BEGIN	drivers/Oracle/OCI/include/oro.h	406;"	d
OCI_DURATION_CALL	drivers/Oracle/OCI/include/oro.h	422;"	d
OCI_DURATION_CALLOUT	drivers/Oracle/OCI/include/oro.h	429;"	d
OCI_DURATION_DEFAULT	drivers/Oracle/OCI/include/oro.h	410;"	d
OCI_DURATION_INVALID	drivers/Oracle/OCI/include/oro.h	405;"	d
OCI_DURATION_LAST	drivers/Oracle/OCI/include/oro.h	431;"	d
OCI_DURATION_NEXT	drivers/Oracle/OCI/include/oro.h	412;"	d
OCI_DURATION_NULL	drivers/Oracle/OCI/include/oro.h	408;"	d
OCI_DURATION_PROCESS	drivers/Oracle/OCI/include/oro.h	439;"	d
OCI_DURATION_SESSION	drivers/Oracle/OCI/include/oro.h	414;"	d
OCI_DURATION_STATEMENT	drivers/Oracle/OCI/include/oro.h	424;"	d
OCI_DURATION_TRANS	drivers/Oracle/OCI/include/oro.h	416;"	d
OCI_DURATION_USER_CALLBACK	drivers/Oracle/OCI/include/oro.h	411;"	d
OCI_DVOIDPTR_PARAM	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_DVOIDPTR_PARAM,$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_DVOIDPTR_PARAMLIST	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_DVOIDPTR_PARAMLIST,$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_DYNAMIC_FETCH	drivers/Oracle/OCI/include/oci.h	1237;"	d
OCI_ENQ_BEFORE	drivers/Oracle/OCI/include/oci.h	1484;"	d
OCI_ENQ_IMMEDIATE	drivers/Oracle/OCI/include/oci.h	1458;"	d
OCI_ENQ_ON_COMMIT	drivers/Oracle/OCI/include/oci.h	1459;"	d
OCI_ENQ_TOP	drivers/Oracle/OCI/include/oci.h	1485;"	d
OCI_ENVCR_RESERVED3	drivers/Oracle/OCI/include/oci.h	1269;"	d
OCI_ENV_NO_MUTEX	drivers/Oracle/OCI/include/oci.h	1349;"	d
OCI_ENV_NO_UCB	drivers/Oracle/OCI/include/oci.h	1347;"	d
OCI_ERROR	drivers/Oracle/OCI/include/oci.h	1159;"	d
OCI_ERROR_MAXMSG_SIZE	drivers/Oracle/OCI/include/oci.h	1821;"	d
OCI_EVENTS	drivers/Oracle/OCI/include/oci.h	1252;"	d
OCI_EV_DEF	drivers/Oracle/OCI/include/ocidfn.h	161;"	d
OCI_EV_TSF	drivers/Oracle/OCI/include/ocidfn.h	162;"	d
OCI_EXACT_FETCH	drivers/Oracle/OCI/include/oci.h	1365;"	d
OCI_EXACT_FETCH_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1373;"	d
OCI_EXEC_RESERVED_2	drivers/Oracle/OCI/include/oci.h	1376;"	d
OCI_EXEC_RESERVED_3	drivers/Oracle/OCI/include/oci.h	1378;"	d
OCI_EXEC_RESERVED_4	drivers/Oracle/OCI/include/oci.h	1379;"	d
OCI_EXTRACT_APPEND_VALUES	drivers/Oracle/OCI/include/oci1.h	155;"	d
OCI_EXTRACT_CASE_SENSITIVE	drivers/Oracle/OCI/include/oci1.h	152;"	d
OCI_EXTRACT_MULTIPLE	drivers/Oracle/OCI/include/oci1.h	162;"	d
OCI_EXTRACT_TYPE_BOOLEAN	drivers/Oracle/OCI/include/oci1.h	163;"	d
OCI_EXTRACT_TYPE_INTEGER	drivers/Oracle/OCI/include/oci1.h	165;"	d
OCI_EXTRACT_TYPE_OCINUM	drivers/Oracle/OCI/include/oci1.h	166;"	d
OCI_EXTRACT_TYPE_STRING	drivers/Oracle/OCI/include/oci1.h	164;"	d
OCI_EXTRACT_UNIQUE_ABBREVS	drivers/Oracle/OCI/include/oci1.h	153;"	d
OCI_FASTPATH	drivers/Oracle/OCI/include/oci.h	1404;"	d
OCI_FETCH_ABSOLUTE	drivers/Oracle/OCI/include/oci.h	1228;"	d
OCI_FETCH_CURRENT	drivers/Oracle/OCI/include/oci.h	1223;"	d
OCI_FETCH_FIRST	drivers/Oracle/OCI/include/oci.h	1225;"	d
OCI_FETCH_LAST	drivers/Oracle/OCI/include/oci.h	1226;"	d
OCI_FETCH_NEXT	drivers/Oracle/OCI/include/oci.h	1224;"	d
OCI_FETCH_PRIOR	drivers/Oracle/OCI/include/oci.h	1227;"	d
OCI_FETCH_RELATIVE	drivers/Oracle/OCI/include/oci.h	1229;"	d
OCI_FETCH_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1230;"	d
OCI_FILE_APPEND	drivers/Oracle/OCI/include/oci1.h	106;"	d
OCI_FILE_BACKWARD	drivers/Oracle/OCI/include/oci1.h	114;"	d
OCI_FILE_BIN	drivers/Oracle/OCI/include/oci1.h	117;"	d
OCI_FILE_CREATE	drivers/Oracle/OCI/include/oci1.h	102;"	d
OCI_FILE_EXCL	drivers/Oracle/OCI/include/oci1.h	103;"	d
OCI_FILE_EXIST	drivers/Oracle/OCI/include/oci1.h	101;"	d
OCI_FILE_FORWARD	drivers/Oracle/OCI/include/oci1.h	113;"	d
OCI_FILE_READONLY	drivers/Oracle/OCI/include/oci.h	2097;"	d
OCI_FILE_READ_ONLY	drivers/Oracle/OCI/include/oci1.h	97;"	d
OCI_FILE_READ_WRITE	drivers/Oracle/OCI/include/oci1.h	99;"	d
OCI_FILE_SEEK_BEGINNING	drivers/Oracle/OCI/include/oci1.h	109;"	d
OCI_FILE_SEEK_CURRENT	drivers/Oracle/OCI/include/oci1.h	110;"	d
OCI_FILE_SEEK_END	drivers/Oracle/OCI/include/oci1.h	111;"	d
OCI_FILE_STDERR	drivers/Oracle/OCI/include/oci1.h	121;"	d
OCI_FILE_STDIN	drivers/Oracle/OCI/include/oci1.h	119;"	d
OCI_FILE_STDOUT	drivers/Oracle/OCI/include/oci1.h	120;"	d
OCI_FILE_TEXT	drivers/Oracle/OCI/include/oci1.h	118;"	d
OCI_FILE_TRUNCATE	drivers/Oracle/OCI/include/oci1.h	104;"	d
OCI_FILE_WRITE_ONLY	drivers/Oracle/OCI/include/oci1.h	98;"	d
OCI_FIRST_PIECE	drivers/Oracle/OCI/include/oci.h	2090;"	d
OCI_FIRST_PIECE	drivers/Oracle/OCI/include/ocidef.h	293;"	d
OCI_FIRST_PIECE	drivers/Oracle/OCI/include/ocidfn.h	178;"	d
OCI_FLAGS	drivers/Oracle/OCI/include/oci.h	2088;"	d
OCI_FLAGS	drivers/Oracle/OCI/include/ocidef.h	287;"	d
OCI_FLAGS	drivers/Oracle/OCI/include/ocidfn.h	173;"	d
OCI_FNCODE_AQDEQ	drivers/Oracle/OCI/include/oci.h	1937;"	d
OCI_FNCODE_AQDEQARRAY	drivers/Oracle/OCI/include/oci.h	1964;"	d
OCI_FNCODE_AQENQ	drivers/Oracle/OCI/include/oci.h	1936;"	d
OCI_FNCODE_AQENQARRAY	drivers/Oracle/OCI/include/oci.h	1963;"	d
OCI_FNCODE_AQLISTEN	drivers/Oracle/OCI/include/oci.h	1944;"	d
OCI_FNCODE_ATTRGET	drivers/Oracle/OCI/include/oci.h	1897;"	d
OCI_FNCODE_ATTRSET	drivers/Oracle/OCI/include/oci.h	1898;"	d
OCI_FNCODE_BINDARRAYOFSTRUCT	drivers/Oracle/OCI/include/oci.h	1863;"	d
OCI_FNCODE_BINDBYNAME	drivers/Oracle/OCI/include/oci.h	1910;"	d
OCI_FNCODE_BINDBYPOS	drivers/Oracle/OCI/include/oci.h	1909;"	d
OCI_FNCODE_BINDDYNAMIC	drivers/Oracle/OCI/include/oci.h	1860;"	d
OCI_FNCODE_BINDOBJECT	drivers/Oracle/OCI/include/oci.h	1861;"	d
OCI_FNCODE_CPOOLCREATE	drivers/Oracle/OCI/include/oci.h	1952;"	d
OCI_FNCODE_CPOOLDESTROY	drivers/Oracle/OCI/include/oci.h	1953;"	d
OCI_FNCODE_DEFINEARRAYOFSTRUCT	drivers/Oracle/OCI/include/oci.h	1868;"	d
OCI_FNCODE_DEFINEBYPOS	drivers/Oracle/OCI/include/oci.h	1908;"	d
OCI_FNCODE_DEFINEDYNAMIC	drivers/Oracle/OCI/include/oci.h	1867;"	d
OCI_FNCODE_DEFINEOBJECT	drivers/Oracle/OCI/include/oci.h	1866;"	d
OCI_FNCODE_DESCRIBEANY	drivers/Oracle/OCI/include/oci.h	1872;"	d
OCI_FNCODE_DESCRIPTORALLOC	drivers/Oracle/OCI/include/oci.h	1849;"	d
OCI_FNCODE_DESCRIPTORFREE	drivers/Oracle/OCI/include/oci.h	1850;"	d
OCI_FNCODE_ENVINIT	drivers/Oracle/OCI/include/oci.h	1851;"	d
OCI_FNCODE_ERRORGET	drivers/Oracle/OCI/include/oci.h	1877;"	d
OCI_FNCODE_HANDLEALLOC	drivers/Oracle/OCI/include/oci.h	1847;"	d
OCI_FNCODE_HANDLEFREE	drivers/Oracle/OCI/include/oci.h	1848;"	d
OCI_FNCODE_INITIALIZE	drivers/Oracle/OCI/include/oci.h	1846;"	d
OCI_FNCODE_KERBATTRSET	drivers/Oracle/OCI/include/oci.h	1893;"	d
OCI_FNCODE_LDATOSVCCTX	drivers/Oracle/OCI/include/oci.h	1902;"	d
OCI_FNCODE_LOBAPPEND	drivers/Oracle/OCI/include/oci.h	1883;"	d
OCI_FNCODE_LOBASSIGN	drivers/Oracle/OCI/include/oci.h	1911;"	d
OCI_FNCODE_LOBCHARSETFORM	drivers/Oracle/OCI/include/oci.h	1917;"	d
OCI_FNCODE_LOBCHARSETID	drivers/Oracle/OCI/include/oci.h	1916;"	d
OCI_FNCODE_LOBCLOSE	drivers/Oracle/OCI/include/oci.h	1927;"	d
OCI_FNCODE_LOBCLOSEFILE	drivers/Oracle/OCI/include/oci.h	1879;"	d
OCI_FNCODE_LOBCOPY	drivers/Oracle/OCI/include/oci.h	1882;"	d
OCI_FNCODE_LOBCOPY2	drivers/Oracle/OCI/include/oci.h	1965;"	d
OCI_FNCODE_LOBCREATETEMP	drivers/Oracle/OCI/include/oci.h	1932;"	d
OCI_FNCODE_LOBDISABLEBUFFERING	drivers/Oracle/OCI/include/oci.h	1922;"	d
OCI_FNCODE_LOBENABLEBUFFERING	drivers/Oracle/OCI/include/oci.h	1915;"	d
OCI_FNCODE_LOBERASE	drivers/Oracle/OCI/include/oci.h	1884;"	d
OCI_FNCODE_LOBERASE2	drivers/Oracle/OCI/include/oci.h	1966;"	d
OCI_FNCODE_LOBFILECLOSEALL	drivers/Oracle/OCI/include/oci.h	1931;"	d
OCI_FNCODE_LOBFILEEXISTS	drivers/Oracle/OCI/include/oci.h	1930;"	d
OCI_FNCODE_LOBFILEGETNAME	drivers/Oracle/OCI/include/oci.h	1919;"	d
OCI_FNCODE_LOBFILEISOPEN	drivers/Oracle/OCI/include/oci.h	1929;"	d
OCI_FNCODE_LOBFILESETNAME	drivers/Oracle/OCI/include/oci.h	1918;"	d
OCI_FNCODE_LOBFLUSHBUFFER	drivers/Oracle/OCI/include/oci.h	1923;"	d
OCI_FNCODE_LOBFREETEMP	drivers/Oracle/OCI/include/oci.h	1933;"	d
OCI_FNCODE_LOBGETSTORAGELIMIT	drivers/Oracle/OCI/include/oci.h	1972;"	d
OCI_FNCODE_LOBISEQUAL	drivers/Oracle/OCI/include/oci.h	1912;"	d
OCI_FNCODE_LOBISINIT	drivers/Oracle/OCI/include/oci.h	1913;"	d
OCI_FNCODE_LOBISOPEN	drivers/Oracle/OCI/include/oci.h	1928;"	d
OCI_FNCODE_LOBISTEMP	drivers/Oracle/OCI/include/oci.h	1934;"	d
OCI_FNCODE_LOBLENGTH	drivers/Oracle/OCI/include/oci.h	1885;"	d
OCI_FNCODE_LOBLENGTH2	drivers/Oracle/OCI/include/oci.h	1967;"	d
OCI_FNCODE_LOBLOADFROMFILE	drivers/Oracle/OCI/include/oci.h	1924;"	d
OCI_FNCODE_LOBLOADFROMFILE2	drivers/Oracle/OCI/include/oci.h	1968;"	d
OCI_FNCODE_LOBLOCATORASSIGN	drivers/Oracle/OCI/include/oci.h	1940;"	d
OCI_FNCODE_LOBOPEN	drivers/Oracle/OCI/include/oci.h	1926;"	d
OCI_FNCODE_LOBOPENFILE	drivers/Oracle/OCI/include/oci.h	1878;"	d
OCI_FNCODE_LOBREAD	drivers/Oracle/OCI/include/oci.h	1887;"	d
OCI_FNCODE_LOBREAD2	drivers/Oracle/OCI/include/oci.h	1969;"	d
OCI_FNCODE_LOBTRIM	drivers/Oracle/OCI/include/oci.h	1886;"	d
OCI_FNCODE_LOBTRIM2	drivers/Oracle/OCI/include/oci.h	1970;"	d
OCI_FNCODE_LOBWRITE	drivers/Oracle/OCI/include/oci.h	1888;"	d
OCI_FNCODE_LOBWRITE2	drivers/Oracle/OCI/include/oci.h	1971;"	d
OCI_FNCODE_LOGOFF	drivers/Oracle/OCI/include/oci.h	1921;"	d
OCI_FNCODE_LOGON	drivers/Oracle/OCI/include/oci.h	1920;"	d
OCI_FNCODE_LOGON2	drivers/Oracle/OCI/include/oci.h	1954;"	d
OCI_FNCODE_MAXFCN	drivers/Oracle/OCI/include/oci.h	1974;"	d
OCI_FNCODE_PARAMGET	drivers/Oracle/OCI/include/oci.h	1900;"	d
OCI_FNCODE_PARAMSET	drivers/Oracle/OCI/include/oci.h	1899;"	d
OCI_FNCODE_PASSWORDCHANGE	drivers/Oracle/OCI/include/oci.h	1857;"	d
OCI_FNCODE_RESET	drivers/Oracle/OCI/include/oci.h	1938;"	d
OCI_FNCODE_ROWIDTOCHAR	drivers/Oracle/OCI/include/oci.h	1955;"	d
OCI_FNCODE_SERVERATTACH	drivers/Oracle/OCI/include/oci.h	1852;"	d
OCI_FNCODE_SERVERDETACH	drivers/Oracle/OCI/include/oci.h	1853;"	d
OCI_FNCODE_SERVERVERSION	drivers/Oracle/OCI/include/oci.h	1891;"	d
OCI_FNCODE_SESSIONBEGIN	drivers/Oracle/OCI/include/oci.h	1855;"	d
OCI_FNCODE_SESSIONEND	drivers/Oracle/OCI/include/oci.h	1856;"	d
OCI_FNCODE_SESSIONGET	drivers/Oracle/OCI/include/oci.h	1959;"	d
OCI_FNCODE_SESSIONRELEASE	drivers/Oracle/OCI/include/oci.h	1960;"	d
OCI_FNCODE_SPOOLCREATE	drivers/Oracle/OCI/include/oci.h	1957;"	d
OCI_FNCODE_SPOOLDESTROY	drivers/Oracle/OCI/include/oci.h	1958;"	d
OCI_FNCODE_STMTEXECUTE	drivers/Oracle/OCI/include/oci.h	1864;"	d
OCI_FNCODE_STMTFETCH	drivers/Oracle/OCI/include/oci.h	1869;"	d
OCI_FNCODE_STMTGETBIND	drivers/Oracle/OCI/include/oci.h	1870;"	d
OCI_FNCODE_STMTGETPIECEINFO	drivers/Oracle/OCI/include/oci.h	1901;"	d
OCI_FNCODE_STMTPREPARE	drivers/Oracle/OCI/include/oci.h	1858;"	d
OCI_FNCODE_STMTPREPARE2	drivers/Oracle/OCI/include/oci.h	1961;"	d
OCI_FNCODE_STMTRELEASE	drivers/Oracle/OCI/include/oci.h	1962;"	d
OCI_FNCODE_STMTSETPIECEINFO	drivers/Oracle/OCI/include/oci.h	1904;"	d
OCI_FNCODE_SVC2HST	drivers/Oracle/OCI/include/oci.h	1946;"	d
OCI_FNCODE_SVCCTXBREAK	drivers/Oracle/OCI/include/oci.h	1890;"	d
OCI_FNCODE_SVCCTXTOLDA	drivers/Oracle/OCI/include/oci.h	1939;"	d
OCI_FNCODE_SVCRH	drivers/Oracle/OCI/include/oci.h	1947;"	d
OCI_FNCODE_TRANSCOMMIT	drivers/Oracle/OCI/include/oci.h	1875;"	d
OCI_FNCODE_TRANSDETACH	drivers/Oracle/OCI/include/oci.h	1874;"	d
OCI_FNCODE_TRANSFORGET	drivers/Oracle/OCI/include/oci.h	1905;"	d
OCI_FNCODE_TRANSMULTIPREPARE	drivers/Oracle/OCI/include/oci.h	1950;"	d
OCI_FNCODE_TRANSPREPARE	drivers/Oracle/OCI/include/oci.h	1906;"	d
OCI_FNCODE_TRANSROLLBACK	drivers/Oracle/OCI/include/oci.h	1907;"	d
OCI_FNCODE_TRANSSTART	drivers/Oracle/OCI/include/oci.h	1873;"	d
OCI_FNCODE_UBINDBYNAME	drivers/Oracle/OCI/include/oci.h	1942;"	d
OCI_FO_ABORT	drivers/Oracle/OCI/include/oci.h	1828;"	d
OCI_FO_BEGIN	drivers/Oracle/OCI/include/oci.h	1830;"	d
OCI_FO_END	drivers/Oracle/OCI/include/oci.h	1827;"	d
OCI_FO_ERROR	drivers/Oracle/OCI/include/oci.h	1831;"	d
OCI_FO_NONE	drivers/Oracle/OCI/include/oci.h	1839;"	d
OCI_FO_REAUTH	drivers/Oracle/OCI/include/oci.h	1829;"	d
OCI_FO_RETRY	drivers/Oracle/OCI/include/oci.h	1835;"	d
OCI_FO_SELECT	drivers/Oracle/OCI/include/oci.h	1841;"	d
OCI_FO_SESSION	drivers/Oracle/OCI/include/oci.h	1840;"	d
OCI_FO_TXNAL	drivers/Oracle/OCI/include/oci.h	1842;"	d
OCI_HTYPE_AUTHINFO	drivers/Oracle/OCI/include/oci.h	715;"	d
OCI_HTYPE_BIND	drivers/Oracle/OCI/include/oci.h	710;"	d
OCI_HTYPE_COMPLEXOBJECT	drivers/Oracle/OCI/include/oci.h	717;"	d
OCI_HTYPE_CPOOL	drivers/Oracle/OCI/include/oci.h	732;"	d
OCI_HTYPE_DEFINE	drivers/Oracle/OCI/include/oci.h	711;"	d
OCI_HTYPE_DESCRIBE	drivers/Oracle/OCI/include/oci.h	712;"	d
OCI_HTYPE_DIRPATH_COLUMN_ARRAY	drivers/Oracle/OCI/include/oci.h	721;"	d
OCI_HTYPE_DIRPATH_CTX	drivers/Oracle/OCI/include/oci.h	720;"	d
OCI_HTYPE_DIRPATH_FN_COL_ARRAY	drivers/Oracle/OCI/include/oci.h	725;"	d
OCI_HTYPE_DIRPATH_FN_CTX	drivers/Oracle/OCI/include/oci.h	724;"	d
OCI_HTYPE_DIRPATH_STREAM	drivers/Oracle/OCI/include/oci.h	722;"	d
OCI_HTYPE_ENV	drivers/Oracle/OCI/include/oci.h	706;"	d
OCI_HTYPE_ERROR	drivers/Oracle/OCI/include/oci.h	707;"	d
OCI_HTYPE_FIRST	drivers/Oracle/OCI/include/oci.h	705;"	d
OCI_HTYPE_LAST	drivers/Oracle/OCI/include/oci.h	735;"	d
OCI_HTYPE_PROC	drivers/Oracle/OCI/include/oci.h	723;"	d
OCI_HTYPE_SECURITY	drivers/Oracle/OCI/include/oci.h	718;"	d
OCI_HTYPE_SERVER	drivers/Oracle/OCI/include/oci.h	713;"	d
OCI_HTYPE_SESSION	drivers/Oracle/OCI/include/oci.h	714;"	d
OCI_HTYPE_SPOOL	drivers/Oracle/OCI/include/oci.h	733;"	d
OCI_HTYPE_STMT	drivers/Oracle/OCI/include/oci.h	709;"	d
OCI_HTYPE_SUBSCRIPTION	drivers/Oracle/OCI/include/oci.h	719;"	d
OCI_HTYPE_SVCCTX	drivers/Oracle/OCI/include/oci.h	708;"	d
OCI_HTYPE_TRANS	drivers/Oracle/OCI/include/oci.h	716;"	d
OCI_HTYPE_XADFIELD	drivers/Oracle/OCI/include/oci.h	728;"	d
OCI_HTYPE_XADGRANULE	drivers/Oracle/OCI/include/oci.h	729;"	d
OCI_HTYPE_XADIO	drivers/Oracle/OCI/include/oci.h	731;"	d
OCI_HTYPE_XADRECORD	drivers/Oracle/OCI/include/oci.h	730;"	d
OCI_HTYPE_XADSESSION	drivers/Oracle/OCI/include/oci.h	726;"	d
OCI_HTYPE_XADTABLE	drivers/Oracle/OCI/include/oci.h	727;"	d
OCI_IND_BADNULL	drivers/Oracle/OCI/include/oro.h	298;"	d
OCI_IND_NOTNULL	drivers/Oracle/OCI/include/oro.h	296;"	d
OCI_IND_NOTNULLABLE	drivers/Oracle/OCI/include/oro.h	299;"	d
OCI_IND_NULL	drivers/Oracle/OCI/include/oro.h	297;"	d
OCI_INSTANCE_TYPE_OSM	drivers/Oracle/OCI/include/oci.h	1810;"	d
OCI_INSTANCE_TYPE_RDBMS	drivers/Oracle/OCI/include/oci.h	1809;"	d
OCI_INSTANCE_TYPE_UNKNOWN	drivers/Oracle/OCI/include/oci.h	1808;"	d
OCI_INTER_DAY_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1194;"	d
OCI_INTER_FRACSEC_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1208;"	d
OCI_INTER_HOUR_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1200;"	d
OCI_INTER_INVALID_DAY	drivers/Oracle/OCI/include/oci.h	1193;"	d
OCI_INTER_INVALID_FRACSEC	drivers/Oracle/OCI/include/oci.h	1207;"	d
OCI_INTER_INVALID_HOUR	drivers/Oracle/OCI/include/oci.h	1199;"	d
OCI_INTER_INVALID_MINUTE	drivers/Oracle/OCI/include/oci.h	1201;"	d
OCI_INTER_INVALID_MONTH	drivers/Oracle/OCI/include/oci.h	1195;"	d
OCI_INTER_INVALID_SECOND	drivers/Oracle/OCI/include/oci.h	1204;"	d
OCI_INTER_INVALID_YEAR	drivers/Oracle/OCI/include/oci.h	1197;"	d
OCI_INTER_MINUTE_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1202;"	d
OCI_INTER_MONTH_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1196;"	d
OCI_INTER_SECOND_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1205;"	d
OCI_INTER_YEAR_BELOW_VALID	drivers/Oracle/OCI/include/oci.h	1198;"	d
OCI_INTHR_UNK	drivers/Oracle/OCI/include/oci.h	2029;"	d
OCI_INVALID_HANDLE	drivers/Oracle/OCI/include/oci.h	1160;"	d
OCI_KEEP_FETCH_STATE	drivers/Oracle/OCI/include/oci.h	1366;"	d
OCI_KERBCRED_CLIENT_IDENTIFIER	drivers/Oracle/OCI/include/oci.h	2298;"	d
OCI_KERBCRED_PROXY	drivers/Oracle/OCI/include/oci.h	2297;"	d
OCI_LAST_PIECE	drivers/Oracle/OCI/include/oci.h	2092;"	d
OCI_LAST_PIECE	drivers/Oracle/OCI/include/ocidef.h	295;"	d
OCI_LAST_PIECE	drivers/Oracle/OCI/include/ocidfn.h	180;"	d
OCI_LM_DEF	drivers/Oracle/OCI/include/ocidfn.h	165;"	d
OCI_LM_NBL	drivers/Oracle/OCI/include/ocidfn.h	166;"	d
OCI_LOBMAXSIZE	drivers/Oracle/OCI/include/oci.h	1822;"	d
OCI_LOBMODE_READONLY	drivers/Oracle/OCI/include/oci.h	/^  OCI_LOBMODE_READONLY = 1,                                     \/* read-only *\/$/;"	e	enum:OCILobMode
OCI_LOBMODE_READONLY	drivers/Oracle/OCI/include/orl.h	469;"	d
OCI_LOBMODE_READWRITE	drivers/Oracle/OCI/include/oci.h	/^  OCI_LOBMODE_READWRITE = 2             \/* read_write for internal lobs only *\/$/;"	e	enum:OCILobMode
OCI_LOBMODE_READWRITE	drivers/Oracle/OCI/include/orl.h	470;"	d
OCI_LOB_BUFFER_FREE	drivers/Oracle/OCI/include/oci.h	2104;"	d
OCI_LOB_BUFFER_NOFREE	drivers/Oracle/OCI/include/oci.h	2105;"	d
OCI_LOB_READONLY	drivers/Oracle/OCI/include/oci.h	2100;"	d
OCI_LOB_READWRITE	drivers/Oracle/OCI/include/oci.h	2101;"	d
OCI_LOCK_DELAYED	drivers/Oracle/OCI/include/oci.h	1805;"	d
OCI_LOCK_IMMEDIATE	drivers/Oracle/OCI/include/oci.h	1804;"	d
OCI_LOCK_NONE	drivers/Oracle/OCI/include/oro.h	/^  OCI_LOCK_NONE = 1,                               \/* null (same as no lock) *\/$/;"	e	enum:OCILockOpt
OCI_LOCK_NONE	drivers/Oracle/OCI/include/oro.h	216;"	d
OCI_LOCK_X	drivers/Oracle/OCI/include/oro.h	/^  OCI_LOCK_X = 2,                                          \/* exclusive lock *\/$/;"	e	enum:OCILockOpt
OCI_LOCK_X	drivers/Oracle/OCI/include/oro.h	217;"	d
OCI_LOCK_X_NOWAIT	drivers/Oracle/OCI/include/oro.h	/^  OCI_LOCK_X_NOWAIT = 3                      \/* exclusive lock, do not wait  *\/$/;"	e	enum:OCILockOpt
OCI_LOCK_X_NOWAIT	drivers/Oracle/OCI/include/oro.h	218;"	d
OCI_LOGON2_CPOOL	drivers/Oracle/OCI/include/oci.h	1285;"	d
OCI_LOGON2_PROXY	drivers/Oracle/OCI/include/oci.h	1287;"	d
OCI_LOGON2_SPOOL	drivers/Oracle/OCI/include/oci.h	1284;"	d
OCI_LOGON2_STMTCACHE	drivers/Oracle/OCI/include/oci.h	1286;"	d
OCI_LTYPE_ARG_FUNC	drivers/Oracle/OCI/include/oci.h	2154;"	d
OCI_LTYPE_ARG_PROC	drivers/Oracle/OCI/include/oci.h	2153;"	d
OCI_LTYPE_COLUMN	drivers/Oracle/OCI/include/oci.h	2152;"	d
OCI_LTYPE_DB_SCH	drivers/Oracle/OCI/include/oci.h	2161;"	d
OCI_LTYPE_NAME_VALUE	drivers/Oracle/OCI/include/oci.h	2165;"	d
OCI_LTYPE_SCH_OBJ	drivers/Oracle/OCI/include/oci.h	2160;"	d
OCI_LTYPE_SUBPRG	drivers/Oracle/OCI/include/oci.h	2155;"	d
OCI_LTYPE_TABLE_ALIAS	drivers/Oracle/OCI/include/oci.h	2163;"	d
OCI_LTYPE_TYPE_ARG_FUNC	drivers/Oracle/OCI/include/oci.h	2159;"	d
OCI_LTYPE_TYPE_ARG_PROC	drivers/Oracle/OCI/include/oci.h	2158;"	d
OCI_LTYPE_TYPE_ATTR	drivers/Oracle/OCI/include/oci.h	2156;"	d
OCI_LTYPE_TYPE_METHOD	drivers/Oracle/OCI/include/oci.h	2157;"	d
OCI_LTYPE_TYPE_SUBTYPE	drivers/Oracle/OCI/include/oci.h	2162;"	d
OCI_LTYPE_UNK	drivers/Oracle/OCI/include/oci.h	2151;"	d
OCI_LTYPE_VARIABLE_TYPE	drivers/Oracle/OCI/include/oci.h	2164;"	d
OCI_MARK_DEFAULT	drivers/Oracle/OCI/include/oro.h	/^  OCI_MARK_DEFAULT = 1,        \/* default (the same as OCI_MARK_NONE) *\/$/;"	e	enum:OCIMarkOpt
OCI_MARK_DEFAULT	drivers/Oracle/OCI/include/oro.h	219;"	d
OCI_MARK_NONE	drivers/Oracle/OCI/include/oro.h	/^  OCI_MARK_NONE = OCI_MARK_DEFAULT,   \/* object has not been modified *\/$/;"	e	enum:OCIMarkOpt
OCI_MARK_NONE	drivers/Oracle/OCI/include/oro.h	220;"	d
OCI_MARK_UPDATE	drivers/Oracle/OCI/include/oro.h	/^  OCI_MARK_UPDATE                               \/* object is to be updated *\/$/;"	e	enum:OCIMarkOpt
OCI_MARK_UPDATE	drivers/Oracle/OCI/include/oro.h	221;"	d
OCI_MAX_FNS	drivers/Oracle/OCI/include/oci.h	1819;"	d
OCI_MEMORY_CLEARED	drivers/Oracle/OCI/include/oci.h	2170;"	d
OCI_MEM_CLN	drivers/Oracle/OCI/include/oci.h	1336;"	d
OCI_MEM_FLUSH	drivers/Oracle/OCI/include/oci.h	1337;"	d
OCI_MEM_INIT	drivers/Oracle/OCI/include/oci.h	1335;"	d
OCI_METHOD_IS_ABSTRACT	drivers/Oracle/OCI/include/oro.h	780;"	d
OCI_METHOD_IS_CONSTANT	drivers/Oracle/OCI/include/oro.h	768;"	d
OCI_METHOD_IS_CONSTRUCTOR	drivers/Oracle/OCI/include/oro.h	770;"	d
OCI_METHOD_IS_DESTRUCTOR	drivers/Oracle/OCI/include/oro.h	771;"	d
OCI_METHOD_IS_INLINE	drivers/Oracle/OCI/include/oro.h	767;"	d
OCI_METHOD_IS_MAP	drivers/Oracle/OCI/include/oro.h	774;"	d
OCI_METHOD_IS_OPERATOR	drivers/Oracle/OCI/include/oro.h	772;"	d
OCI_METHOD_IS_ORDER	drivers/Oracle/OCI/include/oro.h	775;"	d
OCI_METHOD_IS_OVERRIDING	drivers/Oracle/OCI/include/oro.h	781;"	d
OCI_METHOD_IS_PIPELINED	drivers/Oracle/OCI/include/oro.h	782;"	d
OCI_METHOD_IS_RNDS	drivers/Oracle/OCI/include/oro.h	776;"	d
OCI_METHOD_IS_RNPS	drivers/Oracle/OCI/include/oro.h	778;"	d
OCI_METHOD_IS_SELFISH	drivers/Oracle/OCI/include/oro.h	773;"	d
OCI_METHOD_IS_VIRTUAL	drivers/Oracle/OCI/include/oro.h	769;"	d
OCI_METHOD_IS_WNDS	drivers/Oracle/OCI/include/oro.h	777;"	d
OCI_METHOD_IS_WNPS	drivers/Oracle/OCI/include/oro.h	779;"	d
OCI_MIGRATE	drivers/Oracle/OCI/include/oci.h	1384;"	d
OCI_MSG_EXPIRED	drivers/Oracle/OCI/include/oci.h	1481;"	d
OCI_MSG_NO_DELAY	drivers/Oracle/OCI/include/oci.h	1496;"	d
OCI_MSG_NO_EXPIRATION	drivers/Oracle/OCI/include/oci.h	1499;"	d
OCI_MSG_PROCESSED	drivers/Oracle/OCI/include/oci.h	1480;"	d
OCI_MSG_READY	drivers/Oracle/OCI/include/oci.h	1479;"	d
OCI_MSG_WAITING	drivers/Oracle/OCI/include/oci.h	1478;"	d
OCI_MUTEX_ENV_ONLY	drivers/Oracle/OCI/include/oci.h	1273;"	d
OCI_NEED_DATA	drivers/Oracle/OCI/include/oci.h	1161;"	d
OCI_NEW_LENGTH_SEMANTICS	drivers/Oracle/OCI/include/oci.h	1270;"	d
OCI_NEXT_PIECE	drivers/Oracle/OCI/include/oci.h	2091;"	d
OCI_NEXT_PIECE	drivers/Oracle/OCI/include/ocidef.h	294;"	d
OCI_NEXT_PIECE	drivers/Oracle/OCI/include/ocidfn.h	179;"	d
OCI_NLS_ABDAYNAME1	drivers/Oracle/OCI/include/oci.h	2201;"	d
OCI_NLS_ABDAYNAME2	drivers/Oracle/OCI/include/oci.h	2202;"	d
OCI_NLS_ABDAYNAME3	drivers/Oracle/OCI/include/oci.h	2203;"	d
OCI_NLS_ABDAYNAME4	drivers/Oracle/OCI/include/oci.h	2204;"	d
OCI_NLS_ABDAYNAME5	drivers/Oracle/OCI/include/oci.h	2205;"	d
OCI_NLS_ABDAYNAME6	drivers/Oracle/OCI/include/oci.h	2206;"	d
OCI_NLS_ABDAYNAME7	drivers/Oracle/OCI/include/oci.h	2207;"	d
OCI_NLS_ABLANGUAGE	drivers/Oracle/OCI/include/oci.h	2246;"	d
OCI_NLS_ABMONTHNAME1	drivers/Oracle/OCI/include/oci.h	2220;"	d
OCI_NLS_ABMONTHNAME10	drivers/Oracle/OCI/include/oci.h	2229;"	d
OCI_NLS_ABMONTHNAME11	drivers/Oracle/OCI/include/oci.h	2230;"	d
OCI_NLS_ABMONTHNAME12	drivers/Oracle/OCI/include/oci.h	2231;"	d
OCI_NLS_ABMONTHNAME2	drivers/Oracle/OCI/include/oci.h	2221;"	d
OCI_NLS_ABMONTHNAME3	drivers/Oracle/OCI/include/oci.h	2222;"	d
OCI_NLS_ABMONTHNAME4	drivers/Oracle/OCI/include/oci.h	2223;"	d
OCI_NLS_ABMONTHNAME5	drivers/Oracle/OCI/include/oci.h	2224;"	d
OCI_NLS_ABMONTHNAME6	drivers/Oracle/OCI/include/oci.h	2225;"	d
OCI_NLS_ABMONTHNAME7	drivers/Oracle/OCI/include/oci.h	2226;"	d
OCI_NLS_ABMONTHNAME8	drivers/Oracle/OCI/include/oci.h	2227;"	d
OCI_NLS_ABMONTHNAME9	drivers/Oracle/OCI/include/oci.h	2228;"	d
OCI_NLS_ABTERRITORY	drivers/Oracle/OCI/include/oci.h	2253;"	d
OCI_NLS_AD	drivers/Oracle/OCI/include/oci.h	2236;"	d
OCI_NLS_AM	drivers/Oracle/OCI/include/oci.h	2234;"	d
OCI_NLS_BC	drivers/Oracle/OCI/include/oci.h	2237;"	d
OCI_NLS_BINARY	drivers/Oracle/OCI/include/oci.h	2271;"	d
OCI_NLS_CALENDAR	drivers/Oracle/OCI/include/oci.h	2250;"	d
OCI_NLS_CASE_INSENSITIVE	drivers/Oracle/OCI/include/oci.h	2273;"	d
OCI_NLS_CHARACTER_SET	drivers/Oracle/OCI/include/oci.h	2248;"	d
OCI_NLS_CHARSET_FIXEDWIDTH	drivers/Oracle/OCI/include/oci.h	2265;"	d
OCI_NLS_CHARSET_ID	drivers/Oracle/OCI/include/oci.h	2266;"	d
OCI_NLS_CHARSET_MAXBYTESZ	drivers/Oracle/OCI/include/oci.h	2264;"	d
OCI_NLS_CREDIT	drivers/Oracle/OCI/include/oci.h	2241;"	d
OCI_NLS_CS_IANA_TO_ORA	drivers/Oracle/OCI/include/oci.h	2278;"	d
OCI_NLS_CS_ORA_TO_IANA	drivers/Oracle/OCI/include/oci.h	2279;"	d
OCI_NLS_DATEFORMAT	drivers/Oracle/OCI/include/oci.h	2242;"	d
OCI_NLS_DAYNAME1	drivers/Oracle/OCI/include/oci.h	2194;"	d
OCI_NLS_DAYNAME2	drivers/Oracle/OCI/include/oci.h	2195;"	d
OCI_NLS_DAYNAME3	drivers/Oracle/OCI/include/oci.h	2196;"	d
OCI_NLS_DAYNAME4	drivers/Oracle/OCI/include/oci.h	2197;"	d
OCI_NLS_DAYNAME5	drivers/Oracle/OCI/include/oci.h	2198;"	d
OCI_NLS_DAYNAME6	drivers/Oracle/OCI/include/oci.h	2199;"	d
OCI_NLS_DAYNAME7	drivers/Oracle/OCI/include/oci.h	2200;"	d
OCI_NLS_DDATEFORMAT	drivers/Oracle/OCI/include/oci.h	2254;"	d
OCI_NLS_DEBIT	drivers/Oracle/OCI/include/oci.h	2240;"	d
OCI_NLS_DECIMAL	drivers/Oracle/OCI/include/oci.h	2238;"	d
OCI_NLS_DTIMEFORMAT	drivers/Oracle/OCI/include/oci.h	2255;"	d
OCI_NLS_DUAL_CURRENCY	drivers/Oracle/OCI/include/oci.h	2251;"	d
OCI_NLS_GROUP	drivers/Oracle/OCI/include/oci.h	2239;"	d
OCI_NLS_INT_CURRENCY	drivers/Oracle/OCI/include/oci.h	2243;"	d
OCI_NLS_INT_CURRENCYSEP	drivers/Oracle/OCI/include/oci.h	2263;"	d
OCI_NLS_LANGUAGE	drivers/Oracle/OCI/include/oci.h	2245;"	d
OCI_NLS_LANG_ISO_TO_ORA	drivers/Oracle/OCI/include/oci.h	2280;"	d
OCI_NLS_LANG_ORA_TO_ISO	drivers/Oracle/OCI/include/oci.h	2281;"	d
OCI_NLS_LINGUISTIC	drivers/Oracle/OCI/include/oci.h	2272;"	d
OCI_NLS_LINGUISTIC_NAME	drivers/Oracle/OCI/include/oci.h	2249;"	d
OCI_NLS_LISTSEP	drivers/Oracle/OCI/include/oci.h	2259;"	d
OCI_NLS_LOC_CURRENCY	drivers/Oracle/OCI/include/oci.h	2244;"	d
OCI_NLS_LOWERCASE	drivers/Oracle/OCI/include/oci.h	2276;"	d
OCI_NLS_MAXBUFSZ	drivers/Oracle/OCI/include/oci.h	2269;"	d
OCI_NLS_MONDECIMAL	drivers/Oracle/OCI/include/oci.h	2260;"	d
OCI_NLS_MONGROUP	drivers/Oracle/OCI/include/oci.h	2261;"	d
OCI_NLS_MONGROUPING	drivers/Oracle/OCI/include/oci.h	2262;"	d
OCI_NLS_MONTHNAME1	drivers/Oracle/OCI/include/oci.h	2208;"	d
OCI_NLS_MONTHNAME10	drivers/Oracle/OCI/include/oci.h	2217;"	d
OCI_NLS_MONTHNAME11	drivers/Oracle/OCI/include/oci.h	2218;"	d
OCI_NLS_MONTHNAME12	drivers/Oracle/OCI/include/oci.h	2219;"	d
OCI_NLS_MONTHNAME2	drivers/Oracle/OCI/include/oci.h	2209;"	d
OCI_NLS_MONTHNAME3	drivers/Oracle/OCI/include/oci.h	2210;"	d
OCI_NLS_MONTHNAME4	drivers/Oracle/OCI/include/oci.h	2211;"	d
OCI_NLS_MONTHNAME5	drivers/Oracle/OCI/include/oci.h	2212;"	d
OCI_NLS_MONTHNAME6	drivers/Oracle/OCI/include/oci.h	2213;"	d
OCI_NLS_MONTHNAME7	drivers/Oracle/OCI/include/oci.h	2214;"	d
OCI_NLS_MONTHNAME8	drivers/Oracle/OCI/include/oci.h	2215;"	d
OCI_NLS_MONTHNAME9	drivers/Oracle/OCI/include/oci.h	2216;"	d
OCI_NLS_NCHARSET_ID	drivers/Oracle/OCI/include/oci.h	2267;"	d
OCI_NLS_NO	drivers/Oracle/OCI/include/oci.h	2233;"	d
OCI_NLS_NUMGROUPING	drivers/Oracle/OCI/include/oci.h	2258;"	d
OCI_NLS_PM	drivers/Oracle/OCI/include/oci.h	2235;"	d
OCI_NLS_SFDATEFORMAT	drivers/Oracle/OCI/include/oci.h	2256;"	d
OCI_NLS_SFTIMEFORMAT	drivers/Oracle/OCI/include/oci.h	2257;"	d
OCI_NLS_TERRITORY	drivers/Oracle/OCI/include/oci.h	2247;"	d
OCI_NLS_TERR_ISO3_TO_ORA	drivers/Oracle/OCI/include/oci.h	2284;"	d
OCI_NLS_TERR_ISO_TO_ORA	drivers/Oracle/OCI/include/oci.h	2282;"	d
OCI_NLS_TERR_ORA_TO_ISO	drivers/Oracle/OCI/include/oci.h	2283;"	d
OCI_NLS_TERR_ORA_TO_ISO3	drivers/Oracle/OCI/include/oci.h	2286;"	d
OCI_NLS_UPPERCASE	drivers/Oracle/OCI/include/oci.h	2275;"	d
OCI_NLS_WRITINGDIR	drivers/Oracle/OCI/include/oci.h	2252;"	d
OCI_NLS_YES	drivers/Oracle/OCI/include/oci.h	2232;"	d
OCI_NON_BLOCKING	drivers/Oracle/OCI/include/oci.h	1370;"	d
OCI_NO_AC_DDL	drivers/Oracle/OCI/include/oci.h	1801;"	d
OCI_NO_DATA	drivers/Oracle/OCI/include/oci.h	1158;"	d
OCI_NO_MUTEX	drivers/Oracle/OCI/include/oci.h	1258;"	d
OCI_NO_MUTEX_STMT	drivers/Oracle/OCI/include/oci.h	1272;"	d
OCI_NO_SHARING	drivers/Oracle/OCI/include/oci.h	1355;"	d
OCI_NO_UCB	drivers/Oracle/OCI/include/oci.h	1257;"	d
OCI_NTV_SYNTAX	drivers/Oracle/OCI/include/oci.h	1215;"	d
OCI_NUMBER_DEFAULTPREC	drivers/Oracle/OCI/include/oro.h	859;"	d
OCI_NUMBER_DEFAULTSCALE	drivers/Oracle/OCI/include/oro.h	860;"	d
OCI_NUMBER_SIGNED	drivers/Oracle/OCI/include/orl.h	940;"	d
OCI_NUMBER_SIZE	drivers/Oracle/OCI/include/orl.h	478;"	d
OCI_NUMBER_UNSIGNED	drivers/Oracle/OCI/include/orl.h	939;"	d
OCI_NW_SUPPORTED	drivers/Oracle/OCI/include/oci.h	1796;"	d
OCI_NW_UNSUPPORTED	drivers/Oracle/OCI/include/oci.h	1797;"	d
OCI_OBJECT	drivers/Oracle/OCI/include/oci.h	1251;"	d
OCI_OBJECTCOPY_NOREF	drivers/Oracle/OCI/include/oro.h	525;"	d
OCI_OBJECTEVENT_AFTER_FLUSH	drivers/Oracle/OCI/include/oro.h	/^   OCI_OBJECTEVENT_AFTER_FLUSH,                  \/* after flushing the cache *\/$/;"	e	enum:OCIObjectEvent
OCI_OBJECTEVENT_AFTER_FLUSH	drivers/Oracle/OCI/include/oro.h	222;"	d
OCI_OBJECTEVENT_AFTER_REFRESH	drivers/Oracle/OCI/include/oro.h	/^   OCI_OBJECTEVENT_AFTER_REFRESH,              \/* after refreshing the cache *\/$/;"	e	enum:OCIObjectEvent
OCI_OBJECTEVENT_AFTER_REFRESH	drivers/Oracle/OCI/include/oro.h	223;"	d
OCI_OBJECTEVENT_BEFORE_FLUSH	drivers/Oracle/OCI/include/oro.h	/^   OCI_OBJECTEVENT_BEFORE_FLUSH = 1,            \/* before flushing the cache *\/$/;"	e	enum:OCIObjectEvent
OCI_OBJECTEVENT_BEFORE_FLUSH	drivers/Oracle/OCI/include/oro.h	224;"	d
OCI_OBJECTEVENT_BEFORE_REFRESH	drivers/Oracle/OCI/include/oro.h	/^   OCI_OBJECTEVENT_BEFORE_REFRESH,            \/* before refreshing the cache *\/$/;"	e	enum:OCIObjectEvent
OCI_OBJECTEVENT_BEFORE_REFRESH	drivers/Oracle/OCI/include/oro.h	225;"	d
OCI_OBJECTEVENT_WHEN_LOCK	drivers/Oracle/OCI/include/oro.h	/^   OCI_OBJECTEVENT_WHEN_LOCK               \/* when an object is being locked *\/$/;"	e	enum:OCIObjectEvent
OCI_OBJECTEVENT_WHEN_LOCK	drivers/Oracle/OCI/include/oro.h	226;"	d
OCI_OBJECTEVENT_WHEN_MARK_DELETED	drivers/Oracle/OCI/include/oro.h	/^   OCI_OBJECTEVENT_WHEN_MARK_DELETED,    \/* when an object is marked deleted *\/$/;"	e	enum:OCIObjectEvent
OCI_OBJECTEVENT_WHEN_MARK_DELETED	drivers/Oracle/OCI/include/oro.h	227;"	d
OCI_OBJECTEVENT_WHEN_MARK_UPDATED	drivers/Oracle/OCI/include/oro.h	/^   OCI_OBJECTEVENT_WHEN_MARK_UPDATED,    \/* when an object is marked updated *\/$/;"	e	enum:OCIObjectEvent
OCI_OBJECTEVENT_WHEN_MARK_UPDATED	drivers/Oracle/OCI/include/oro.h	228;"	d
OCI_OBJECTEVENT_WHEN_UNMARK	drivers/Oracle/OCI/include/oro.h	/^   OCI_OBJECTEVENT_WHEN_UNMARK,          \/* when an object is being unmarked *\/$/;"	e	enum:OCIObjectEvent
OCI_OBJECTEVENT_WHEN_UNMARK	drivers/Oracle/OCI/include/oro.h	229;"	d
OCI_OBJECTFREE_FORCE	drivers/Oracle/OCI/include/oro.h	534;"	d
OCI_OBJECTFREE_HEADER	drivers/Oracle/OCI/include/oro.h	536;"	d
OCI_OBJECTFREE_NONULL	drivers/Oracle/OCI/include/oro.h	535;"	d
OCI_OBJECTPROP_ALLOC_DURATION	drivers/Oracle/OCI/include/oro.h	553;"	d
OCI_OBJECTPROP_DIRTIED	drivers/Oracle/OCI/include/oro.h	/^  OCI_OBJECTPROP_DIRTIED = 1,                               \/* dirty objects *\/$/;"	e	enum:OCIObjectProperty
OCI_OBJECTPROP_DIRTIED	drivers/Oracle/OCI/include/oro.h	230;"	d
OCI_OBJECTPROP_LIFETIME	drivers/Oracle/OCI/include/oro.h	549;"	d
OCI_OBJECTPROP_LOADED	drivers/Oracle/OCI/include/oro.h	/^  OCI_OBJECTPROP_LOADED,                \/* objects loaded in the transaction *\/$/;"	e	enum:OCIObjectProperty
OCI_OBJECTPROP_LOADED	drivers/Oracle/OCI/include/oro.h	231;"	d
OCI_OBJECTPROP_LOCK	drivers/Oracle/OCI/include/oro.h	554;"	d
OCI_OBJECTPROP_LOCKED	drivers/Oracle/OCI/include/oro.h	/^  OCI_OBJECTPROP_LOCKED                                    \/* locked objects *\/$/;"	e	enum:OCIObjectProperty
OCI_OBJECTPROP_LOCKED	drivers/Oracle/OCI/include/oro.h	232;"	d
OCI_OBJECTPROP_MARKSTATUS	drivers/Oracle/OCI/include/oro.h	555;"	d
OCI_OBJECTPROP_PIN_DURATION	drivers/Oracle/OCI/include/oro.h	552;"	d
OCI_OBJECTPROP_SCHEMA	drivers/Oracle/OCI/include/oro.h	550;"	d
OCI_OBJECTPROP_TABLE	drivers/Oracle/OCI/include/oro.h	551;"	d
OCI_OBJECTPROP_VIEW	drivers/Oracle/OCI/include/oro.h	556;"	d
OCI_OBJECT_DELETED	drivers/Oracle/OCI/include/oro.h	583;"	d
OCI_OBJECT_IS_DELETED	drivers/Oracle/OCI/include/oro.h	592;"	d
OCI_OBJECT_IS_DIRTY	drivers/Oracle/OCI/include/oro.h	594;"	d
OCI_OBJECT_IS_NEW	drivers/Oracle/OCI/include/oro.h	593;"	d
OCI_OBJECT_IS_UPDATED	drivers/Oracle/OCI/include/oro.h	591;"	d
OCI_OBJECT_NEW	drivers/Oracle/OCI/include/oro.h	582;"	d
OCI_OBJECT_PERSISTENT	drivers/Oracle/OCI/include/oro.h	/^   OCI_OBJECT_PERSISTENT = 1,                          \/* persistent object *\/$/;"	e	enum:OCIObjectLifetime
OCI_OBJECT_TRANSIENT	drivers/Oracle/OCI/include/oro.h	/^   OCI_OBJECT_TRANSIENT,                                \/* transient object *\/$/;"	e	enum:OCIObjectLifetime
OCI_OBJECT_UPDATED	drivers/Oracle/OCI/include/oro.h	584;"	d
OCI_OBJECT_VALUE	drivers/Oracle/OCI/include/oro.h	/^   OCI_OBJECT_VALUE                                         \/* value object *\/$/;"	e	enum:OCIObjectLifetime
OCI_OCIDURATION	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_OCIDURATION,$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_OCIPRECISION	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_OCIPRECISION$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_OCIREFPTR	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_OCIREFPTR,$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_OCITYPECODE	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_OCITYPECODE,$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_OCITYPEENCAP	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_OCITYPEENCAP,$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_OCITYPEPARAMMODE	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_OCITYPEPARAMMODE,$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_ONE_PIECE	drivers/Oracle/OCI/include/oci.h	2089;"	d
OCI_ONE_PIECE	drivers/Oracle/OCI/include/ocidef.h	292;"	d
OCI_ONE_PIECE	drivers/Oracle/OCI/include/ocidfn.h	177;"	d
OCI_ORACLE	drivers/Oracle/OCI/include/oci.h	402;"	d
OCI_ORACLE_DATE	drivers/Oracle/OCI/include/oci.h	2033;"	d
OCI_OTYPE_FUNC	drivers/Oracle/OCI/include/oci.h	1518;"	d
OCI_OTYPE_NAME	drivers/Oracle/OCI/include/oci.h	779;"	d
OCI_OTYPE_PKG	drivers/Oracle/OCI/include/oci.h	1519;"	d
OCI_OTYPE_PROC	drivers/Oracle/OCI/include/oci.h	1517;"	d
OCI_OTYPE_PTR	drivers/Oracle/OCI/include/oci.h	781;"	d
OCI_OTYPE_REF	drivers/Oracle/OCI/include/oci.h	780;"	d
OCI_OTYPE_STMT	drivers/Oracle/OCI/include/oci.h	1520;"	d
OCI_OTYPE_SYN	drivers/Oracle/OCI/include/oci.h	1516;"	d
OCI_OTYPE_TABLE	drivers/Oracle/OCI/include/oci.h	1514;"	d
OCI_OTYPE_UNK	drivers/Oracle/OCI/include/oci.h	1513;"	d
OCI_OTYPE_VIEW	drivers/Oracle/OCI/include/oci.h	1515;"	d
OCI_PARAM_IN	drivers/Oracle/OCI/include/oci.h	1421;"	d
OCI_PARAM_OUT	drivers/Oracle/OCI/include/oci.h	1422;"	d
OCI_PARSE_ONLY	drivers/Oracle/OCI/include/oci.h	1372;"	d
OCI_PCWS	drivers/Oracle/OCI/include/ocidef.h	467;"	d
OCI_PIECEWISE	drivers/Oracle/OCI/include/oci.h	1238;"	d
OCI_PIN_ANY	drivers/Oracle/OCI/include/oro.h	/^  OCI_PIN_ANY = 3,                          \/* pin any copy of the object *\/$/;"	e	enum:OCIPinOpt
OCI_PIN_ANY	drivers/Oracle/OCI/include/oro.h	233;"	d
OCI_PIN_DEFAULT	drivers/Oracle/OCI/include/oro.h	/^  OCI_PIN_DEFAULT = 1,                                 \/* default pin option *\/$/;"	e	enum:OCIPinOpt
OCI_PIN_DEFAULT	drivers/Oracle/OCI/include/oro.h	234;"	d
OCI_PIN_LATEST	drivers/Oracle/OCI/include/oro.h	/^  OCI_PIN_LATEST = 5                     \/* pin latest copy of the object *\/$/;"	e	enum:OCIPinOpt
OCI_PIN_LATEST	drivers/Oracle/OCI/include/oro.h	235;"	d
OCI_PIN_RECENT	drivers/Oracle/OCI/include/oro.h	/^  OCI_PIN_RECENT = 4,                    \/* pin recent copy of the object *\/$/;"	e	enum:OCIPinOpt
OCI_PIN_RECENT	drivers/Oracle/OCI/include/oro.h	236;"	d
OCI_PRELIM_AUTH	drivers/Oracle/OCI/include/oci.h	1387;"	d
OCI_PREP2_CACHE_SEARCHONLY	drivers/Oracle/OCI/include/oci.h	1412;"	d
OCI_PREP2_GET_PLSQL_WARNINGS	drivers/Oracle/OCI/include/oci.h	1413;"	d
OCI_PREP_AFC_PAD_OFF	drivers/Oracle/OCI/include/oci.h	1358;"	d
OCI_PREP_AFC_PAD_ON	drivers/Oracle/OCI/include/oci.h	1357;"	d
OCI_PREP_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1356;"	d
OCI_PTYPE_ARG	drivers/Oracle/OCI/include/oci.h	2132;"	d
OCI_PTYPE_COL	drivers/Oracle/OCI/include/oci.h	2131;"	d
OCI_PTYPE_DATABASE	drivers/Oracle/OCI/include/oci.h	2140;"	d
OCI_PTYPE_EVALUATION_CONTEXT	drivers/Oracle/OCI/include/oci.h	2143;"	d
OCI_PTYPE_FUNC	drivers/Oracle/OCI/include/oci.h	2126;"	d
OCI_PTYPE_LIST	drivers/Oracle/OCI/include/oci.h	2133;"	d
OCI_PTYPE_NAME_VALUE	drivers/Oracle/OCI/include/oci.h	2146;"	d
OCI_PTYPE_PKG	drivers/Oracle/OCI/include/oci.h	2127;"	d
OCI_PTYPE_PROC	drivers/Oracle/OCI/include/oci.h	2125;"	d
OCI_PTYPE_RULE	drivers/Oracle/OCI/include/oci.h	2141;"	d
OCI_PTYPE_RULE_SET	drivers/Oracle/OCI/include/oci.h	2142;"	d
OCI_PTYPE_SCHEMA	drivers/Oracle/OCI/include/oci.h	2139;"	d
OCI_PTYPE_SEQ	drivers/Oracle/OCI/include/oci.h	2130;"	d
OCI_PTYPE_SYN	drivers/Oracle/OCI/include/oci.h	2129;"	d
OCI_PTYPE_TABLE	drivers/Oracle/OCI/include/oci.h	2123;"	d
OCI_PTYPE_TABLE_ALIAS	drivers/Oracle/OCI/include/oci.h	2144;"	d
OCI_PTYPE_TYPE	drivers/Oracle/OCI/include/oci.h	2128;"	d
OCI_PTYPE_TYPE_ARG	drivers/Oracle/OCI/include/oci.h	2137;"	d
OCI_PTYPE_TYPE_ATTR	drivers/Oracle/OCI/include/oci.h	2134;"	d
OCI_PTYPE_TYPE_COLL	drivers/Oracle/OCI/include/oci.h	2135;"	d
OCI_PTYPE_TYPE_METHOD	drivers/Oracle/OCI/include/oci.h	2136;"	d
OCI_PTYPE_TYPE_RESULT	drivers/Oracle/OCI/include/oci.h	2138;"	d
OCI_PTYPE_UNK	drivers/Oracle/OCI/include/oci.h	2122;"	d
OCI_PTYPE_VARIABLE_TYPE	drivers/Oracle/OCI/include/oci.h	2145;"	d
OCI_PTYPE_VIEW	drivers/Oracle/OCI/include/oci.h	2124;"	d
OCI_REFRESH_LOADED	drivers/Oracle/OCI/include/oro.h	/^  OCI_REFRESH_LOADED = 1        \/* refresh objects loaded in the transaction *\/$/;"	e	enum:OCIRefreshOpt
OCI_REFRESH_LOADED	drivers/Oracle/OCI/include/oro.h	237;"	d
OCI_REG_LDAPONLY	drivers/Oracle/OCI/include/oci.h	1265;"	d
OCI_RESERVED1	drivers/Oracle/OCI/include/oci.h	1253;"	d
OCI_RESERVED2	drivers/Oracle/OCI/include/oci.h	1255;"	d
OCI_RESERVED_FOR_INT_USE	drivers/Oracle/OCI/include/oci.h	1157;"	d
OCI_ROWCBK_DONE	drivers/Oracle/OCI/include/oci.h	1167;"	d
OCI_ROWID_LEN	drivers/Oracle/OCI/include/oci.h	1823;"	d
OCI_SB1	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_SB1, $/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_SB2_IND_PTR	drivers/Oracle/OCI/include/oci.h	1235;"	d
OCI_SERVER_NORMAL	drivers/Oracle/OCI/include/oci.h	1136;"	d
OCI_SERVER_NOT_CONNECTED	drivers/Oracle/OCI/include/oci.h	1135;"	d
OCI_SERVER_STATS	drivers/Oracle/OCI/include/oci.h	1341;"	d
OCI_SESSEND_RESERVED_1	drivers/Oracle/OCI/include/oci.h	1395;"	d
OCI_SESSGET_CPOOL	drivers/Oracle/OCI/include/oci.h	1300;"	d
OCI_SESSGET_CREDEXT	drivers/Oracle/OCI/include/oci.h	1303;"	d
OCI_SESSGET_CREDPROXY	drivers/Oracle/OCI/include/oci.h	1302;"	d
OCI_SESSGET_SPOOL	drivers/Oracle/OCI/include/oci.h	1299;"	d
OCI_SESSGET_SPOOL_MATCHANY	drivers/Oracle/OCI/include/oci.h	1304;"	d
OCI_SESSGET_STMTCACHE	drivers/Oracle/OCI/include/oci.h	1301;"	d
OCI_SESSRLS_DROPSESS	drivers/Oracle/OCI/include/oci.h	1315;"	d
OCI_SESSRLS_RETAG	drivers/Oracle/OCI/include/oci.h	1316;"	d
OCI_SHARED	drivers/Oracle/OCI/include/oci.h	1254;"	d
OCI_SHARED_EXT	drivers/Oracle/OCI/include/oci.h	1260;"	d
OCI_SHOW_DML_WARNINGS	drivers/Oracle/OCI/include/oci.h	1374;"	d
OCI_SKIP	drivers/Oracle/OCI/include/ocidef.h	468;"	d
OCI_SPC_HOMOGENEOUS	drivers/Oracle/OCI/include/oci.h	1293;"	d
OCI_SPC_REINITIALIZE	drivers/Oracle/OCI/include/oci.h	1292;"	d
OCI_SPC_STMTCACHE	drivers/Oracle/OCI/include/oci.h	1294;"	d
OCI_SPD_FORCE	drivers/Oracle/OCI/include/oci.h	1321;"	d
OCI_SPOOL_ATTRVAL_FORCEGET	drivers/Oracle/OCI/include/oci.h	1310;"	d
OCI_SPOOL_ATTRVAL_NOWAIT	drivers/Oracle/OCI/include/oci.h	1309;"	d
OCI_SPOOL_ATTRVAL_WAIT	drivers/Oracle/OCI/include/oci.h	1308;"	d
OCI_SP_SUPPORTED	drivers/Oracle/OCI/include/oci.h	1792;"	d
OCI_SP_UNSUPPORTED	drivers/Oracle/OCI/include/oci.h	1793;"	d
OCI_SQLSTATE_SIZE	drivers/Oracle/OCI/include/oci.h	1820;"	d
OCI_STILL_EXECUTING	drivers/Oracle/OCI/include/oci.h	1162;"	d
OCI_STMT_ALTER	drivers/Oracle/OCI/include/oci.h	2116;"	d
OCI_STMT_BEGIN	drivers/Oracle/OCI/include/oci.h	2117;"	d
OCI_STMT_CACHE	drivers/Oracle/OCI/include/oci.h	1390;"	d
OCI_STMT_CREATE	drivers/Oracle/OCI/include/oci.h	2114;"	d
OCI_STMT_DECLARE	drivers/Oracle/OCI/include/oci.h	2118;"	d
OCI_STMT_DELETE	drivers/Oracle/OCI/include/oci.h	2112;"	d
OCI_STMT_DROP	drivers/Oracle/OCI/include/oci.h	2115;"	d
OCI_STMT_INSERT	drivers/Oracle/OCI/include/oci.h	2113;"	d
OCI_STMT_SCROLLABLE_READONLY	drivers/Oracle/OCI/include/oci.h	1367;"	d
OCI_STMT_SELECT	drivers/Oracle/OCI/include/oci.h	2110;"	d
OCI_STMT_STATE_END_OF_FETCH	drivers/Oracle/OCI/include/oci.h	1330;"	d
OCI_STMT_STATE_EXECUTED	drivers/Oracle/OCI/include/oci.h	1329;"	d
OCI_STMT_STATE_INITIALIZED	drivers/Oracle/OCI/include/oci.h	1328;"	d
OCI_STMT_UPDATE	drivers/Oracle/OCI/include/oci.h	2111;"	d
OCI_STM_RESERVED4	drivers/Oracle/OCI/include/oci.h	1274;"	d
OCI_STRING_MAXLEN	drivers/Oracle/OCI/include/oro.h	867;"	d
OCI_STRLS_CACHE_DELETE	drivers/Oracle/OCI/include/oci.h	1416;"	d
OCI_SUBSCR_NAMESPACE_ANONYMOUS	drivers/Oracle/OCI/include/oci.h	1141;"	d
OCI_SUBSCR_NAMESPACE_AQ	drivers/Oracle/OCI/include/oci.h	1142;"	d
OCI_SUBSCR_NAMESPACE_MAX	drivers/Oracle/OCI/include/oci.h	1143;"	d
OCI_SUBSCR_PRES_DEFAULT	drivers/Oracle/OCI/include/oci.h	1121;"	d
OCI_SUBSCR_PRES_MAX	drivers/Oracle/OCI/include/oci.h	1123;"	d
OCI_SUBSCR_PRES_XML	drivers/Oracle/OCI/include/oci.h	1122;"	d
OCI_SUBSCR_PROTO_HTTP	drivers/Oracle/OCI/include/oci.h	1117;"	d
OCI_SUBSCR_PROTO_MAIL	drivers/Oracle/OCI/include/oci.h	1115;"	d
OCI_SUBSCR_PROTO_MAX	drivers/Oracle/OCI/include/oci.h	1118;"	d
OCI_SUBSCR_PROTO_OCI	drivers/Oracle/OCI/include/oci.h	1114;"	d
OCI_SUBSCR_PROTO_SERVER	drivers/Oracle/OCI/include/oci.h	1116;"	d
OCI_SUCCESS	drivers/Oracle/OCI/include/oci.h	1155;"	d
OCI_SUCCESS_WITH_INFO	drivers/Oracle/OCI/include/oci.h	1156;"	d
OCI_SYSDBA	drivers/Oracle/OCI/include/oci.h	1385;"	d
OCI_SYSOPER	drivers/Oracle/OCI/include/oci.h	1386;"	d
OCI_TEMP_BLOB	drivers/Oracle/OCI/include/oci.h	774;"	d
OCI_TEMP_CLOB	drivers/Oracle/OCI/include/oci.h	775;"	d
OCI_TEXTPTR	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_TEXTPTR,$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_THREADED	drivers/Oracle/OCI/include/oci.h	1250;"	d
OCI_TRANS_ISOLMASK	drivers/Oracle/OCI/include/oci.h	1436;"	d
OCI_TRANS_JOIN	drivers/Oracle/OCI/include/oci.h	1428;"	d
OCI_TRANS_LOOSE	drivers/Oracle/OCI/include/oci.h	1438;"	d
OCI_TRANS_NEW	drivers/Oracle/OCI/include/oci.h	1427;"	d
OCI_TRANS_NOMIGRATE	drivers/Oracle/OCI/include/oci.h	1442;"	d
OCI_TRANS_READONLY	drivers/Oracle/OCI/include/oci.h	1432;"	d
OCI_TRANS_READWRITE	drivers/Oracle/OCI/include/oci.h	1433;"	d
OCI_TRANS_RESUME	drivers/Oracle/OCI/include/oci.h	1429;"	d
OCI_TRANS_SEPARABLE	drivers/Oracle/OCI/include/oci.h	1443;"	d
OCI_TRANS_SERIALIZABLE	drivers/Oracle/OCI/include/oci.h	1434;"	d
OCI_TRANS_STARTMASK	drivers/Oracle/OCI/include/oci.h	1430;"	d
OCI_TRANS_TIGHT	drivers/Oracle/OCI/include/oci.h	1439;"	d
OCI_TRANS_TWOPHASE	drivers/Oracle/OCI/include/oci.h	1449;"	d
OCI_TRANS_TYPEMASK	drivers/Oracle/OCI/include/oci.h	1440;"	d
OCI_TYPECODE_BDOUBLE	drivers/Oracle/OCI/include/oro.h	624;"	d
OCI_TYPECODE_BFILE	drivers/Oracle/OCI/include/oro.h	651;"	d
OCI_TYPECODE_BFLOAT	drivers/Oracle/OCI/include/oro.h	623;"	d
OCI_TYPECODE_BLOB	drivers/Oracle/OCI/include/oro.h	650;"	d
OCI_TYPECODE_BOOLEAN	drivers/Oracle/OCI/include/oro.h	677;"	d
OCI_TYPECODE_CFILE	drivers/Oracle/OCI/include/oro.h	653;"	d
OCI_TYPECODE_CHAR	drivers/Oracle/OCI/include/oro.h	640;"	d
OCI_TYPECODE_CLOB	drivers/Oracle/OCI/include/oro.h	652;"	d
OCI_TYPECODE_DATE	drivers/Oracle/OCI/include/oro.h	617;"	d
OCI_TYPECODE_DECIMAL	drivers/Oracle/OCI/include/oro.h	627;"	d
OCI_TYPECODE_DOUBLE	drivers/Oracle/OCI/include/oro.h	622;"	d
OCI_TYPECODE_ERRHP	drivers/Oracle/OCI/include/oro.h	691;"	d
OCI_TYPECODE_FLOAT	drivers/Oracle/OCI/include/oro.h	625;"	d
OCI_TYPECODE_INTEGER	drivers/Oracle/OCI/include/oro.h	635;"	d
OCI_TYPECODE_INTERVAL_DS	drivers/Oracle/OCI/include/oro.h	664;"	d
OCI_TYPECODE_INTERVAL_YM	drivers/Oracle/OCI/include/oro.h	663;"	d
OCI_TYPECODE_ITABLE	drivers/Oracle/OCI/include/oro.h	675;"	d
OCI_TYPECODE_MLSLABEL	drivers/Oracle/OCI/include/oro.h	643;"	d
OCI_TYPECODE_NAMEDCOLLECTION	drivers/Oracle/OCI/include/oro.h	648;"	d
OCI_TYPECODE_NCHAR	drivers/Oracle/OCI/include/oro.h	682;"	d
OCI_TYPECODE_NCLOB	drivers/Oracle/OCI/include/oro.h	684;"	d
OCI_TYPECODE_NONE	drivers/Oracle/OCI/include/oro.h	688;"	d
OCI_TYPECODE_NUMBER	drivers/Oracle/OCI/include/oro.h	626;"	d
OCI_TYPECODE_NVARCHAR2	drivers/Oracle/OCI/include/oro.h	683;"	d
OCI_TYPECODE_OBJECT	drivers/Oracle/OCI/include/oro.h	646;"	d
OCI_TYPECODE_OCTET	drivers/Oracle/OCI/include/oro.h	633;"	d
OCI_TYPECODE_OPAQUE	drivers/Oracle/OCI/include/oro.h	647;"	d
OCI_TYPECODE_OTMFIRST	drivers/Oracle/OCI/include/oro.h	668;"	d
OCI_TYPECODE_OTMLAST	drivers/Oracle/OCI/include/oro.h	669;"	d
OCI_TYPECODE_PLS_INTEGER	drivers/Oracle/OCI/include/oro.h	672;"	d
OCI_TYPECODE_PTR	drivers/Oracle/OCI/include/oro.h	637;"	d
OCI_TYPECODE_RAW	drivers/Oracle/OCI/include/oro.h	636;"	d
OCI_TYPECODE_REAL	drivers/Oracle/OCI/include/oro.h	621;"	d
OCI_TYPECODE_RECORD	drivers/Oracle/OCI/include/oro.h	676;"	d
OCI_TYPECODE_REF	drivers/Oracle/OCI/include/oro.h	616;"	d
OCI_TYPECODE_SIGNED16	drivers/Oracle/OCI/include/oro.h	619;"	d
OCI_TYPECODE_SIGNED32	drivers/Oracle/OCI/include/oro.h	620;"	d
OCI_TYPECODE_SIGNED8	drivers/Oracle/OCI/include/oro.h	618;"	d
OCI_TYPECODE_SMALLINT	drivers/Oracle/OCI/include/oro.h	634;"	d
OCI_TYPECODE_SYSFIRST	drivers/Oracle/OCI/include/oro.h	670;"	d
OCI_TYPECODE_SYSLAST	drivers/Oracle/OCI/include/oro.h	671;"	d
OCI_TYPECODE_TABLE	drivers/Oracle/OCI/include/oro.h	645;"	d
OCI_TYPECODE_TIME	drivers/Oracle/OCI/include/oro.h	656;"	d
OCI_TYPECODE_TIMESTAMP	drivers/Oracle/OCI/include/oro.h	658;"	d
OCI_TYPECODE_TIMESTAMP_LTZ	drivers/Oracle/OCI/include/oro.h	661;"	d
OCI_TYPECODE_TIMESTAMP_TZ	drivers/Oracle/OCI/include/oro.h	659;"	d
OCI_TYPECODE_TIME_TZ	drivers/Oracle/OCI/include/oro.h	657;"	d
OCI_TYPECODE_UNSIGNED16	drivers/Oracle/OCI/include/oro.h	631;"	d
OCI_TYPECODE_UNSIGNED32	drivers/Oracle/OCI/include/oro.h	632;"	d
OCI_TYPECODE_UNSIGNED8	drivers/Oracle/OCI/include/oro.h	629;"	d
OCI_TYPECODE_UROWID	drivers/Oracle/OCI/include/oro.h	665;"	d
OCI_TYPECODE_VARCHAR	drivers/Oracle/OCI/include/oro.h	641;"	d
OCI_TYPECODE_VARCHAR2	drivers/Oracle/OCI/include/oro.h	638;"	d
OCI_TYPECODE_VARRAY	drivers/Oracle/OCI/include/oro.h	644;"	d
OCI_TYPEELEM_IS_REF	drivers/Oracle/OCI/include/ort.h	2586;"	d
OCI_TYPEELEM_REF	drivers/Oracle/OCI/include/ort.h	2582;"	d
OCI_TYPEENCAP_PRIVATE	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEENCAP_PRIVATE,                \/* private: only internally visible *\/$/;"	e	enum:OCITypeEncap
OCI_TYPEENCAP_PRIVATE	drivers/Oracle/OCI/include/oro.h	238;"	d
OCI_TYPEENCAP_PUBLIC	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEENCAP_PUBLIC \/* public: visible to both internally and externally *\/$/;"	e	enum:OCITypeEncap
OCI_TYPEENCAP_PUBLIC	drivers/Oracle/OCI/include/oro.h	239;"	d
OCI_TYPEGET_ALL	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEGET_ALL       \/* load all attribute and method descriptors as well *\/$/;"	e	enum:OCITypeGetOpt
OCI_TYPEGET_ALL	drivers/Oracle/OCI/include/oro.h	240;"	d
OCI_TYPEGET_HEADER	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEGET_HEADER,$/;"	e	enum:OCITypeGetOpt
OCI_TYPEGET_HEADER	drivers/Oracle/OCI/include/oro.h	241;"	d
OCI_TYPEMETHOD_ABSTRACT	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_ABSTRACT = 0x2000,    \/* abstract (not instantiable) method *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_ABSTRACT	drivers/Oracle/OCI/include/oro.h	255;"	d
OCI_TYPEMETHOD_CLEAR_CONSTANT	drivers/Oracle/OCI/include/oro.h	823;"	d
OCI_TYPEMETHOD_CLEAR_CONSTRUCTOR	drivers/Oracle/OCI/include/oro.h	826;"	d
OCI_TYPEMETHOD_CLEAR_DESTRUCTOR	drivers/Oracle/OCI/include/oro.h	828;"	d
OCI_TYPEMETHOD_CLEAR_INLINE	drivers/Oracle/OCI/include/oro.h	822;"	d
OCI_TYPEMETHOD_CLEAR_MAP	drivers/Oracle/OCI/include/oro.h	833;"	d
OCI_TYPEMETHOD_CLEAR_OPERATOR	drivers/Oracle/OCI/include/oro.h	830;"	d
OCI_TYPEMETHOD_CLEAR_ORDER	drivers/Oracle/OCI/include/oro.h	834;"	d
OCI_TYPEMETHOD_CLEAR_RNDS	drivers/Oracle/OCI/include/oro.h	835;"	d
OCI_TYPEMETHOD_CLEAR_RNPS	drivers/Oracle/OCI/include/oro.h	837;"	d
OCI_TYPEMETHOD_CLEAR_SELFISH	drivers/Oracle/OCI/include/oro.h	832;"	d
OCI_TYPEMETHOD_CLEAR_VIRTUAL	drivers/Oracle/OCI/include/oro.h	825;"	d
OCI_TYPEMETHOD_CLEAR_WNDS	drivers/Oracle/OCI/include/oro.h	836;"	d
OCI_TYPEMETHOD_CLEAR_WNPS	drivers/Oracle/OCI/include/oro.h	838;"	d
OCI_TYPEMETHOD_CONSTANT	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_CONSTANT = 0x0002,                              \/* constant *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_CONSTANT	drivers/Oracle/OCI/include/oro.h	242;"	d
OCI_TYPEMETHOD_CONSTRUCTOR	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_CONSTRUCTOR = 0x0008,                        \/* constructor *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_CONSTRUCTOR	drivers/Oracle/OCI/include/oro.h	243;"	d
OCI_TYPEMETHOD_DESTRUCTOR	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_DESTRUCTOR = 0x0010,                          \/* destructor *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_DESTRUCTOR	drivers/Oracle/OCI/include/oro.h	244;"	d
OCI_TYPEMETHOD_INLINE	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_INLINE = 0x0001,                                  \/* inline *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_INLINE	drivers/Oracle/OCI/include/oro.h	245;"	d
OCI_TYPEMETHOD_IS_ABSTRACT	drivers/Oracle/OCI/include/oro.h	799;"	d
OCI_TYPEMETHOD_IS_CONSTANT	drivers/Oracle/OCI/include/oro.h	785;"	d
OCI_TYPEMETHOD_IS_CONSTRUCTOR	drivers/Oracle/OCI/include/oro.h	787;"	d
OCI_TYPEMETHOD_IS_DESTRUCTOR	drivers/Oracle/OCI/include/oro.h	789;"	d
OCI_TYPEMETHOD_IS_INLINE	drivers/Oracle/OCI/include/oro.h	784;"	d
OCI_TYPEMETHOD_IS_MAP	drivers/Oracle/OCI/include/oro.h	793;"	d
OCI_TYPEMETHOD_IS_OPERATOR	drivers/Oracle/OCI/include/oro.h	791;"	d
OCI_TYPEMETHOD_IS_ORDER	drivers/Oracle/OCI/include/oro.h	794;"	d
OCI_TYPEMETHOD_IS_OVERRIDING	drivers/Oracle/OCI/include/oro.h	800;"	d
OCI_TYPEMETHOD_IS_PIPELINED	drivers/Oracle/OCI/include/oro.h	802;"	d
OCI_TYPEMETHOD_IS_RNDS	drivers/Oracle/OCI/include/oro.h	795;"	d
OCI_TYPEMETHOD_IS_RNPS	drivers/Oracle/OCI/include/oro.h	797;"	d
OCI_TYPEMETHOD_IS_SELFISH	drivers/Oracle/OCI/include/oro.h	792;"	d
OCI_TYPEMETHOD_IS_VIRTUAL	drivers/Oracle/OCI/include/oro.h	786;"	d
OCI_TYPEMETHOD_IS_WNDS	drivers/Oracle/OCI/include/oro.h	796;"	d
OCI_TYPEMETHOD_IS_WNPS	drivers/Oracle/OCI/include/oro.h	798;"	d
OCI_TYPEMETHOD_MAP	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_MAP = 0x0080,                    \/* map (relative ordering) *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_MAP	drivers/Oracle/OCI/include/oro.h	246;"	d
OCI_TYPEMETHOD_OPERATOR	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_OPERATOR  = 0x0020,                             \/* operator *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_OPERATOR	drivers/Oracle/OCI/include/oro.h	247;"	d
OCI_TYPEMETHOD_ORDER	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_ORDER  = 0x0100,               \/* order (relative ordering) *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_ORDER	drivers/Oracle/OCI/include/oro.h	248;"	d
OCI_TYPEMETHOD_OVERRIDING	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_OVERRIDING = 0x4000,                   \/* overriding method *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_OVERRIDING	drivers/Oracle/OCI/include/oro.h	256;"	d
OCI_TYPEMETHOD_PIPELINED	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_PIPELINED = 0x8000                   \/* method is pipelined *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_PIPELINED	drivers/Oracle/OCI/include/oro.h	257;"	d
OCI_TYPEMETHOD_RNDS	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_RNDS= 0x0200,               \/* Read no Data State (default) *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_RNDS	drivers/Oracle/OCI/include/oro.h	249;"	d
OCI_TYPEMETHOD_RNPS	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_RNPS= 0x0800,                      \/* Read no Process State *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_RNPS	drivers/Oracle/OCI/include/oro.h	250;"	d
OCI_TYPEMETHOD_SELFISH	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_SELFISH = 0x0040,     \/* selfish method (generic otherwise) *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_SELFISH	drivers/Oracle/OCI/include/oro.h	251;"	d
OCI_TYPEMETHOD_SET_CONSTANT	drivers/Oracle/OCI/include/oro.h	806;"	d
OCI_TYPEMETHOD_SET_CONSTRUCTOR	drivers/Oracle/OCI/include/oro.h	808;"	d
OCI_TYPEMETHOD_SET_DESTRUCTOR	drivers/Oracle/OCI/include/oro.h	810;"	d
OCI_TYPEMETHOD_SET_INLINE	drivers/Oracle/OCI/include/oro.h	805;"	d
OCI_TYPEMETHOD_SET_MAP	drivers/Oracle/OCI/include/oro.h	814;"	d
OCI_TYPEMETHOD_SET_OPERATOR	drivers/Oracle/OCI/include/oro.h	812;"	d
OCI_TYPEMETHOD_SET_ORDER	drivers/Oracle/OCI/include/oro.h	815;"	d
OCI_TYPEMETHOD_SET_RNDS	drivers/Oracle/OCI/include/oro.h	816;"	d
OCI_TYPEMETHOD_SET_RNPS	drivers/Oracle/OCI/include/oro.h	818;"	d
OCI_TYPEMETHOD_SET_SELFISH	drivers/Oracle/OCI/include/oro.h	813;"	d
OCI_TYPEMETHOD_SET_VIRTUAL	drivers/Oracle/OCI/include/oro.h	807;"	d
OCI_TYPEMETHOD_SET_WNDS	drivers/Oracle/OCI/include/oro.h	817;"	d
OCI_TYPEMETHOD_SET_WNPS	drivers/Oracle/OCI/include/oro.h	819;"	d
OCI_TYPEMETHOD_VIRTUAL	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_VIRTUAL = 0x0004,                                \/* virtual *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_VIRTUAL	drivers/Oracle/OCI/include/oro.h	252;"	d
OCI_TYPEMETHOD_WNDS	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_WNDS= 0x0400,                        \/* Write no Data State *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_WNDS	drivers/Oracle/OCI/include/oro.h	253;"	d
OCI_TYPEMETHOD_WNPS	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEMETHOD_WNPS= 0x1000,                     \/* Write no Process State *\/$/;"	e	enum:OCITypeMethodFlag
OCI_TYPEMETHOD_WNPS	drivers/Oracle/OCI/include/oro.h	254;"	d
OCI_TYPEPARAM_BYREF	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEPARAM_BYREF,              \/* call by reference (implicitly in-out) *\/$/;"	e	enum:OCITypeParamMode
OCI_TYPEPARAM_BYREF	drivers/Oracle/OCI/include/oro.h	258;"	d
OCI_TYPEPARAM_IN	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEPARAM_IN = 0,                                                \/* in *\/$/;"	e	enum:OCITypeParamMode
OCI_TYPEPARAM_IN	drivers/Oracle/OCI/include/oro.h	259;"	d
OCI_TYPEPARAM_INOUT	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEPARAM_INOUT,                                             \/* in-out *\/$/;"	e	enum:OCITypeParamMode
OCI_TYPEPARAM_INOUT	drivers/Oracle/OCI/include/oro.h	260;"	d
OCI_TYPEPARAM_INOUTNCPY	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEPARAM_INOUTNCPY                     \/* IN OUT with NOCOPY modifier *\/$/;"	e	enum:OCITypeParamMode
OCI_TYPEPARAM_INOUTNCPY	drivers/Oracle/OCI/include/oro.h	263;"	d
OCI_TYPEPARAM_IS_REQUIRED	drivers/Oracle/OCI/include/ort.h	2588;"	d
OCI_TYPEPARAM_OUT	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEPARAM_OUT,                                                  \/* out *\/$/;"	e	enum:OCITypeParamMode
OCI_TYPEPARAM_OUT	drivers/Oracle/OCI/include/oro.h	261;"	d
OCI_TYPEPARAM_OUTNCPY	drivers/Oracle/OCI/include/oro.h	/^  OCI_TYPEPARAM_OUTNCPY,                         \/* OUT with NOCOPY modifier *\/$/;"	e	enum:OCITypeParamMode
OCI_TYPEPARAM_OUTNCPY	drivers/Oracle/OCI/include/oro.h	262;"	d
OCI_TYPEPARAM_REQUIRED	drivers/Oracle/OCI/include/ort.h	2583;"	d
OCI_UB1	drivers/Oracle/OCI/include/occiControl.h	/^  enum ociAttrType { OCI_UB1, $/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_UB1PTR_NUMBER	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_UB1PTR_NUMBER,$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_UB1PTR_TIMESTAMP	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_UB1PTR_TIMESTAMP,$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_UB1_BOOL	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_UB1_BOOL,     $/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_UB2	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_UB2, $/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_UB4	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_UB4,$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_UCBTYPE_ENTRY	drivers/Oracle/OCI/include/oci.h	2187;"	d
OCI_UCBTYPE_EXIT	drivers/Oracle/OCI/include/oci.h	2188;"	d
OCI_UCBTYPE_REPLACE	drivers/Oracle/OCI/include/oci.h	2189;"	d
OCI_UCS2ID	drivers/Oracle/OCI/include/oci.h	1127;"	d
OCI_USE_LDAP	drivers/Oracle/OCI/include/oci.h	1264;"	d
OCI_UTF16	drivers/Oracle/OCI/include/oci.h	1266;"	d
OCI_UTF16ID	drivers/Oracle/OCI/include/oci.h	1128;"	d
OCI_V7_SYNTAX	drivers/Oracle/OCI/include/oci.h	1213;"	d
OCI_V8_SYNTAX	drivers/Oracle/OCI/include/oci.h	1214;"	d
OCI_VARRAY_MAXSIZE	drivers/Oracle/OCI/include/oro.h	865;"	d
OCI_WORD	drivers/Oracle/OCI/include/occiControl.h	/^                         OCI_WORD,$/;"	e	enum:oracle::occi::MetaData::ociAttrType
OCI_XADSESSION_ACCESS_PARM_TYPE_BLOB	drivers/Oracle/OCI/include/ocixad.h	199;"	d
OCI_XADSESSION_ACCESS_PARM_TYPE_CLOB	drivers/Oracle/OCI/include/ocixad.h	198;"	d
OCI_XADSESSION_CALLERID_QC	drivers/Oracle/OCI/include/ocixad.h	184;"	d
OCI_XADSESSION_CALLERID_SHADOW	drivers/Oracle/OCI/include/ocixad.h	185;"	d
OCI_XADSESSION_CALLERID_SLAVE	drivers/Oracle/OCI/include/ocixad.h	186;"	d
OCI_XADSESSION_DATAMODE_FIELD	drivers/Oracle/OCI/include/ocixad.h	190;"	d
OCI_XADSESSION_DATAMODE_STREAM	drivers/Oracle/OCI/include/ocixad.h	189;"	d
OCI_XADSESSION_OPCODE_FETCH	drivers/Oracle/OCI/include/ocixad.h	180;"	d
OCI_XADSESSION_OPCODE_POPULATE	drivers/Oracle/OCI/include/ocixad.h	181;"	d
OCI_XADSESSION_SAMPLE_BLOCK	drivers/Oracle/OCI/include/ocixad.h	195;"	d
OCI_XADSESSION_SAMPLE_NONE	drivers/Oracle/OCI/include/ocixad.h	193;"	d
OCI_XADSESSION_SAMPLE_ROW	drivers/Oracle/OCI/include/ocixad.h	194;"	d
OCI_XMLTYPE_CREATE_BLOB	drivers/Oracle/OCI/include/oci.h	2294;"	d
OCI_XMLTYPE_CREATE_CLOB	drivers/Oracle/OCI/include/oci.h	2293;"	d
OCI_XMLTYPE_CREATE_OCISTRING	drivers/Oracle/OCI/include/oci.h	2292;"	d
OCLFAX	drivers/Oracle/OCI/include/ocidef.h	253;"	d
OCLFBI	drivers/Oracle/OCI/include/ocidef.h	229;"	d
OCLFBN	drivers/Oracle/OCI/include/ocidef.h	244;"	d
OCLFBR	drivers/Oracle/OCI/include/ocidef.h	240;"	d
OCLFBX	drivers/Oracle/OCI/include/ocidef.h	241;"	d
OCLFCC	drivers/Oracle/OCI/include/ocidef.h	235;"	d
OCLFCL	drivers/Oracle/OCI/include/ocidef.h	259;"	d
OCLFCO	drivers/Oracle/OCI/include/ocidef.h	256;"	d
OCLFDB	drivers/Oracle/OCI/include/ocidef.h	230;"	d
OCLFDI	drivers/Oracle/OCI/include/ocidef.h	231;"	d
OCLFDS	drivers/Oracle/OCI/include/ocidef.h	237;"	d
OCLFEK	drivers/Oracle/OCI/include/ocidef.h	249;"	d
OCLFEX	drivers/Oracle/OCI/include/ocidef.h	228;"	d
OCLFFE	drivers/Oracle/OCI/include/ocidef.h	232;"	d
OCLFGI	drivers/Oracle/OCI/include/ocidef.h	257;"	d
OCLFIN	drivers/Oracle/OCI/include/ocidef.h	251;"	d
OCLFIS	drivers/Oracle/OCI/include/ocidef.h	255;"	d
OCLFJN	drivers/Oracle/OCI/include/ocidef.h	258;"	d
OCLFLI	drivers/Oracle/OCI/include/ocidef.h	234;"	d
OCLFLK	drivers/Oracle/OCI/include/ocidef.h	248;"	d
OCLFLO	drivers/Oracle/OCI/include/ocidef.h	236;"	d
OCLFMC	drivers/Oracle/OCI/include/ocidef.h	260;"	d
OCLFMX	drivers/Oracle/OCI/include/ocidef.h	245;"	d
OCLFOC	drivers/Oracle/OCI/include/ocidef.h	233;"	d
OCLFOF	drivers/Oracle/OCI/include/ocidef.h	252;"	d
OCLFOK	drivers/Oracle/OCI/include/ocidef.h	250;"	d
OCLFON	drivers/Oracle/OCI/include/ocidef.h	238;"	d
OCLFP3	drivers/Oracle/OCI/include/ocidef.h	239;"	d
OCLFPA	drivers/Oracle/OCI/include/ocidef.h	227;"	d
OCLFPI	drivers/Oracle/OCI/include/ocidef.h	254;"	d
OCLFRE	drivers/Oracle/OCI/include/ocidef.h	243;"	d
OCLFSO	drivers/Oracle/OCI/include/ocidef.h	242;"	d
OCLFUC	drivers/Oracle/OCI/include/ocidef.h	261;"	d
ODCIArgDesc	drivers/Oracle/OCI/include/odci.h	/^struct ODCIArgDesc$/;"	s
ODCIArgDesc	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIArgDesc ODCIArgDesc;$/;"	t	typeref:struct:ODCIArgDesc
ODCIArgDesc	drivers/Oracle/OCI/include/odci.h	131;"	d
ODCIArgDescList	drivers/Oracle/OCI/include/odci.h	/^typedef OCIArray ODCIArgDescList;$/;"	t
ODCIArgDescList	drivers/Oracle/OCI/include/odci.h	113;"	d
ODCIArgDesc_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIArgDesc_ind$/;"	s
ODCIArgDesc_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIArgDesc_ind ODCIArgDesc_ind;$/;"	t	typeref:struct:ODCIArgDesc_ind
ODCIArgDesc_ind	drivers/Oracle/OCI/include/odci.h	132;"	d
ODCIArgDesc_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIArgDesc_ref;$/;"	t
ODCIArgDesc_ref	drivers/Oracle/OCI/include/odci.h	112;"	d
ODCIColInfo	drivers/Oracle/OCI/include/odci.h	/^struct ODCIColInfo$/;"	s
ODCIColInfo	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIColInfo ODCIColInfo;$/;"	t	typeref:struct:ODCIColInfo
ODCIColInfo	drivers/Oracle/OCI/include/odci.h	115;"	d
ODCIColInfoList	drivers/Oracle/OCI/include/odci.h	/^typedef OCIArray ODCIColInfoList;$/;"	t
ODCIColInfoList	drivers/Oracle/OCI/include/odci.h	101;"	d
ODCIColInfoList2	drivers/Oracle/OCI/include/odci.h	/^typedef OCIArray ODCIColInfoList2;$/;"	t
ODCIColInfoList2	drivers/Oracle/OCI/include/odci.h	102;"	d
ODCIColInfo_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIColInfo_ind$/;"	s
ODCIColInfo_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIColInfo_ind ODCIColInfo_ind;$/;"	t	typeref:struct:ODCIColInfo_ind
ODCIColInfo_ind	drivers/Oracle/OCI/include/odci.h	116;"	d
ODCIColInfo_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIColInfo_ref;$/;"	t
ODCIColInfo_ref	drivers/Oracle/OCI/include/odci.h	100;"	d
ODCICost	drivers/Oracle/OCI/include/odci.h	/^struct ODCICost$/;"	s
ODCICost	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCICost ODCICost;$/;"	t	typeref:struct:ODCICost
ODCICost	drivers/Oracle/OCI/include/odci.h	129;"	d
ODCICost_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCICost_ind$/;"	s
ODCICost_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCICost_ind ODCICost_ind;$/;"	t	typeref:struct:ODCICost_ind
ODCICost_ind	drivers/Oracle/OCI/include/odci.h	130;"	d
ODCICost_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCICost_ref;$/;"	t
ODCICost_ref	drivers/Oracle/OCI/include/odci.h	111;"	d
ODCIEnv	drivers/Oracle/OCI/include/odci.h	/^struct ODCIEnv$/;"	s
ODCIEnv	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIEnv ODCIEnv;$/;"	t	typeref:struct:ODCIEnv
ODCIEnv_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIEnv_ind$/;"	s
ODCIEnv_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIEnv_ind ODCIEnv_ind;$/;"	t	typeref:struct:ODCIEnv_ind
ODCIEnv_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIEnv_ref;$/;"	t
ODCIExtTableInfo	drivers/Oracle/OCI/include/odci.h	/^struct ODCIExtTableInfo$/;"	s
ODCIExtTableInfo	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIExtTableInfo ODCIExtTableInfo;$/;"	t	typeref:struct:ODCIExtTableInfo
ODCIExtTableInfo	drivers/Oracle/OCI/include/odci.h	138;"	d
ODCIExtTableInfo_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIExtTableInfo_ind$/;"	s
ODCIExtTableInfo_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIExtTableInfo_ind ODCIExtTableInfo_ind;$/;"	t	typeref:struct:ODCIExtTableInfo_ind
ODCIExtTableInfo_ind	drivers/Oracle/OCI/include/odci.h	139;"	d
ODCIExtTableInfo_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIExtTableInfo_ref;             \/* external table support *\/$/;"	t
ODCIExtTableInfo_ref	drivers/Oracle/OCI/include/odci.h	140;"	d
ODCIExtTableQCInfo	drivers/Oracle/OCI/include/odci.h	/^struct ODCIExtTableQCInfo$/;"	s
ODCIExtTableQCInfo	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIExtTableQCInfo ODCIExtTableQCInfo;$/;"	t	typeref:struct:ODCIExtTableQCInfo
ODCIExtTableQCInfo	drivers/Oracle/OCI/include/odci.h	141;"	d
ODCIExtTableQCInfo_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIExtTableQCInfo_ind$/;"	s
ODCIExtTableQCInfo_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIExtTableQCInfo_ind ODCIExtTableQCInfo_ind;$/;"	t	typeref:struct:ODCIExtTableQCInfo_ind
ODCIExtTableQCInfo_ind	drivers/Oracle/OCI/include/odci.h	142;"	d
ODCIExtTableQCInfo_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIExtTableQCInfo_ref;           \/* external table support *\/$/;"	t
ODCIExtTableQCInfo_ref	drivers/Oracle/OCI/include/odci.h	143;"	d
ODCIFuncCallInfo	drivers/Oracle/OCI/include/odci.h	/^struct ODCIFuncCallInfo$/;"	s
ODCIFuncCallInfo	drivers/Oracle/OCI/include/odci.h	144;"	d
ODCIFuncCallInfo_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIFuncCallInfo_ind$/;"	s
ODCIFuncCallInfo_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIFuncCallInfo_ref;$/;"	t
ODCIFuncCall_ind	drivers/Oracle/OCI/include/odci.h	145;"	d
ODCIFuncCall_ref	drivers/Oracle/OCI/include/odci.h	146;"	d
ODCIFuncInfo	drivers/Oracle/OCI/include/odci.h	/^struct ODCIFuncInfo$/;"	s
ODCIFuncInfo	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIFuncInfo ODCIFuncInfo;$/;"	t	typeref:struct:ODCIFuncInfo
ODCIFuncInfo	drivers/Oracle/OCI/include/odci.h	127;"	d
ODCIFuncInfo_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIFuncInfo_ind$/;"	s
ODCIFuncInfo_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIFuncInfo_ind ODCIFuncInfo_ind;$/;"	t	typeref:struct:ODCIFuncInfo_ind
ODCIFuncInfo_infd	drivers/Oracle/OCI/include/odci.h	128;"	d
ODCIFuncInfo_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIFuncInfo_ref;$/;"	t
ODCIFuncInfo_ref	drivers/Oracle/OCI/include/odci.h	110;"	d
ODCIGranuleList	drivers/Oracle/OCI/include/odci.h	/^typedef OCIArray ODCIGranuleList;                  \/* external table support *\/$/;"	t
ODCIIndexCtx	drivers/Oracle/OCI/include/odci.h	/^struct ODCIIndexCtx$/;"	s
ODCIIndexCtx	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIIndexCtx ODCIIndexCtx;$/;"	t	typeref:struct:ODCIIndexCtx
ODCIIndexCtx	drivers/Oracle/OCI/include/odci.h	121;"	d
ODCIIndexCtx_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIIndexCtx_ind$/;"	s
ODCIIndexCtx_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIIndexCtx_ind ODCIIndexCtx_ind;$/;"	t	typeref:struct:ODCIIndexCtx_ind
ODCIIndexCtx_ind	drivers/Oracle/OCI/include/odci.h	122;"	d
ODCIIndexCtx_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIIndexCtx_ref;$/;"	t
ODCIIndexCtx_ref	drivers/Oracle/OCI/include/odci.h	106;"	d
ODCIIndexInfo	drivers/Oracle/OCI/include/odci.h	/^struct ODCIIndexInfo$/;"	s
ODCIIndexInfo	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIIndexInfo ODCIIndexInfo;$/;"	t	typeref:struct:ODCIIndexInfo
ODCIIndexInfo	drivers/Oracle/OCI/include/odci.h	117;"	d
ODCIIndexInfo_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIIndexInfo_ind$/;"	s
ODCIIndexInfo_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIIndexInfo_ind ODCIIndexInfo_ind;$/;"	t	typeref:struct:ODCIIndexInfo_ind
ODCIIndexInfo_ind	drivers/Oracle/OCI/include/odci.h	118;"	d
ODCIIndexInfo_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIIndexInfo_ref;$/;"	t
ODCIIndexInfo_ref	drivers/Oracle/OCI/include/odci.h	103;"	d
ODCINumberList	drivers/Oracle/OCI/include/odci.h	/^typedef OCIArray ODCINumberList;$/;"	t
ODCIObject	drivers/Oracle/OCI/include/odci.h	/^struct ODCIObject$/;"	s
ODCIObject	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIObject ODCIObject;$/;"	t	typeref:struct:ODCIObject
ODCIObject	drivers/Oracle/OCI/include/odci.h	123;"	d
ODCIObjectList	drivers/Oracle/OCI/include/odci.h	/^typedef OCIArray ODCIObjectList;$/;"	t
ODCIObjectList	drivers/Oracle/OCI/include/odci.h	108;"	d
ODCIObject_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIObject_ind$/;"	s
ODCIObject_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIObject_ind ODCIObject_ind;$/;"	t	typeref:struct:ODCIObject_ind
ODCIObject_ind	drivers/Oracle/OCI/include/odci.h	124;"	d
ODCIObject_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIObject_ref;$/;"	t
ODCIObject_ref	drivers/Oracle/OCI/include/odci.h	107;"	d
ODCIPartInfo	drivers/Oracle/OCI/include/odci.h	/^struct ODCIPartInfo$/;"	s
ODCIPartInfo	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIPartInfo ODCIPartInfo;$/;"	t	typeref:struct:ODCIPartInfo
ODCIPartInfo	drivers/Oracle/OCI/include/odci.h	135;"	d
ODCIPartInfo_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIPartInfo_ind$/;"	s
ODCIPartInfo_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIPartInfo_ind ODCIPartInfo_ind;$/;"	t	typeref:struct:ODCIPartInfo_ind
ODCIPartInfo_ind	drivers/Oracle/OCI/include/odci.h	136;"	d
ODCIPartInfo_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef ODCIPartInfo_ref;$/;"	t
ODCIPartInfo_ref	drivers/Oracle/OCI/include/odci.h	137;"	d
ODCIPredInfo	drivers/Oracle/OCI/include/odci.h	/^struct ODCIPredInfo$/;"	s
ODCIPredInfo	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIPredInfo ODCIPredInfo;$/;"	t	typeref:struct:ODCIPredInfo
ODCIPredInfo	drivers/Oracle/OCI/include/odci.h	119;"	d
ODCIPredInfo_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIPredInfo_ind$/;"	s
ODCIPredInfo_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIPredInfo_ind ODCIPredInfo_ind;$/;"	t	typeref:struct:ODCIPredInfo_ind
ODCIPredInfo_ind	drivers/Oracle/OCI/include/odci.h	120;"	d
ODCIPredInfo_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIPredInfo_ref;$/;"	t
ODCIPredInfo_ref	drivers/Oracle/OCI/include/odci.h	104;"	d
ODCIQueryInfo	drivers/Oracle/OCI/include/odci.h	/^struct ODCIQueryInfo$/;"	s
ODCIQueryInfo	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIQueryInfo ODCIQueryInfo;$/;"	t	typeref:struct:ODCIQueryInfo
ODCIQueryInfo	drivers/Oracle/OCI/include/odci.h	125;"	d
ODCIQueryInfo_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIQueryInfo_ind$/;"	s
ODCIQueryInfo_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIQueryInfo_ind ODCIQueryInfo_ind;$/;"	t	typeref:struct:ODCIQueryInfo_ind
ODCIQueryInfo_ind	drivers/Oracle/OCI/include/odci.h	126;"	d
ODCIQueryInfo_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIQueryInfo_ref;$/;"	t
ODCIQueryInfo_ref	drivers/Oracle/OCI/include/odci.h	109;"	d
ODCIRidList	drivers/Oracle/OCI/include/odci.h	/^typedef OCIArray ODCIRidList;$/;"	t
ODCIRidList	drivers/Oracle/OCI/include/odci.h	105;"	d
ODCIStatsOptions	drivers/Oracle/OCI/include/odci.h	/^struct ODCIStatsOptions$/;"	s
ODCIStatsOptions	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIStatsOptions ODCIStatsOptions;$/;"	t	typeref:struct:ODCIStatsOptions
ODCIStatsOptions	drivers/Oracle/OCI/include/odci.h	133;"	d
ODCIStatsOptions_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCIStatsOptions_ind$/;"	s
ODCIStatsOptions_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCIStatsOptions_ind ODCIStatsOptions_ind;$/;"	t	typeref:struct:ODCIStatsOptions_ind
ODCIStatsOptions_ind	drivers/Oracle/OCI/include/odci.h	134;"	d
ODCIStatsOptions_ref	drivers/Oracle/OCI/include/odci.h	/^typedef OCIRef   ODCIStatsOptions_ref;$/;"	t
ODCIStatsOptions_ref	drivers/Oracle/OCI/include/odci.h	114;"	d
ODCITabFuncInfo	drivers/Oracle/OCI/include/odci.h	/^struct ODCITabFuncInfo$/;"	s
ODCITabFuncInfo	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCITabFuncInfo ODCITabFuncInfo;$/;"	t	typeref:struct:ODCITabFuncInfo
ODCITabFuncInfo_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCITabFuncInfo_ind$/;"	s
ODCITabFuncInfo_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCITabFuncInfo_ind ODCITabFuncInfo_ind;$/;"	t	typeref:struct:ODCITabFuncInfo_ind
ODCITabFuncStats	drivers/Oracle/OCI/include/odci.h	/^struct ODCITabFuncStats$/;"	s
ODCITabFuncStats	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCITabFuncStats ODCITabFuncStats;$/;"	t	typeref:struct:ODCITabFuncStats
ODCITabFuncStats_ind	drivers/Oracle/OCI/include/odci.h	/^struct ODCITabFuncStats_ind$/;"	s
ODCITabFuncStats_ind	drivers/Oracle/OCI/include/odci.h	/^typedef struct ODCITabFuncStats_ind ODCITabFuncStats_ind;$/;"	t	typeref:struct:ODCITabFuncStats_ind
ODCI_AGGREGATE_REUSE_CTX	drivers/Oracle/OCI/include/odci.h	264;"	d
ODCI_ALTIDX_MODIFY_COL	drivers/Oracle/OCI/include/odci.h	212;"	d
ODCI_ALTIDX_NONE	drivers/Oracle/OCI/include/odci.h	208;"	d
ODCI_ALTIDX_REBUILD	drivers/Oracle/OCI/include/odci.h	210;"	d
ODCI_ALTIDX_REBUILD_ONL	drivers/Oracle/OCI/include/odci.h	211;"	d
ODCI_ALTIDX_RENAME	drivers/Oracle/OCI/include/odci.h	209;"	d
ODCI_ALTIDX_UPDATE_BLOCK_REFS	drivers/Oracle/OCI/include/odci.h	213;"	d
ODCI_ARG_ATTR	drivers/Oracle/OCI/include/odci.h	191;"	d
ODCI_ARG_COL	drivers/Oracle/OCI/include/odci.h	189;"	d
ODCI_ARG_CURSOR	drivers/Oracle/OCI/include/odci.h	193;"	d
ODCI_ARG_DESC_LIST_MAXSIZE	drivers/Oracle/OCI/include/odci.h	196;"	d
ODCI_ARG_LIT	drivers/Oracle/OCI/include/odci.h	190;"	d
ODCI_ARG_NULL	drivers/Oracle/OCI/include/odci.h	192;"	d
ODCI_ARG_OTHER	drivers/Oracle/OCI/include/odci.h	188;"	d
ODCI_CALL_FINAL	drivers/Oracle/OCI/include/odci.h	236;"	d
ODCI_CALL_FIRST	drivers/Oracle/OCI/include/odci.h	234;"	d
ODCI_CALL_INTERMEDIATE	drivers/Oracle/OCI/include/odci.h	235;"	d
ODCI_CALL_NONE	drivers/Oracle/OCI/include/odci.h	233;"	d
ODCI_CLEANUP_CALL	drivers/Oracle/OCI/include/odci.h	179;"	d
ODCI_COMPUTE_STATS	drivers/Oracle/OCI/include/odci.h	204;"	d
ODCI_DEBUGGING_ON	drivers/Oracle/OCI/include/odci.h	230;"	d
ODCI_ERROR	drivers/Oracle/OCI/include/odci.h	156;"	d
ODCI_ERROR_CONTINUE	drivers/Oracle/OCI/include/odci.h	158;"	d
ODCI_ESTIMATE_STATS	drivers/Oracle/OCI/include/odci.h	203;"	d
ODCI_EXTTABLE_FETCH_FLAGS_EOS	drivers/Oracle/OCI/include/odci.h	261;"	d
ODCI_EXTTABLE_INFO_FLAG_ACCESS_PARM_BLOB	drivers/Oracle/OCI/include/odci.h	248;"	d
ODCI_EXTTABLE_INFO_FLAG_ACCESS_PARM_CLOB	drivers/Oracle/OCI/include/odci.h	247;"	d
ODCI_EXTTABLE_INFO_FLAG_SAMPLE	drivers/Oracle/OCI/include/odci.h	244;"	d
ODCI_EXTTABLE_INFO_FLAG_SAMPLE_BLOCK	drivers/Oracle/OCI/include/odci.h	245;"	d
ODCI_EXTTABLE_INFO_OPCODE_FETCH	drivers/Oracle/OCI/include/odci.h	239;"	d
ODCI_EXTTABLE_INFO_OPCODE_POPULATE	drivers/Oracle/OCI/include/odci.h	240;"	d
ODCI_EXTTABLE_OPEN_FLAGS_QC	drivers/Oracle/OCI/include/odci.h	257;"	d
ODCI_EXTTABLE_OPEN_FLAGS_SHADOW	drivers/Oracle/OCI/include/odci.h	258;"	d
ODCI_EXTTABLE_OPEN_FLAGS_SLAVE	drivers/Oracle/OCI/include/odci.h	259;"	d
ODCI_FALSE	drivers/Oracle/OCI/include/odci.h	252;"	d
ODCI_FATAL	drivers/Oracle/OCI/include/odci.h	159;"	d
ODCI_INDEX_DEFAULT_DEGREE	drivers/Oracle/OCI/include/odci.h	227;"	d
ODCI_INDEX_FUNCTION_IDX	drivers/Oracle/OCI/include/odci.h	224;"	d
ODCI_INDEX_HASH_PARTN	drivers/Oracle/OCI/include/odci.h	218;"	d
ODCI_INDEX_LOCAL	drivers/Oracle/OCI/include/odci.h	216;"	d
ODCI_INDEX_ONIOT	drivers/Oracle/OCI/include/odci.h	222;"	d
ODCI_INDEX_ONLINE	drivers/Oracle/OCI/include/odci.h	219;"	d
ODCI_INDEX_PARALLEL	drivers/Oracle/OCI/include/odci.h	220;"	d
ODCI_INDEX_RANGE_PARTN	drivers/Oracle/OCI/include/odci.h	217;"	d
ODCI_INDEX_TRANS_TBLSPC	drivers/Oracle/OCI/include/odci.h	223;"	d
ODCI_INDEX_UNUSABLE	drivers/Oracle/OCI/include/odci.h	221;"	d
ODCI_OBJECT_FUNC	drivers/Oracle/OCI/include/odci.h	183;"	d
ODCI_OBJECT_PKG	drivers/Oracle/OCI/include/odci.h	184;"	d
ODCI_OBJECT_TYPE	drivers/Oracle/OCI/include/odci.h	185;"	d
ODCI_ORACLE	drivers/Oracle/OCI/include/odci.h	86;"	d
ODCI_PERCENT_OPTION	drivers/Oracle/OCI/include/odci.h	199;"	d
ODCI_PRED_EXACT_MATCH	drivers/Oracle/OCI/include/odci.h	162;"	d
ODCI_PRED_INCLUDE_START	drivers/Oracle/OCI/include/odci.h	164;"	d
ODCI_PRED_INCLUDE_STOP	drivers/Oracle/OCI/include/odci.h	165;"	d
ODCI_PRED_MULTI_TABLE	drivers/Oracle/OCI/include/odci.h	169;"	d
ODCI_PRED_OBJECT_FUNC	drivers/Oracle/OCI/include/odci.h	166;"	d
ODCI_PRED_OBJECT_PKG	drivers/Oracle/OCI/include/odci.h	167;"	d
ODCI_PRED_OBJECT_TYPE	drivers/Oracle/OCI/include/odci.h	168;"	d
ODCI_PRED_PREFIX_MATCH	drivers/Oracle/OCI/include/odci.h	163;"	d
ODCI_QUERY_ALL_ROWS	drivers/Oracle/OCI/include/odci.h	173;"	d
ODCI_QUERY_BLOCKING	drivers/Oracle/OCI/include/odci.h	176;"	d
ODCI_QUERY_FIRST_ROWS	drivers/Oracle/OCI/include/odci.h	172;"	d
ODCI_QUERY_SORT_ASC	drivers/Oracle/OCI/include/odci.h	174;"	d
ODCI_QUERY_SORT_DESC	drivers/Oracle/OCI/include/odci.h	175;"	d
ODCI_REGULAR_CALL	drivers/Oracle/OCI/include/odci.h	180;"	d
ODCI_ROW_OPTION	drivers/Oracle/OCI/include/odci.h	200;"	d
ODCI_SUCCESS	drivers/Oracle/OCI/include/odci.h	155;"	d
ODCI_TRUE	drivers/Oracle/OCI/include/odci.h	251;"	d
ODCI_VALIDATE	drivers/Oracle/OCI/include/odci.h	205;"	d
ODCI_WARNING	drivers/Oracle/OCI/include/odci.h	157;"	d
OE_Abort	drivers/SQLite/sqlite3/sqlite3.c	10081;"	d	file:
OE_Cascade	drivers/SQLite/sqlite3/sqlite3.c	10089;"	d	file:
OE_Default	drivers/SQLite/sqlite3/sqlite3.c	10091;"	d	file:
OE_Fail	drivers/SQLite/sqlite3/sqlite3.c	10082;"	d	file:
OE_Ignore	drivers/SQLite/sqlite3/sqlite3.c	10083;"	d	file:
OE_None	drivers/SQLite/sqlite3/sqlite3.c	10079;"	d	file:
OE_Replace	drivers/SQLite/sqlite3/sqlite3.c	10084;"	d	file:
OE_Restrict	drivers/SQLite/sqlite3/sqlite3.c	10086;"	d	file:
OE_Rollback	drivers/SQLite/sqlite3/sqlite3.c	10080;"	d	file:
OE_SetDflt	drivers/SQLite/sqlite3/sqlite3.c	10088;"	d	file:
OE_SetNull	drivers/SQLite/sqlite3/sqlite3.c	10087;"	d	file:
OMIT_TEMPDB	drivers/SQLite/sqlite3/sqlite3.c	7635;"	d	file:
OMIT_TEMPDB	drivers/SQLite/sqlite3/sqlite3.c	7637;"	d	file:
ONBOXVERTEX	kernel/TeTin.h	/^{ DELETEDVERTEX = -1, NORMALVERTEX = 0, ONCONTOURVERTEX = 1, ONBOXVERTEX = 2, ONBREAKLINEVERTEX = 3,$/;"	e	enum:TeTinVertexType
ONBREAKLINEEDGE	kernel/TeTin.h	/^{ DELETEDEDGE = -1, NORMALEDGE = 0, ONCONTOUREDGE = 1, ONBREAKLINEEDGE = 2 };$/;"	e	enum:TeTinEdgeType
ONBREAKLINEVERTEX	kernel/TeTin.h	/^{ DELETEDVERTEX = -1, NORMALVERTEX = 0, ONCONTOURVERTEX = 1, ONBOXVERTEX = 2, ONBREAKLINEVERTEX = 3,$/;"	e	enum:TeTinVertexType
ONCONTOUREDGE	kernel/TeTin.h	/^{ DELETEDEDGE = -1, NORMALEDGE = 0, ONCONTOUREDGE = 1, ONBREAKLINEEDGE = 2 };$/;"	e	enum:TeTinEdgeType
ONCONTOURVERTEX	kernel/TeTin.h	/^{ DELETEDVERTEX = -1, NORMALVERTEX = 0, ONCONTOURVERTEX = 1, ONBOXVERTEX = 2, ONBREAKLINEVERTEX = 3,$/;"	e	enum:TeTinVertexType
OPENSTEP	drivers/GL/gl.h	46;"	d
OPFLAG_APPEND	drivers/SQLite/sqlite3/sqlite3.c	10991;"	d	file:
OPFLAG_CLEARCACHE	drivers/SQLite/sqlite3/sqlite3.c	10993;"	d	file:
OPFLAG_ISUPDATE	drivers/SQLite/sqlite3/sqlite3.c	10990;"	d	file:
OPFLAG_LASTROWID	drivers/SQLite/sqlite3/sqlite3.c	10989;"	d	file:
OPFLAG_NCHANGE	drivers/SQLite/sqlite3/sqlite3.c	10988;"	d	file:
OPFLAG_USESEEKRESULT	drivers/SQLite/sqlite3/sqlite3.c	10992;"	d	file:
OPFLG_IN1	drivers/SQLite/sqlite3/sqlite3.c	8528;"	d	file:
OPFLG_IN2	drivers/SQLite/sqlite3/sqlite3.c	8529;"	d	file:
OPFLG_IN3	drivers/SQLite/sqlite3/sqlite3.c	8530;"	d	file:
OPFLG_INITIALIZER	drivers/SQLite/sqlite3/sqlite3.c	8533;"	d	file:
OPFLG_JUMP	drivers/SQLite/sqlite3/sqlite3.c	8526;"	d	file:
OPFLG_OUT2	drivers/SQLite/sqlite3/sqlite3.c	8531;"	d	file:
OPFLG_OUT2_PRERELEASE	drivers/SQLite/sqlite3/sqlite3.c	8527;"	d	file:
OPFLG_OUT3	drivers/SQLite/sqlite3/sqlite3.c	8532;"	d	file:
OP_Add	drivers/SQLite/sqlite3/sqlite3.c	8389;"	d	file:
OP_AddImm	drivers/SQLite/sqlite3/sqlite3.c	8400;"	d	file:
OP_Affinity	drivers/SQLite/sqlite3/sqlite3.c	8427;"	d	file:
OP_AggFinal	drivers/SQLite/sqlite3/sqlite3.c	8499;"	d	file:
OP_AggStep	drivers/SQLite/sqlite3/sqlite3.c	8498;"	d	file:
OP_And	drivers/SQLite/sqlite3/sqlite3.c	8417;"	d	file:
OP_AutoCommit	drivers/SQLite/sqlite3/sqlite3.c	8431;"	d	file:
OP_BitAnd	drivers/SQLite/sqlite3/sqlite3.c	8396;"	d	file:
OP_BitNot	drivers/SQLite/sqlite3/sqlite3.c	8420;"	d	file:
OP_BitOr	drivers/SQLite/sqlite3/sqlite3.c	8397;"	d	file:
OP_Blob	drivers/SQLite/sqlite3/sqlite3.c	8382;"	d	file:
OP_Checkpoint	drivers/SQLite/sqlite3/sqlite3.c	8500;"	d	file:
OP_Clear	drivers/SQLite/sqlite3/sqlite3.c	8478;"	d	file:
OP_Close	drivers/SQLite/sqlite3/sqlite3.c	8442;"	d	file:
OP_CollSeq	drivers/SQLite/sqlite3/sqlite3.c	8394;"	d	file:
OP_Column	drivers/SQLite/sqlite3/sqlite3.c	8426;"	d	file:
OP_Compare	drivers/SQLite/sqlite3/sqlite3.c	8415;"	d	file:
OP_Concat	drivers/SQLite/sqlite3/sqlite3.c	8388;"	d	file:
OP_Copy	drivers/SQLite/sqlite3/sqlite3.c	8385;"	d	file:
OP_Count	drivers/SQLite/sqlite3/sqlite3.c	8429;"	d	file:
OP_CreateIndex	drivers/SQLite/sqlite3/sqlite3.c	8479;"	d	file:
OP_CreateTable	drivers/SQLite/sqlite3/sqlite3.c	8480;"	d	file:
OP_Delete	drivers/SQLite/sqlite3/sqlite3.c	8456;"	d	file:
OP_Destroy	drivers/SQLite/sqlite3/sqlite3.c	8477;"	d	file:
OP_Divide	drivers/SQLite/sqlite3/sqlite3.c	8392;"	d	file:
OP_DropIndex	drivers/SQLite/sqlite3/sqlite3.c	8484;"	d	file:
OP_DropTable	drivers/SQLite/sqlite3/sqlite3.c	8483;"	d	file:
OP_DropTrigger	drivers/SQLite/sqlite3/sqlite3.c	8485;"	d	file:
OP_Eq	drivers/SQLite/sqlite3/sqlite3.c	8408;"	d	file:
OP_Expire	drivers/SQLite/sqlite3/sqlite3.c	8504;"	d	file:
OP_Explain	drivers/SQLite/sqlite3/sqlite3.c	8519;"	d	file:
OP_FkCounter	drivers/SQLite/sqlite3/sqlite3.c	8492;"	d	file:
OP_FkIfZero	drivers/SQLite/sqlite3/sqlite3.c	8493;"	d	file:
OP_Found	drivers/SQLite/sqlite3/sqlite3.c	8449;"	d	file:
OP_Function	drivers/SQLite/sqlite3/sqlite3.c	8395;"	d	file:
OP_Ge	drivers/SQLite/sqlite3/sqlite3.c	8413;"	d	file:
OP_Gosub	drivers/SQLite/sqlite3/sqlite3.c	8371;"	d	file:
OP_Goto	drivers/SQLite/sqlite3/sqlite3.c	8370;"	d	file:
OP_Gt	drivers/SQLite/sqlite3/sqlite3.c	8412;"	d	file:
OP_Halt	drivers/SQLite/sqlite3/sqlite3.c	8375;"	d	file:
OP_HaltIfNull	drivers/SQLite/sqlite3/sqlite3.c	8374;"	d	file:
OP_IdxDelete	drivers/SQLite/sqlite3/sqlite3.c	8473;"	d	file:
OP_IdxGE	drivers/SQLite/sqlite3/sqlite3.c	8476;"	d	file:
OP_IdxInsert	drivers/SQLite/sqlite3/sqlite3.c	8472;"	d	file:
OP_IdxLT	drivers/SQLite/sqlite3/sqlite3.c	8475;"	d	file:
OP_IdxRowid	drivers/SQLite/sqlite3/sqlite3.c	8474;"	d	file:
OP_If	drivers/SQLite/sqlite3/sqlite3.c	8422;"	d	file:
OP_IfNeg	drivers/SQLite/sqlite3/sqlite3.c	8496;"	d	file:
OP_IfNot	drivers/SQLite/sqlite3/sqlite3.c	8423;"	d	file:
OP_IfPos	drivers/SQLite/sqlite3/sqlite3.c	8495;"	d	file:
OP_IfZero	drivers/SQLite/sqlite3/sqlite3.c	8497;"	d	file:
OP_IncrVacuum	drivers/SQLite/sqlite3/sqlite3.c	8503;"	d	file:
OP_Insert	drivers/SQLite/sqlite3/sqlite3.c	8454;"	d	file:
OP_InsertInt	drivers/SQLite/sqlite3/sqlite3.c	8455;"	d	file:
OP_Int64	drivers/SQLite/sqlite3/sqlite3.c	8377;"	d	file:
OP_Integer	drivers/SQLite/sqlite3/sqlite3.c	8376;"	d	file:
OP_IntegrityCk	drivers/SQLite/sqlite3/sqlite3.c	8486;"	d	file:
OP_IsNull	drivers/SQLite/sqlite3/sqlite3.c	8424;"	d	file:
OP_IsUnique	drivers/SQLite/sqlite3/sqlite3.c	8450;"	d	file:
OP_JournalMode	drivers/SQLite/sqlite3/sqlite3.c	8501;"	d	file:
OP_Jump	drivers/SQLite/sqlite3/sqlite3.c	8416;"	d	file:
OP_Last	drivers/SQLite/sqlite3/sqlite3.c	8464;"	d	file:
OP_Le	drivers/SQLite/sqlite3/sqlite3.c	8411;"	d	file:
OP_LoadAnalysis	drivers/SQLite/sqlite3/sqlite3.c	8482;"	d	file:
OP_Lt	drivers/SQLite/sqlite3/sqlite3.c	8410;"	d	file:
OP_MakeRecord	drivers/SQLite/sqlite3/sqlite3.c	8428;"	d	file:
OP_MaxPgcnt	drivers/SQLite/sqlite3/sqlite3.c	8516;"	d	file:
OP_MemMax	drivers/SQLite/sqlite3/sqlite3.c	8494;"	d	file:
OP_Move	drivers/SQLite/sqlite3/sqlite3.c	8384;"	d	file:
OP_Multiply	drivers/SQLite/sqlite3/sqlite3.c	8391;"	d	file:
OP_MustBeInt	drivers/SQLite/sqlite3/sqlite3.c	8401;"	d	file:
OP_Ne	drivers/SQLite/sqlite3/sqlite3.c	8409;"	d	file:
OP_NewRowid	drivers/SQLite/sqlite3/sqlite3.c	8453;"	d	file:
OP_Next	drivers/SQLite/sqlite3/sqlite3.c	8470;"	d	file:
OP_Noop	drivers/SQLite/sqlite3/sqlite3.c	8518;"	d	file:
OP_Not	drivers/SQLite/sqlite3/sqlite3.c	8419;"	d	file:
OP_NotExists	drivers/SQLite/sqlite3/sqlite3.c	8451;"	d	file:
OP_NotFound	drivers/SQLite/sqlite3/sqlite3.c	8448;"	d	file:
OP_NotNull	drivers/SQLite/sqlite3/sqlite3.c	8425;"	d	file:
OP_Null	drivers/SQLite/sqlite3/sqlite3.c	8381;"	d	file:
OP_NullRow	drivers/SQLite/sqlite3/sqlite3.c	8463;"	d	file:
OP_Once	drivers/SQLite/sqlite3/sqlite3.c	8421;"	d	file:
OP_OpenAutoindex	drivers/SQLite/sqlite3/sqlite3.c	8438;"	d	file:
OP_OpenEphemeral	drivers/SQLite/sqlite3/sqlite3.c	8439;"	d	file:
OP_OpenPseudo	drivers/SQLite/sqlite3/sqlite3.c	8441;"	d	file:
OP_OpenRead	drivers/SQLite/sqlite3/sqlite3.c	8436;"	d	file:
OP_OpenWrite	drivers/SQLite/sqlite3/sqlite3.c	8437;"	d	file:
OP_Or	drivers/SQLite/sqlite3/sqlite3.c	8418;"	d	file:
OP_Pagecount	drivers/SQLite/sqlite3/sqlite3.c	8515;"	d	file:
OP_Param	drivers/SQLite/sqlite3/sqlite3.c	8491;"	d	file:
OP_ParseSchema	drivers/SQLite/sqlite3/sqlite3.c	8481;"	d	file:
OP_Permutation	drivers/SQLite/sqlite3/sqlite3.c	8414;"	d	file:
OP_Prev	drivers/SQLite/sqlite3/sqlite3.c	8469;"	d	file:
OP_Program	drivers/SQLite/sqlite3/sqlite3.c	8490;"	d	file:
OP_ReadCookie	drivers/SQLite/sqlite3/sqlite3.c	8433;"	d	file:
OP_Real	drivers/SQLite/sqlite3/sqlite3.c	8378;"	d	file:
OP_RealAffinity	drivers/SQLite/sqlite3/sqlite3.c	8402;"	d	file:
OP_Remainder	drivers/SQLite/sqlite3/sqlite3.c	8393;"	d	file:
OP_ResetCount	drivers/SQLite/sqlite3/sqlite3.c	8457;"	d	file:
OP_ResultRow	drivers/SQLite/sqlite3/sqlite3.c	8387;"	d	file:
OP_Return	drivers/SQLite/sqlite3/sqlite3.c	8372;"	d	file:
OP_Rewind	drivers/SQLite/sqlite3/sqlite3.c	8467;"	d	file:
OP_RowData	drivers/SQLite/sqlite3/sqlite3.c	8461;"	d	file:
OP_RowKey	drivers/SQLite/sqlite3/sqlite3.c	8460;"	d	file:
OP_RowSetAdd	drivers/SQLite/sqlite3/sqlite3.c	8487;"	d	file:
OP_RowSetRead	drivers/SQLite/sqlite3/sqlite3.c	8488;"	d	file:
OP_RowSetTest	drivers/SQLite/sqlite3/sqlite3.c	8489;"	d	file:
OP_Rowid	drivers/SQLite/sqlite3/sqlite3.c	8462;"	d	file:
OP_SCopy	drivers/SQLite/sqlite3/sqlite3.c	8386;"	d	file:
OP_Savepoint	drivers/SQLite/sqlite3/sqlite3.c	8430;"	d	file:
OP_Seek	drivers/SQLite/sqlite3/sqlite3.c	8447;"	d	file:
OP_SeekGe	drivers/SQLite/sqlite3/sqlite3.c	8445;"	d	file:
OP_SeekGt	drivers/SQLite/sqlite3/sqlite3.c	8446;"	d	file:
OP_SeekLe	drivers/SQLite/sqlite3/sqlite3.c	8444;"	d	file:
OP_SeekLt	drivers/SQLite/sqlite3/sqlite3.c	8443;"	d	file:
OP_Sequence	drivers/SQLite/sqlite3/sqlite3.c	8452;"	d	file:
OP_SetCookie	drivers/SQLite/sqlite3/sqlite3.c	8434;"	d	file:
OP_ShiftLeft	drivers/SQLite/sqlite3/sqlite3.c	8398;"	d	file:
OP_ShiftRight	drivers/SQLite/sqlite3/sqlite3.c	8399;"	d	file:
OP_Sort	drivers/SQLite/sqlite3/sqlite3.c	8466;"	d	file:
OP_SorterCompare	drivers/SQLite/sqlite3/sqlite3.c	8458;"	d	file:
OP_SorterData	drivers/SQLite/sqlite3/sqlite3.c	8459;"	d	file:
OP_SorterInsert	drivers/SQLite/sqlite3/sqlite3.c	8471;"	d	file:
OP_SorterNext	drivers/SQLite/sqlite3/sqlite3.c	8468;"	d	file:
OP_SorterOpen	drivers/SQLite/sqlite3/sqlite3.c	8440;"	d	file:
OP_SorterSort	drivers/SQLite/sqlite3/sqlite3.c	8465;"	d	file:
OP_String	drivers/SQLite/sqlite3/sqlite3.c	8380;"	d	file:
OP_String8	drivers/SQLite/sqlite3/sqlite3.c	8379;"	d	file:
OP_Subtract	drivers/SQLite/sqlite3/sqlite3.c	8390;"	d	file:
OP_TableLock	drivers/SQLite/sqlite3/sqlite3.c	8505;"	d	file:
OP_ToBlob	drivers/SQLite/sqlite3/sqlite3.c	8404;"	d	file:
OP_ToInt	drivers/SQLite/sqlite3/sqlite3.c	8406;"	d	file:
OP_ToNumeric	drivers/SQLite/sqlite3/sqlite3.c	8405;"	d	file:
OP_ToReal	drivers/SQLite/sqlite3/sqlite3.c	8407;"	d	file:
OP_ToText	drivers/SQLite/sqlite3/sqlite3.c	8403;"	d	file:
OP_Trace	drivers/SQLite/sqlite3/sqlite3.c	8517;"	d	file:
OP_Transaction	drivers/SQLite/sqlite3/sqlite3.c	8432;"	d	file:
OP_VBegin	drivers/SQLite/sqlite3/sqlite3.c	8506;"	d	file:
OP_VColumn	drivers/SQLite/sqlite3/sqlite3.c	8511;"	d	file:
OP_VCreate	drivers/SQLite/sqlite3/sqlite3.c	8507;"	d	file:
OP_VDestroy	drivers/SQLite/sqlite3/sqlite3.c	8508;"	d	file:
OP_VFilter	drivers/SQLite/sqlite3/sqlite3.c	8510;"	d	file:
OP_VNext	drivers/SQLite/sqlite3/sqlite3.c	8512;"	d	file:
OP_VOpen	drivers/SQLite/sqlite3/sqlite3.c	8509;"	d	file:
OP_VRename	drivers/SQLite/sqlite3/sqlite3.c	8513;"	d	file:
OP_VUpdate	drivers/SQLite/sqlite3/sqlite3.c	8514;"	d	file:
OP_Vacuum	drivers/SQLite/sqlite3/sqlite3.c	8502;"	d	file:
OP_Variable	drivers/SQLite/sqlite3/sqlite3.c	8383;"	d	file:
OP_VerifyCookie	drivers/SQLite/sqlite3/sqlite3.c	8435;"	d	file:
OP_Yield	drivers/SQLite/sqlite3/sqlite3.c	8373;"	d	file:
OR	kernel/yyTemporal.cpp	94;"	d	file:
OR	kernel/yyTemporal.h	33;"	d
ORAEXCEPTION	drivers/Oracle/OCI/include/occiControl.h	162;"	d
ORALIMITS	drivers/Oracle/OCI/include/oratypes.h	23;"	d
ORALISTSTL	drivers/Oracle/OCI/include/occiCommon.h	131;"	d
ORASB8MAXVAL	drivers/Oracle/OCI/include/oratypes.h	107;"	d
ORASB8MINVAL	drivers/Oracle/OCI/include/oratypes.h	106;"	d
ORASTDARG	drivers/Oracle/OCI/include/ociap.h	198;"	d
ORASTDARG	drivers/Oracle/OCI/include/ocikp.h	209;"	d
ORASTDARG	drivers/Oracle/ociap.h	178;"	d
ORASTDDEF	drivers/Oracle/OCI/include/oratypes.h	18;"	d
ORASTRINGSTL	drivers/Oracle/OCI/include/occiCommon.h	120;"	d
ORASYS_TYPES	drivers/Oracle/OCI/include/oratypes.h	270;"	d
ORATYPES	drivers/Oracle/OCI/include/oratypes.h	12;"	d
ORAUB8MAXVAL	drivers/Oracle/OCI/include/oratypes.h	105;"	d
ORAUB8MINVAL	drivers/Oracle/OCI/include/oratypes.h	104;"	d
ORAVECTORSTL	drivers/Oracle/OCI/include/occiCommon.h	126;"	d
ORAXB8_DEFINED	drivers/Oracle/OCI/include/oratypes.h	91;"	d
ORDINAL	kernel/TeAttribute.h	/^{ ORDINAL, NOMINAL, RATIO, INTERVAL, CYCLIC, PROBABILITY, FUZZY };$/;"	e	enum:TeMeasurementScale
ORID_ORACLE	drivers/Oracle/OCI/include/orid.h	269;"	d
ORI_ORACLE	drivers/Oracle/OCI/include/ori.h	507;"	d
ORL_ORACLE	drivers/Oracle/OCI/include/orl.h	343;"	d
ORO_ORACLE	drivers/Oracle/OCI/include/oro.h	186;"	d
ORT_ORACLE	drivers/Oracle/OCI/include/ort.h	614;"	d
OS2_SHM_BASE	drivers/SQLite/sqlite3/sqlite3.c	23286;"	d	file:
OS2_SHM_BASE	drivers/SQLite/sqlite3/sqlite3.c	23288;"	d	file:
OS2_SHM_DMS	drivers/SQLite/sqlite3/sqlite3.c	23291;"	d	file:
OSMESA_ARGB	drivers/GL/osmesa.h	76;"	d
OSMESA_BGR	drivers/GL/osmesa.h	78;"	d
OSMESA_BGRA	drivers/GL/osmesa.h	75;"	d
OSMESA_COLOR_INDEX	drivers/GL/osmesa.h	73;"	d
OSMESA_FORMAT	drivers/GL/osmesa.h	95;"	d
OSMESA_H	drivers/GL/osmesa.h	52;"	d
OSMESA_HEIGHT	drivers/GL/osmesa.h	94;"	d
OSMESA_MAJOR_VERSION	drivers/GL/osmesa.h	63;"	d
OSMESA_MAX_HEIGHT	drivers/GL/osmesa.h	98;"	d
OSMESA_MAX_WIDTH	drivers/GL/osmesa.h	97;"	d
OSMESA_MINOR_VERSION	drivers/GL/osmesa.h	64;"	d
OSMESA_PATCH_VERSION	drivers/GL/osmesa.h	65;"	d
OSMESA_RGB	drivers/GL/osmesa.h	77;"	d
OSMESA_RGBA	drivers/GL/osmesa.h	74;"	d
OSMESA_RGB_565	drivers/GL/osmesa.h	79;"	d
OSMESA_ROW_LENGTH	drivers/GL/osmesa.h	86;"	d
OSMESA_TYPE	drivers/GL/osmesa.h	96;"	d
OSMESA_WIDTH	drivers/GL/osmesa.h	93;"	d
OSMESA_Y_UP	drivers/GL/osmesa.h	87;"	d
OSMESAproc	drivers/GL/osmesa.h	/^typedef void (*OSMESAproc)();$/;"	t
OSMesaContext	drivers/GL/osmesa.h	/^typedef struct osmesa_context *OSMesaContext;$/;"	t	typeref:struct:osmesa_context
OSTRACE	drivers/SQLite/sqlite3/sqlite3.c	22356;"	d	file:
OSTRACE	drivers/SQLite/sqlite3/sqlite3.c	22358;"	d	file:
OSTRACE	drivers/SQLite/sqlite3/sqlite3.c	24698;"	d	file:
OSTRACE	drivers/SQLite/sqlite3/sqlite3.c	24700;"	d	file:
OSTRACE	drivers/SQLite/sqlite3/sqlite3.c	31479;"	d	file:
OSTRACE	drivers/SQLite/sqlite3/sqlite3.c	31481;"	d	file:
OS_VXWORKS	drivers/SQLite/sqlite3/sqlite3.c	24476;"	d	file:
OS_VXWORKS	drivers/SQLite/sqlite3/sqlite3.c	24478;"	d	file:
OTYACL	drivers/Oracle/OCI/include/ocidef.h	175;"	d
OTYADB	drivers/Oracle/OCI/include/ocidef.h	207;"	d
OTYAIX	drivers/Oracle/OCI/include/ocidef.h	203;"	d
OTYAPR	drivers/Oracle/OCI/include/ocidef.h	186;"	d
OTYARS	drivers/Oracle/OCI/include/ocidef.h	209;"	d
OTYASE	drivers/Oracle/OCI/include/ocidef.h	214;"	d
OTYASQ	drivers/Oracle/OCI/include/ocidef.h	174;"	d
OTYASY	drivers/Oracle/OCI/include/ocidef.h	194;"	d
OTYATB	drivers/Oracle/OCI/include/ocidef.h	187;"	d
OTYATS	drivers/Oracle/OCI/include/ocidef.h	212;"	d
OTYAUD	drivers/Oracle/OCI/include/ocidef.h	201;"	d
OTYAUR	drivers/Oracle/OCI/include/ocidef.h	215;"	d
OTYCCL	drivers/Oracle/OCI/include/ocidef.h	178;"	d
OTYCDB	drivers/Oracle/OCI/include/ocidef.h	206;"	d
OTYCED	drivers/Oracle/OCI/include/ocidef.h	204;"	d
OTYCIX	drivers/Oracle/OCI/include/ocidef.h	181;"	d
OTYCMT	drivers/Oracle/OCI/include/ocidef.h	200;"	d
OTYCPR	drivers/Oracle/OCI/include/ocidef.h	185;"	d
OTYCRO	drivers/Oracle/OCI/include/ocidef.h	172;"	d
OTYCRS	drivers/Oracle/OCI/include/ocidef.h	208;"	d
OTYCSC	drivers/Oracle/OCI/include/ocidef.h	177;"	d
OTYCSQ	drivers/Oracle/OCI/include/ocidef.h	173;"	d
OTYCSY	drivers/Oracle/OCI/include/ocidef.h	192;"	d
OTYCTB	drivers/Oracle/OCI/include/ocidef.h	156;"	d
OTYCTS	drivers/Oracle/OCI/include/ocidef.h	211;"	d
OTYCUS	drivers/Oracle/OCI/include/ocidef.h	180;"	d
OTYCVW	drivers/Oracle/OCI/include/ocidef.h	170;"	d
OTYCWK	drivers/Oracle/OCI/include/ocidef.h	216;"	d
OTYDCL	drivers/Oracle/OCI/include/ocidef.h	183;"	d
OTYDED	drivers/Oracle/OCI/include/ocidef.h	205;"	d
OTYDEL	drivers/Oracle/OCI/include/ocidef.h	169;"	d
OTYDEV	drivers/Oracle/OCI/include/ocidef.h	224;"	d
OTYDIX	drivers/Oracle/OCI/include/ocidef.h	182;"	d
OTYDRO	drivers/Oracle/OCI/include/ocidef.h	161;"	d
OTYDRS	drivers/Oracle/OCI/include/ocidef.h	210;"	d
OTYDSQ	drivers/Oracle/OCI/include/ocidef.h	176;"	d
OTYDSY	drivers/Oracle/OCI/include/ocidef.h	193;"	d
OTYDTB	drivers/Oracle/OCI/include/ocidef.h	166;"	d
OTYDTS	drivers/Oracle/OCI/include/ocidef.h	213;"	d
OTYDUS	drivers/Oracle/OCI/include/ocidef.h	171;"	d
OTYDVW	drivers/Oracle/OCI/include/ocidef.h	162;"	d
OTYGRA	drivers/Oracle/OCI/include/ocidef.h	190;"	d
OTYINS	drivers/Oracle/OCI/include/ocidef.h	158;"	d
OTYLTB	drivers/Oracle/OCI/include/ocidef.h	197;"	d
OTYNOA	drivers/Oracle/OCI/include/ocidef.h	202;"	d
OTYNOP	drivers/Oracle/OCI/include/ocidef.h	198;"	d
OTYPLS	drivers/Oracle/OCI/include/ocidef.h	196;"	d
OTYREV	drivers/Oracle/OCI/include/ocidef.h	191;"	d
OTYRNM	drivers/Oracle/OCI/include/ocidef.h	199;"	d
OTYROL	drivers/Oracle/OCI/include/ocidef.h	217;"	d
OTYSEL	drivers/Oracle/OCI/include/ocidef.h	159;"	d
OTYSER	drivers/Oracle/OCI/include/ocidef.h	157;"	d
OTYSET	drivers/Oracle/OCI/include/ocidef.h	195;"	d
OTYSPT	drivers/Oracle/OCI/include/ocidef.h	218;"	d
OTYUPD	drivers/Oracle/OCI/include/ocidef.h	160;"	d
OTYVIX	drivers/Oracle/OCI/include/ocidef.h	184;"	d
OTYXPL	drivers/Oracle/OCI/include/ocidef.h	189;"	d
OUTLINE_COLOR_0	image_processing/TePDIBaatz.hpp	32;"	d
OUTLINE_COLOR_1	image_processing/TePDIBaatz.hpp	33;"	d
OUTLINE_COLOR_2	image_processing/TePDIBaatz.hpp	34;"	d
OUTPUT_BUF_SIZE	drivers/libjpeg/jmemdstsrc.h	48;"	d
O_BINARY	drivers/SQLite/sqlite3/sqlite3.c	24884;"	d	file:
O_LARGEFILE	drivers/SQLite/sqlite3/sqlite3.c	24874;"	d	file:
O_LARGEFILE	drivers/SQLite/sqlite3/sqlite3.c	24877;"	d	file:
O_LARGEFILE	drivers/SQLite/sqlite3/sqlite3.c	24878;"	d	file:
O_NOFOLLOW	drivers/SQLite/sqlite3/sqlite3.c	24881;"	d	file:
ObjRefs	drivers/Firebird/ibpp/core/_ibpp.h	/^	typedef std::vector<IBPP::EventInterface*> ObjRefs;$/;"	t	class:ibpp_internals::EventsImpl
ObjectId	kernel/TeNeighbours.cpp	/^TeNeighbours::ObjectId (int n) $/;"	f	class:TeNeighbours
ObjectInfo	drivers/qt/TeApplicationUtils.h	/^struct TL_DLL ObjectInfo$/;"	s
ObjectName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd ObjectName;$/;"	m	struct:ODCIFuncInfo_ind
ObjectName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd ObjectName;$/;"	m	struct:ODCIObject_ind
ObjectName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd ObjectName;$/;"	m	struct:ODCIPredInfo_ind
ObjectName	drivers/Oracle/OCI/include/odci.h	/^   OCIString* ObjectName;$/;"	m	struct:ODCIFuncInfo
ObjectName	drivers/Oracle/OCI/include/odci.h	/^   OCIString* ObjectName;$/;"	m	struct:ODCIObject
ObjectName	drivers/Oracle/OCI/include/odci.h	/^   OCIString* ObjectName;$/;"	m	struct:ODCIPredInfo
ObjectSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIInd ObjectSchema;$/;"	m	struct:ODCIFuncInfo_ind
ObjectSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIInd ObjectSchema;$/;"	m	struct:ODCIObject_ind
ObjectSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIInd ObjectSchema;$/;"	m	struct:ODCIPredInfo_ind
ObjectSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIString* ObjectSchema;$/;"	m	struct:ODCIFuncInfo
ObjectSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIString* ObjectSchema;$/;"	m	struct:ODCIObject
ObjectSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIString* ObjectSchema;$/;"	m	struct:ODCIPredInfo
Object_id_map_type	kernel/TeProxMatrixImplementation.h	/^	typedef map<string, int> Object_id_map_type;$/;"	t	class:TeProxMatrixGraphBreymann
OnLimbo_	image_processing/TePDIRegGrowSeg.hpp	/^      long            OnLimbo_;$/;"	m	class:TePDIRegGrowSeg
Op	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct VdbeOp Op;$/;"	t	typeref:struct:VdbeOp	file:
OpCode	drivers/Oracle/OCI/include/odci.h	/^   OCIInd OpCode;$/;"	m	struct:ODCIExtTableInfo_ind
OpCode	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        OpCode;$/;"	m	struct:ODCIExtTableInfo
Open	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::Open()$/;"	f	class:BlobImpl
OpenCounter	drivers/SQLite/sqlite3/sqlite3.c	22518;"	d	file:
OpenCounter	drivers/SQLite/sqlite3/sqlite3.c	22520;"	d	file:
OpenCounter	drivers/SQLite/sqlite3/sqlite3.c	24860;"	d	file:
OpenCounter	drivers/SQLite/sqlite3/sqlite3.c	24862;"	d	file:
OpenCounter	drivers/SQLite/sqlite3/sqlite3.c	31641;"	d	file:
OpenCounter	drivers/SQLite/sqlite3/sqlite3.c	31643;"	d	file:
OpenDiskFilesInfoNode	image_processing/TePDIMatrix.hpp	/^          OpenDiskFilesInfoNode() : filePtr_( 0 ), fileName_( 0 ) {};          $/;"	f	class:TePDIMatrix::OpenDiskFilesInfoNode
OpenDiskFilesInfoNode	image_processing/TePDIMatrix.hpp	/^      class OpenDiskFilesInfoNode$/;"	c	class:TePDIMatrix
OpenDiskFilesVecT	kernel/TeRasterMemManager.h	/^        OpenDiskFilesVecT;   $/;"	t	class:TeRasterMemManager
Open_OCIXADMethodEntry	drivers/Oracle/OCI/include/ocixad.h	/^  OCIXADMethodOpen          Open_OCIXADMethodEntry;$/;"	m	struct:OCIXADMethodEntry
Opt	kernel/TeGraph.cpp	/^struct Opt{                        \/* Options default settings *\/$/;"	s	file:
Options	drivers/Oracle/OCI/include/odci.h	/^   OCIInd Options;$/;"	m	struct:ODCIStatsOptions_ind
Options	drivers/Oracle/OCI/include/odci.h	/^   OCINumber Options;$/;"	m	struct:ODCIStatsOptions
Options	kernel/TeGraph.cpp	/^} Options ;       \/* curve legend turned on                        *\/$/;"	v	typeref:struct:Opt
OraText	drivers/Oracle/OCI/include/oratypes.h	/^  typedef oratext OraText;$/;"	t
OraText	drivers/Oracle/OCI/include/oratypes.h	186;"	d
Order	kernel/TeNeighbours.h	/^		int		Order() {return _order;}$/;"	f	class:TeProxMatrixAttributes
Order	kernel/TeNeighbours.h	/^		void Order(int o) {_order = o;}$/;"	f	class:TeProxMatrixAttributes
Origin	drivers/Firebird/ibpp/core/exception.cpp	/^const char* ExceptionBase::Origin() const throw()$/;"	f	class:ExceptionBase
Origin	drivers/Firebird/ibpp/core/exception.cpp	/^const char* LogicExceptionImpl::Origin() const throw()$/;"	f	class:LogicExceptionImpl
Origin	drivers/Firebird/ibpp/core/exception.cpp	/^const char* SQLExceptionImpl::Origin() const throw()$/;"	f	class:SQLExceptionImpl
Origin	drivers/Firebird/ibpp/core/exception.cpp	/^const char* WrongTypeImpl::Origin() const throw()$/;"	f	class:WrongTypeImpl
OutRemStrategy	kernel/TeGTParams.h	/^      enum OutRemStrategy {$/;"	g	class:TeGTParams
Output_format	kernel/TeGraph.h	/^	int Output_format;         \/* output format for xywrite *\/$/;"	m	class:TeGraphPlot
P1	stat/filaR.h	/^      long P1,P2; \/\/ populacao nos grupos gerados$/;"	m	struct:TFilaR::Item
P2	stat/filaR.h	/^      long P1,P2; \/\/ populacao nos grupos gerados$/;"	m	struct:TFilaR::Item
P4_ADVANCE	drivers/SQLite/sqlite3/sqlite3.c	8323;"	d	file:
P4_COLLSEQ	drivers/SQLite/sqlite3/sqlite3.c	8310;"	d	file:
P4_DYNAMIC	drivers/SQLite/sqlite3/sqlite3.c	8308;"	d	file:
P4_FUNCDEF	drivers/SQLite/sqlite3/sqlite3.c	8311;"	d	file:
P4_INT32	drivers/SQLite/sqlite3/sqlite3.c	8320;"	d	file:
P4_INT64	drivers/SQLite/sqlite3/sqlite3.c	8319;"	d	file:
P4_INTARRAY	drivers/SQLite/sqlite3/sqlite3.c	8321;"	d	file:
P4_KEYINFO	drivers/SQLite/sqlite3/sqlite3.c	8312;"	d	file:
P4_KEYINFO_HANDOFF	drivers/SQLite/sqlite3/sqlite3.c	8332;"	d	file:
P4_KEYINFO_STATIC	drivers/SQLite/sqlite3/sqlite3.c	8333;"	d	file:
P4_MEM	drivers/SQLite/sqlite3/sqlite3.c	8314;"	d	file:
P4_MPRINTF	drivers/SQLite/sqlite3/sqlite3.c	8317;"	d	file:
P4_NOTUSED	drivers/SQLite/sqlite3/sqlite3.c	8307;"	d	file:
P4_REAL	drivers/SQLite/sqlite3/sqlite3.c	8318;"	d	file:
P4_STATIC	drivers/SQLite/sqlite3/sqlite3.c	8309;"	d	file:
P4_SUBPROGRAM	drivers/SQLite/sqlite3/sqlite3.c	8322;"	d	file:
P4_TRANSIENT	drivers/SQLite/sqlite3/sqlite3.c	8315;"	d	file:
P4_VDBEFUNC	drivers/SQLite/sqlite3/sqlite3.c	8313;"	d	file:
P4_VTAB	drivers/SQLite/sqlite3/sqlite3.c	8316;"	d	file:
PAGERID	drivers/SQLite/sqlite3/sqlite3.c	37454;"	d	file:
PAGERTRACE	drivers/SQLite/sqlite3/sqlite3.c	37443;"	d	file:
PAGER_ERROR	drivers/SQLite/sqlite3/sqlite3.c	37680;"	d	file:
PAGER_INCR	drivers/SQLite/sqlite3/sqlite3.c	38024;"	d	file:
PAGER_INCR	drivers/SQLite/sqlite3/sqlite3.c	38026;"	d	file:
PAGER_JOURNALMODE_DELETE	drivers/SQLite/sqlite3/sqlite3.c	8706;"	d	file:
PAGER_JOURNALMODE_MEMORY	drivers/SQLite/sqlite3/sqlite3.c	8710;"	d	file:
PAGER_JOURNALMODE_OFF	drivers/SQLite/sqlite3/sqlite3.c	8708;"	d	file:
PAGER_JOURNALMODE_PERSIST	drivers/SQLite/sqlite3/sqlite3.c	8707;"	d	file:
PAGER_JOURNALMODE_QUERY	drivers/SQLite/sqlite3/sqlite3.c	8705;"	d	file:
PAGER_JOURNALMODE_TRUNCATE	drivers/SQLite/sqlite3/sqlite3.c	8709;"	d	file:
PAGER_JOURNALMODE_WAL	drivers/SQLite/sqlite3/sqlite3.c	8711;"	d	file:
PAGER_LOCKINGMODE_EXCLUSIVE	drivers/SQLite/sqlite3/sqlite3.c	8700;"	d	file:
PAGER_LOCKINGMODE_NORMAL	drivers/SQLite/sqlite3/sqlite3.c	8699;"	d	file:
PAGER_LOCKINGMODE_QUERY	drivers/SQLite/sqlite3/sqlite3.c	8698;"	d	file:
PAGER_MAX_PGNO	drivers/SQLite/sqlite3/sqlite3.c	38085;"	d	file:
PAGER_MEMORY	drivers/SQLite/sqlite3/sqlite3.c	8693;"	d	file:
PAGER_MJ_PGNO	drivers/SQLite/sqlite3/sqlite3.c	8684;"	d	file:
PAGER_NO_READLOCK	drivers/SQLite/sqlite3/sqlite3.c	8692;"	d	file:
PAGER_OMIT_JOURNAL	drivers/SQLite/sqlite3/sqlite3.c	8691;"	d	file:
PAGER_OPEN	drivers/SQLite/sqlite3/sqlite3.c	37674;"	d	file:
PAGER_READER	drivers/SQLite/sqlite3/sqlite3.c	37675;"	d	file:
PAGER_WRITER_CACHEMOD	drivers/SQLite/sqlite3/sqlite3.c	37677;"	d	file:
PAGER_WRITER_DBMOD	drivers/SQLite/sqlite3/sqlite3.c	37678;"	d	file:
PAGER_WRITER_FINISHED	drivers/SQLite/sqlite3/sqlite3.c	37679;"	d	file:
PAGER_WRITER_LOCKED	drivers/SQLite/sqlite3/sqlite3.c	37676;"	d	file:
PAGE_TO_PGHDR1	drivers/SQLite/sqlite3/sqlite3.c	35960;"	d	file:
PARAMDSC	drivers/Firebird/ibpp/core/ibase.h	/^} PARAMDSC;$/;"	t	typeref:struct:paramdsc
PARAMVARY	drivers/Firebird/ibpp/core/ibase.h	/^} PARAMVARY;$/;"	t	typeref:struct:paramvary
PC2LL	kernel/TeProjection.cpp	/^TeAlbers :: PC2LL(const TeCoord2D& ptpc)$/;"	f	class:TeAlbers
PC2LL	kernel/TeProjection.cpp	/^TeCylindricalEquidistant :: PC2LL (const TeCoord2D& ptpc)$/;"	f	class:TeCylindricalEquidistant
PC2LL	kernel/TeProjection.cpp	/^TeLambertConformal :: PC2LL (const TeCoord2D& ptpc)$/;"	f	class:TeLambertConformal
PC2LL	kernel/TeProjection.cpp	/^TeLatLong :: PC2LL (const TeCoord2D& ptpc)$/;"	f	class:TeLatLong
PC2LL	kernel/TeProjection.cpp	/^TeLatLong :: PC2LL (double xi, double yi, double& ptpcx, double& ptpcy)$/;"	f	class:TeLatLong
PC2LL	kernel/TeProjection.cpp	/^TeMercator :: PC2LL (const TeCoord2D& ptpc)$/;"	f	class:TeMercator
PC2LL	kernel/TeProjection.cpp	/^TeMiller :: PC2LL (const TeCoord2D& ptpc)$/;"	f	class:TeMiller
PC2LL	kernel/TeProjection.cpp	/^TePolarStereographic :: PC2LL (const TeCoord2D& ptpc)$/;"	f	class:TePolarStereographic
PC2LL	kernel/TeProjection.cpp	/^TePolyconic :: PC2LL (const TeCoord2D& ptpc)$/;"	f	class:TePolyconic
PC2LL	kernel/TeProjection.cpp	/^TeSatelliteProjection::PC2LL(const TeCoord2D& ptpc)$/;"	f	class:TeSatelliteProjection
PC2LL	kernel/TeProjection.cpp	/^TeSinusoidal :: PC2LL (const TeCoord2D& ptpc)$/;"	f	class:TeSinusoidal
PC2LL	kernel/TeProjection.cpp	/^TeUtm :: PC2LL (const TeCoord2D& ptpc)$/;"	f	class:TeUtm
PC2LL	kernel/TeProjection.cpp	/^TeVirtualEarthMercator :: PC2LL (const TeCoord2D& ptpc)$/;"	f	class:TeVirtualEarthMercator
PC2LL	kernel/TeProjection.h	/^		virtual TeCoord2D PC2LL(const TeCoord2D& p) {return p;};$/;"	f	class:TeNoProjection
PC2LL	kernel/TeProjection.h	/^	virtual	void PC2LL (double, double, double&, double&) {printf("\\nWRONG"); return;} \/\/FAMI$/;"	f	class:TeProjection
PCache	drivers/SQLite/sqlite3/sqlite3.c	/^struct PCache {$/;"	s	file:
PCache	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct PCache PCache;$/;"	t	typeref:struct:PCache	file:
PCache1	drivers/SQLite/sqlite3/sqlite3.c	/^struct PCache1 {$/;"	s	file:
PCache1	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct PCache1 PCache1;$/;"	t	typeref:struct:PCache1	file:
PCacheGlobal	drivers/SQLite/sqlite3/sqlite3.c	/^static SQLITE_WSD struct PCacheGlobal {$/;"	s	file:
PDI_ALGORITHM_FACTORIES_REGISTERED	image_processing/TePDIAlgorithmFactory.hpp	26;"	d
PDI_DLL	image_processing/TePDIDefines.hpp	121;"	d
PDI_DLL	image_processing/TePDIDefines.hpp	123;"	d
PDI_DLL	image_processing/TePDIDefines.hpp	126;"	d
PDI_MIXMODEL_SF_REGISTERED	image_processing/TePDIMixModelStratFactory.hpp	26;"	d
PDI_STRATEGY_FACTORIES_REGISTERED	image_processing/TePDIStrategyFactory.hpp	26;"	d
PENDING_BYTE	drivers/SQLite/sqlite3/sqlite3.c	9201;"	d	file:
PENDING_BYTE	drivers/SQLite/sqlite3/sqlite3.c	9203;"	d	file:
PENDING_BYTE_PAGE	drivers/SQLite/sqlite3/sqlite3.c	47702;"	d	file:
PENDING_LOCK	drivers/SQLite/sqlite3/sqlite3.c	9142;"	d	file:
PEN_DOWN	kernel/TeGraph.cpp	46;"	d	file:
PEN_UP	kernel/TeGraph.cpp	45;"	d	file:
PFNCREATENEWSCREENFUNC	drivers/GL/dri_interface.h	/^typedef CREATENEWSCREENFUNC* PFNCREATENEWSCREENFUNC;$/;"	t
PFNCREATENEWSCREENFUNC	drivers/GL/internal/dri_interface.h	/^typedef CREATENEWSCREENFUNC* PFNCREATENEWSCREENFUNC;$/;"	t
PFNGLACTIVESTENCILFACEEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t
PFNGLACTIVETEXTUREARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLALPHAFRAGMENTOP1ATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLALPHAFRAGMENTOP2ATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLALPHAFRAGMENTOP3ATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLAPPLYTEXTUREEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t
PFNGLAREPROGRAMSRESIDENTNVPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);$/;"	t
PFNGLARETEXTURESRESIDENTEXTPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	t
PFNGLARRAYELEMENTEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t
PFNGLARRAYOBJECTATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLASYNCMARKERSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLATTACHOBJECTARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t
PFNGLATTACHSHADERPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLBEGINFRAGMENTSHADERATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLBEGINOCCLUSIONQUERYNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLBEGINQUERYARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINVERTEXSHADEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLBINDATTRIBLOCATIONARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDBUFFERARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDFRAGMENTSHADERATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLBINDFRAMEBUFFEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDLIGHTPARAMETEREXTPROC	drivers/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t
PFNGLBINDMATERIALPARAMETEREXTPROC	drivers/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t
PFNGLBINDPARAMETEREXTPROC	drivers/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t
PFNGLBINDPROGRAMARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t
PFNGLBINDPROGRAMNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDRENDERBUFFEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDTEXGENPARAMETEREXTPROC	drivers/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);$/;"	t
PFNGLBINDTEXTUREEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	drivers/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t
PFNGLBINDVERTEXARRAYAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXSHADEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLBINORMAL3BEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t
PFNGLBINORMAL3BVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLBINORMAL3DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t
PFNGLBINORMAL3DVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLBINORMAL3FEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t
PFNGLBINORMAL3FVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLBINORMAL3IEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t
PFNGLBINORMAL3IVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLBINORMAL3SEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t
PFNGLBINORMAL3SVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLBINORMALPOINTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLBLENDCOLOREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDCOLORPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDCOLORPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDEQUATIONEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEATIPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEATIPROC) (GLenum modeRGB, GLenum modeA);$/;"	t
PFNGLBLENDEQUATIONSEPARATEEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINGRPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLITFRAMEBUFFEREXTPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC)$/;"	t
PFNGLBUFFERDATAARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERDATAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERSUBDATAARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);$/;"	t
PFNGLBUFFERSUBDATAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	drivers/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t
PFNGLCLAMPCOLORARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLIENTACTIVETEXTUREARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t
PFNGLCOLOR3FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR3FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLCOLOR3HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLCOLOR3HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLCOLOR4HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	t
PFNGLCOLOR4HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4UBVERTEX2FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	t
PFNGLCOLOR4UBVERTEX2FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLOR4UBVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4UBVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLORFRAGMENTOP1ATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLCOLORFRAGMENTOP2ATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLCOLORFRAGMENTOP3ATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLCOLORPOINTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLCOLORPOINTERLISTIBMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLCOLORPOINTERVINTELPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLCOLORSUBTABLEEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORSUBTABLEPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORSUBTABLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORTABLEEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLEPARAMETERFVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERFVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERFVSGIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVSGIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLESGIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOMBINERINPUTNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLCOMBINEROUTPUTNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	t
PFNGLCOMBINERPARAMETERFNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLCOMBINERPARAMETERFVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMBINERPARAMETERINVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCOMBINERPARAMETERIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMPILESHADERARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t
PFNGLCOMPILESHADERPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCONVOLUTIONFILTER1DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER1DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER1DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONPARAMETERFEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOPYCOLORSUBTABLEEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORSUBTABLEPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORSUBTABLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLEPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLESGIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXIMAGE1DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCREATEPROGRAMOBJECTARBPROC	drivers/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t
PFNGLCREATEPROGRAMPROC	drivers/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t
PFNGLCREATESHADEROBJECTARBPROC	drivers/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t
PFNGLCREATESHADERPROC	drivers/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCULLPARAMETERDVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t
PFNGLCULLPARAMETERFVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLCURRENTPALETTEMATRIXARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t
PFNGLDEFORMATIONMAP3DSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);$/;"	t
PFNGLDEFORMATIONMAP3FSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);$/;"	t
PFNGLDEFORMSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLDELETEASYNCMARKERSSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t
PFNGLDELETEBUFFERSARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEBUFFERSPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEFENCESAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFENCESNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFRAGMENTSHADERATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLDELETEFRAMEBUFFERSEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETEOBJECTARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t
PFNGLDELETEOCCLUSIONQUERIESNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEPROGRAMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEPROGRAMSARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEPROGRAMSNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEQUERIESARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETERENDERBUFFERSEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETESHADERPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETETEXTURESEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETEVERTEXARRAYSAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXSHADEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLDEPTHBOUNDSEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t
PFNGLDETACHOBJECTARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	t
PFNGLDETACHSHADERPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDETAILTEXFUNCSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDRAWARRAYSEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWBUFFERSARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWELEMENTARRAYAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWELEMENTARRAYATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t
PFNGLDRAWMESHARRAYSSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTSEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLEDGEFLAGPOINTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	t
PFNGLEDGEFLAGPOINTERLISTIBMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);$/;"	t
PFNGLELEMENTPOINTERAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLELEMENTPOINTERATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENDFRAGMENTSHADERATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLENDOCCLUSIONQUERYNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t
PFNGLENDQUERYARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t
PFNGLENDQUERYPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDVERTEXSHADEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLEVALMAPSNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLEXECUTEPROGRAMNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);$/;"	t
PFNGLEXTRACTCOMPONENTEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLFINALCOMBINERINPUTNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLFINISHASYNCSGIXPROC	drivers/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLFINISHFENCEAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLFINISHFENCENVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t
PFNGLFINISHOBJECTAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t
PFNGLFINISHTEXTURESUNXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t
PFNGLFLUSHPIXELDATARANGENVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t
PFNGLFLUSHRASTERSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGENVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t
PFNGLFOGCOORDDEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDDVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDFEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDFVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDHNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t
PFNGLFOGCOORDHVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t
PFNGLFOGCOORDPOINTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGCOORDPOINTERLISTIBMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLFOGCOORDPOINTERPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGFUNCSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLFRAGMENTLIGHTFSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTFVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTISGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTIVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELISGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTMATERIALFSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTMATERIALFVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTMATERIALISGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTMATERIALIVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEZOOMSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t
PFNGLFREEOBJECTBUFFERATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLGENASYNCMARKERSSGIXPROC	drivers/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t
PFNGLGENBUFFERSARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENBUFFERSPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENERATEMIPMAPEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t
PFNGLGENFENCESAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFENCESNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFRAGMENTSHADERSATIPROC	drivers/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t
PFNGLGENFRAMEBUFFERSEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENOCCLUSIONQUERIESNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENPROGRAMSARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENPROGRAMSNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENQUERIESARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENRENDERBUFFERSEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENSYMBOLSEXTPROC	drivers/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	t
PFNGLGENTEXTURESEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENVERTEXARRAYSAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLGENVERTEXSHADERSEXTPROC	drivers/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t
PFNGLGETACTIVEATTRIBARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEATTRIBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETARRAYOBJECTFVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETARRAYOBJECTIVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);$/;"	t
PFNGLGETATTACHEDOBJECTSARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);$/;"	t
PFNGLGETATTRIBLOCATIONARBPROC	drivers/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	drivers/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETBUFFERPARAMETERIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPOINTERVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERSUBDATAARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOLORTABLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOLORTABLESGIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCONVOLUTIONFILTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONFILTERPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONFILTERPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETDETAILTEXFUNCSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETFENCEIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETFOGFUNCSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETHANDLEARBPROC	drivers/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t
PFNGLGETHISTOGRAMEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETHISTOGRAMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETINFOLOGARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	t
PFNGLGETINSTRUMENTSSGIXPROC	drivers/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLGETINVARIANTBOOLEANVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETINVARIANTFLOATVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETINVARIANTINTEGERVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETLISTPARAMETERFVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETLISTPARAMETERIVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);$/;"	t
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETMAPCONTROLPOINTSNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);$/;"	t
PFNGLGETMAPPARAMETERFVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPPARAMETERIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETMINMAXPARAMETERFVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERFVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERFVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETMINMAXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETOBJECTBUFFERFVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTBUFFERIVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTPARAMETERFVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTPARAMETERIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYUIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t
PFNGLGETPOINTERVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);$/;"	t
PFNGLGETPROGRAMPARAMETERDVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETPROGRAMPARAMETERFVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPROGRAMSTRINGARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid *string);$/;"	t
PFNGLGETPROGRAMSTRINGNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);$/;"	t
PFNGLGETQUERYIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTI64VEXTPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETQUERYOBJECTIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VEXTPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETQUERYOBJECTUIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETSEPARABLEFILTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSEPARABLEFILTERPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSEPARABLEFILTERPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSHADERINFOLOGPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERSOURCEARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	t
PFNGLGETSHADERSOURCEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSHARPENTEXFUNCSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETTEXBUMPPARAMETERFVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t
PFNGLGETTEXBUMPPARAMETERIVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t
PFNGLGETTEXFILTERFUNCSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);$/;"	t
PFNGLGETTRACKMATRIXIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);$/;"	t
PFNGLGETUNIFORMFVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMFVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMLOCATIONARBPROC	drivers/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	drivers/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETVARIANTBOOLEANVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETVARIANTFLOATVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETVARIANTINTEGERVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETVARIANTPOINTERVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* *data);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBDVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBFVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGLOBALALPHAFACTORBSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORDSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t
PFNGLGLOBALALPHAFACTORFSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t
PFNGLGLOBALALPHAFACTORISUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t
PFNGLGLOBALALPHAFACTORSSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t
PFNGLGLOBALALPHAFACTORUBSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORUISUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t
PFNGLGLOBALALPHAFACTORUSSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t
PFNGLHINTPGIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t
PFNGLHISTOGRAMEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLHISTOGRAMPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLHISTOGRAMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLIGLOOINTERFACESGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const GLvoid *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLINDEXFUNCEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t
PFNGLINDEXMATERIALEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLINDEXPOINTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLINDEXPOINTERLISTIBMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLINSERTCOMPONENTEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLINSTRUMENTSBUFFERSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t
PFNGLISASYNCMARKERSGIXPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLISBUFFERARBPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISFENCEAPPLEPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLISFENCENVPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t
PFNGLISFRAMEBUFFEREXTPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t
PFNGLISOBJECTBUFFERATIPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLISOCCLUSIONQUERYNVPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMARBPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t
PFNGLISPROGRAMNVPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISQUERYARBPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t
PFNGLISQUERYPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISRENDERBUFFEREXTPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t
PFNGLISSHADERPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISTEXTUREEXTPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t
PFNGLISVARIANTENABLEDEXTPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t
PFNGLISVERTEXARRAYAPPLEPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLLIGHTENVISGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLLINKPROGRAMARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLLINKPROGRAMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLISTPARAMETERFSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t
PFNGLLISTPARAMETERFVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);$/;"	t
PFNGLLISTPARAMETERISGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t
PFNGLLISTPARAMETERIVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);$/;"	t
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLLOADPROGRAMNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLLOCKARRAYSEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t
PFNGLMAPBUFFERARBPROC	drivers/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERPROC	drivers/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPCONTROLPOINTSNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);$/;"	t
PFNGLMAPOBJECTBUFFERATIPROC	drivers/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLMAPPARAMETERFVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMAPPARAMETERIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMATRIXINDEXPOINTERARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLMATRIXINDEXUBVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t
PFNGLMATRIXINDEXUIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t
PFNGLMATRIXINDEXUSVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t
PFNGLMINMAXEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINMAXPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINMAXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMULTIDRAWARRAYSEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIMODEDRAWARRAYSIBMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTITEXCOORD1DARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1DVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1DVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1DVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1FARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1FVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t
PFNGLMULTITEXCOORD1HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD1IARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1IVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1IVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1IVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1SARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1SVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1SVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1SVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2DARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2DVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2DVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2DVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2FARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2FVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLMULTITEXCOORD2HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD2IARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2IVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2IVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2IVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2SARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2SVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2SVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2SVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3DARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3DVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3DVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3DVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3FARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3FVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLMULTITEXCOORD3HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD3IARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3IVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3IVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3IVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3SARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3SVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3SVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3SVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4DARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4DVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4DVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4DVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4FARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4FVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLMULTITEXCOORD4HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD4IARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4IVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4IVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4IVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4SARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SVARBPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4SVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4SVPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4SVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLNEWOBJECTBUFFERATIPROC	drivers/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);$/;"	t
PFNGLNORMAL3FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLNORMAL3FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLNORMAL3HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t
PFNGLNORMAL3HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLNORMALPOINTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLNORMALPOINTERLISTIBMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLNORMALPOINTERVINTELPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLNORMALSTREAM3BATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	t
PFNGLNORMALSTREAM3BVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t
PFNGLNORMALSTREAM3DATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	t
PFNGLNORMALSTREAM3DVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLNORMALSTREAM3FATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	t
PFNGLNORMALSTREAM3FVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLNORMALSTREAM3IATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	t
PFNGLNORMALSTREAM3IVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLNORMALSTREAM3SATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	t
PFNGLNORMALSTREAM3SVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLPASSTEXCOORDATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t
PFNGLPIXELDATARANGENVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, GLvoid *pointer);$/;"	t
PFNGLPIXELTEXGENPARAMETERFSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTEXGENPARAMETERISGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPIXELTEXGENSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLPNTRIANGLESFATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPNTRIANGLESIATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERFARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERINVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTPARAMETERIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOLLASYNCSGIXPROC	drivers/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLPOLLINSTRUMENTSSGIXPROC	drivers/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t
PFNGLPOLYGONOFFSETEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t
PFNGLPRIMITIVERESTARTINDEXNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t
PFNGLPRIORITIZETEXTURESEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	t
PFNGLPROGRAMENVPARAMETER4DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMENVPARAMETER4DVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMENVPARAMETER4FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMENVPARAMETER4FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETER4DNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMPARAMETER4DVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETER4FNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMPARAMETER4FVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETERS4DVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLuint count, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETERS4FVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLuint count, const GLfloat *v);$/;"	t
PFNGLPROGRAMSTRINGARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	t
PFNGLREADINSTRUMENTSSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLREFERENCEPLANESGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t
PFNGLRENDERBUFFERSTORAGEEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLREPLACEMENTCODEPOINTERSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const GLvoid* *pointer);$/;"	t
PFNGLREPLACEMENTCODEUBSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t
PFNGLREPLACEMENTCODEUBVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUISUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t
PFNGLREPLACEMENTCODEUSSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t
PFNGLREPLACEMENTCODEUSVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLRESETHISTOGRAMEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t
PFNGLRESETHISTOGRAMPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t
PFNGLRESETHISTOGRAMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t
PFNGLRESIZEBUFFERSMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t
PFNGLSAMPLECOVERAGEARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMAPATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t
PFNGLSAMPLEMASKEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEPATTERNEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLEPATTERNSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t
PFNGLSECONDARYCOLOR3BEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3BVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3DVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3FEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLSECONDARYCOLOR3HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLSECONDARYCOLOR3IEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3IVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3SEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3SVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3UBEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UBVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UIEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3UIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3USEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLOR3USVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLORPOINTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLSECONDARYCOLORPOINTERPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSEPARABLEFILTER2DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSEPARABLEFILTER2DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSEPARABLEFILTER2DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSETFENCEAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLSETFENCENVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);$/;"	t
PFNGLSETINVARIANTEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSETLOCALCONSTANTEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSHADEROP1EXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t
PFNGLSHADEROP2EXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	t
PFNGLSHADEROP3EXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	t
PFNGLSHADERSOURCEARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);$/;"	t
PFNGLSHADERSOURCEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);$/;"	t
PFNGLSHARPENTEXFUNCSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLSPRITEPARAMETERFSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLSPRITEPARAMETERFVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLSPRITEPARAMETERISGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLSPRITEPARAMETERIVSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLSTARTINSTRUMENTSSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLSTENCILFUNCSEPARATEATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILOPSEPARATEATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTOPINSTRUMENTSSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLSTRINGMARKERGREMEDYPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const GLvoid *string);$/;"	t
PFNGLSWIZZLEEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNGLTAGSAMPLEBUFFERSGIXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t
PFNGLTANGENT3BEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t
PFNGLTANGENT3BVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLTANGENT3DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t
PFNGLTANGENT3DVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLTANGENT3FEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t
PFNGLTANGENT3FVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLTANGENT3IEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t
PFNGLTANGENT3IVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLTANGENT3SEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t
PFNGLTANGENT3SVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLTANGENTPOINTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLTBUFFERMASK3DFXPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t
PFNGLTESTFENCEAPPLEPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLTESTFENCENVPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t
PFNGLTESTOBJECTAPPLEPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t
PFNGLTEXBUMPPARAMETERFVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t
PFNGLTEXBUMPPARAMETERIVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t
PFNGLTEXCOORD1HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t
PFNGLTEXCOORD1HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FVERTEX3FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLTEXCOORD2HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD3HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLTEXCOORD3HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4FVERTEX4FSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLTEXCOORD4HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORDPOINTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLTEXCOORDPOINTERLISTIBMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLTEXCOORDPOINTERVINTELPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLTEXFILTERFUNCSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);$/;"	t
PFNGLTEXIMAGE3DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE3DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE3DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE4DSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE1DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	drivers/GL/gl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE4DSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTURECOLORMASKSGISPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLTEXTURELIGHTEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t
PFNGLTEXTUREMATERIALEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLTEXTURENORMALEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t
PFNGLTRACKMATRIXNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	t
PFNGLUNIFORM1FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1IARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1IVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2IARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2IVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3IARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3IVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4IARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4IVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORMMATRIX2FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNLOCKARRAYSEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t
PFNGLUNMAPBUFFERARBPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFERPROC	drivers/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPOBJECTBUFFERATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLUPDATEOBJECTBUFFERATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);$/;"	t
PFNGLUSEPROGRAMOBJECTARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLUSEPROGRAMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLVALIDATEPROGRAMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVARIANTARRAYOBJECTATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVARIANTBVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t
PFNGLVARIANTDVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t
PFNGLVARIANTFVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t
PFNGLVARIANTIVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t
PFNGLVARIANTPOINTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const GLvoid *addr);$/;"	t
PFNGLVARIANTSVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t
PFNGLVARIANTUBVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t
PFNGLVARIANTUIVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t
PFNGLVARIANTUSVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t
PFNGLVERTEX2HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEX2HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX3HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEX3HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX4HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEX4HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXARRAYRANGEAPPLEPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLVERTEXARRAYRANGENVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIB1DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t
PFNGLVERTEXATTRIB1HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB1SARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEXATTRIB2HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB2SARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEXATTRIB3HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB3SARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4BVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4HNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEXATTRIB4HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB4IVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NBVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NSVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NUBARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4SARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4UBNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4UBVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4USVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVERTEXATTRIBPOINTERARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBS1DVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS1FVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS1HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS1SVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS2DVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS2FVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS2HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS2SVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS3DVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS3FVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS3HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS3SVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4DVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS4FVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS4HVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS4SVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4UBVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);$/;"	t
PFNGLVERTEXBLENDARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t
PFNGLVERTEXBLENDENVFATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLVERTEXBLENDENVIATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXPOINTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLVERTEXPOINTERLISTIBMPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLVERTEXPOINTERVINTELPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLVERTEXSTREAM1DATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t
PFNGLVERTEXSTREAM1DVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM1FATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t
PFNGLVERTEXSTREAM1FVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM1IATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t
PFNGLVERTEXSTREAM1IVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM1SATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t
PFNGLVERTEXSTREAM1SVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM2DATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXSTREAM2DVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM2FATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXSTREAM2FVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM2IATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t
PFNGLVERTEXSTREAM2IVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM2SATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXSTREAM2SVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM3DATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXSTREAM3DVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM3FATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXSTREAM3FVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM3IATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXSTREAM3IVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM3SATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXSTREAM3SVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM4DATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXSTREAM4DVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM4FATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXSTREAM4FVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM4IATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXSTREAM4IVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM4SATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXSTREAM4SVATIPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXWEIGHTFEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t
PFNGLVERTEXWEIGHTFVEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t
PFNGLVERTEXWEIGHTHNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t
PFNGLVERTEXWEIGHTHVNVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t
PFNGLVERTEXWEIGHTPOINTEREXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLWEIGHTBVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t
PFNGLWEIGHTDVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t
PFNGLWEIGHTFVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t
PFNGLWEIGHTIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t
PFNGLWEIGHTPOINTERARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLWEIGHTSVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t
PFNGLWEIGHTUBVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t
PFNGLWEIGHTUIVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t
PFNGLWEIGHTUSVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t
PFNGLWINDOWPOS2DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2IARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2SARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3DARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3FARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3IARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3SARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SVARBPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS4DMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLWINDOWPOS4DVMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS4FMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLWINDOWPOS4FVMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS4IMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLWINDOWPOS4IVMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS4SMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLWINDOWPOS4SVMESAPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWRITEMASKEXTPROC	drivers/GL/glext.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNGLXALLOCATEMEMORYMESAPROC	drivers/GL/glx.h	/^typedef void * ( * PFNGLXALLOCATEMEMORYMESAPROC) (Display *dpy, int scrn, size_t size, float readfreq, float writefreq, float priority);$/;"	t
PFNGLXALLOCATEMEMORYNVPROC	drivers/GL/glx.h	/^typedef void * ( * PFNGLXALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);$/;"	t
PFNGLXASSOCIATEDMPBUFFERSGIXPROC	drivers/GL/glxext.h	/^typedef Bool ( * PFNGLXASSOCIATEDMPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuffer, DMparams *params, DMbuffer dmbuffer);$/;"	t
PFNGLXBEGINFRAMETRACKINGMESAPROC	drivers/GL/glx.h	/^typedef int (*PFNGLXBEGINFRAMETRACKINGMESAPROC)(Display *dpy, GLXDrawable drawable);$/;"	t
PFNGLXBINDCHANNELTOWINDOWSGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXBINDCHANNELTOWINDOWSGIXPROC) (Display *display, int screen, int channel, Window window);$/;"	t
PFNGLXBINDHYPERPIPESGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXBINDHYPERPIPESGIXPROC) (Display *dpy, int hpId);$/;"	t
PFNGLXBINDSWAPBARRIERSGIXPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXBINDSWAPBARRIERSGIXPROC) (Display *dpy, GLXDrawable drawable, int barrier);$/;"	t
PFNGLXCHANNELRECTSGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXCHANNELRECTSGIXPROC) (Display *display, int screen, int channel, int x, int y, int w, int h);$/;"	t
PFNGLXCHANNELRECTSYNCSGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXCHANNELRECTSYNCSGIXPROC) (Display *display, int screen, int channel, GLenum synctype);$/;"	t
PFNGLXCHOOSEFBCONFIGPROC	drivers/GL/glxext.h	/^typedef GLXFBConfig * ( * PFNGLXCHOOSEFBCONFIGPROC) (Display *dpy, int screen, const int *attrib_list, int *nelements);$/;"	t
PFNGLXCHOOSEFBCONFIGSGIXPROC	drivers/GL/glxext.h	/^typedef GLXFBConfigSGIX * ( * PFNGLXCHOOSEFBCONFIGSGIXPROC) (Display *dpy, int screen, int *attrib_list, int *nelements);$/;"	t
PFNGLXCOPYSUBBUFFERMESAPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXCOPYSUBBUFFERMESAPROC) (Display *dpy, GLXDrawable drawable, int x, int y, int width, int height);$/;"	t
PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC	drivers/GL/glxext.h	/^typedef GLXContext ( * PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, int render_type, GLXContext share_list, Bool direct);$/;"	t
PFNGLXCREATEGLXPBUFFERSGIXPROC	drivers/GL/glxext.h	/^typedef GLXPbufferSGIX ( * PFNGLXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list);$/;"	t
PFNGLXCREATEGLXPIXMAPMESAPROC	drivers/GL/glxext.h	/^typedef GLXPixmap ( * PFNGLXCREATEGLXPIXMAPMESAPROC) (Display *dpy, XVisualInfo *visual, Pixmap pixmap, Colormap cmap);$/;"	t
PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC	drivers/GL/glxext.h	/^typedef GLXPixmap ( * PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, Pixmap pixmap);$/;"	t
PFNGLXCREATEGLXVIDEOSOURCESGIXPROC	drivers/GL/glxext.h	/^typedef GLXVideoSourceSGIX ( * PFNGLXCREATEGLXVIDEOSOURCESGIXPROC) (Display *display, int screen, VLServer server, VLPath path, int nodeClass, VLNode drainNode);$/;"	t
PFNGLXCREATENEWCONTEXTPROC	drivers/GL/glxext.h	/^typedef GLXContext ( * PFNGLXCREATENEWCONTEXTPROC) (Display *dpy, GLXFBConfig config, int render_type, GLXContext share_list, Bool direct);$/;"	t
PFNGLXCREATEPBUFFERPROC	drivers/GL/glxext.h	/^typedef GLXPbuffer ( * PFNGLXCREATEPBUFFERPROC) (Display *dpy, GLXFBConfig config, const int *attrib_list);$/;"	t
PFNGLXCREATEPIXMAPPROC	drivers/GL/glxext.h	/^typedef GLXPixmap ( * PFNGLXCREATEPIXMAPPROC) (Display *dpy, GLXFBConfig config, Pixmap pixmap, const int *attrib_list);$/;"	t
PFNGLXCREATEWINDOWPROC	drivers/GL/glxext.h	/^typedef GLXWindow ( * PFNGLXCREATEWINDOWPROC) (Display *dpy, GLXFBConfig config, Window win, const int *attrib_list);$/;"	t
PFNGLXCUSHIONSGIPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXCUSHIONSGIPROC) (Display *dpy, Window window, float cushion);$/;"	t
PFNGLXDESTROYGLXPBUFFERSGIXPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf);$/;"	t
PFNGLXDESTROYGLXVIDEOSOURCESGIXPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXDESTROYGLXVIDEOSOURCESGIXPROC) (Display *dpy, GLXVideoSourceSGIX glxvideosource);$/;"	t
PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC) (Display *dpy, int hpId);$/;"	t
PFNGLXDESTROYPBUFFERPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXDESTROYPBUFFERPROC) (Display *dpy, GLXPbuffer pbuf);$/;"	t
PFNGLXDESTROYPIXMAPPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXDESTROYPIXMAPPROC) (Display *dpy, GLXPixmap pixmap);$/;"	t
PFNGLXDESTROYWINDOWPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXDESTROYWINDOWPROC) (Display *dpy, GLXWindow win);$/;"	t
PFNGLXENDFRAMETRACKINGMESAPROC	drivers/GL/glx.h	/^typedef int (*PFNGLXENDFRAMETRACKINGMESAPROC)(Display *dpy, GLXDrawable drawable);$/;"	t
PFNGLXFREECONTEXTEXTPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXFREECONTEXTEXTPROC) (Display *dpy, GLXContext context);$/;"	t
PFNGLXFREEMEMORYMESAPROC	drivers/GL/glx.h	/^typedef void ( * PFNGLXFREEMEMORYMESAPROC) (Display *dpy, int scrn, void *pointer);$/;"	t
PFNGLXFREEMEMORYNVPROC	drivers/GL/glx.h	/^typedef void ( * PFNGLXFREEMEMORYNVPROC) (GLvoid *pointer);$/;"	t
PFNGLXGETAGPOFFSETMESAPROC	drivers/GL/glxext.h	/^typedef unsigned int ( * PFNGLXGETAGPOFFSETMESAPROC) (const void *pointer);$/;"	t
PFNGLXGETCONTEXTIDEXTPROC	drivers/GL/glxext.h	/^typedef GLXContextID ( * PFNGLXGETCONTEXTIDEXTPROC) (const GLXContext context);$/;"	t
PFNGLXGETCURRENTDISPLAYEXTPROC	drivers/GL/glxext.h	/^typedef Display * ( * PFNGLXGETCURRENTDISPLAYEXTPROC) (void);$/;"	t
PFNGLXGETCURRENTDISPLAYPROC	drivers/GL/glxext.h	/^typedef Display * ( * PFNGLXGETCURRENTDISPLAYPROC) (void);$/;"	t
PFNGLXGETCURRENTREADDRAWABLEPROC	drivers/GL/glxext.h	/^typedef GLXDrawable ( * PFNGLXGETCURRENTREADDRAWABLEPROC) (void);$/;"	t
PFNGLXGETCURRENTREADDRAWABLESGIPROC	drivers/GL/glxext.h	/^typedef GLXDrawable ( * PFNGLXGETCURRENTREADDRAWABLESGIPROC) (void);$/;"	t
PFNGLXGETDRIVERCONFIGPROC	drivers/GL/dri_interface.h	/^typedef const char * (* PFNGLXGETDRIVERCONFIGPROC) (const char *driverName);$/;"	t
PFNGLXGETDRIVERCONFIGPROC	drivers/GL/internal/dri_interface.h	/^typedef const char * (* PFNGLXGETDRIVERCONFIGPROC) (const char *driverName);$/;"	t
PFNGLXGETFBCONFIGATTRIBPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXGETFBCONFIGATTRIBPROC) (Display *dpy, GLXFBConfig config, int attribute, int *value);$/;"	t
PFNGLXGETFBCONFIGATTRIBSGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXGETFBCONFIGATTRIBSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, int attribute, int *value);$/;"	t
PFNGLXGETFBCONFIGFROMVISUALSGIXPROC	drivers/GL/glxext.h	/^typedef GLXFBConfigSGIX ( * PFNGLXGETFBCONFIGFROMVISUALSGIXPROC) (Display *dpy, XVisualInfo *vis);$/;"	t
PFNGLXGETFBCONFIGSPROC	drivers/GL/glxext.h	/^typedef GLXFBConfig * ( * PFNGLXGETFBCONFIGSPROC) (Display *dpy, int screen, int *nelements);$/;"	t
PFNGLXGETFRAMEUSAGEMESAPROC	drivers/GL/glx.h	/^typedef int (*PFNGLXGETFRAMEUSAGEMESAPROC) (Display *dpy, GLXDrawable drawable, float *usage);$/;"	t
PFNGLXGETMEMORYOFFSETMESAPROC	drivers/GL/glx.h	/^typedef GLuint (* PFNGLXGETMEMORYOFFSETMESAPROC) (Display *dpy, int scrn, const void *pointer);$/;"	t
PFNGLXGETMSCRATEOMLPROC	drivers/GL/glxext.h	/^typedef Bool ( * PFNGLXGETMSCRATEOMLPROC) (Display *dpy, GLXDrawable drawable, int32_t *numerator, int32_t *denominator);$/;"	t
PFNGLXGETPROCADDRESSARBPROC	drivers/GL/glxext.h	/^typedef __GLXextFuncPtr ( * PFNGLXGETPROCADDRESSARBPROC) (const GLubyte *procName);$/;"	t
PFNGLXGETPROCADDRESSPROC	drivers/GL/glxext.h	/^typedef __GLXextFuncPtr ( * PFNGLXGETPROCADDRESSPROC) (const GLubyte *procName);$/;"	t
PFNGLXGETSCREENDRIVERPROC	drivers/GL/dri_interface.h	/^typedef const char * (* PFNGLXGETSCREENDRIVERPROC) (__DRInativeDisplay *dpy, int scrNum);$/;"	t
PFNGLXGETSCREENDRIVERPROC	drivers/GL/internal/dri_interface.h	/^typedef const char * (* PFNGLXGETSCREENDRIVERPROC) (__DRInativeDisplay *dpy, int scrNum);$/;"	t
PFNGLXGETSELECTEDEVENTPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXGETSELECTEDEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long *event_mask);$/;"	t
PFNGLXGETSELECTEDEVENTSGIXPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask);$/;"	t
PFNGLXGETSWAPINTERVALMESAPROC	drivers/GL/glx.h	/^typedef int (*PFNGLXGETSWAPINTERVALMESAPROC)(void);$/;"	t
PFNGLXGETSYNCVALUESOMLPROC	drivers/GL/glxext.h	/^typedef Bool ( * PFNGLXGETSYNCVALUESOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t *ust, int64_t *msc, int64_t *sbc);$/;"	t
PFNGLXGETTRANSPARENTINDEXSUNPROC	drivers/GL/glxext.h	/^typedef Status ( * PFNGLXGETTRANSPARENTINDEXSUNPROC) (Display *dpy, Window overlay, Window underlay, long *pTransparentIndex);$/;"	t
PFNGLXGETVIDEOSYNCSGIPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXGETVIDEOSYNCSGIPROC) (unsigned int *count);$/;"	t
PFNGLXGETVISUALFROMFBCONFIGPROC	drivers/GL/glxext.h	/^typedef XVisualInfo * ( * PFNGLXGETVISUALFROMFBCONFIGPROC) (Display *dpy, GLXFBConfig config);$/;"	t
PFNGLXGETVISUALFROMFBCONFIGSGIXPROC	drivers/GL/glxext.h	/^typedef XVisualInfo * ( * PFNGLXGETVISUALFROMFBCONFIGSGIXPROC) (Display *dpy, GLXFBConfigSGIX config);$/;"	t
PFNGLXHYPERPIPEATTRIBSGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXHYPERPIPEATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int size, void *attribList);$/;"	t
PFNGLXHYPERPIPECONFIGSGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXHYPERPIPECONFIGSGIXPROC) (Display *dpy, int networkId, int npipes, GLXHyperpipeConfigSGIX *cfg, int *hpId);$/;"	t
PFNGLXIMPORTCONTEXTEXTPROC	drivers/GL/glxext.h	/^typedef GLXContext ( * PFNGLXIMPORTCONTEXTEXTPROC) (Display *dpy, GLXContextID contextID);$/;"	t
PFNGLXJOINSWAPGROUPSGIXPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXJOINSWAPGROUPSGIXPROC) (Display *dpy, GLXDrawable drawable, GLXDrawable member);$/;"	t
PFNGLXMAKECONTEXTCURRENTPROC	drivers/GL/glxext.h	/^typedef Bool ( * PFNGLXMAKECONTEXTCURRENTPROC) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx);$/;"	t
PFNGLXMAKECURRENTREADSGIPROC	drivers/GL/glxext.h	/^typedef Bool ( * PFNGLXMAKECURRENTREADSGIPROC) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx);$/;"	t
PFNGLXQUERYCHANNELDELTASSGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXQUERYCHANNELDELTASSGIXPROC) (Display *display, int screen, int channel, int *x, int *y, int *w, int *h);$/;"	t
PFNGLXQUERYCHANNELRECTSGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXQUERYCHANNELRECTSGIXPROC) (Display *display, int screen, int channel, int *dx, int *dy, int *dw, int *dh);$/;"	t
PFNGLXQUERYCONTEXTINFOEXTPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXQUERYCONTEXTINFOEXTPROC) (Display *dpy, GLXContext context, int attribute, int *value);$/;"	t
PFNGLXQUERYCONTEXTPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXQUERYCONTEXTPROC) (Display *dpy, GLXContext ctx, int attribute, int *value);$/;"	t
PFNGLXQUERYDRAWABLEPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXQUERYDRAWABLEPROC) (Display *dpy, GLXDrawable draw, int attribute, unsigned int *value);$/;"	t
PFNGLXQUERYFRAMETRACKINGMESAPROC	drivers/GL/glx.h	/^typedef int (*PFNGLXQUERYFRAMETRACKINGMESAPROC)(Display *dpy, GLXDrawable drawable, int64_t *swapCount, int64_t *missedFrames, float *lastMissedUsage);$/;"	t
PFNGLXQUERYGLXPBUFFERSGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value);$/;"	t
PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int size, void *returnAttribList);$/;"	t
PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int size, void *attribList, void *returnAttribList);$/;"	t
PFNGLXQUERYHYPERPIPECONFIGSGIXPROC	drivers/GL/glxext.h	/^typedef GLXHyperpipeConfigSGIX * ( * PFNGLXQUERYHYPERPIPECONFIGSGIXPROC) (Display *dpy, int hpId, int *npipes);$/;"	t
PFNGLXQUERYHYPERPIPENETWORKSGIXPROC	drivers/GL/glxext.h	/^typedef GLXHyperpipeNetworkSGIX * ( * PFNGLXQUERYHYPERPIPENETWORKSGIXPROC) (Display *dpy, int *npipes);$/;"	t
PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC	drivers/GL/glxext.h	/^typedef Bool ( * PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC) (Display *dpy, int screen, int *max);$/;"	t
PFNGLXRELEASEBUFFERSMESAPROC	drivers/GL/glxext.h	/^typedef Bool ( * PFNGLXRELEASEBUFFERSMESAPROC) (Display *dpy, GLXDrawable drawable);$/;"	t
PFNGLXSCRENABLEEXTENSIONPROC	drivers/GL/dri_interface.h	/^typedef void (* PFNGLXSCRENABLEEXTENSIONPROC) ( void *psc, const char * name );$/;"	t
PFNGLXSCRENABLEEXTENSIONPROC	drivers/GL/internal/dri_interface.h	/^typedef void (* PFNGLXSCRENABLEEXTENSIONPROC) ( void *psc, const char * name );$/;"	t
PFNGLXSELECTEVENTPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXSELECTEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long event_mask);$/;"	t
PFNGLXSELECTEVENTSGIXPROC	drivers/GL/glxext.h	/^typedef void ( * PFNGLXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask);$/;"	t
PFNGLXSET3DFXMODEMESAPROC	drivers/GL/glxext.h	/^typedef Bool ( * PFNGLXSET3DFXMODEMESAPROC) (int mode);$/;"	t
PFNGLXSWAPBUFFERSMSCOMLPROC	drivers/GL/glxext.h	/^typedef int64_t ( * PFNGLXSWAPBUFFERSMSCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder);$/;"	t
PFNGLXSWAPINTERVALMESAPROC	drivers/GL/glx.h	/^typedef int (*PFNGLXSWAPINTERVALMESAPROC)(unsigned int interval);$/;"	t
PFNGLXSWAPINTERVALSGIPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXSWAPINTERVALSGIPROC) (int interval);$/;"	t
PFNGLXWAITFORMSCOMLPROC	drivers/GL/glxext.h	/^typedef Bool ( * PFNGLXWAITFORMSCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder, int64_t *ust, int64_t *msc, int64_t *sbc);$/;"	t
PFNGLXWAITFORSBCOMLPROC	drivers/GL/glxext.h	/^typedef Bool ( * PFNGLXWAITFORSBCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_sbc, int64_t *ust, int64_t *msc, int64_t *sbc);$/;"	t
PFNGLXWAITVIDEOSYNCSGIPROC	drivers/GL/glxext.h	/^typedef int ( * PFNGLXWAITVIDEOSYNCSGIPROC) (int divisor, int remainder, unsigned int *count);$/;"	t
PGBoxFromPolygon	drivers/PostgreSQL/TePGUtils.cpp	/^TeBox PGBoxFromPolygon(char *str)$/;"	f
PGBoxRtree_decode	drivers/PostgreSQL/TePGUtils.cpp	/^TeBox PGBoxRtree_decode(char *str)$/;"	f
PGBoxRtree_encode	drivers/PostgreSQL/TePGUtils.cpp	/^string PGBoxRtree_encode(const TeBox& b)$/;"	f
PGBox_decode	drivers/PostgreSQL/TePGUtils.cpp	/^TeBox PGBox_decode(char *str)$/;"	f
PGBox_encode	drivers/PostgreSQL/TePGUtils.cpp	/^string PGBox_encode(const TeBox& b)$/;"	f
PGConcatLineString	drivers/PostgreSQL/TePGUtils.cpp	/^void PGConcatLineString(const TeLine2D& l, string& concatString)$/;"	f
PGCoord_decode	drivers/PostgreSQL/TePGUtils.cpp	/^TeCoord2D PGCoord_decode(char *str, char* *s)$/;"	f
PGCoord_encode	drivers/PostgreSQL/TePGUtils.cpp	/^string PGCoord_encode(const TeCoord2D& c)$/;"	f
PGGEOMPOLYGON_COORDS_DELIM	drivers/PostgreSQL/TePGUtils.h	57;"	d
PGHDR1_TO_PAGE	drivers/SQLite/sqlite3/sqlite3.c	35959;"	d	file:
PGHDR_DIRTY	drivers/SQLite/sqlite3/sqlite3.c	8867;"	d	file:
PGHDR_DONT_WRITE	drivers/SQLite/sqlite3/sqlite3.c	8872;"	d	file:
PGHDR_NEED_READ	drivers/SQLite/sqlite3/sqlite3.c	8870;"	d	file:
PGHDR_NEED_SYNC	drivers/SQLite/sqlite3/sqlite3.c	8868;"	d	file:
PGHDR_REUSE_UNLIKELY	drivers/SQLite/sqlite3/sqlite3.c	8871;"	d	file:
PGLYPHMETRICSFLOAT	drivers/GL/glut.h	/^typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT, *PGLYPHMETRICSFLOAT, *LPGLYPHMETRICSFLOAT;$/;"	t	typeref:struct:
PGLYPHMETRICSFLOAT	drivers/GL/mesa_wgl.h	/^typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT, *PGLYPHMETRICSFLOAT, *LPGLYPHMETRICSFLOAT;$/;"	t	typeref:struct:
PGLine_decode	drivers/PostgreSQL/TePGUtils.cpp	/^TeLine2D PGLine_decode(char *str, char* *sd)$/;"	f
PGLinestring_decode	drivers/PostgreSQL/TePGUtils.cpp	/^TeLine2D PGLinestring_decode(char *str)$/;"	f
PGMakePolygon	drivers/PostgreSQL/TePGUtils.cpp	/^string PGMakePolygon(const TeBox& box)$/;"	f
PGNode_encode	drivers/PostgreSQL/TePGUtils.cpp	/^string PGNode_encode(const TeNode& p)$/;"	f
PGPoint_decode	drivers/PostgreSQL/TePGUtils.cpp	/^TePoint PGPoint_decode(char *str)$/;"	f
PGPoint_encode	drivers/PostgreSQL/TePGUtils.cpp	/^string PGPoint_encode(const TePoint& p)$/;"	f
PGPolygon_decode	drivers/PostgreSQL/TePGUtils.cpp	/^TePolygon PGPolygon_decode(char *str)$/;"	f
PG_BIT_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_BIT_TYPE = 1560;$/;"	v
PG_BOOL_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_BOOL_TYPE = 16;$/;"	v
PG_BOX_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_BOX_TYPE = 603;$/;"	v
PG_BPCHAR_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_BPCHAR_TYPE = 1042;$/;"	v
PG_BYTEA_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_BYTEA_TYPE = 17;$/;"	v
PG_CHAR_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_CHAR_TYPE = 18;$/;"	v
PG_CIRCLE_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_CIRCLE_TYPE = 718;$/;"	v
PG_DATE_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_DATE_TYPE = 1082;$/;"	v
PG_FLOAT8_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_FLOAT8_TYPE = 701;$/;"	v
PG_INT2_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_INT2_TYPE = 21;$/;"	v
PG_INT4_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_INT4_TYPE = 23;$/;"	v
PG_INT8_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_INT8_TYPE = 20;$/;"	v
PG_INTERVAL_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_INTERVAL_TYPE = 1186;$/;"	v
PG_LINE_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_LINE_TYPE = 628;$/;"	v
PG_LSEG_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_LSEG_TYPE = 601;$/;"	v
PG_MONEY_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_MONEY_TYPE = 790;$/;"	v
PG_NAME_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_NAME_TYPE = 19;$/;"	v
PG_NUMERIC_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_NUMERIC_TYPE = 1700;$/;"	v
PG_OID_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_OID_TYPE = 26;$/;"	v
PG_PATH_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_PATH_TYPE = 602;$/;"	v
PG_PG_FLOAT4_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_PG_FLOAT4_TYPE = 700;$/;"	v
PG_POINT_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_POINT_TYPE = 600;$/;"	v
PG_POLYGON_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_POLYGON_TYPE = 604;$/;"	v
PG_TEXT_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_TEXT_TYPE = 25;$/;"	v
PG_TIMESTAMPTZ_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_TIMESTAMPTZ_TYPE = 1184;$/;"	v
PG_TIMESTAMP_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_TIMESTAMP_TYPE = 1114;$/;"	v
PG_TIMETZ_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_TIMETZ_TYPE = 1266;$/;"	v
PG_TIME_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_TIME_TYPE = 1083;$/;"	v
PG_VARBIT_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_VARBIT_TYPE = 1562;$/;"	v
PG_VARCHAR_TYPE	drivers/PostgreSQL/TePGInterface.h	/^const Oid PG_VARCHAR_TYPE = 1043;$/;"	v
PGroup	drivers/SQLite/sqlite3/sqlite3.c	/^struct PGroup {$/;"	s	file:
PGroup	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct PGroup PGroup;$/;"	t	typeref:struct:PGroup	file:
PI	image_processing/TePDIGeneralizedIHSFusion.cpp	13;"	d	file:
PI	image_processing/TePDIIHSWaveletFusion.hpp	33;"	d
PIE_BINARY	kernel/TeGraph.h	40;"	d
PIXELFORMATDESCRIPTOR	drivers/GL/mesa_wgl.h	/^typedef struct tagPIXELFORMATDESCRIPTOR PIXELFORMATDESCRIPTOR, *PPIXELFORMATDESCRIPTOR, *LPPIXELFORMATDESCRIPTOR;$/;"	t	typeref:struct:tagPIXELFORMATDESCRIPTOR
PIdiv2	image_processing/TePDIGeneralizedIHSFusion.cpp	14;"	d	file:
PImult2	image_processing/TePDIGeneralizedIHSFusion.cpp	16;"	d	file:
PImult3div2	image_processing/TePDIGeneralizedIHSFusion.cpp	15;"	d	file:
PKG_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        PKG_ATTR_COUNT = 2,$/;"	e	enum:oracle::occi::MetaData::AttrCount
PLAYERPLANEDESCRIPTOR	drivers/GL/glut.h	/^typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR, *PLAYERPLANEDESCRIPTOR, *LPLAYERPLANEDESCRIPTOR;$/;"	t	typeref:struct:
PLAYERPLANEDESCRIPTOR	drivers/GL/mesa_wgl.h	/^typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR, *PLAYERPLANEDESCRIPTOR, *LPLAYERPLANEDESCRIPTOR;$/;"	t	typeref:struct:
PLINE_ERROR	kernel/TeErrorLog.h	/^    PLINE_ERROR,$/;"	e	enum:TeErrorType
PLUGININFO_H	drivers/spl/PluginInfo.h	23;"	d
PLUGINPARAMETERSCONTAINER_H	drivers/spl/PluginsParametersContainer.h	28;"	d
PLUGINPARAMETERS_H	drivers/spl/PluginParameters.h	23;"	d
PLUGINPARAMETERS_VERSION	drivers/spl/PluginParameters.h	25;"	d
PLUGINSMANAGER_H	drivers/spl/PluginsManager.h	23;"	d
POINT_BINARY	kernel/TeGraph.h	43;"	d
POLYSHAPE_IS_NOT_RING	kernel/TeErrorLog.h	/^    POLYSHAPE_IS_NOT_RING,$/;"	e	enum:TeErrorType
POSITION_LIST_END	drivers/SQLite/sqlite3/sqlite3.c	116418;"	d	file:
POSITION_SEARCH	image_processing/TePDIBaatz.hpp	31;"	d
POSTGRES_EPOCH_JDATE	drivers/PostgreSQL/TePGInterface.cpp	200;"	d	file:
POS_COLUMN	drivers/SQLite/sqlite3/sqlite3.c	114496;"	d	file:
POS_END	drivers/SQLite/sqlite3/sqlite3.c	114497;"	d	file:
PObject	drivers/Oracle/OCI/include/occiObjects.h	/^class PObject$/;"	c	namespace:oracle::occi
PPCNode	drivers/spl/PluginsParametersContainer.h	/^      PPCNode() {};$/;"	f	class:PPCNode
PPCNode	drivers/spl/PluginsParametersContainer.h	/^  class PPCNode : public PPCNodeInterface {$/;"	c
PPCNodeInterface	drivers/spl/PluginsParametersContainer.h	/^      PPCNodeInterface() {};$/;"	f	class:PPCNodeInterface
PPCNodeInterface	drivers/spl/PluginsParametersContainer.h	/^  class TLSPL_DLL PPCNodeInterface {$/;"	c
PPIXELFORMATDESCRIPTOR	drivers/GL/mesa_wgl.h	/^typedef struct tagPIXELFORMATDESCRIPTOR PIXELFORMATDESCRIPTOR, *PPIXELFORMATDESCRIPTOR, *LPPIXELFORMATDESCRIPTOR;$/;"	t	typeref:struct:
PRAGMA_EXPORT_SUPPORTED	drivers/GL/gl.h	71;"	d
PREPARED	drivers/Oracle/OCI/include/occiControl.h	/^    PREPARED,$/;"	e	enum:oracle::occi::Statement::Status
PRES_DEFAULT	drivers/Oracle/OCI/include/occiAQ.h	/^       PRES_DEFAULT = OCI_SUBSCR_PRES_DEFAULT,$/;"	e	enum:oracle::occi::aq::Subscription::Presentation
PRES_XML	drivers/Oracle/OCI/include/occiAQ.h	/^       PRES_XML = OCI_SUBSCR_PRES_XML$/;"	e	enum:oracle::occi::aq::Subscription::Presentation
PRINT	kernel/TeRedBlackTree.h	39;"	d
PROBABILITY	kernel/TeAttribute.h	/^{ ORDINAL, NOMINAL, RATIO, INTERVAL, CYCLIC, PROBABILITY, FUZZY };$/;"	e	enum:TeMeasurementScale
PROC	drivers/GL/glut.h	/^typedef int (GLUTAPIENTRY *PROC)();$/;"	t
PROJECTION_NOT_AVAILABLE	kernel/TeErrorLog.h	/^    PROJECTION_NOT_AVAILABLE,$/;"	e	enum:TeErrorType
PROTO_CBK	drivers/Oracle/OCI/include/occiAQ.h	/^       PROTO_CBK = OCI_SUBSCR_PROTO_OCI,$/;"	e	enum:oracle::occi::aq::Subscription::Protocol
PROTO_HTTP	drivers/Oracle/OCI/include/occiAQ.h	/^       PROTO_HTTP = OCI_SUBSCR_PROTO_HTTP$/;"	e	enum:oracle::occi::aq::Subscription::Protocol
PROTO_MAIL	drivers/Oracle/OCI/include/occiAQ.h	/^       PROTO_MAIL = OCI_SUBSCR_PROTO_MAIL,$/;"	e	enum:oracle::occi::aq::Subscription::Protocol
PROTO_SERVER	drivers/Oracle/OCI/include/occiAQ.h	/^       PROTO_SERVER = OCI_SUBSCR_PROTO_SERVER,$/;"	e	enum:oracle::occi::aq::Subscription::Protocol
PROXY_CONCHVERSION	drivers/SQLite/sqlite3/sqlite3.c	30472;"	d	file:
PROXY_DEFAULT	drivers/Oracle/OCI/include/occiControl.h	/^      {PROXY_DEFAULT$/;"	e	enum:oracle::occi::Connection::ProxyType
PROXY_HEADERLEN	drivers/SQLite/sqlite3/sqlite3.c	30473;"	d	file:
PROXY_HOSTIDLEN	drivers/SQLite/sqlite3/sqlite3.c	30434;"	d	file:
PROXY_MAXCONCHLEN	drivers/SQLite/sqlite3/sqlite3.c	30475;"	d	file:
PROXY_PATHINDEX	drivers/SQLite/sqlite3/sqlite3.c	30474;"	d	file:
PTF_INTKEY	drivers/SQLite/sqlite3/sqlite3.c	47415;"	d	file:
PTF_LEAF	drivers/SQLite/sqlite3/sqlite3.c	47418;"	d	file:
PTF_LEAFDATA	drivers/SQLite/sqlite3/sqlite3.c	47417;"	d	file:
PTF_ZERODATA	drivers/SQLite/sqlite3/sqlite3.c	47416;"	d	file:
PTRMAP_BTREE	drivers/SQLite/sqlite3/sqlite3.c	47758;"	d	file:
PTRMAP_FREEPAGE	drivers/SQLite/sqlite3/sqlite3.c	47755;"	d	file:
PTRMAP_ISPAGE	drivers/SQLite/sqlite3/sqlite3.c	47721;"	d	file:
PTRMAP_OVERFLOW1	drivers/SQLite/sqlite3/sqlite3.c	47756;"	d	file:
PTRMAP_OVERFLOW2	drivers/SQLite/sqlite3/sqlite3.c	47757;"	d	file:
PTRMAP_PAGENO	drivers/SQLite/sqlite3/sqlite3.c	47719;"	d	file:
PTRMAP_PTROFFSET	drivers/SQLite/sqlite3/sqlite3.c	47720;"	d	file:
PTRMAP_ROOTPAGE	drivers/SQLite/sqlite3/sqlite3.c	47754;"	d	file:
PTYPE_ARG	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_ARG = OCI_PTYPE_ARG$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_COL	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_COL = OCI_PTYPE_COL$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_DATABASE	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_DATABASE = OCI_PTYPE_DATABASE$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_FUNC	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_FUNC = OCI_PTYPE_FUNC$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_PKG	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_PKG = OCI_PTYPE_PKG$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_PROC	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_PROC = OCI_PTYPE_PROC$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_SCHEMA	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_SCHEMA = OCI_PTYPE_SCHEMA$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_SEQ	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_SEQ = OCI_PTYPE_SEQ$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_SYN	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_SYN = OCI_PTYPE_SYN$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_TABLE	drivers/Oracle/OCI/include/occiControl.h	/^           PTYPE_TABLE = OCI_PTYPE_TABLE$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_TYPE	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_TYPE = OCI_PTYPE_TYPE$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_TYPE_ARG	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_TYPE_ARG = OCI_PTYPE_TYPE_ARG$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_TYPE_ATTR	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_TYPE_ATTR = OCI_PTYPE_TYPE_ATTR$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_TYPE_COLL	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_TYPE_COLL = OCI_PTYPE_TYPE_COLL$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_TYPE_METHOD	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_TYPE_METHOD = OCI_PTYPE_TYPE_METHOD$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_TYPE_RESULT	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_TYPE_RESULT = OCI_PTYPE_TYPE_RESULT$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_UNK	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_UNK = OCI_PTYPE_UNK$/;"	e	enum:oracle::occi::MetaData::ParamType
PTYPE_VIEW	drivers/Oracle/OCI/include/occiControl.h	/^          ,PTYPE_VIEW = OCI_PTYPE_VIEW$/;"	e	enum:oracle::occi::MetaData::ParamType
Pager	drivers/SQLite/sqlite3/sqlite3.c	/^struct Pager {$/;"	s	file:
Pager	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Pager Pager;$/;"	t	typeref:struct:Pager	file:
PagerSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^struct PagerSavepoint {$/;"	s	file:
PagerSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct PagerSavepoint PagerSavepoint;$/;"	t	typeref:struct:PagerSavepoint	file:
PairHashFun	kernel/TeSparseMatrix.h	/^    PairHashFun(long prime=65537) \/\/ another prime number is possible$/;"	f	class:PairHashFun
PairHashFun	kernel/TeSparseMatrix.h	/^class PairHashFun$/;"	c
Pallete2ThreeBand	kernel/TeRasterTransform.h	/^	void Pallete2ThreeBand(double icol, double ilin, double ocol, double olin)$/;"	f	class:TeRasterTransform
Pan	drivers/qt/TeQtCanvas.h	/^    enum CursorMode { Pointer, Area, Pan, Hand, SizeVer, SizeBDiag,$/;"	e	enum:TeQtCanvas::CursorMode
ParamType	drivers/Oracle/OCI/include/occiControl.h	/^     enum ParamType$/;"	g	class:oracle::occi::MetaData
ParameterScale	drivers/Firebird/ibpp/core/statement.cpp	/^int StatementImpl::ParameterScale(int varnum)$/;"	f	class:StatementImpl
ParameterSize	drivers/Firebird/ibpp/core/statement.cpp	/^int StatementImpl::ParameterSize(int varnum)$/;"	f	class:StatementImpl
ParameterSubtype	drivers/Firebird/ibpp/core/statement.cpp	/^int StatementImpl::ParameterSubtype(int varnum)$/;"	f	class:StatementImpl
ParameterType	drivers/Firebird/ibpp/core/statement.cpp	/^IBPP::SDT StatementImpl::ParameterType(int varnum)$/;"	f	class:StatementImpl
Parameters	drivers/Firebird/ibpp/core/statement.cpp	/^int StatementImpl::Parameters()$/;"	f	class:StatementImpl
Parse	drivers/SQLite/sqlite3/sqlite3.c	/^struct Parse {$/;"	s	file:
Parse	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Parse Parse;$/;"	t	typeref:struct:Parse	file:
ParseContext	drivers/SQLite/sqlite3/sqlite3.c	/^struct ParseContext {$/;"	s	file:
ParseContext	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct ParseContext ParseContext;$/;"	t	typeref:struct:ParseContext	file:
ParticaoH	stat/TeSkaterFunctions.h	3;"	d
Particiona	stat/TeSkaterFunctions.cpp	/^void  TParticao::Particiona(int N_Grp,long Pop){$/;"	f	class:TParticao
PayloadType	drivers/Oracle/OCI/include/occiAQ.h	/^     enum PayloadType$/;"	g	class:oracle::occi::aq::Message
Peek	image_processing/TePDIRegGrowSeg.hpp	/^        TePDIRGSCell* Peek()$/;"	f	class:CellStack
PendingList	drivers/SQLite/sqlite3/sqlite3.c	/^struct PendingList {$/;"	s	file:
PendingList	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct PendingList PendingList;$/;"	t	typeref:struct:PendingList	file:
Peso	stat/lista.h	/^      double Peso;$/;"	m	struct:TListaVizinho::Vizinho
Pesquisa	stat/hash.cpp	/^unsigned int  THash::Pesquisa(const char* SKey){$/;"	f	class:THash
PgFreeslot	drivers/SQLite/sqlite3/sqlite3.c	/^struct PgFreeslot {$/;"	s	file:
PgFreeslot	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct PgFreeslot PgFreeslot;$/;"	t	typeref:struct:PgFreeslot	file:
PgGeomPolygon2Te	drivers/PostgreSQL/TePGUtils.cpp	/^TeLine2D PgGeomPolygon2Te(char* strPolygon)$/;"	f
PgGeomPolygonCoordDecode	drivers/PostgreSQL/TePGUtils.cpp	/^TeCoord2D PgGeomPolygonCoordDecode(char *str, char* *s)$/;"	f
PgHdr	drivers/SQLite/sqlite3/sqlite3.c	/^struct PgHdr {$/;"	s	file:
PgHdr	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct PgHdr PgHdr;$/;"	t	typeref:struct:PgHdr	file:
PgHdr1	drivers/SQLite/sqlite3/sqlite3.c	/^struct PgHdr1 {$/;"	s	file:
PgHdr1	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct PgHdr1 PgHdr1;$/;"	t	typeref:struct:PgHdr1	file:
Pgno	drivers/SQLite/sqlite3/sqlite3.c	/^typedef u32 Pgno;$/;"	t	file:
PickNext	drivers/SQLite/sqlite3/sqlite3.c	127914;"	d	file:
PickNext	drivers/SQLite/sqlite3/sqlite3.c	127919;"	d	file:
PickSeeds	drivers/SQLite/sqlite3/sqlite3.c	127915;"	d	file:
PickSeeds	drivers/SQLite/sqlite3/sqlite3.c	127920;"	d	file:
Plan	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Plan(std::string& plan)$/;"	f	class:StatementImpl
Plot_choice	kernel/TeGraph.h	/^	int Plot_choice;       \/* graphics menu item choice *\/$/;"	m	class:TeGraphPlot
Plot_curves	kernel/TeGraph.h	/^	int Plot_curves;       \/* number of curves *\/$/;"	m	class:TeGraphPlot
Plot_label	kernel/TeGraph.h	/^	Labels Plot_label;              \/* labels for title, axes, and curves *\/$/;"	m	class:TeGraphPlot
Plot_points	kernel/TeGraph.h	/^	int Plot_points[CURVES_MAX];    \/* number of points in each curve *\/$/;"	m	class:TeGraphPlot
Plot_symbols	kernel/TeGraph.h	/^	int Plot_symbols;      \/* maximum number of symbols on curve *\/$/;"	m	class:TeGraphPlot
Plot_x	kernel/TeGraph.h	/^	Real_Vector Plot_x[CURVES_MAX]; \/* X data points for each curve *\/$/;"	m	class:TeGraphPlot
Plot_y	kernel/TeGraph.h	/^	Real_Vector Plot_y[CURVES_MAX]; \/* Y data points for each curve *\/$/;"	m	class:TeGraphPlot
PluginInfo	drivers/spl/PluginInfo.h	/^      PluginInfo() {};$/;"	f	class:PluginInfo
PluginInfo	drivers/spl/PluginInfo.h	/^  class TLSPL_DLL PluginInfo$/;"	c
PluginMetadata	drivers/spl/PluginMetadata.cpp	/^PluginMetadata::PluginMetadata()$/;"	f	class:PluginMetadata
PluginMetadata	drivers/spl/PluginMetadata.h	/^class TLSPL_DLL PluginMetadata$/;"	c
PluginParameters	drivers/spl/PluginParameters.cpp	/^PluginParameters::PluginParameters($/;"	f	class:PluginParameters
PluginParameters	drivers/spl/PluginParameters.cpp	/^PluginParameters::PluginParameters()$/;"	f	class:PluginParameters
PluginParameters	drivers/spl/PluginParameters.h	/^  class TLSPL_DLL PluginParameters$/;"	c
PluginsEmitter	drivers/spl/PluginsSignal.h	/^typedef TeSingleton<TeCommunicator<PluginsSignal> > PluginsEmitter;$/;"	t
PluginsManager	drivers/spl/PluginsManager.cpp	/^PluginsManager::PluginsManager()$/;"	f	class:PluginsManager
PluginsManager	drivers/spl/PluginsManager.h	/^  class TLSPL_DLL PluginsManager$/;"	c
PluginsParametersContainer	drivers/spl/PluginsParametersContainer.h	/^  class PluginsParametersContainer {$/;"	c
PluginsParametersContainer	drivers/spl/PluginsParametersContainer.h	/^PluginsParametersContainer< PluginsParametersContainerKeyT >::PluginsParametersContainer( $/;"	f	class:PluginsParametersContainer
PluginsParametersContainer	drivers/spl/PluginsParametersContainer.h	/^PluginsParametersContainer< PluginsParametersContainerKeyT >::PluginsParametersContainer()$/;"	f	class:PluginsParametersContainer
PluginsSignal	drivers/spl/PluginsSignal.cpp	/^PluginsSignal::PluginsSignal(const PluginsSignalType& signalType)$/;"	f	class:PluginsSignal
PluginsSignal	drivers/spl/PluginsSignal.h	/^class TLSPL_DLL PluginsSignal$/;"	c
PluginsSignalDatatype	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalDatatype { D_QT_CANVAS, D_QT_VIEWS, D_ABSTRACT_THEME, D_DATABASE, D_COORD2D, D_QT_THEMEITEM, D_STRING, D_PLUGIN_PARAMS, D_THEMETYPE };$/;"	g	class:PluginsSignal
PluginsSignalType	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalType { S_INACTIVE, S_DRAW_THEME, S_CREATE_THEME_ITEM, S_SET_DATABASE, S_POINT_QUERY, S_SHOW_THEME_POPUP, S_SET_QTTHEMEICON, S_REQUEST_PLUGIN_METADATA };$/;"	g	class:PluginsSignal
Pointer	drivers/qt/TeQtCanvas.h	/^    enum CursorMode { Pointer, Area, Pan, Hand, SizeVer, SizeBDiag,$/;"	e	enum:TeQtCanvas::CursorMode
PointsToVariant	drivers/ado/TeAdoDB.cpp	/^TeAdo::PointsToVariant(VARIANT &varArray, double* points, int npoints)$/;"	f	class:TeAdo
PoolType	drivers/Oracle/OCI/include/occiControl.h	/^    enum PoolType$/;"	g	class:oracle::occi::StatelessConnectionPool
Pop	image_processing/TePDIRegGrowSeg.hpp	/^        TePDIRGSCell* Pop()$/;"	f	class:CellStack
PopMin	stat/TeSkaterFunctions.h	/^  long PopMin;$/;"	m	class:TParticao
Populacao	stat/TeSkaterGrafo.h	/^      int Populacao;$/;"	m	struct:TSkaterGrafo::No_Grafo
Populacao	stat/filaR.h	/^      long Populacao; \/\/ Populacao do grupamento$/;"	m	struct:TFilaR::Item
PopulateInit_OCIXADMethodEntry	drivers/Oracle/OCI/include/ocixad.h	/^  OCIXADMethodPopulateInit  PopulateInit_OCIXADMethodEntry;$/;"	m	struct:OCIXADMethodEntry
PopulateTerm_OCIXADMethodEntry	drivers/Oracle/OCI/include/ocixad.h	/^  OCIXADMethodPopulateTerm  PopulateTerm_OCIXADMethodEntry;$/;"	m	struct:OCIXADMethodEntry
Populate_OCIXADMethodEntry	drivers/Oracle/OCI/include/ocixad.h	/^  OCIXADMethodPopulate      Populate_OCIXADMethodEntry;$/;"	m	struct:OCIXADMethodEntry
PostgreSQLUpdateDB302To310	utils/TeUpdateDBVersion.cpp	/^bool PostgreSQLUpdateDB302To310(TeDatabase* db, TeGeomRep rep, const string& geomTableName)$/;"	f
PreProcessingType	image_processing/TePDIGeneralizedIHSFusion.hpp	/^      enum PreProcessingType$/;"	g	class:TePDIGeneralizedIHSFusion
Predecessor	kernel/TeRedBlackTree.h	/^			virtual NODE* Predecessor(NODE* x) const$/;"	f	class:TeREDBLACK::TeRBTree
Prepare	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Prepare(const std::string& sql)$/;"	f	class:StatementImpl
Presentation	drivers/Oracle/OCI/include/occiAQ.h	/^    enum Presentation$/;"	g	class:oracle::occi::aq::Subscription
PreviousMedia_	image_processing/TePDIRegGrowSeg.hpp	/^        float           *PreviousMedia_;$/;"	m	class:TePDIRGSCell
Prim	stat/TeSkaterArvore.cpp	/^void  TArvore::Prim(TSkaterGrafo *Grafo) {$/;"	f	class:TArvore
Print	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRGSCell :: Print()$/;"	f	class:TePDIRGSCell
Print	kernel/TeMatrix.cpp	/^TeMatrix::Print() const$/;"	f	class:TeMatrix
Producer	drivers/Oracle/OCI/include/occiAQ.h	/^class Producer$/;"	c	namespace:oracle::occi::aq
Protocol	drivers/Oracle/OCI/include/occiAQ.h	/^    enum Protocol$/;"	g	class:oracle::occi::aq::Subscription
Proximo	stat/filaDouble.h	/^      struct it *Proximo;$/;"	m	struct:TFilaDouble::it	typeref:struct:TFilaDouble::it::it
Proximo	stat/filaInt.h	/^      struct it *Proximo;$/;"	m	struct:TFilaInt::it	typeref:struct:TFilaInt::it::it
Proximo	stat/filaR.cpp	/^int  TFilaR::Proximo(){$/;"	f	class:TFilaR
Proximo	stat/filaR.h	/^      struct Item *Proximo; \/\/ Proximo item na lista de raizes$/;"	m	struct:TFilaR::Item	typeref:struct:TFilaR::Item::Item
Proximo	stat/lista.h	/^      struct Vizinho *Proximo;$/;"	m	struct:TListaVizinho::Vizinho	typeref:struct:TListaVizinho::Vizinho::Vizinho
ProxyType	drivers/Oracle/OCI/include/occiControl.h	/^      enum ProxyType$/;"	g	class:oracle::occi::Connection
Ptr	drivers/Firebird/ibpp/core/ibpp.h	/^		Ptr() : mObject(0) { }$/;"	f	class:IBPP::Ptr
Ptr	drivers/Firebird/ibpp/core/ibpp.h	/^		Ptr(T* p) : mObject(p == 0 ? 0 : p->AddRef()) { }$/;"	f	class:IBPP::Ptr
Ptr	drivers/Firebird/ibpp/core/ibpp.h	/^		Ptr(const Ptr& r) : mObject(r.intf() == 0 ? 0 : r->AddRef()) {  }$/;"	f	class:IBPP::Ptr
Ptr	drivers/Firebird/ibpp/core/ibpp.h	/^	class Ptr$/;"	c	namespace:IBPP
Ptr	drivers/Oracle/OCI/include/occiCommon.h	/^class Ptr : public ConstPtr<T> {$/;"	c	namespace:oracle::occi
Push	image_processing/TePDIRegGrowSeg.hpp	/^        void Push(TePDIRGSCell* c)$/;"	f	class:CellStack
PushLevel	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::PushLevel( unsigned int level, $/;"	f	class:TePDIMallatWavelets
PutBinaryIntoVariant	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::PutBinaryIntoVariant(VARIANT &ovData, BYTE * pBuf,unsigned long cBufLen)$/;"	f	class:TeSqlServerSpatial
QUERYSEL	kernel/TePieBar.h	/^	enum			TePieBarInput {ALL, TABSEL, QUERYSEL, LEGEND, NOTTABSEL, NOTQUERYSEL, NOTLEGEND};$/;"	e	enum:TePieBar::TePieBarInput
QUICKBIRD	image_processing/TePDIWiSpeRFusion.hpp	/^      enum TeSatellitesTypes {CBERS, CBERS2B, IKONOS, QUICKBIRD, SPOT4, SPOT5};$/;"	e	enum:TePDIWiSpeRFusion::TeSatellitesTypes
QuadraticPickNext	drivers/SQLite/sqlite3/sqlite3.c	/^static RtreeCell *QuadraticPickNext($/;"	f	file:
QuadraticPickSeeds	drivers/SQLite/sqlite3/sqlite3.c	/^static void QuadraticPickSeeds($/;"	f	file:
Queda	stat/filaR.h	/^      double Queda; \/\/ Quanto cai o desvio com uma particao$/;"	m	struct:TFilaR::Item
QuedaDesv	stat/TeSkaterFunctions.h	/^  TFilaDouble *QuedaDesv; $/;"	m	class:TParticao
QueryInfo	drivers/Oracle/OCI/include/odci.h	/^   struct ODCIQueryInfo QueryInfo;$/;"	m	struct:ODCIIndexCtx	typeref:struct:ODCIIndexCtx::ODCIQueryInfo
QueryInfo	drivers/Oracle/OCI/include/odci.h	/^   struct ODCIQueryInfo_ind QueryInfo;$/;"	m	struct:ODCIIndexCtx_ind	typeref:struct:ODCIIndexCtx_ind::ODCIQueryInfo_ind
Queue	drivers/Firebird/ibpp/core/events.cpp	/^void EventsImpl::Queue()$/;"	f	class:EventsImpl
R1	stat/filaR.h	/^      int R1,R2; \/\/ Indice no vetor das raizes dos grupos gerados$/;"	m	struct:TFilaR::Item
R2	stat/filaR.h	/^      int R1,R2; \/\/ Indice no vetor das raizes dos grupos gerados$/;"	m	struct:TFilaR::Item
RAIO	stat/TeSkaterGrafo.h	11;"	d
RAMMemPol	image_processing/TePDIMatrix.hpp	/^        RAMMemPol,$/;"	e	enum:TePDIMatrix::MemoryPolicy
RAMMemPol	kernel/TeRasterMemManager.h	/^        RAMMemPol = 2,$/;"	e	enum:TeRasterMemManager::MemoryPolicy
RANSACRemotion	kernel/TeGTParams.h	/^        RANSACRemotion        $/;"	e	enum:TeGTParams::OutRemStrategy
RATIO	kernel/TeAttribute.h	/^{ ORDINAL, NOMINAL, RATIO, INTERVAL, CYCLIC, PROBABILITY, FUZZY };$/;"	e	enum:TeMeasurementScale
RAW	drivers/Oracle/OCI/include/occiAQ.h	/^        RAW,$/;"	e	enum:oracle::occi::aq::Message::PayloadType
RB	drivers/Firebird/ibpp/core/_ibpp.h	/^class RB$/;"	c	namespace:ibpp_internals
RB	drivers/Firebird/ibpp/core/_rb.cpp	/^RB::RB()$/;"	f	class:RB
RB	drivers/Firebird/ibpp/core/_rb.cpp	/^RB::RB(int Size)$/;"	f	class:RB
RDB_id_assigned	drivers/Firebird/ibpp/core/ibase.h	1690;"	d
RDB_system	drivers/Firebird/ibpp/core/ibase.h	1689;"	d
RDELIM_BOX	drivers/PostgreSQL/TePGUtils.h	51;"	d
RDELIM_LINESTRING	drivers/PostgreSQL/TePGUtils.h	45;"	d
RDELIM_PGGEOMPOLYGON	drivers/PostgreSQL/TePGUtils.h	55;"	d
RDELIM_POINT	drivers/PostgreSQL/TePGUtils.h	42;"	d
RDELIM_POLYGON	drivers/PostgreSQL/TePGUtils.h	48;"	d
READ	kernel/TeCoverageDecoder.h	45;"	d
READMARK_NOT_USED	drivers/SQLite/sqlite3/sqlite3.c	44555;"	d	file:
READY_FOR_READ	drivers/Oracle/OCI/include/occiControl.h	/^    enum Status {READY_FOR_READ, READY_FOR_WRITE, INACTIVE};$/;"	e	enum:oracle::occi::Stream::Status
READY_FOR_WRITE	drivers/Oracle/OCI/include/occiControl.h	/^    enum Status {READY_FOR_READ, READY_FOR_WRITE, INACTIVE};$/;"	e	enum:oracle::occi::Stream::Status
READ_LOCK	drivers/SQLite/sqlite3/sqlite3.c	47479;"	d	file:
READ_UTF16BE	drivers/SQLite/sqlite3/sqlite3.c	20189;"	d	file:
READ_UTF16LE	drivers/SQLite/sqlite3/sqlite3.c	20179;"	d	file:
READ_UTF8	drivers/SQLite/sqlite3/sqlite3.c	20226;"	d	file:
REARGUARD	drivers/SQLite/sqlite3/sqlite3.c	15115;"	d	file:
RECOMPOSE	image_processing/TePDIWaveletAtrous.hpp	/^      enum TeWaveletAtrousDirection {DECOMPOSE, RECOMPOSE};$/;"	e	enum:TePDIWaveletAtrous::TeWaveletAtrousDirection
RECTANGLE	kernel/TeGraph.cpp	56;"	d	file:
REDBLACKNODEPOINTER	kernel/TeRedBlackTree.h	/^			typedef NODE* REDBLACKNODEPOINTER;$/;"	t	class:TeREDBLACK::TeRBTree
REFRESH_OBJECT	drivers/Oracle/OCI/include/occiObjects.h	/^              REFRESH_OBJECT = 0x0004};$/;"	e	enum:oracle::occi::PObject::__anon83
REGIONS_WITH_HOLES	kernel/TeErrorLog.h	/^    REGIONS_WITH_HOLES,$/;"	e	enum:TeErrorType
REGISTER_TRACE	drivers/SQLite/sqlite3/sqlite3.c	63350;"	d	file:
REGISTER_TRACE	drivers/SQLite/sqlite3/sqlite3.c	63352;"	d	file:
REG_KEY_ROOT_INSTANCES	drivers/Firebird/ibpp/core/_ibpp.cpp	44;"	d	file:
REJECT	kernel/lexTemporal.cpp	611;"	d	file:
RESERVED_BYTE	drivers/SQLite/sqlite3/sqlite3.c	9205;"	d	file:
RESERVED_LOCK	drivers/SQLite/sqlite3/sqlite3.c	9141;"	d	file:
RESET	drivers/Oracle/OCI/include/cdemodp0.h	91;"	d
RESULTVISUAL_H	drivers/qt/resultVisual.h	23;"	d
RESULT_SET_AVAILABLE	drivers/Oracle/OCI/include/occiControl.h	/^    RESULT_SET_AVAILABLE,$/;"	e	enum:oracle::occi::Statement::Status
RGBtoHSV	utils/TeColorUtils.cpp	/^void RGBtoHSV(const double& r, const double& g, const double& b, double& h, double& s, double& v )$/;"	f
RMSE	image_processing/TePDIFusionIndexes.hpp	/^      enum TeFusionIndexes {CC, BIAS, VARDIF, SDD, UIQI, RMSE, ERGAS, SIMM, SERGAS, SCC};$/;"	e	enum:TePDIFusionIndexes::TeFusionIndexes
RMUST_CT_ACTIVE	drivers/Oracle/OCI/include/kustags.h	570;"	d
RMUST_CT_AIJINFO	drivers/Oracle/OCI/include/kustags.h	553;"	d
RMUST_CT_AIJJNLS	drivers/Oracle/OCI/include/kustags.h	554;"	d
RMUST_CT_AIPINFO	drivers/Oracle/OCI/include/kustags.h	569;"	d
RMUST_CT_ARPMS_STATS	drivers/Oracle/OCI/include/kustags.h	555;"	d
RMUST_CT_CLUSTER	drivers/Oracle/OCI/include/kustags.h	571;"	d
RMUST_CT_CPTINFO	drivers/Oracle/OCI/include/kustags.h	568;"	d
RMUST_CT_DASH	drivers/Oracle/OCI/include/kustags.h	577;"	d
RMUST_CT_DATABASES	drivers/Oracle/OCI/include/kustags.h	574;"	d
RMUST_CT_DBINFO	drivers/Oracle/OCI/include/kustags.h	556;"	d
RMUST_CT_DBR	drivers/Oracle/OCI/include/kustags.h	557;"	d
RMUST_CT_DB_MONITOR	drivers/Oracle/OCI/include/kustags.h	579;"	d
RMUST_CT_DISK_DEVICES	drivers/Oracle/OCI/include/kustags.h	576;"	d
RMUST_CT_FILE	drivers/Oracle/OCI/include/kustags.h	558;"	d
RMUST_CT_FILE_NODUP	drivers/Oracle/OCI/include/kustags.h	563;"	d
RMUST_CT_LAPMS_INDEX	drivers/Oracle/OCI/include/kustags.h	581;"	d
RMUST_CT_LAPMS_INDEX_STATS	drivers/Oracle/OCI/include/kustags.h	583;"	d
RMUST_CT_LAPMS_STATS	drivers/Oracle/OCI/include/kustags.h	584;"	d
RMUST_CT_LAPMS_TABLE	drivers/Oracle/OCI/include/kustags.h	580;"	d
RMUST_CT_LAPMS_TABLE_STATS	drivers/Oracle/OCI/include/kustags.h	582;"	d
RMUST_CT_PROCESS	drivers/Oracle/OCI/include/kustags.h	559;"	d
RMUST_CT_REC_CACHE	drivers/Oracle/OCI/include/kustags.h	564;"	d
RMUST_CT_RMUACL	drivers/Oracle/OCI/include/kustags.h	572;"	d
RMUST_CT_RTPMS_STATS	drivers/Oracle/OCI/include/kustags.h	562;"	d
RMUST_CT_RUJINFO	drivers/Oracle/OCI/include/kustags.h	565;"	d
RMUST_CT_SEQINFO	drivers/Oracle/OCI/include/kustags.h	567;"	d
RMUST_CT_STALL	drivers/Oracle/OCI/include/kustags.h	560;"	d
RMUST_CT_STALL_ACT	drivers/Oracle/OCI/include/kustags.h	561;"	d
RMUST_CT_TAPE_DEVICES	drivers/Oracle/OCI/include/kustags.h	575;"	d
RMUST_CT_TSNINFO	drivers/Oracle/OCI/include/kustags.h	566;"	d
RMUST_CT_USERS	drivers/Oracle/OCI/include/kustags.h	573;"	d
RMUST_CT_USER_DASH	drivers/Oracle/OCI/include/kustags.h	578;"	d
RMUST_K_TAG_LAST_TAG	drivers/Oracle/OCI/include/kustags.h	538;"	d
RMUST_MRT_IDXINFO	drivers/Oracle/OCI/include/kustags.h	552;"	d
RMUST_MRT_RELINFO	drivers/Oracle/OCI/include/kustags.h	551;"	d
RMUST_MRT_STAREA_MAPS	drivers/Oracle/OCI/include/kustags.h	550;"	d
RMUST_T_2PPL_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	287;"	d
RMUST_T_ABM_PNO	drivers/Oracle/OCI/include/kustags.h	398;"	d
RMUST_T_ABS_OVRWRT_ALLOWED	drivers/Oracle/OCI/include/kustags.h	500;"	d
RMUST_T_ABS_OVRWRT_IMMEDIATE	drivers/Oracle/OCI/include/kustags.h	501;"	d
RMUST_T_ABS_PRIORITY	drivers/Oracle/OCI/include/kustags.h	460;"	d
RMUST_T_ABS_QUIET_POINT	drivers/Oracle/OCI/include/kustags.h	471;"	d
RMUST_T_ABS_QUIET_POINT_FLG	drivers/Oracle/OCI/include/kustags.h	312;"	d
RMUST_T_ABW_BATCH_MAX	drivers/Oracle/OCI/include/kustags.h	236;"	d
RMUST_T_ABW_CLEAN_BUF_CNT	drivers/Oracle/OCI/include/kustags.h	235;"	d
RMUST_T_ABW_ENABLED	drivers/Oracle/OCI/include/kustags.h	469;"	d
RMUST_T_ABW_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	203;"	d
RMUST_T_ACCESS_MODE	drivers/Oracle/OCI/include/kustags.h	27;"	d
RMUST_T_ACE_ACCESS	drivers/Oracle/OCI/include/kustags.h	520;"	d
RMUST_T_ACE_FLAGS	drivers/Oracle/OCI/include/kustags.h	519;"	d
RMUST_T_ACE_SIZE	drivers/Oracle/OCI/include/kustags.h	412;"	d
RMUST_T_ACE_TEXT	drivers/Oracle/OCI/include/kustags.h	536;"	d
RMUST_T_ACE_TYPE	drivers/Oracle/OCI/include/kustags.h	413;"	d
RMUST_T_ACTIVATE_TAD_ADT	drivers/Oracle/OCI/include/kustags.h	333;"	d
RMUST_T_ACTIVATE_TAD_FDT	drivers/Oracle/OCI/include/kustags.h	334;"	d
RMUST_T_ACTIVATE_TAD_TDT	drivers/Oracle/OCI/include/kustags.h	335;"	d
RMUST_T_ACTIVE_BACKUP_TSN	drivers/Oracle/OCI/include/kustags.h	249;"	d
RMUST_T_ACTIVE_FLG	drivers/Oracle/OCI/include/kustags.h	28;"	d
RMUST_T_ACTIVE_USERS	drivers/Oracle/OCI/include/kustags.h	430;"	d
RMUST_T_ACTIVE_VBN	drivers/Oracle/OCI/include/kustags.h	211;"	d
RMUST_T_AIJDB_VBN	drivers/Oracle/OCI/include/kustags.h	212;"	d
RMUST_T_AIJFB_CNT	drivers/Oracle/OCI/include/kustags.h	223;"	d
RMUST_T_AIJFB_INDEX	drivers/Oracle/OCI/include/kustags.h	187;"	d
RMUST_T_AIJFB_VBN	drivers/Oracle/OCI/include/kustags.h	213;"	d
RMUST_T_AIJ_ARB_COUNT	drivers/Oracle/OCI/include/kustags.h	488;"	d
RMUST_T_AIJ_AUTO_SYNC	drivers/Oracle/OCI/include/kustags.h	174;"	d
RMUST_T_AIJ_CHK_CONTROL_RECS	drivers/Oracle/OCI/include/kustags.h	498;"	d
RMUST_T_AIJ_COMMIT_FLG	drivers/Oracle/OCI/include/kustags.h	29;"	d
RMUST_T_AIJ_CUR_MSN	drivers/Oracle/OCI/include/kustags.h	179;"	d
RMUST_T_AIJ_DATA_SYNC	drivers/Oracle/OCI/include/kustags.h	175;"	d
RMUST_T_AIJ_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	30;"	d
RMUST_T_AIJ_LEOF	drivers/Oracle/OCI/include/kustags.h	158;"	d
RMUST_T_AIJ_MAX_IO_BLKS	drivers/Oracle/OCI/include/kustags.h	452;"	d
RMUST_T_AIJ_MAX_IO_BYTES	drivers/Oracle/OCI/include/kustags.h	504;"	d
RMUST_T_AIJ_MIN_IO_BLKS	drivers/Oracle/OCI/include/kustags.h	453;"	d
RMUST_T_AIJ_MIN_IO_BYTES	drivers/Oracle/OCI/include/kustags.h	505;"	d
RMUST_T_AIJ_PEOF	drivers/Oracle/OCI/include/kustags.h	159;"	d
RMUST_T_AIJ_RCVR_VNO	drivers/Oracle/OCI/include/kustags.h	295;"	d
RMUST_T_AIJ_SHUTDOWN	drivers/Oracle/OCI/include/kustags.h	162;"	d
RMUST_T_AIJ_SRV_NAME	drivers/Oracle/OCI/include/kustags.h	177;"	d
RMUST_T_AIJ_STALL	drivers/Oracle/OCI/include/kustags.h	454;"	d
RMUST_T_AIJ_STALLED_MSN	drivers/Oracle/OCI/include/kustags.h	180;"	d
RMUST_T_AIJ_STATUS	drivers/Oracle/OCI/include/kustags.h	31;"	d
RMUST_T_AIJ_SWITCH_GBL_CKPT	drivers/Oracle/OCI/include/kustags.h	497;"	d
RMUST_T_AIJ_VNO	drivers/Oracle/OCI/include/kustags.h	176;"	d
RMUST_T_ALARM_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	32;"	d
RMUST_T_ALARM_NAME	drivers/Oracle/OCI/include/kustags.h	229;"	d
RMUST_T_ALG_COUNT	drivers/Oracle/OCI/include/kustags.h	226;"	d
RMUST_T_ALG_FACTORS	drivers/Oracle/OCI/include/kustags.h	227;"	d
RMUST_T_ALLOCATION	drivers/Oracle/OCI/include/kustags.h	33;"	d
RMUST_T_ALLOC_BLKCNT	drivers/Oracle/OCI/include/kustags.h	371;"	d
RMUST_T_ALL_LAPMS	drivers/Oracle/OCI/include/kustags.h	451;"	d
RMUST_T_ALL_LOGICAL_AREA_IDS	drivers/Oracle/OCI/include/kustags.h	450;"	d
RMUST_T_ALS_ACTIVE	drivers/Oracle/OCI/include/kustags.h	160;"	d
RMUST_T_ALS_CREATE_AIJ	drivers/Oracle/OCI/include/kustags.h	502;"	d
RMUST_T_ALS_FLG	drivers/Oracle/OCI/include/kustags.h	342;"	d
RMUST_T_ALS_MODE_FLG	drivers/Oracle/OCI/include/kustags.h	34;"	d
RMUST_T_ALS_PRIORITY	drivers/Oracle/OCI/include/kustags.h	461;"	d
RMUST_T_ALTER_CNT	drivers/Oracle/OCI/include/kustags.h	254;"	d
RMUST_T_ALTER_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	521;"	d
RMUST_T_ALTER_TAD_ADT	drivers/Oracle/OCI/include/kustags.h	255;"	d
RMUST_T_ALTER_TAD_FDT	drivers/Oracle/OCI/include/kustags.h	256;"	d
RMUST_T_ALTER_TAD_TDT	drivers/Oracle/OCI/include/kustags.h	257;"	d
RMUST_T_ALT_BOOTSTRAP_DBK	drivers/Oracle/OCI/include/kustags.h	276;"	d
RMUST_T_ANALYSE_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	522;"	d
RMUST_T_APF_DEPTH	drivers/Oracle/OCI/include/kustags.h	234;"	d
RMUST_T_APF_ENABLED	drivers/Oracle/OCI/include/kustags.h	468;"	d
RMUST_T_APF_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	202;"	d
RMUST_T_ARPMS	drivers/Oracle/OCI/include/kustags.h	35;"	d
RMUST_T_ASCII_DEADLOCK	drivers/Oracle/OCI/include/kustags.h	36;"	d
RMUST_T_ASCII_STALL	drivers/Oracle/OCI/include/kustags.h	37;"	d
RMUST_T_ASCII_TIMEOUT	drivers/Oracle/OCI/include/kustags.h	38;"	d
RMUST_T_AUDIT_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	39;"	d
RMUST_T_AUDIT_FIRST_FLG	drivers/Oracle/OCI/include/kustags.h	40;"	d
RMUST_T_AUDIT_FLAGS	drivers/Oracle/OCI/include/kustags.h	228;"	d
RMUST_T_AUDIT_FLUSH_FLG	drivers/Oracle/OCI/include/kustags.h	41;"	d
RMUST_T_AUTO_BKUP_FLG	drivers/Oracle/OCI/include/kustags.h	42;"	d
RMUST_T_BACKUP_DATE_ADT	drivers/Oracle/OCI/include/kustags.h	44;"	d
RMUST_T_BACKUP_DATE_FDT	drivers/Oracle/OCI/include/kustags.h	45;"	d
RMUST_T_BACKUP_DATE_TDT	drivers/Oracle/OCI/include/kustags.h	46;"	d
RMUST_T_BACKUP_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	523;"	d
RMUST_T_BACKUP_STATS	drivers/Oracle/OCI/include/kustags.h	306;"	d
RMUST_T_BACKUP_TSN	drivers/Oracle/OCI/include/kustags.h	310;"	d
RMUST_T_BIOCNT	drivers/Oracle/OCI/include/kustags.h	47;"	d
RMUST_T_BITMAP	drivers/Oracle/OCI/include/kustags.h	407;"	d
RMUST_T_BKUP_ACTIVE_FLG	drivers/Oracle/OCI/include/kustags.h	48;"	d
RMUST_T_BKUP_EDITNAM	drivers/Oracle/OCI/include/kustags.h	328;"	d
RMUST_T_BKUP_FAILED_FLG	drivers/Oracle/OCI/include/kustags.h	331;"	d
RMUST_T_BKUP_VNO	drivers/Oracle/OCI/include/kustags.h	49;"	d
RMUST_T_BOOTSTRAP_DBK	drivers/Oracle/OCI/include/kustags.h	250;"	d
RMUST_T_BUF_BLOCK_CNT	drivers/Oracle/OCI/include/kustags.h	155;"	d
RMUST_T_BUF_CNT	drivers/Oracle/OCI/include/kustags.h	507;"	d
RMUST_T_CACHE_FILENAME	drivers/Oracle/OCI/include/kustags.h	50;"	d
RMUST_T_CACHE_STATUS	drivers/Oracle/OCI/include/kustags.h	161;"	d
RMUST_T_CALC_PNO	drivers/Oracle/OCI/include/kustags.h	51;"	d
RMUST_T_CBL_ENABLED	drivers/Oracle/OCI/include/kustags.h	484;"	d
RMUST_T_CHECKSUM	drivers/Oracle/OCI/include/kustags.h	194;"	d
RMUST_T_CKPT_BLOCKS	drivers/Oracle/OCI/include/kustags.h	52;"	d
RMUST_T_CKPT_SEQ	drivers/Oracle/OCI/include/kustags.h	362;"	d
RMUST_T_CKPT_TIME	drivers/Oracle/OCI/include/kustags.h	53;"	d
RMUST_T_CKPT_TRANS_INTERVAL	drivers/Oracle/OCI/include/kustags.h	466;"	d
RMUST_T_CKPT_VBN	drivers/Oracle/OCI/include/kustags.h	351;"	d
RMUST_T_CKPT_VNO	drivers/Oracle/OCI/include/kustags.h	350;"	d
RMUST_T_CLIENT_BLKCNT	drivers/Oracle/OCI/include/kustags.h	237;"	d
RMUST_T_CLIENT_VBN	drivers/Oracle/OCI/include/kustags.h	214;"	d
RMUST_T_CLOSE_INTERVAL	drivers/Oracle/OCI/include/kustags.h	242;"	d
RMUST_T_CLOSE_MODE	drivers/Oracle/OCI/include/kustags.h	241;"	d
RMUST_T_CLUMP_PAGCNT	drivers/Oracle/OCI/include/kustags.h	293;"	d
RMUST_T_COMMIT_CSN	drivers/Oracle/OCI/include/kustags.h	387;"	d
RMUST_T_COMMIT_STALL	drivers/Oracle/OCI/include/kustags.h	455;"	d
RMUST_T_COMMIT_TSN	drivers/Oracle/OCI/include/kustags.h	309;"	d
RMUST_T_COMMIT_TSN_VEC	drivers/Oracle/OCI/include/kustags.h	389;"	d
RMUST_T_CONTROL_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	422;"	d
RMUST_T_CONVERT_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	524;"	d
RMUST_T_COPY_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	525;"	d
RMUST_T_CORRUPT_FLG	drivers/Oracle/OCI/include/kustags.h	54;"	d
RMUST_T_COSI_BLKCNT	drivers/Oracle/OCI/include/kustags.h	238;"	d
RMUST_T_COSI_VBN	drivers/Oracle/OCI/include/kustags.h	215;"	d
RMUST_T_COUPLED_FLG	drivers/Oracle/OCI/include/kustags.h	282;"	d
RMUST_T_CPT_INDEX	drivers/Oracle/OCI/include/kustags.h	514;"	d
RMUST_T_CPT_VBN	drivers/Oracle/OCI/include/kustags.h	216;"	d
RMUST_T_CPUTIM_RT	drivers/Oracle/OCI/include/kustags.h	55;"	d
RMUST_T_CREATE_DATE_ADT	drivers/Oracle/OCI/include/kustags.h	56;"	d
RMUST_T_CREATE_DATE_FDT	drivers/Oracle/OCI/include/kustags.h	57;"	d
RMUST_T_CREATE_DATE_TDT	drivers/Oracle/OCI/include/kustags.h	58;"	d
RMUST_T_CRL_ENABLED	drivers/Oracle/OCI/include/kustags.h	515;"	d
RMUST_T_CSM_FLG	drivers/Oracle/OCI/include/kustags.h	283;"	d
RMUST_T_CTJ_TSN_INTERVAL	drivers/Oracle/OCI/include/kustags.h	467;"	d
RMUST_T_CURRENT_TAD_ADT	drivers/Oracle/OCI/include/kustags.h	425;"	d
RMUST_T_CURRENT_TAD_FDT	drivers/Oracle/OCI/include/kustags.h	426;"	d
RMUST_T_CURRENT_TAD_TDT	drivers/Oracle/OCI/include/kustags.h	427;"	d
RMUST_T_CUR_ACTIVE_AIJ	drivers/Oracle/OCI/include/kustags.h	59;"	d
RMUST_T_CUR_AIJ_FILENAME	drivers/Oracle/OCI/include/kustags.h	60;"	d
RMUST_T_CUR_BKUP_FILENAME	drivers/Oracle/OCI/include/kustags.h	61;"	d
RMUST_T_CUR_BKUP_VNO	drivers/Oracle/OCI/include/kustags.h	62;"	d
RMUST_T_CUR_RCVR_VBN	drivers/Oracle/OCI/include/kustags.h	318;"	d
RMUST_T_CUR_RCVR_VNO	drivers/Oracle/OCI/include/kustags.h	63;"	d
RMUST_T_DAPF_DEPTH	drivers/Oracle/OCI/include/kustags.h	245;"	d
RMUST_T_DAPF_DEPTH_BUF_CNT	drivers/Oracle/OCI/include/kustags.h	456;"	d
RMUST_T_DAPF_ENABLED	drivers/Oracle/OCI/include/kustags.h	470;"	d
RMUST_T_DAPF_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	207;"	d
RMUST_T_DAPF_START_BUF_CNT	drivers/Oracle/OCI/include/kustags.h	457;"	d
RMUST_T_DAPF_THRESHOLD	drivers/Oracle/OCI/include/kustags.h	246;"	d
RMUST_T_DATABASE	drivers/Oracle/OCI/include/kustags.h	429;"	d
RMUST_T_DATA_CMIT_FLG	drivers/Oracle/OCI/include/kustags.h	64;"	d
RMUST_T_DBID	drivers/Oracle/OCI/include/kustags.h	65;"	d
RMUST_T_DBMSROOT	drivers/Oracle/OCI/include/kustags.h	191;"	d
RMUST_T_DBR_ACTIVITY	drivers/Oracle/OCI/include/kustags.h	66;"	d
RMUST_T_DBR_BUFFER_CNT	drivers/Oracle/OCI/include/kustags.h	480;"	d
RMUST_T_DBR_BUF_CNT	drivers/Oracle/OCI/include/kustags.h	67;"	d
RMUST_T_DBR_FLG	drivers/Oracle/OCI/include/kustags.h	343;"	d
RMUST_T_DBR_INDEX	drivers/Oracle/OCI/include/kustags.h	189;"	d
RMUST_T_DBR_PRIORITY	drivers/Oracle/OCI/include/kustags.h	462;"	d
RMUST_T_DB_BKUP_VNO	drivers/Oracle/OCI/include/kustags.h	69;"	d
RMUST_T_DB_MODIFIED_FLG	drivers/Oracle/OCI/include/kustags.h	210;"	d
RMUST_T_DB_VERSION	drivers/Oracle/OCI/include/kustags.h	423;"	d
RMUST_T_DEADLOCK_SEQ	drivers/Oracle/OCI/include/kustags.h	70;"	d
RMUST_T_DEADLOCK_SINCE_ADT	drivers/Oracle/OCI/include/kustags.h	71;"	d
RMUST_T_DEADLOCK_SINCE_RT	drivers/Oracle/OCI/include/kustags.h	73;"	d
RMUST_T_DEADLOCK_SINCE_TT	drivers/Oracle/OCI/include/kustags.h	72;"	d
RMUST_T_DEFAULT_FLG	drivers/Oracle/OCI/include/kustags.h	414;"	d
RMUST_T_DEFERRED_SNAP_FLG	drivers/Oracle/OCI/include/kustags.h	74;"	d
RMUST_T_DEF_AIJ_FILENAME	drivers/Oracle/OCI/include/kustags.h	75;"	d
RMUST_T_DEF_ALLOCATION	drivers/Oracle/OCI/include/kustags.h	76;"	d
RMUST_T_DEF_BKUP_FILENAME	drivers/Oracle/OCI/include/kustags.h	77;"	d
RMUST_T_DEF_BUF_CNT	drivers/Oracle/OCI/include/kustags.h	78;"	d
RMUST_T_DEF_EXTENSION	drivers/Oracle/OCI/include/kustags.h	79;"	d
RMUST_T_DELETED_TID	drivers/Oracle/OCI/include/kustags.h	405;"	d
RMUST_T_DELETE_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	421;"	d
RMUST_T_DELTA_HSEC	drivers/Oracle/OCI/include/kustags.h	171;"	d
RMUST_T_DEVDIR	drivers/Oracle/OCI/include/kustags.h	363;"	d
RMUST_T_DEVICE_CHAR	drivers/Oracle/OCI/include/kustags.h	443;"	d
RMUST_T_DEVICE_ERROR_CNT	drivers/Oracle/OCI/include/kustags.h	437;"	d
RMUST_T_DEVICE_NAME	drivers/Oracle/OCI/include/kustags.h	435;"	d
RMUST_T_DEVICE_STATUS	drivers/Oracle/OCI/include/kustags.h	436;"	d
RMUST_T_DEVICE_TYPE	drivers/Oracle/OCI/include/kustags.h	442;"	d
RMUST_T_DIOCNT	drivers/Oracle/OCI/include/kustags.h	80;"	d
RMUST_T_DUMP_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	526;"	d
RMUST_T_EMERGENCY_FLG	drivers/Oracle/OCI/include/kustags.h	332;"	d
RMUST_T_ENQCNT	drivers/Oracle/OCI/include/kustags.h	81;"	d
RMUST_T_EXECUTE_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	420;"	d
RMUST_T_EXTEND_BLKCNT	drivers/Oracle/OCI/include/kustags.h	372;"	d
RMUST_T_EXTENSION	drivers/Oracle/OCI/include/kustags.h	82;"	d
RMUST_T_EXT_COUNT	drivers/Oracle/OCI/include/kustags.h	83;"	d
RMUST_T_EXT_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	84;"	d
RMUST_T_EXT_PERCENT	drivers/Oracle/OCI/include/kustags.h	85;"	d
RMUST_T_FAST_COMMIT_FLG	drivers/Oracle/OCI/include/kustags.h	86;"	d
RMUST_T_FIB_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	201;"	d
RMUST_T_FIELD_NAMES	drivers/Oracle/OCI/include/kustags.h	165;"	d
RMUST_T_FILENAME	drivers/Oracle/OCI/include/kustags.h	87;"	d
RMUST_T_FILID_CNT	drivers/Oracle/OCI/include/kustags.h	156;"	d
RMUST_T_FILID_SLOTNUM	drivers/Oracle/OCI/include/kustags.h	43;"	d
RMUST_T_FILID_VBN	drivers/Oracle/OCI/include/kustags.h	217;"	d
RMUST_T_FREE_BLOCKS	drivers/Oracle/OCI/include/kustags.h	439;"	d
RMUST_T_FULL_BACKUP_TSN	drivers/Oracle/OCI/include/kustags.h	88;"	d
RMUST_T_FULL_BCK_TAD_ADT	drivers/Oracle/OCI/include/kustags.h	261;"	d
RMUST_T_FULL_BCK_TAD_FDT	drivers/Oracle/OCI/include/kustags.h	262;"	d
RMUST_T_FULL_BCK_TAD_TDT	drivers/Oracle/OCI/include/kustags.h	263;"	d
RMUST_T_FULL_RES_TAD_ADT	drivers/Oracle/OCI/include/kustags.h	273;"	d
RMUST_T_FULL_RES_TAD_FDT	drivers/Oracle/OCI/include/kustags.h	274;"	d
RMUST_T_FULL_RES_TAD_TDT	drivers/Oracle/OCI/include/kustags.h	275;"	d
RMUST_T_FULL_VER_TAD_ADT	drivers/Oracle/OCI/include/kustags.h	267;"	d
RMUST_T_FULL_VER_TAD_FDT	drivers/Oracle/OCI/include/kustags.h	268;"	d
RMUST_T_FULL_VER_TAD_TDT	drivers/Oracle/OCI/include/kustags.h	269;"	d
RMUST_T_GB_CNT	drivers/Oracle/OCI/include/kustags.h	89;"	d
RMUST_T_GB_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	90;"	d
RMUST_T_GOVERNOR_ENABLED	drivers/Oracle/OCI/include/kustags.h	185;"	d
RMUST_T_GROUP_SIZE	drivers/Oracle/OCI/include/kustags.h	391;"	d
RMUST_T_HARD_DATA_LOSS_FLG	drivers/Oracle/OCI/include/kustags.h	91;"	d
RMUST_T_HASHED_INDEX_FLG	drivers/Oracle/OCI/include/kustags.h	359;"	d
RMUST_T_HASH_LDBID_PRIME	drivers/Oracle/OCI/include/kustags.h	364;"	d
RMUST_T_HASH_PNO_PRIME	drivers/Oracle/OCI/include/kustags.h	365;"	d
RMUST_T_HIDDEN_FLG	drivers/Oracle/OCI/include/kustags.h	416;"	d
RMUST_T_HOT_ABS_SUSPEND	drivers/Oracle/OCI/include/kustags.h	506;"	d
RMUST_T_HOT_CHECKPOINT	drivers/Oracle/OCI/include/kustags.h	493;"	d
RMUST_T_HOT_DATA_SYNC_MODE	drivers/Oracle/OCI/include/kustags.h	492;"	d
RMUST_T_HOT_NETWORK_TIMEOUT	drivers/Oracle/OCI/include/kustags.h	475;"	d
RMUST_T_HRL_ENABLED	drivers/Oracle/OCI/include/kustags.h	483;"	d
RMUST_T_HRL_FLG	drivers/Oracle/OCI/include/kustags.h	251;"	d
RMUST_T_IDENTIFIER	drivers/Oracle/OCI/include/kustags.h	535;"	d
RMUST_T_IGNORE_FLG	drivers/Oracle/OCI/include/kustags.h	392;"	d
RMUST_T_IMAGENAME	drivers/Oracle/OCI/include/kustags.h	92;"	d
RMUST_T_INCONSISTENT_FLG	drivers/Oracle/OCI/include/kustags.h	93;"	d
RMUST_T_INCR_BACKUP_TSN	drivers/Oracle/OCI/include/kustags.h	311;"	d
RMUST_T_INC_RES_DATE_ADT	drivers/Oracle/OCI/include/kustags.h	94;"	d
RMUST_T_INC_RES_DATE_FDT	drivers/Oracle/OCI/include/kustags.h	95;"	d
RMUST_T_INC_RES_DATE_TDT	drivers/Oracle/OCI/include/kustags.h	96;"	d
RMUST_T_INC_RES_TAD_ADT	drivers/Oracle/OCI/include/kustags.h	258;"	d
RMUST_T_INC_RES_TAD_FDT	drivers/Oracle/OCI/include/kustags.h	259;"	d
RMUST_T_INC_RES_TAD_TDT	drivers/Oracle/OCI/include/kustags.h	260;"	d
RMUST_T_INC_VER_TAD_ADT	drivers/Oracle/OCI/include/kustags.h	270;"	d
RMUST_T_INC_VER_TAD_FDT	drivers/Oracle/OCI/include/kustags.h	271;"	d
RMUST_T_INC_VER_TAD_TDT	drivers/Oracle/OCI/include/kustags.h	272;"	d
RMUST_T_INDEX_ID	drivers/Oracle/OCI/include/kustags.h	447;"	d
RMUST_T_INDEX_NAME	drivers/Oracle/OCI/include/kustags.h	166;"	d
RMUST_T_INDEX_TYPE	drivers/Oracle/OCI/include/kustags.h	168;"	d
RMUST_T_INDEX_UNIQUE	drivers/Oracle/OCI/include/kustags.h	167;"	d
RMUST_T_INIT_ACTIVE_FLG	drivers/Oracle/OCI/include/kustags.h	97;"	d
RMUST_T_ISA_VIEW	drivers/Oracle/OCI/include/kustags.h	164;"	d
RMUST_T_IS_STALLED	drivers/Oracle/OCI/include/kustags.h	98;"	d
RMUST_T_JOURNAL_CNT	drivers/Oracle/OCI/include/kustags.h	99;"	d
RMUST_T_JOURNAL_NAME	drivers/Oracle/OCI/include/kustags.h	100;"	d
RMUST_T_JOURNAL_STATUS	drivers/Oracle/OCI/include/kustags.h	101;"	d
RMUST_T_LABEL	drivers/Oracle/OCI/include/kustags.h	438;"	d
RMUST_T_LADB_FLG	drivers/Oracle/OCI/include/kustags.h	198;"	d
RMUST_T_LAPMS	drivers/Oracle/OCI/include/kustags.h	448;"	d
RMUST_T_LAPMS_INDEX	drivers/Oracle/OCI/include/kustags.h	360;"	d
RMUST_T_LAREA_DBID	drivers/Oracle/OCI/include/kustags.h	399;"	d
RMUST_T_LAREA_EXT_CNT	drivers/Oracle/OCI/include/kustags.h	403;"	d
RMUST_T_LAREA_NAME	drivers/Oracle/OCI/include/kustags.h	401;"	d
RMUST_T_LAST_BACKUP_CSN	drivers/Oracle/OCI/include/kustags.h	265;"	d
RMUST_T_LAST_BACKUP_TSN	drivers/Oracle/OCI/include/kustags.h	264;"	d
RMUST_T_LAST_BKUP_VNO	drivers/Oracle/OCI/include/kustags.h	102;"	d
RMUST_T_LAST_COMMIT_TSN	drivers/Oracle/OCI/include/kustags.h	395;"	d
RMUST_T_LAST_FULL_BACKUP_TSN	drivers/Oracle/OCI/include/kustags.h	266;"	d
RMUST_T_LCKOPT_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	103;"	d
RMUST_T_LCS_ACTIVE	drivers/Oracle/OCI/include/kustags.h	181;"	d
RMUST_T_LCS_CONNECT_TIMEOUT	drivers/Oracle/OCI/include/kustags.h	494;"	d
RMUST_T_LCS_FLG	drivers/Oracle/OCI/include/kustags.h	346;"	d
RMUST_T_LCS_PRIORITY	drivers/Oracle/OCI/include/kustags.h	463;"	d
RMUST_T_LIMBO_FLG	drivers/Oracle/OCI/include/kustags.h	373;"	d
RMUST_T_LINKAGE_DBID	drivers/Oracle/OCI/include/kustags.h	104;"	d
RMUST_T_LIVE_BW_MAX	drivers/Oracle/OCI/include/kustags.h	458;"	d
RMUST_T_LKID	drivers/Oracle/OCI/include/kustags.h	105;"	d
RMUST_T_LOAD_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	527;"	d
RMUST_T_LOCK_TIMEOUT	drivers/Oracle/OCI/include/kustags.h	106;"	d
RMUST_T_LOCK_TIMEOUT_INTERVAL	drivers/Oracle/OCI/include/kustags.h	482;"	d
RMUST_T_LOGICAL_AREA_COUNT	drivers/Oracle/OCI/include/kustags.h	449;"	d
RMUST_T_LOGICAL_AREA_ID	drivers/Oracle/OCI/include/kustags.h	445;"	d
RMUST_T_LRS_ACTIVE	drivers/Oracle/OCI/include/kustags.h	183;"	d
RMUST_T_LRS_ACTIVE_FLG	drivers/Oracle/OCI/include/kustags.h	314;"	d
RMUST_T_LRS_FLG	drivers/Oracle/OCI/include/kustags.h	347;"	d
RMUST_T_LRS_GAP_TIMEOUT	drivers/Oracle/OCI/include/kustags.h	495;"	d
RMUST_T_LRS_GOVERNOR_ENABLED	drivers/Oracle/OCI/include/kustags.h	496;"	d
RMUST_T_LRS_PRIORITY	drivers/Oracle/OCI/include/kustags.h	464;"	d
RMUST_T_LRS_STATE	drivers/Oracle/OCI/include/kustags.h	182;"	d
RMUST_T_LSS_ACCESS_MODE	drivers/Oracle/OCI/include/kustags.h	323;"	d
RMUST_T_LSS_ACTIVE	drivers/Oracle/OCI/include/kustags.h	184;"	d
RMUST_T_LSS_ACTIVE_FLG	drivers/Oracle/OCI/include/kustags.h	313;"	d
RMUST_T_LSS_AIJ_VBN	drivers/Oracle/OCI/include/kustags.h	170;"	d
RMUST_T_LSS_AIJ_VNO	drivers/Oracle/OCI/include/kustags.h	169;"	d
RMUST_T_LSS_BUFFER_CNT	drivers/Oracle/OCI/include/kustags.h	322;"	d
RMUST_T_LSS_CKPT_INTRVL	drivers/Oracle/OCI/include/kustags.h	319;"	d
RMUST_T_LSS_FLG	drivers/Oracle/OCI/include/kustags.h	349;"	d
RMUST_T_LSS_LAG_FDT	drivers/Oracle/OCI/include/kustags.h	68;"	d
RMUST_T_LSS_ONLINE_FLG	drivers/Oracle/OCI/include/kustags.h	316;"	d
RMUST_T_LSS_QUIET_POINT_FLG	drivers/Oracle/OCI/include/kustags.h	317;"	d
RMUST_T_LSS_REF_COUNT	drivers/Oracle/OCI/include/kustags.h	186;"	d
RMUST_T_LSS_RESOLVE_2PC	drivers/Oracle/OCI/include/kustags.h	324;"	d
RMUST_T_LSS_STARTUP_TAD_ADT	drivers/Oracle/OCI/include/kustags.h	325;"	d
RMUST_T_LSS_STARTUP_TAD_FDT	drivers/Oracle/OCI/include/kustags.h	326;"	d
RMUST_T_LSS_STARTUP_TAD_TDT	drivers/Oracle/OCI/include/kustags.h	327;"	d
RMUST_T_LSS_STATE	drivers/Oracle/OCI/include/kustags.h	173;"	d
RMUST_T_LSS_TIMEOUT_INTRVL	drivers/Oracle/OCI/include/kustags.h	321;"	d
RMUST_T_LSS_WAIT_INTRVL	drivers/Oracle/OCI/include/kustags.h	320;"	d
RMUST_T_MAJ_VER	drivers/Oracle/OCI/include/kustags.h	192;"	d
RMUST_T_MASTER_DB_FLG	drivers/Oracle/OCI/include/kustags.h	315;"	d
RMUST_T_MAX_BLOCKS	drivers/Oracle/OCI/include/kustags.h	518;"	d
RMUST_T_MAX_DBR_CNT	drivers/Oracle/OCI/include/kustags.h	459;"	d
RMUST_T_MAX_EXT_PAGCNT	drivers/Oracle/OCI/include/kustags.h	107;"	d
RMUST_T_MAX_FREE_LEN	drivers/Oracle/OCI/include/kustags.h	303;"	d
RMUST_T_MAX_GB_PER_USER	drivers/Oracle/OCI/include/kustags.h	108;"	d
RMUST_T_MAX_NEW_SEG_LEN	drivers/Oracle/OCI/include/kustags.h	304;"	d
RMUST_T_MAX_NODE_CNT	drivers/Oracle/OCI/include/kustags.h	109;"	d
RMUST_T_MAX_PAG_BLKCNT	drivers/Oracle/OCI/include/kustags.h	231;"	d
RMUST_T_MAX_PIB_COUNT	drivers/Oracle/OCI/include/kustags.h	232;"	d
RMUST_T_MAX_PNO	drivers/Oracle/OCI/include/kustags.h	110;"	d
RMUST_T_MAX_RESERVE_COUNT	drivers/Oracle/OCI/include/kustags.h	370;"	d
RMUST_T_MAX_SEG_LEN	drivers/Oracle/OCI/include/kustags.h	305;"	d
RMUST_T_MAX_USER_CNT	drivers/Oracle/OCI/include/kustags.h	111;"	d
RMUST_T_MAX_WS_COUNT	drivers/Oracle/OCI/include/kustags.h	357;"	d
RMUST_T_MEMBIT_VBN	drivers/Oracle/OCI/include/kustags.h	218;"	d
RMUST_T_MIN_EXT_PAGCNT	drivers/Oracle/OCI/include/kustags.h	112;"	d
RMUST_T_MIN_PAG_BLKCNT	drivers/Oracle/OCI/include/kustags.h	230;"	d
RMUST_T_MIN_VER	drivers/Oracle/OCI/include/kustags.h	193;"	d
RMUST_T_MIXED_FMT_FLG	drivers/Oracle/OCI/include/kustags.h	113;"	d
RMUST_T_MODIFIED_FLG	drivers/Oracle/OCI/include/kustags.h	114;"	d
RMUST_T_MODULO_HASH_FLG	drivers/Oracle/OCI/include/kustags.h	404;"	d
RMUST_T_MOD_HASH_KEY_OFFSET	drivers/Oracle/OCI/include/kustags.h	406;"	d
RMUST_T_MONID	drivers/Oracle/OCI/include/kustags.h	337;"	d
RMUST_T_MONITOR_BUFFERS	drivers/Oracle/OCI/include/kustags.h	432;"	d
RMUST_T_MONITOR_LOG	drivers/Oracle/OCI/include/kustags.h	431;"	d
RMUST_T_MONITOR_UP_FLG	drivers/Oracle/OCI/include/kustags.h	537;"	d
RMUST_T_MOUNT_CNT	drivers/Oracle/OCI/include/kustags.h	441;"	d
RMUST_T_MOVE_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	528;"	d
RMUST_T_NAME	drivers/Oracle/OCI/include/kustags.h	358;"	d
RMUST_T_NEW_VERSION_FLG	drivers/Oracle/OCI/include/kustags.h	115;"	d
RMUST_T_NEXT_SEQ	drivers/Oracle/OCI/include/kustags.h	390;"	d
RMUST_T_NODE	drivers/Oracle/OCI/include/kustags.h	424;"	d
RMUST_T_NODE_DATABASES	drivers/Oracle/OCI/include/kustags.h	428;"	d
RMUST_T_NODE_NAME	drivers/Oracle/OCI/include/kustags.h	382;"	d
RMUST_T_NOPROPAGATE_FLG	drivers/Oracle/OCI/include/kustags.h	417;"	d
RMUST_T_NUMBIO	drivers/Oracle/OCI/include/kustags.h	116;"	d
RMUST_T_NUMDIO	drivers/Oracle/OCI/include/kustags.h	117;"	d
RMUST_T_OLDEST_TSN	drivers/Oracle/OCI/include/kustags.h	386;"	d
RMUST_T_OPEN_MODE_FLG	drivers/Oracle/OCI/include/kustags.h	118;"	d
RMUST_T_OPEN_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	529;"	d
RMUST_T_OPER_CLASS	drivers/Oracle/OCI/include/kustags.h	119;"	d
RMUST_T_OPT_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	205;"	d
RMUST_T_OVERWRITE_FLG	drivers/Oracle/OCI/include/kustags.h	120;"	d
RMUST_T_OVERWRITTEN_FLG	drivers/Oracle/OCI/include/kustags.h	121;"	d
RMUST_T_P0_VBN	drivers/Oracle/OCI/include/kustags.h	292;"	d
RMUST_T_PAGES_PER_SPAM	drivers/Oracle/OCI/include/kustags.h	294;"	d
RMUST_T_PAG_BLKCNT	drivers/Oracle/OCI/include/kustags.h	122;"	d
RMUST_T_PAG_DBID	drivers/Oracle/OCI/include/kustags.h	280;"	d
RMUST_T_PAG_LEN	drivers/Oracle/OCI/include/kustags.h	296;"	d
RMUST_T_PAG_PAD_LEN	drivers/Oracle/OCI/include/kustags.h	302;"	d
RMUST_T_PAREA_DBID	drivers/Oracle/OCI/include/kustags.h	400;"	d
RMUST_T_PARENT_NODE_NAME	drivers/Oracle/OCI/include/kustags.h	383;"	d
RMUST_T_PDBID	drivers/Oracle/OCI/include/kustags.h	397;"	d
RMUST_T_PGFCNT	drivers/Oracle/OCI/include/kustags.h	123;"	d
RMUST_T_PGFLTS	drivers/Oracle/OCI/include/kustags.h	124;"	d
RMUST_T_PID	drivers/Oracle/OCI/include/kustags.h	125;"	d
RMUST_T_PLATFORM	drivers/Oracle/OCI/include/kustags.h	172;"	d
RMUST_T_PLT_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	204;"	d
RMUST_T_PNO	drivers/Oracle/OCI/include/kustags.h	396;"	d
RMUST_T_PPSP1	drivers/Oracle/OCI/include/kustags.h	297;"	d
RMUST_T_PREPARED_FLG	drivers/Oracle/OCI/include/kustags.h	374;"	d
RMUST_T_PROCNAME	drivers/Oracle/OCI/include/kustags.h	126;"	d
RMUST_T_PROC_INDEX	drivers/Oracle/OCI/include/kustags.h	188;"	d
RMUST_T_PROTECTED_FLG	drivers/Oracle/OCI/include/kustags.h	415;"	d
RMUST_T_PSTATE	drivers/Oracle/OCI/include/kustags.h	127;"	d
RMUST_T_QUIET_VNO	drivers/Oracle/OCI/include/kustags.h	352;"	d
RMUST_T_RCACHE_CNT	drivers/Oracle/OCI/include/kustags.h	244;"	d
RMUST_T_RCACHE_DBID	drivers/Oracle/OCI/include/kustags.h	307;"	d
RMUST_T_RCACHE_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	290;"	d
RMUST_T_RCACHE_INDEX	drivers/Oracle/OCI/include/kustags.h	510;"	d
RMUST_T_RCACHE_INSERT_ENABLED	drivers/Oracle/OCI/include/kustags.h	486;"	d
RMUST_T_RCACHE_LATCH_SPIN_COUNT	drivers/Oracle/OCI/include/kustags.h	489;"	d
RMUST_T_RCACHE_RCRL_COUNT	drivers/Oracle/OCI/include/kustags.h	472;"	d
RMUST_T_RCACHE_VBN	drivers/Oracle/OCI/include/kustags.h	243;"	d
RMUST_T_RCS_ABORT_SWEEP	drivers/Oracle/OCI/include/kustags.h	487;"	d
RMUST_T_RCS_BATCH_COUNT	drivers/Oracle/OCI/include/kustags.h	473;"	d
RMUST_T_RCS_CHECKPOINT	drivers/Oracle/OCI/include/kustags.h	474;"	d
RMUST_T_RCS_CKPT_BUFFER_CNT	drivers/Oracle/OCI/include/kustags.h	508;"	d
RMUST_T_RCS_COLD_HIGH	drivers/Oracle/OCI/include/kustags.h	478;"	d
RMUST_T_RCS_COLD_LOW	drivers/Oracle/OCI/include/kustags.h	477;"	d
RMUST_T_RCS_COLD_RECORDS	drivers/Oracle/OCI/include/kustags.h	479;"	d
RMUST_T_RCS_FLG	drivers/Oracle/OCI/include/kustags.h	348;"	d
RMUST_T_RCS_PRIORITY	drivers/Oracle/OCI/include/kustags.h	465;"	d
RMUST_T_RCS_SWEEP_INTERVAL	drivers/Oracle/OCI/include/kustags.h	248;"	d
RMUST_T_RCS_SWP_INT	drivers/Oracle/OCI/include/kustags.h	476;"	d
RMUST_T_RCVR_QUIET_POINT_FLG	drivers/Oracle/OCI/include/kustags.h	208;"	d
RMUST_T_RCWS_UNMARK_THRESHO	drivers/Oracle/OCI/include/kustags.h	490;"	d
RMUST_T_RCWS_UNMARK_THRESHOLD	drivers/Oracle/OCI/include/kustags.h	516;"	d
RMUST_T_RDB_CHECKSUM	drivers/Oracle/OCI/include/kustags.h	336;"	d
RMUST_T_READY_AREA_SERIALLY	drivers/Oracle/OCI/include/kustags.h	499;"	d
RMUST_T_READ_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	418;"	d
RMUST_T_RECOVER_FLG	drivers/Oracle/OCI/include/kustags.h	393;"	d
RMUST_T_REC_LEN	drivers/Oracle/OCI/include/kustags.h	402;"	d
RMUST_T_RELATED_FLG	drivers/Oracle/OCI/include/kustags.h	281;"	d
RMUST_T_RELATION_NAME	drivers/Oracle/OCI/include/kustags.h	163;"	d
RMUST_T_REMOTE_FLG	drivers/Oracle/OCI/include/kustags.h	341;"	d
RMUST_T_REMOTE_NODENAM	drivers/Oracle/OCI/include/kustags.h	329;"	d
RMUST_T_REPLACE_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	354;"	d
RMUST_T_RESOLUTION_FLG	drivers/Oracle/OCI/include/kustags.h	377;"	d
RMUST_T_RESOLVE_FLG	drivers/Oracle/OCI/include/kustags.h	376;"	d
RMUST_T_RESTORED_FLG	drivers/Oracle/OCI/include/kustags.h	128;"	d
RMUST_T_RESTORE_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	530;"	d
RMUST_T_RESTORE_ROOT_TAD_ADT	drivers/Oracle/OCI/include/kustags.h	277;"	d
RMUST_T_RESTORE_ROOT_TAD_FDT	drivers/Oracle/OCI/include/kustags.h	278;"	d
RMUST_T_RESTORE_ROOT_TAD_TDT	drivers/Oracle/OCI/include/kustags.h	279;"	d
RMUST_T_RESTRICT_ACCESS_FLG	drivers/Oracle/OCI/include/kustags.h	253;"	d
RMUST_T_RESTRUCTURED_FLG	drivers/Oracle/OCI/include/kustags.h	285;"	d
RMUST_T_RMU_CLIENT_BLKCNT	drivers/Oracle/OCI/include/kustags.h	240;"	d
RMUST_T_RMU_CLIENT_VBN	drivers/Oracle/OCI/include/kustags.h	239;"	d
RMUST_T_RM_LOG_ID	drivers/Oracle/OCI/include/kustags.h	380;"	d
RMUST_T_RM_NAME	drivers/Oracle/OCI/include/kustags.h	381;"	d
RMUST_T_ROOT_CORRUPT_FLG	drivers/Oracle/OCI/include/kustags.h	200;"	d
RMUST_T_RTPMS	drivers/Oracle/OCI/include/kustags.h	129;"	d
RMUST_T_RTUPB_BLKCNT	drivers/Oracle/OCI/include/kustags.h	224;"	d
RMUST_T_RTUPB_VBN	drivers/Oracle/OCI/include/kustags.h	219;"	d
RMUST_T_RUJBLK_VBN	drivers/Oracle/OCI/include/kustags.h	220;"	d
RMUST_T_RUJ_ALLOC_BLKCNT	drivers/Oracle/OCI/include/kustags.h	491;"	d
RMUST_T_RUJ_CORRUPT_FLG	drivers/Oracle/OCI/include/kustags.h	199;"	d
RMUST_T_RUJ_EXTEND_BLKCNT	drivers/Oracle/OCI/include/kustags.h	485;"	d
RMUST_T_RUJ_FILNAM	drivers/Oracle/OCI/include/kustags.h	378;"	d
RMUST_T_RUJ_INDEX	drivers/Oracle/OCI/include/kustags.h	511;"	d
RMUST_T_SAMPLE_INTERVAL	drivers/Oracle/OCI/include/kustags.h	190;"	d
RMUST_T_SECURITY_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	531;"	d
RMUST_T_SEQBLK_CNT	drivers/Oracle/OCI/include/kustags.h	233;"	d
RMUST_T_SEQBLK_VBN	drivers/Oracle/OCI/include/kustags.h	221;"	d
RMUST_T_SEQ_INDEX	drivers/Oracle/OCI/include/kustags.h	513;"	d
RMUST_T_SERVER_FLG	drivers/Oracle/OCI/include/kustags.h	344;"	d
RMUST_T_SERVER_NAME	drivers/Oracle/OCI/include/kustags.h	330;"	d
RMUST_T_SFDB_FLG	drivers/Oracle/OCI/include/kustags.h	130;"	d
RMUST_T_SHOW_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	532;"	d
RMUST_T_SHUTDOWN_TIME	drivers/Oracle/OCI/include/kustags.h	131;"	d
RMUST_T_SIPMAP	drivers/Oracle/OCI/include/kustags.h	385;"	d
RMUST_T_SLOT_COUNT	drivers/Oracle/OCI/include/kustags.h	356;"	d
RMUST_T_SLOT_LEN	drivers/Oracle/OCI/include/kustags.h	355;"	d
RMUST_T_SNAPSHOT_FLG	drivers/Oracle/OCI/include/kustags.h	132;"	d
RMUST_T_SNAPS_ALLOWED_FLG	drivers/Oracle/OCI/include/kustags.h	133;"	d
RMUST_T_SNAPS_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	134;"	d
RMUST_T_SNAPS_ENABLED_TSN	drivers/Oracle/OCI/include/kustags.h	308;"	d
RMUST_T_SNAP_QUIET_POINT	drivers/Oracle/OCI/include/kustags.h	481;"	d
RMUST_T_SOFT_DATA_LOSS_FLG	drivers/Oracle/OCI/include/kustags.h	135;"	d
RMUST_T_SPAMS_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	136;"	d
RMUST_T_SPAMS_FLG	drivers/Oracle/OCI/include/kustags.h	137;"	d
RMUST_T_SPAMVEC_LEN	drivers/Oracle/OCI/include/kustags.h	301;"	d
RMUST_T_SPAM_T1	drivers/Oracle/OCI/include/kustags.h	298;"	d
RMUST_T_SPAM_T2	drivers/Oracle/OCI/include/kustags.h	299;"	d
RMUST_T_SPAM_T3	drivers/Oracle/OCI/include/kustags.h	300;"	d
RMUST_T_SPREAD_FLG	drivers/Oracle/OCI/include/kustags.h	284;"	d
RMUST_T_SSB_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	209;"	d
RMUST_T_STALL_INDEX	drivers/Oracle/OCI/include/kustags.h	157;"	d
RMUST_T_STALL_SINCE_ADT	drivers/Oracle/OCI/include/kustags.h	138;"	d
RMUST_T_STALL_SINCE_RT	drivers/Oracle/OCI/include/kustags.h	140;"	d
RMUST_T_STALL_SINCE_TT	drivers/Oracle/OCI/include/kustags.h	139;"	d
RMUST_T_STALL_THRESHOLD_RT	drivers/Oracle/OCI/include/kustags.h	141;"	d
RMUST_T_STAREA_NAME	drivers/Oracle/OCI/include/kustags.h	142;"	d
RMUST_T_STATS_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	143;"	d
RMUST_T_STBY_READ_ONLY_FLG	drivers/Oracle/OCI/include/kustags.h	206;"	d
RMUST_T_STBY_RT_FILNAM	drivers/Oracle/OCI/include/kustags.h	178;"	d
RMUST_T_STID	drivers/Oracle/OCI/include/kustags.h	144;"	d
RMUST_T_SWEEP_BATCH_COUNT	drivers/Oracle/OCI/include/kustags.h	369;"	d
RMUST_T_SWEEP_FREE_PCT	drivers/Oracle/OCI/include/kustags.h	368;"	d
RMUST_T_SWEEP_THRESH_HIGH	drivers/Oracle/OCI/include/kustags.h	366;"	d
RMUST_T_SWEEP_THRESH_LOW	drivers/Oracle/OCI/include/kustags.h	367;"	d
RMUST_T_TABLE_ID	drivers/Oracle/OCI/include/kustags.h	446;"	d
RMUST_T_TABLE_NAME	drivers/Oracle/OCI/include/kustags.h	444;"	d
RMUST_T_THRESHOLD	drivers/Oracle/OCI/include/kustags.h	154;"	d
RMUST_T_TID	drivers/Oracle/OCI/include/kustags.h	338;"	d
RMUST_T_TIMEOUT_SEQ	drivers/Oracle/OCI/include/kustags.h	145;"	d
RMUST_T_TIMEOUT_SINCE_ADT	drivers/Oracle/OCI/include/kustags.h	146;"	d
RMUST_T_TIMEOUT_SINCE_RT	drivers/Oracle/OCI/include/kustags.h	148;"	d
RMUST_T_TIMEOUT_SINCE_TT	drivers/Oracle/OCI/include/kustags.h	147;"	d
RMUST_T_TM_LOG_ID	drivers/Oracle/OCI/include/kustags.h	379;"	d
RMUST_T_TRANSFER_CNT	drivers/Oracle/OCI/include/kustags.h	440;"	d
RMUST_T_TSNBLK_CNT	drivers/Oracle/OCI/include/kustags.h	225;"	d
RMUST_T_TSNBLK_INDEX	drivers/Oracle/OCI/include/kustags.h	339;"	d
RMUST_T_TSNBLK_SLOT	drivers/Oracle/OCI/include/kustags.h	340;"	d
RMUST_T_TSNBLK_VBN	drivers/Oracle/OCI/include/kustags.h	222;"	d
RMUST_T_TSN_INDEX	drivers/Oracle/OCI/include/kustags.h	512;"	d
RMUST_T_TSN_INTERVAL	drivers/Oracle/OCI/include/kustags.h	149;"	d
RMUST_T_TSN_VEC	drivers/Oracle/OCI/include/kustags.h	388;"	d
RMUST_T_TXN_MODE_FLAGS	drivers/Oracle/OCI/include/kustags.h	247;"	d
RMUST_T_UDASH_INDEX	drivers/Oracle/OCI/include/kustags.h	509;"	d
RMUST_T_UNLOAD_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	533;"	d
RMUST_T_UPTO_AREA_FLG	drivers/Oracle/OCI/include/kustags.h	394;"	d
RMUST_T_USERNAME	drivers/Oracle/OCI/include/kustags.h	150;"	d
RMUST_T_USER_ID	drivers/Oracle/OCI/include/kustags.h	433;"	d
RMUST_T_USER_STATUS	drivers/Oracle/OCI/include/kustags.h	434;"	d
RMUST_T_UTILITY_FLG	drivers/Oracle/OCI/include/kustags.h	345;"	d
RMUST_T_VBN	drivers/Oracle/OCI/include/kustags.h	151;"	d
RMUST_T_VERIFY_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	534;"	d
RMUST_T_VERSION_ADT	drivers/Oracle/OCI/include/kustags.h	195;"	d
RMUST_T_VERSION_FDT	drivers/Oracle/OCI/include/kustags.h	196;"	d
RMUST_T_VERSION_TDT	drivers/Oracle/OCI/include/kustags.h	197;"	d
RMUST_T_VLM_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	353;"	d
RMUST_T_VLM_WINDOW_COUNT	drivers/Oracle/OCI/include/kustags.h	361;"	d
RMUST_T_VMSIZE	drivers/Oracle/OCI/include/kustags.h	152;"	d
RMUST_T_VNO	drivers/Oracle/OCI/include/kustags.h	503;"	d
RMUST_T_VOLUME_NAME	drivers/Oracle/OCI/include/kustags.h	517;"	d
RMUST_T_WIPMAP	drivers/Oracle/OCI/include/kustags.h	384;"	d
RMUST_T_WORM_AIJ_ENABLED_FLG	drivers/Oracle/OCI/include/kustags.h	288;"	d
RMUST_T_WORM_CORRUPT_FLG	drivers/Oracle/OCI/include/kustags.h	289;"	d
RMUST_T_WORM_DEVFULL_FLG	drivers/Oracle/OCI/include/kustags.h	286;"	d
RMUST_T_WORM_LEOF	drivers/Oracle/OCI/include/kustags.h	291;"	d
RMUST_T_WRITE_PRV_FLG	drivers/Oracle/OCI/include/kustags.h	419;"	d
RMUST_T_WRL_FLG	drivers/Oracle/OCI/include/kustags.h	252;"	d
RMUST_T_WSSIZE	drivers/Oracle/OCI/include/kustags.h	153;"	d
RMUST_T_XATM_FLG	drivers/Oracle/OCI/include/kustags.h	375;"	d
RMUST_T_XID_BQUAL_LENGTH	drivers/Oracle/OCI/include/kustags.h	410;"	d
RMUST_T_XID_DATA	drivers/Oracle/OCI/include/kustags.h	411;"	d
RMUST_T_XID_FORMAT_ID	drivers/Oracle/OCI/include/kustags.h	408;"	d
RMUST_T_XID_GTRID_LENGTH	drivers/Oracle/OCI/include/kustags.h	409;"	d
ROI_	kernel/TeRasterRemap.h	/^	TeBox ROI_;					\/\/ region of interest (from input) where the remmaping should be done$/;"	m	class:TeRasterRemap
ROSE_BINARY	kernel/TeGraph.h	42;"	d
ROUND8	drivers/SQLite/sqlite3/sqlite3.c	7790;"	d	file:
ROUNDDOWN8	drivers/SQLite/sqlite3/sqlite3.c	7795;"	d	file:
ROWID_TYPE	drivers/Oracle/OCI/include/ocidem.h	52;"	d
ROWSET_ALLOCATION_SIZE	drivers/SQLite/sqlite3/sqlite3.c	36843;"	d	file:
ROWSET_ENTRY_PER_CHUNK	drivers/SQLite/sqlite3/sqlite3.c	36848;"	d	file:
ROW_MISMATCH	kernel/TeErrorLog.h	/^    ROW_MISMATCH,$/;"	e	enum:TeErrorType
RPF	drivers/Firebird/ibpp/core/ibpp.h	/^	enum RPF$/;"	g	namespace:IBPP
RTREE_COORD_INT32	drivers/SQLite/sqlite3/sqlite3.c	128013;"	d	file:
RTREE_COORD_REAL32	drivers/SQLite/sqlite3/sqlite3.c	128012;"	d	file:
RTREE_EQ	drivers/SQLite/sqlite3/sqlite3.c	128077;"	d	file:
RTREE_GE	drivers/SQLite/sqlite3/sqlite3.c	128080;"	d	file:
RTREE_GEOMETRY_MAGIC	drivers/SQLite/sqlite3/sqlite3.c	128111;"	d	file:
RTREE_GT	drivers/SQLite/sqlite3/sqlite3.c	128081;"	d	file:
RTREE_LE	drivers/SQLite/sqlite3/sqlite3.c	128078;"	d	file:
RTREE_LT	drivers/SQLite/sqlite3/sqlite3.c	128079;"	d	file:
RTREE_MATCH	drivers/SQLite/sqlite3/sqlite3.c	128082;"	d	file:
RTREE_MAXCELLS	drivers/SQLite/sqlite3/sqlite3.c	128026;"	d	file:
RTREE_MAX_DEPTH	drivers/SQLite/sqlite3/sqlite3.c	128035;"	d	file:
RTREE_MAX_DIMENSIONS	drivers/SQLite/sqlite3/sqlite3.c	127962;"	d	file:
RTREE_MINCELLS	drivers/SQLite/sqlite3/sqlite3.c	128024;"	d	file:
RTREE_REINSERT	drivers/SQLite/sqlite3/sqlite3.c	128025;"	d	file:
Raiz	stat/filaInt.h	/^      int Raiz;$/;"	m	struct:TFilaInt::it
Raiz	stat/filaR.h	/^      int Raiz; \/\/ Indice no vetor da raiz do grupamento$/;"	m	struct:TFilaR::Item
RansacItCounterT	kernel/TeGeometricTransformation.h	/^      typedef unsigned int RansacItCounterT;$/;"	t	class:TeGeometricTransformation
RasterBand2Matrix	image_processing/TePDIVenturaFusion.cpp	/^bool TePDIVenturaFusion::RasterBand2Matrix( $/;"	f	class:TePDIVenturaFusion
RasterBandDataT	image_processing/TePDIParaSegStrategy.hpp	/^      typedef TePDIMatrix< double > RasterBandDataT;          $/;"	t	class:TePDIParaSegStrategy
RasterDataVecT	image_processing/TePDIParaSegStrategy.hpp	/^      typedef std::vector< RasterBandDataT > RasterDataVecT;           $/;"	t	class:TePDIParaSegStrategy
RasterIteratorSet	functions/TeRasterIteratorSet.h	/^	RasterIteratorSet() {}$/;"	f	class:RasterIteratorSet
RasterIteratorSet	functions/TeRasterIteratorSet.h	/^class RasterIteratorSet$/;"	c
RastersListNodeT	image_processing/TePDIBatchGeoMosaic.cpp	/^TePDIBatchGeoMosaic::RastersListNodeT::RastersListNodeT()$/;"	f	class:TePDIBatchGeoMosaic::RastersListNodeT
RastersListNodeT	image_processing/TePDIBatchGeoMosaic.hpp	/^      class RastersListNodeT$/;"	c	class:TePDIBatchGeoMosaic
RastersListT	image_processing/TePDIBatchGeoMosaic.hpp	/^      typedef std::list< RastersListNodeT > RastersListT;$/;"	t	class:TePDIBatchGeoMosaic
ReCalculate	stat/TeKMeansGrouping.h	/^ReCalculate(It it, C& nearest)$/;"	f
Read	drivers/Firebird/ibpp/core/blob.cpp	/^int BlobImpl::Read(void* buffer, int size)$/;"	f	class:BlobImpl
ReadFileParams	drivers/libjpeg/TeLibJpegWrapper.cpp	/^	bool  ReadFileParams(const string& fileName, int& width, int& height, int& nChannels)$/;"	f	namespace:Jpeg
ReadLUT	drivers/gdal/TeGDALUtils.cpp	/^void ReadLUT(GDALRasterBand* rasterBand, TeRasterParams& params)$/;"	f
ReadTo	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::ReadTo(IBPP::ADT adtype, void* data, int datacount)$/;"	f	class:ArrayImpl
Real	kernel/TeGraph.h	45;"	d
Real_Vector	kernel/TeGraph.h	/^typedef Real* Real_Vector;$/;"	t
Receive	kernel/TeCommunicator.h	/^  inline void  TeCommunicator< DataType >::Receive( $/;"	f	class:TeCommunicator
Recompose	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::Recompose( unsigned int ref_level,$/;"	f	class:TePDIMallatWavelets
ReconstructLL	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::ReconstructLL( $/;"	f	class:TePDIMallatWavelets
Ref	drivers/Oracle/OCI/include/occiObjects.h	/^Ref<T>::Ref()$/;"	f	class:oracle::occi::Ref
Ref	drivers/Oracle/OCI/include/occiObjects.h	/^Ref<T>::Ref(const Connection *sessp, OCIRef *tref, bool copy)$/;"	f	class:oracle::occi::Ref
Ref	drivers/Oracle/OCI/include/occiObjects.h	/^Ref<T>::Ref(const Ref<T>& src)$/;"	f	class:oracle::occi::Ref
Ref	drivers/Oracle/OCI/include/occiObjects.h	/^Ref<T>::Ref(const RefAny &refAny)$/;"	f	class:oracle::occi::Ref
Ref	drivers/Oracle/OCI/include/occiObjects.h	/^Ref<T>::Ref(const T *obj)$/;"	f	class:oracle::occi::Ref
Ref	drivers/Oracle/OCI/include/occiObjects.h	/^class Ref$/;"	c	namespace:oracle::occi
RefAny	drivers/Oracle/OCI/include/occiObjects.h	/^class RefAny$/;"	c	namespace:oracle::occi
RefCols	drivers/Oracle/OCI/include/odci.h	/^   OCIInd RefCols;$/;"	m	struct:ODCIExtTableInfo_ind
RefCols	drivers/Oracle/OCI/include/odci.h	/^   ODCIColInfoList* RefCols;$/;"	m	struct:ODCIExtTableInfo
RefCounted	drivers/Oracle/OCI/include/occiCommon.h	/^class RefCounted {$/;"	c	namespace:oracle::occi
RefImpl	drivers/Oracle/OCI/include/occiObjects.h	/^class RefImpl$/;"	c	namespace:oracle::occi
Reference	kernel/TeSparseMatrix.h	/^                          ContainerType>&  Reference;$/;"	t	class:MatrixElement
Reinsert	drivers/SQLite/sqlite3/sqlite3.c	/^static int Reinsert($/;"	f	file:
Relation	kernel/TeGeometryAlgorithms.cpp	/^short Relation(const TeLine2D& lRed, const TeLine2D& lBlue, TeINTERSECTOR2::TeVectorBoundaryIP& report, const short& relation)$/;"	f
Relation	kernel/TeGeometryAlgorithms.cpp	/^short Relation(const TeLine2D& line, const TeLinearRing& ring)$/;"	f
Release	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::Release()$/;"	f	class:ArrayImpl
Release	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::Release()$/;"	f	class:BlobImpl
Release	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::Release()$/;"	f	class:DatabaseImpl
Release	drivers/Firebird/ibpp/core/events.cpp	/^void EventsImpl::Release()$/;"	f	class:EventsImpl
Release	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Release()$/;"	f	class:RowImpl
Release	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::Release()$/;"	f	class:ServiceImpl
Release	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Release()$/;"	f	class:StatementImpl
Release	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::Release()$/;"	f	class:TransactionImpl
RemapLevels	image_processing/TePDIContrast.cpp	/^bool TePDIContrast::RemapLevels($/;"	f	class:TePDIContrast
RemapLevels	image_processing/TePDILevelRemap.cpp	/^bool TePDILevelRemap::RemapLevels($/;"	f	class:TePDILevelRemap
Remove	kernel/TeNeighbours.cpp	/^TeNeighbours:: Remove (const string& object_id)$/;"	f	class:TeNeighbours
RemoveParameter	image_processing/TePDIParameters.hpp	/^      void RemoveParameter( const std::string& pname )$/;"	f	class:TePDIParameters
RemoveUser	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::RemoveUser(const std::string& username)$/;"	f	class:ServiceImpl
RepMap	drivers/qt/TeAppTheme.h	/^struct TL_DLL RepMap {$/;"	s
Repair	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::Repair(const std::string& dbfile, IBPP::RPF flags)$/;"	f	class:ServiceImpl
Reset	drivers/Firebird/ibpp/core/_dpb.cpp	/^void DPB::Reset()$/;"	f	class:DPB
Reset	drivers/Firebird/ibpp/core/_ibs.cpp	/^void IBS::Reset()$/;"	f	class:IBS
Reset	drivers/Firebird/ibpp/core/_rb.cpp	/^void RB::Reset()$/;"	f	class:RB
Reset	drivers/Firebird/ibpp/core/_spb.cpp	/^void SPB::Reset()$/;"	f	class:SPB
Reset	drivers/Firebird/ibpp/core/_tpb.cpp	/^void TPB::Reset()$/;"	f	class:TPB
Reset	image_processing/TePDIAlgorithm.cpp	/^bool TePDIAlgorithm::Reset( const TePDIParameters& params )$/;"	f	class:TePDIAlgorithm
Reset	image_processing/TePDIMatrix.hpp	/^  bool TePDIMatrix< ElementType >::Reset( unsigned int lines, $/;"	f	class:TePDIMatrix
Reset	image_processing/TePDIMatrix.hpp	/^  void TePDIMatrix< ElementType >::Reset( MemoryPolicy memoryPolicy )$/;"	f	class:TePDIMatrix
Reset	image_processing/TePDIMatrix.hpp	/^  void TePDIMatrix< ElementType >::Reset()$/;"	f	class:TePDIMatrix
Reset	image_processing/TePDIPIManager.cpp	/^void TePDIPIManager::Reset( const std::string& message, $/;"	f	class:TePDIPIManager
Reset	image_processing/TePDIRegGrowSeg.hpp	/^        Reset()$/;"	f	class:CloserCells
ResetId	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::ResetId()$/;"	f	class:ArrayImpl
ResetId	image_processing/TePDIRegGrowSeg.hpp	/^   void ResetId( long idc ) { Idnumber_ = idc; }$/;"	f	class:TePDIRGSCell
ResetState	image_processing/TePDIArithmetic.cpp	/^void TePDIArithmetic::ResetState( const TePDIParameters& )$/;"	f	class:TePDIArithmetic
ResetState	image_processing/TePDIBDFilter.cpp	/^void TePDIBDFilter::ResetState( const TePDIParameters& params )$/;"	f	class:TePDIBDFilter
ResetState	image_processing/TePDIBaatz.cpp	/^void TePDIBaatz::ResetState( const TePDIParameters& )$/;"	f	class:TePDIBaatz
ResetState	image_processing/TePDIBatchGeoMosaic.cpp	/^void TePDIBatchGeoMosaic::ResetState( const TePDIParameters& )$/;"	f	class:TePDIBatchGeoMosaic
ResetState	image_processing/TePDIBufferedFilter.cpp	/^void TePDIBufferedFilter::ResetState( const TePDIParameters& params )$/;"	f	class:TePDIBufferedFilter
ResetState	image_processing/TePDIColorTransform.cpp	/^void TePDIColorTransform::ResetState( const TePDIParameters& )$/;"	f	class:TePDIColorTransform
ResetState	image_processing/TePDIContrast.cpp	/^void TePDIContrast::ResetState( const TePDIParameters& params )$/;"	f	class:TePDIContrast
ResetState	image_processing/TePDICorrelationMatching.cpp	/^void TePDICorrelationMatching::ResetState( const TePDIParameters& )$/;"	f	class:TePDICorrelationMatching
ResetState	image_processing/TePDIDecorrelationEnhancement.cpp	/^void TePDIDecorrelationEnhancement::ResetState(const TePDIParameters&)$/;"	f	class:TePDIDecorrelationEnhancement
ResetState	image_processing/TePDIEMClas.cpp	/^void TePDIEMClas::ResetState( const TePDIParameters& )$/;"	f	class:TePDIEMClas
ResetState	image_processing/TePDIFFT.cpp	/^void TePDIFFT::ResetState( const TePDIParameters& )$/;"	f	class:TePDIFFT
ResetState	image_processing/TePDIFusionIndexes.cpp	/^void TePDIFusionIndexes::ResetState(const TePDIParameters&)$/;"	f	class:TePDIFusionIndexes
ResetState	image_processing/TePDIGarguetFusion.cpp	/^void TePDIGarguetFusion::ResetState( const TePDIParameters& )$/;"	f	class:TePDIGarguetFusion
ResetState	image_processing/TePDIGeneralizedIHSFusion.cpp	/^void TePDIGeneralizedIHSFusion::ResetState(const TePDIParameters& )$/;"	f	class:TePDIGeneralizedIHSFusion
ResetState	image_processing/TePDIGeoMosaic.cpp	/^void TePDIGeoMosaic::ResetState( const TePDIParameters& )$/;"	f	class:TePDIGeoMosaic
ResetState	image_processing/TePDIHants.cpp	/^void TePDIHants::ResetState( const TePDIParameters& )$/;"	f	class:TePDIHants
ResetState	image_processing/TePDIHaralick.cpp	/^void TePDIHaralick::ResetState( const TePDIParameters& params )$/;"	f	class:TePDIHaralick
ResetState	image_processing/TePDIIHSFusion.cpp	/^void TePDIIHSFusion::ResetState( const TePDIParameters& )$/;"	f	class:TePDIIHSFusion
ResetState	image_processing/TePDIIHSWaveletFusion.cpp	/^void TePDIIHSWaveletFusion::ResetState(const TePDIParameters&)$/;"	f	class:TePDIIHSWaveletFusion
ResetState	image_processing/TePDIIsosegClas.cpp	/^void TePDIIsosegClas::ResetState( const TePDIParameters& )$/;"	f	class:TePDIIsosegClas
ResetState	image_processing/TePDIKMeansClas.cpp	/^void TePDIKMeansClas::ResetState( const TePDIParameters& )$/;"	f	class:TePDIKMeansClas
ResetState	image_processing/TePDILevelRemap.cpp	/^void TePDILevelRemap::ResetState( const TePDIParameters& params )$/;"	f	class:TePDILevelRemap
ResetState	image_processing/TePDILinearFilter.cpp	/^void TePDILinearFilter::ResetState( const TePDIParameters& params )$/;"	f	class:TePDILinearFilter
ResetState	image_processing/TePDIMIMatching.cpp	/^void TePDIMIMatching::ResetState( const TePDIParameters& )$/;"	f	class:TePDIMIMatching
ResetState	image_processing/TePDIMMIOMatching.cpp	/^void TePDIMMIOMatching::ResetState( const TePDIParameters& )$/;"	f	class:TePDIMMIOMatching
ResetState	image_processing/TePDIMallatWavelets.cpp	/^void TePDIMallatWavelets::ResetState( const TePDIParameters& )$/;"	f	class:TePDIMallatWavelets
ResetState	image_processing/TePDIMixModel.cpp	/^void TePDIMixModel::ResetState(const TePDIParameters& params)$/;"	f	class:TePDIMixModel
ResetState	image_processing/TePDIMorfFilter.cpp	/^void TePDIMorfFilter::ResetState( const TePDIParameters& params )$/;"	f	class:TePDIMorfFilter
ResetState	image_processing/TePDIOFMatching.cpp	/^void TePDIOFMatching::ResetState( const TePDIParameters& )$/;"	f	class:TePDIOFMatching
ResetState	image_processing/TePDIPCAWaveletFusion.cpp	/^void TePDIPCAWaveletFusion::ResetState(const TePDIParameters&)$/;"	f	class:TePDIPCAWaveletFusion
ResetState	image_processing/TePDIParallelSegmenter.cpp	/^void TePDIParallelSegmenter::ResetState( const TePDIParameters& )$/;"	f	class:TePDIParallelSegmenter
ResetState	image_processing/TePDIPrincipalComponents.cpp	/^void TePDIPrincipalComponents::ResetState($/;"	f	class:TePDIPrincipalComponents
ResetState	image_processing/TePDIPrincipalComponentsFusion.cpp	/^void TePDIPrincipalComponentsFusion::ResetState(const TePDIParameters& \/*params*\/)$/;"	f	class:TePDIPrincipalComponentsFusion
ResetState	image_processing/TePDIRadarFilter.cpp	/^void TePDIRadarFilter::ResetState( const TePDIParameters& params )$/;"	f	class:TePDIRadarFilter
ResetState	image_processing/TePDIRadarFrostFilter.cpp	/^void TePDIRadarFrostFilter::ResetState( const TePDIParameters& params )$/;"	f	class:TePDIRadarFrostFilter
ResetState	image_processing/TePDIRadarGammaFilter.cpp	/^void TePDIRadarGammaFilter::ResetState( const TePDIParameters& params )$/;"	f	class:TePDIRadarGammaFilter
ResetState	image_processing/TePDIRadarKuanFilter.cpp	/^void TePDIRadarKuanFilter::ResetState( const TePDIParameters& params )$/;"	f	class:TePDIRadarKuanFilter
ResetState	image_processing/TePDIRadarLeeFilter.cpp	/^void TePDIRadarLeeFilter::ResetState( const TePDIParameters& params )$/;"	f	class:TePDIRadarLeeFilter
ResetState	image_processing/TePDIRaster2Vector.cpp	/^TePDIRaster2Vector::ResetState( const TePDIParameters& \/* params *\/ )$/;"	f	class:TePDIRaster2Vector
ResetState	image_processing/TePDIRegGrowSeg.cpp	/^void TePDIRegGrowSeg::ResetState( const TePDIParameters& params )$/;"	f	class:TePDIRegGrowSeg
ResetState	image_processing/TePDIRegister.cpp	/^void TePDIRegister::ResetState( const TePDIParameters& )$/;"	f	class:TePDIRegister
ResetState	image_processing/TePDISAMClassifier.cpp	/^void TePDISAMClassifier::ResetState( const TePDIParameters& )$/;"	f	class:TePDISAMClassifier
ResetState	image_processing/TePDISensorSimulator.cpp	/^void TePDISensorSimulator::ResetState( const TePDIParameters& )$/;"	f	class:TePDISensorSimulator
ResetState	image_processing/TePDISimplex.cpp	/^void TePDISimplex::ResetState( const TePDIParameters& )$/;"	f	class:TePDISimplex
ResetState	image_processing/TePDIStatistic.cpp	/^void TePDIStatistic::ResetState( const TePDIParameters& params )$/;"	f	class:TePDIStatistic
ResetState	image_processing/TePDITPMosaic.cpp	/^void TePDITPMosaic::ResetState( const TePDIParameters& )$/;"	f	class:TePDITPMosaic
ResetState	image_processing/TePDIVenturaFusion.cpp	/^void TePDIVenturaFusion::ResetState( const TePDIParameters& )$/;"	f	class:TePDIVenturaFusion
ResetState	image_processing/TePDIWaveletAtrous.cpp	/^void TePDIWaveletAtrous::ResetState(const TePDIParameters&)$/;"	f	class:TePDIWaveletAtrous
ResetState	image_processing/TePDIWaveletAtrousFusion.cpp	/^void TePDIWaveletAtrousFusion::ResetState(const TePDIParameters&)$/;"	f	class:TePDIWaveletAtrousFusion
ResetState	image_processing/TePDIWiSpeRFusion.cpp	/^void TePDIWiSpeRFusion::ResetState(const TePDIParameters&)$/;"	f	class:TePDIWiSpeRFusion
Resize	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Resize(int n)$/;"	f	class:RowImpl
Resort	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRegGrowSeg :: Resort()$/;"	f	class:TePDIRegGrowSeg
Restart	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::Restart(const std::string& dbfile)$/;"	f	class:ServiceImpl
ResultSet	drivers/Oracle/OCI/include/occiControl.h	/^class ResultSet $/;"	c	namespace:oracle::occi
ResultVisual	drivers/qt/resultVisual.h	/^	ResultVisual(QWidget *parent=0, const char *name=0)$/;"	f	class:ResultVisual
ResultVisual	drivers/qt/resultVisual.h	/^class ResultVisual : public QWidget$/;"	c
RetType	drivers/Oracle/OCI/include/odci.h	/^  OCIInd RetType;$/;"	m	struct:ODCITabFuncInfo_ind
RetType	drivers/Oracle/OCI/include/odci.h	/^  OCIType*         RetType;$/;"	m	struct:ODCITabFuncInfo
Retira	stat/filaDouble.cpp	/^double  TFilaDouble::Retira(){$/;"	f	class:TFilaDouble
Retira	stat/filaInt.cpp	/^int  TFilaInt::Retira(){$/;"	f	class:TFilaInt
Retira	stat/filaR.cpp	/^void  TFilaR::Retira(int Raiz){$/;"	f	class:TFilaR
Retira	stat/lista.cpp	/^void TListaVizinho::Retira(int Indice){$/;"	f	class:TListaVizinho
Rgb2Hls	image_processing/TePDIColorTransform.hpp	/^		Rgb2Hls = 3,$/;"	e	enum:TePDIColorTransform::ColorTransfTypes
Rgb2Ihs	image_processing/TePDIColorTransform.hpp	/^        Rgb2Ihs = 1,$/;"	e	enum:TePDIColorTransform::ColorTransfTypes
Rid	drivers/Oracle/OCI/include/odci.h	/^   OCIInd                   Rid;$/;"	m	struct:ODCIIndexCtx_ind
Rid	drivers/Oracle/OCI/include/odci.h	/^   OCIString*           Rid;$/;"	m	struct:ODCIIndexCtx
RightRotate	kernel/TeRedBlackTree.h	/^			virtual void RightRotate(NODE* y, NODE*& root)$/;"	f	class:TeREDBLACK::TeRBTree
RoleName	drivers/Firebird/ibpp/core/_ibpp.h	/^	const char* RoleName() const		{ return mRoleName.c_str(); }$/;"	f	class:ibpp_internals::DatabaseImpl
Rollback	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::Rollback()$/;"	f	class:TransactionImpl
RollbackRetain	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::RollbackRetain()$/;"	f	class:TransactionImpl
Row	drivers/Firebird/ibpp/core/ibpp.h	/^	class IRow;				typedef Ptr<IRow> Row;$/;"	t	namespace:IBPP
Row	kernel/TeSparseMatrix.h	/^       size_type Row, maxColumns;$/;"	m	class:TeSparseMatrix::Aux
RowImpl	drivers/Firebird/ibpp/core/_ibpp.h	/^class RowImpl : public IBPP::IRow$/;"	c	namespace:ibpp_internals
RowImpl	drivers/Firebird/ibpp/core/row.cpp	/^RowImpl::RowImpl(const RowImpl& copied)$/;"	f	class:RowImpl
RowImpl	drivers/Firebird/ibpp/core/row.cpp	/^RowImpl::RowImpl(int dialect, int n, DatabaseImpl* db, TransactionImpl* tr)$/;"	f	class:RowImpl
RowSet	drivers/SQLite/sqlite3/sqlite3.c	/^struct RowSet {$/;"	s	file:
RowSet	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct RowSet RowSet;$/;"	t	typeref:struct:RowSet	file:
RowSetChunk	drivers/SQLite/sqlite3/sqlite3.c	/^struct RowSetChunk {$/;"	s	file:
RowSetEntry	drivers/SQLite/sqlite3/sqlite3.c	/^struct RowSetEntry {            $/;"	s	file:
Rows	kernel/TeSparseMatrix.h	/^   size_type Rows()  const { return rows;}$/;"	f	class:TeSparseMatrix
Rtree	drivers/SQLite/sqlite3/sqlite3.c	/^struct Rtree {$/;"	s	file:
Rtree	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Rtree Rtree;$/;"	t	typeref:struct:Rtree	file:
RtreeCell	drivers/SQLite/sqlite3/sqlite3.c	/^struct RtreeCell {$/;"	s	file:
RtreeCell	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct RtreeCell RtreeCell;$/;"	t	typeref:struct:RtreeCell	file:
RtreeConstraint	drivers/SQLite/sqlite3/sqlite3.c	/^struct RtreeConstraint {$/;"	s	file:
RtreeConstraint	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct RtreeConstraint RtreeConstraint;$/;"	t	typeref:struct:RtreeConstraint	file:
RtreeCoord	drivers/SQLite/sqlite3/sqlite3.c	/^typedef union RtreeCoord RtreeCoord;$/;"	t	typeref:union:RtreeCoord	file:
RtreeCoord	drivers/SQLite/sqlite3/sqlite3.c	/^union RtreeCoord {$/;"	u	file:
RtreeCursor	drivers/SQLite/sqlite3/sqlite3.c	/^struct RtreeCursor {$/;"	s	file:
RtreeCursor	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct RtreeCursor RtreeCursor;$/;"	t	typeref:struct:RtreeCursor	file:
RtreeGeomCallback	drivers/SQLite/sqlite3/sqlite3.c	/^struct RtreeGeomCallback {$/;"	s	file:
RtreeGeomCallback	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct RtreeGeomCallback RtreeGeomCallback;$/;"	t	typeref:struct:RtreeGeomCallback	file:
RtreeMatchArg	drivers/SQLite/sqlite3/sqlite3.c	/^struct RtreeMatchArg {$/;"	s	file:
RtreeMatchArg	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct RtreeMatchArg RtreeMatchArg;$/;"	t	typeref:struct:RtreeMatchArg	file:
RtreeNode	drivers/SQLite/sqlite3/sqlite3.c	/^struct RtreeNode {$/;"	s	file:
RtreeNode	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct RtreeNode RtreeNode;$/;"	t	typeref:struct:RtreeNode	file:
RunAdaptImplementation	image_processing/TePDIRadarKuanFilter.cpp	/^bool TePDIRadarKuanFilter::RunAdaptImplementation()$/;"	f	class:TePDIRadarKuanFilter
RunAdaptImplementation	image_processing/TePDIRadarLeeFilter.cpp	/^bool TePDIRadarLeeFilter::RunAdaptImplementation()$/;"	f	class:TePDIRadarLeeFilter
RunDilation	image_processing/TePDIMorfFilter.cpp	/^bool TePDIMorfFilter::RunDilation()$/;"	f	class:TePDIMorfFilter
RunErosion	image_processing/TePDIMorfFilter.cpp	/^bool TePDIMorfFilter::RunErosion()$/;"	f	class:TePDIMorfFilter
RunFixedImplementation	image_processing/TePDIRadarGammaFilter.cpp	/^bool TePDIRadarGammaFilter::RunFixedImplementation()$/;"	f	class:TePDIRadarGammaFilter
RunFixedImplementation	image_processing/TePDIRadarKuanFilter.cpp	/^bool TePDIRadarKuanFilter::RunFixedImplementation()$/;"	f	class:TePDIRadarKuanFilter
RunFixedImplementation	image_processing/TePDIRadarLeeFilter.cpp	/^bool TePDIRadarLeeFilter::RunFixedImplementation()$/;"	f	class:TePDIRadarLeeFilter
RunHls2Rgb	image_processing/TePDIColorTransform.cpp	/^bool TePDIColorTransform::RunHls2Rgb($/;"	f	class:TePDIColorTransform
RunIhs2Rgb	image_processing/TePDIColorTransform.cpp	/^bool TePDIColorTransform::RunIhs2Rgb($/;"	f	class:TePDIColorTransform
RunImplementation	image_processing/TePDIArithmetic.cpp	/^bool TePDIArithmetic::RunImplementation()$/;"	f	class:TePDIArithmetic
RunImplementation	image_processing/TePDIBDFilter.cpp	/^bool TePDIBDFilter::RunImplementation()$/;"	f	class:TePDIBDFilter
RunImplementation	image_processing/TePDIBaatz.cpp	/^bool TePDIBaatz::RunImplementation()$/;"	f	class:TePDIBaatz
RunImplementation	image_processing/TePDIBatchGeoMosaic.cpp	/^bool TePDIBatchGeoMosaic::RunImplementation()$/;"	f	class:TePDIBatchGeoMosaic
RunImplementation	image_processing/TePDIColorTransform.cpp	/^bool TePDIColorTransform::RunImplementation()$/;"	f	class:TePDIColorTransform
RunImplementation	image_processing/TePDIContrast.cpp	/^bool TePDIContrast::RunImplementation()$/;"	f	class:TePDIContrast
RunImplementation	image_processing/TePDICorrelationMatching.cpp	/^bool TePDICorrelationMatching::RunImplementation()$/;"	f	class:TePDICorrelationMatching
RunImplementation	image_processing/TePDIDecorrelationEnhancement.cpp	/^bool TePDIDecorrelationEnhancement::RunImplementation()$/;"	f	class:TePDIDecorrelationEnhancement
RunImplementation	image_processing/TePDIEMClas.cpp	/^bool TePDIEMClas::RunImplementation()$/;"	f	class:TePDIEMClas
RunImplementation	image_processing/TePDIFFT.cpp	/^bool TePDIFFT::RunImplementation()$/;"	f	class:TePDIFFT
RunImplementation	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::RunImplementation()$/;"	f	class:TePDIFusionIndexes
RunImplementation	image_processing/TePDIGarguetFusion.cpp	/^bool TePDIGarguetFusion::RunImplementation()$/;"	f	class:TePDIGarguetFusion
RunImplementation	image_processing/TePDIGeneralizedIHSFusion.cpp	/^bool TePDIGeneralizedIHSFusion::RunImplementation()$/;"	f	class:TePDIGeneralizedIHSFusion
RunImplementation	image_processing/TePDIGeoMosaic.cpp	/^bool TePDIGeoMosaic::RunImplementation()$/;"	f	class:TePDIGeoMosaic
RunImplementation	image_processing/TePDIHants.cpp	/^bool TePDIHants::RunImplementation()$/;"	f	class:TePDIHants
RunImplementation	image_processing/TePDIHaralick.cpp	/^bool TePDIHaralick::RunImplementation()$/;"	f	class:TePDIHaralick
RunImplementation	image_processing/TePDIIHSFusion.cpp	/^bool TePDIIHSFusion::RunImplementation()$/;"	f	class:TePDIIHSFusion
RunImplementation	image_processing/TePDIIHSWaveletFusion.cpp	/^bool TePDIIHSWaveletFusion::RunImplementation()$/;"	f	class:TePDIIHSWaveletFusion
RunImplementation	image_processing/TePDIIsosegClas.cpp	/^bool TePDIIsosegClas::RunImplementation()$/;"	f	class:TePDIIsosegClas
RunImplementation	image_processing/TePDIKMeansClas.cpp	/^bool TePDIKMeansClas::RunImplementation()$/;"	f	class:TePDIKMeansClas
RunImplementation	image_processing/TePDILinearFilter.cpp	/^bool TePDILinearFilter::RunImplementation()$/;"	f	class:TePDILinearFilter
RunImplementation	image_processing/TePDIMIMatching.cpp	/^bool TePDIMIMatching::RunImplementation()$/;"	f	class:TePDIMIMatching
RunImplementation	image_processing/TePDIMMIOMatching.cpp	/^bool TePDIMMIOMatching::RunImplementation()$/;"	f	class:TePDIMMIOMatching
RunImplementation	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::RunImplementation()$/;"	f	class:TePDIMallatWavelets
RunImplementation	image_processing/TePDIMixModel.cpp	/^bool TePDIMixModel::RunImplementation()$/;"	f	class:TePDIMixModel
RunImplementation	image_processing/TePDIMorfFilter.cpp	/^bool TePDIMorfFilter::RunImplementation()$/;"	f	class:TePDIMorfFilter
RunImplementation	image_processing/TePDIOFMatching.cpp	/^bool TePDIOFMatching::RunImplementation()$/;"	f	class:TePDIOFMatching
RunImplementation	image_processing/TePDIPCAWaveletFusion.cpp	/^bool TePDIPCAWaveletFusion::RunImplementation()$/;"	f	class:TePDIPCAWaveletFusion
RunImplementation	image_processing/TePDIParallelSegmenter.cpp	/^bool TePDIParallelSegmenter::RunImplementation()$/;"	f	class:TePDIParallelSegmenter
RunImplementation	image_processing/TePDIPrincipalComponents.cpp	/^bool TePDIPrincipalComponents::RunImplementation()$/;"	f	class:TePDIPrincipalComponents
RunImplementation	image_processing/TePDIPrincipalComponentsFusion.cpp	/^bool TePDIPrincipalComponentsFusion::RunImplementation()$/;"	f	class:TePDIPrincipalComponentsFusion
RunImplementation	image_processing/TePDIRadarFrostFilter.cpp	/^bool TePDIRadarFrostFilter::RunImplementation()$/;"	f	class:TePDIRadarFrostFilter
RunImplementation	image_processing/TePDIRadarGammaFilter.cpp	/^bool TePDIRadarGammaFilter::RunImplementation()$/;"	f	class:TePDIRadarGammaFilter
RunImplementation	image_processing/TePDIRadarKuanFilter.cpp	/^bool TePDIRadarKuanFilter::RunImplementation()$/;"	f	class:TePDIRadarKuanFilter
RunImplementation	image_processing/TePDIRadarLeeFilter.cpp	/^bool TePDIRadarLeeFilter::RunImplementation()$/;"	f	class:TePDIRadarLeeFilter
RunImplementation	image_processing/TePDIRaster2Vector.cpp	/^bool TePDIRaster2Vector::RunImplementation()$/;"	f	class:TePDIRaster2Vector
RunImplementation	image_processing/TePDIRegGrowSeg.cpp	/^bool TePDIRegGrowSeg::RunImplementation()$/;"	f	class:TePDIRegGrowSeg
RunImplementation	image_processing/TePDIRegister.cpp	/^bool TePDIRegister::RunImplementation()$/;"	f	class:TePDIRegister
RunImplementation	image_processing/TePDISAMClassifier.cpp	/^bool TePDISAMClassifier::RunImplementation()$/;"	f	class:TePDISAMClassifier
RunImplementation	image_processing/TePDISensorSimulator.cpp	/^bool TePDISensorSimulator::RunImplementation()$/;"	f	class:TePDISensorSimulator
RunImplementation	image_processing/TePDISimplex.cpp	/^bool TePDISimplex::RunImplementation()$/;"	f	class:TePDISimplex
RunImplementation	image_processing/TePDIStatistic.cpp	/^bool TePDIStatistic::RunImplementation()$/;"	f	class:TePDIStatistic
RunImplementation	image_processing/TePDITPMosaic.cpp	/^bool TePDITPMosaic::RunImplementation()$/;"	f	class:TePDITPMosaic
RunImplementation	image_processing/TePDIVenturaFusion.cpp	/^bool TePDIVenturaFusion::RunImplementation()$/;"	f	class:TePDIVenturaFusion
RunImplementation	image_processing/TePDIWaveletAtrous.cpp	/^bool TePDIWaveletAtrous::RunImplementation()$/;"	f	class:TePDIWaveletAtrous
RunImplementation	image_processing/TePDIWaveletAtrousFusion.cpp	/^bool TePDIWaveletAtrousFusion::RunImplementation()$/;"	f	class:TePDIWaveletAtrousFusion
RunImplementation	image_processing/TePDIWiSpeRFusion.cpp	/^bool TePDIWiSpeRFusion::RunImplementation()$/;"	f	class:TePDIWiSpeRFusion
RunImplementation_decompose	image_processing/TePDIWaveletAtrous.cpp	/^bool TePDIWaveletAtrous::RunImplementation_decompose()$/;"	f	class:TePDIWaveletAtrous
RunImplementation_direct	image_processing/TePDIPrincipalComponents.cpp	/^bool TePDIPrincipalComponents::RunImplementation_direct()$/;"	f	class:TePDIPrincipalComponents
RunImplementation_inverse	image_processing/TePDIPrincipalComponents.cpp	/^bool TePDIPrincipalComponents::RunImplementation_inverse()$/;"	f	class:TePDIPrincipalComponents
RunImplementation_recompose	image_processing/TePDIWaveletAtrous.cpp	/^bool TePDIWaveletAtrous::RunImplementation_recompose()$/;"	f	class:TePDIWaveletAtrous
RunMedian	image_processing/TePDIMorfFilter.cpp	/^bool TePDIMorfFilter::RunMedian()$/;"	f	class:TePDIMorfFilter
RunMode	image_processing/TePDIMorfFilter.cpp	/^bool TePDIMorfFilter::RunMode()$/;"	f	class:TePDIMorfFilter
RunRgb2Hls	image_processing/TePDIColorTransform.cpp	/^bool TePDIColorTransform::RunRgb2Hls($/;"	f	class:TePDIColorTransform
RunRgb2Ihs	image_processing/TePDIColorTransform.cpp	/^bool TePDIColorTransform::RunRgb2Ihs($/;"	f	class:TePDIColorTransform
RunRoberts	image_processing/TePDIBDFilter.cpp	/^bool TePDIBDFilter::RunRoberts()$/;"	f	class:TePDIBDFilter
RunSobel	image_processing/TePDIBDFilter.cpp	/^bool TePDIBDFilter::RunSobel()$/;"	f	class:TePDIBDFilter
S	image_processing/TePDIRaster2Vector.cpp	42;"	d	file:
SAVE	kernel/TeGraph.cpp	72;"	d	file:
SAVEPOINT_BEGIN	drivers/SQLite/sqlite3/sqlite3.c	9766;"	d	file:
SAVEPOINT_RELEASE	drivers/SQLite/sqlite3/sqlite3.c	9767;"	d	file:
SAVEPOINT_ROLLBACK	drivers/SQLite/sqlite3/sqlite3.c	9768;"	d	file:
SAVE_SZ	drivers/SQLite/sqlite3/sqlite3.c	79675;"	d	file:
SB1MAXVAL	drivers/Oracle/OCI/include/oratypes.h	42;"	d
SB1MINVAL	drivers/Oracle/OCI/include/oratypes.h	43;"	d
SB2MAXVAL	drivers/Oracle/OCI/include/oratypes.h	62;"	d
SB2MINVAL	drivers/Oracle/OCI/include/oratypes.h	63;"	d
SB4MAXVAL	drivers/Oracle/OCI/include/oratypes.h	81;"	d
SB4MINVAL	drivers/Oracle/OCI/include/oratypes.h	82;"	d
SBIG_ORAMAXVAL	drivers/Oracle/OCI/include/oratypes.h	227;"	d
SBIG_ORAMAXVAL	drivers/Oracle/OCI/include/oratypes.h	246;"	d
SBIG_ORAMINVAL	drivers/Oracle/OCI/include/oratypes.h	228;"	d
SBIG_ORAMINVAL	drivers/Oracle/OCI/include/oratypes.h	247;"	d
SCC	image_processing/TePDIFusionIndexes.hpp	/^      enum TeFusionIndexes {CC, BIAS, VARDIF, SDD, UIQI, RMSE, ERGAS, SIMM, SERGAS, SCC};$/;"	e	enum:TePDIFusionIndexes::TeFusionIndexes
SCHEMA_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        SCHEMA_ATTR_COUNT = 1,$/;"	e	enum:oracle::occi::MetaData::AttrCount
SCHEMA_TABLE	drivers/SQLite/sqlite3/sqlite3.c	7845;"	d	file:
SCROSS	kernel/TeGraph.cpp	59;"	d	file:
SDD	image_processing/TePDIFusionIndexes.hpp	/^      enum TeFusionIndexes {CC, BIAS, VARDIF, SDD, UIQI, RMSE, ERGAS, SIMM, SERGAS, SCC};$/;"	e	enum:TePDIFusionIndexes::TeFusionIndexes
SDO_ELEM_INFO_ARRAY	drivers/Oracle/TeOCICursor.h	40;"	d
SDO_GEOMETRY	drivers/Oracle/TeOCICursor.h	41;"	d
SDO_GEOMETRY_TYPE	drivers/Oracle/TeOCICursor.h	/^typedef struct sdo_geometry SDO_GEOMETRY_TYPE;$/;"	t	typeref:struct:sdo_geometry
SDO_GEOMETRY_ind	drivers/Oracle/TeOCICursor.h	/^struct TLORACLE_DLL SDO_GEOMETRY_ind$/;"	s
SDO_GEOMETRY_ind	drivers/Oracle/TeOCICursor.h	/^typedef struct SDO_GEOMETRY_ind SDO_GEOMETRY_ind;$/;"	t	typeref:struct:SDO_GEOMETRY_ind
SDO_OCIAttrGet	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIAttrGet(CONST dvoid *trgthndlp, ub4 trghndltyp, dvoid *attributep, $/;"	f
SDO_OCIAttrSet	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIAttrSet(dvoid *trgthndlp, ub4 trghndltyp, dvoid *attributep,$/;"	f
SDO_OCIBindArrayOfStruct	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIBindArrayOfStruct(OCIBind *bindp, OCIError *errhp, $/;"	f
SDO_OCIBindByName	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIBindByName(OCIStmt *stmtp, OCIBind **bindp, OCIError *errhp,$/;"	f
SDO_OCIBindByPos	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIBindByPos(OCIStmt *stmtp, OCIBind **bindp, OCIError *errhp,$/;"	f
SDO_OCIBindDynamic	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIBindDynamic(OCIBind *bindp, OCIError *errhp, dvoid *ictxp,$/;"	f
SDO_OCIBindObject	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIBindObject(OCIBind *bindp, OCIError *errhp, CONST OCIType *type, $/;"	f
SDO_OCIBreak	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIBreak(dvoid *hndlp, OCIError *errhp)$/;"	f
SDO_OCICacheFlush	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICacheFlush(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc, $/;"	f
SDO_OCICacheFlushRefresh	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICacheFlushRefresh(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc, $/;"	f
SDO_OCICacheFree	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICacheFree(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc)$/;"	f
SDO_OCICacheGetObjects	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICacheGetObjects(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc,$/;"	f
SDO_OCICacheRefresh	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICacheRefresh(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc,$/;"	f
SDO_OCICacheRegister	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICacheRegister(OCIEnv *env, OCIError *err, OCIObjectEvent event,$/;"	f
SDO_OCICacheUnmark	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICacheUnmark(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc)$/;"	f
SDO_OCICacheUnpin	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICacheUnpin(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc)$/;"	f
SDO_OCICollAppend	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICollAppend(OCIEnv *env, OCIError *err, CONST dvoid *elem, $/;"	f
SDO_OCICollAssign	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICollAssign(OCIEnv *env, OCIError *err, CONST OCIColl *rhs, $/;"	f
SDO_OCICollAssignElem	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICollAssignElem(OCIEnv *env, OCIError *err, sb4 index, $/;"	f
SDO_OCICollGetElem	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICollGetElem(OCIEnv *env, OCIError *err, CONST OCIColl *coll, $/;"	f
SDO_OCICollMax	drivers/Oracle/TeOCISDO.cpp	/^sb4 SDO_OCICollMax(OCIEnv *env, CONST OCIColl *coll)$/;"	f
SDO_OCICollSize	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICollSize(OCIEnv *env, OCIError *err, CONST OCIColl *coll, $/;"	f
SDO_OCICollTrim	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCICollTrim(OCIEnv *env, OCIError *err, sb4 trim_num, $/;"	f
SDO_OCIDateAddDays	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDateAddDays(OCIError *err, CONST OCIDate *date, sb4 num_days,$/;"	f
SDO_OCIDateAddMonths	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDateAddMonths(OCIError *err, CONST OCIDate *date, sb4 num_months,$/;"	f
SDO_OCIDateAssign	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDateAssign(OCIError *err, CONST OCIDate *from, OCIDate *to)$/;"	f
SDO_OCIDateCheck	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDateCheck(OCIError *err, CONST OCIDate *date, uword *valid)$/;"	f
SDO_OCIDateCompare	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDateCompare(OCIError *err, CONST OCIDate *date1, $/;"	f
SDO_OCIDateDaysBetween	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDateDaysBetween(OCIError *err, CONST OCIDate *date1, $/;"	f
SDO_OCIDateFromText	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDateFromText(OCIError *err, CONST text *date_str, $/;"	f
SDO_OCIDateLastDay	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDateLastDay(OCIError *err, CONST OCIDate *date, $/;"	f
SDO_OCIDateNextDay	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDateNextDay(OCIError *err, CONST OCIDate *date, CONST text *day_p, $/;"	f
SDO_OCIDateSysDate	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDateSysDate(OCIError *err, OCIDate *sys_date)$/;"	f
SDO_OCIDateToText	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDateToText(OCIError *err, CONST OCIDate *date, $/;"	f
SDO_OCIDateZoneToZone	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDateZoneToZone(OCIError *err, CONST OCIDate *date1,$/;"	f
SDO_OCIDefineArrayOfStruct	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDefineArrayOfStruct(OCIDefine *defnp, OCIError *errhp, ub4 pvskip,$/;"	f
SDO_OCIDefineByPos	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDefineByPos(OCIStmt *stmtp, OCIDefine **defnp, OCIError *errhp,$/;"	f
SDO_OCIDefineDynamic	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDefineDynamic(OCIDefine *defnp, OCIError *errhp, dvoid *octxp,$/;"	f
SDO_OCIDefineObject	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDefineObject(OCIDefine *defnp, OCIError *errhp, $/;"	f
SDO_OCIDescribeAny	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDescribeAny(OCISvcCtx *svchp, OCIError *errhp, dvoid *objptr, $/;"	f
SDO_OCIDescriptorAlloc	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDescriptorAlloc(CONST dvoid *parenth, dvoid **descpp, ub4 type,$/;"	f
SDO_OCIDescriptorFree	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDescriptorFree(dvoid *descp, ub4 type)$/;"	f
SDO_OCIDurationBegin	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDurationBegin(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc, $/;"	f
SDO_OCIDurationEnd	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDurationEnd(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc, $/;"	f
SDO_OCIDurationGetParent	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIDurationGetParent(OCIEnv *env, OCIError *err, $/;"	f
SDO_OCIEnvCreate	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIEnvCreate(OCIEnv **envhpp, ub4 mode, dvoid *ctxp, $/;"	f
SDO_OCIEnvInit	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIEnvInit(OCIEnv **envp, ub4 mode, size_t xtramem_sz, $/;"	f
SDO_OCIErrorGet	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIErrorGet(dvoid *hndlp, ub4 recordno, text *sqlstate,$/;"	f
SDO_OCIHandleAlloc	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIHandleAlloc(CONST dvoid *parenth, dvoid **hndlpp, ub4 type, $/;"	f
SDO_OCIHandleFree	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIHandleFree(dvoid *hndlp, ub4 type)$/;"	f
SDO_OCIInitialize	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIInitialize(ub4 mode, dvoid *ctxp, $/;"	f
SDO_OCIIterCreate	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIIterCreate(OCIEnv *env, OCIError *err, CONST OCIColl *coll, $/;"	f
SDO_OCIIterDelete	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIIterDelete(OCIEnv *env, OCIError *err, OCIIter **itr)$/;"	f
SDO_OCIIterGetCurrent	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIIterGetCurrent(OCIEnv *env, OCIError *err, CONST OCIIter *itr, $/;"	f
SDO_OCIIterInit	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIIterInit(OCIEnv *env, OCIError *err, CONST OCIColl *coll, $/;"	f
SDO_OCIIterNext	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIIterNext(OCIEnv *env, OCIError *err, OCIIter *itr, $/;"	f
SDO_OCIIterPrev	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIIterPrev(OCIEnv *env, OCIError *err, OCIIter *itr, $/;"	f
SDO_OCILdaToSvcCtx	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILdaToSvcCtx(OCISvcCtx **svchpp, OCIError *errhp, Lda_Def *ldap)$/;"	f
SDO_OCILobAppend	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobAppend(OCISvcCtx *svchp, OCIError *errhp, OCILobLocator *dst_locp,$/;"	f
SDO_OCILobAssign	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobAssign(OCIEnv *envhp, OCIError *errhp, CONST OCILobLocator *src_locp, $/;"	f
SDO_OCILobCharSetForm	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobCharSetForm(OCIEnv *envhp, OCIError *errhp, $/;"	f
SDO_OCILobCharSetId	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobCharSetId(OCIEnv *envhp, OCIError *errhp, $/;"	f
SDO_OCILobCopy	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobCopy(OCISvcCtx *svchp, OCIError *errhp, OCILobLocator *dst_locp,$/;"	f
SDO_OCILobDisableBuffering	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobDisableBuffering(OCISvcCtx *svchp, OCIError *errhp,$/;"	f
SDO_OCILobEnableBuffering	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobEnableBuffering(OCISvcCtx *svchp, OCIError *errhp,$/;"	f
SDO_OCILobErase	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobErase(OCISvcCtx *svchp, OCIError *errhp, OCILobLocator *locp,$/;"	f
SDO_OCILobFileClose	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobFileClose(OCISvcCtx *svchp, OCIError *errhp, OCILobLocator *filep)$/;"	f
SDO_OCILobFileCloseAll	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobFileCloseAll(OCISvcCtx *svchp, OCIError *errhp)$/;"	f
SDO_OCILobFileExists	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobFileExists(OCISvcCtx *svchp, OCIError *errhp, OCILobLocator *filep,$/;"	f
SDO_OCILobFileGetName	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobFileGetName(OCIEnv *envhp, OCIError *errhp, $/;"	f
SDO_OCILobFileIsOpen	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobFileIsOpen(OCISvcCtx *svchp, OCIError *errhp, OCILobLocator *filep,$/;"	f
SDO_OCILobFileOpen	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobFileOpen(OCISvcCtx *svchp, OCIError *errhp, OCILobLocator *filep,$/;"	f
SDO_OCILobFileSetName	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobFileSetName(OCIEnv *envhp, OCIError *errhp, OCILobLocator **filepp, $/;"	f
SDO_OCILobFlushBuffer	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobFlushBuffer(OCISvcCtx *svchp, OCIError *errhp, OCILobLocator *locp,$/;"	f
SDO_OCILobGetLength	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobGetLength(OCISvcCtx *svchp, OCIError *errhp, OCILobLocator *locp,$/;"	f
SDO_OCILobIsEqual	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobIsEqual(OCIEnv *envhp, CONST OCILobLocator *x, $/;"	f
SDO_OCILobLoadFromFile	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobLoadFromFile(OCISvcCtx *svchp, OCIError *errhp, $/;"	f
SDO_OCILobLocatorIsInit	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobLocatorIsInit(OCIEnv *envhp, OCIError *errhp, $/;"	f
SDO_OCILobRead	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobRead(OCISvcCtx *svchp, OCIError *errhp, OCILobLocator *locp,$/;"	f
SDO_OCILobTrim	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobTrim(OCISvcCtx *svchp, OCIError *errhp, OCILobLocator *locp,$/;"	f
SDO_OCILobWrite	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILobWrite(OCISvcCtx *svchp, OCIError *errhp, OCILobLocator *locp,$/;"	f
SDO_OCILogoff	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILogoff(OCISvcCtx *svchp, OCIError *errhp)$/;"	f
SDO_OCILogon	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCILogon(OCIEnv *envhp, OCIError *errhp, OCISvcCtx **svchp, $/;"	f
SDO_OCINumberAbs	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberAbs(OCIError *err, CONST OCINumber *number,$/;"	f
SDO_OCINumberAdd	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberAdd(OCIError *err, CONST OCINumber *number1, $/;"	f
SDO_OCINumberArcCos	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberArcCos(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCINumberArcSin	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberArcSin(OCIError *err, CONST OCINumber *number,$/;"	f
SDO_OCINumberArcTan	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberArcTan(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCINumberArcTan2	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberArcTan2(OCIError *err, CONST OCINumber *number1, $/;"	f
SDO_OCINumberAssign	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberAssign(OCIError *err, CONST OCINumber *from,$/;"	f
SDO_OCINumberCeil	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberCeil(OCIError *err, CONST OCINumber *number,$/;"	f
SDO_OCINumberCmp	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberCmp(OCIError *err, CONST OCINumber *number1, $/;"	f
SDO_OCINumberCos	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberCos(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCINumberDiv	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberDiv(OCIError *err, CONST OCINumber *number1, $/;"	f
SDO_OCINumberExp	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberExp(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCINumberFloor	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberFloor(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCINumberFromInt	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberFromInt(OCIError *err, CONST dvoid *inum, uword inum_length,$/;"	f
SDO_OCINumberFromReal	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberFromReal(OCIError *err, CONST dvoid *rnum,$/;"	f
SDO_OCINumberFromText	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberFromText(OCIError *err, CONST text *str, ub4 str_length, $/;"	f
SDO_OCINumberHypCos	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberHypCos(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCINumberHypSin	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberHypSin(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCINumberHypTan	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberHypTan(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCINumberIntPower	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberIntPower(OCIError *err, CONST OCINumber *base,$/;"	f
SDO_OCINumberIsZero	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberIsZero(OCIError *err, CONST OCINumber *number,$/;"	f
SDO_OCINumberLn	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberLn(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCINumberLog	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberLog(OCIError *err, CONST OCINumber *base, $/;"	f
SDO_OCINumberMod	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberMod(OCIError *err, CONST OCINumber *number1, $/;"	f
SDO_OCINumberMul	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberMul(OCIError *err, CONST OCINumber *number1, $/;"	f
SDO_OCINumberNeg	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberNeg(OCIError *err, CONST OCINumber *number,$/;"	f
SDO_OCINumberPower	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberPower(OCIError *err, CONST OCINumber *base, $/;"	f
SDO_OCINumberRound	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberRound(OCIError *err, CONST OCINumber *number,$/;"	f
SDO_OCINumberSetZero	drivers/Oracle/TeOCISDO.cpp	/^void SDO_OCINumberSetZero(OCIError *err, OCINumber *num)$/;"	f
SDO_OCINumberSign	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberSign(OCIError *err, CONST OCINumber *number,$/;"	f
SDO_OCINumberSin	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberSin(OCIError *err, CONST OCINumber *number,$/;"	f
SDO_OCINumberSqrt	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberSqrt(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCINumberSub	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberSub(OCIError *err, CONST OCINumber *number1, $/;"	f
SDO_OCINumberTan	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberTan(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCINumberToInt	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberToInt(OCIError *err, CONST OCINumber *number,$/;"	f
SDO_OCINumberToReal	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberToReal(OCIError *err, CONST OCINumber *number,$/;"	f
SDO_OCINumberToText	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberToText(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCINumberTrunc	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCINumberTrunc(OCIError *err, CONST OCINumber *number, $/;"	f
SDO_OCIObjectAlwaysLatest	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectAlwaysLatest(OCIEnv *env, OCIError *err, dvoid *object)$/;"	f
SDO_OCIObjectArrayPin	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectArrayPin(OCIEnv *env, OCIError *err, OCIRef **ref_array, $/;"	f
SDO_OCIObjectCopy	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectCopy(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc, $/;"	f
SDO_OCIObjectExists	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectExists(OCIEnv *env, OCIError *err, dvoid *ins, boolean *exist)$/;"	f
SDO_OCIObjectFlush	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectFlush(OCIEnv *env, OCIError *err, dvoid *object)$/;"	f
SDO_OCIObjectFlushRefresh	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectFlushRefresh(OCIEnv *env, OCIError *err, dvoid *object)$/;"	f
SDO_OCIObjectFree	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectFree(OCIEnv *env, OCIError *err, dvoid *instance, $/;"	f
SDO_OCIObjectGetInd	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectGetInd(OCIEnv *env, OCIError *err, dvoid *instance, $/;"	f
SDO_OCIObjectGetObjectRef	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectGetObjectRef(OCIEnv *env, OCIError *err, dvoid *object, $/;"	f
SDO_OCIObjectGetProperty	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectGetProperty(OCIEnv *envh, OCIError *errh, CONST dvoid *obj, $/;"	f
SDO_OCIObjectGetTypeRef	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectGetTypeRef(OCIEnv *env, OCIError *err, dvoid *instance, $/;"	f
SDO_OCIObjectIsDirtied	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectIsDirtied(OCIEnv *env, OCIError *err, dvoid *ins,$/;"	f
SDO_OCIObjectIsDirty	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectIsDirty(OCIEnv *env, OCIError *err, dvoid *ins, boolean *dirty)$/;"	f
SDO_OCIObjectIsLoaded	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectIsLoaded(OCIEnv *env, OCIError *err, dvoid *ins, $/;"	f
SDO_OCIObjectIsLocked	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectIsLocked(OCIEnv *env, OCIError *err, dvoid *ins, boolean *lock)$/;"	f
SDO_OCIObjectLock	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectLock(OCIEnv *env, OCIError *err, dvoid *object)$/;"	f
SDO_OCIObjectMarkDelete	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectMarkDelete(OCIEnv *env, OCIError *err, dvoid *instance)$/;"	f
SDO_OCIObjectMarkDeleteByRef	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectMarkDeleteByRef(OCIEnv *env, OCIError *err, OCIRef *object_ref)$/;"	f
SDO_OCIObjectMarkUpdate	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectMarkUpdate(OCIEnv *env, OCIError *err, dvoid *object)$/;"	f
SDO_OCIObjectNew	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectNew(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc,$/;"	f
SDO_OCIObjectNotAlwaysLatest	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectNotAlwaysLatest(OCIEnv *env, OCIError *err, dvoid *object)$/;"	f
SDO_OCIObjectPin	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectPin(OCIEnv *env, OCIError *err, OCIRef *object_ref, $/;"	f
SDO_OCIObjectPinCountReset	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectPinCountReset(OCIEnv *env, OCIError *err, dvoid *object)$/;"	f
SDO_OCIObjectPinTable	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectPinTable(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc, $/;"	f
SDO_OCIObjectRefresh	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectRefresh(OCIEnv *env, OCIError *err, dvoid *object)$/;"	f
SDO_OCIObjectUnmark	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectUnmark(OCIEnv *env, OCIError *err, dvoid *object)$/;"	f
SDO_OCIObjectUnmarkByRef	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectUnmarkByRef(OCIEnv *env, OCIError *err, OCIRef *ref)$/;"	f
SDO_OCIObjectUnpin	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIObjectUnpin(OCIEnv *env, OCIError *err, dvoid *object)$/;"	f
SDO_OCIParamGet	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIParamGet(CONST dvoid *hndlp, ub4 htype, OCIError *errhp, $/;"	f
SDO_OCIParamSet	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIParamSet(dvoid *hdlp, ub4 htyp, OCIError *errhp, CONST dvoid *dscp,$/;"	f
SDO_OCIPasswordChange	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIPasswordChange(OCISvcCtx *svchp, OCIError *errhp, $/;"	f
SDO_OCIRawAllocSize	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIRawAllocSize(OCIEnv *env, OCIError *err, CONST OCIRaw *raw,$/;"	f
SDO_OCIRawAssignBytes	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIRawAssignBytes(OCIEnv *env, OCIError *err, CONST ub1 *rhs, $/;"	f
SDO_OCIRawAssignRaw	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIRawAssignRaw(OCIEnv *env, OCIError *err, CONST OCIRaw *rhs, $/;"	f
SDO_OCIRawPtr	drivers/Oracle/TeOCISDO.cpp	/^ub1 *SDO_OCIRawPtr(OCIEnv *env, CONST OCIRaw *raw)$/;"	f
SDO_OCIRawResize	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIRawResize(OCIEnv *env, OCIError *err, ub4 new_size, OCIRaw **raw)$/;"	f
SDO_OCIRawSize	drivers/Oracle/TeOCISDO.cpp	/^ub4 SDO_OCIRawSize(OCIEnv *env, CONST OCIRaw *raw)$/;"	f
SDO_OCIRefAssign	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIRefAssign(OCIEnv *env, OCIError *err, CONST OCIRef *source, $/;"	f
SDO_OCIRefClear	drivers/Oracle/TeOCISDO.cpp	/^void SDO_OCIRefClear(OCIEnv *env, OCIRef *ref)$/;"	f
SDO_OCIRefFromHex	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIRefFromHex(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc, $/;"	f
SDO_OCIRefHexSize	drivers/Oracle/TeOCISDO.cpp	/^ub4 SDO_OCIRefHexSize(OCIEnv *env, CONST OCIRef *ref)$/;"	f
SDO_OCIRefIsEqual	drivers/Oracle/TeOCISDO.cpp	/^boolean SDO_OCIRefIsEqual(OCIEnv *env, CONST OCIRef *x, CONST OCIRef *y)$/;"	f
SDO_OCIRefIsNull	drivers/Oracle/TeOCISDO.cpp	/^boolean SDO_OCIRefIsNull(OCIEnv *env, CONST OCIRef *ref)$/;"	f
SDO_OCIRefToHex	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIRefToHex(OCIEnv *env, OCIError *err, CONST OCIRef *ref, $/;"	f
SDO_OCIResultSetToStmt	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIResultSetToStmt(OCIResult *rsetdp, OCIError *errhp)$/;"	f
SDO_OCIServerAttach	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIServerAttach(OCIServer *srvhp, OCIError *errhp,$/;"	f
SDO_OCIServerDetach	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIServerDetach(OCIServer *srvhp, OCIError *errhp, ub4 mode)$/;"	f
SDO_OCIServerVersion	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIServerVersion(dvoid *hndlp, OCIError *errhp, text *bufp, ub4 bufsz,$/;"	f
SDO_OCISessionBegin	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCISessionBegin(OCISvcCtx *svchp, OCIError *errhp, $/;"	f
SDO_OCISessionEnd	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCISessionEnd(OCISvcCtx *svchp, OCIError *errhp, $/;"	f
SDO_OCIStmtExecute	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIStmtExecute(OCISvcCtx *svchp, OCIStmt *stmtp, OCIError *errhp, $/;"	f
SDO_OCIStmtFetch	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIStmtFetch(OCIStmt *stmtp, OCIError *errhp, ub4 nrows, $/;"	f
SDO_OCIStmtGetBindInfo	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIStmtGetBindInfo(OCIStmt *stmtp, OCIError *errhp, ub4 size, $/;"	f
SDO_OCIStmtGetPieceInfo	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIStmtGetPieceInfo(OCIStmt *stmtp, OCIError *errhp, $/;"	f
SDO_OCIStmtPrepare	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIStmtPrepare(OCISvcCtx * \/* svchp *\/, OCIStmt *stmtp, OCIError *errhp, CONST OraText *stmt,$/;"	f
SDO_OCIStmtSetPieceInfo	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIStmtSetPieceInfo(dvoid *hndlp, ub4 type, OCIError *errhp, $/;"	f
SDO_OCIStringAllocSize	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIStringAllocSize(OCIEnv *env, OCIError *err, CONST OCIString *vs, $/;"	f
SDO_OCIStringAssign	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIStringAssign(OCIEnv *env, OCIError *err, CONST OCIString *rhs, $/;"	f
SDO_OCIStringAssignText	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIStringAssignText(OCIEnv *env, OCIError *err, CONST text *rhs, $/;"	f
SDO_OCIStringPtr	drivers/Oracle/TeOCISDO.cpp	/^text *SDO_OCIStringPtr(OCIEnv *env, CONST OCIString *vs)$/;"	f
SDO_OCIStringResize	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCIStringResize(OCIEnv *env, OCIError *err, ub4 new_size, $/;"	f
SDO_OCIStringSize	drivers/Oracle/TeOCISDO.cpp	/^ub4 SDO_OCIStringSize(OCIEnv *env, CONST OCIString *vs)$/;"	f
SDO_OCISvcCtxToLda	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCISvcCtxToLda(OCISvcCtx *svchp, OCIError *errhp, Lda_Def *ldap)$/;"	f
SDO_OCITableDelete	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITableDelete(OCIEnv *env, OCIError *err, sb4 index, OCITable *tbl)$/;"	f
SDO_OCITableExists	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITableExists(OCIEnv *env, OCIError *err, CONST OCITable *tbl,$/;"	f
SDO_OCITableFirst	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITableFirst(OCIEnv *env, OCIError *err, CONST OCITable *tbl, $/;"	f
SDO_OCITableLast	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITableLast(OCIEnv *env, OCIError *err, CONST OCITable *tbl, $/;"	f
SDO_OCITableNext	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITableNext(OCIEnv *env, OCIError *err, sb4 index, $/;"	f
SDO_OCITablePrev	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITablePrev(OCIEnv *env, OCIError *err, sb4 index, $/;"	f
SDO_OCITableSize	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITableSize(OCIEnv *env, OCIError *err, CONST OCITable *tbl, $/;"	f
SDO_OCITransCommit	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITransCommit(OCISvcCtx *svchp, OCIError *errhp, ub4 flags)$/;"	f
SDO_OCITransDetach	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITransDetach(OCISvcCtx *svchp, OCIError *errhp, ub4 flags)$/;"	f
SDO_OCITransForget	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITransForget(OCISvcCtx *svchp, OCIError *errhp, ub4 flags)$/;"	f
SDO_OCITransPrepare	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITransPrepare(OCISvcCtx *svchp, OCIError *errhp, ub4 flags)$/;"	f
SDO_OCITransRollback	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITransRollback(OCISvcCtx *svchp, OCIError *errhp, ub4 flags)$/;"	f
SDO_OCITransStart	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITransStart(OCISvcCtx *svchp, OCIError *errhp, uword timeout, ub4 flags)$/;"	f
SDO_OCITypeArrayByName	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeArrayByName(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc,$/;"	f
SDO_OCITypeArrayByRef	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeArrayByRef(OCIEnv *env, OCIError *err, ub4 array_len, $/;"	f
SDO_OCITypeAttrByName	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeAttrByName(OCIEnv *env, OCIError *err, CONST OCIType *tdo, $/;"	f
SDO_OCITypeAttrNext	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeAttrNext(OCIEnv *env, OCIError *err, OCITypeIter *iteratorOCI,$/;"	f
SDO_OCITypeAttrs	drivers/Oracle/TeOCISDO.cpp	/^ub4 SDO_OCITypeAttrs(OCIEnv *env, OCIError *err, CONST OCIType *tdo)$/;"	f
SDO_OCITypeByName	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeByName(OCIEnv *env, OCIError *err, CONST OCISvcCtx *svc, $/;"	f
SDO_OCITypeByRef	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeByRef(OCIEnv *env, OCIError *err, CONST OCIRef *type_ref, $/;"	f
SDO_OCITypeCollElem	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeCollElem(OCIEnv *env, OCIError *err, CONST OCIType *tdo,$/;"	f
SDO_OCITypeCollExtTypeCode	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeCollExtTypeCode(OCIEnv *env, OCIError *err,$/;"	f
SDO_OCITypeCollSize	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeCollSize(OCIEnv *env, OCIError *err, CONST OCIType *tdo, $/;"	f
SDO_OCITypeCollTypeCode	drivers/Oracle/TeOCISDO.cpp	/^OCITypeCode SDO_OCITypeCollTypeCode(OCIEnv *env, OCIError *err, $/;"	f
SDO_OCITypeElemCharSetForm	drivers/Oracle/TeOCISDO.cpp	/^ub2 SDO_OCITypeElemCharSetForm(OCIEnv *env, OCIError *err, CONST OCITypeElem *elem)$/;"	f
SDO_OCITypeElemCharSetID	drivers/Oracle/TeOCISDO.cpp	/^ub2 SDO_OCITypeElemCharSetID(OCIEnv *env, OCIError *err, CONST OCITypeElem *elem)$/;"	f
SDO_OCITypeElemDefaultValue	drivers/Oracle/TeOCISDO.cpp	/^text* SDO_OCITypeElemDefaultValue(OCIEnv *env, OCIError *err,$/;"	f
SDO_OCITypeElemExtTypeCode	drivers/Oracle/TeOCISDO.cpp	/^OCITypeCode SDO_OCITypeElemExtTypeCode(OCIEnv *env, OCIError *err,$/;"	f
SDO_OCITypeElemFlags	drivers/Oracle/TeOCISDO.cpp	/^ub4 SDO_OCITypeElemFlags(OCIEnv *env, OCIError *err, CONST OCITypeElem *elem)$/;"	f
SDO_OCITypeElemLength	drivers/Oracle/TeOCISDO.cpp	/^ub4 SDO_OCITypeElemLength(OCIEnv *env, OCIError *err, CONST OCITypeElem *elem)$/;"	f
SDO_OCITypeElemName	drivers/Oracle/TeOCISDO.cpp	/^text* SDO_OCITypeElemName(OCIEnv *env, OCIError *err, CONST OCITypeElem *elem, $/;"	f
SDO_OCITypeElemNumPrec	drivers/Oracle/TeOCISDO.cpp	/^ub1 SDO_OCITypeElemNumPrec(OCIEnv *env, OCIError *err, CONST OCITypeElem *elem)$/;"	f
SDO_OCITypeElemNumScale	drivers/Oracle/TeOCISDO.cpp	/^sb1 SDO_OCITypeElemNumScale(OCIEnv *env, OCIError *err, CONST OCITypeElem *elem)$/;"	f
SDO_OCITypeElemParamMode	drivers/Oracle/TeOCISDO.cpp	/^OCITypeParamMode SDO_OCITypeElemParamMode(OCIEnv *env, OCIError *err,$/;"	f
SDO_OCITypeElemParameterizedType	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeElemParameterizedType(OCIEnv *env, OCIError *err,$/;"	f
SDO_OCITypeElemType	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeElemType(OCIEnv *env, OCIError *err, CONST OCITypeElem *elem, $/;"	f
SDO_OCITypeElemTypeCode	drivers/Oracle/TeOCISDO.cpp	/^OCITypeCode SDO_OCITypeElemTypeCode(OCIEnv *env, OCIError *err,$/;"	f
SDO_OCITypeIterFree	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeIterFree(OCIEnv *env, OCIError *err, OCITypeIter *iteratorOCI)$/;"	f
SDO_OCITypeIterNew	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeIterNew(OCIEnv *env, OCIError *err, OCIType *tdo, $/;"	f
SDO_OCITypeIterSet	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeIterSet(OCIEnv *env, OCIError *err, OCIType *tdo, $/;"	f
SDO_OCITypeMethodByName	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeMethodByName(OCIEnv *env, OCIError *err, CONST OCIType *tdo, $/;"	f
SDO_OCITypeMethodEncap	drivers/Oracle/TeOCISDO.cpp	/^OCITypeEncap SDO_OCITypeMethodEncap(OCIEnv *env, OCIError *err,$/;"	f
SDO_OCITypeMethodFlags	drivers/Oracle/TeOCISDO.cpp	/^OCITypeMethodFlag SDO_OCITypeMethodFlags(OCIEnv *env, OCIError *err,$/;"	f
SDO_OCITypeMethodMap	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeMethodMap(OCIEnv *env, OCIError *err, CONST OCIType *tdo, $/;"	f
SDO_OCITypeMethodName	drivers/Oracle/TeOCISDO.cpp	/^text *SDO_OCITypeMethodName(OCIEnv *env, OCIError *err,$/;"	f
SDO_OCITypeMethodNext	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeMethodNext(OCIEnv *env, OCIError *err, OCITypeIter *iteratorOCI,$/;"	f
SDO_OCITypeMethodOrder	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeMethodOrder(OCIEnv *env, OCIError *err, CONST OCIType *tdo, $/;"	f
SDO_OCITypeMethodOverload	drivers/Oracle/TeOCISDO.cpp	/^ub4 SDO_OCITypeMethodOverload(OCIEnv *env, OCIError *err, CONST OCIType *tdo, $/;"	f
SDO_OCITypeMethodParams	drivers/Oracle/TeOCISDO.cpp	/^ub4 SDO_OCITypeMethodParams(OCIEnv *env, OCIError *err,$/;"	f
SDO_OCITypeMethods	drivers/Oracle/TeOCISDO.cpp	/^ub4 SDO_OCITypeMethods(OCIEnv *env, OCIError *err, CONST OCIType *tdo)$/;"	f
SDO_OCITypeName	drivers/Oracle/TeOCISDO.cpp	/^text* SDO_OCITypeName(OCIEnv *env, OCIError *err, CONST OCIType *tdo, $/;"	f
SDO_OCITypeParamByName	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeParamByName(OCIEnv *env, OCIError *err, CONST OCITypeMethod *mdo, $/;"	f
SDO_OCITypeParamByPos	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeParamByPos(OCIEnv *env, OCIError *err, CONST OCITypeMethod *mdo, $/;"	f
SDO_OCITypeParamPos	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeParamPos(OCIEnv *env, OCIError *err, CONST OCITypeMethod *mdo, $/;"	f
SDO_OCITypeResult	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeResult(OCIEnv *env, OCIError *err, CONST OCITypeMethod *mdo,$/;"	f
SDO_OCITypeSchema	drivers/Oracle/TeOCISDO.cpp	/^text* SDO_OCITypeSchema(OCIEnv *env, OCIError *err, CONST OCIType *tdo, $/;"	f
SDO_OCITypeTypeCode	drivers/Oracle/TeOCISDO.cpp	/^OCITypeCode SDO_OCITypeTypeCode(OCIEnv *env, OCIError *err, CONST OCIType *tdo)$/;"	f
SDO_OCITypeVTInit	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeVTInit(OCIEnv *env, OCIError *err)$/;"	f
SDO_OCITypeVTInsert	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeVTInsert(OCIEnv *env, OCIError *err, CONST text *schema_name,$/;"	f
SDO_OCITypeVTSelect	drivers/Oracle/TeOCISDO.cpp	/^sword SDO_OCITypeVTSelect(OCIEnv *env, OCIError *err, CONST text *schema_name,$/;"	f
SDO_OCITypeVersion	drivers/Oracle/TeOCISDO.cpp	/^text* SDO_OCITypeVersion(OCIEnv *env, OCIError *err, CONST OCIType *tdo, $/;"	f
SDO_OCI_H	drivers/Oracle/TeOCISDO.h	11;"	d
SDO_ORDINATE_ARRAY	drivers/Oracle/TeOCICursor.h	39;"	d
SDT	drivers/Firebird/ibpp/core/ibpp.h	/^	enum SDT {sdArray, sdBlob, sdDate, sdTime, sdTimestamp, sdString,$/;"	g	namespace:IBPP
SE	image_processing/TePDIRaster2Vector.cpp	41;"	d	file:
SECONDARY_BUF_SIZE	drivers/Oracle/OCI/include/cdemodp0.h	99;"	d
SECONDARY_BUF_SLOP	drivers/Oracle/OCI/include/cdemodp0.h	100;"	d
SEQ_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        SEQ_ATTR_COUNT = 7,$/;"	e	enum:oracle::occi::MetaData::AttrCount
SERGAS	image_processing/TePDIFusionIndexes.hpp	/^      enum TeFusionIndexes {CC, BIAS, VARDIF, SDD, UIQI, RMSE, ERGAS, SIMM, SERGAS, SCC};$/;"	e	enum:TePDIFusionIndexes::TeFusionIndexes
SET	kernel/TeGraph.cpp	73;"	d	file:
SETBIT	drivers/SQLite/sqlite3/sqlite3.c	35093;"	d	file:
SET_FULLSYNC	drivers/SQLite/sqlite3/sqlite3.c	9087;"	d	file:
SET_PCTX	drivers/Oracle/OCI/include/cdemodp0.h	57;"	d
SF_Aggregate	drivers/SQLite/sqlite3/sqlite3.c	10767;"	d	file:
SF_Distinct	drivers/SQLite/sqlite3/sqlite3.c	10765;"	d	file:
SF_Expanded	drivers/SQLite/sqlite3/sqlite3.c	10769;"	d	file:
SF_HasTypeInfo	drivers/SQLite/sqlite3/sqlite3.c	10770;"	d	file:
SF_Resolved	drivers/SQLite/sqlite3/sqlite3.c	10766;"	d	file:
SF_UseSorter	drivers/SQLite/sqlite3/sqlite3.c	10771;"	d	file:
SF_UsesEphemeral	drivers/SQLite/sqlite3/sqlite3.c	10768;"	d	file:
SFowardBackSubstitution	image_processing/TePDIPrincoMixModelStrategy.cpp	/^int SFowardBackSubstitution (TeMatrix& Z, std::vector<double>& y, int ys, std::vector<int>& line, int lines, std::vector<double>& x, int xs)$/;"	f
SGaussElimination	image_processing/TePDIPrincoMixModelStrategy.cpp	/^int SGaussElimination (TeMatrix& Z, std::vector<int>& line, unsigned int componentsNumber)$/;"	f
SHARED	drivers/Oracle/OCI/include/occiControl.h	/^    SHARED = OCI_SHARED,$/;"	e	enum:oracle::occi::Environment::Mode
SHARED_FIRST	drivers/SQLite/sqlite3/sqlite3.c	9206;"	d	file:
SHARED_LOCK	drivers/SQLite/sqlite3/sqlite3.c	9140;"	d	file:
SHARED_SIZE	drivers/SQLite/sqlite3/sqlite3.c	9207;"	d	file:
SHIFT_THRESHOLD	image_processing/TePDIEMClas.hpp	/^      double SHIFT_THRESHOLD;$/;"	m	class:TePDIEMClas
SHOWSEQ_H	kernel/showseq.h	4;"	d
SHP_DLL	drivers/shapelib/TeSHPDefines.h	45;"	d
SHP_DLL	drivers/shapelib/TeSHPDefines.h	47;"	d
SHP_DLL	drivers/shapelib/TeSHPDefines.h	51;"	d
SIMM	image_processing/TePDIFusionIndexes.hpp	/^      enum TeFusionIndexes {CC, BIAS, VARDIF, SDD, UIQI, RMSE, ERGAS, SIMM, SERGAS, SCC};$/;"	e	enum:TePDIFusionIndexes::TeFusionIndexes
SIZE_TMAXVAL	drivers/Oracle/OCI/include/oratypes.h	279;"	d
SIZE_TMAXVAL	drivers/Oracle/OCI/include/oratypes.h	281;"	d
SKATER_COM_POPULACAO	stat/TeSkaterFunctions.h	8;"	d
SKATER_POR_AMBOS	stat/TeSkaterFunctions.h	13;"	d
SKATER_POR_GRUPO	stat/TeSkaterFunctions.h	11;"	d
SKATER_POR_POPULACAO	stat/TeSkaterFunctions.h	12;"	d
SKATER_SEM_POPULACAO	stat/TeSkaterFunctions.h	7;"	d
SLOT_2_0	drivers/SQLite/sqlite3/sqlite3.c	21299;"	d	file:
SLOT_4_2_0	drivers/SQLite/sqlite3/sqlite3.c	21300;"	d	file:
SMALLEST_INT64	drivers/SQLite/sqlite3/sqlite3.c	7784;"	d	file:
SORTER_MAX_MERGE_COUNT	drivers/SQLite/sqlite3/sqlite3.c	70306;"	d	file:
SORTER_MIN_WORKING	drivers/SQLite/sqlite3/sqlite3.c	70303;"	d	file:
SPARSEMATRIX_H	kernel/TeSparseMatrix.h	3;"	d
SPB	drivers/Firebird/ibpp/core/_ibpp.h	/^	SPB() : mBuffer(0), mSize(0), mAlloc(0) { }$/;"	f	class:ibpp_internals::SPB
SPB	drivers/Firebird/ibpp/core/_ibpp.h	/^class SPB$/;"	c	namespace:ibpp_internals
SPD_FORCE	drivers/Oracle/OCI/include/occiControl.h	/^       SPD_FORCE = OCI_SPD_FORCE$/;"	e	enum:oracle::occi::StatelessConnectionPool::DestroyMode
SPLPluginInfoT	drivers/spl/PluginsManager.h	/^      typedef std::pair< PluginInfo, long > SPLPluginInfoT;$/;"	t	class:PluginsManager
SPOT4	image_processing/TePDIWiSpeRFusion.hpp	/^      enum TeSatellitesTypes {CBERS, CBERS2B, IKONOS, QUICKBIRD, SPOT4, SPOT5};$/;"	e	enum:TePDIWiSpeRFusion::TeSatellitesTypes
SPOT5	image_processing/TePDIWiSpeRFusion.hpp	/^      enum TeSatellitesTypes {CBERS, CBERS2B, IKONOS, QUICKBIRD, SPOT4, SPOT5};$/;"	e	enum:TePDIWiSpeRFusion::TeSatellitesTypes
SP_SUPPORTED	drivers/Oracle/OCI/include/occiControl.h	/^          ,SP_SUPPORTED = OCI_SP_SUPPORTED$/;"	e	enum:oracle::occi::MetaData::__anon89
SP_UNSUPPORTED	drivers/Oracle/OCI/include/occiControl.h	/^          ,SP_UNSUPPORTED = OCI_SP_UNSUPPORTED$/;"	e	enum:oracle::occi::MetaData::__anon89
SPis	kernel/TeProjection.h	/^		SPis,	\/\/ Y-coordinate of sub-satellite point $/;"	m	class:TeSatelliteProjection
SPjs	kernel/TeProjection.h	/^		SPjs,	\/\/ X-coordinate of sub-satellite point$/;"	m	class:TeSatelliteProjection
SPri	kernel/TeProjection.h	/^	double	SPri,	\/\/ Sensor angle resolution along y axis in radians$/;"	m	class:TeSatelliteProjection
SPrj	kernel/TeProjection.h	/^		SPrj,	\/\/ Sensor angle resolution along x axis in radians$/;"	m	class:TeSatelliteProjection
SPrs	kernel/TeProjection.h	/^	        SPrs,   \/\/ Radius of satellite orbit in meters$/;"	m	class:TeSatelliteProjection
SPscn	kernel/TeProjection.h	/^		SPscn,	\/\/ Scanning mode: 0-WE\/NS, 1-SN\/EW$/;"	m	class:TeSatelliteProjection
SPyaw	kernel/TeProjection.h	/^		SPyaw;  \/\/ Grid orientation, i.e., angle in radians between$/;"	m	class:TeSatelliteProjection
SQLCS_EXPLICIT	drivers/Oracle/OCI/include/ocidfn.h	248;"	d
SQLCS_FLEXIBLE	drivers/Oracle/OCI/include/ocidfn.h	249;"	d
SQLCS_IMPLICIT	drivers/Oracle/OCI/include/ocidfn.h	246;"	d
SQLCS_LIT_NULL	drivers/Oracle/OCI/include/ocidfn.h	250;"	d
SQLCS_NCHAR	drivers/Oracle/OCI/include/ocidfn.h	247;"	d
SQLDA_VERSION1	drivers/Firebird/ibpp/core/ibase.h	353;"	d
SQLException	drivers/Firebird/ibpp/core/ibpp.h	/^	class SQLException : public Exception$/;"	c	namespace:IBPP
SQLException	drivers/Oracle/OCI/include/occiControl.h	/^class SQLException : public OCCI_STD_NAMESPACE::exception$/;"	c	namespace:oracle::occi
SQLExceptionImpl	drivers/Firebird/ibpp/core/_ibpp.h	/^class SQLExceptionImpl : public IBPP::SQLException, public ExceptionBase$/;"	c	namespace:ibpp_internals
SQLExceptionImpl	drivers/Firebird/ibpp/core/exception.cpp	/^SQLExceptionImpl::SQLExceptionImpl() throw()$/;"	f	class:SQLExceptionImpl
SQLExceptionImpl	drivers/Firebird/ibpp/core/exception.cpp	/^SQLExceptionImpl::SQLExceptionImpl(const IBS& status, const std::string& context,$/;"	f	class:SQLExceptionImpl
SQLExceptionImpl	drivers/Firebird/ibpp/core/exception.cpp	/^SQLExceptionImpl::SQLExceptionImpl(const SQLExceptionImpl& copied) throw()$/;"	f	class:SQLExceptionImpl
SQLITE3_MUTEX_INITIALIZER	drivers/SQLite/sqlite3/sqlite3.c	17251;"	d	file:
SQLITE3_MUTEX_INITIALIZER	drivers/SQLite/sqlite3/sqlite3.c	17253;"	d	file:
SQLITE3_MUTEX_INITIALIZER	drivers/SQLite/sqlite3/sqlite3.c	17538;"	d	file:
SQLITE3_MUTEX_INITIALIZER	drivers/SQLite/sqlite3/sqlite3.c	17540;"	d	file:
SQLITE3_MUTEX_INITIALIZER	drivers/SQLite/sqlite3/sqlite3.c	17876;"	d	file:
SQLITE3_MUTEX_INITIALIZER	drivers/SQLite/sqlite3/sqlite3.c	17878;"	d	file:
SQLITE3_TEXT	drivers/SQLite/sqlite3/sqlite3.c	3952;"	d	file:
SQLITE3_TEXT	drivers/SQLite/sqlite3/sqlite3.h	3410;"	d
SQLITE_ABORT	drivers/SQLite/sqlite3/sqlite3.c	928;"	d	file:
SQLITE_ABORT	drivers/SQLite/sqlite3/sqlite3.h	386;"	d
SQLITE_ACCESS_EXISTS	drivers/SQLite/sqlite3/sqlite3.c	1564;"	d	file:
SQLITE_ACCESS_EXISTS	drivers/SQLite/sqlite3/sqlite3.h	1022;"	d
SQLITE_ACCESS_READ	drivers/SQLite/sqlite3/sqlite3.c	1566;"	d	file:
SQLITE_ACCESS_READ	drivers/SQLite/sqlite3/sqlite3.h	1024;"	d
SQLITE_ACCESS_READWRITE	drivers/SQLite/sqlite3/sqlite3.c	1565;"	d	file:
SQLITE_ACCESS_READWRITE	drivers/SQLite/sqlite3/sqlite3.h	1023;"	d
SQLITE_AFF_INTEGER	drivers/SQLite/sqlite3/sqlite3.c	9862;"	d	file:
SQLITE_AFF_MASK	drivers/SQLite/sqlite3/sqlite3.c	9871;"	d	file:
SQLITE_AFF_NONE	drivers/SQLite/sqlite3/sqlite3.c	9860;"	d	file:
SQLITE_AFF_NUMERIC	drivers/SQLite/sqlite3/sqlite3.c	9861;"	d	file:
SQLITE_AFF_REAL	drivers/SQLite/sqlite3/sqlite3.c	9863;"	d	file:
SQLITE_AFF_TEXT	drivers/SQLite/sqlite3/sqlite3.c	9859;"	d	file:
SQLITE_ALTER_TABLE	drivers/SQLite/sqlite3/sqlite3.c	2857;"	d	file:
SQLITE_ALTER_TABLE	drivers/SQLite/sqlite3/sqlite3.h	2315;"	d
SQLITE_AMALGAMATION	drivers/SQLite/sqlite3/sqlite3.c	21;"	d	file:
SQLITE_ANALYZE	drivers/SQLite/sqlite3/sqlite3.c	2859;"	d	file:
SQLITE_ANALYZE	drivers/SQLite/sqlite3/sqlite3.h	2317;"	d
SQLITE_ANY	drivers/SQLite/sqlite3/sqlite3.c	4310;"	d	file:
SQLITE_ANY	drivers/SQLite/sqlite3/sqlite3.h	3768;"	d
SQLITE_API	drivers/SQLite/sqlite3/sqlite3.c	26;"	d	file:
SQLITE_API	drivers/SQLite/sqlite3/sqlite3.c	595;"	d	file:
SQLITE_API	drivers/SQLite/sqlite3/sqlite3.h	53;"	d
SQLITE_ASCII	drivers/SQLite/sqlite3/sqlite3.c	7682;"	d	file:
SQLITE_ATTACH	drivers/SQLite/sqlite3/sqlite3.c	2855;"	d	file:
SQLITE_ATTACH	drivers/SQLite/sqlite3/sqlite3.h	2313;"	d
SQLITE_AUTH	drivers/SQLite/sqlite3/sqlite3.c	947;"	d	file:
SQLITE_AUTH	drivers/SQLite/sqlite3/sqlite3.h	405;"	d
SQLITE_AutoIndex	drivers/SQLite/sqlite3/sqlite3.c	9630;"	d	file:
SQLITE_BIGENDIAN	drivers/SQLite/sqlite3/sqlite3.c	7769;"	d	file:
SQLITE_BIGENDIAN	drivers/SQLite/sqlite3/sqlite3.c	7773;"	d	file:
SQLITE_BIG_DBL	drivers/SQLite/sqlite3/sqlite3.c	7618;"	d	file:
SQLITE_BIG_DBL	drivers/SQLite/sqlite3/sqlite3.c	7626;"	d	file:
SQLITE_BLOB	drivers/SQLite/sqlite3/sqlite3.c	3945;"	d	file:
SQLITE_BLOB	drivers/SQLite/sqlite3/sqlite3.h	3403;"	d
SQLITE_BUSY	drivers/SQLite/sqlite3/sqlite3.c	929;"	d	file:
SQLITE_BUSY	drivers/SQLite/sqlite3/sqlite3.h	387;"	d
SQLITE_BUSY_RECOVERY	drivers/SQLite/sqlite3/sqlite3.c	1001;"	d	file:
SQLITE_BUSY_RECOVERY	drivers/SQLite/sqlite3/sqlite3.h	459;"	d
SQLITE_CANTOPEN	drivers/SQLite/sqlite3/sqlite3.c	938;"	d	file:
SQLITE_CANTOPEN	drivers/SQLite/sqlite3/sqlite3.h	396;"	d
SQLITE_CANTOPEN_BKPT	drivers/SQLite/sqlite3/sqlite3.c	11216;"	d	file:
SQLITE_CANTOPEN_NOTEMPDIR	drivers/SQLite/sqlite3/sqlite3.c	1002;"	d	file:
SQLITE_CANTOPEN_NOTEMPDIR	drivers/SQLite/sqlite3/sqlite3.h	460;"	d
SQLITE_CHECKPOINT_FULL	drivers/SQLite/sqlite3/sqlite3.c	7177;"	d	file:
SQLITE_CHECKPOINT_FULL	drivers/SQLite/sqlite3/sqlite3.h	6635;"	d
SQLITE_CHECKPOINT_PASSIVE	drivers/SQLite/sqlite3/sqlite3.c	7176;"	d	file:
SQLITE_CHECKPOINT_PASSIVE	drivers/SQLite/sqlite3/sqlite3.h	6634;"	d
SQLITE_CHECKPOINT_RESTART	drivers/SQLite/sqlite3/sqlite3.c	7178;"	d	file:
SQLITE_CHECKPOINT_RESTART	drivers/SQLite/sqlite3/sqlite3.h	6636;"	d
SQLITE_COLL_BINARY	drivers/SQLite/sqlite3/sqlite3.c	9834;"	d	file:
SQLITE_COLL_NOCASE	drivers/SQLite/sqlite3/sqlite3.c	9835;"	d	file:
SQLITE_COLL_REVERSE	drivers/SQLite/sqlite3/sqlite3.c	9836;"	d	file:
SQLITE_COLL_USER	drivers/SQLite/sqlite3/sqlite3.c	9837;"	d	file:
SQLITE_CONFIG_GETMALLOC	drivers/SQLite/sqlite3/sqlite3.c	2034;"	d	file:
SQLITE_CONFIG_GETMALLOC	drivers/SQLite/sqlite3/sqlite3.h	1492;"	d
SQLITE_CONFIG_GETMUTEX	drivers/SQLite/sqlite3/sqlite3.c	2040;"	d	file:
SQLITE_CONFIG_GETMUTEX	drivers/SQLite/sqlite3/sqlite3.h	1498;"	d
SQLITE_CONFIG_GETPCACHE	drivers/SQLite/sqlite3/sqlite3.c	2044;"	d	file:
SQLITE_CONFIG_GETPCACHE	drivers/SQLite/sqlite3/sqlite3.h	1502;"	d
SQLITE_CONFIG_HEAP	drivers/SQLite/sqlite3/sqlite3.c	2037;"	d	file:
SQLITE_CONFIG_HEAP	drivers/SQLite/sqlite3/sqlite3.h	1495;"	d
SQLITE_CONFIG_LOG	drivers/SQLite/sqlite3/sqlite3.c	2045;"	d	file:
SQLITE_CONFIG_LOG	drivers/SQLite/sqlite3/sqlite3.h	1503;"	d
SQLITE_CONFIG_LOOKASIDE	drivers/SQLite/sqlite3/sqlite3.c	2042;"	d	file:
SQLITE_CONFIG_LOOKASIDE	drivers/SQLite/sqlite3/sqlite3.h	1500;"	d
SQLITE_CONFIG_MALLOC	drivers/SQLite/sqlite3/sqlite3.c	2033;"	d	file:
SQLITE_CONFIG_MALLOC	drivers/SQLite/sqlite3/sqlite3.h	1491;"	d
SQLITE_CONFIG_MEMSTATUS	drivers/SQLite/sqlite3/sqlite3.c	2038;"	d	file:
SQLITE_CONFIG_MEMSTATUS	drivers/SQLite/sqlite3/sqlite3.h	1496;"	d
SQLITE_CONFIG_MULTITHREAD	drivers/SQLite/sqlite3/sqlite3.c	2031;"	d	file:
SQLITE_CONFIG_MULTITHREAD	drivers/SQLite/sqlite3/sqlite3.h	1489;"	d
SQLITE_CONFIG_MUTEX	drivers/SQLite/sqlite3/sqlite3.c	2039;"	d	file:
SQLITE_CONFIG_MUTEX	drivers/SQLite/sqlite3/sqlite3.h	1497;"	d
SQLITE_CONFIG_PAGECACHE	drivers/SQLite/sqlite3/sqlite3.c	2036;"	d	file:
SQLITE_CONFIG_PAGECACHE	drivers/SQLite/sqlite3/sqlite3.h	1494;"	d
SQLITE_CONFIG_PCACHE	drivers/SQLite/sqlite3/sqlite3.c	2043;"	d	file:
SQLITE_CONFIG_PCACHE	drivers/SQLite/sqlite3/sqlite3.h	1501;"	d
SQLITE_CONFIG_SCRATCH	drivers/SQLite/sqlite3/sqlite3.c	2035;"	d	file:
SQLITE_CONFIG_SCRATCH	drivers/SQLite/sqlite3/sqlite3.h	1493;"	d
SQLITE_CONFIG_SERIALIZED	drivers/SQLite/sqlite3/sqlite3.c	2032;"	d	file:
SQLITE_CONFIG_SERIALIZED	drivers/SQLite/sqlite3/sqlite3.h	1490;"	d
SQLITE_CONFIG_SINGLETHREAD	drivers/SQLite/sqlite3/sqlite3.c	2030;"	d	file:
SQLITE_CONFIG_SINGLETHREAD	drivers/SQLite/sqlite3/sqlite3.h	1488;"	d
SQLITE_CONFIG_URI	drivers/SQLite/sqlite3/sqlite3.c	2046;"	d	file:
SQLITE_CONFIG_URI	drivers/SQLite/sqlite3/sqlite3.h	1504;"	d
SQLITE_CONSTRAINT	drivers/SQLite/sqlite3/sqlite3.c	943;"	d	file:
SQLITE_CONSTRAINT	drivers/SQLite/sqlite3/sqlite3.h	401;"	d
SQLITE_COPY	drivers/SQLite/sqlite3/sqlite3.c	2864;"	d	file:
SQLITE_COPY	drivers/SQLite/sqlite3/sqlite3.h	2322;"	d
SQLITE_CORE	drivers/SQLite/sqlite3/sqlite3.c	114920;"	d	file:
SQLITE_CORE	drivers/SQLite/sqlite3/sqlite3.c	20;"	d	file:
SQLITE_CORE	drivers/SQLite/sqlite3/sqlite3.c	89214;"	d	file:
SQLITE_CORRUPT	drivers/SQLite/sqlite3/sqlite3.c	935;"	d	file:
SQLITE_CORRUPT	drivers/SQLite/sqlite3/sqlite3.h	393;"	d
SQLITE_CORRUPT_BKPT	drivers/SQLite/sqlite3/sqlite3.c	11214;"	d	file:
SQLITE_CORRUPT_VTAB	drivers/SQLite/sqlite3/sqlite3.c	1003;"	d	file:
SQLITE_CORRUPT_VTAB	drivers/SQLite/sqlite3/sqlite3.h	461;"	d
SQLITE_CREATE_INDEX	drivers/SQLite/sqlite3/sqlite3.c	2832;"	d	file:
SQLITE_CREATE_INDEX	drivers/SQLite/sqlite3/sqlite3.h	2290;"	d
SQLITE_CREATE_TABLE	drivers/SQLite/sqlite3/sqlite3.c	2833;"	d	file:
SQLITE_CREATE_TABLE	drivers/SQLite/sqlite3/sqlite3.h	2291;"	d
SQLITE_CREATE_TEMP_INDEX	drivers/SQLite/sqlite3/sqlite3.c	2834;"	d	file:
SQLITE_CREATE_TEMP_INDEX	drivers/SQLite/sqlite3/sqlite3.h	2292;"	d
SQLITE_CREATE_TEMP_TABLE	drivers/SQLite/sqlite3/sqlite3.c	2835;"	d	file:
SQLITE_CREATE_TEMP_TABLE	drivers/SQLite/sqlite3/sqlite3.h	2293;"	d
SQLITE_CREATE_TEMP_TRIGGER	drivers/SQLite/sqlite3/sqlite3.c	2836;"	d	file:
SQLITE_CREATE_TEMP_TRIGGER	drivers/SQLite/sqlite3/sqlite3.h	2294;"	d
SQLITE_CREATE_TEMP_VIEW	drivers/SQLite/sqlite3/sqlite3.c	2837;"	d	file:
SQLITE_CREATE_TEMP_VIEW	drivers/SQLite/sqlite3/sqlite3.h	2295;"	d
SQLITE_CREATE_TRIGGER	drivers/SQLite/sqlite3/sqlite3.c	2838;"	d	file:
SQLITE_CREATE_TRIGGER	drivers/SQLite/sqlite3/sqlite3.h	2296;"	d
SQLITE_CREATE_VIEW	drivers/SQLite/sqlite3/sqlite3.c	2839;"	d	file:
SQLITE_CREATE_VIEW	drivers/SQLite/sqlite3/sqlite3.h	2297;"	d
SQLITE_CREATE_VTABLE	drivers/SQLite/sqlite3/sqlite3.c	2860;"	d	file:
SQLITE_CREATE_VTABLE	drivers/SQLite/sqlite3/sqlite3.h	2318;"	d
SQLITE_CkptFullFSync	drivers/SQLite/sqlite3/sqlite3.c	9625;"	d	file:
SQLITE_ColumnCache	drivers/SQLite/sqlite3/sqlite3.c	9641;"	d	file:
SQLITE_CountRows	drivers/SQLite/sqlite3/sqlite3.c	9611;"	d	file:
SQLITE_DBCONFIG_ENABLE_FKEY	drivers/SQLite/sqlite3/sqlite3.c	2107;"	d	file:
SQLITE_DBCONFIG_ENABLE_FKEY	drivers/SQLite/sqlite3/sqlite3.h	1565;"	d
SQLITE_DBCONFIG_ENABLE_TRIGGER	drivers/SQLite/sqlite3/sqlite3.c	2108;"	d	file:
SQLITE_DBCONFIG_ENABLE_TRIGGER	drivers/SQLite/sqlite3/sqlite3.h	1566;"	d
SQLITE_DBCONFIG_LOOKASIDE	drivers/SQLite/sqlite3/sqlite3.c	2106;"	d	file:
SQLITE_DBCONFIG_LOOKASIDE	drivers/SQLite/sqlite3/sqlite3.h	1564;"	d
SQLITE_DBSTATUS_CACHE_HIT	drivers/SQLite/sqlite3/sqlite3.c	6405;"	d	file:
SQLITE_DBSTATUS_CACHE_HIT	drivers/SQLite/sqlite3/sqlite3.h	5863;"	d
SQLITE_DBSTATUS_CACHE_MISS	drivers/SQLite/sqlite3/sqlite3.c	6406;"	d	file:
SQLITE_DBSTATUS_CACHE_MISS	drivers/SQLite/sqlite3/sqlite3.h	5864;"	d
SQLITE_DBSTATUS_CACHE_USED	drivers/SQLite/sqlite3/sqlite3.c	6399;"	d	file:
SQLITE_DBSTATUS_CACHE_USED	drivers/SQLite/sqlite3/sqlite3.h	5857;"	d
SQLITE_DBSTATUS_LOOKASIDE_HIT	drivers/SQLite/sqlite3/sqlite3.c	6402;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_HIT	drivers/SQLite/sqlite3/sqlite3.h	5860;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	drivers/SQLite/sqlite3/sqlite3.c	6404;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	drivers/SQLite/sqlite3/sqlite3.h	5862;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	drivers/SQLite/sqlite3/sqlite3.c	6403;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	drivers/SQLite/sqlite3/sqlite3.h	5861;"	d
SQLITE_DBSTATUS_LOOKASIDE_USED	drivers/SQLite/sqlite3/sqlite3.c	6398;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_USED	drivers/SQLite/sqlite3/sqlite3.h	5856;"	d
SQLITE_DBSTATUS_MAX	drivers/SQLite/sqlite3/sqlite3.c	6407;"	d	file:
SQLITE_DBSTATUS_MAX	drivers/SQLite/sqlite3/sqlite3.h	5865;"	d
SQLITE_DBSTATUS_SCHEMA_USED	drivers/SQLite/sqlite3/sqlite3.c	6400;"	d	file:
SQLITE_DBSTATUS_SCHEMA_USED	drivers/SQLite/sqlite3/sqlite3.h	5858;"	d
SQLITE_DBSTATUS_STMT_USED	drivers/SQLite/sqlite3/sqlite3.c	6401;"	d	file:
SQLITE_DBSTATUS_STMT_USED	drivers/SQLite/sqlite3/sqlite3.h	5859;"	d
SQLITE_DEBUG_OS_TRACE	drivers/SQLite/sqlite3/sqlite3.c	22353;"	d	file:
SQLITE_DEBUG_OS_TRACE	drivers/SQLite/sqlite3/sqlite3.c	24695;"	d	file:
SQLITE_DEBUG_OS_TRACE	drivers/SQLite/sqlite3/sqlite3.c	31476;"	d	file:
SQLITE_DEFAULT_AUTOVACUUM	drivers/SQLite/sqlite3/sqlite3.c	7986;"	d	file:
SQLITE_DEFAULT_CACHE_SIZE	drivers/SQLite/sqlite3/sqlite3.c	187;"	d	file:
SQLITE_DEFAULT_FILE_FORMAT	drivers/SQLite/sqlite3/sqlite3.c	7648;"	d	file:
SQLITE_DEFAULT_FILE_PERMISSIONS	drivers/SQLite/sqlite3/sqlite3.c	24559;"	d	file:
SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT	drivers/SQLite/sqlite3/sqlite3.c	8657;"	d	file:
SQLITE_DEFAULT_MEMSTATUS	drivers/SQLite/sqlite3/sqlite3.c	375;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	drivers/SQLite/sqlite3/sqlite3.c	239;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	drivers/SQLite/sqlite3/sqlite3.c	242;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	drivers/SQLite/sqlite3/sqlite3.c	243;"	d	file:
SQLITE_DEFAULT_PROXYDIR_PERMISSIONS	drivers/SQLite/sqlite3/sqlite3.c	24566;"	d	file:
SQLITE_DEFAULT_RECURSIVE_TRIGGERS	drivers/SQLite/sqlite3/sqlite3.c	7656;"	d	file:
SQLITE_DEFAULT_SECTOR_SIZE	drivers/SQLite/sqlite3/sqlite3.c	9094;"	d	file:
SQLITE_DEFAULT_TEMP_CACHE_SIZE	drivers/SQLite/sqlite3/sqlite3.c	190;"	d	file:
SQLITE_DEFAULT_WAL_AUTOCHECKPOINT	drivers/SQLite/sqlite3/sqlite3.c	198;"	d	file:
SQLITE_DELETE	drivers/SQLite/sqlite3/sqlite3.c	2840;"	d	file:
SQLITE_DELETE	drivers/SQLite/sqlite3/sqlite3.h	2298;"	d
SQLITE_DENY	drivers/SQLite/sqlite3/sqlite3.c	2809;"	d	file:
SQLITE_DENY	drivers/SQLite/sqlite3/sqlite3.h	2267;"	d
SQLITE_DEPRECATED	drivers/SQLite/sqlite3/sqlite3.c	612;"	d	file:
SQLITE_DEPRECATED	drivers/SQLite/sqlite3/sqlite3.h	70;"	d
SQLITE_DETACH	drivers/SQLite/sqlite3/sqlite3.c	2856;"	d	file:
SQLITE_DETACH	drivers/SQLite/sqlite3/sqlite3.h	2314;"	d
SQLITE_DONE	drivers/SQLite/sqlite3/sqlite3.c	952;"	d	file:
SQLITE_DONE	drivers/SQLite/sqlite3/sqlite3.h	410;"	d
SQLITE_DROP_INDEX	drivers/SQLite/sqlite3/sqlite3.c	2841;"	d	file:
SQLITE_DROP_INDEX	drivers/SQLite/sqlite3/sqlite3.h	2299;"	d
SQLITE_DROP_TABLE	drivers/SQLite/sqlite3/sqlite3.c	2842;"	d	file:
SQLITE_DROP_TABLE	drivers/SQLite/sqlite3/sqlite3.h	2300;"	d
SQLITE_DROP_TEMP_INDEX	drivers/SQLite/sqlite3/sqlite3.c	2843;"	d	file:
SQLITE_DROP_TEMP_INDEX	drivers/SQLite/sqlite3/sqlite3.h	2301;"	d
SQLITE_DROP_TEMP_TABLE	drivers/SQLite/sqlite3/sqlite3.c	2844;"	d	file:
SQLITE_DROP_TEMP_TABLE	drivers/SQLite/sqlite3/sqlite3.h	2302;"	d
SQLITE_DROP_TEMP_TRIGGER	drivers/SQLite/sqlite3/sqlite3.c	2845;"	d	file:
SQLITE_DROP_TEMP_TRIGGER	drivers/SQLite/sqlite3/sqlite3.h	2303;"	d
SQLITE_DROP_TEMP_VIEW	drivers/SQLite/sqlite3/sqlite3.c	2846;"	d	file:
SQLITE_DROP_TEMP_VIEW	drivers/SQLite/sqlite3/sqlite3.h	2304;"	d
SQLITE_DROP_TRIGGER	drivers/SQLite/sqlite3/sqlite3.c	2847;"	d	file:
SQLITE_DROP_TRIGGER	drivers/SQLite/sqlite3/sqlite3.h	2305;"	d
SQLITE_DROP_VIEW	drivers/SQLite/sqlite3/sqlite3.c	2848;"	d	file:
SQLITE_DROP_VIEW	drivers/SQLite/sqlite3/sqlite3.h	2306;"	d
SQLITE_DROP_VTABLE	drivers/SQLite/sqlite3/sqlite3.c	2861;"	d	file:
SQLITE_DROP_VTABLE	drivers/SQLite/sqlite3/sqlite3.h	2319;"	d
SQLITE_DYNAMIC	drivers/SQLite/sqlite3/sqlite3.c	7857;"	d	file:
SQLITE_DistinctOpt	drivers/SQLite/sqlite3/sqlite3.c	9648;"	d	file:
SQLITE_EBCDIC	drivers/SQLite/sqlite3/sqlite3.c	7680;"	d	file:
SQLITE_EMPTY	drivers/SQLite/sqlite3/sqlite3.c	940;"	d	file:
SQLITE_EMPTY	drivers/SQLite/sqlite3/sqlite3.h	398;"	d
SQLITE_ENABLE_FTS3	drivers/SQLite/sqlite3/sqlite3.c	11225;"	d	file:
SQLITE_ENABLE_FTS3	drivers/SQLite/sqlite3/sqlite3.c	114148;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	drivers/SQLite/sqlite3/sqlite3.c	24464;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	drivers/SQLite/sqlite3/sqlite3.c	24466;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	drivers/SQLite/sqlite3/sqlite3.c	91080;"	d	file:
SQLITE_ERROR	drivers/SQLite/sqlite3/sqlite3.c	925;"	d	file:
SQLITE_ERROR	drivers/SQLite/sqlite3/sqlite3.h	383;"	d
SQLITE_EXPERIMENTAL	drivers/SQLite/sqlite3/sqlite3.c	613;"	d	file:
SQLITE_EXPERIMENTAL	drivers/SQLite/sqlite3/sqlite3.h	71;"	d
SQLITE_EXTENSION_INIT1	drivers/SQLite/sqlite3/sqlite3.c	89660;"	d	file:
SQLITE_EXTENSION_INIT1	drivers/SQLite/sqlite3/sqlite3ext.h	444;"	d
SQLITE_EXTENSION_INIT2	drivers/SQLite/sqlite3/sqlite3.c	89661;"	d	file:
SQLITE_EXTENSION_INIT2	drivers/SQLite/sqlite3/sqlite3ext.h	445;"	d
SQLITE_EXTERN	drivers/SQLite/sqlite3/sqlite3.c	591;"	d	file:
SQLITE_EXTERN	drivers/SQLite/sqlite3/sqlite3.h	49;"	d
SQLITE_EnableTrigger	drivers/SQLite/sqlite3/sqlite3.c	9633;"	d	file:
SQLITE_FAIL	drivers/SQLite/sqlite3/sqlite3.c	7262;"	d	file:
SQLITE_FAIL	drivers/SQLite/sqlite3/sqlite3.h	6720;"	d
SQLITE_FAULTINJECTOR_COUNT	drivers/SQLite/sqlite3/sqlite3.c	11836;"	d	file:
SQLITE_FAULTINJECTOR_MALLOC	drivers/SQLite/sqlite3/sqlite3.c	11835;"	d	file:
SQLITE_FCNTL_CHUNK_SIZE	drivers/SQLite/sqlite3/sqlite3.c	1327;"	d	file:
SQLITE_FCNTL_CHUNK_SIZE	drivers/SQLite/sqlite3/sqlite3.h	785;"	d
SQLITE_FCNTL_DB_UNCHANGED	drivers/SQLite/sqlite3/sqlite3.c	9227;"	d	file:
SQLITE_FCNTL_FILE_POINTER	drivers/SQLite/sqlite3/sqlite3.c	1328;"	d	file:
SQLITE_FCNTL_FILE_POINTER	drivers/SQLite/sqlite3/sqlite3.h	786;"	d
SQLITE_FCNTL_LOCKSTATE	drivers/SQLite/sqlite3/sqlite3.c	1322;"	d	file:
SQLITE_FCNTL_LOCKSTATE	drivers/SQLite/sqlite3/sqlite3.h	780;"	d
SQLITE_FCNTL_OVERWRITE	drivers/SQLite/sqlite3/sqlite3.c	1332;"	d	file:
SQLITE_FCNTL_OVERWRITE	drivers/SQLite/sqlite3/sqlite3.h	790;"	d
SQLITE_FCNTL_PERSIST_WAL	drivers/SQLite/sqlite3/sqlite3.c	1331;"	d	file:
SQLITE_FCNTL_PERSIST_WAL	drivers/SQLite/sqlite3/sqlite3.h	789;"	d
SQLITE_FCNTL_SIZE_HINT	drivers/SQLite/sqlite3/sqlite3.c	1326;"	d	file:
SQLITE_FCNTL_SIZE_HINT	drivers/SQLite/sqlite3/sqlite3.h	784;"	d
SQLITE_FCNTL_SYNC_OMITTED	drivers/SQLite/sqlite3/sqlite3.c	1329;"	d	file:
SQLITE_FCNTL_SYNC_OMITTED	drivers/SQLite/sqlite3/sqlite3.h	787;"	d
SQLITE_FCNTL_WIN32_AV_RETRY	drivers/SQLite/sqlite3/sqlite3.c	1330;"	d	file:
SQLITE_FCNTL_WIN32_AV_RETRY	drivers/SQLite/sqlite3/sqlite3.h	788;"	d
SQLITE_FILE_HEADER	drivers/SQLite/sqlite3/sqlite3.c	47408;"	d	file:
SQLITE_FLOAT	drivers/SQLite/sqlite3/sqlite3.c	3944;"	d	file:
SQLITE_FLOAT	drivers/SQLite/sqlite3/sqlite3.h	3402;"	d
SQLITE_FORMAT	drivers/SQLite/sqlite3/sqlite3.c	948;"	d	file:
SQLITE_FORMAT	drivers/SQLite/sqlite3/sqlite3.h	406;"	d
SQLITE_FSFLAGS_IS_MSDOS	drivers/SQLite/sqlite3/sqlite3.c	24544;"	d	file:
SQLITE_FTS3_DEFAULT_NEAR_PARAM	drivers/SQLite/sqlite3/sqlite3.c	120268;"	d	file:
SQLITE_FULL	drivers/SQLite/sqlite3/sqlite3.c	937;"	d	file:
SQLITE_FULL	drivers/SQLite/sqlite3/sqlite3.h	395;"	d
SQLITE_FUNCTION	drivers/SQLite/sqlite3/sqlite3.c	2862;"	d	file:
SQLITE_FUNCTION	drivers/SQLite/sqlite3/sqlite3.h	2320;"	d
SQLITE_FUNC_CASE	drivers/SQLite/sqlite3/sqlite3.c	9706;"	d	file:
SQLITE_FUNC_COALESCE	drivers/SQLite/sqlite3/sqlite3.c	9711;"	d	file:
SQLITE_FUNC_COUNT	drivers/SQLite/sqlite3/sqlite3.c	9710;"	d	file:
SQLITE_FUNC_EPHEM	drivers/SQLite/sqlite3/sqlite3.c	9707;"	d	file:
SQLITE_FUNC_LIKE	drivers/SQLite/sqlite3/sqlite3.c	9705;"	d	file:
SQLITE_FUNC_NEEDCOLL	drivers/SQLite/sqlite3/sqlite3.c	9708;"	d	file:
SQLITE_FUNC_PRIVATE	drivers/SQLite/sqlite3/sqlite3.c	9709;"	d	file:
SQLITE_FactorOutConst	drivers/SQLite/sqlite3/sqlite3.c	9646;"	d	file:
SQLITE_ForeignKeys	drivers/SQLite/sqlite3/sqlite3.c	9629;"	d	file:
SQLITE_FullColNames	drivers/SQLite/sqlite3/sqlite3.c	9609;"	d	file:
SQLITE_FullFSync	drivers/SQLite/sqlite3/sqlite3.c	9624;"	d	file:
SQLITE_GET_LOCKPROXYFILE	drivers/SQLite/sqlite3/sqlite3.c	1323;"	d	file:
SQLITE_GET_LOCKPROXYFILE	drivers/SQLite/sqlite3/sqlite3.h	781;"	d
SQLITE_GroupByOrder	drivers/SQLite/sqlite3/sqlite3.c	9645;"	d	file:
SQLITE_HAVE_ISNAN	drivers/SQLite/sqlite3/sqlite3.c	7623;"	d	file:
SQLITE_IGNORE	drivers/SQLite/sqlite3/sqlite3.c	2810;"	d	file:
SQLITE_IGNORE	drivers/SQLite/sqlite3/sqlite3.h	2268;"	d
SQLITE_INDEX_CONSTRAINT_EQ	drivers/SQLite/sqlite3/sqlite3.c	5457;"	d	file:
SQLITE_INDEX_CONSTRAINT_EQ	drivers/SQLite/sqlite3/sqlite3.h	4915;"	d
SQLITE_INDEX_CONSTRAINT_GE	drivers/SQLite/sqlite3/sqlite3.c	5461;"	d	file:
SQLITE_INDEX_CONSTRAINT_GE	drivers/SQLite/sqlite3/sqlite3.h	4919;"	d
SQLITE_INDEX_CONSTRAINT_GT	drivers/SQLite/sqlite3/sqlite3.c	5458;"	d	file:
SQLITE_INDEX_CONSTRAINT_GT	drivers/SQLite/sqlite3/sqlite3.h	4916;"	d
SQLITE_INDEX_CONSTRAINT_LE	drivers/SQLite/sqlite3/sqlite3.c	5459;"	d	file:
SQLITE_INDEX_CONSTRAINT_LE	drivers/SQLite/sqlite3/sqlite3.h	4917;"	d
SQLITE_INDEX_CONSTRAINT_LT	drivers/SQLite/sqlite3/sqlite3.c	5460;"	d	file:
SQLITE_INDEX_CONSTRAINT_LT	drivers/SQLite/sqlite3/sqlite3.h	4918;"	d
SQLITE_INDEX_CONSTRAINT_MATCH	drivers/SQLite/sqlite3/sqlite3.c	5462;"	d	file:
SQLITE_INDEX_CONSTRAINT_MATCH	drivers/SQLite/sqlite3/sqlite3.h	4920;"	d
SQLITE_INSERT	drivers/SQLite/sqlite3/sqlite3.c	2849;"	d	file:
SQLITE_INSERT	drivers/SQLite/sqlite3/sqlite3.h	2307;"	d
SQLITE_INTEGER	drivers/SQLite/sqlite3/sqlite3.c	3943;"	d	file:
SQLITE_INTEGER	drivers/SQLite/sqlite3/sqlite3.h	3401;"	d
SQLITE_INTEGRITY_CHECK_ERROR_MAX	drivers/SQLite/sqlite3/sqlite3.c	91364;"	d	file:
SQLITE_INTERNAL	drivers/SQLite/sqlite3/sqlite3.c	926;"	d	file:
SQLITE_INTERNAL	drivers/SQLite/sqlite3/sqlite3.h	384;"	d
SQLITE_INTERRUPT	drivers/SQLite/sqlite3/sqlite3.c	933;"	d	file:
SQLITE_INTERRUPT	drivers/SQLite/sqlite3/sqlite3.h	391;"	d
SQLITE_INT_TO_PTR	drivers/SQLite/sqlite3/sqlite3.c	336;"	d	file:
SQLITE_INT_TO_PTR	drivers/SQLite/sqlite3/sqlite3.c	339;"	d	file:
SQLITE_INT_TO_PTR	drivers/SQLite/sqlite3/sqlite3.c	342;"	d	file:
SQLITE_INT_TO_PTR	drivers/SQLite/sqlite3/sqlite3.c	345;"	d	file:
SQLITE_IOCAP_ATOMIC	drivers/SQLite/sqlite3/sqlite3.c	1056;"	d	file:
SQLITE_IOCAP_ATOMIC	drivers/SQLite/sqlite3/sqlite3.h	514;"	d
SQLITE_IOCAP_ATOMIC16K	drivers/SQLite/sqlite3/sqlite3.c	1062;"	d	file:
SQLITE_IOCAP_ATOMIC16K	drivers/SQLite/sqlite3/sqlite3.h	520;"	d
SQLITE_IOCAP_ATOMIC1K	drivers/SQLite/sqlite3/sqlite3.c	1058;"	d	file:
SQLITE_IOCAP_ATOMIC1K	drivers/SQLite/sqlite3/sqlite3.h	516;"	d
SQLITE_IOCAP_ATOMIC2K	drivers/SQLite/sqlite3/sqlite3.c	1059;"	d	file:
SQLITE_IOCAP_ATOMIC2K	drivers/SQLite/sqlite3/sqlite3.h	517;"	d
SQLITE_IOCAP_ATOMIC32K	drivers/SQLite/sqlite3/sqlite3.c	1063;"	d	file:
SQLITE_IOCAP_ATOMIC32K	drivers/SQLite/sqlite3/sqlite3.h	521;"	d
SQLITE_IOCAP_ATOMIC4K	drivers/SQLite/sqlite3/sqlite3.c	1060;"	d	file:
SQLITE_IOCAP_ATOMIC4K	drivers/SQLite/sqlite3/sqlite3.h	518;"	d
SQLITE_IOCAP_ATOMIC512	drivers/SQLite/sqlite3/sqlite3.c	1057;"	d	file:
SQLITE_IOCAP_ATOMIC512	drivers/SQLite/sqlite3/sqlite3.h	515;"	d
SQLITE_IOCAP_ATOMIC64K	drivers/SQLite/sqlite3/sqlite3.c	1064;"	d	file:
SQLITE_IOCAP_ATOMIC64K	drivers/SQLite/sqlite3/sqlite3.h	522;"	d
SQLITE_IOCAP_ATOMIC8K	drivers/SQLite/sqlite3/sqlite3.c	1061;"	d	file:
SQLITE_IOCAP_ATOMIC8K	drivers/SQLite/sqlite3/sqlite3.h	519;"	d
SQLITE_IOCAP_SAFE_APPEND	drivers/SQLite/sqlite3/sqlite3.c	1065;"	d	file:
SQLITE_IOCAP_SAFE_APPEND	drivers/SQLite/sqlite3/sqlite3.h	523;"	d
SQLITE_IOCAP_SEQUENTIAL	drivers/SQLite/sqlite3/sqlite3.c	1066;"	d	file:
SQLITE_IOCAP_SEQUENTIAL	drivers/SQLite/sqlite3/sqlite3.h	524;"	d
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	drivers/SQLite/sqlite3/sqlite3.c	1067;"	d	file:
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	drivers/SQLite/sqlite3/sqlite3.h	525;"	d
SQLITE_IOERR	drivers/SQLite/sqlite3/sqlite3.c	934;"	d	file:
SQLITE_IOERR	drivers/SQLite/sqlite3/sqlite3.h	392;"	d
SQLITE_IOERR_ACCESS	drivers/SQLite/sqlite3/sqlite3.c	990;"	d	file:
SQLITE_IOERR_ACCESS	drivers/SQLite/sqlite3/sqlite3.h	448;"	d
SQLITE_IOERR_BLOCKED	drivers/SQLite/sqlite3/sqlite3.c	988;"	d	file:
SQLITE_IOERR_BLOCKED	drivers/SQLite/sqlite3/sqlite3.h	446;"	d
SQLITE_IOERR_CHECKRESERVEDLOCK	drivers/SQLite/sqlite3/sqlite3.c	991;"	d	file:
SQLITE_IOERR_CHECKRESERVEDLOCK	drivers/SQLite/sqlite3/sqlite3.h	449;"	d
SQLITE_IOERR_CLOSE	drivers/SQLite/sqlite3/sqlite3.c	993;"	d	file:
SQLITE_IOERR_CLOSE	drivers/SQLite/sqlite3/sqlite3.h	451;"	d
SQLITE_IOERR_DELETE	drivers/SQLite/sqlite3/sqlite3.c	987;"	d	file:
SQLITE_IOERR_DELETE	drivers/SQLite/sqlite3/sqlite3.h	445;"	d
SQLITE_IOERR_DIR_CLOSE	drivers/SQLite/sqlite3/sqlite3.c	994;"	d	file:
SQLITE_IOERR_DIR_CLOSE	drivers/SQLite/sqlite3/sqlite3.h	452;"	d
SQLITE_IOERR_DIR_FSYNC	drivers/SQLite/sqlite3/sqlite3.c	982;"	d	file:
SQLITE_IOERR_DIR_FSYNC	drivers/SQLite/sqlite3/sqlite3.h	440;"	d
SQLITE_IOERR_FSTAT	drivers/SQLite/sqlite3/sqlite3.c	984;"	d	file:
SQLITE_IOERR_FSTAT	drivers/SQLite/sqlite3/sqlite3.h	442;"	d
SQLITE_IOERR_FSYNC	drivers/SQLite/sqlite3/sqlite3.c	981;"	d	file:
SQLITE_IOERR_FSYNC	drivers/SQLite/sqlite3/sqlite3.h	439;"	d
SQLITE_IOERR_LOCK	drivers/SQLite/sqlite3/sqlite3.c	992;"	d	file:
SQLITE_IOERR_LOCK	drivers/SQLite/sqlite3/sqlite3.h	450;"	d
SQLITE_IOERR_NOMEM	drivers/SQLite/sqlite3/sqlite3.c	989;"	d	file:
SQLITE_IOERR_NOMEM	drivers/SQLite/sqlite3/sqlite3.h	447;"	d
SQLITE_IOERR_RDLOCK	drivers/SQLite/sqlite3/sqlite3.c	986;"	d	file:
SQLITE_IOERR_RDLOCK	drivers/SQLite/sqlite3/sqlite3.h	444;"	d
SQLITE_IOERR_READ	drivers/SQLite/sqlite3/sqlite3.c	978;"	d	file:
SQLITE_IOERR_READ	drivers/SQLite/sqlite3/sqlite3.h	436;"	d
SQLITE_IOERR_SEEK	drivers/SQLite/sqlite3/sqlite3.c	999;"	d	file:
SQLITE_IOERR_SEEK	drivers/SQLite/sqlite3/sqlite3.h	457;"	d
SQLITE_IOERR_SHMLOCK	drivers/SQLite/sqlite3/sqlite3.c	997;"	d	file:
SQLITE_IOERR_SHMLOCK	drivers/SQLite/sqlite3/sqlite3.h	455;"	d
SQLITE_IOERR_SHMMAP	drivers/SQLite/sqlite3/sqlite3.c	998;"	d	file:
SQLITE_IOERR_SHMMAP	drivers/SQLite/sqlite3/sqlite3.h	456;"	d
SQLITE_IOERR_SHMOPEN	drivers/SQLite/sqlite3/sqlite3.c	995;"	d	file:
SQLITE_IOERR_SHMOPEN	drivers/SQLite/sqlite3/sqlite3.h	453;"	d
SQLITE_IOERR_SHMSIZE	drivers/SQLite/sqlite3/sqlite3.c	996;"	d	file:
SQLITE_IOERR_SHMSIZE	drivers/SQLite/sqlite3/sqlite3.h	454;"	d
SQLITE_IOERR_SHORT_READ	drivers/SQLite/sqlite3/sqlite3.c	979;"	d	file:
SQLITE_IOERR_SHORT_READ	drivers/SQLite/sqlite3/sqlite3.h	437;"	d
SQLITE_IOERR_TRUNCATE	drivers/SQLite/sqlite3/sqlite3.c	983;"	d	file:
SQLITE_IOERR_TRUNCATE	drivers/SQLite/sqlite3/sqlite3.h	441;"	d
SQLITE_IOERR_UNLOCK	drivers/SQLite/sqlite3/sqlite3.c	985;"	d	file:
SQLITE_IOERR_UNLOCK	drivers/SQLite/sqlite3/sqlite3.h	443;"	d
SQLITE_IOERR_WRITE	drivers/SQLite/sqlite3/sqlite3.c	980;"	d	file:
SQLITE_IOERR_WRITE	drivers/SQLite/sqlite3/sqlite3.h	438;"	d
SQLITE_IdxRealAsInt	drivers/SQLite/sqlite3/sqlite3.c	9647;"	d	file:
SQLITE_IgnoreChecks	drivers/SQLite/sqlite3/sqlite3.c	9621;"	d	file:
SQLITE_IndexCover	drivers/SQLite/sqlite3/sqlite3.c	9644;"	d	file:
SQLITE_IndexSearch	drivers/SQLite/sqlite3/sqlite3.c	9643;"	d	file:
SQLITE_IndexSort	drivers/SQLite/sqlite3/sqlite3.c	9642;"	d	file:
SQLITE_InternChanges	drivers/SQLite/sqlite3/sqlite3.c	9608;"	d	file:
SQLITE_JUMPIFNULL	drivers/SQLite/sqlite3/sqlite3.c	9877;"	d	file:
SQLITE_LAST_ERRNO	drivers/SQLite/sqlite3/sqlite3.c	1325;"	d	file:
SQLITE_LAST_ERRNO	drivers/SQLite/sqlite3/sqlite3.h	783;"	d
SQLITE_LIMIT_ATTACHED	drivers/SQLite/sqlite3/sqlite3.c	3320;"	d	file:
SQLITE_LIMIT_ATTACHED	drivers/SQLite/sqlite3/sqlite3.h	2778;"	d
SQLITE_LIMIT_COLUMN	drivers/SQLite/sqlite3/sqlite3.c	3315;"	d	file:
SQLITE_LIMIT_COLUMN	drivers/SQLite/sqlite3/sqlite3.h	2773;"	d
SQLITE_LIMIT_COMPOUND_SELECT	drivers/SQLite/sqlite3/sqlite3.c	3317;"	d	file:
SQLITE_LIMIT_COMPOUND_SELECT	drivers/SQLite/sqlite3/sqlite3.h	2775;"	d
SQLITE_LIMIT_EXPR_DEPTH	drivers/SQLite/sqlite3/sqlite3.c	3316;"	d	file:
SQLITE_LIMIT_EXPR_DEPTH	drivers/SQLite/sqlite3/sqlite3.h	2774;"	d
SQLITE_LIMIT_FUNCTION_ARG	drivers/SQLite/sqlite3/sqlite3.c	3319;"	d	file:
SQLITE_LIMIT_FUNCTION_ARG	drivers/SQLite/sqlite3/sqlite3.h	2777;"	d
SQLITE_LIMIT_LENGTH	drivers/SQLite/sqlite3/sqlite3.c	3313;"	d	file:
SQLITE_LIMIT_LENGTH	drivers/SQLite/sqlite3/sqlite3.h	2771;"	d
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	drivers/SQLite/sqlite3/sqlite3.c	3321;"	d	file:
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	drivers/SQLite/sqlite3/sqlite3.h	2779;"	d
SQLITE_LIMIT_SQL_LENGTH	drivers/SQLite/sqlite3/sqlite3.c	3314;"	d	file:
SQLITE_LIMIT_SQL_LENGTH	drivers/SQLite/sqlite3/sqlite3.h	2772;"	d
SQLITE_LIMIT_TRIGGER_DEPTH	drivers/SQLite/sqlite3/sqlite3.c	3323;"	d	file:
SQLITE_LIMIT_TRIGGER_DEPTH	drivers/SQLite/sqlite3/sqlite3.h	2781;"	d
SQLITE_LIMIT_VARIABLE_NUMBER	drivers/SQLite/sqlite3/sqlite3.c	3322;"	d	file:
SQLITE_LIMIT_VARIABLE_NUMBER	drivers/SQLite/sqlite3/sqlite3.h	2780;"	d
SQLITE_LIMIT_VDBE_OP	drivers/SQLite/sqlite3/sqlite3.c	3318;"	d	file:
SQLITE_LIMIT_VDBE_OP	drivers/SQLite/sqlite3/sqlite3.h	2776;"	d
SQLITE_LITTLEENDIAN	drivers/SQLite/sqlite3/sqlite3.c	7770;"	d	file:
SQLITE_LITTLEENDIAN	drivers/SQLite/sqlite3/sqlite3.c	7774;"	d	file:
SQLITE_LOCKED	drivers/SQLite/sqlite3/sqlite3.c	930;"	d	file:
SQLITE_LOCKED	drivers/SQLite/sqlite3/sqlite3.h	388;"	d
SQLITE_LOCKED_SHAREDCACHE	drivers/SQLite/sqlite3/sqlite3.c	1000;"	d	file:
SQLITE_LOCKED_SHAREDCACHE	drivers/SQLite/sqlite3/sqlite3.h	458;"	d
SQLITE_LOCK_EXCLUSIVE	drivers/SQLite/sqlite3/sqlite3.c	1080;"	d	file:
SQLITE_LOCK_EXCLUSIVE	drivers/SQLite/sqlite3/sqlite3.h	538;"	d
SQLITE_LOCK_NONE	drivers/SQLite/sqlite3/sqlite3.c	1076;"	d	file:
SQLITE_LOCK_NONE	drivers/SQLite/sqlite3/sqlite3.h	534;"	d
SQLITE_LOCK_PENDING	drivers/SQLite/sqlite3/sqlite3.c	1079;"	d	file:
SQLITE_LOCK_PENDING	drivers/SQLite/sqlite3/sqlite3.h	537;"	d
SQLITE_LOCK_RESERVED	drivers/SQLite/sqlite3/sqlite3.c	1078;"	d	file:
SQLITE_LOCK_RESERVED	drivers/SQLite/sqlite3/sqlite3.h	536;"	d
SQLITE_LOCK_SHARED	drivers/SQLite/sqlite3/sqlite3.c	1077;"	d	file:
SQLITE_LOCK_SHARED	drivers/SQLite/sqlite3/sqlite3.h	535;"	d
SQLITE_LegacyFileFmt	drivers/SQLite/sqlite3/sqlite3.c	9623;"	d	file:
SQLITE_LoadExtension	drivers/SQLite/sqlite3/sqlite3.c	9632;"	d	file:
SQLITE_MAGIC_BUSY	drivers/SQLite/sqlite3/sqlite3.c	9659;"	d	file:
SQLITE_MAGIC_CLOSED	drivers/SQLite/sqlite3/sqlite3.c	9657;"	d	file:
SQLITE_MAGIC_ERROR	drivers/SQLite/sqlite3/sqlite3.c	9660;"	d	file:
SQLITE_MAGIC_OPEN	drivers/SQLite/sqlite3/sqlite3.c	9656;"	d	file:
SQLITE_MAGIC_SICK	drivers/SQLite/sqlite3/sqlite3.c	9658;"	d	file:
SQLITE_MALLOC_SOFT_LIMIT	drivers/SQLite/sqlite3/sqlite3.c	410;"	d	file:
SQLITE_MAX_ATTACHED	drivers/SQLite/sqlite3/sqlite3.c	207;"	d	file:
SQLITE_MAX_COLUMN	drivers/SQLite/sqlite3/sqlite3.c	127;"	d	file:
SQLITE_MAX_COMPOUND_SELECT	drivers/SQLite/sqlite3/sqlite3.c	164;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	drivers/SQLite/sqlite3/sqlite3.c	254;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	drivers/SQLite/sqlite3/sqlite3.c	257;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	drivers/SQLite/sqlite3/sqlite3.c	258;"	d	file:
SQLITE_MAX_EXPR_DEPTH	drivers/SQLite/sqlite3/sqlite3.c	152;"	d	file:
SQLITE_MAX_FILE_FORMAT	drivers/SQLite/sqlite3/sqlite3.c	7646;"	d	file:
SQLITE_MAX_FUNCTION_ARG	drivers/SQLite/sqlite3/sqlite3.c	179;"	d	file:
SQLITE_MAX_LENGTH	drivers/SQLite/sqlite3/sqlite3.c	106;"	d	file:
SQLITE_MAX_LIKE_PATTERN_LENGTH	drivers/SQLite/sqlite3/sqlite3.c	131169;"	d	file:
SQLITE_MAX_LIKE_PATTERN_LENGTH	drivers/SQLite/sqlite3/sqlite3.c	278;"	d	file:
SQLITE_MAX_PAGE_COUNT	drivers/SQLite/sqlite3/sqlite3.c	270;"	d	file:
SQLITE_MAX_PAGE_SIZE	drivers/SQLite/sqlite3/sqlite3.c	230;"	d	file:
SQLITE_MAX_PAGE_SIZE	drivers/SQLite/sqlite3/sqlite3.c	232;"	d	file:
SQLITE_MAX_SCHEMA_RETRY	drivers/SQLite/sqlite3/sqlite3.c	61897;"	d	file:
SQLITE_MAX_SQL_LENGTH	drivers/SQLite/sqlite3/sqlite3.c	138;"	d	file:
SQLITE_MAX_TRIGGER_DEPTH	drivers/SQLite/sqlite3/sqlite3.c	289;"	d	file:
SQLITE_MAX_U32	drivers/SQLite/sqlite3/sqlite3.c	7744;"	d	file:
SQLITE_MAX_VARIABLE_NUMBER	drivers/SQLite/sqlite3/sqlite3.c	215;"	d	file:
SQLITE_MAX_VDBE_OP	drivers/SQLite/sqlite3/sqlite3.c	172;"	d	file:
SQLITE_MISMATCH	drivers/SQLite/sqlite3/sqlite3.c	944;"	d	file:
SQLITE_MISMATCH	drivers/SQLite/sqlite3/sqlite3.h	402;"	d
SQLITE_MISUSE	drivers/SQLite/sqlite3/sqlite3.c	945;"	d	file:
SQLITE_MISUSE	drivers/SQLite/sqlite3/sqlite3.h	403;"	d
SQLITE_MISUSE_BKPT	drivers/SQLite/sqlite3/sqlite3.c	11215;"	d	file:
SQLITE_MIXED_ENDIAN_64BIT_FLOAT	drivers/SQLite/sqlite3/sqlite3.c	7622;"	d	file:
SQLITE_MUTEX_FAST	drivers/SQLite/sqlite3/sqlite3.c	6072;"	d	file:
SQLITE_MUTEX_FAST	drivers/SQLite/sqlite3/sqlite3.h	5530;"	d
SQLITE_MUTEX_NOOP	drivers/SQLite/sqlite3/sqlite3.c	9317;"	d	file:
SQLITE_MUTEX_NREF	drivers/SQLite/sqlite3/sqlite3.c	17520;"	d	file:
SQLITE_MUTEX_NREF	drivers/SQLite/sqlite3/sqlite3.c	17522;"	d	file:
SQLITE_MUTEX_OMIT	drivers/SQLite/sqlite3/sqlite3.c	9307;"	d	file:
SQLITE_MUTEX_OS2	drivers/SQLite/sqlite3/sqlite3.c	9315;"	d	file:
SQLITE_MUTEX_PTHREADS	drivers/SQLite/sqlite3/sqlite3.c	9311;"	d	file:
SQLITE_MUTEX_RECURSIVE	drivers/SQLite/sqlite3/sqlite3.c	6073;"	d	file:
SQLITE_MUTEX_RECURSIVE	drivers/SQLite/sqlite3/sqlite3.h	5531;"	d
SQLITE_MUTEX_STATIC_LRU	drivers/SQLite/sqlite3/sqlite3.c	6079;"	d	file:
SQLITE_MUTEX_STATIC_LRU	drivers/SQLite/sqlite3/sqlite3.h	5537;"	d
SQLITE_MUTEX_STATIC_LRU2	drivers/SQLite/sqlite3/sqlite3.c	6080;"	d	file:
SQLITE_MUTEX_STATIC_LRU2	drivers/SQLite/sqlite3/sqlite3.h	5538;"	d
SQLITE_MUTEX_STATIC_MASTER	drivers/SQLite/sqlite3/sqlite3.c	6074;"	d	file:
SQLITE_MUTEX_STATIC_MASTER	drivers/SQLite/sqlite3/sqlite3.h	5532;"	d
SQLITE_MUTEX_STATIC_MEM	drivers/SQLite/sqlite3/sqlite3.c	6075;"	d	file:
SQLITE_MUTEX_STATIC_MEM	drivers/SQLite/sqlite3/sqlite3.h	5533;"	d
SQLITE_MUTEX_STATIC_MEM2	drivers/SQLite/sqlite3/sqlite3.c	6076;"	d	file:
SQLITE_MUTEX_STATIC_MEM2	drivers/SQLite/sqlite3/sqlite3.h	5534;"	d
SQLITE_MUTEX_STATIC_OPEN	drivers/SQLite/sqlite3/sqlite3.c	6077;"	d	file:
SQLITE_MUTEX_STATIC_OPEN	drivers/SQLite/sqlite3/sqlite3.h	5535;"	d
SQLITE_MUTEX_STATIC_PMEM	drivers/SQLite/sqlite3/sqlite3.c	6081;"	d	file:
SQLITE_MUTEX_STATIC_PMEM	drivers/SQLite/sqlite3/sqlite3.h	5539;"	d
SQLITE_MUTEX_STATIC_PRNG	drivers/SQLite/sqlite3/sqlite3.c	6078;"	d	file:
SQLITE_MUTEX_STATIC_PRNG	drivers/SQLite/sqlite3/sqlite3.h	5536;"	d
SQLITE_MUTEX_W32	drivers/SQLite/sqlite3/sqlite3.c	9313;"	d	file:
SQLITE_NOLFS	drivers/SQLite/sqlite3/sqlite3.c	946;"	d	file:
SQLITE_NOLFS	drivers/SQLite/sqlite3/sqlite3.h	404;"	d
SQLITE_NOMEM	drivers/SQLite/sqlite3/sqlite3.c	931;"	d	file:
SQLITE_NOMEM	drivers/SQLite/sqlite3/sqlite3.h	389;"	d
SQLITE_NOTADB	drivers/SQLite/sqlite3/sqlite3.c	950;"	d	file:
SQLITE_NOTADB	drivers/SQLite/sqlite3/sqlite3.h	408;"	d
SQLITE_NOTFOUND	drivers/SQLite/sqlite3/sqlite3.c	936;"	d	file:
SQLITE_NOTFOUND	drivers/SQLite/sqlite3/sqlite3.h	394;"	d
SQLITE_NULL	drivers/SQLite/sqlite3/sqlite3.c	3946;"	d	file:
SQLITE_NULL	drivers/SQLite/sqlite3/sqlite3.h	3404;"	d
SQLITE_NULLEQ	drivers/SQLite/sqlite3/sqlite3.c	9879;"	d	file:
SQLITE_N_BTREE_META	drivers/SQLite/sqlite3/sqlite3.c	7979;"	d	file:
SQLITE_N_COLCACHE	drivers/SQLite/sqlite3/sqlite3.c	10826;"	d	file:
SQLITE_N_KEYWORD	drivers/SQLite/sqlite3/sqlite3.c	109696;"	d	file:
SQLITE_N_LIMIT	drivers/SQLite/sqlite3/sqlite3.c	9417;"	d	file:
SQLITE_NoReadlock	drivers/SQLite/sqlite3/sqlite3.c	9619;"	d	file:
SQLITE_NullCallback	drivers/SQLite/sqlite3/sqlite3.c	9614;"	d	file:
SQLITE_OK	drivers/SQLite/sqlite3/sqlite3.c	923;"	d	file:
SQLITE_OK	drivers/SQLite/sqlite3/sqlite3.h	381;"	d
SQLITE_OMIT_DATETIME_FUNCS	drivers/SQLite/sqlite3/sqlite3.c	7620;"	d	file:
SQLITE_OMIT_TRACE	drivers/SQLite/sqlite3/sqlite3.c	7621;"	d	file:
SQLITE_OPEN_AUTOPROXY	drivers/SQLite/sqlite3/sqlite3.c	1019;"	d	file:
SQLITE_OPEN_AUTOPROXY	drivers/SQLite/sqlite3/sqlite3.h	477;"	d
SQLITE_OPEN_CREATE	drivers/SQLite/sqlite3/sqlite3.c	1016;"	d	file:
SQLITE_OPEN_CREATE	drivers/SQLite/sqlite3/sqlite3.h	474;"	d
SQLITE_OPEN_DELETEONCLOSE	drivers/SQLite/sqlite3/sqlite3.c	1017;"	d	file:
SQLITE_OPEN_DELETEONCLOSE	drivers/SQLite/sqlite3/sqlite3.h	475;"	d
SQLITE_OPEN_EXCLUSIVE	drivers/SQLite/sqlite3/sqlite3.c	1018;"	d	file:
SQLITE_OPEN_EXCLUSIVE	drivers/SQLite/sqlite3/sqlite3.h	476;"	d
SQLITE_OPEN_FULLMUTEX	drivers/SQLite/sqlite3/sqlite3.c	1029;"	d	file:
SQLITE_OPEN_FULLMUTEX	drivers/SQLite/sqlite3/sqlite3.h	487;"	d
SQLITE_OPEN_MAIN_DB	drivers/SQLite/sqlite3/sqlite3.c	1021;"	d	file:
SQLITE_OPEN_MAIN_DB	drivers/SQLite/sqlite3/sqlite3.h	479;"	d
SQLITE_OPEN_MAIN_JOURNAL	drivers/SQLite/sqlite3/sqlite3.c	1024;"	d	file:
SQLITE_OPEN_MAIN_JOURNAL	drivers/SQLite/sqlite3/sqlite3.h	482;"	d
SQLITE_OPEN_MASTER_JOURNAL	drivers/SQLite/sqlite3/sqlite3.c	1027;"	d	file:
SQLITE_OPEN_MASTER_JOURNAL	drivers/SQLite/sqlite3/sqlite3.h	485;"	d
SQLITE_OPEN_NOMUTEX	drivers/SQLite/sqlite3/sqlite3.c	1028;"	d	file:
SQLITE_OPEN_NOMUTEX	drivers/SQLite/sqlite3/sqlite3.h	486;"	d
SQLITE_OPEN_PRIVATECACHE	drivers/SQLite/sqlite3/sqlite3.c	1031;"	d	file:
SQLITE_OPEN_PRIVATECACHE	drivers/SQLite/sqlite3/sqlite3.h	489;"	d
SQLITE_OPEN_READONLY	drivers/SQLite/sqlite3/sqlite3.c	1014;"	d	file:
SQLITE_OPEN_READONLY	drivers/SQLite/sqlite3/sqlite3.h	472;"	d
SQLITE_OPEN_READWRITE	drivers/SQLite/sqlite3/sqlite3.c	1015;"	d	file:
SQLITE_OPEN_READWRITE	drivers/SQLite/sqlite3/sqlite3.h	473;"	d
SQLITE_OPEN_SHAREDCACHE	drivers/SQLite/sqlite3/sqlite3.c	1030;"	d	file:
SQLITE_OPEN_SHAREDCACHE	drivers/SQLite/sqlite3/sqlite3.h	488;"	d
SQLITE_OPEN_SUBJOURNAL	drivers/SQLite/sqlite3/sqlite3.c	1026;"	d	file:
SQLITE_OPEN_SUBJOURNAL	drivers/SQLite/sqlite3/sqlite3.h	484;"	d
SQLITE_OPEN_TEMP_DB	drivers/SQLite/sqlite3/sqlite3.c	1022;"	d	file:
SQLITE_OPEN_TEMP_DB	drivers/SQLite/sqlite3/sqlite3.h	480;"	d
SQLITE_OPEN_TEMP_JOURNAL	drivers/SQLite/sqlite3/sqlite3.c	1025;"	d	file:
SQLITE_OPEN_TEMP_JOURNAL	drivers/SQLite/sqlite3/sqlite3.h	483;"	d
SQLITE_OPEN_TRANSIENT_DB	drivers/SQLite/sqlite3/sqlite3.c	1023;"	d	file:
SQLITE_OPEN_TRANSIENT_DB	drivers/SQLite/sqlite3/sqlite3.h	481;"	d
SQLITE_OPEN_URI	drivers/SQLite/sqlite3/sqlite3.c	1020;"	d	file:
SQLITE_OPEN_URI	drivers/SQLite/sqlite3/sqlite3.h	478;"	d
SQLITE_OPEN_WAL	drivers/SQLite/sqlite3/sqlite3.c	1032;"	d	file:
SQLITE_OPEN_WAL	drivers/SQLite/sqlite3/sqlite3.h	490;"	d
SQLITE_OS2_NO_WAL_LOCK_FILE	drivers/SQLite/sqlite3/sqlite3.c	23167;"	d	file:
SQLITE_OS2_THREADS	drivers/SQLite/sqlite3/sqlite3.c	22312;"	d	file:
SQLITE_OS_OS2	drivers/SQLite/sqlite3/sqlite3.c	9016;"	d	file:
SQLITE_OS_OS2	drivers/SQLite/sqlite3/sqlite3.c	9017;"	d	file:
SQLITE_OS_OS2	drivers/SQLite/sqlite3/sqlite3.c	9028;"	d	file:
SQLITE_OS_OS2	drivers/SQLite/sqlite3/sqlite3.c	9032;"	d	file:
SQLITE_OS_OS2	drivers/SQLite/sqlite3/sqlite3.c	9036;"	d	file:
SQLITE_OS_OS2	drivers/SQLite/sqlite3/sqlite3.c	9040;"	d	file:
SQLITE_OS_OTHER	drivers/SQLite/sqlite3/sqlite3.c	9019;"	d	file:
SQLITE_OS_OTHER	drivers/SQLite/sqlite3/sqlite3.c	9023;"	d	file:
SQLITE_OS_UNIX	drivers/SQLite/sqlite3/sqlite3.c	9012;"	d	file:
SQLITE_OS_UNIX	drivers/SQLite/sqlite3/sqlite3.c	9013;"	d	file:
SQLITE_OS_UNIX	drivers/SQLite/sqlite3/sqlite3.c	9027;"	d	file:
SQLITE_OS_UNIX	drivers/SQLite/sqlite3/sqlite3.c	9031;"	d	file:
SQLITE_OS_UNIX	drivers/SQLite/sqlite3/sqlite3.c	9035;"	d	file:
SQLITE_OS_UNIX	drivers/SQLite/sqlite3/sqlite3.c	9039;"	d	file:
SQLITE_OS_WIN	drivers/SQLite/sqlite3/sqlite3.c	9014;"	d	file:
SQLITE_OS_WIN	drivers/SQLite/sqlite3/sqlite3.c	9015;"	d	file:
SQLITE_OS_WIN	drivers/SQLite/sqlite3/sqlite3.c	9026;"	d	file:
SQLITE_OS_WIN	drivers/SQLite/sqlite3/sqlite3.c	9030;"	d	file:
SQLITE_OS_WIN	drivers/SQLite/sqlite3/sqlite3.c	9034;"	d	file:
SQLITE_OS_WIN	drivers/SQLite/sqlite3/sqlite3.c	9044;"	d	file:
SQLITE_OS_WINCE	drivers/SQLite/sqlite3/sqlite3.c	9053;"	d	file:
SQLITE_OS_WINCE	drivers/SQLite/sqlite3/sqlite3.c	9055;"	d	file:
SQLITE_OptMask	drivers/SQLite/sqlite3/sqlite3.c	9649;"	d	file:
SQLITE_PERM	drivers/SQLite/sqlite3/sqlite3.c	927;"	d	file:
SQLITE_PERM	drivers/SQLite/sqlite3/sqlite3.h	385;"	d
SQLITE_PRAGMA	drivers/SQLite/sqlite3/sqlite3.c	2850;"	d	file:
SQLITE_PRAGMA	drivers/SQLite/sqlite3/sqlite3.h	2308;"	d
SQLITE_PRINT_BUF_SIZE	drivers/SQLite/sqlite3/sqlite3.c	19108;"	d	file:
SQLITE_PRIVATE	drivers/SQLite/sqlite3/sqlite3.c	23;"	d	file:
SQLITE_PROTOCOL	drivers/SQLite/sqlite3/sqlite3.c	939;"	d	file:
SQLITE_PROTOCOL	drivers/SQLite/sqlite3/sqlite3.h	397;"	d
SQLITE_PTR_TO_INT	drivers/SQLite/sqlite3/sqlite3.c	337;"	d	file:
SQLITE_PTR_TO_INT	drivers/SQLite/sqlite3/sqlite3.c	340;"	d	file:
SQLITE_PTR_TO_INT	drivers/SQLite/sqlite3/sqlite3.c	343;"	d	file:
SQLITE_PTR_TO_INT	drivers/SQLite/sqlite3/sqlite3.c	346;"	d	file:
SQLITE_PreferBuiltin	drivers/SQLite/sqlite3/sqlite3.c	9631;"	d	file:
SQLITE_QueryFlattener	drivers/SQLite/sqlite3/sqlite3.c	9640;"	d	file:
SQLITE_RANGE	drivers/SQLite/sqlite3/sqlite3.c	949;"	d	file:
SQLITE_RANGE	drivers/SQLite/sqlite3/sqlite3.h	407;"	d
SQLITE_READ	drivers/SQLite/sqlite3/sqlite3.c	2851;"	d	file:
SQLITE_READ	drivers/SQLite/sqlite3/sqlite3.h	2309;"	d
SQLITE_READONLY	drivers/SQLite/sqlite3/sqlite3.c	932;"	d	file:
SQLITE_READONLY	drivers/SQLite/sqlite3/sqlite3.h	390;"	d
SQLITE_READONLY_CANTLOCK	drivers/SQLite/sqlite3/sqlite3.c	1005;"	d	file:
SQLITE_READONLY_CANTLOCK	drivers/SQLite/sqlite3/sqlite3.h	463;"	d
SQLITE_READONLY_RECOVERY	drivers/SQLite/sqlite3/sqlite3.c	1004;"	d	file:
SQLITE_READONLY_RECOVERY	drivers/SQLite/sqlite3/sqlite3.h	462;"	d
SQLITE_REINDEX	drivers/SQLite/sqlite3/sqlite3.c	2858;"	d	file:
SQLITE_REINDEX	drivers/SQLite/sqlite3/sqlite3.h	2316;"	d
SQLITE_REPLACE	drivers/SQLite/sqlite3/sqlite3.c	7264;"	d	file:
SQLITE_REPLACE	drivers/SQLite/sqlite3/sqlite3.h	6722;"	d
SQLITE_ROLLBACK	drivers/SQLite/sqlite3/sqlite3.c	7260;"	d	file:
SQLITE_ROLLBACK	drivers/SQLite/sqlite3/sqlite3.h	6718;"	d
SQLITE_ROW	drivers/SQLite/sqlite3/sqlite3.c	951;"	d	file:
SQLITE_ROW	drivers/SQLite/sqlite3/sqlite3.h	409;"	d
SQLITE_ReadUncommitted	drivers/SQLite/sqlite3/sqlite3.c	9622;"	d	file:
SQLITE_RecTriggers	drivers/SQLite/sqlite3/sqlite3.c	9628;"	d	file:
SQLITE_RecoveryMode	drivers/SQLite/sqlite3/sqlite3.c	9626;"	d	file:
SQLITE_ReverseOrder	drivers/SQLite/sqlite3/sqlite3.c	9627;"	d	file:
SQLITE_SAVEPOINT	drivers/SQLite/sqlite3/sqlite3.c	2863;"	d	file:
SQLITE_SAVEPOINT	drivers/SQLite/sqlite3/sqlite3.h	2321;"	d
SQLITE_SCHEMA	drivers/SQLite/sqlite3/sqlite3.c	941;"	d	file:
SQLITE_SCHEMA	drivers/SQLite/sqlite3/sqlite3.h	399;"	d
SQLITE_SELECT	drivers/SQLite/sqlite3/sqlite3.c	2852;"	d	file:
SQLITE_SELECT	drivers/SQLite/sqlite3/sqlite3.h	2310;"	d
SQLITE_SET_LOCKPROXYFILE	drivers/SQLite/sqlite3/sqlite3.c	1324;"	d	file:
SQLITE_SET_LOCKPROXYFILE	drivers/SQLite/sqlite3/sqlite3.h	782;"	d
SQLITE_SHM_EXCLUSIVE	drivers/SQLite/sqlite3/sqlite3.c	1593;"	d	file:
SQLITE_SHM_EXCLUSIVE	drivers/SQLite/sqlite3/sqlite3.h	1051;"	d
SQLITE_SHM_LOCK	drivers/SQLite/sqlite3/sqlite3.c	1591;"	d	file:
SQLITE_SHM_LOCK	drivers/SQLite/sqlite3/sqlite3.h	1049;"	d
SQLITE_SHM_NLOCK	drivers/SQLite/sqlite3/sqlite3.c	1603;"	d	file:
SQLITE_SHM_NLOCK	drivers/SQLite/sqlite3/sqlite3.h	1061;"	d
SQLITE_SHM_SHARED	drivers/SQLite/sqlite3/sqlite3.c	1592;"	d	file:
SQLITE_SHM_SHARED	drivers/SQLite/sqlite3/sqlite3.h	1050;"	d
SQLITE_SHM_UNLOCK	drivers/SQLite/sqlite3/sqlite3.c	1590;"	d	file:
SQLITE_SHM_UNLOCK	drivers/SQLite/sqlite3/sqlite3.h	1048;"	d
SQLITE_SKIP_UTF8	drivers/SQLite/sqlite3/sqlite3.c	11198;"	d	file:
SQLITE_SOURCE_ID	drivers/SQLite/sqlite3/sqlite3.c	654;"	d	file:
SQLITE_SOURCE_ID	drivers/SQLite/sqlite3/sqlite3.h	112;"	d
SQLITE_SO_ASC	drivers/SQLite/sqlite3/sqlite3.c	9842;"	d	file:
SQLITE_SO_DESC	drivers/SQLite/sqlite3/sqlite3.c	9843;"	d	file:
SQLITE_STAT3_SAMPLES	drivers/SQLite/sqlite3/sqlite3.c	77718;"	d	file:
SQLITE_STATIC	drivers/SQLite/sqlite3/sqlite3.c	4517;"	d	file:
SQLITE_STATIC	drivers/SQLite/sqlite3/sqlite3.h	3975;"	d
SQLITE_STATUS_MALLOC_COUNT	drivers/SQLite/sqlite3/sqlite3.c	6299;"	d	file:
SQLITE_STATUS_MALLOC_COUNT	drivers/SQLite/sqlite3/sqlite3.h	5757;"	d
SQLITE_STATUS_MALLOC_SIZE	drivers/SQLite/sqlite3/sqlite3.c	6295;"	d	file:
SQLITE_STATUS_MALLOC_SIZE	drivers/SQLite/sqlite3/sqlite3.h	5753;"	d
SQLITE_STATUS_MEMORY_USED	drivers/SQLite/sqlite3/sqlite3.c	6290;"	d	file:
SQLITE_STATUS_MEMORY_USED	drivers/SQLite/sqlite3/sqlite3.h	5748;"	d
SQLITE_STATUS_PAGECACHE_OVERFLOW	drivers/SQLite/sqlite3/sqlite3.c	6292;"	d	file:
SQLITE_STATUS_PAGECACHE_OVERFLOW	drivers/SQLite/sqlite3/sqlite3.h	5750;"	d
SQLITE_STATUS_PAGECACHE_SIZE	drivers/SQLite/sqlite3/sqlite3.c	6297;"	d	file:
SQLITE_STATUS_PAGECACHE_SIZE	drivers/SQLite/sqlite3/sqlite3.h	5755;"	d
SQLITE_STATUS_PAGECACHE_USED	drivers/SQLite/sqlite3/sqlite3.c	6291;"	d	file:
SQLITE_STATUS_PAGECACHE_USED	drivers/SQLite/sqlite3/sqlite3.h	5749;"	d
SQLITE_STATUS_PARSER_STACK	drivers/SQLite/sqlite3/sqlite3.c	6296;"	d	file:
SQLITE_STATUS_PARSER_STACK	drivers/SQLite/sqlite3/sqlite3.h	5754;"	d
SQLITE_STATUS_SCRATCH_OVERFLOW	drivers/SQLite/sqlite3/sqlite3.c	6294;"	d	file:
SQLITE_STATUS_SCRATCH_OVERFLOW	drivers/SQLite/sqlite3/sqlite3.h	5752;"	d
SQLITE_STATUS_SCRATCH_SIZE	drivers/SQLite/sqlite3/sqlite3.c	6298;"	d	file:
SQLITE_STATUS_SCRATCH_SIZE	drivers/SQLite/sqlite3/sqlite3.h	5756;"	d
SQLITE_STATUS_SCRATCH_USED	drivers/SQLite/sqlite3/sqlite3.c	6293;"	d	file:
SQLITE_STATUS_SCRATCH_USED	drivers/SQLite/sqlite3/sqlite3.h	5751;"	d
SQLITE_STMTSTATUS_AUTOINDEX	drivers/SQLite/sqlite3/sqlite3.c	6465;"	d	file:
SQLITE_STMTSTATUS_AUTOINDEX	drivers/SQLite/sqlite3/sqlite3.h	5923;"	d
SQLITE_STMTSTATUS_FULLSCAN_STEP	drivers/SQLite/sqlite3/sqlite3.c	6463;"	d	file:
SQLITE_STMTSTATUS_FULLSCAN_STEP	drivers/SQLite/sqlite3/sqlite3.h	5921;"	d
SQLITE_STMTSTATUS_SORT	drivers/SQLite/sqlite3/sqlite3.c	6464;"	d	file:
SQLITE_STMTSTATUS_SORT	drivers/SQLite/sqlite3/sqlite3.h	5922;"	d
SQLITE_STOREP2	drivers/SQLite/sqlite3/sqlite3.c	9878;"	d	file:
SQLITE_SYNC_DATAONLY	drivers/SQLite/sqlite3/sqlite3.c	1110;"	d	file:
SQLITE_SYNC_DATAONLY	drivers/SQLite/sqlite3/sqlite3.h	568;"	d
SQLITE_SYNC_FULL	drivers/SQLite/sqlite3/sqlite3.c	1109;"	d	file:
SQLITE_SYNC_FULL	drivers/SQLite/sqlite3/sqlite3.h	567;"	d
SQLITE_SYNC_NORMAL	drivers/SQLite/sqlite3/sqlite3.c	1108;"	d	file:
SQLITE_SYNC_NORMAL	drivers/SQLite/sqlite3/sqlite3.h	566;"	d
SQLITE_SYSTEM_MALLOC	drivers/SQLite/sqlite3/sqlite3.c	402;"	d	file:
SQLITE_ShortColNames	drivers/SQLite/sqlite3/sqlite3.c	9610;"	d	file:
SQLITE_SqlTrace	drivers/SQLite/sqlite3/sqlite3.c	9616;"	d	file:
SQLITE_TEMPNAME_SIZE	drivers/SQLite/sqlite3/sqlite3.c	9064;"	d	file:
SQLITE_TEMPNAME_SIZE	drivers/SQLite/sqlite3/sqlite3.c	9078;"	d	file:
SQLITE_TEMPNAME_SIZE	drivers/SQLite/sqlite3/sqlite3.c	9080;"	d	file:
SQLITE_TEMP_FILE_PREFIX	drivers/SQLite/sqlite3/sqlite3.c	9119;"	d	file:
SQLITE_TEMP_STORE	drivers/SQLite/sqlite3/sqlite3.c	7664;"	d	file:
SQLITE_TESTCTRL_ALWAYS	drivers/SQLite/sqlite3/sqlite3.c	6167;"	d	file:
SQLITE_TESTCTRL_ALWAYS	drivers/SQLite/sqlite3/sqlite3.h	5625;"	d
SQLITE_TESTCTRL_ASSERT	drivers/SQLite/sqlite3/sqlite3.c	6166;"	d	file:
SQLITE_TESTCTRL_ASSERT	drivers/SQLite/sqlite3/sqlite3.h	5624;"	d
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	drivers/SQLite/sqlite3/sqlite3.c	6164;"	d	file:
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	drivers/SQLite/sqlite3/sqlite3.h	5622;"	d
SQLITE_TESTCTRL_BITVEC_TEST	drivers/SQLite/sqlite3/sqlite3.c	6162;"	d	file:
SQLITE_TESTCTRL_BITVEC_TEST	drivers/SQLite/sqlite3/sqlite3.h	5620;"	d
SQLITE_TESTCTRL_FAULT_INSTALL	drivers/SQLite/sqlite3/sqlite3.c	6163;"	d	file:
SQLITE_TESTCTRL_FAULT_INSTALL	drivers/SQLite/sqlite3/sqlite3.h	5621;"	d
SQLITE_TESTCTRL_FIRST	drivers/SQLite/sqlite3/sqlite3.c	6158;"	d	file:
SQLITE_TESTCTRL_FIRST	drivers/SQLite/sqlite3/sqlite3.h	5616;"	d
SQLITE_TESTCTRL_ISKEYWORD	drivers/SQLite/sqlite3/sqlite3.c	6170;"	d	file:
SQLITE_TESTCTRL_ISKEYWORD	drivers/SQLite/sqlite3/sqlite3.h	5628;"	d
SQLITE_TESTCTRL_LAST	drivers/SQLite/sqlite3/sqlite3.c	6174;"	d	file:
SQLITE_TESTCTRL_LAST	drivers/SQLite/sqlite3/sqlite3.h	5632;"	d
SQLITE_TESTCTRL_LOCALTIME_FAULT	drivers/SQLite/sqlite3/sqlite3.c	6173;"	d	file:
SQLITE_TESTCTRL_LOCALTIME_FAULT	drivers/SQLite/sqlite3/sqlite3.h	5631;"	d
SQLITE_TESTCTRL_OPTIMIZATIONS	drivers/SQLite/sqlite3/sqlite3.c	6169;"	d	file:
SQLITE_TESTCTRL_OPTIMIZATIONS	drivers/SQLite/sqlite3/sqlite3.h	5627;"	d
SQLITE_TESTCTRL_PENDING_BYTE	drivers/SQLite/sqlite3/sqlite3.c	6165;"	d	file:
SQLITE_TESTCTRL_PENDING_BYTE	drivers/SQLite/sqlite3/sqlite3.h	5623;"	d
SQLITE_TESTCTRL_PGHDRSZ	drivers/SQLite/sqlite3/sqlite3.c	6171;"	d	file:
SQLITE_TESTCTRL_PGHDRSZ	drivers/SQLite/sqlite3/sqlite3.h	5629;"	d
SQLITE_TESTCTRL_PRNG_RESET	drivers/SQLite/sqlite3/sqlite3.c	6161;"	d	file:
SQLITE_TESTCTRL_PRNG_RESET	drivers/SQLite/sqlite3/sqlite3.h	5619;"	d
SQLITE_TESTCTRL_PRNG_RESTORE	drivers/SQLite/sqlite3/sqlite3.c	6160;"	d	file:
SQLITE_TESTCTRL_PRNG_RESTORE	drivers/SQLite/sqlite3/sqlite3.h	5618;"	d
SQLITE_TESTCTRL_PRNG_SAVE	drivers/SQLite/sqlite3/sqlite3.c	6159;"	d	file:
SQLITE_TESTCTRL_PRNG_SAVE	drivers/SQLite/sqlite3/sqlite3.h	5617;"	d
SQLITE_TESTCTRL_RESERVE	drivers/SQLite/sqlite3/sqlite3.c	6168;"	d	file:
SQLITE_TESTCTRL_RESERVE	drivers/SQLite/sqlite3/sqlite3.h	5626;"	d
SQLITE_TESTCTRL_SCRATCHMALLOC	drivers/SQLite/sqlite3/sqlite3.c	6172;"	d	file:
SQLITE_TESTCTRL_SCRATCHMALLOC	drivers/SQLite/sqlite3/sqlite3.h	5630;"	d
SQLITE_TEXT	drivers/SQLite/sqlite3/sqlite3.c	3948;"	d	file:
SQLITE_TEXT	drivers/SQLite/sqlite3/sqlite3.c	3950;"	d	file:
SQLITE_TEXT	drivers/SQLite/sqlite3/sqlite3.h	3406;"	d
SQLITE_TEXT	drivers/SQLite/sqlite3/sqlite3.h	3408;"	d
SQLITE_THREADSAFE	drivers/SQLite/sqlite3/sqlite3.c	362;"	d	file:
SQLITE_THREADSAFE	drivers/SQLite/sqlite3/sqlite3.c	364;"	d	file:
SQLITE_TOOBIG	drivers/SQLite/sqlite3/sqlite3.c	942;"	d	file:
SQLITE_TOOBIG	drivers/SQLite/sqlite3/sqlite3.h	400;"	d
SQLITE_TRANSACTION	drivers/SQLite/sqlite3/sqlite3.c	2853;"	d	file:
SQLITE_TRANSACTION	drivers/SQLite/sqlite3/sqlite3.h	2311;"	d
SQLITE_TRANSIENT	drivers/SQLite/sqlite3/sqlite3.c	4518;"	d	file:
SQLITE_TRANSIENT	drivers/SQLite/sqlite3/sqlite3.h	3976;"	d
SQLITE_UNIX_THREADS	drivers/SQLite/sqlite3/sqlite3.c	24552;"	d	file:
SQLITE_UPDATE	drivers/SQLite/sqlite3/sqlite3.c	2854;"	d	file:
SQLITE_UPDATE	drivers/SQLite/sqlite3/sqlite3.h	2312;"	d
SQLITE_USE_URI	drivers/SQLite/sqlite3/sqlite3.c	12087;"	d	file:
SQLITE_UTF16	drivers/SQLite/sqlite3/sqlite3.c	4309;"	d	file:
SQLITE_UTF16	drivers/SQLite/sqlite3/sqlite3.h	3767;"	d
SQLITE_UTF16BE	drivers/SQLite/sqlite3/sqlite3.c	4308;"	d	file:
SQLITE_UTF16BE	drivers/SQLite/sqlite3/sqlite3.h	3766;"	d
SQLITE_UTF16LE	drivers/SQLite/sqlite3/sqlite3.c	4307;"	d	file:
SQLITE_UTF16LE	drivers/SQLite/sqlite3/sqlite3.h	3765;"	d
SQLITE_UTF16NATIVE	drivers/SQLite/sqlite3/sqlite3.c	7771;"	d	file:
SQLITE_UTF16NATIVE	drivers/SQLite/sqlite3/sqlite3.c	7775;"	d	file:
SQLITE_UTF16_ALIGNED	drivers/SQLite/sqlite3/sqlite3.c	4311;"	d	file:
SQLITE_UTF16_ALIGNED	drivers/SQLite/sqlite3/sqlite3.h	3769;"	d
SQLITE_UTF8	drivers/SQLite/sqlite3/sqlite3.c	4306;"	d	file:
SQLITE_UTF8	drivers/SQLite/sqlite3/sqlite3.h	3764;"	d
SQLITE_VERSION	drivers/SQLite/sqlite3/sqlite3.c	619;"	d	file:
SQLITE_VERSION	drivers/SQLite/sqlite3/sqlite3.c	652;"	d	file:
SQLITE_VERSION	drivers/SQLite/sqlite3/sqlite3.h	110;"	d
SQLITE_VERSION	drivers/SQLite/sqlite3/sqlite3.h	77;"	d
SQLITE_VERSION_NUMBER	drivers/SQLite/sqlite3/sqlite3.c	622;"	d	file:
SQLITE_VERSION_NUMBER	drivers/SQLite/sqlite3/sqlite3.c	653;"	d	file:
SQLITE_VERSION_NUMBER	drivers/SQLite/sqlite3/sqlite3.h	111;"	d
SQLITE_VERSION_NUMBER	drivers/SQLite/sqlite3/sqlite3.h	80;"	d
SQLITE_VTAB_CONSTRAINT_SUPPORT	drivers/SQLite/sqlite3/sqlite3.c	7235;"	d	file:
SQLITE_VTAB_CONSTRAINT_SUPPORT	drivers/SQLite/sqlite3/sqlite3.h	6693;"	d
SQLITE_VdbeListing	drivers/SQLite/sqlite3/sqlite3.c	9617;"	d	file:
SQLITE_VdbeTrace	drivers/SQLite/sqlite3/sqlite3.c	9607;"	d	file:
SQLITE_W32_MUTEX_INITIALIZER	drivers/SQLite/sqlite3/sqlite3.c	17874;"	d	file:
SQLITE_W32_THREADS	drivers/SQLite/sqlite3/sqlite3.c	31435;"	d	file:
SQLITE_WIN32_HEAP_FLAGS	drivers/SQLite/sqlite3/sqlite3.c	31735;"	d	file:
SQLITE_WIN32_HEAP_INIT_SIZE	drivers/SQLite/sqlite3/sqlite3.c	31719;"	d	file:
SQLITE_WIN32_HEAP_MAX_SIZE	drivers/SQLite/sqlite3/sqlite3.c	31727;"	d	file:
SQLITE_WIN32_IOERR_RETRY	drivers/SQLite/sqlite3/sqlite3.c	32253;"	d	file:
SQLITE_WIN32_IOERR_RETRY_DELAY	drivers/SQLite/sqlite3/sqlite3.c	32256;"	d	file:
SQLITE_WSD	drivers/SQLite/sqlite3/sqlite3.c	7874;"	d	file:
SQLITE_WSD	drivers/SQLite/sqlite3/sqlite3.c	7880;"	d	file:
SQLITE_WriteSchema	drivers/SQLite/sqlite3/sqlite3.c	9618;"	d	file:
SQLT_AFC	drivers/Oracle/OCI/include/ocidfn.h	207;"	d
SQLT_AVC	drivers/Oracle/OCI/include/ocidfn.h	208;"	d
SQLT_BDOUBLE	drivers/Oracle/OCI/include/ocidfn.h	200;"	d
SQLT_BFILE	drivers/Oracle/OCI/include/ocidfn.h	243;"	d
SQLT_BFILEE	drivers/Oracle/OCI/include/ocidfn.h	220;"	d
SQLT_BFLOAT	drivers/Oracle/OCI/include/ocidfn.h	199;"	d
SQLT_BIN	drivers/Oracle/OCI/include/ocidfn.h	201;"	d
SQLT_BLOB	drivers/Oracle/OCI/include/ocidfn.h	219;"	d
SQLT_CFILE	drivers/Oracle/OCI/include/ocidfn.h	242;"	d
SQLT_CFILEE	drivers/Oracle/OCI/include/ocidfn.h	221;"	d
SQLT_CHR	drivers/Oracle/OCI/include/ocidfn.h	186;"	d
SQLT_CLOB	drivers/Oracle/OCI/include/ocidfn.h	218;"	d
SQLT_CUR	drivers/Oracle/OCI/include/ocidfn.h	211;"	d
SQLT_DAT	drivers/Oracle/OCI/include/ocidfn.h	197;"	d
SQLT_DATE	drivers/Oracle/OCI/include/ocidfn.h	228;"	d
SQLT_FILE	drivers/Oracle/OCI/include/ocidfn.h	241;"	d
SQLT_FLT	drivers/Oracle/OCI/include/ocidfn.h	189;"	d
SQLT_IBDOUBLE	drivers/Oracle/OCI/include/ocidfn.h	210;"	d
SQLT_IBFLOAT	drivers/Oracle/OCI/include/ocidfn.h	209;"	d
SQLT_INT	drivers/Oracle/OCI/include/ocidfn.h	188;"	d
SQLT_INTERVAL_DS	drivers/Oracle/OCI/include/ocidfn.h	234;"	d
SQLT_INTERVAL_YM	drivers/Oracle/OCI/include/ocidfn.h	233;"	d
SQLT_LAB	drivers/Oracle/OCI/include/ocidfn.h	213;"	d
SQLT_LBI	drivers/Oracle/OCI/include/ocidfn.h	202;"	d
SQLT_LNG	drivers/Oracle/OCI/include/ocidfn.h	193;"	d
SQLT_LVB	drivers/Oracle/OCI/include/ocidfn.h	206;"	d
SQLT_LVC	drivers/Oracle/OCI/include/ocidfn.h	205;"	d
SQLT_NCO	drivers/Oracle/OCI/include/ocidfn.h	223;"	d
SQLT_NON	drivers/Oracle/OCI/include/ocidfn.h	195;"	d
SQLT_NTY	drivers/Oracle/OCI/include/ocidfn.h	216;"	d
SQLT_NUM	drivers/Oracle/OCI/include/ocidfn.h	187;"	d
SQLT_ODT	drivers/Oracle/OCI/include/ocidfn.h	225;"	d
SQLT_OSL	drivers/Oracle/OCI/include/ocidfn.h	214;"	d
SQLT_PDN	drivers/Oracle/OCI/include/ocidfn.h	192;"	d
SQLT_PNTY	drivers/Oracle/OCI/include/ocidfn.h	237;"	d
SQLT_RDD	drivers/Oracle/OCI/include/ocidfn.h	212;"	d
SQLT_REF	drivers/Oracle/OCI/include/ocidfn.h	217;"	d
SQLT_RID	drivers/Oracle/OCI/include/ocidfn.h	196;"	d
SQLT_RSET	drivers/Oracle/OCI/include/ocidfn.h	222;"	d
SQLT_SLS	drivers/Oracle/OCI/include/ocidfn.h	204;"	d
SQLT_STR	drivers/Oracle/OCI/include/ocidfn.h	190;"	d
SQLT_TIME	drivers/Oracle/OCI/include/ocidfn.h	229;"	d
SQLT_TIMESTAMP	drivers/Oracle/OCI/include/ocidfn.h	231;"	d
SQLT_TIMESTAMP_LTZ	drivers/Oracle/OCI/include/ocidfn.h	235;"	d
SQLT_TIMESTAMP_TZ	drivers/Oracle/OCI/include/ocidfn.h	232;"	d
SQLT_TIME_TZ	drivers/Oracle/OCI/include/ocidfn.h	230;"	d
SQLT_UIN	drivers/Oracle/OCI/include/ocidfn.h	203;"	d
SQLT_VBI	drivers/Oracle/OCI/include/ocidfn.h	198;"	d
SQLT_VCS	drivers/Oracle/OCI/include/ocidfn.h	194;"	d
SQLT_VNU	drivers/Oracle/OCI/include/ocidfn.h	191;"	d
SQLT_VST	drivers/Oracle/OCI/include/ocidfn.h	224;"	d
SQL_ARRAY	drivers/Firebird/ibpp/core/ibase.h	376;"	d
SQL_BLOB	drivers/Firebird/ibpp/core/ibase.h	375;"	d
SQL_CONTENT_INSERT	drivers/SQLite/sqlite3/sqlite3.c	123152;"	d	file:
SQL_DATE	drivers/Firebird/ibpp/core/ibase.h	382;"	d
SQL_DELETE_ALL_CONTENT	drivers/SQLite/sqlite3/sqlite3.c	123136;"	d	file:
SQL_DELETE_ALL_DOCSIZE	drivers/SQLite/sqlite3/sqlite3.c	123139;"	d	file:
SQL_DELETE_ALL_SEGDIR	drivers/SQLite/sqlite3/sqlite3.c	123138;"	d	file:
SQL_DELETE_ALL_SEGMENTS	drivers/SQLite/sqlite3/sqlite3.c	123137;"	d	file:
SQL_DELETE_ALL_STAT	drivers/SQLite/sqlite3/sqlite3.c	123140;"	d	file:
SQL_DELETE_ALL_TERMS_SEGDIR	drivers/SQLite/sqlite3/sqlite3.c	123160;"	d	file:
SQL_DELETE_CONTENT	drivers/SQLite/sqlite3/sqlite3.c	123134;"	d	file:
SQL_DELETE_DOCSIZE	drivers/SQLite/sqlite3/sqlite3.c	123153;"	d	file:
SQL_DELETE_SEGDIR_LEVEL	drivers/SQLite/sqlite3/sqlite3.c	123150;"	d	file:
SQL_DELETE_SEGDIR_RANGE	drivers/SQLite/sqlite3/sqlite3.c	123162;"	d	file:
SQL_DELETE_SEGMENTS_RANGE	drivers/SQLite/sqlite3/sqlite3.c	123151;"	d	file:
SQL_DIALECT_CURRENT	drivers/Firebird/ibpp/core/ibase.h	387;"	d
SQL_DIALECT_V5	drivers/Firebird/ibpp/core/ibase.h	384;"	d
SQL_DIALECT_V6	drivers/Firebird/ibpp/core/ibase.h	386;"	d
SQL_DIALECT_V6_TRANSITION	drivers/Firebird/ibpp/core/ibase.h	385;"	d
SQL_DOUBLE	drivers/Firebird/ibpp/core/ibase.h	372;"	d
SQL_D_FLOAT	drivers/Firebird/ibpp/core/ibase.h	373;"	d
SQL_FLOAT	drivers/Firebird/ibpp/core/ibase.h	371;"	d
SQL_INSERT_SEGDIR	drivers/SQLite/sqlite3/sqlite3.c	123145;"	d	file:
SQL_INSERT_SEGMENTS	drivers/SQLite/sqlite3/sqlite3.c	123143;"	d	file:
SQL_INT64	drivers/Firebird/ibpp/core/ibase.h	380;"	d
SQL_IS_EMPTY	drivers/SQLite/sqlite3/sqlite3.c	123135;"	d	file:
SQL_LONG	drivers/Firebird/ibpp/core/ibase.h	370;"	d
SQL_NEXT_SEGMENTS_ID	drivers/SQLite/sqlite3/sqlite3.c	123144;"	d	file:
SQL_NEXT_SEGMENT_INDEX	drivers/SQLite/sqlite3/sqlite3.c	123142;"	d	file:
SQL_QUAD	drivers/Firebird/ibpp/core/ibase.h	377;"	d
SQL_REPLACE_DOCSIZE	drivers/SQLite/sqlite3/sqlite3.c	123154;"	d	file:
SQL_REPLACE_DOCTOTAL	drivers/SQLite/sqlite3/sqlite3.c	123157;"	d	file:
SQL_SELECT_ALL_PREFIX_LEVEL	drivers/SQLite/sqlite3/sqlite3.c	123159;"	d	file:
SQL_SELECT_CONTENT_BY_ROWID	drivers/SQLite/sqlite3/sqlite3.c	123141;"	d	file:
SQL_SELECT_DOCSIZE	drivers/SQLite/sqlite3/sqlite3.c	123155;"	d	file:
SQL_SELECT_DOCTOTAL	drivers/SQLite/sqlite3/sqlite3.c	123156;"	d	file:
SQL_SELECT_LEVEL	drivers/SQLite/sqlite3/sqlite3.c	123146;"	d	file:
SQL_SELECT_LEVEL_COUNT	drivers/SQLite/sqlite3/sqlite3.c	123148;"	d	file:
SQL_SELECT_LEVEL_RANGE	drivers/SQLite/sqlite3/sqlite3.c	123147;"	d	file:
SQL_SELECT_SEGDIR_MAX_LEVEL	drivers/SQLite/sqlite3/sqlite3.c	123149;"	d	file:
SQL_SHORT	drivers/Firebird/ibpp/core/ibase.h	369;"	d
SQL_TEXT	drivers/Firebird/ibpp/core/ibase.h	367;"	d
SQL_TIMESTAMP	drivers/Firebird/ibpp/core/ibase.h	374;"	d
SQL_TYPE_DATE	drivers/Firebird/ibpp/core/ibase.h	379;"	d
SQL_TYPE_TIME	drivers/Firebird/ibpp/core/ibase.h	378;"	d
SQL_VARYING	drivers/Firebird/ibpp/core/ibase.h	368;"	d
SQR_NC	image_processing/TePDIRegGrowSeg.hpp	35;"	d
SRT_Coroutine	drivers/SQLite/sqlite3/sqlite3.c	10791;"	d	file:
SRT_Discard	drivers/SQLite/sqlite3/sqlite3.c	10781;"	d	file:
SRT_EphemTab	drivers/SQLite/sqlite3/sqlite3.c	10790;"	d	file:
SRT_Except	drivers/SQLite/sqlite3/sqlite3.c	10779;"	d	file:
SRT_Exists	drivers/SQLite/sqlite3/sqlite3.c	10780;"	d	file:
SRT_Mem	drivers/SQLite/sqlite3/sqlite3.c	10787;"	d	file:
SRT_Output	drivers/SQLite/sqlite3/sqlite3.c	10786;"	d	file:
SRT_Set	drivers/SQLite/sqlite3/sqlite3.c	10788;"	d	file:
SRT_Table	drivers/SQLite/sqlite3/sqlite3.c	10789;"	d	file:
SRT_Union	drivers/SQLite/sqlite3/sqlite3.c	10778;"	d	file:
STATDEAD	image_processing/TePDIRegGrowSeg.hpp	37;"	d
STATICF	drivers/Oracle/OCI/include/cdemodp0.h	102;"	d
STAT_DLL	stat/TeStatDefines.h	45;"	d
STAT_DLL	stat/TeStatDefines.h	47;"	d
STAT_DLL	stat/TeStatDefines.h	51;"	d
STGeomFromText	drivers/ado/TeAdoSqlServerSpatial.cpp	/^std::string TeSqlServerSpatial::STGeomFromText(const TeLine2D &line)$/;"	f	class:TeSqlServerSpatial
STGeomFromText	drivers/ado/TeAdoSqlServerSpatial.cpp	/^std::string TeSqlServerSpatial::STGeomFromText(const TePoint &point)$/;"	f	class:TeSqlServerSpatial
STGeomFromText	drivers/ado/TeAdoSqlServerSpatial.cpp	/^std::string TeSqlServerSpatial::STGeomFromText(const TePolygon &polygon)$/;"	f	class:TeSqlServerSpatial
STGeomFromWkb	drivers/ado/TeAdoSqlServerSpatial.cpp	/^std::string TeSqlServerSpatial::STGeomFromWkb(const TePolygon &polygon)$/;"	f	class:TeSqlServerSpatial
STREAM_DATA_AVAILABLE	drivers/Oracle/OCI/include/occiControl.h	/^    STREAM_DATA_AVAILABLE$/;"	e	enum:oracle::occi::ResultSet::Status
STREAM_DATA_AVAILABLE	drivers/Oracle/OCI/include/occiControl.h	/^    STREAM_DATA_AVAILABLE$/;"	e	enum:oracle::occi::Statement::Status
STRICMP	drivers/SQLite/sqlite3/sqlite3.c	80372;"	d	file:
STRING_TYPE	drivers/Oracle/OCI/include/ocidem.h	51;"	d
STR_FUNCTION	drivers/SQLite/sqlite3/sqlite3.c	9741;"	d	file:
STT	drivers/Firebird/ibpp/core/ibpp.h	/^	enum STT {stUnknown, stUnsupported,$/;"	g	namespace:IBPP
SVGAMESA_H	drivers/GL/svgamesa.h	50;"	d
SVGAMESA_MAJOR_VERSION	drivers/GL/svgamesa.h	53;"	d
SVGAMESA_MINOR_VERSION	drivers/GL/svgamesa.h	54;"	d
SVGAMesaContext	drivers/GL/svgamesa.h	/^typedef struct svgamesa_context *SVGAMesaContext;$/;"	t	typeref:struct:svgamesa_context
SWAP	drivers/SQLite/sqlite3/sqlite3.c	101222;"	d	file:
SWORDMAXVAL	drivers/Oracle/OCI/include/oratypes.h	205;"	d
SWORDMINVAL	drivers/Oracle/OCI/include/oratypes.h	206;"	d
SX	image_processing/TePDIEMClas.hpp	/^      int SX, SY;$/;"	m	class:TePDIEMClas
SX3_ORACLE	drivers/Oracle/OCI/include/oratypes.h	14;"	d
SX_ORACLE	drivers/Oracle/OCI/include/oratypes.h	13;"	d
SY	image_processing/TePDIEMClas.hpp	/^      int SX, SY;$/;"	m	class:TePDIEMClas
SYN_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        SYN_ATTR_COUNT = 4,$/;"	e	enum:oracle::occi::MetaData::AttrCount
S_CREATE_THEME_ITEM	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalType { S_INACTIVE, S_DRAW_THEME, S_CREATE_THEME_ITEM, S_SET_DATABASE, S_POINT_QUERY, S_SHOW_THEME_POPUP, S_SET_QTTHEMEICON, S_REQUEST_PLUGIN_METADATA };$/;"	e	enum:PluginsSignal::PluginsSignalType
S_DRAW_THEME	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalType { S_INACTIVE, S_DRAW_THEME, S_CREATE_THEME_ITEM, S_SET_DATABASE, S_POINT_QUERY, S_SHOW_THEME_POPUP, S_SET_QTTHEMEICON, S_REQUEST_PLUGIN_METADATA };$/;"	e	enum:PluginsSignal::PluginsSignalType
S_INACTIVE	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalType { S_INACTIVE, S_DRAW_THEME, S_CREATE_THEME_ITEM, S_SET_DATABASE, S_POINT_QUERY, S_SHOW_THEME_POPUP, S_SET_QTTHEMEICON, S_REQUEST_PLUGIN_METADATA };$/;"	e	enum:PluginsSignal::PluginsSignalType
S_POINT_QUERY	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalType { S_INACTIVE, S_DRAW_THEME, S_CREATE_THEME_ITEM, S_SET_DATABASE, S_POINT_QUERY, S_SHOW_THEME_POPUP, S_SET_QTTHEMEICON, S_REQUEST_PLUGIN_METADATA };$/;"	e	enum:PluginsSignal::PluginsSignalType
S_REQUEST_PLUGIN_METADATA	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalType { S_INACTIVE, S_DRAW_THEME, S_CREATE_THEME_ITEM, S_SET_DATABASE, S_POINT_QUERY, S_SHOW_THEME_POPUP, S_SET_QTTHEMEICON, S_REQUEST_PLUGIN_METADATA };$/;"	e	enum:PluginsSignal::PluginsSignalType
S_SET_DATABASE	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalType { S_INACTIVE, S_DRAW_THEME, S_CREATE_THEME_ITEM, S_SET_DATABASE, S_POINT_QUERY, S_SHOW_THEME_POPUP, S_SET_QTTHEMEICON, S_REQUEST_PLUGIN_METADATA };$/;"	e	enum:PluginsSignal::PluginsSignalType
S_SET_QTTHEMEICON	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalType { S_INACTIVE, S_DRAW_THEME, S_CREATE_THEME_ITEM, S_SET_DATABASE, S_POINT_QUERY, S_SHOW_THEME_POPUP, S_SET_QTTHEMEICON, S_REQUEST_PLUGIN_METADATA };$/;"	e	enum:PluginsSignal::PluginsSignalType
S_SHOW_THEME_POPUP	drivers/spl/PluginsSignal.h	/^		enum PluginsSignalType { S_INACTIVE, S_DRAW_THEME, S_CREATE_THEME_ITEM, S_SET_DATABASE, S_POINT_QUERY, S_SHOW_THEME_POPUP, S_SET_QTTHEMEICON, S_REQUEST_PLUGIN_METADATA };$/;"	e	enum:PluginsSignal::PluginsSignalType
Sample	drivers/Oracle/OCI/include/odci.h	/^   OCIInd Sample;$/;"	m	struct:ODCIStatsOptions_ind
Sample	drivers/Oracle/OCI/include/odci.h	/^   OCINumber Sample;$/;"	m	struct:ODCIStatsOptions
SamplePercent	drivers/Oracle/OCI/include/odci.h	/^   OCIInd SamplePercent;$/;"	m	struct:ODCIExtTableInfo_ind
SamplePercent	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        SamplePercent;$/;"	m	struct:ODCIExtTableInfo
Save	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::Save(const std::string& data)$/;"	f	class:BlobImpl
Savepoint	drivers/SQLite/sqlite3/sqlite3.c	/^struct Savepoint {$/;"	s	file:
Savepoint	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Savepoint Savepoint;$/;"	t	typeref:struct:Savepoint	file:
Scale_curve	kernel/TeGraph.h	/^	int Scale_curve;           \/* number of curve to scale (-1 for all) *\/$/;"	m	class:TeGraphPlot
Scale_factor	kernel/TeGraph.h	/^	int Scale_factor;          \/* used to scale Y axis for printing *\/$/;"	m	class:TeGraphPlot
Schema	drivers/SQLite/sqlite3/sqlite3.c	/^struct Schema {$/;"	s	file:
Schema	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Schema Schema;$/;"	t	typeref:struct:Schema	file:
ScratchFreeslot	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct ScratchFreeslot {$/;"	s	file:
ScratchFreeslot	drivers/SQLite/sqlite3/sqlite3.c	/^} ScratchFreeslot;$/;"	t	typeref:struct:ScratchFreeslot	file:
Seconds	drivers/Firebird/ibpp/core/time.cpp	/^int IBPP::Time::Seconds() const$/;"	f	class:IBPP::Time
SegIdDataType	image_processing/TePDIParaSegSegment.hpp	/^      typedef unsigned int SegIdDataType;    $/;"	t	class:TePDIParaSegSegment
SegOut_	kernel/TeRaster.cpp	/^	TeCoordPairVect	SegOut_;   \/\/line and column index $/;"	m	class:TeStrategic	file:
SegThread	image_processing/TePDISAMClassifier.cpp	/^TePDISAMClassifier::SegThread::SegThread( bool progEnabled, TeRaster& inRaster, $/;"	f	class:TePDISAMClassifier::SegThread
SegThread	image_processing/TePDISAMClassifier.hpp	/^      class PDI_DLL SegThread : public TeThread$/;"	c	class:TePDISAMClassifier
Segment	image_processing/TePDIParaSegRegGrowStrategy.cpp	/^TePDIParaSegRegGrowStrategy::Segment::Segment()$/;"	f	class:TePDIParaSegRegGrowStrategy::Segment
Segment	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^      class PDI_DLL Segment : public TePDIParaSegSegment$/;"	c	class:TePDIParaSegRegGrowStrategy
SegmentNode	drivers/SQLite/sqlite3/sqlite3.c	/^struct SegmentNode {$/;"	s	file:
SegmentNode	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct SegmentNode SegmentNode;$/;"	t	typeref:struct:SegmentNode	file:
SegmentWriter	drivers/SQLite/sqlite3/sqlite3.c	/^struct SegmentWriter {$/;"	s	file:
SegmentWriter	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct SegmentWriter SegmentWriter;$/;"	t	typeref:struct:SegmentWriter	file:
SegmenterThreadEntryParams	image_processing/TePDIParallelSegmenter.hpp	/^          SegmenterThreadEntryParams()$/;"	f	class:TePDIParallelSegmenter::SegmenterThreadEntryParams
SegmenterThreadEntryParams	image_processing/TePDIParallelSegmenter.hpp	/^      class SegmenterThreadEntryParams$/;"	c	class:TePDIParallelSegmenter
SegmentsBlocksMatrixT	image_processing/TePDIParallelSegmenter.hpp	/^      typedef TePDIMatrix< TePDIParaSegSegmentsBlock > SegmentsBlocksMatrixT;    $/;"	t	class:TePDIParallelSegmenter
SegmentsPointersMatrixT	image_processing/TePDIParaSegSegmentsBlock.hpp	/^      typedef TePDIMatrix< TePDIParaSegSegment* > SegmentsPointersMatrixT;          $/;"	t	class:TePDIParaSegSegmentsBlock
Select	drivers/SQLite/sqlite3/sqlite3.c	/^struct Select {$/;"	s	file:
Select	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Select Select;$/;"	t	typeref:struct:Select	file:
SelectDest	drivers/SQLite/sqlite3/sqlite3.c	/^struct SelectDest {$/;"	s	file:
SelectDest	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct SelectDest SelectDest;$/;"	t	typeref:struct:SelectDest	file:
Self	drivers/Firebird/ibpp/core/_ibpp.h	/^	ISC_STATUS* Self() { return mVector; }$/;"	f	class:ibpp_internals::IBS
Self	drivers/Firebird/ibpp/core/_ibpp.h	/^	XSQLDA* Self() { return mDescrArea; }$/;"	f	class:ibpp_internals::RowImpl
Self	drivers/Firebird/ibpp/core/_ibpp.h	/^	char* Self() { return mBuffer; }$/;"	f	class:ibpp_internals::DPB
Self	drivers/Firebird/ibpp/core/_ibpp.h	/^	char* Self() { return mBuffer; }$/;"	f	class:ibpp_internals::RB
Self	drivers/Firebird/ibpp/core/_ibpp.h	/^	char* Self() { return mBuffer; }$/;"	f	class:ibpp_internals::SPB
Self	drivers/Firebird/ibpp/core/_ibpp.h	/^	char* Self() { return mBuffer; }$/;"	f	class:ibpp_internals::TPB
SerializedPair	kernel/TeCoverageImport.h	/^struct SerializedPair {$/;"	s
ServerName	drivers/Firebird/ibpp/core/_ibpp.h	/^	const char* ServerName() const		{ return mServerName.c_str(); }$/;"	f	class:ibpp_internals::DatabaseImpl
Service	drivers/Firebird/ibpp/core/ibpp.h	/^	class IService;			typedef Ptr<IService> Service;$/;"	t	namespace:IBPP
ServiceFactory	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	Service ServiceFactory(const std::string& ServerName,$/;"	f	namespace:IBPP
ServiceImpl	drivers/Firebird/ibpp/core/_ibpp.h	/^class ServiceImpl : public IBPP::IService$/;"	c	namespace:ibpp_internals
ServiceImpl	drivers/Firebird/ibpp/core/service.cpp	/^ServiceImpl::ServiceImpl(const std::string& ServerName,$/;"	f	class:ServiceImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, bool value)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, const IBPP::Array& array)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, const IBPP::Blob& blob)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, const IBPP::DBKey& key)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, const IBPP::Date& value)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, const IBPP::Time& value)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, const IBPP::Timestamp& value)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, const char* cstring)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, const std::string& s)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, const void* bindata, int len)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, double value)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, float value)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, int16_t value)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, int32_t value)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::Set(int param, int64_t value)$/;"	f	class:RowImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, bool value)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, const IBPP::Array& array)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, const IBPP::Blob& blob)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, const IBPP::DBKey& key)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, const IBPP::Date& value)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, const IBPP::Time& value)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, const IBPP::Timestamp& value)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, const char* cstring)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, const std::string& s)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, const void* bindata, int len)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, double value)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, float value)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, int16_t value)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, int32_t value)$/;"	f	class:StatementImpl
Set	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::Set(int param, int64_t value)$/;"	f	class:StatementImpl
Set	kernel/TeTime.cpp	/^TeTime::Set(int y, int m, int d, int h, int mt, int s)$/;"	f	class:TeTime
Set16BitH	image_processing/TePDIHistogram.cpp	/^bool TePDIHistogram::Set16BitH($/;"	f	class:TePDIHistogram
Set8BitH	image_processing/TePDIHistogram.cpp	/^bool TePDIHistogram::Set8BitH($/;"	f	class:TePDIHistogram
SetArea	image_processing/TePDIRegion.hpp	/^    void SetArea(long a)$/;"	f	class:TePDIRegion
SetBounds	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::SetBounds(int dim, int low, int high)$/;"	f	class:ArrayImpl
SetClass	image_processing/TePDIRegion.hpp	/^    void SetClass(int clas)$/;"	f	class:TePDIRegion
SetDate	drivers/Firebird/ibpp/core/date.cpp	/^void IBPP::Date::SetDate(int dt)$/;"	f	class:IBPP::Date
SetDate	drivers/Firebird/ibpp/core/date.cpp	/^void IBPP::Date::SetDate(int year, int month, int day)$/;"	f	class:IBPP::Date
SetEleFunctPtrT	kernel/TeDecoderMemory.h	/^	typedef void (TeDecoderMemory::*SetEleFunctPtrT)( const long& pos, const double& val );$/;"	t	class:TeDecoderMemory
SetEleFunctPtrT	kernel/TeDecoderSmartMem.h	/^  typedef void (TeDecoderSmartMem::*SetEleFunctPtrT)( const int& col, $/;"	t	class:TeDecoderSmartMem
SetH	image_processing/TePDIHistogram.cpp	/^bool TePDIHistogram::SetH($/;"	f	class:TePDIHistogram
SetId	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::SetId(ISC_QUAD* quad)$/;"	f	class:ArrayImpl
SetId	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::SetId(ISC_QUAD* quad)$/;"	f	class:BlobImpl
SetId	image_processing/TePDICluster.hpp	/^    void SetId( int newid )$/;"	f	class:TePDICluster
SetId	image_processing/TePDIRegion.hpp	/^    void SetId(long id_region)$/;"	f	class:TePDIRegion
SetKey	drivers/Firebird/ibpp/core/dbkey.cpp	/^void IBPP::DBKey::SetKey(const void* key, int size)$/;"	f	class:IBPP::DBKey
SetKey	stat/heap.cpp	/^void  THeap::SetKey(int Indice,double NKey){$/;"	f	class:THeap
SetNull	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::SetNull(int param)$/;"	f	class:RowImpl
SetNull	drivers/Firebird/ibpp/core/statement.cpp	/^void StatementImpl::SetNull(int param)$/;"	f	class:StatementImpl
SetPageBuffers	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::SetPageBuffers(const std::string& dbfile, int buffers)$/;"	f	class:ServiceImpl
SetPaletteBasedH	image_processing/TePDIHistogram.cpp	/^bool TePDIHistogram::SetPaletteBasedH($/;"	f	class:TePDIHistogram
SetParameter	image_processing/TePDIParameters.hpp	/^      void SetParameter( const std::string& pname,$/;"	f	class:TePDIParameters
SetReadOnly	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::SetReadOnly(const std::string& dbfile, bool readonly)$/;"	f	class:ServiceImpl
SetReserveSpace	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::SetReserveSpace(const std::string& dbfile, bool reserve)$/;"	f	class:ServiceImpl
SetServerName	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::SetServerName(const char* newName)$/;"	f	class:ServiceImpl
SetSweepInterval	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::SetSweepInterval(const std::string& dbfile, int sweep)$/;"	f	class:ServiceImpl
SetSyncWrite	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::SetSyncWrite(const std::string& dbfile, bool sync)$/;"	f	class:ServiceImpl
SetThreshold	image_processing/TePDIIsosegClas.cpp	/^bool TePDIIsosegClas::SetThreshold(double t, int Nban)$/;"	f	class:TePDIIsosegClas
SetTime	drivers/Firebird/ibpp/core/time.cpp	/^void IBPP::Time::SetTime(int hour, int minute, int second, int tenthousandths)$/;"	f	class:IBPP::Time
SetTime	drivers/Firebird/ibpp/core/time.cpp	/^void IBPP::Time::SetTime(int tm)$/;"	f	class:IBPP::Time
SetUserName	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::SetUserName(const char* newName)$/;"	f	class:ServiceImpl
SetUserPassword	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::SetUserPassword(const char* newPassword)$/;"	f	class:ServiceImpl
SetValue	drivers/Firebird/ibpp/core/row.cpp	/^void RowImpl::SetValue(int varnum, IITYPE ivType, const void* value, int userlen)$/;"	f	class:RowImpl
SetdecName	image_processing/TePDIParameters.cpp	/^void TePDIParameters::SetdecName( const std::string& dec_name )$/;"	f	class:TePDIParameters
SharedBuf	drivers/Oracle/OCI/include/odci.h	/^   OCIInd SharedBuf;$/;"	m	struct:ODCIExtTableInfo_ind
SharedBuf	drivers/Oracle/OCI/include/odci.h	/^   OCIInd SharedBuf;$/;"	m	struct:ODCIExtTableQCInfo_ind
SharedBuf	drivers/Oracle/OCI/include/odci.h	/^   OCIRaw*          SharedBuf;$/;"	m	struct:ODCIExtTableInfo
SharedBuf	drivers/Oracle/OCI/include/odci.h	/^   OCIRaw*          SharedBuf;$/;"	m	struct:ODCIExtTableQCInfo
ShmRegion	drivers/SQLite/sqlite3/sqlite3.c	/^  struct ShmRegion {$/;"	s	struct:winShmNode	file:
ShowDataLink	drivers/ado/TeAdoDB.cpp	/^bool ShowDataLink( _bstr_t * bstr_ConnectString )$/;"	f
Shutdown	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::Shutdown(const std::string& dbfile, IBPP::DSM mode, int sectimeout)$/;"	f	class:ServiceImpl
SimulateDiskfullError	drivers/SQLite/sqlite3/sqlite3.c	22496;"	d	file:
SimulateDiskfullError	drivers/SQLite/sqlite3/sqlite3.c	22510;"	d	file:
SimulateDiskfullError	drivers/SQLite/sqlite3/sqlite3.c	24838;"	d	file:
SimulateDiskfullError	drivers/SQLite/sqlite3/sqlite3.c	24852;"	d	file:
SimulateDiskfullError	drivers/SQLite/sqlite3/sqlite3.c	31619;"	d	file:
SimulateDiskfullError	drivers/SQLite/sqlite3/sqlite3.c	31633;"	d	file:
SimulateIOError	drivers/SQLite/sqlite3/sqlite3.c	22487;"	d	file:
SimulateIOError	drivers/SQLite/sqlite3/sqlite3.c	22509;"	d	file:
SimulateIOError	drivers/SQLite/sqlite3/sqlite3.c	24829;"	d	file:
SimulateIOError	drivers/SQLite/sqlite3/sqlite3.c	24851;"	d	file:
SimulateIOError	drivers/SQLite/sqlite3/sqlite3.c	31610;"	d	file:
SimulateIOError	drivers/SQLite/sqlite3/sqlite3.c	31632;"	d	file:
SimulateIOErrorBenign	drivers/SQLite/sqlite3/sqlite3.c	22486;"	d	file:
SimulateIOErrorBenign	drivers/SQLite/sqlite3/sqlite3.c	22508;"	d	file:
SimulateIOErrorBenign	drivers/SQLite/sqlite3/sqlite3.c	24828;"	d	file:
SimulateIOErrorBenign	drivers/SQLite/sqlite3/sqlite3.c	24850;"	d	file:
SimulateIOErrorBenign	drivers/SQLite/sqlite3/sqlite3.c	31609;"	d	file:
SimulateIOErrorBenign	drivers/SQLite/sqlite3/sqlite3.c	31631;"	d	file:
SingleRasterCachesKeyT	image_processing/TePDIStatistic.hpp	/^      typedef std::pair< unsigned int, unsigned int  > SingleRasterCachesKeyT;$/;"	t	class:TePDIStatistic
Size	drivers/Firebird/ibpp/core/_ibpp.h	/^	int Size() { return mSize; }$/;"	f	class:ibpp_internals::TPB
Size	drivers/Firebird/ibpp/core/_ibpp.h	/^	short Size() { return (short)mSize; }$/;"	f	class:ibpp_internals::DPB
Size	drivers/Firebird/ibpp/core/_ibpp.h	/^	short Size() { return (short)mSize; }$/;"	f	class:ibpp_internals::RB
Size	drivers/Firebird/ibpp/core/_ibpp.h	/^	short Size() { return (short)mSize; }$/;"	f	class:ibpp_internals::SPB
Size	drivers/Firebird/ibpp/core/ibpp.h	/^		int Size() const	{ return (int)mDBKey.size(); }$/;"	f	class:IBPP::DBKey
Size	kernel/TeRedBlackTree.h	/^			unsigned int Size(void) const$/;"	f	class:TeREDBLACK::TeRBTree
Size	stat/TeSkaterGrafo.h	/^       int Size;$/;"	m	struct:TSkaterGrafo::Grafo
Size	stat/TeSkaterGrafo.h	/^ int Size() {return GetSize();}$/;"	f	class:TSkaterGrafo
Size	stat/filaDouble.h	/^      int Size;$/;"	m	struct:TFilaDouble::Fila
Size	stat/filaDouble.h	/^  int Size() {return GetSize();}$/;"	f	class:TFilaDouble
Size	stat/filaInt.h	/^      int Size;$/;"	m	struct:TFilaInt::Fila
Size	stat/filaInt.h	/^  int Size() {return GetSize();}$/;"	f	class:TFilaInt
Size	stat/filaR.h	/^      int Size;$/;"	m	struct:TFilaR::Fila
Size	stat/heap.h	/^        int Size;$/;"	m	struct:THeap::Heap
Size	stat/lista.h	/^      int Size;$/;"	m	struct:TListaVizinho::ListaVizinho
Size	stat/lista.h	/^  int Size;$/;"	m	class:TListaVizinho
SizeBDiag	drivers/qt/TeQtCanvas.h	/^    enum CursorMode { Pointer, Area, Pan, Hand, SizeVer, SizeBDiag,$/;"	e	enum:TeQtCanvas::CursorMode
SizeVer	drivers/qt/TeQtCanvas.h	/^    enum CursorMode { Pointer, Area, Pan, Hand, SizeVer, SizeBDiag,$/;"	e	enum:TeQtCanvas::CursorMode
SizeofArray	drivers/SQLite/sqlite3/sqlite3.c	114454;"	d	file:
Sleep	drivers/Firebird/TeFirebird.h	49;"	d
Sleep	drivers/Firebird/ibpp/core/service.cpp	44;"	d	file:
Slice	kernel/TeNeighbours.h	/^		int		Slice () {return _slice;}$/;"	f	class:TeProxMatrixAttributes
Slice	kernel/TeNeighbours.h	/^		void Slice (int s) {_slice = s;}$/;"	f	class:TeProxMatrixAttributes
Slice	kernel/TeProxMatrixSlicingStrategy.h	/^	virtual bool Slice(TeProxMatrixImplementation* ) {return true;}$/;"	f	class:TeProxMatrixNoSlicingStrategy
Slice	kernel/TeProxMatrixStrategies.cpp	/^bool TeProxMatrixZonesSlicingStrategy::Slice (TeProxMatrixImplementation* imp)$/;"	f	class:TeProxMatrixZonesSlicingStrategy
SmallestOf	functions/TeSimilarity.cpp	/^SmallestOf (double a, double b, double c)$/;"	f
SnippetFragment	drivers/SQLite/sqlite3/sqlite3.c	/^struct SnippetFragment {$/;"	s	file:
SnippetFragment	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct SnippetFragment SnippetFragment;$/;"	t	typeref:struct:SnippetFragment	file:
SnippetIter	drivers/SQLite/sqlite3/sqlite3.c	/^struct SnippetIter {$/;"	s	file:
SnippetIter	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct SnippetIter SnippetIter;$/;"	t	typeref:struct:SnippetIter	file:
SnippetPhrase	drivers/SQLite/sqlite3/sqlite3.c	/^struct SnippetPhrase {$/;"	s	file:
SnippetPhrase	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct SnippetPhrase SnippetPhrase;$/;"	t	typeref:struct:SnippetPhrase	file:
SortByDimension	drivers/SQLite/sqlite3/sqlite3.c	/^static void SortByDimension($/;"	f	file:
SortByDistance	drivers/SQLite/sqlite3/sqlite3.c	/^static void SortByDistance($/;"	f	file:
SorterRecord	drivers/SQLite/sqlite3/sqlite3.c	/^struct SorterRecord {$/;"	s	file:
SorterRecord	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct SorterRecord SorterRecord;$/;"	t	typeref:struct:SorterRecord	file:
South	image_processing/TePDIHaralick.hpp	/^        South = 16,$/;"	e	enum:TePDIHaralick::DirectionT
SouthEast	image_processing/TePDIHaralick.hpp	/^        SouthEast = 8,$/;"	e	enum:TePDIHaralick::DirectionT
SouthWest	image_processing/TePDIHaralick.hpp	/^        SouthWest = 32,$/;"	e	enum:TePDIHaralick::DirectionT
SpectralSamplesVecPtrT	image_processing/TePDISAMClassifier.hpp	/^      typedef TeSharedPtr< SpectralSamplesVectorT > SpectralSamplesVecPtrT;$/;"	t	class:TePDISAMClassifier
SpectralSamplesVectorT	image_processing/TePDISAMClassifier.hpp	/^      typedef std::vector< ClassSpectralSamples > SpectralSamplesVectorT;$/;"	t	class:TePDISAMClassifier
SphMap	kernel/TeDatum.cpp	/^typedef map<string, SphParam> SphMap;$/;"	t	file:
SphParam	kernel/TeDatum.cpp	/^struct SphParam $/;"	s	file:
SplitNode	drivers/SQLite/sqlite3/sqlite3.c	/^static int SplitNode($/;"	f	file:
Sql	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::string& Sql() { return mSql; }$/;"	f	class:ibpp_internals::StatementImpl
SqlCode	drivers/Firebird/ibpp/core/_ibs.cpp	/^int IBS::SqlCode() const$/;"	f	class:IBS
SqlCode	drivers/Firebird/ibpp/core/exception.cpp	/^int SQLExceptionImpl::SqlCode() const throw()$/;"	f	class:SQLExceptionImpl
Sqlite3Config	drivers/SQLite/sqlite3/sqlite3.c	/^struct Sqlite3Config {$/;"	s	file:
SrcList	drivers/SQLite/sqlite3/sqlite3.c	/^struct SrcList {$/;"	s	file:
SrcList	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct SrcList SrcList;$/;"	t	typeref:struct:SrcList	file:
SrcList_item	drivers/SQLite/sqlite3/sqlite3.c	/^  struct SrcList_item {$/;"	s	struct:SrcList	file:
StackElem	kernel/TeViewTreeIterator.h	/^    StackElem(TeViewTree* tr){ tree = tr; ind = tr->size(); }$/;"	f	struct:TeViewTreeRevIterator::StackElem
StackElem	kernel/TeViewTreeIterator.h	/^    StackElem(TeViewTree* tr, int i){ tree = tr; ind = i; }$/;"	f	struct:TeViewTreeIterator::StackElem
StackElem	kernel/TeViewTreeIterator.h	/^    StackElem(TeViewTree* tr, int i){ tree = tr; ind = i; }$/;"	f	struct:TeViewTreeRevIterator::StackElem
StackElem	kernel/TeViewTreeIterator.h	/^  struct StackElem{$/;"	s	class:TeViewTreeIterator
StackElem	kernel/TeViewTreeIterator.h	/^  struct StackElem{$/;"	s	class:TeViewTreeRevIterator
Start	drivers/Firebird/ibpp/core/transaction.cpp	/^void TransactionImpl::Start()$/;"	f	class:TransactionImpl
StartBackup	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::StartBackup(const std::string& dbfile,$/;"	f	class:ServiceImpl
StartOfMonth	drivers/Firebird/ibpp/core/date.cpp	/^void IBPP::Date::StartOfMonth()$/;"	f	class:IBPP::Date
StartProgInt	image_processing/TePDIAlgorithm.cpp	/^void TePDIAlgorithm::StartProgInt( const std::string& message, $/;"	f	class:TePDIAlgorithm
StartRestore	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::StartRestore(const std::string& bkfile, const std::string& dbfile,$/;"	f	class:ServiceImpl
Started	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool Started() { return mHandle == 0 ? false : true; }$/;"	f	class:ibpp_internals::TransactionImpl
Stat3Accum	drivers/SQLite/sqlite3/sqlite3.c	/^struct Stat3Accum {$/;"	s	file:
Stat3Accum	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Stat3Accum Stat3Accum;$/;"	t	typeref:struct:Stat3Accum	file:
Stat3Sample	drivers/SQLite/sqlite3/sqlite3.c	/^  struct Stat3Sample {$/;"	s	struct:Stat3Accum	file:
Stat_	image_processing/TePDIRegGrowSeg.hpp	/^        char            Stat_;$/;"	m	class:TePDIRGSCell
StatelessConnectionPool	drivers/Oracle/OCI/include/occiControl.h	/^class StatelessConnectionPool$/;"	c	namespace:oracle::occi
Statement	drivers/Firebird/ibpp/core/ibpp.h	/^	class IStatement;		typedef Ptr<IStatement> Statement;$/;"	t	namespace:IBPP
Statement	drivers/Oracle/OCI/include/occiControl.h	/^class Statement $/;"	c	namespace:oracle::occi
StatementFactory	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	Statement StatementFactory(Database db, Transaction tr,$/;"	f	namespace:IBPP
StatementFactory	drivers/Firebird/ibpp/core/ibpp.h	/^	inline Statement StatementFactory(Database db, Transaction tr)$/;"	f	namespace:IBPP
StatementImpl	drivers/Firebird/ibpp/core/_ibpp.h	/^class StatementImpl : public IBPP::IStatement$/;"	c	namespace:ibpp_internals
StatementImpl	drivers/Firebird/ibpp/core/statement.cpp	/^StatementImpl::StatementImpl(DatabaseImpl* database, TransactionImpl* transaction,$/;"	f	class:StatementImpl
Statistics	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::Statistics(int* Fetches, int* Marks, int* Reads, int* Writes)$/;"	f	class:DatabaseImpl
Status	drivers/Oracle/OCI/include/occiControl.h	/^    enum Status {READY_FOR_READ, READY_FOR_WRITE, INACTIVE};$/;"	g	class:oracle::occi::Stream
Status	drivers/Oracle/OCI/include/occiControl.h	/^  enum Status                                   $/;"	g	class:oracle::occi::ResultSet
Status	drivers/Oracle/OCI/include/occiControl.h	/^  enum Status                                   $/;"	g	class:oracle::occi::Statement
StopProgInt	image_processing/TePDIAlgorithm.cpp	/^void TePDIAlgorithm::StopProgInt()$/;"	f	class:TePDIAlgorithm
StrAccum	drivers/SQLite/sqlite3/sqlite3.c	/^struct StrAccum {$/;"	s	file:
StrAccum	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct StrAccum StrAccum;$/;"	t	typeref:struct:StrAccum	file:
StrBuffer	drivers/SQLite/sqlite3/sqlite3.c	/^struct StrBuffer {$/;"	s	file:
StrBuffer	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct StrBuffer StrBuffer;$/;"	t	typeref:struct:StrBuffer	file:
StrClean	drivers/Oracle/TeOCICursor.cpp	/^char* StrClean(char *name)$/;"	f
Stream	drivers/Oracle/OCI/include/occiControl.h	/^class Stream$/;"	c	namespace:oracle::occi
Stringify	drivers/SQLite/sqlite3/sqlite3.c	63027;"	d	file:
SubProgram	drivers/SQLite/sqlite3/sqlite3.c	/^struct SubProgram {$/;"	s	file:
SubProgram	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct SubProgram SubProgram;$/;"	t	typeref:struct:SubProgram	file:
SubSeconds	drivers/Firebird/ibpp/core/time.cpp	/^int IBPP::Time::SubSeconds() const	\/\/ Actually tenthousandths of seconds$/;"	f	class:IBPP::Time
Subscription	drivers/Oracle/OCI/include/occiAQ.h	/^class Subscription$/;"	c	namespace:oracle::occi::aq
Successor	kernel/TeRedBlackTree.h	/^			virtual NODE* Successor(NODE* x) const$/;"	f	class:TeREDBLACK::TeRBTree
Successor	kernel/graph.h	/^		typedef std::map<int, EdgeType > Successor;$/;"	t	class:br_stl::Graph
SumCtx	drivers/SQLite/sqlite3/sqlite3.c	/^struct SumCtx {$/;"	s	file:
SumCtx	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct SumCtx SumCtx;$/;"	t	typeref:struct:SumCtx	file:
SwapUInt	utils/TeWKBGeometryDecoder.cpp	/^unsigned int SwapUInt(const unsigned int& uintVal)$/;"	f
Sweep	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::Sweep(const std::string& dbfile)$/;"	f	class:ServiceImpl
Symbol	kernel/TeGraph.cpp	/^char Symbol[CURVES_MAX] = {        \/* symbols identifying each curve *\/$/;"	v
TABLE_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        TABLE_ATTR_COUNT = 12,$/;"	e	enum:oracle::occi::MetaData::AttrCount
TABLE_H	drivers/qt/TeQtBigTable.h	2;"	d
TABSEL	kernel/TePieBar.h	/^	enum			TePieBarInput {ALL, TABSEL, QUERYSEL, LEGEND, NOTTABSEL, NOTQUERYSEL, NOTLEGEND};$/;"	e	enum:TePieBar::TePieBarInput
TAM	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TAM {amWrite, amRead};$/;"	g	namespace:IBPP
TAMJAN	image_processing/TePDIRegGrowSeg.hpp	36;"	d
TAT	image_processing/TePDIHants.cpp	/^  int TAT, iMAX;$/;"	v
TArvore	stat/TeSkaterArvore.h	/^class STAT_DLL TArvore{$/;"	c
TCurStrip_	kernel/TeDecoderTIFF.h	/^	long		TCurStrip_;	\/\/ current line in memory$/;"	m	class:TeDecoderTIFF
TCurTile_	kernel/TeDecoderTIFF.h	/^	long		TCurTile_;	\/\/ current tile decoded in internal memory$/;"	m	class:TeDecoderTIFF
TDK_DB_CONNECTIONSPOOL_H	kernel/TeDBConnectionsPool.h	2;"	d
TE2NDDEGPOLYNOMIALGTFACCTORY_H	kernel/Te2ndDegPolynomialGTFactory.h	28;"	d
TE2NDDEGPOLYNOMIALGT_H	kernel/Te2ndDegPolynomialGT.h	29;"	d
TE3RDDEGPOLYNOMIALGTFACCTORY_H	kernel/Te3rdDegPolynomialGTFactory.h	28;"	d
TE3RDDEGPOLYNOMIALGT_H	kernel/Te3rdDegPolynomialGT.h	29;"	d
TEAFFINEGTFACTORY_H	kernel/TeAffineGTFactory.h	28;"	d
TEAFFINEGT_H	kernel/TeAffineGT.h	29;"	d
TEAGNOSTIC_H	kernel/TeAgnostic.h	42;"	d
TEAGN_CHECK_EPS	kernel/TeAgnostic.h	289;"	d
TEAGN_CHECK_EQUAL	kernel/TeAgnostic.h	259;"	d
TEAGN_CHECK_NOTEQUAL	kernel/TeAgnostic.h	273;"	d
TEAGN_DEBUG_CONDITION	kernel/TeAgnostic.h	344;"	d
TEAGN_DEBUG_CONDITION	kernel/TeAgnostic.h	347;"	d
TEAGN_DEBUG_MODE	kernel/TeAgnostic.h	57;"	d
TEAGN_DEBUG_MODE_CHECK	kernel/TeAgnostic.h	331;"	d
TEAGN_DEBUG_RETURN	kernel/TeAgnostic.h	360;"	d
TEAGN_DEBUG_RETURN	kernel/TeAgnostic.h	363;"	d
TEAGN_ENABLE_STDOUT_LOG	kernel/TeAgnostic.h	61;"	d
TEAGN_FALSE_OR_LOG	kernel/TeAgnostic.h	246;"	d
TEAGN_FALSE_OR_RETURN	kernel/TeAgnostic.h	222;"	d
TEAGN_LOGERR	kernel/TeAgnostic.h	132;"	d
TEAGN_LOGERR_STDOUT	kernel/TeAgnostic.h	88;"	d
TEAGN_LOGERR_STDOUT	kernel/TeAgnostic.h	95;"	d
TEAGN_LOGMSG	kernel/TeAgnostic.h	120;"	d
TEAGN_LOGMSG_STDOUT	kernel/TeAgnostic.h	72;"	d
TEAGN_LOGMSG_STDOUT	kernel/TeAgnostic.h	79;"	d
TEAGN_LOGWARN	kernel/TeAgnostic.h	144;"	d
TEAGN_LOGWARN_STDOUT	kernel/TeAgnostic.h	104;"	d
TEAGN_LOGWARN_STDOUT	kernel/TeAgnostic.h	111;"	d
TEAGN_LOG_AND_RETURN	kernel/TeAgnostic.h	234;"	d
TEAGN_LOG_AND_THROW	kernel/TeAgnostic.h	156;"	d
TEAGN_NOT_IMPLEMENTED	kernel/TeAgnostic.h	325;"	d
TEAGN_TRUE_OR_LOG	kernel/TeAgnostic.h	194;"	d
TEAGN_TRUE_OR_RETURN	kernel/TeAgnostic.h	207;"	d
TEAGN_TRUE_OR_THROW	kernel/TeAgnostic.h	169;"	d
TEAGN_WATCH	kernel/TeAgnostic.h	182;"	d
TECOMMUNICATOR_H	kernel/TeCommunicator.h	29;"	d
TECOMMWRAPPER	kernel/TeCommunicator.h	46;"	d
TEDATABASEFACTORYPARAMS_H	kernel/TeDatabaseFactoryParams.h	28;"	d
TEDATABASEFACTORY_H	kernel/TeDatabaseFactory.h	28;"	d
TEDECODERPAM_H	drivers/PAMDecoder/TeDecoderPAM.h	28;"	d
TEDTMALGORITHM_HPP	dtm/TeDTMAlgorithm.h	26;"	d
TEDTMDEFINES_HPP	dtm/TeDTMDefines.h	51;"	d
TEDTMPARAMETERS_HPP	dtm/TeDTMParameters.h	31;"	d
TEDXF_DLL	drivers/DXF/tedxfdefines.h	12;"	d
TEDXF_DLL	drivers/DXF/tedxfdefines.h	7;"	d
TEDXF_DLL	drivers/DXF/tedxfdefines.h	9;"	d
TEGDAL_DLL	drivers/gdal/TeGDALDefines.h	11;"	d
TEGDAL_DLL	drivers/gdal/TeGDALDefines.h	6;"	d
TEGDAL_DLL	drivers/gdal/TeGDALDefines.h	8;"	d
TEGEOMETRICTRANSFORMATION_H	kernel/TeGeometricTransformation.h	28;"	d
TEGTFACTORIES_REGISTERED	kernel/TeGTFactory.h	35;"	d
TEGTFACTORY_H	kernel/TeGTFactory.h	42;"	d
TEGTPARAMS_H	kernel/TeGTParams.h	28;"	d
TEMAPPEDMEMORY_H	kernel/TeMappedMemory.h	28;"	d
TEMPORALRELATION	kernel/yyTemporal.cpp	89;"	d	file:
TEMPORALRELATION	kernel/yyTemporal.h	28;"	d
TEMP_MASTER_NAME	drivers/SQLite/sqlite3/sqlite3.c	7835;"	d	file:
TEMULTICONTAINER_H	kernel/TeMultiContainer.h	30;"	d
TEMUTEX_H	kernel/TeMutex.h	30;"	d
TEPDIALGORITHMFACTORY_HPP	image_processing/TePDIAlgorithmFactory.hpp	50;"	d
TEPDIALGORITHM_HPP	image_processing/TePDIAlgorithm.hpp	26;"	d
TEPDIARITHMETICFACTORY_HPP	image_processing/TePDIArithmeticFactory.hpp	26;"	d
TEPDIARITHMETIC_HPP	image_processing/TePDIArithmetic.hpp	26;"	d
TEPDIBAATZ_HPP	image_processing/TePDIBaatz.hpp	26;"	d
TEPDIBATCHGEOMOSAIC_HPP	image_processing/TePDIBatchGeoMosaic.hpp	26;"	d
TEPDIBDFILTERFACTORY_HPP	image_processing/TePDIBDFilterFactory.hpp	26;"	d
TEPDIBDFILTER_HPP	image_processing/TePDIBDFilter.hpp	26;"	d
TEPDIBLENDER_HPP	image_processing/TePDIBlender.hpp	26;"	d
TEPDIBUFFEREDFILTER_HPP	image_processing/TePDIBufferedFilter.hpp	26;"	d
TEPDICLUSTER_HPP	image_processing/TePDICluster.hpp	26;"	d
TEPDICOLORTRANSFORMFACTORY_HPP	image_processing/TePDIColorTransformFactory.hpp	26;"	d
TEPDICOLORTRANSFORM_HPP	image_processing/TePDIColorTransform.hpp	26;"	d
TEPDICONTRASTFACTORY_HPP	image_processing/TePDIContrastFactory.hpp	26;"	d
TEPDICONTRAST_HPP	image_processing/TePDIContrast.hpp	26;"	d
TEPDICORRELATIONMATCHING_HPP	image_processing/TePDICorrelationMatching.hpp	26;"	d
TEPDIDECORRELATIONENHANCEMENT_HPP	image_processing/TePDIDecorrelationEnhancement.hpp	26;"	d
TEPDIDEFINES_HPP	image_processing/TePDIDefines.hpp	111;"	d
TEPDIEMCLASFACTORY_HPP	image_processing/TePDIEMClasFactory.hpp	26;"	d
TEPDIEMCLAS_HPP	image_processing/TePDIEMClas.hpp	26;"	d
TEPDIESPECDATA_HPP	image_processing/TePDIEspecData.hpp	26;"	d
TEPDIFFT_HPP	image_processing/TePDIFFT.hpp	26;"	d
TEPDIFILTERMASK_HPP	image_processing/TePDIFilterMask.hpp	26;"	d
TEPDIFUSIONINDEXES_HPP	image_processing/TePDIFusionIndexes.hpp	26;"	d
TEPDIGARGUETFUSION_HPP	image_processing/TePDIGarguetFusion.hpp	26;"	d
TEPDIGARGUETMIXMODELSTRATEGY_HPP	image_processing/TePDIPrincoMixModelStrategy.hpp	26;"	d
TEPDIGENERALIZEDIHSFUSION_HPP	image_processing/TePDIGeneralizedIHSFusion.hpp	26;"	d
TEPDIGEOMOSAIC_HPP	image_processing/TePDIGeoMosaic.hpp	26;"	d
TEPDIHANTS_HPP	image_processing/TePDIHants.hpp	26;"	d
TEPDIHARALICK_HPP	image_processing/TePDIHaralick.hpp	26;"	d
TEPDIHISTOGRAM_HPP	image_processing/TePDIHistogram.hpp	26;"	d
TEPDIIHSFUSION_HPP	image_processing/TePDIIHSFusion.hpp	26;"	d
TEPDIIHSWAVELETFUSION_HPP	image_processing/TePDIIHSWaveletFusion.hpp	26;"	d
TEPDIINTERPOLATOR_HPP	image_processing/TePDIInterpolator.hpp	26;"	d
TEPDIISOSEGCLAS	image_processing/TePDIIsosegClas.hpp	26;"	d
TEPDIISOSEGCLASFACTORY_HPP	image_processing/TePDIIsosegClasFactory.hpp	26;"	d
TEPDIJOINTHISTOGRAM_HPP	image_processing/TePDIJointHistogram.hpp	26;"	d
TEPDIKMEANSCLASFACTORY_HPP	image_processing/TePDIKMeansClasFactory.hpp	26;"	d
TEPDIKMEANSCLAS_HPP	image_processing/TePDIKMeansClas.hpp	26;"	d
TEPDILEVELREMAP_HPP	image_processing/TePDILevelRemap.hpp	26;"	d
TEPDILINEARFILTERFACTORY_HPP	image_processing/TePDILinearFilterFactory.hpp	26;"	d
TEPDILINEARFILTER_HPP	image_processing/TePDILinearFilter.hpp	26;"	d
TEPDIMALLATWAVELETS_HPP	image_processing/TePDIMallatWavelets.hpp	26;"	d
TEPDIMATHFUNCTIONS_HPP	image_processing/TePDIMathFunctions.hpp	26;"	d
TEPDIMATRIXFUNCTIONS_HPP	image_processing/TePDIMatrixFunctions.hpp	26;"	d
TEPDIMATRIX_HPP	image_processing/TePDIMatrix.hpp	26;"	d
TEPDIMIMATCHING_HPP	image_processing/TePDIMIMatching.hpp	26;"	d
TEPDIMIXMODELCOMPONENTLIST_HPP	image_processing/TePDIMixModelComponentList.hpp	26;"	d
TEPDIMIXMODELCOMPONENT_HPP	image_processing/TePDIMixModelComponent.hpp	27;"	d
TEPDIMIXMODELFACTORY_HPP	image_processing/TePDIMixModelFactory.hpp	26;"	d
TEPDIMIXMODELSPECTRALBANDLIST_HPP	image_processing/TePDIMixModelSpectralBandList.hpp	26;"	d
TEPDIMIXMODELSPECTRALBAND_HPP	image_processing/TePDIMixModelSpectralBand.hpp	26;"	d
TEPDIMIXMODELSTRATEGY_HPP	image_processing/TePDIMixModelStrategy.hpp	26;"	d
TEPDIMIXMODELSTRATFACTORY_HPP	image_processing/TePDIMixModelStratFactory.hpp	33;"	d
TEPDIMIXMODEL_HPP	image_processing/TePDIMixModel.hpp	27;"	d
TEPDIMMIOMATCHING_HPP	image_processing/TePDIMMIOMatching.hpp	26;"	d
TEPDIMORFFILTERFACTORY_HPP	image_processing/TePDIMorfFilterFactory.hpp	26;"	d
TEPDIMORFFILTER_HPP	image_processing/TePDIMorfFilter.hpp	26;"	d
TEPDIMTXDOUBLEADPT_HPP	image_processing/TePDIMtxDoubleAdpt.hpp	26;"	d
TEPDIOFMATCHING_HPP	image_processing/TePDIOFMatching.hpp	26;"	d
TEPDIPARALELLSEGMENTER_HPP	image_processing/TePDIParallelSegmenter.hpp	26;"	d
TEPDIPARAMETERS_HPP	image_processing/TePDIParameters.hpp	31;"	d
TEPDIPARASEGBAATZSTRATEGYFACTORY_HPP	image_processing/TePDIParaSegBaatzStrategyFactory.hpp	26;"	d
TEPDIPARASEGBAATZSTRATEGY_HPP	image_processing/TePDIParaSegBaatzStrategy.hpp	26;"	d
TEPDIPARASEGREGGROWSTRATEGYFACTORY_HPP	image_processing/TePDIParaSegRegGrowStrategyFactory.hpp	26;"	d
TEPDIPARASEGREGGROWSTRATEGY_HPP	image_processing/TePDIParaSegRegGrowStrategy.hpp	26;"	d
TEPDIPARASEGSEGMENTSLOCK_HPP	image_processing/TePDIParaSegSegmentsBlock.hpp	26;"	d
TEPDIPARASEGSEGMENT_HPP	image_processing/TePDIParaSegSegment.hpp	26;"	d
TEPDIPARASEGSTRATEGYFACTORYPARAMS_HPP	image_processing/TePDIParaSegStrategyFactoryParams.hpp	26;"	d
TEPDIPARASEGSTRATEGYFACTORY_HPP	image_processing/TePDIParaSegStrategyFactory.hpp	26;"	d
TEPDIPARASEGSTRATEGYPARAMS_HPP	image_processing/TePDIParaSegStrategyParams.hpp	26;"	d
TEPDIPARASEGSTRATEGY_HPP	image_processing/TePDIParaSegStrategy.hpp	26;"	d
TEPDIPCAWAVELETFUSION_HPP	image_processing/TePDIPCAWaveletFusion.hpp	26;"	d
TEPDIPIMANAGERGLOBALSETTINGS_HPP	image_processing/TePDIPIManagerGlobalSettings.hpp	26;"	d
TEPDIPIMANAGER_HPP	image_processing/TePDIPIManager.hpp	26;"	d
TEPDIPRINCIPALCOMPONENTSFACTORY_HPP	image_processing/TePDIPrincipalComponentsFactory.hpp	26;"	d
TEPDIPRINCIPALCOMPONENTSFUSION_HPP	image_processing/TePDIPrincipalComponentsFusion.hpp	26;"	d
TEPDIPRINCIPALCOMPONENTS_HPP	image_processing/TePDIPrincipalComponents.hpp	26;"	d
TEPDIPRINCOMIXMODELSF_HPP	image_processing/TePDIPrincoMixModelSF.hpp	26;"	d
TEPDIRADARFILTER_HPP	image_processing/TePDIRadarFilter.hpp	26;"	d
TEPDIRADARFROSTFILTERFACTORY_HPP	image_processing/TePDIRadarFrostFilterFactory.hpp	26;"	d
TEPDIRADARFROSTFILTER_HPP	image_processing/TePDIRadarFrostFilter.hpp	26;"	d
TEPDIRADARGAMMAFILTER_HPP	image_processing/TePDIRadarGammaFilter.hpp	26;"	d
TEPDIRADARKUANFILTERFACTORY_HPP	image_processing/TePDIRadarKuanFilterFactory.hpp	26;"	d
TEPDIRADARKUANFILTER_HPP	image_processing/TePDIRadarKuanFilter.hpp	26;"	d
TEPDIRADARLEEFILTERFACTORY_HPP	image_processing/TePDIRadarLeeFilterFactory.hpp	26;"	d
TEPDIRADARLEEFILTER_HPP	image_processing/TePDIRadarLeeFilter.hpp	26;"	d
TEPDIRASTER2VECTORFACTORY_HPP	image_processing/TePDIRaster2VectorFactory.hpp	26;"	d
TEPDIRASTER2VECTOR_HPP	image_processing/TePDIRaster2Vector.hpp	35;"	d
TEPDIRASTERRUBUFFER_HPP	image_processing/TePDIRasterRUBuffer.hpp	26;"	d
TEPDIREGGROWSEGFACTORY_HPP	image_processing/TePDIRegGrowSegFactory.hpp	26;"	d
TEPDIREGGROWSEG_HPP	image_processing/TePDIRegGrowSeg.hpp	26;"	d
TEPDIREGION_HPP	image_processing/TePDIRegion.hpp	26;"	d
TEPDIREGISTERFACTORY_HPP	image_processing/TePDIRegisterFactory.hpp	26;"	d
TEPDIREGISTER_HPP	image_processing/TePDIRegister.hpp	26;"	d
TEPDIRGBPALETTEFUNCTIONS_HPP	image_processing/TePDIRgbPaletteFunctions.hpp	26;"	d
TEPDIRGBPALETTENODE_HPP	image_processing/TePDIRgbPaletteNode.hpp	26;"	d
TEPDIRGBPALETTE_HPP	image_processing/TePDIRgbPalette.hpp	26;"	d
TEPDISAMCLASSIFIER_HPP	image_processing/TePDISAMClassifier.hpp	26;"	d
TEPDISENSORSIMULATORFACTORY_HPP	image_processing/TePDISensorSimulatorFactory.hpp	26;"	d
TEPDISENSORSIMULATOR_HPP	image_processing/TePDISensorSimulator.hpp	26;"	d
TEPDISIMPLEX_HPP	image_processing/TePDISimplex.hpp	26;"	d
TEPDISTATISTIC_HPP	image_processing/TePDIStatistic.hpp	26;"	d
TEPDISTRATEGYFACTORY_HPP	image_processing/TePDIStrategyFactory.hpp	31;"	d
TEPDISTRATEGY_HPP	image_processing/TePDIStrategy.hpp	26;"	d
TEPDITILEINDEXER_HPP	image_processing/TePDITileIndexer.hpp	26;"	d
TEPDITPMOSAIC_HPP	image_processing/TePDITPMosaic.hpp	26;"	d
TEPDITYPES_HPP	image_processing/TePDITypes.hpp	32;"	d
TEPDIUTILS_HPP	image_processing/TePDIUtils.hpp	34;"	d
TEPDIVENTURAFUSION_HPP	image_processing/TePDIVenturaFusion.hpp	26;"	d
TEPDIWAVELETATROUSFUSION_HPP	image_processing/TePDIWaveletAtrousFusion.hpp	26;"	d
TEPDIWAVELETATROUS_HPP	image_processing/TePDIWaveletAtrous.hpp	26;"	d
TEPDIWISPERFUSION_HPP	image_processing/TePDIWiSpeRFusion.hpp	26;"	d
TEPIEBAR_H	kernel/TePieBar.h	27;"	d
TEPLOTVIEW_H	drivers/qt/TePlotView.h	25;"	d
TEPOLYGONSETPROPERTIES_H	kernel/TePolygonSetProperties.h	25;"	d
TEPROFILE1_H	kernel/TeProfile1.h	2;"	d
TEPROJECTIVEGTFACTORY_H	kernel/TeProjectiveGTFactory.h	26;"	d
TEPROJECTIVEGT_H	kernel/TeProjectiveGT.h	26;"	d
TEQTDATASOURCE_H	drivers/qt/TeQtDataSource.h	2;"	d
TEQTGRIDSOURCE_H	drivers/qt/TeQtGridSource.h	2;"	d
TEQTLEGENDSOURCE_H	drivers/qt/TeQtLegendSource.h	2;"	d
TEQTTABLE_H	drivers/qt/TeQtTable.h	23;"	d
TEQWTPLOTCURVE_H	drivers/qwt/TeQwtPlotCurve.h	23;"	d
TEQWTPLOTPICKER_H	drivers/qwt/TeQwtPlotPicker.h	23;"	d
TEQWTPLOTZOOMER_H	drivers/qwt/TeQwtPlotZoomer.h	25;"	d
TEQWTPLOT_H	drivers/qwt/TeQwtPlot.h	23;"	d
TERASTERMEMMANAGER_H	kernel/TeRasterMemManager.h	28;"	d
TERM_ANDINFO	drivers/SQLite/sqlite3/sqlite3.c	100817;"	d	file:
TERM_CODED	drivers/SQLite/sqlite3/sqlite3.c	100814;"	d	file:
TERM_COPIED	drivers/SQLite/sqlite3/sqlite3.c	100815;"	d	file:
TERM_DYNAMIC	drivers/SQLite/sqlite3/sqlite3.c	100812;"	d	file:
TERM_ORINFO	drivers/SQLite/sqlite3/sqlite3.c	100816;"	d	file:
TERM_OR_OK	drivers/SQLite/sqlite3/sqlite3.c	100818;"	d	file:
TERM_VIRTUAL	drivers/SQLite/sqlite3/sqlite3.c	100813;"	d	file:
TERM_VNULL	drivers/SQLite/sqlite3/sqlite3.c	100820;"	d	file:
TERM_VNULL	drivers/SQLite/sqlite3/sqlite3.c	100822;"	d	file:
TERRALIB_VERSION	kernel/TeVersion.h	36;"	d
TESEMAPHORE_H	kernel/TeSemaphore.h	25;"	d
TESHAREDPTR_H	kernel/TeSharedPtr.h	25;"	d
TESTBIT	drivers/SQLite/sqlite3/sqlite3.c	35095;"	d	file:
TESTHR	drivers/ado/TeAdoDB.cpp	/^inline void TESTHR( HRESULT hr )$/;"	f
TESTHR	drivers/ado/TeAdoFireBird.cpp	/^inline void TESTHR( HRESULT hr )$/;"	f
TESTHR	drivers/ado/TeAdoOracle.cpp	/^inline void TESTHR( HRESULT hr )$/;"	f
TESTHR	drivers/ado/TeAdoSqlServer.cpp	/^inline void TESTHR( HRESULT hr )$/;"	f
TESTHR	drivers/ado/TeAdoSqlServerSpatial.cpp	/^inline void TESTHR( HRESULT hr )$/;"	f
TESTONLY	drivers/SQLite/sqlite3/sqlite3.c	114543;"	d	file:
TESTONLY	drivers/SQLite/sqlite3/sqlite3.c	114545;"	d	file:
TESTONLY	drivers/SQLite/sqlite3/sqlite3.c	475;"	d	file:
TESTONLY	drivers/SQLite/sqlite3/sqlite3.c	477;"	d	file:
TETEMPFILEREMOVER_H	kernel/TeTempFilesRemover.h	28;"	d
TETHREADSIGNAL_H	kernel/TeThreadSignal.h	30;"	d
TETRHEADPARAMETERS_H	kernel/TeThreadParameters.h	28;"	d
TEVIEWTREEITERATOR_H	kernel/TeViewTreeIterator.h	8;"	d
TEVIEWTREEUTILS_H_	kernel/TeViewTreeUtils.h	9;"	d
TE_EWKB_BBOX_FLAG	drivers/PostgreSQL/TePGInterface.h	101;"	d
TE_EWKB_M_OFFSET	drivers/PostgreSQL/TePGInterface.h	99;"	d
TE_EWKB_SRID_FLAG	drivers/PostgreSQL/TePGInterface.h	100;"	d
TE_EWKB_ZM_OFFSET	drivers/PostgreSQL/TePGInterface.h	97;"	d
TE_EWKB_Z_OFFSET	drivers/PostgreSQL/TePGInterface.h	98;"	d
TFF	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TFF {tfIgnoreLimbo = 0x1, tfAutoCommit = 0x2, tfNoAutoUndo = 0x4};$/;"	g	namespace:IBPP
TF_Autoincrement	drivers/SQLite/sqlite3/sqlite3.c	9999;"	d	file:
TF_Ephemeral	drivers/SQLite/sqlite3/sqlite3.c	9997;"	d	file:
TF_HasPrimaryKey	drivers/SQLite/sqlite3/sqlite3.c	9998;"	d	file:
TF_NeedMetadata	drivers/SQLite/sqlite3/sqlite3.c	10001;"	d	file:
TF_Readonly	drivers/SQLite/sqlite3/sqlite3.c	9996;"	d	file:
TF_Virtual	drivers/SQLite/sqlite3/sqlite3.c	10000;"	d	file:
TFilaDouble	stat/filaDouble.cpp	/^TFilaDouble::TFilaDouble(){$/;"	f	class:TFilaDouble
TFilaDouble	stat/filaDouble.h	/^class STAT_DLL TFilaDouble {$/;"	c
TFilaInt	stat/filaInt.cpp	/^TFilaInt::TFilaInt(){$/;"	f	class:TFilaInt
TFilaInt	stat/filaInt.h	/^class STAT_DLL TFilaInt $/;"	c
TFilaR	stat/filaR.cpp	/^TFilaR::TFilaR(){$/;"	f	class:TFilaR
TFilaR	stat/filaR.h	/^class STAT_DLL TFilaR {$/;"	c
THEME	drivers/qt/TeQtCheckListItem.h	/^	enum ItemType {DATABASE, INFOLAYER, VIEW, THEME, LEGENDTITLE, LEGEND, CHARTTITLE, CHART};$/;"	e	enum:TeQtCheckListItem::ItemType
THEME_GROUP	kernel/TeViewNode.h	29;"	d
THREADED_MUTEXED	drivers/Oracle/OCI/include/occiControl.h	/^    THREADED_MUTEXED = OCI_THREADED,$/;"	e	enum:oracle::occi::Environment::Mode
THREADED_UNMUTEXED	drivers/Oracle/OCI/include/occiControl.h	/^    THREADED_UNMUTEXED = OCI_THREADED | OCI_ENV_NO_MUTEX,$/;"	e	enum:oracle::occi::Environment::Mode
THash	stat/hash.cpp	/^THash::THash(){\/\/Construtora$/;"	f	class:THash
THash	stat/hash.h	/^class THash{$/;"	c
THeap	stat/heap.cpp	/^THeap::THeap(int Size){$/;"	f	class:THeap
THeap	stat/heap.h	/^class STAT_DLL THeap {$/;"	c
TIFFTAG_GDAL_METADATA	kernel/TeDecoderTIFF.cpp	42;"	d	file:
TIFFTAG_GDAL_NODATA	kernel/TeDecoderTIFF.cpp	43;"	d	file:
TIFFTAG_RPCCOEFFICIENT	kernel/TeDecoderTIFF.cpp	44;"	d	file:
TIL	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TIL {ilConcurrency, ilReadDirty, ilReadCommitted, ilConsistency};$/;"	g	namespace:IBPP
TIMER_ELAPSED	drivers/SQLite/sqlite3/sqlite3.c	22466;"	d	file:
TIMER_ELAPSED	drivers/SQLite/sqlite3/sqlite3.c	22470;"	d	file:
TIMER_ELAPSED	drivers/SQLite/sqlite3/sqlite3.c	24808;"	d	file:
TIMER_ELAPSED	drivers/SQLite/sqlite3/sqlite3.c	24812;"	d	file:
TIMER_ELAPSED	drivers/SQLite/sqlite3/sqlite3.c	31589;"	d	file:
TIMER_ELAPSED	drivers/SQLite/sqlite3/sqlite3.c	31593;"	d	file:
TIMER_END	drivers/SQLite/sqlite3/sqlite3.c	22465;"	d	file:
TIMER_END	drivers/SQLite/sqlite3/sqlite3.c	22469;"	d	file:
TIMER_END	drivers/SQLite/sqlite3/sqlite3.c	24807;"	d	file:
TIMER_END	drivers/SQLite/sqlite3/sqlite3.c	24811;"	d	file:
TIMER_END	drivers/SQLite/sqlite3/sqlite3.c	31588;"	d	file:
TIMER_END	drivers/SQLite/sqlite3/sqlite3.c	31592;"	d	file:
TIMER_START	drivers/SQLite/sqlite3/sqlite3.c	22464;"	d	file:
TIMER_START	drivers/SQLite/sqlite3/sqlite3.c	22468;"	d	file:
TIMER_START	drivers/SQLite/sqlite3/sqlite3.c	24806;"	d	file:
TIMER_START	drivers/SQLite/sqlite3/sqlite3.c	24810;"	d	file:
TIMER_START	drivers/SQLite/sqlite3/sqlite3.c	31587;"	d	file:
TIMER_START	drivers/SQLite/sqlite3/sqlite3.c	31591;"	d	file:
TIMESTAMP_IS_NOBEGIN	drivers/PostgreSQL/TePGInterface.cpp	222;"	d	file:
TIMESTAMP_IS_NOEND	drivers/PostgreSQL/TePGInterface.cpp	225;"	d	file:
TIMESTAMP_NOBEGIN	drivers/PostgreSQL/TePGInterface.cpp	221;"	d	file:
TIMESTAMP_NOEND	drivers/PostgreSQL/TePGInterface.cpp	224;"	d	file:
TIMESTAMP_NOT_FINITE	drivers/PostgreSQL/TePGInterface.cpp	227;"	d	file:
TITLE_MAX	kernel/TeGraph.h	33;"	d
TImage_	kernel/TeDecoderTIFF.h	/^	short 		TImage_;	\/\/ 0=MONOIMAGE, 1=RGBIMAGE, 2=PALLETE $/;"	m	class:TeDecoderTIFF
TK_ABORT	drivers/SQLite/sqlite3/sqlite3.c	7470;"	d	file:
TK_ACTION	drivers/SQLite/sqlite3/sqlite3.c	7471;"	d	file:
TK_ADD	drivers/SQLite/sqlite3/sqlite3.c	7582;"	d	file:
TK_AFTER	drivers/SQLite/sqlite3/sqlite3.c	7472;"	d	file:
TK_AGG_COLUMN	drivers/SQLite/sqlite3/sqlite3.c	7596;"	d	file:
TK_AGG_FUNCTION	drivers/SQLite/sqlite3/sqlite3.c	7595;"	d	file:
TK_ALL	drivers/SQLite/sqlite3/sqlite3.c	7555;"	d	file:
TK_ALTER	drivers/SQLite/sqlite3/sqlite3.c	7581;"	d	file:
TK_ANALYZE	drivers/SQLite/sqlite3/sqlite3.c	7473;"	d	file:
TK_AND	drivers/SQLite/sqlite3/sqlite3.c	7511;"	d	file:
TK_ANY	drivers/SQLite/sqlite3/sqlite3.c	7509;"	d	file:
TK_AS	drivers/SQLite/sqlite3/sqlite3.c	7466;"	d	file:
TK_ASC	drivers/SQLite/sqlite3/sqlite3.c	7474;"	d	file:
TK_ATTACH	drivers/SQLite/sqlite3/sqlite3.c	7475;"	d	file:
TK_AUTOINCR	drivers/SQLite/sqlite3/sqlite3.c	7545;"	d	file:
TK_BEFORE	drivers/SQLite/sqlite3/sqlite3.c	7476;"	d	file:
TK_BEGIN	drivers/SQLite/sqlite3/sqlite3.c	7447;"	d	file:
TK_BETWEEN	drivers/SQLite/sqlite3/sqlite3.c	7513;"	d	file:
TK_BITAND	drivers/SQLite/sqlite3/sqlite3.c	7524;"	d	file:
TK_BITNOT	drivers/SQLite/sqlite3/sqlite3.c	7535;"	d	file:
TK_BITOR	drivers/SQLite/sqlite3/sqlite3.c	7525;"	d	file:
TK_BLOB	drivers/SQLite/sqlite3/sqlite3.c	7573;"	d	file:
TK_BY	drivers/SQLite/sqlite3/sqlite3.c	7477;"	d	file:
TK_CASCADE	drivers/SQLite/sqlite3/sqlite3.c	7478;"	d	file:
TK_CASE	drivers/SQLite/sqlite3/sqlite3.c	7576;"	d	file:
TK_CAST	drivers/SQLite/sqlite3/sqlite3.c	7479;"	d	file:
TK_CHECK	drivers/SQLite/sqlite3/sqlite3.c	7543;"	d	file:
TK_COLLATE	drivers/SQLite/sqlite3/sqlite3.c	7534;"	d	file:
TK_COLUMN	drivers/SQLite/sqlite3/sqlite3.c	7594;"	d	file:
TK_COLUMNKW	drivers/SQLite/sqlite3/sqlite3.c	7480;"	d	file:
TK_COMMA	drivers/SQLite/sqlite3/sqlite3.c	7467;"	d	file:
TK_COMMIT	drivers/SQLite/sqlite3/sqlite3.c	7452;"	d	file:
TK_CONCAT	drivers/SQLite/sqlite3/sqlite3.c	7533;"	d	file:
TK_CONFLICT	drivers/SQLite/sqlite3/sqlite3.c	7481;"	d	file:
TK_CONSTRAINT	drivers/SQLite/sqlite3/sqlite3.c	7538;"	d	file:
TK_CONST_FUNC	drivers/SQLite/sqlite3/sqlite3.c	7597;"	d	file:
TK_CREATE	drivers/SQLite/sqlite3/sqlite3.c	7459;"	d	file:
TK_CTIME_KW	drivers/SQLite/sqlite3/sqlite3.c	7508;"	d	file:
TK_DATABASE	drivers/SQLite/sqlite3/sqlite3.c	7482;"	d	file:
TK_DEFAULT	drivers/SQLite/sqlite3/sqlite3.c	7539;"	d	file:
TK_DEFERRABLE	drivers/SQLite/sqlite3/sqlite3.c	7551;"	d	file:
TK_DEFERRED	drivers/SQLite/sqlite3/sqlite3.c	7449;"	d	file:
TK_DELETE	drivers/SQLite/sqlite3/sqlite3.c	7548;"	d	file:
TK_DESC	drivers/SQLite/sqlite3/sqlite3.c	7483;"	d	file:
TK_DETACH	drivers/SQLite/sqlite3/sqlite3.c	7484;"	d	file:
TK_DISTINCT	drivers/SQLite/sqlite3/sqlite3.c	7559;"	d	file:
TK_DOT	drivers/SQLite/sqlite3/sqlite3.c	7560;"	d	file:
TK_DROP	drivers/SQLite/sqlite3/sqlite3.c	7553;"	d	file:
TK_EACH	drivers/SQLite/sqlite3/sqlite3.c	7485;"	d	file:
TK_ELSE	drivers/SQLite/sqlite3/sqlite3.c	7579;"	d	file:
TK_END	drivers/SQLite/sqlite3/sqlite3.c	7453;"	d	file:
TK_END_OF_FILE	drivers/SQLite/sqlite3/sqlite3.c	7589;"	d	file:
TK_EQ	drivers/SQLite/sqlite3/sqlite3.c	7518;"	d	file:
TK_ESCAPE	drivers/SQLite/sqlite3/sqlite3.c	7523;"	d	file:
TK_EXCEPT	drivers/SQLite/sqlite3/sqlite3.c	7556;"	d	file:
TK_EXCLUSIVE	drivers/SQLite/sqlite3/sqlite3.c	7451;"	d	file:
TK_EXISTS	drivers/SQLite/sqlite3/sqlite3.c	7462;"	d	file:
TK_EXPLAIN	drivers/SQLite/sqlite3/sqlite3.c	7444;"	d	file:
TK_FAIL	drivers/SQLite/sqlite3/sqlite3.c	7486;"	d	file:
TK_FLOAT	drivers/SQLite/sqlite3/sqlite3.c	7572;"	d	file:
TK_FOR	drivers/SQLite/sqlite3/sqlite3.c	7487;"	d	file:
TK_FOREIGN	drivers/SQLite/sqlite3/sqlite3.c	7552;"	d	file:
TK_FROM	drivers/SQLite/sqlite3/sqlite3.c	7561;"	d	file:
TK_FUNCTION	drivers/SQLite/sqlite3/sqlite3.c	7593;"	d	file:
TK_GE	drivers/SQLite/sqlite3/sqlite3.c	7522;"	d	file:
TK_GROUP	drivers/SQLite/sqlite3/sqlite3.c	7565;"	d	file:
TK_GT	drivers/SQLite/sqlite3/sqlite3.c	7519;"	d	file:
TK_HAVING	drivers/SQLite/sqlite3/sqlite3.c	7566;"	d	file:
TK_ID	drivers/SQLite/sqlite3/sqlite3.c	7468;"	d	file:
TK_IF	drivers/SQLite/sqlite3/sqlite3.c	7460;"	d	file:
TK_IGNORE	drivers/SQLite/sqlite3/sqlite3.c	7488;"	d	file:
TK_ILLEGAL	drivers/SQLite/sqlite3/sqlite3.c	7590;"	d	file:
TK_IMMEDIATE	drivers/SQLite/sqlite3/sqlite3.c	7450;"	d	file:
TK_IN	drivers/SQLite/sqlite3/sqlite3.c	7514;"	d	file:
TK_INDEX	drivers/SQLite/sqlite3/sqlite3.c	7580;"	d	file:
TK_INDEXED	drivers/SQLite/sqlite3/sqlite3.c	7469;"	d	file:
TK_INITIALLY	drivers/SQLite/sqlite3/sqlite3.c	7489;"	d	file:
TK_INSERT	drivers/SQLite/sqlite3/sqlite3.c	7547;"	d	file:
TK_INSTEAD	drivers/SQLite/sqlite3/sqlite3.c	7490;"	d	file:
TK_INTEGER	drivers/SQLite/sqlite3/sqlite3.c	7571;"	d	file:
TK_INTERSECT	drivers/SQLite/sqlite3/sqlite3.c	7557;"	d	file:
TK_INTO	drivers/SQLite/sqlite3/sqlite3.c	7569;"	d	file:
TK_IS	drivers/SQLite/sqlite3/sqlite3.c	7512;"	d	file:
TK_ISNOT	drivers/SQLite/sqlite3/sqlite3.c	7588;"	d	file:
TK_ISNULL	drivers/SQLite/sqlite3/sqlite3.c	7515;"	d	file:
TK_JOIN	drivers/SQLite/sqlite3/sqlite3.c	7562;"	d	file:
TK_JOIN_KW	drivers/SQLite/sqlite3/sqlite3.c	7537;"	d	file:
TK_KEY	drivers/SQLite/sqlite3/sqlite3.c	7494;"	d	file:
TK_LE	drivers/SQLite/sqlite3/sqlite3.c	7520;"	d	file:
TK_LIKE_KW	drivers/SQLite/sqlite3/sqlite3.c	7491;"	d	file:
TK_LIMIT	drivers/SQLite/sqlite3/sqlite3.c	7567;"	d	file:
TK_LP	drivers/SQLite/sqlite3/sqlite3.c	7464;"	d	file:
TK_LSHIFT	drivers/SQLite/sqlite3/sqlite3.c	7526;"	d	file:
TK_LT	drivers/SQLite/sqlite3/sqlite3.c	7521;"	d	file:
TK_MATCH	drivers/SQLite/sqlite3/sqlite3.c	7492;"	d	file:
TK_MINUS	drivers/SQLite/sqlite3/sqlite3.c	7529;"	d	file:
TK_NE	drivers/SQLite/sqlite3/sqlite3.c	7517;"	d	file:
TK_NO	drivers/SQLite/sqlite3/sqlite3.c	7493;"	d	file:
TK_NOT	drivers/SQLite/sqlite3/sqlite3.c	7461;"	d	file:
TK_NOTNULL	drivers/SQLite/sqlite3/sqlite3.c	7516;"	d	file:
TK_NULL	drivers/SQLite/sqlite3/sqlite3.c	7540;"	d	file:
TK_OF	drivers/SQLite/sqlite3/sqlite3.c	7495;"	d	file:
TK_OFFSET	drivers/SQLite/sqlite3/sqlite3.c	7496;"	d	file:
TK_ON	drivers/SQLite/sqlite3/sqlite3.c	7546;"	d	file:
TK_OR	drivers/SQLite/sqlite3/sqlite3.c	7510;"	d	file:
TK_ORDER	drivers/SQLite/sqlite3/sqlite3.c	7564;"	d	file:
TK_PLAN	drivers/SQLite/sqlite3/sqlite3.c	7446;"	d	file:
TK_PLUS	drivers/SQLite/sqlite3/sqlite3.c	7528;"	d	file:
TK_PRAGMA	drivers/SQLite/sqlite3/sqlite3.c	7497;"	d	file:
TK_PRIMARY	drivers/SQLite/sqlite3/sqlite3.c	7541;"	d	file:
TK_QUERY	drivers/SQLite/sqlite3/sqlite3.c	7445;"	d	file:
TK_RAISE	drivers/SQLite/sqlite3/sqlite3.c	7498;"	d	file:
TK_REFERENCES	drivers/SQLite/sqlite3/sqlite3.c	7544;"	d	file:
TK_REGISTER	drivers/SQLite/sqlite3/sqlite3.c	7574;"	d	file:
TK_REINDEX	drivers/SQLite/sqlite3/sqlite3.c	7506;"	d	file:
TK_RELEASE	drivers/SQLite/sqlite3/sqlite3.c	7456;"	d	file:
TK_REM	drivers/SQLite/sqlite3/sqlite3.c	7532;"	d	file:
TK_RENAME	drivers/SQLite/sqlite3/sqlite3.c	7507;"	d	file:
TK_REPLACE	drivers/SQLite/sqlite3/sqlite3.c	7499;"	d	file:
TK_RESTRICT	drivers/SQLite/sqlite3/sqlite3.c	7500;"	d	file:
TK_ROLLBACK	drivers/SQLite/sqlite3/sqlite3.c	7454;"	d	file:
TK_ROW	drivers/SQLite/sqlite3/sqlite3.c	7501;"	d	file:
TK_RP	drivers/SQLite/sqlite3/sqlite3.c	7465;"	d	file:
TK_RSHIFT	drivers/SQLite/sqlite3/sqlite3.c	7527;"	d	file:
TK_SAVEPOINT	drivers/SQLite/sqlite3/sqlite3.c	7455;"	d	file:
TK_SELECT	drivers/SQLite/sqlite3/sqlite3.c	7558;"	d	file:
TK_SEMI	drivers/SQLite/sqlite3/sqlite3.c	7443;"	d	file:
TK_SET	drivers/SQLite/sqlite3/sqlite3.c	7550;"	d	file:
TK_SLASH	drivers/SQLite/sqlite3/sqlite3.c	7531;"	d	file:
TK_SPACE	drivers/SQLite/sqlite3/sqlite3.c	7591;"	d	file:
TK_STAR	drivers/SQLite/sqlite3/sqlite3.c	7530;"	d	file:
TK_STRING	drivers/SQLite/sqlite3/sqlite3.c	7536;"	d	file:
TK_TABLE	drivers/SQLite/sqlite3/sqlite3.c	7458;"	d	file:
TK_TEMP	drivers/SQLite/sqlite3/sqlite3.c	7463;"	d	file:
TK_THEN	drivers/SQLite/sqlite3/sqlite3.c	7578;"	d	file:
TK_TO	drivers/SQLite/sqlite3/sqlite3.c	7457;"	d	file:
TK_TO_BLOB	drivers/SQLite/sqlite3/sqlite3.c	7584;"	d	file:
TK_TO_INT	drivers/SQLite/sqlite3/sqlite3.c	7586;"	d	file:
TK_TO_NUMERIC	drivers/SQLite/sqlite3/sqlite3.c	7585;"	d	file:
TK_TO_REAL	drivers/SQLite/sqlite3/sqlite3.c	7587;"	d	file:
TK_TO_TEXT	drivers/SQLite/sqlite3/sqlite3.c	7583;"	d	file:
TK_TRANSACTION	drivers/SQLite/sqlite3/sqlite3.c	7448;"	d	file:
TK_TRIGGER	drivers/SQLite/sqlite3/sqlite3.c	7502;"	d	file:
TK_UMINUS	drivers/SQLite/sqlite3/sqlite3.c	7598;"	d	file:
TK_UNCLOSED_STRING	drivers/SQLite/sqlite3/sqlite3.c	7592;"	d	file:
TK_UNION	drivers/SQLite/sqlite3/sqlite3.c	7554;"	d	file:
TK_UNIQUE	drivers/SQLite/sqlite3/sqlite3.c	7542;"	d	file:
TK_UPDATE	drivers/SQLite/sqlite3/sqlite3.c	7549;"	d	file:
TK_UPLUS	drivers/SQLite/sqlite3/sqlite3.c	7599;"	d	file:
TK_USING	drivers/SQLite/sqlite3/sqlite3.c	7563;"	d	file:
TK_VACUUM	drivers/SQLite/sqlite3/sqlite3.c	7503;"	d	file:
TK_VALUES	drivers/SQLite/sqlite3/sqlite3.c	7570;"	d	file:
TK_VARIABLE	drivers/SQLite/sqlite3/sqlite3.c	7575;"	d	file:
TK_VIEW	drivers/SQLite/sqlite3/sqlite3.c	7504;"	d	file:
TK_VIRTUAL	drivers/SQLite/sqlite3/sqlite3.c	7505;"	d	file:
TK_WHEN	drivers/SQLite/sqlite3/sqlite3.c	7577;"	d	file:
TK_WHERE	drivers/SQLite/sqlite3/sqlite3.c	7568;"	d	file:
TLADO_DLL	drivers/ado/TeAdoDefines.h	39;"	d
TLADO_DLL	drivers/ado/TeAdoDefines.h	41;"	d
TLADO_DLL	drivers/ado/TeAdoDefines.h	45;"	d
TLFIREBIRD_DLL	drivers/Firebird/TeFirebirdDefines.h	39;"	d
TLFIREBIRD_DLL	drivers/Firebird/TeFirebirdDefines.h	41;"	d
TLFIREBIRD_DLL	drivers/Firebird/TeFirebirdDefines.h	45;"	d
TLFUNCTIONS_DLL	functions/TeFunctionsDefines.h	39;"	d
TLFUNCTIONS_DLL	functions/TeFunctionsDefines.h	41;"	d
TLFUNCTIONS_DLL	functions/TeFunctionsDefines.h	45;"	d
TLMYSQL_DLL	drivers/MySQL/TeMySQLDefines.h	39;"	d
TLMYSQL_DLL	drivers/MySQL/TeMySQLDefines.h	41;"	d
TLMYSQL_DLL	drivers/MySQL/TeMySQLDefines.h	45;"	d
TLORACLE_DLL	drivers/Oracle/TeOracleDefines.h	39;"	d
TLORACLE_DLL	drivers/Oracle/TeOracleDefines.h	41;"	d
TLORACLE_DLL	drivers/Oracle/TeOracleDefines.h	45;"	d
TLPOSTGRESQL_DLL	drivers/PostgreSQL/TePostgreSQLDefines.h	39;"	d
TLPOSTGRESQL_DLL	drivers/PostgreSQL/TePostgreSQLDefines.h	41;"	d
TLPOSTGRESQL_DLL	drivers/PostgreSQL/TePostgreSQLDefines.h	45;"	d
TLQWT_DLL	drivers/qwt/TeQwtDefines.h	45;"	d
TLQWT_DLL	drivers/qwt/TeQwtDefines.h	47;"	d
TLQWT_DLL	drivers/qwt/TeQwtDefines.h	51;"	d
TLR	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TLR {lrWait, lrNoWait};$/;"	g	namespace:IBPP
TLSPL_DLL	drivers/spl/TeSPLDefines.h	43;"	d
TLSPL_DLL	drivers/spl/TeSPLDefines.h	45;"	d
TLSPL_DLL	drivers/spl/TeSPLDefines.h	49;"	d
TLSQLITE_DLL	drivers/SQLite/TeSQLiteDefines.h	39;"	d
TLSQLITE_DLL	drivers/SQLite/TeSQLiteDefines.h	41;"	d
TLSQLITE_DLL	drivers/SQLite/TeSQLiteDefines.h	45;"	d
TLUTILS_DLL	utils/TeUtilsDefines.h	39;"	d
TLUTILS_DLL	utils/TeUtilsDefines.h	41;"	d
TLUTILS_DLL	utils/TeUtilsDefines.h	45;"	d
TL_DLL	kernel/TeDefines.h	245;"	d
TL_DLL	kernel/TeDefines.h	247;"	d
TL_DLL	kernel/TeDefines.h	251;"	d
TListaVizinho	stat/lista.cpp	/^TListaVizinho::TListaVizinho(){$/;"	f	class:TListaVizinho
TListaVizinho	stat/lista.h	/^class STAT_DLL TListaVizinho{$/;"	c
TMODULO_INT64	drivers/PostgreSQL/TePGInterface.cpp	229;"	d	file:
TOKEN	drivers/SQLite/sqlite3/sqlite3.c	109160;"	d	file:
TOTAL_ATTRIBUTES	image_processing/TePDIEMClas.hpp	/^      int N, TOTAL_ATTRIBUTES;$/;"	m	class:TePDIEMClas
TPB	drivers/Firebird/ibpp/core/_ibpp.h	/^	TPB() : mBuffer(0), mSize(0), mAlloc(0) { }$/;"	f	class:ibpp_internals::TPB
TPB	drivers/Firebird/ibpp/core/_ibpp.h	/^class TPB$/;"	c	namespace:ibpp_internals
TPDataNode	kernel/TeGeometricTransformation.h	/^          TPDataNode( const TPDataNode& other )$/;"	f	class:TeGeometricTransformation::TPDataNode
TPDataNode	kernel/TeGeometricTransformation.h	/^          TPDataNode()$/;"	f	class:TeGeometricTransformation::TPDataNode
TPDataNode	kernel/TeGeometricTransformation.h	/^      class TPDataNode$/;"	c	class:TeGeometricTransformation
TParticao	stat/TeSkaterFunctions.cpp	/^TParticao::TParticao(TSkaterGrafo *G){$/;"	f	class:TParticao
TParticao	stat/TeSkaterFunctions.h	/^class STAT_DLL TParticao{$/;"	c
TRACE	drivers/SQLite/sqlite3/sqlite3.c	48110;"	d	file:
TRACE_IDX_INPUTS	drivers/SQLite/sqlite3/sqlite3.c	/^static void TRACE_IDX_INPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_INPUTS	drivers/SQLite/sqlite3/sqlite3.c	102485;"	d	file:
TRACE_IDX_OUTPUTS	drivers/SQLite/sqlite3/sqlite3.c	/^static void TRACE_IDX_OUTPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_OUTPUTS	drivers/SQLite/sqlite3/sqlite3.c	102486;"	d	file:
TRANS_NONE	drivers/SQLite/sqlite3/sqlite3.c	47525;"	d	file:
TRANS_READ	drivers/SQLite/sqlite3/sqlite3.c	47526;"	d	file:
TRANS_WRITE	drivers/SQLite/sqlite3/sqlite3.c	47527;"	d	file:
TRIANGLE	kernel/TeGraph.cpp	57;"	d	file:
TRIGGER_AFTER	drivers/SQLite/sqlite3/sqlite3.c	11032;"	d	file:
TRIGGER_BEFORE	drivers/SQLite/sqlite3/sqlite3.c	11031;"	d	file:
TRUE	drivers/Oracle/OCI/include/oratypes.h	27;"	d
TSEntry_	kernel/TeQuerierDBStr2.h	/^	TeTSEntry		TSEntry_;$/;"	m	class:TeQuerierDBStr2
TSEntry_	kernel/TeQuerierDBStr3.h	/^	TeTSEntry		TSEntry_;$/;"	m	class:TeQuerierDBStr3
TSkaterGrafo	stat/TeSkaterGrafo.cpp	/^TSkaterGrafo::TSkaterGrafo(bool hasPop){$/;"	f	class:TSkaterGrafo
TSkaterGrafo	stat/TeSkaterGrafo.h	/^class STAT_DLL TSkaterGrafo {$/;"	c
TSparams_	kernel/TeTemporalSeries.h	/^	TeTSParams			TSparams_; $/;"	m	class:TeTemporalSeries
TTR	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TTR {trSharedWrite, trSharedRead, trProtectedWrite, trProtectedRead};$/;"	g	namespace:IBPP
TWOPOWER31	drivers/SQLite/sqlite3/sqlite3.c	21756;"	d	file:
TWOPOWER32	drivers/SQLite/sqlite3/sqlite3.c	21755;"	d	file:
TYPEATTR_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        TYPEATTR_ATTR_COUNT = 14,$/;"	e	enum:oracle::occi::MetaData::AttrCount
TYPEENCAP_PRIVATE	drivers/Oracle/OCI/include/occiControl.h	/^          ,TYPEENCAP_PRIVATE = OCI_TYPEENCAP_PRIVATE$/;"	e	enum:oracle::occi::MetaData::__anon89
TYPEENCAP_PUBLIC	drivers/Oracle/OCI/include/occiControl.h	/^          ,TYPEENCAP_PUBLIC = OCI_TYPEENCAP_PUBLIC$/;"	e	enum:oracle::occi::MetaData::__anon89
TYPEMTHD_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        TYPEMTHD_ATTR_COUNT = 16,$/;"	e	enum:oracle::occi::MetaData::AttrCount
TYPEPARAM_IN	drivers/Oracle/OCI/include/occiControl.h	/^          ,TYPEPARAM_IN = OCI_TYPEPARAM_IN$/;"	e	enum:oracle::occi::MetaData::__anon89
TYPEPARAM_INOUT	drivers/Oracle/OCI/include/occiControl.h	/^          ,TYPEPARAM_INOUT = OCI_TYPEPARAM_INOUT$/;"	e	enum:oracle::occi::MetaData::__anon89
TYPEPARAM_OUT	drivers/Oracle/OCI/include/occiControl.h	/^          ,TYPEPARAM_OUT = OCI_TYPEPARAM_OUT$/;"	e	enum:oracle::occi::MetaData::__anon89
TYPE_OWNER	drivers/Oracle/TeOCICursor.h	38;"	d
TYP_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        TYP_ATTR_COUNT = 27, $/;"	e	enum:oracle::occi::MetaData::AttrCount
TabResult	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct TabResult {$/;"	s	file:
TabResult	drivers/SQLite/sqlite3/sqlite3.c	/^} TabResult;$/;"	t	typeref:struct:TabResult	file:
Table	drivers/SQLite/sqlite3/sqlite3.c	/^struct Table {$/;"	s	file:
Table	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Table Table;$/;"	t	typeref:struct:Table	file:
TableLock	drivers/SQLite/sqlite3/sqlite3.c	/^struct TableLock {$/;"	s	file:
TableLock	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct TableLock TableLock;$/;"	t	typeref:struct:TableLock	file:
TableName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd TableName;$/;"	m	struct:ODCIArgDesc_ind
TableName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd TableName;$/;"	m	struct:ODCIColInfo_ind
TableName	drivers/Oracle/OCI/include/odci.h	/^   OCIInd TableName;$/;"	m	struct:ODCIExtTableInfo_ind
TableName	drivers/Oracle/OCI/include/odci.h	/^   OCIString*       TableName;$/;"	m	struct:ODCIExtTableInfo
TableName	drivers/Oracle/OCI/include/odci.h	/^   OCIString* TableName;$/;"	m	struct:ODCIArgDesc
TableName	drivers/Oracle/OCI/include/odci.h	/^   OCIString* TableName;$/;"	m	struct:ODCIColInfo
TableObjNo	drivers/Oracle/OCI/include/odci.h	/^   OCIInd TableObjNo;$/;"	m	struct:ODCIExtTableInfo_ind
TableObjNo	drivers/Oracle/OCI/include/odci.h	/^   OCINumber        TableObjNo;$/;"	m	struct:ODCIExtTableInfo
TablePartition	drivers/Oracle/OCI/include/odci.h	/^   OCIInd TablePartition;$/;"	m	struct:ODCIColInfo_ind
TablePartition	drivers/Oracle/OCI/include/odci.h	/^   OCIInd TablePartition;$/;"	m	struct:ODCIPartInfo_ind
TablePartition	drivers/Oracle/OCI/include/odci.h	/^   OCIString* TablePartition;$/;"	m	struct:ODCIColInfo
TablePartition	drivers/Oracle/OCI/include/odci.h	/^   OCIString* TablePartition;$/;"	m	struct:ODCIPartInfo
TablePartitionLower	drivers/Oracle/OCI/include/odci.h	/^   OCIInd TablePartitionLower;$/;"	m	struct:ODCIArgDesc_ind
TablePartitionLower	drivers/Oracle/OCI/include/odci.h	/^   OCIString* TablePartitionLower;$/;"	m	struct:ODCIArgDesc
TablePartitionUpper	drivers/Oracle/OCI/include/odci.h	/^   OCIInd TablePartitionUpper;$/;"	m	struct:ODCIArgDesc_ind
TablePartitionUpper	drivers/Oracle/OCI/include/odci.h	/^   OCIString* TablePartitionUpper;$/;"	m	struct:ODCIArgDesc
TableSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIInd TableSchema;$/;"	m	struct:ODCIArgDesc_ind
TableSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIInd TableSchema;$/;"	m	struct:ODCIColInfo_ind
TableSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIInd TableSchema;$/;"	m	struct:ODCIExtTableInfo_ind
TableSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIString*       TableSchema;$/;"	m	struct:ODCIExtTableInfo
TableSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIString* TableSchema;$/;"	m	struct:ODCIArgDesc
TableSchema	drivers/Oracle/OCI/include/odci.h	/^   OCIString* TableSchema;$/;"	m	struct:ODCIColInfo
Tail	stat/filaDouble.h	/^      Item_ptr Tail;$/;"	m	struct:TFilaDouble::Fila
Tail	stat/filaInt.h	/^      Item_ptr Tail;$/;"	m	struct:TFilaInt::Fila
Te2Area	kernel/TeGeometryAlgorithms.cpp	/^double Te2Area(const TeLinearRing& r)$/;"	f
Te2PgGeomPolygon	drivers/PostgreSQL/TePGUtils.cpp	/^void Te2PgGeomPolygon(const TeLine2D& l, string& strPolygon)$/;"	f
Te2String	kernel/TeUtils.cpp	/^Te2String ( const double value )$/;"	f
Te2String	kernel/TeUtils.cpp	/^Te2String ( const double value, int precision )$/;"	f
Te2String	kernel/TeUtils.cpp	/^Te2String ( const int value )$/;"	f
Te2String	kernel/TeUtils.cpp	/^Te2String ( const long long int value )$/;"	f
Te2String	kernel/TeUtils.cpp	/^Te2String ( const long value )$/;"	f
Te2String	kernel/TeUtils.cpp	/^Te2String ( const unsigned int value )$/;"	f
Te2String	kernel/TeUtils.cpp	/^Te2String ( const unsigned long value )$/;"	f
Te2ndDegPolynomialGT	kernel/Te2ndDegPolynomialGT.cpp	/^Te2ndDegPolynomialGT::Te2ndDegPolynomialGT()$/;"	f	class:Te2ndDegPolynomialGT
Te2ndDegPolynomialGT	kernel/Te2ndDegPolynomialGT.h	/^  class TL_DLL Te2ndDegPolynomialGT : public TeGeometricTransformation {$/;"	c
Te2ndDegPolynomialGTFactory	kernel/Te2ndDegPolynomialGTFactory.cpp	/^Te2ndDegPolynomialGTFactory::Te2ndDegPolynomialGTFactory()$/;"	f	class:Te2ndDegPolynomialGTFactory
Te2ndDegPolynomialGTFactory	kernel/Te2ndDegPolynomialGTFactory.h	/^  class TL_DLL Te2ndDegPolynomialGTFactory : public TeGTFactory$/;"	c
Te2ndDegPolynomialGTFactory_instance	kernel/Te2ndDegPolynomialGTFactory.h	/^    static Te2ndDegPolynomialGTFactory Te2ndDegPolynomialGTFactory_instance;$/;"	m	namespace:__anon35
Te3rdDegPolynomialGT	kernel/Te3rdDegPolynomialGT.cpp	/^Te3rdDegPolynomialGT::Te3rdDegPolynomialGT()$/;"	f	class:Te3rdDegPolynomialGT
Te3rdDegPolynomialGT	kernel/Te3rdDegPolynomialGT.h	/^  class TL_DLL Te3rdDegPolynomialGT : public TeGeometricTransformation {$/;"	c
Te3rdDegPolynomialGTFactory	kernel/Te3rdDegPolynomialGTFactory.cpp	/^Te3rdDegPolynomialGTFactory::Te3rdDegPolynomialGTFactory()$/;"	f	class:Te3rdDegPolynomialGTFactory
Te3rdDegPolynomialGTFactory	kernel/Te3rdDegPolynomialGTFactory.h	/^  class TL_DLL Te3rdDegPolynomialGTFactory : public TeGTFactory$/;"	c
Te3rdDegPolynomialGTFactory_instance	kernel/Te3rdDegPolynomialGTFactory.h	/^    static Te3rdDegPolynomialGTFactory Te3rdDegPolynomialGTFactory_instance;$/;"	m	namespace:__anon26
TeAMPLITUDE	kernel/TeDataTypes.h	/^	TeMEAN, TeVARIANCE, TeSKEWNESS, TeKURTOSIS, TeAMPLITUDE, TeMEDIAN, TeVARCOEFF, TeMODE};$/;"	e	enum:TeStatisticType
TeAND	kernel/TeDataTypes.h	/^enum TeLogicalOperator { TeAND = 1, TeOR = 2 };$/;"	e	enum:TeLogicalOperator
TeARCS	kernel/TeDataTypes.h	/^	TeARCS = 32, TeNODES = 64  , TeTEXT = 128, TeCELLS = 256 , TeRASTER = 512,$/;"	e	enum:TeGeomRep
TeATTRDYN	kernel/TeTemporalSeries.h	/^enum TeTSType  { TeATTRDYN, TeATTRDYNGROUP, TeEVENT, TeATTREVENT};$/;"	e	enum:TeTSType
TeATTRDYNGROUP	kernel/TeTemporalSeries.h	/^enum TeTSType  { TeATTRDYN, TeATTRDYNGROUP, TeEVENT, TeATTREVENT};$/;"	e	enum:TeTSType
TeATTREVENT	kernel/TeTemporalSeries.h	/^enum TeTSType  { TeATTRDYN, TeATTRDYNGROUP, TeEVENT, TeATTREVENT};$/;"	e	enum:TeTSType
TeAT_ENDPOINT	kernel/TeDefines.h	206;"	d
TeAbsDifference	stat/TeKernelParams.h	/^{TeKRatio, TeKLogRatio, TeAbsDifference, TeRelDifference, TeAbsSum, TeRelSum};$/;"	e	enum:TeKernelCombinationType
TeAbsSum	stat/TeKernelParams.h	/^{TeKRatio, TeKLogRatio, TeAbsDifference, TeRelDifference, TeAbsSum, TeRelSum};$/;"	e	enum:TeKernelCombinationType
TeAbstractAddressNotifyFunctor	functions/TeAddressLocator.h	/^class TLFUNCTIONS_DLL TeAbstractAddressNotifyFunctor$/;"	c
TeAbstractFactory	kernel/TeAbstractFactory.h	/^   TeAbstractFactory(PRODUCTIDTYPE prodId):$/;"	f	class:TeAbstractFactory
TeAbstractFactory	kernel/TeAbstractFactory.h	/^class \/*TL_DLL*\/ TeAbstractFactory$/;"	c
TeAbstractTheme	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme::TeAbstractTheme (const TeAbstractTheme& other) : $/;"	f	class:TeAbstractTheme
TeAbstractTheme	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme::TeAbstractTheme(const TeViewNodeParams& params) : $/;"	f	class:TeAbstractTheme
TeAbstractTheme	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme::TeAbstractTheme(const string& name, TeViewNode* parent, const int& view, const int& id, const TeViewNodeType& nodeType)$/;"	f	class:TeAbstractTheme
TeAbstractTheme	kernel/TeAbstractTheme.h	/^class TL_DLL TeAbstractTheme: public TeViewNode$/;"	c
TeAdaptativeKdTree	kernel/TeKdTree.h	/^		TeAdaptativeKdTree(const TeBox& box, const unsigned int& bucketSize = 12)$/;"	f	class:TeSAM::TeAdaptativeKdTree
TeAdaptativeKdTree	kernel/TeKdTree.h	/^class TeAdaptativeKdTree : public TeBasicKdTree<KdTreeNode>$/;"	c	namespace:TeSAM
TeAdaptativeKdTreeNode	kernel/TeKdTree.h	/^		TeAdaptativeKdTreeNode(const double& k)$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
TeAdaptativeKdTreeNode	kernel/TeKdTree.h	/^class TeAdaptativeKdTreeNode$/;"	c	namespace:TeSAM
TeAddPoint	kernel/TeFragmentation.cpp	/^void TeAddPoint(TeLine2D& lFrag, TeLine2D& currentLine, TeINTERSECTOR2::TeVectorBoundaryIP& ipsAux, const unsigned int& j)$/;"	f
TeAddress	functions/TeAddressLocator.h	/^struct TLFUNCTIONS_DLL TeAddress$/;"	s
TeAddressDescription	functions/TeAddressLocator.h	/^	TeAddressDescription()$/;"	f	struct:TeAddressDescription
TeAddressDescription	functions/TeAddressLocator.h	/^struct TLFUNCTIONS_DLL TeAddressDescription$/;"	s
TeAddressLocator	functions/TeAddressLocator.h	/^		TeAddressLocator(TeDatabase* db)$/;"	f	class:TeAddressLocator
TeAddressLocator	functions/TeAddressLocator.h	/^class TLFUNCTIONS_DLL TeAddressLocator$/;"	c
TeAddressMetadata	functions/TeAddressLocator.h	/^struct TLFUNCTIONS_DLL TeAddressMetadata$/;"	s
TeAdjacencyStrategy	kernel/TeDataTypes.h	/^enum TeGPMConstructionStrategy { TeAdjacencyStrategy, TeDistanceStrategy, TeNearestNeighboursStrategy,$/;"	e	enum:TeGPMConstructionStrategy
TeAdjustSegment	kernel/TeGeometryAlgorithms.cpp	/^bool TeAdjustSegment(TeCoord2D P0, TeCoord2D P1, double d0, TeCoord2D &P0out, TeCoord2D &P1out)$/;"	f
TeAdjustToPrecision	kernel/TeUtils.cpp	/^double TeAdjustToPrecision(double val, int precision, bool reduce)$/;"	f
TeAdo	drivers/ado/TeAdoDB.cpp	/^TeAdo::TeAdo()$/;"	f	class:TeAdo
TeAdo	drivers/ado/TeAdoDB.h	/^class  TLADO_DLL  TeAdo : public TeDatabase$/;"	c
TeAdoFactory	drivers/ado/TeAdoDB.h	/^    TeAdoFactory() : TeDatabaseFactory( std::string( "Ado" ) ) {};      $/;"	f	class:TeAdoFactory
TeAdoFactory	drivers/ado/TeAdoDB.h	/^class TLADO_DLL TeAdoFactory : public TeDatabaseFactory$/;"	c
TeAdoFactory_instance	drivers/ado/TeAdoDB.h	/^  static TeAdoFactory TeAdoFactory_instance;$/;"	m	namespace:__anon70
TeAdoPortal	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::TeAdoPortal ( TeDatabase*  pDatabase)$/;"	f	class:TeAdoPortal
TeAdoPortal	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::TeAdoPortal ()$/;"	f	class:TeAdoPortal
TeAdoPortal	drivers/ado/TeAdoDB.h	/^class  TLADO_DLL  TeAdoPortal : public TeDatabasePortal$/;"	c
TeAdressNotifyFunctorWindow	drivers/qt/TeAddressNotifyFunctorWindow.h	/^		TeAdressNotifyFunctorWindow(QDialog* w, const bool& selectAllVisible = true)$/;"	f	class:TeAdressNotifyFunctorWindow
TeAdressNotifyFunctorWindow	drivers/qt/TeAddressNotifyFunctorWindow.h	/^class TeAdressNotifyFunctorWindow : public TeAbstractAddressNotifyFunctor$/;"	c
TeAffineGT	kernel/TeAffineGT.cpp	/^TeAffineGT::TeAffineGT()$/;"	f	class:TeAffineGT
TeAffineGT	kernel/TeAffineGT.h	/^  class TL_DLL TeAffineGT : public TeGeometricTransformation {$/;"	c
TeAffineGTFactory	kernel/TeAffineGTFactory.cpp	/^TeAffineGTFactory::TeAffineGTFactory()$/;"	f	class:TeAffineGTFactory
TeAffineGTFactory	kernel/TeAffineGTFactory.h	/^  class TL_DLL TeAffineGTFactory : public TeGTFactory$/;"	c
TeAffineGTFactory_instance	kernel/TeAffineGTFactory.h	/^    static TeAffineGTFactory TeAffineGTFactory_instance;$/;"	m	namespace:__anon29
TeAgnostic	kernel/TeAgnostic.cpp	/^namespace TeAgnostic{$/;"	n	file:
TeAgnostic	kernel/TeAgnostic.h	/^  namespace TeAgnostic{$/;"	n
TeAlbers	kernel/TeProjection.h	/^	TeAlbers( const TeDatum& datum, $/;"	f	class:TeAlbers
TeAlbers	kernel/TeProjection.h	/^class TL_DLL TeAlbers : public TeProjection$/;"	c
TeAll	kernel/TeDataTypes.h	/^{	TeAll, TeSelectedByPointing, TeNotSelectedByPointing, TeSelectedByQuery, TeNotSelectedByQuery,$/;"	e	enum:TeSelectedObjects
TeAllAttrTypes	kernel/TeDataTypes.h	/^{	TeAllAttrTypes, TeAttrStatic, TeAttrMedia, TeAttrExternal, TeAttrEvent, TeFixedGeomDynAttr, $/;"	e	enum:TeAttrTableType
TeAllocRAMRaster	image_processing/TePDIUtils.cpp	/^  bool TeAllocRAMRaster( TePDITypes::TePDIRasterPtrType& RAMRaster,$/;"	f	namespace:TePDIUtils
TeAllocRAMRaster	image_processing/TePDIUtils.cpp	/^  bool TeAllocRAMRaster( const TeRasterParams& params,$/;"	f	namespace:TePDIUtils
TeAllocRAMRaster	image_processing/TePDIUtils.cpp	/^  bool TeAllocRAMRaster($/;"	f	namespace:TePDIUtils
TeAppTheme	drivers/qt/TeAppTheme.cpp	/^TeAppTheme::TeAppTheme(TeAbstractTheme* theme) :$/;"	f	class:TeAppTheme
TeAppTheme	drivers/qt/TeAppTheme.cpp	/^TeAppTheme::TeAppTheme(const TeAppTheme& other)$/;"	f	class:TeAppTheme
TeAppTheme	drivers/qt/TeAppTheme.h	/^class TL_DLL TeAppTheme$/;"	c
TeArc	kernel/TeGeometry.h	/^	TeArc(): ifrom_ (-1), ito_ (-1){}$/;"	f	class:TeArc
TeArc	kernel/TeGeometry.h	/^	TeArc(TeNode& from, TeNode& to)$/;"	f	class:TeArc
TeArc	kernel/TeGeometry.h	/^	TeArc(int from, int to): ifrom_ (from), ito_ (to) {}$/;"	f	class:TeArc
TeArc	kernel/TeGeometry.h	/^class TL_DLL TeArc : public TeVector $/;"	c
TeArcSet	kernel/TeGeometry.h	/^class TL_DLL TeArcSet: public TeGeomComposite <TeArc> $/;"	c
TeAreaUnits	kernel/TeDataTypes.h	/^enum TeAreaUnits { TeUndefinedAreaUnit, TeSquareMeters, TeSquareKilometers, TeHectares, TeSquareMillimeters, TeSquareCentimeters, TeSquareMiles, TeSquareInches, TeSquareFeet,};$/;"	g
TeAsciiFile	kernel/TeAsciiFile.cpp	/^TeAsciiFile::TeAsciiFile ( const string& name, const char* mode ): 	$/;"	f	class:TeAsciiFile
TeAsciiFile	kernel/TeAsciiFile.h	/^class TL_DLL TeAsciiFile: public TeStdFile {$/;"	c
TeAssertions_H	kernel/TeAssertions.h	28;"	d
TeAttrDataType	kernel/TeDataTypes.h	/^enum TeAttrDataType $/;"	g
TeAttrEvent	kernel/TeDataTypes.h	/^{	TeAllAttrTypes, TeAttrStatic, TeAttrMedia, TeAttrExternal, TeAttrEvent, TeFixedGeomDynAttr, $/;"	e	enum:TeAttrTableType
TeAttrExternal	kernel/TeDataTypes.h	/^{	TeAllAttrTypes, TeAttrStatic, TeAttrMedia, TeAttrExternal, TeAttrEvent, TeFixedGeomDynAttr, $/;"	e	enum:TeAttrTableType
TeAttrMedia	kernel/TeDataTypes.h	/^{	TeAllAttrTypes, TeAttrStatic, TeAttrMedia, TeAttrExternal, TeAttrEvent, TeFixedGeomDynAttr, $/;"	e	enum:TeAttrTableType
TeAttrStatic	kernel/TeDataTypes.h	/^{	TeAllAttrTypes, TeAttrStatic, TeAttrMedia, TeAttrExternal, TeAttrEvent, TeFixedGeomDynAttr, $/;"	e	enum:TeAttrTableType
TeAttrTableType	kernel/TeDataTypes.h	/^enum TeAttrTableType$/;"	g
TeAttrTableVector	kernel/TeTable.h	/^typedef vector<TeTable> TeAttrTableVector;$/;"	t
TeAttribute	kernel/TeAttribute.h	/^	TeAttribute():$/;"	f	struct:TeAttribute
TeAttribute	kernel/TeAttribute.h	/^struct TL_DLL TeAttribute$/;"	s
TeAttributeList	kernel/TeAttribute.h	/^typedef vector<TeAttribute>		TeAttributeList;$/;"	t
TeAttributeRep	kernel/TeAttribute.h	/^	TeAttributeRep():$/;"	f	struct:TeAttributeRep
TeAttributeRep	kernel/TeAttribute.h	/^	TeAttributeRep(const string& name):$/;"	f	struct:TeAttributeRep
TeAttributeRep	kernel/TeAttribute.h	/^struct TL_DLL TeAttributeRep$/;"	s
TeAttributeRepList	kernel/TeAttribute.h	/^typedef vector<TeAttributeRep>  TeAttributeRepList;$/;"	t
TeAvMultiRes	kernel/TeImportRaster.cpp	/^TeRaster* TeAvMultiRes(TeRaster* rasterIn, TeDatabase* db)$/;"	f
TeAverageStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeAverageStrategy (double dummyV = 0.0, double defaultV = 0.0) {this->defaultValue_.value_ = Te2String (defaultV); dummy = dummyV; }$/;"	f	class:TeAverageStrategy
TeAverageStrategy	kernel/TeComputeAttributeStrategies.h	/^class TeAverageStrategy: public TeComputeAttrStrategy<Iterator>  $/;"	c
TeAverageWeighByAreaStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeAverageWeighByAreaStrategy  (TeTheme* theme_, string att_, TeGeomRep rep_) : TeComputeSpatialStrategy(theme_, rep_) { attribute = att_; }$/;"	f	class:TeAverageWeighByAreaStrategy
TeAverageWeighByAreaStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeAverageWeighByAreaStrategy: public TeComputeSpatialStrategy $/;"	c
TeAvgInBoxInterpolation	functions/TeInterpolation.h	/^                                TeAvgInBoxInterpolation, TeDistWeightAvgInBoxInterpolation };$/;"	e	enum:TeInterpolationAlgorithm
TeAvgInterpolation	functions/TeInterpolation.h	/^enum TeInterpolationAlgorithm { TeNNInterpolation, TeAvgInterpolation, TeDistWeightAvgInterpolation,$/;"	e	enum:TeInterpolationAlgorithm
TeBBoxPixelInters	kernel/TeRaster.h	/^	TeBBoxPixelInters,		\/\/!< bounding box of pixel intercepts the geometry$/;"	e	enum:TeStrategicIterator
TeBBoxPixelNotInters	kernel/TeRaster.h	/^	TeBBoxPixelNotInters	\/\/!< bounding box of pixel do not intercept the geometry$/;"	e	enum:TeStrategicIterator
TeBIDIRECTIONAL	kernel/TeDatabase.h	/^enum TeCursorType { TeUNIDIRECTIONAL, TeBIDIRECTIONAL, TeRANDOMACCESS };$/;"	e	enum:TeCursorType
TeBINARYCURSOR	kernel/TeDatabase.h	/^enum TeCursorDataType { TeBINARYCURSOR, TeTEXTCURSOR };$/;"	e	enum:TeCursorDataType
TeBIT	kernel/TeDataTypes.h	/^{	TeBIT, TeUNSIGNEDCHAR, TeCHAR, TeUNSIGNEDSHORT, TeSHORT, TeINTEGER, TeUNSIGNEDLONG, TeLONG, TeFLOAT, TeDOUBLE };$/;"	e	enum:TeDataType
TeBLACKNODE	kernel/TeRedBlackTree.h	/^	enum TeRBNodeColor { TeREDNODE, TeBLACKNODE };$/;"	e	enum:TeREDBLACK::TeRBNodeColor
TeBLOB	kernel/TeDataTypes.h	/^{TeSTRING, TeREAL, TeINT, TeDATETIME, TeBLOB, TeOBJECT, TeCHARACTER, TeUNKNOWN, TeUNSIGNEDINT,$/;"	e	enum:TeAttrDataType
TeBLUECHANNEL	kernel/TeRasterTransform.h	/^	enum TeRGBChannels { TeREDCHANNEL=0, TeGREENCHANNEL=1, TeBLUECHANNEL=2 };$/;"	e	enum:TeRasterTransform::TeRGBChannels
TeBNALineDecode	functions/TeImportBNA.cpp	/^bool TeBNALineDecode(TeAsciiFile& bnaFile, TeLineSet& temp, string& index, const int& npoints)$/;"	f
TeBNAPointDecode	functions/TeImportBNA.cpp	/^bool TeBNAPointDecode(TeAsciiFile& bnaFile, TePointSet& temp, string& index)$/;"	f
TeBNARegionDecode	functions/TeImportBNA.cpp	/^bool TeBNARegionDecode(TeAsciiFile& bnaFile, TePolygonSet& temp, string& index, const int& npoints)$/;"	f
TeBOOLEAN	kernel/TeDataTypes.h	/^ TeRASTERTYPE, TeBOOLEAN};$/;"	e	enum:TeAttrDataType
TeBOUNDARY	kernel/TeDefines.h	177;"	d
TeBOUNDARYBOUNDARY	kernel/TeDefines.h	193;"	d
TeBOUNDARYEXTERIOR	kernel/TeDefines.h	194;"	d
TeBOUNDARYINTERIOR	kernel/TeDefines.h	192;"	d
TeBUFFERREGION	kernel/TeBufferRegion.cpp	/^namespace TeBUFFERREGION$/;"	n	file:
TeBUFFERREGION	kernel/TeBufferRegion.h	/^namespace TeBUFFERREGION$/;"	n
TeBand2Band	kernel/TeRasterTransform.h	/^	{	TeNoTransf=0, TeMono2Three=1, TeBand2Band=2, TePall2Three=3, TeLUT2Three=4, $/;"	e	enum:TeRasterTransform::TeRasterTransfFunctions
TeBarChart	kernel/TeDataTypes.h	/^{   TeBarChart, TePieChart };$/;"	e	enum:TeChartType
TeBaseSTInstance	kernel/TeBaseSTInstance.h	/^	TeBaseSTInstance (const string& object_id, const GeometryType& geometries, const TimeType& time, $/;"	f	class:TeBaseSTInstance
TeBaseSTInstance	kernel/TeBaseSTInstance.h	/^	TeBaseSTInstance (const string& object_id, const vector<string>& prop, TeAttributeList* attList = 0, const int& s = -1) : $/;"	f	class:TeBaseSTInstance
TeBaseSTInstance	kernel/TeBaseSTInstance.h	/^	TeBaseSTInstance (const string& object_id, const vector<string>& prop, TeAttributeList* attList,$/;"	f	class:TeBaseSTInstance
TeBaseSTInstance	kernel/TeBaseSTInstance.h	/^	TeBaseSTInstance() : object_id_(""), slice_(-1), attrList_(0)$/;"	f	class:TeBaseSTInstance
TeBaseSTInstance	kernel/TeBaseSTInstance.h	/^class TeBaseSTInstance$/;"	c
TeBaseSTInstanceSet	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::TeBaseSTInstanceSet() :$/;"	f	class:TeBaseSTInstanceSet
TeBaseSTInstanceSet	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::TeBaseSTInstanceSet(TeLayer* layer, const TeAttributeList& attrList) $/;"	f	class:TeBaseSTInstanceSet
TeBaseSTInstanceSet	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::TeBaseSTInstanceSet(TeTheme* theme, const TeAttributeList& attrList) $/;"	f	class:TeBaseSTInstanceSet
TeBaseSTInstanceSet	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::TeBaseSTInstanceSet(const TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>& other) $/;"	f	class:TeBaseSTInstanceSet
TeBaseSTInstanceSet	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::TeBaseSTInstanceSet(const TeBox& box, const TeAttributeList& attrList)$/;"	f	class:TeBaseSTInstanceSet
TeBaseSTInstanceSet	kernel/TeBaseSTInstanceSet.h	/^class TeBaseSTInstanceSet  $/;"	c
TeBaseVisualParams	kernel/TeVisual.cpp	/^TeBaseVisualParams::TeBaseVisualParams(TeGeomRep rep, const string& visualType) :$/;"	f	class:TeBaseVisualParams
TeBaseVisualParams	kernel/TeVisual.cpp	/^TeBaseVisualParams::TeBaseVisualParams(const TeBaseVisualParams& other)$/;"	f	class:TeBaseVisualParams
TeBaseVisualParams	kernel/TeVisual.h	/^class TL_DLL TeBaseVisualParams$/;"	c
TeBasicKdTree	kernel/TeKdTree.h	/^		TeBasicKdTree(const TeBox& mbr)$/;"	f	class:TeSAM::TeBasicKdTree
TeBasicKdTree	kernel/TeKdTree.h	/^class TeBasicKdTree$/;"	c	namespace:TeSAM
TeBentleyOttman	kernel/TeDataTypes.h	/^enum TeIntersectorAlgorithm { TeBentleyOttman, TeRedBlue, TeTrivial };$/;"	e	enum:TeIntersectorAlgorithm
TeBlockIndex	kernel/TeDecoderVirtualMemory.h	/^	TeBlockIndex()$/;"	f	class:TeBlockIndex
TeBlockIndex	kernel/TeDecoderVirtualMemory.h	/^class TL_DLL TeBlockIndex{$/;"	c
TeBlockIndexMapFunc	kernel/TeDecoderVirtualMemory.h	/^	struct TeBlockIndexMapFunc$/;"	s	class:TeDecoderVirtualMemory
TeBlockLoader	kernel/TeBlockLoader.cpp	/^TeBlockLoader::TeBlockLoader(const TeBlockLoaderParams& params)$/;"	f	class:TeBlockLoader
TeBlockLoader	kernel/TeBlockLoader.h	/^class TL_DLL TeBlockLoader$/;"	c
TeBlockLoaderParams	kernel/TeBlockLoader.h	/^} TeBlockLoaderParams;$/;"	t	typeref:struct:__anon30
TeBoundaryIP	kernel/TeIntersector.h	/^struct TL_DLL TeBoundaryIP$/;"	s	namespace:TeINTERSECTOR2
TeBox	kernel/TeBox.h	/^	TeBox ( const TeBox& rhs )$/;"	f	struct:TeBox
TeBox	kernel/TeBox.h	/^	TeBox ( const double& x1 = TeMAXFLOAT, const double y1 = TeMAXFLOAT,$/;"	f	struct:TeBox
TeBox	kernel/TeBox.h	/^	TeBox( const TeCoord2D& p1, const TeCoord2D& p2 ):$/;"	f	struct:TeBox
TeBox	kernel/TeBox.h	/^struct TL_DLL TeBox {$/;"	s
TeBoxCorner	kernel/TeBox.h	/^	enum TeBoxCorner { TeLOWERLEFT=0, TeUPPERLEFT=1, TeLOWERRIGHT=2, TeUPPERRIGHT=3 };$/;"	g	struct:TeBox
TeBoxIntersectionPredicate	kernel/TeCoverageDecoderCacheLRU.h	/^    TeBoxIntersectionPredicate(const TeBox& box, std::set<int>& dontSelect):$/;"	f	struct:TeBoxIntersectionPredicate
TeBoxIntersectionPredicate	kernel/TeCoverageDecoderCacheLRU.h	/^struct TeBoxIntersectionPredicate$/;"	s
TeBoxMap	stat/TeSpatialStatistics.h	/^TeBoxMap (Set* elemSet, int indexZ, int indexWZ, double mean)$/;"	f
TeBoxPixelIn	kernel/TeRaster.h	/^{	TeBoxPixelIn,			\/\/!< center of pixel is inside the geometry$/;"	e	enum:TeStrategicIterator
TeBoxPixelOut	kernel/TeRaster.h	/^	TeBoxPixelOut,			\/\/!< center of pixel is outside the geometry$/;"	e	enum:TeStrategicIterator
TeBoxRasterIterator	functions/TeCellAlgorithms.cpp	/^TeBoxRasterIterator::TeBoxRasterIterator(TeRaster* raster_, TeBox box) $/;"	f	class:TeBoxRasterIterator
TeBoxRasterIterator	functions/TeCellAlgorithms.h	/^class TLFUNCTIONS_DLL TeBoxRasterIterator$/;"	c
TeBoxToPGBinary	drivers/PostgreSQL/TePGInterface.cpp	/^char* TeBoxToPGBinary(const TeBox &box, unsigned int &size)$/;"	f
TeBufferRegion	kernel/TeBufferRegion.cpp	/^bool  TeBUFFERREGION::TeBufferRegion(const TeCellSet& cellSetIn, const double& bufferDistance, const unsigned int& numPoints, const unsigned int& bufferLevels, const TeBufferType& bufferType, vector<TePolygonSet>& polyVecOut)$/;"	f	class:TeBUFFERREGION
TeBufferRegion	kernel/TeBufferRegion.cpp	/^bool TeBUFFERREGION::TeBufferRegion(const TeCoord2D& coord, const double& bufferDistance, const unsigned int& numPoints, TePolygon& pol)$/;"	f	class:TeBUFFERREGION
TeBufferRegion	kernel/TeBufferRegion.cpp	/^bool TeBUFFERREGION::TeBufferRegion(const TeCoord2D& coord, const double& bufferDistance, const unsigned int& numPoints, const unsigned int& bufferLevels, vector<TePolygon>& bufferPols)$/;"	f	class:TeBUFFERREGION
TeBufferRegion	kernel/TeBufferRegion.cpp	/^bool TeBUFFERREGION::TeBufferRegion(const TeLine2D& line, const double& bufferDistance, const unsigned int& numPoints, TePolygonSet& ps)$/;"	f	class:TeBUFFERREGION
TeBufferRegion	kernel/TeBufferRegion.cpp	/^bool TeBUFFERREGION::TeBufferRegion(const TeLine2D& line, const double& bufferDistance, const unsigned int& numPoints, const unsigned int& bufferLevels, vector<TePolygonSet>& polVec)$/;"	f	class:TeBUFFERREGION
TeBufferRegion	kernel/TeBufferRegion.cpp	/^bool TeBUFFERREGION::TeBufferRegion(const TeLineSet& lineSetIn, const double& bufferDistance, const unsigned int& numPoints, const unsigned int& bufferLevels, vector<TePolygonSet>& polyVecOut)$/;"	f	class:TeBUFFERREGION
TeBufferRegion	kernel/TeBufferRegion.cpp	/^bool TeBUFFERREGION::TeBufferRegion(const TePointSet& pointSetIn, const double& bufferDistance, const unsigned int& numPoints, const unsigned int& bufferLevels, vector<TePolygonSet>& polyVecOut)$/;"	f	class:TeBUFFERREGION
TeBufferRegion	kernel/TeBufferRegion.cpp	/^bool TeBUFFERREGION::TeBufferRegion(const TePolygon& pol, const double& bufferDistance, const unsigned int& numPoints, TePolygonSet& ps)$/;"	f	class:TeBUFFERREGION
TeBufferRegion	kernel/TeBufferRegion.cpp	/^bool TeBUFFERREGION::TeBufferRegion(const TePolygon& pol, const double& bufferDistance, const unsigned int& numPoints, const unsigned int& bufferLevels, const TeBufferType& buffType, vector<TePolygonSet>& polsVec)$/;"	f	class:TeBUFFERREGION
TeBufferRegion	kernel/TeBufferRegion.cpp	/^bool TeBUFFERREGION::TeBufferRegion(const TePolygonSet& polSetIn, const double& bufferDistance, const unsigned int& numPoints, const unsigned int& bufferLevels, const TeBufferType& bufferType, vector<TePolygonSet>& polyVecOut)$/;"	f	class:TeBUFFERREGION
TeBufferType	kernel/TeBufferRegion.h	/^	enum TeBufferType { TeINSIDEBUFFER, TeOUTSIDEBUFFER, TeINSIDEOUTSIDEBUFFER };$/;"	g	namespace:TeBUFFERREGION
TeBuildAverageResolution	kernel/TeImportRaster.cpp	/^bool TeBuildAverageResolution(TeLayer* layer, int maxRes, const string& objectId)$/;"	f
TeBuildKDTree	functions/TeInterpolation.cpp	/^template<class KDTREE> bool TeBuildKDTree(TeTheme* sampleTheme, const string& sampleAttrTableName,$/;"	f
TeBuildLowerResolution	kernel/TeImportRaster.cpp	/^TeBuildLowerResolution(TeLayer* layer, TeRaster* rasterIn, int resFac, const string& objectId)$/;"	f
TeBuildMultiResolutionPyramid	kernel/TeImportRaster.cpp	/^bool TeBuildMultiResolutionPyramid(TeRaster* rst, int nLevels, const bool& showProgress)$/;"	f
TeCCW	kernel/TeIntersector.cpp	/^short TeINTERSECTOR2::TeCCW(const TeCoord2D& c1, const TeCoord2D& c2, const TeCoord2D& c3, bool& between)$/;"	f	class:TeINTERSECTOR2
TeCDR	kernel/TeDefines.h	/^const double	TeCDR =	0.01745329251994329576;		\/\/!< Conversion factor: degrees to radians$/;"	v
TeCELLS	kernel/TeDataTypes.h	/^	TeARCS = 32, TeNODES = 64  , TeTEXT = 128, TeCELLS = 256 , TeRASTER = 512,$/;"	e	enum:TeGeomRep
TeCELLSETTYPE	kernel/TeDataTypes.h	/^ TePOINTSETTYPE, TeLINESETTYPE, TePOLYGONSETTYPE, TeCELLSETTYPE, TeTEXTSETTYPE, TeNODESETTYPE,$/;"	e	enum:TeAttrDataType
TeCELLTYPE	kernel/TeDataTypes.h	/^ TePOINTTYPE, TeLINE2DTYPE, TePOLYGONTYPE, TeCELLTYPE, TeTEXTTYPE, TeNODETYPE,$/;"	e	enum:TeAttrDataType
TeCHAR	kernel/TeDataTypes.h	/^{	TeBIT, TeUNSIGNEDCHAR, TeCHAR, TeUNSIGNEDSHORT, TeSHORT, TeINTEGER, TeUNSIGNEDLONG, TeLONG, TeFLOAT, TeDOUBLE };$/;"	e	enum:TeDataType
TeCHARACTER	kernel/TeDataTypes.h	/^{TeSTRING, TeREAL, TeINT, TeDATETIME, TeBLOB, TeOBJECT, TeCHARACTER, TeUNKNOWN, TeUNSIGNEDINT,$/;"	e	enum:TeAttrDataType
TeCLIENTESIDE	kernel/TeDatabase.h	/^enum TeCursorLocation { TeCLIENTESIDE, TeSERVERSIDE };$/;"	e	enum:TeCursorLocation
TeCLOCKWISE	kernel/TeDefines.h	163;"	d
TeCOLLINEAR	kernel/TeDefines.h	162;"	d
TeCOMPILER	kernel/TeDefines.h	85;"	d
TeCOMPILER	kernel/TeDefines.h	87;"	d
TeCOMPILER	kernel/TeDefines.h	89;"	d
TeCOMPILER	kernel/TeDefines.h	91;"	d
TeCOMPILER	kernel/TeDefines.h	93;"	d
TeCOMPILER	kernel/TeDefines.h	95;"	d
TeCOMPILERCODE_BCPLUSPLUS	kernel/TeDefines.h	74;"	d
TeCOMPILERCODE_CODEWARRIOR	kernel/TeDefines.h	78;"	d
TeCOMPILERCODE_GNUC	kernel/TeDefines.h	76;"	d
TeCOMPILERCODE_SUNFORTE7	kernel/TeDefines.h	80;"	d
TeCOMPILERCODE_VCPLUSPLUS	kernel/TeDefines.h	72;"	d
TeCOMPILERCODE_XLC	kernel/TeDefines.h	82;"	d
TeCONTAINS	kernel/TeDataTypes.h	/^	TeOVERLAPS = 16, TeCONTAINS = 32, TeINTERSECTS = 64, TeEQUALS = 128, TeCOVERS = 256,$/;"	e	enum:TeSpatialRelation
TeCONTOURS	kernel/TeDataTypes.h	/^{	TePOLYGONS = 1, TeLINES = 2, TePOINTS = 4, TeSAMPLES = 8, TeCONTOURS = 16,$/;"	e	enum:TeGeomRep
TeCOUNT	kernel/TeDataTypes.h	/^{	TeNOSTATISTIC, TeSUM, TeMAXVALUE, TeMINVALUE, TeCOUNT, TeVALIDCOUNT, TeSTANDARDDEVIATION, TeKERNEL,  $/;"	e	enum:TeStatisticType
TeCOUNTERCLOCKWISE	kernel/TeDefines.h	164;"	d
TeCOVERAGE	kernel/TeDataTypes.h	/^	TeRASTERFILE = 1024, TeGEOMETRYNONE = 2048, TeSHAPEFILE = 4096, TeCOVERAGE = 8192};$/;"	e	enum:TeGeomRep
TeCOVEREDBY	kernel/TeDataTypes.h	/^	TeCOVEREDBY = 512, TeUNDEFINEDREL = 1024};$/;"	e	enum:TeSpatialRelation
TeCOVERS	kernel/TeDataTypes.h	/^	TeOVERLAPS = 16, TeCONTAINS = 32, TeINTERSECTS = 64, TeEQUALS = 128, TeCOVERS = 256,$/;"	e	enum:TeSpatialRelation
TeCRD	kernel/TeDefines.h	/^const double	TeCRD = 57.29577951308232087679;	\/\/!< Conversion factor: radians to degrees$/;"	v
TeCROSSES	kernel/TeDataTypes.h	/^{	TeDISJOINT = 1, TeTOUCHES = 2, TeCROSSES = 4, TeWITHIN = 8, $/;"	e	enum:TeSpatialRelation
TeCalculateHistogram	kernel/TeStatistics.h	/^bool TeCalculateHistogram(const T& itBegin, const T& itEnd, TeHistogram& histOut)  $/;"	f
TeCalculateMean	kernel/TeImportRaster.cpp	/^TeCalculateMean(TeDecoderMemory* decMem, vector<TeMemoryPage*> pages,int ulColStart,int ulLinStart)$/;"	f
TeCalculateStatistics	kernel/TeStatistics.h	/^bool TeCalculateStatistics(It& itBegin, It& itEnd, TeStatisticsDimensionVect& stat)$/;"	f
TeCalculateStatistics	kernel/TeStatistics.h	/^bool TeCalculateStatistics(It& itBegin, It& itEnd, TeStatisticsDimensionVect& stat, std::vector<double> dummy,const bool &useDummy=true)$/;"	f
TeCalculateStatistics	kernel/TeStatistics.h	/^bool TeCalculateStatistics(const It& itBegin, const It& itEnd, TeStatisticStringValMap& stat, const double &dummy=255, const bool &useDummy=true)$/;"	f
TeCalculateStatistics	kernel/TeStatistics.h	/^bool TeCalculateStatistics(const It& itBegin, const It& itEnd, TeStatisticValMap& stat, const double &dummy=255, const bool &useDummy=true)$/;"	f
TeCalculateStatistics	kernel/TeStatistics.h	/^bool TeCalculateStatistics(const It& itBegin, const It& itEnd, TeStatisticValMap& stat, int dim)$/;"	f
TeCategoryMajorityStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeCategoryMajorityStrategy (TeTheme* theme_, string att_, map<string, string>& classesMap) : TeComputeSpatialStrategy(theme_, TePOLYGONS) $/;"	f	class:TeCategoryMajorityStrategy
TeCategoryMajorityStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeCategoryMajorityStrategy: public TeComputeSpatialStrategy  $/;"	c
TeCategoryPercentageStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeCategoryPercentageStrategy (map<string, string>& classes, double defaultValue = 0.0) $/;"	f	class:TeCategoryPercentageStrategy
TeCategoryPercentageStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeCategoryPercentageStrategy(double defaultValue = 0.0, string dummyV = "")$/;"	f	class:TeCategoryPercentageStrategy
TeCategoryPercentageStrategy	kernel/TeComputeAttributeStrategies.h	/^class TeCategoryPercentageStrategy: public TeComputeAttrStrategy<Iterator>   $/;"	c
TeCell	kernel/TeGeometry.h	/^	TeCell():$/;"	f	class:TeCell
TeCell	kernel/TeGeometry.h	/^	TeCell(TeBox& box, int col, int lin):$/;"	f	class:TeCell
TeCell	kernel/TeGeometry.h	/^class TL_DLL TeCell : public TeVector $/;"	c
TeCellInterpolate	functions/TeInterpolation.cpp	/^bool TeCellInterpolate(TeTheme* inputTheme, const string& inputAttrTableName, const string& sampleColumnName,$/;"	f
TeCellSet	kernel/TeGeometry.h	/^	TeCellSet() : resX_(0.), resY_(0.) $/;"	f	class:TeCellSet
TeCellSet	kernel/TeGeometry.h	/^class TL_DLL TeCellSet: public  TeGeomComposite<TeCell> $/;"	c
TeCellStatistics	functions/TeCellAlgorithms.cpp	/^TeCellStatistics(TeTheme* themeOut, TeTable& newAttrTable, TeGroupingAttr& stat, $/;"	f
TeCentimeters	kernel/TeDataTypes.h	/^enum TeUnits { TeUndefinedUnit, TeMillimeters, TeCentimeters, TeMeters, TeKilometers, TeMiles, TeInches, TeFeet, TeDecimalDegress };$/;"	e	enum:TeUnits
TeCentroidAddressMetadata	functions/TeAddressLocator.h	/^	TeCentroidAddressMetadata()$/;"	f	struct:TeCentroidAddressMetadata
TeCentroidAddressMetadata	functions/TeAddressLocator.h	/^struct TLFUNCTIONS_DLL TeCentroidAddressMetadata$/;"	s
TeCentroidFieldType	functions/TeAddressLocator.h	/^TLFUNCTIONS_DLL enum TeCentroidFieldType { TeNEIGHBORHOOD, TeZIPCODE };$/;"	g
TeChartType	kernel/TeDataTypes.h	/^enum TeChartType$/;"	g
TeCheckBoxConsistency	kernel/TeUtils.cpp	/^ bool TeCheckBoxConsistency(const TeBox& box, TeProjection* boxProjection)$/;"	f
TeCheckFileExistence	kernel/TeUtils.cpp	/^bool TeCheckFileExistence( const std::string& filename )$/;"	f
TeCheckName	kernel/TeUtils.cpp	/^string TeCheckName(const string& name, bool& changed, string& invalidChar)$/;"	f
TeChooseBoundaryLocation	kernel/TeOverlayUtils.cpp	/^void TeOVERLAY::TeChooseBoundaryLocation(const short& operation, short& locationRedFragments, short& locationBlueFragments)$/;"	f	class:TeOVERLAY
TeChronon	kernel/TeDataTypes.h	/^enum TeChronon {	TeNOCHRONON, TeSECOND, TeMINUTE, TeHOUR, TeDAY, TeMONTH, TeYEAR,$/;"	g
TeClassifyRings	kernel/TeOverlayUtils.cpp	/^bool TeOVERLAY::TeClassifyRings(vector<TeLinearRing>& rings, TePolygonSet& polsOut, vector<TeLinearRing>& holes)$/;"	f	class:TeOVERLAY
TeClearViewTree	kernel/TeViewTreeUtils.cpp	/^void TeClearViewTree(TeViewTree* vtree)$/;"	f
TeCloneLine	kernel/TeOverlayUtils.cpp	/^bool TeOVERLAY::TeCloneLine(const TeLine2D& lineIn, TeLine2D& lineOut, const unsigned int& minPts)$/;"	f	class:TeOVERLAY
TeClonePolygon	kernel/TeOverlayUtils.cpp	/^bool TeOVERLAY::TeClonePolygon(const TePolygon& polIn, TePolygon& polOut)$/;"	f	class:TeOVERLAY
TeClonePolygonSet	kernel/TeOverlayUtils.cpp	/^bool TeOVERLAY::TeClonePolygonSet(const TePolygonSet& polsIn, TePolygonSet& polsOut)$/;"	f	class:TeOVERLAY
TeClosedNetworkStrategy	kernel/TeDataTypes.h	/^								 TeClosedNetworkStrategy, TeOpenNetworkStrategy, TeOpenNetworkStrategy2 };$/;"	e	enum:TeGPMConstructionStrategy
TeColor	kernel/TeVisual.h	/^	TeColor () : red_(0),green_(0),blue_(0), name_("") {}$/;"	f	struct:TeColor
TeColor	kernel/TeVisual.h	/^	TeColor (int r, int g, int b, const string& name="") : red_(r),green_(g),blue_(b), name_(name) {}$/;"	f	struct:TeColor
TeColor	kernel/TeVisual.h	/^struct TL_DLL TeColor$/;"	s
TeColorAscSatBegin	kernel/TeDataTypes.h	/^{	TeColorAscSatEnd, TeColorDescSatEnd, TeColorAscSatBegin, TeColorDescSatBegin };$/;"	e	enum:TeColorDirection
TeColorAscSatEnd	kernel/TeDataTypes.h	/^{	TeColorAscSatEnd, TeColorDescSatEnd, TeColorAscSatBegin, TeColorDescSatBegin };$/;"	e	enum:TeColorDirection
TeColorDescSatBegin	kernel/TeDataTypes.h	/^{	TeColorAscSatEnd, TeColorDescSatEnd, TeColorAscSatBegin, TeColorDescSatBegin };$/;"	e	enum:TeColorDirection
TeColorDescSatEnd	kernel/TeDataTypes.h	/^{	TeColorAscSatEnd, TeColorDescSatEnd, TeColorAscSatBegin, TeColorDescSatBegin };$/;"	e	enum:TeColorDirection
TeColorDirection	kernel/TeDataTypes.h	/^enum TeColorDirection$/;"	g
TeCommunicator	kernel/TeCommunicator.h	/^      TeCommunicator( const TeCommunicator< DataType >& ) {};$/;"	f	class:TeCommunicator
TeCommunicator	kernel/TeCommunicator.h	/^  TeCommunicator< DataType >::TeCommunicator( void* host_obj_ptr,$/;"	f	class:TeCommunicator
TeCommunicator	kernel/TeCommunicator.h	/^  class TeCommunicator $/;"	c
TeCompareDouble	kernel/TeUtils.cpp	/^TeCompareDouble(double a, double b, int precision)$/;"	f
TeCompareFiles	kernel/TeUtils.cpp	/^bool TeCompareFiles( const std::string& inputFileName1,$/;"	f
TeComposite	kernel/TeComposite.h	/^class TeComposite: public TeCounted$/;"	c
TeComputeAttrStrategies_H	kernel/TeComputeAttributeStrategies.h	31;"	d
TeComputeAttrStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeComputeAttrStrategy () {};$/;"	f	class:TeComputeAttrStrategy
TeComputeAttrStrategy	kernel/TeComputeAttributeStrategies.h	/^class TeComputeAttrStrategy  $/;"	c
TeComputeSpatialStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeComputeSpatialStrategy (TeTheme* theme_, TeGeomRep rep_) { theme = theme_; rep = rep_; }$/;"	f	class:TeComputeSpatialStrategy
TeComputeSpatialStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeComputeSpatialStrategy  $/;"	c
TeConnection	kernel/TeConnection.cpp	/^TeConnection::TeConnection() :$/;"	f	class:TeConnection
TeConnection	kernel/TeConnection.h	/^class TL_DLL TeConnection $/;"	c
TeConnectionPool	kernel/TeConnectionPool.cpp	/^TeConnectionPool::TeConnectionPool(const unsigned int& maxConnections, const unsigned int& maxIdle, const clock_t& maxWait) :$/;"	f	class:TeConnectionPool
TeConnectionPool	kernel/TeConnectionPool.h	/^class TL_DLL TeConnectionPool$/;"	c
TeConnectionStrenghtStrategy	kernel/TeDataTypes.h	/^							TeSquaredInverseDistStrategy, TeConnectionStrenghtStrategy};$/;"	e	enum:TeGPMWeightsStrategy
TeConsoleErrorMessage	kernel/TeConsoleErrorMessage.cpp	/^	TeConsoleErrorMessage(){}$/;"	f	class:TeConsoleErrorMessage
TeConsoleErrorMessage	kernel/TeConsoleErrorMessage.cpp	/^class TeConsoleErrorMessage: public TeErrorMessage$/;"	c	file:
TeConsoleErrorMessage	kernel/TeConsoleErrorMessage.h	/^	TeConsoleErrorMessage()$/;"	f	class:TeConsoleErrorMessage
TeConsoleErrorMessage	kernel/TeConsoleErrorMessage.h	/^class TeConsoleErrorMessage: public TeErrorMessage$/;"	c
TeConsoleErrorMessagePrototype	kernel/TeConsoleErrorMessage.cpp	/^class TeConsoleErrorMessagePrototype: public TeErrorMessagePrototype$/;"	c	file:
TeConsoleErrorMessagePrototype	kernel/TeConsoleErrorMessage.h	/^class TeConsoleErrorMessagePrototype: public TeErrorMessagePrototype$/;"	c
TeConsoleErrorMessage_H	kernel/TeConsoleErrorMessage.h	27;"	d
TeContains	kernel/TeGeometryAlgorithms.h	/^inline bool TeContains(const T1& o1, const T2& o2)$/;"	f
TeContourLine	kernel/TeGeometry.h	/^	TeContourLine ( TeLine2D& line, double measure = 0. )$/;"	f	class:TeContourLine
TeContourLine	kernel/TeGeometry.h	/^class TL_DLL TeContourLine: public TeLine2D, public TeMeasure$/;"	c
TeContourLineSet	kernel/TeGeometry.h	/^class TL_DLL TeContourLineSet: public  TeGeomComposite <TeContourLine> $/;"	c
TeConvert2OGCWKBType	drivers/PostgreSQL/TePGInterface.cpp	/^void TeConvert2OGCWKBType(unsigned int& gType, bool& isPostGIS)$/;"	f
TeConvert2PostGISWKBType	drivers/PostgreSQL/TePGInterface.cpp	/^void TeConvert2PostGISWKBType(unsigned int& gType)$/;"	f
TeConvertAreaUnits	kernel/TeUtils.cpp	/^double TeConvertAreaUnits(const double& value, const TeAreaUnits& unitFrom, const TeAreaUnits& unitTo)$/;"	f
TeConvertToBigEndian	drivers/PostgreSQL/TePGInterface.cpp	/^double TeConvertToBigEndian(const double &value)$/;"	f
TeConvertToLowerCase	kernel/TeUtils.cpp	/^TeConvertToLowerCase (const string &name)$/;"	f
TeConvertToUpperCase	kernel/TeUtils.cpp	/^TeConvertToUpperCase ( const string& name, char upName[] )$/;"	f
TeConvertToUpperCase	kernel/TeUtils.cpp	/^TeConvertToUpperCase (const string &name)$/;"	f
TeConvertUnits	kernel/TeUtils.cpp	/^double TeConvertUnits(const double& value, const TeUnits& unitFrom, const TeUnits& unitTo)$/;"	f
TeConvexHull	kernel/TeGeometryAlgorithms.cpp	/^TePolygon TeConvexHull(const TePointSet& ps)$/;"	f
TeConvexHull	kernel/TeGeometryAlgorithms.cpp	/^TePolygon TeConvexHull(const TePolygon& p)$/;"	f
TeConvexHull	kernel/TeGeometryAlgorithms.cpp	/^TePolygon TeConvexHull(const TePolygonSet& ps)$/;"	f
TeConvexHull	kernel/TeGeometryAlgorithms.cpp	/^TePolygon TeConvexHull(std::vector<TeCoord2D>& coordSet)$/;"	f
TeConvexHull	kernel/TeGeometryAlgorithms.h	/^TePolygon TeConvexHull(const T& coordSet)$/;"	f
TeCoord2D	kernel/TeCoord2D.h	/^	TeCoord2D ( const double& x = 0., const double& y = 0. ):$/;"	f	class:TeCoord2D
TeCoord2D	kernel/TeCoord2D.h	/^	TeCoord2D (const TeCoord2D& cd) 			$/;"	f	class:TeCoord2D
TeCoord2D	kernel/TeCoord2D.h	/^class TL_DLL TeCoord2D$/;"	c
TeCoordPair	kernel/TeCoord2D.h	/^	TeCoordPair():$/;"	f	struct:TeCoordPair
TeCoordPair	kernel/TeCoord2D.h	/^	TeCoordPair(const TeCoord2D& p1, const TeCoord2D& p2):$/;"	f	struct:TeCoordPair
TeCoordPair	kernel/TeCoord2D.h	/^struct TL_DLL TeCoordPair$/;"	s
TeCoordPairVect	kernel/TeCoord2D.h	/^typedef vector<TeCoordPair> TeCoordPairVect;$/;"	t
TeCoordPairVectPtrType	image_processing/TePDITypes.hpp	/^    typedef TeSharedPtr< TeCoordPairVect > TeCoordPairVectPtrType;    $/;"	t	namespace:TePDITypes
TeCopyDatabase	utils/TeDatabaseUtils.cpp	/^bool TeCopyDatabase(TeDatabase* dbFrom, TeDatabase* dbTo)$/;"	f
TeCopyExternThemeToLayer	functions/TeLayerFunctions.cpp	/^bool TeCopyExternThemeToLayer(TeTheme* inTheme, TeLayer* outLayer, $/;"	f
TeCopyFile	kernel/TeUtils.cpp	/^bool TeCopyFile( const std::string& inputFileName,$/;"	f
TeCopyLayerToLayer	functions/TeLayerFunctions.cpp	/^bool TeCopyLayerToLayer(TeLayer* inLayer, TeLayer* outLayer, map<string,string> *txtTable)$/;"	f
TeCopyPortalGeometriesToLayer	functions/TeLayerFunctions.h	/^TeCopyPortalGeometriesToLayer(TeDatabasePortal* portal, TeProjection* proj, TeLayer* layer, const string& tName="")$/;"	f
TeCopyRasterBands	image_processing/TePDIUtils.cpp	/^  bool TeCopyRasterBands($/;"	f	namespace:TePDIUtils
TeCopyRasterPixels	image_processing/TePDIUtils.cpp	/^  bool TeCopyRasterPixels($/;"	f	namespace:TePDIUtils
TeCopyTable	utils/TeDatabaseUtils.cpp	/^bool TeCopyTable(TeDatabase* inputDatabase, const std::string& inputTable, TeDatabase* outputDatabase, const std::string& outputTable)$/;"	f
TeCopyThemeToLayer	functions/TeLayerFunctions.cpp	/^bool TeCopyThemeToLayer(TeTheme* inTheme, TeLayer* outLayer, $/;"	f
TeCopyView	utils/TeDatabaseUtils.cpp	/^bool TeCopyView(TeView* view, TeDatabase* inputDatabase, const std::string& newViewName, const std::string& newViewUser, const std::set<int>& setThemeIds, TeDatabase* outputDatabase, std::vector<bool>& vecResult)$/;"	f
TeCopyViewNode	utils/TeDatabaseUtils.cpp	/^TeViewNode* TeCopyViewNode(TeViewNode* node, TeDatabase* inputDatabase, TeDatabase* outputDatabase, TeView* newView)$/;"	f
TeCorrelogram	stat/TeMSVFactory.h	/^		TeCorrelogram(const TeMSVParams& params){$/;"	f	class:TeCorrelogram
TeCorrelogram	stat/TeMSVFactory.h	/^class STAT_DLL TeCorrelogram : public TeMSV$/;"	c
TeCorrelogram_Factory	stat/TeMSVFactory.h	/^	TeCorrelogram_Factory (const string& name) : TeMSVFactory (name){}$/;"	f	class:TeCorrelogram_Factory
TeCorrelogram_Factory	stat/TeMSVFactory.h	/^class STAT_DLL TeCorrelogram_Factory : public TeMSVFactory$/;"	c
TeCountLineObjectsStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeCountLineObjectsStrategy (TeTheme* theme_) : TeCountObjectsStrategy(theme_, TeLINES) {}$/;"	f	class:TeCountLineObjectsStrategy
TeCountLineObjectsStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeCountLineObjectsStrategy: public TeCountObjectsStrategy$/;"	c
TeCountObjectsStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeCountObjectsStrategy (TeTheme* theme_, TeGeomRep geom_) : TeComputeSpatialStrategy(theme_, geom_) { }$/;"	f	class:TeCountObjectsStrategy
TeCountObjectsStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeCountObjectsStrategy: public TeComputeSpatialStrategy  $/;"	c
TeCountPointObjectsStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeCountPointObjectsStrategy (TeTheme* theme_) : TeCountObjectsStrategy(theme_, TePOINTS) {}$/;"	f	class:TeCountPointObjectsStrategy
TeCountPointObjectsStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeCountPointObjectsStrategy: public TeCountObjectsStrategy $/;"	c
TeCountPolygonalObjectsStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeCountPolygonalObjectsStrategy (TeTheme* theme_) : TeCountObjectsStrategy(theme_, TePOLYGONS) {}$/;"	f	class:TeCountPolygonalObjectsStrategy
TeCountPolygonalObjectsStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeCountPolygonalObjectsStrategy: public TeCountObjectsStrategy$/;"	c
TeCounted	kernel/TeCounted.h	/^	TeCounted(): refCount_ ( 0 ){}$/;"	f	class:TeCounted
TeCounted	kernel/TeCounted.h	/^class TL_DLL TeCounted {$/;"	c
TeCovariance	stat/TeMSVFactory.h	/^		TeCovariance(const TeMSVParams& params){$/;"	f	class:TeCovariance
TeCovariance	stat/TeMSVFactory.h	/^class STAT_DLL TeCovariance : public TeMSV$/;"	c
TeCovariance_Factory	stat/TeMSVFactory.h	/^	TeCovariance_Factory (const string& name) : TeMSVFactory (name){}$/;"	f	class:TeCovariance_Factory
TeCovariance_Factory	stat/TeMSVFactory.h	/^class STAT_DLL TeCovariance_Factory : public TeMSVFactory$/;"	c
TeCoverage	kernel/TeCoverage.h	/^    TeCoverage(TeCoverageParams& params, TeCoverageInterpolator<T>* interpolator = NULL) :$/;"	f	class:TeCoverage
TeCoverage	kernel/TeCoverage.h	/^class TeCoverage : public TeGeometry$/;"	c
TeCoverageBlock	kernel/TeCoverageDecoder.h	/^struct TeCoverageBlock$/;"	s
TeCoverageDecoder	kernel/TeCoverageDecoder.h	/^    TeCoverageDecoder(TeCoverageParams& params) :$/;"	f	class:TeCoverageDecoder
TeCoverageDecoder	kernel/TeCoverageDecoder.h	/^class TeCoverageDecoder$/;"	c
TeCoverageDecoderCacheLRU	kernel/TeCoverageDecoderCacheLRU.h	/^    TeCoverageDecoderCacheLRU(TeCoverageParams& params, const unsigned int capacity = 0) :$/;"	f	class:TeCoverageDecoderCacheLRU
TeCoverageDecoderCacheLRU	kernel/TeCoverageDecoderCacheLRU.h	/^class TeCoverageDecoderCacheLRU : public TeCoverageDecoder<T>$/;"	c
TeCoverageDecoderDatabase	kernel/TeCoverageDecoderDatabase.h	/^    TeCoverageDecoderDatabase(TeCoverageParams& params) :$/;"	f	class:TeCoverageDecoderDatabase
TeCoverageDecoderDatabase	kernel/TeCoverageDecoderDatabase.h	/^class TeCoverageDecoderDatabase : public TeCoverageDecoder<T>$/;"	c
TeCoverageDimension	kernel/TeCoverageParams.h	/^    TeCoverageDimension(){}$/;"	f	struct:TeCoverageDimension
TeCoverageDimension	kernel/TeCoverageParams.h	/^    TeCoverageDimension(const int& dimension_id, const std::string& name, const TeDataType& type):$/;"	f	struct:TeCoverageDimension
TeCoverageDimension	kernel/TeCoverageParams.h	/^struct TL_DLL TeCoverageDimension$/;"	s
TeCoverageDimensionsSize	kernel/TeCoverageUtils.cpp	/^TeCoverageDimensionsSize(std::vector<TeCoverageDimension>& dimensions)$/;"	f
TeCoverageImportLayer	kernel/TeCoverageImport.h	/^TeCoverageImportLayer(TeDatabase* database, const std::string& layerName, TeLayer* srcLayer, const std::vector<std::string>& columns, const std::string& coverageId)$/;"	f
TeCoverageImportLayer	kernel/TeCoverageImport.h	/^TeCoverageImportLayer(TeLayer* layer, TeLayer* srcLayer, const std::vector<std::string>& columns, const std::string& coverageId)$/;"	f
TeCoverageInterpolator	kernel/TeCoverageInterpolator.h	/^    TeCoverageInterpolator() :$/;"	f	class:TeCoverageInterpolator
TeCoverageInterpolator	kernel/TeCoverageInterpolator.h	/^class TeCoverageInterpolator$/;"	c
TeCoverageInterpolatorNN	kernel/TeCoverageInterpolatorNN.h	/^class TeCoverageInterpolatorNN : public TeCoverageInterpolator<T>$/;"	c
TeCoverageParams	kernel/TeCoverageParams.h	/^    TeCoverageParams () :$/;"	f	class:TeCoverageParams
TeCoverageParams	kernel/TeCoverageParams.h	/^    TeCoverageParams (TeDatabase* database, const int layerId, const std::string& coverageId = "0") :$/;"	f	class:TeCoverageParams
TeCoverageParams	kernel/TeCoverageParams.h	/^class TL_DLL TeCoverageParams$/;"	c
TeCoveragePersistenceType	kernel/TeCoverageParams.h	/^enum TeCoveragePersistenceType$/;"	g
TeCoveredBy	kernel/TeGeometryAlgorithms.cpp	/^bool TeCoveredBy(const TeCell& cell1, const TeCell& cell2)$/;"	f
TeCoveredBy	kernel/TeGeometryAlgorithms.cpp	/^bool TeCoveredBy(const TeLine2D& l, const TePolygon& pol)$/;"	f
TeCoveredBy	kernel/TeGeometryAlgorithms.cpp	/^bool TeCoveredBy(const TeLine2D& line, const TeCell& cell)$/;"	f
TeCoveredBy	kernel/TeGeometryAlgorithms.cpp	/^bool TeCoveredBy(const TeLine2D& redLine, const TeLine2D& blueLine)$/;"	f
TeCoveredBy	kernel/TeGeometryAlgorithms.cpp	/^bool TeCoveredBy(const TePolygon& poly, const TeCell& cell)$/;"	f
TeCoveredBy	kernel/TeGeometryAlgorithms.cpp	/^bool TeCoveredBy(const TePolygon& redPol, const TePolygon& bluePol)$/;"	f
TeCovers	kernel/TeGeometryAlgorithms.h	/^inline bool TeCovers(T1& o1, T2& o2)$/;"	f
TeCreateBasicDynamicCellTable	functions/TeCellAlgorithms.cpp	/^TeCreateBasicDynamicCellTable (TeLayer* cell_layer, const string cell_tablename)$/;"	f
TeCreateCells	functions/TeCellAlgorithms.cpp	/^TeCreateCells( const string& layerName, TeLayer* layerBase, $/;"	f
TeCreateCells	functions/TeCellAlgorithms.cpp	/^TeCreateCells(const string& layerName,TeTheme* theme, double resX, double resY, TeBox& box)$/;"	f
TeCreateDBFFile	drivers/shapelib/TeDriverSHPDBF.cpp	/^DBFHandle TeCreateDBFFile (const string& dbfFilename, TeAttributeList& attList)$/;"	f
TeCreateDBFFile	drivers/shapelib/TeExportSHP.cpp	/^DBFHandle TeCreateDBFFile (const string& dbfFilename, TeAttributeList& attList)$/;"	f
TeCreateDissMatrix	stat/TeTreeMinimum.cpp	/^void TeCreateDissMatrix (TeSTElementSet* objects, TeGeneralizedProxMatrix* proxMatrix,$/;"	f
TeCreateHashFromString	kernel/TeUtils.cpp	/^unsigned long int TeCreateHashFromString( unsigned char const* inputString,$/;"	f
TeCreateMinimumTree	stat/TeTreeMinimum.cpp	/^TeCreateMinimumTree (TeSTElementSet* objects, TeMSTMatrix& DissMatrix, $/;"	f
TeCreateSubTrees	stat/TeTreeMinimum.cpp	/^TeCreateSubTrees(TeSTElementSet* objects, TeMSTGraph& Min_Tree, int num_regioes)$/;"	f
TeCreateThemeFromTheme	functions/TeThemeFunctions.cpp	/^bool TeCreateThemeFromTheme(TeTheme* inTheme, const string& newThemeName, int selObj, TeTheme* newTheme)$/;"	f
TeCrosses	kernel/TeGeometryAlgorithms.cpp	/^bool TeCrosses(const TeLine2D& l, const TeCell& cell)$/;"	f
TeCrosses	kernel/TeGeometryAlgorithms.cpp	/^bool TeCrosses(const TeLine2D& l, const TePolygon& pol)$/;"	f
TeCrosses	kernel/TeGeometryAlgorithms.cpp	/^bool TeCrosses(const TeLine2D& redLine, const TeLine2D& blueLine)$/;"	f
TeCubicRoot	kernel/TeUtils.h	/^    inline double TeCubicRoot( double x )$/;"	f
TeCursorDataType	kernel/TeDatabase.h	/^enum TeCursorDataType { TeBINARYCURSOR, TeTEXTCURSOR };$/;"	g
TeCursorEditType	kernel/TeDatabase.h	/^enum TeCursorEditType { TeREADONLY, TeREADWRITE };$/;"	g
TeCursorLocation	kernel/TeDatabase.h	/^enum TeCursorLocation { TeCLIENTESIDE, TeSERVERSIDE };$/;"	g
TeCursorType	kernel/TeDatabase.h	/^enum TeCursorType { TeUNIDIRECTIONAL, TeBIDIRECTIONAL, TeRANDOMACCESS };$/;"	g
TeCustomGroup	kernel/TeDataTypes.h	/^  TeRasterSlicing = 4, TeCustomGroup = 5, TeNoGrouping = 100 };$/;"	e	enum:TeGroupingMode
TeCylindricalEquidistant	kernel/TeProjection.cpp	/^TeCylindricalEquidistant::TeCylindricalEquidistant (const TeDatum& datum, double lon0, double offx, $/;"	f	class:TeCylindricalEquidistant
TeCylindricalEquidistant	kernel/TeProjection.h	/^class TL_DLL TeCylindricalEquidistant : public TeProjection$/;"	c
TeDATA	kernel/TeTemporalSeries.h	/^enum TeTSDataType  { TeDATA, TeMISSING, TeDMISSING, TeOUTLIER, TeDOUTLIER, TePREDICTION };$/;"	e	enum:TeTSDataType
TeDATETIME	kernel/TeDataTypes.h	/^{TeSTRING, TeREAL, TeINT, TeDATETIME, TeBLOB, TeOBJECT, TeCHARACTER, TeUNKNOWN, TeUNSIGNEDINT,$/;"	e	enum:TeAttrDataType
TeDAY	kernel/TeDataTypes.h	/^enum TeChronon {	TeNOCHRONON, TeSECOND, TeMINUTE, TeHOUR, TeDAY, TeMONTH, TeYEAR,$/;"	e	enum:TeChronon
TeDAYOFMONTH	kernel/TeDataTypes.h	/^					TeDAYOFWEEK, TeDAYOFMONTH, TeDAYOFYEAR, TeMONTHOFYEAR, TeSEASON, TeWEEKOFYEAR, $/;"	e	enum:TeChronon
TeDAYOFWEEK	kernel/TeDataTypes.h	/^					TeDAYOFWEEK, TeDAYOFMONTH, TeDAYOFYEAR, TeMONTHOFYEAR, TeSEASON, TeWEEKOFYEAR, $/;"	e	enum:TeChronon
TeDAYOFYEAR	kernel/TeDataTypes.h	/^					TeDAYOFWEEK, TeDAYOFMONTH, TeDAYOFYEAR, TeMONTHOFYEAR, TeSEASON, TeWEEKOFYEAR, $/;"	e	enum:TeChronon
TeDBConnectionsPool	kernel/TeDBConnectionsPool.h	/^class TL_DLL TeDBConnectionsPool : public TeSingleton<TeDBConnectionsPool>$/;"	c
TeDBFRowDecode	drivers/shapelib/TeDriverSHPDBF.cpp	/^void TeDBFRowDecode(DBFHandle& hDBF, int nr, TeTableRow& row)$/;"	f
TeDBFRowDecode	drivers/shapelib/TeImportSHP.cpp	/^void TeDBFRowDecode(DBFHandle& hDBF, int nr, TeTableRow& row)$/;"	f
TeDBRelationType	kernel/TeDataTypes.h	/^enum TeDBRelationType$/;"	g
TeDBVERSION	kernel/TeDefines.h	/^const std::string TeDBVERSION = "4.1.2";$/;"	v
TeDEFAULT	kernel/TeDefines.h	151;"	d
TeDIFFERENCE	kernel/TeDefines.h	213;"	d
TeDISJOINT	kernel/TeDataTypes.h	/^{	TeDISJOINT = 1, TeTOUCHES = 2, TeCROSSES = 4, TeWITHIN = 8, $/;"	e	enum:TeSpatialRelation
TeDMISSING	kernel/TeTemporalSeries.h	/^enum TeTSDataType  { TeDATA, TeMISSING, TeDMISSING, TeOUTLIER, TeDOUTLIER, TePREDICTION };$/;"	e	enum:TeTSDataType
TeDONT_INTERSECT	kernel/TeDefines.h	204;"	d
TeDOUBLE	kernel/TeDataTypes.h	/^{	TeBIT, TeUNSIGNEDCHAR, TeCHAR, TeUNSIGNEDSHORT, TeSHORT, TeINTEGER, TeUNSIGNEDLONG, TeLONG, TeFLOAT, TeDOUBLE };$/;"	e	enum:TeDataType
TeDOUTLIER	kernel/TeTemporalSeries.h	/^enum TeTSDataType  { TeDATA, TeMISSING, TeDMISSING, TeOUTLIER, TeDOUTLIER, TePREDICTION };$/;"	e	enum:TeTSDataType
TeDO_INTERSECT	kernel/TeDefines.h	205;"	d
TeDTMAlgorithm	dtm/TeDTMAlgorithm.cpp	/^TeDTMAlgorithm::TeDTMAlgorithm()$/;"	f	class:TeDTMAlgorithm
TeDTMAlgorithm	dtm/TeDTMAlgorithm.h	/^      TeDTMAlgorithm( const TeDTMAlgorithm& ) {};$/;"	f	class:TeDTMAlgorithm
TeDTMAlgorithm	dtm/TeDTMAlgorithm.h	/^  class DTM_DLL TeDTMAlgorithm$/;"	c
TeDTMParameters	dtm/TeDTMParameters.cpp	/^TeDTMParameters::TeDTMParameters()$/;"	f	class:TeDTMParameters
TeDTMParameters	dtm/TeDTMParameters.h	/^  class DTM_DLL TeDTMParameters : public $/;"	c
TeDXFDriver	drivers/DXF/TeDXFDriver.cpp	/^TeDXFDriver::TeDXFDriver(const string & fileName) $/;"	f	class:TeDXFDriver
TeDXFDriver	drivers/DXF/TeDXFDriver.h	/^class TEDXF_DLL TeDXFDriver : public TeSTGeoDataDriver $/;"	c
TeDXFDriverFactory	drivers/DXF/TeDXFDriverFactory.cpp	/^TeDXFDriverFactory::TeDXFDriverFactory() :$/;"	f	class:TeDXFDriverFactory
TeDXFDriverFactory	drivers/DXF/TeDXFDriverFactory.h	/^class TEDXF_DLL TeDXFDriverFactory : public TeGDriverFactory $/;"	c
TeDXFLayer	drivers/DXF/tedxflayer.cpp	/^TeDXFLayer::TeDXFLayer(const string & layerName) $/;"	f	class:TeDXFLayer
TeDXFLayer	drivers/DXF/tedxflayer.h	/^class TEDXF_DLL TeDXFLayer $/;"	c
TeDXFVisitor	drivers/DXF/tedxfvisitor.cpp	/^TeDXFVisitor::TeDXFVisitor(const string & fileName) $/;"	f	class:TeDXFVisitor
TeDXFVisitor	drivers/DXF/tedxfvisitor.h	/^class TeDXFVisitor : public DL_CreationAdapter $/;"	c
TeDataType	kernel/TeDataTypes.h	/^enum TeDataType $/;"	g
TeDatabase	kernel/TeDatabase.cpp	/^TeDatabase::TeDatabase() :$/;"	f	class:TeDatabase
TeDatabase	kernel/TeDatabase.h	/^class TL_DLL TeDatabase $/;"	c
TeDatabaseFactory	kernel/TeDatabaseFactory.cpp	/^TeDatabaseFactory::TeDatabaseFactory( const std::string& factoryName )$/;"	f	class:TeDatabaseFactory
TeDatabaseFactory	kernel/TeDatabaseFactory.h	/^  class TL_DLL TeDatabaseFactory : $/;"	c
TeDatabaseFactoryParams	kernel/TeDatabaseFactoryParams.cpp	/^TeDatabaseFactoryParams::TeDatabaseFactoryParams()$/;"	f	class:TeDatabaseFactoryParams
TeDatabaseFactoryParams	kernel/TeDatabaseFactoryParams.h	/^  class TL_DLL TeDatabaseFactoryParams$/;"	c
TeDatabaseIndex	kernel/TeDatabaseIndex.cpp	/^TeDatabaseIndex::TeDatabaseIndex()$/;"	f	class:TeDatabaseIndex
TeDatabaseIndex	kernel/TeDatabaseIndex.h	/^class TL_DLL TeDatabaseIndex$/;"	c
TeDatabasePortal	kernel/TeDatabase.cpp	/^TeDatabasePortal::TeDatabasePortal():$/;"	f	class:TeDatabasePortal
TeDatabasePortal	kernel/TeDatabase.h	/^class TL_DLL TeDatabasePortal {$/;"	c
TeDateADT	drivers/PostgreSQL/TePGInterface.cpp	/^typedef int TeDateADT;$/;"	t	file:
TeDatum	kernel/TeDatum.cpp	/^TeDatum::TeDatum(const TeDatum& other)$/;"	f	class:TeDatum
TeDatum	kernel/TeDatum.h	/^	TeDatum ( std::string name = "Spherical", double rd = 6.371000e+06 , double flt = 0., $/;"	f	class:TeDatum
TeDatum	kernel/TeDatum.h	/^class TL_DLL TeDatum$/;"	c
TeDatumFactory	kernel/TeDatum.h	/^class TL_DLL TeDatumFactory$/;"	c
TeDatumMap	kernel/TeDatum.h	/^typedef std::map<std::string, TeDatum> TeDatumMap;$/;"	t
TeDecimalDegress	kernel/TeDataTypes.h	/^enum TeUnits { TeUndefinedUnit, TeMillimeters, TeCentimeters, TeMeters, TeKilometers, TeMiles, TeInches, TeFeet, TeDecimalDegress };$/;"	e	enum:TeUnits
TeDecodeShape	drivers/shapelib/TeDriverSHPDBF.cpp	/^bool TeDecodeShape(SHPObject* psShape, TeMultiGeometry& geomestries, string& objectId)$/;"	f
TeDecodeShape	drivers/shapelib/TeSTEFunctionsSHP.cpp	/^bool TeDecodeShape(SHPObject* psShape, TeMultiGeometry& geomestries, string& objectId)$/;"	f
TeDecoder	kernel/TeDecoder.cpp	/^TeDecoder::TeDecoder()$/;"	f	class:TeDecoder
TeDecoder	kernel/TeDecoder.cpp	/^TeDecoder::TeDecoder(const TeRasterParams& par) : params_(par) $/;"	f	class:TeDecoder
TeDecoder	kernel/TeDecoder.h	/^class TL_DLL TeDecoder {$/;"	c
TeDecoderASCIIGrid	kernel/TeDecoderASCIIGrid.cpp	/^TeDecoderASCIIGrid::TeDecoderASCIIGrid (const TeRasterParams& par) : $/;"	f	class:TeDecoderASCIIGrid
TeDecoderASCIIGrid	kernel/TeDecoderASCIIGrid.h	/^class TL_DLL TeDecoderASCIIGrid : public TeDecoder$/;"	c
TeDecoderASCIIGridFactory	kernel/TeDecoderASCIIGrid.cpp	/^TeDecoderASCIIGridFactory::TeDecoderASCIIGridFactory(const string& name): $/;"	f	class:TeDecoderASCIIGridFactory
TeDecoderASCIIGridFactory	kernel/TeDecoderASCIIGrid.h	/^class TL_DLL TeDecoderASCIIGridFactory : public TeDecoderFactory$/;"	c
TeDecoderDatabase	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::TeDecoderDatabase(const TeRasterParams& par ):$/;"	f	class:TeDecoderDatabase
TeDecoderDatabase	kernel/TeDecoderDatabase.h	/^	TeDecoderDatabase() :$/;"	f	class:TeDecoderDatabase
TeDecoderDatabase	kernel/TeDecoderDatabase.h	/^class TL_DLL TeDecoderDatabase: public TeDecoderVirtualMemory$/;"	c
TeDecoderDatabaseFactory	kernel/TeDecoderDatabase.h	/^	TeDecoderDatabaseFactory(const string& name) : TeDecoderFactory(name) {}$/;"	f	class:TeDecoderDatabaseFactory
TeDecoderDatabaseFactory	kernel/TeDecoderDatabase.h	/^class TL_DLL TeDecoderDatabaseFactory : public TeDecoderFactory$/;"	c
TeDecoderFactory	kernel/TeDecoder.cpp	/^TeDecoderFactory::TeDecoderFactory(const string& name) : TeFactory<TeDecoder,TeRasterParams>(name)$/;"	f	class:TeDecoderFactory
TeDecoderFactory	kernel/TeDecoder.h	/^class TL_DLL TeDecoderFactory: public TeFactory<TeDecoder,TeRasterParams> $/;"	c
TeDecoderFile	kernel/TeDecoderFile.cpp	/^TeDecoderFile::TeDecoderFile ( const TeRasterParams& par )$/;"	f	class:TeDecoderFile
TeDecoderFile	kernel/TeDecoderFile.h	/^class TL_DLL TeDecoderFile : public TeDecoderVirtualMemory$/;"	c
TeDecoderFileFactory	kernel/TeDecoderFile.h	/^	TeDecoderFileFactory(const string& name) : TeDecoderFactory(name) {}$/;"	f	class:TeDecoderFileFactory
TeDecoderFileFactory	kernel/TeDecoderFile.h	/^class TL_DLL TeDecoderFileFactory : public TeDecoderFactory$/;"	c
TeDecoderJPEG	kernel/TeDecoderJPEG.cpp	/^TeDecoderJPEG::TeDecoderJPEG (const TeRasterParams& par):$/;"	f	class:TeDecoderJPEG
TeDecoderJPEG	kernel/TeDecoderJPEG.cpp	/^TeDecoderJPEG::TeDecoderJPEG():$/;"	f	class:TeDecoderJPEG
TeDecoderJPEG	kernel/TeDecoderJPEG.h	/^class TL_DLL TeDecoderJPEG: public TeDecoder$/;"	c
TeDecoderJPEGFactory	kernel/TeDecoderJPEG.cpp	/^TeDecoderJPEGFactory::TeDecoderJPEGFactory(const string& name): $/;"	f	class:TeDecoderJPEGFactory
TeDecoderJPEGFactory	kernel/TeDecoderJPEG.h	/^class TL_DLL TeDecoderJPEGFactory : public TeDecoderFactory$/;"	c
TeDecoderMemory	kernel/TeDecoderMemory.cpp	/^TeDecoderMemory::TeDecoderMemory(): $/;"	f	class:TeDecoderMemory
TeDecoderMemory	kernel/TeDecoderMemory.cpp	/^TeDecoderMemory::TeDecoderMemory(const TeRasterParams& par): $/;"	f	class:TeDecoderMemory
TeDecoderMemory	kernel/TeDecoderMemory.h	/^class TL_DLL TeDecoderMemory : public TeDecoder$/;"	c
TeDecoderMemoryFactory	kernel/TeDecoderMemory.h	/^	TeDecoderMemoryFactory(const string& name) : TeDecoderFactory(name) {}$/;"	f	class:TeDecoderMemoryFactory
TeDecoderMemoryFactory	kernel/TeDecoderMemory.h	/^class TL_DLL TeDecoderMemoryFactory : public TeDecoderFactory$/;"	c
TeDecoderMemoryMap	kernel/TeDecoderMemoryMap.cpp	/^TeDecoderMemoryMap::TeDecoderMemoryMap ( const TeRasterParams& par )$/;"	f	class:TeDecoderMemoryMap
TeDecoderMemoryMap	kernel/TeDecoderMemoryMap.h	/^class TL_DLL TeDecoderMemoryMap : public TeDecoder$/;"	c
TeDecoderMemoryMapFactory	kernel/TeDecoderMemoryMap.cpp	/^TeDecoderMemoryMapFactory::TeDecoderMemoryMapFactory(const string& name) : $/;"	f	class:TeDecoderMemoryMapFactory
TeDecoderMemoryMapFactory	kernel/TeDecoderMemoryMap.h	/^class TL_DLL TeDecoderMemoryMapFactory : public TeDecoderFactory$/;"	c
TeDecoderMrSID	drivers/MrSID/TeDecoderMrSID.cpp	/^TeDecoderMrSID::TeDecoderMrSID(const TeRasterParams& par) :$/;"	f	class:TeDecoderMrSID
TeDecoderMrSID	drivers/MrSID/TeDecoderMrSID.cpp	/^TeDecoderMrSID::TeDecoderMrSID(const std::string& fname):$/;"	f	class:TeDecoderMrSID
TeDecoderMrSID	drivers/MrSID/TeDecoderMrSID.h	/^class TeDecoderMrSID : public TeDecoder$/;"	c
TeDecoderMrSIDFactory	drivers/MrSID/TeDecoderMrSID.cpp	/^TeDecoderMrSIDFactory::TeDecoderMrSIDFactory(const string& name): $/;"	f	class:TeDecoderMrSIDFactory
TeDecoderMrSIDFactory	drivers/MrSID/TeDecoderMrSID.h	/^class TeDecoderMrSIDFactory : public TeDecoderFactory$/;"	c
TeDecoderPAM	drivers/PAMDecoder/TeDecoderPAM.cpp	/^TeDecoderPAM::TeDecoderPAM ( const TeRasterParams& par )$/;"	f	class:TeDecoderPAM
TeDecoderPAM	drivers/PAMDecoder/TeDecoderPAM.cpp	/^TeDecoderPAM::TeDecoderPAM ()$/;"	f	class:TeDecoderPAM
TeDecoderPAM	drivers/PAMDecoder/TeDecoderPAM.h	/^class TeDecoderPAM : public TeDecoderSmartMem$/;"	c
TeDecoderPAMFactory	drivers/PAMDecoder/TeDecoderPAM.h	/^  TeDecoderPAMFactory(const string& name) : TeDecoderFactory(name) {}$/;"	f	class:TeDecoderPAMFactory
TeDecoderPAMFactory	drivers/PAMDecoder/TeDecoderPAM.h	/^class TeDecoderPAMFactory : public TeDecoderFactory$/;"	c
TeDecoderQtImage	drivers/qt/TeDecoderQtImage.cpp	/^TeDecoderQtImage::TeDecoderQtImage ( const TeRasterParams& par )$/;"	f	class:TeDecoderQtImage
TeDecoderQtImage	drivers/qt/TeDecoderQtImage.h	/^class TL_DLL TeDecoderQtImage : public TeDecoder$/;"	c
TeDecoderQtImageFactory	drivers/qt/TeDecoderQtImage.h	/^	TeDecoderQtImageFactory(const string& name) : TeDecoderFactory(name) {}$/;"	f	class:TeDecoderQtImageFactory
TeDecoderQtImageFactory	drivers/qt/TeDecoderQtImage.h	/^class TL_DLL TeDecoderQtImageFactory : public TeDecoderFactory$/;"	c
TeDecoderSPR	kernel/TeDecoderSPR.cpp	/^TeDecoderSPR::TeDecoderSPR (const TeRasterParams& par) : $/;"	f	class:TeDecoderSPR
TeDecoderSPR	kernel/TeDecoderSPR.cpp	/^TeDecoderSPR::TeDecoderSPR() : $/;"	f	class:TeDecoderSPR
TeDecoderSPR	kernel/TeDecoderSPR.h	/^class TL_DLL TeDecoderSPR : public TeDecoderSmartMem$/;"	c
TeDecoderSPRFactory	kernel/TeDecoderSPR.cpp	/^TeDecoderSPRFactory::TeDecoderSPRFactory(const string& name): $/;"	f	class:TeDecoderSPRFactory
TeDecoderSPRFactory	kernel/TeDecoderSPR.h	/^class TL_DLL TeDecoderSPRFactory : public TeDecoderFactory$/;"	c
TeDecoderSmartMem	kernel/TeDecoderSmartMem.cpp	/^TeDecoderSmartMem::TeDecoderSmartMem ( const TeRasterParams& par )$/;"	f	class:TeDecoderSmartMem
TeDecoderSmartMem	kernel/TeDecoderSmartMem.cpp	/^TeDecoderSmartMem::TeDecoderSmartMem ()$/;"	f	class:TeDecoderSmartMem
TeDecoderSmartMem	kernel/TeDecoderSmartMem.h	/^class TL_DLL TeDecoderSmartMem : public TeDecoder$/;"	c
TeDecoderSmartMemFactory	kernel/TeDecoderSmartMem.h	/^  TeDecoderSmartMemFactory(const string& name) : TeDecoderFactory(name) {}$/;"	f	class:TeDecoderSmartMemFactory
TeDecoderSmartMemFactory	kernel/TeDecoderSmartMem.h	/^class TL_DLL TeDecoderSmartMemFactory : public TeDecoderFactory$/;"	c
TeDecoderTIFF	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::TeDecoderTIFF(const TeRasterParams& par):$/;"	f	class:TeDecoderTIFF
TeDecoderTIFF	kernel/TeDecoderTIFF.h	/^class TL_DLL TeDecoderTIFF: public TeDecoder$/;"	c
TeDecoderTIFFFactory	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFFFactory::TeDecoderTIFFFactory(const string& name): $/;"	f	class:TeDecoderTIFFFactory
TeDecoderTIFFFactory	kernel/TeDecoderTIFF.h	/^class TL_DLL TeDecoderTIFFFactory : public TeDecoderFactory$/;"	c
TeDecoderVirtualMemory	kernel/TeDecoderVirtualMemory.cpp	/^TeDecoderVirtualMemory::TeDecoderVirtualMemory(const TeRasterParams par)$/;"	f	class:TeDecoderVirtualMemory
TeDecoderVirtualMemory	kernel/TeDecoderVirtualMemory.h	/^	TeDecoderVirtualMemory() {};$/;"	f	class:TeDecoderVirtualMemory
TeDecoderVirtualMemory	kernel/TeDecoderVirtualMemory.h	/^class TL_DLL TeDecoderVirtualMemory: public TeDecoder$/;"	c
TeDefaultCoverageLayerTable	kernel/TeCoverageUtils.cpp	/^TeDefaultCoverageLayerTable(TeLayer* layer)$/;"	f
TeDefaultCoverageMetadataTable	kernel/TeCoverageUtils.cpp	/^TeDefaultCoverageMetadataTable(TeLayer* layer)$/;"	f
TeDefaultCoverageTable	kernel/TeCoverageUtils.cpp	/^TeDefaultCoverageTable(TeLayer* layer, const std::string& coverageId)$/;"	f
TeDefaultSelection	kernel/TeDataTypes.h	/^{   TeDefaultSelection, TePointingSelection, TeQuerySelection, TePointingAndQuerySelection };$/;"	e	enum:TeObjectSelectionMode
TeDelayThread	kernel/TeThread.h	37;"	d
TeDelayThread	kernel/TeThread.h	41;"	d
TeDeviation	kernel/TeStatistics.h	/^bool TeDeviation ( It begin, It end, It result, double mean)$/;"	f
TeDeviation	kernel/TeStatistics.h	/^bool TeDeviation ( iteratorSet begin, iteratorSet end, double mean, int index=0)$/;"	f
TeDifference	kernel/TeOverlay.cpp	/^TeMultiGeometry TeOVERLAY::TeDifference(TeLineSet& redLines, TePolygonSet& bluePols)$/;"	f	class:TeOVERLAY
TeDifference	kernel/TeOverlay.cpp	/^bool TeOVERLAY::TeDifference(TePolygonSet& redPols, TePolygonSet& bluePols, TePolygonSet& polsOut)$/;"	f	class:TeOVERLAY
TeDifference	kernel/TeOverlay.cpp	/^bool TeOVERLAY::TeDifference(TePolygonSet& redPols, vector<TePolygonSet>& bluePols, vector<TePolygonSet>& vecPolsOut, vector<bool>& resultVec, const bool& makeCopy, const bool fixOrientation)$/;"	f	class:TeOVERLAY
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TeBox& bx1, const TeBox& bx2)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TeCell& cell, const TeLine2D& line)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TeCell& cell, const TePoint& point)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TeCell& cell, const TePolygon& pol)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TeCell& cell1, const TeCell& cell2)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TeCoord2D& c, const TeBox& b)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TeCoord2D& c, const TeLine2D& l)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TeCoord2D& c, const TePolygon& pol)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TeCoord2D& c1, const TeCoord2D& c2)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TeLine2D& l, const TePolygon& pol)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TeLine2D& redLine, const TeLine2D& blueLine)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TePoint& p, const TeLine2D& l)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TePoint& p, const TePolygon& pol)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TePoint& p1, const TePoint& p2)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjoint(const TePolygon& redPol, const TePolygon& bluePol)$/;"	f
TeDisjoint	kernel/TeGeometryAlgorithms.h	/^inline bool TeDisjoint(const T1& o1, const T2& o2)$/;"	f
TeDisjointOrTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeDisjointOrTouches(const TeBox& bx1, const TeBox& bx2)$/;"	f
TeDistWeightAvgInBoxInterpolation	functions/TeInterpolation.h	/^                                TeAvgInBoxInterpolation, TeDistWeightAvgInBoxInterpolation };$/;"	e	enum:TeInterpolationAlgorithm
TeDistWeightAvgInterpolation	functions/TeInterpolation.h	/^enum TeInterpolationAlgorithm { TeNNInterpolation, TeAvgInterpolation, TeDistWeightAvgInterpolation,$/;"	e	enum:TeInterpolationAlgorithm
TeDistance	kernel/TeGeometryAlgorithms.cpp	/^double TeDistance(const TeCoord2D& c1, const TeCoord2D& c2)$/;"	f
TeDistanceStrategy	kernel/TeDataTypes.h	/^enum TeGPMConstructionStrategy { TeAdjacencyStrategy, TeDistanceStrategy, TeNearestNeighboursStrategy,$/;"	e	enum:TeGPMConstructionStrategy
TeDynGeomDynAttr	kernel/TeDataTypes.h	/^	TeDynGeomDynAttr, TeGeomAttrLinkTime, TeGeocodingData };$/;"	e	enum:TeAttrTableType
TeEARTHRADIUS	kernel/TeDefines.h	/^const double 	TeEARTHRADIUS   = 6378160.;		\/\/!< Int. Astronomical Union - 1965$/;"	v
TeEQUALS	kernel/TeDataTypes.h	/^	TeOVERLAPS = 16, TeCONTAINS = 32, TeINTERSECTS = 64, TeEQUALS = 128, TeCOVERS = 256,$/;"	e	enum:TeSpatialRelation
TeEVENT	kernel/TeTemporalSeries.h	/^enum TeTSType  { TeATTRDYN, TeATTRDYNGROUP, TeEVENT, TeATTREVENT};$/;"	e	enum:TeTSType
TeEXTERIORBOUNDARY	kernel/TeDefines.h	196;"	d
TeEXTERIOREXTERIOR	kernel/TeDefines.h	197;"	d
TeEXTERIORINTERIOR	kernel/TeDefines.h	195;"	d
TeEXTERNALTHEME	kernel/TeViewNode.h	/^{ TeTHEME=0, TeTREE=1, TeEXTERNALTHEME=2, TeFILETHEME=3, TeSFSTHEME=4 }; $/;"	e	enum:TeViewNodeType
TeElemCountingBySlice	kernel/TeGroupingAlgorithms.h	/^void TeElemCountingBySlice(iterator begin, iterator end, vector<TeSlice>& result)$/;"	f
TeElementarBuffer	kernel/TeBufferRegion.cpp	/^inline void TeElementarBuffer(TeCoord2D first, TeCoord2D last, const double& bufferDistance,$/;"	f	namespace:TeBUFFERREGION
TeEmpiricalBayes	stat/TeSpatialStatistics.h	/^TeEmpiricalBayes (It rBegin, It rEnd, It n, double mean, double variance, It bayes)$/;"	f
TeEqualSteps	kernel/TeDataTypes.h	/^{ TeEqualSteps = 0, TeQuantil = 1, TeStdDeviation = 2, TeUniqueValue = 3,$/;"	e	enum:TeGroupingMode
TeEquals	kernel/TeGeometryAlgorithms.cpp	/^template<> bool TeEquals( const TePolygonSet& ps1, const TePolygonSet& ps2 )$/;"	f
TeEquals	kernel/TeGeometryAlgorithms.cpp	/^template<> bool TeEquals(const TeBox& bx1, const TeBox& bx2)$/;"	f
TeEquals	kernel/TeGeometryAlgorithms.cpp	/^template<> bool TeEquals(const TeCell& cell1, const TeCell& cell2)$/;"	f
TeEquals	kernel/TeGeometryAlgorithms.cpp	/^template<> bool TeEquals(const TeCoord2D& c1, const TeCoord2D& c2)$/;"	f
TeEquals	kernel/TeGeometryAlgorithms.cpp	/^template<> bool TeEquals(const TeLine2D& redLine, const TeLine2D& blueLine)$/;"	f
TeEquals	kernel/TeGeometryAlgorithms.cpp	/^template<> bool TeEquals(const TePoint& p1, const TePoint& p2)$/;"	f
TeEquals	kernel/TeGeometryAlgorithms.cpp	/^template<> bool TeEquals(const TePolygon& redPol, const TePolygon& bluePol)$/;"	f
TeEquals	kernel/TeGeometryAlgorithms.h	/^inline bool TeEquals(const T1& \/*o1*\/, const T2& \/*o2*\/)$/;"	f
TeErrorLog	kernel/TeErrorLog.cpp	/^TeErrorLog::TeErrorLog():logFile_ ( 0 )$/;"	f	class:TeErrorLog
TeErrorLog	kernel/TeErrorLog.h	/^class TL_DLL TeErrorLog: public TeSingleton<TeErrorLog>$/;"	c
TeErrorLogMap	kernel/TeErrorLog.h	/^typedef map<TeErrorType, int> TeErrorLogMap;$/;"	t
TeErrorMessage	kernel/TeErrorMessage.h	/^	TeErrorMessage(){}$/;"	f	class:TeErrorMessage
TeErrorMessage	kernel/TeErrorMessage.h	/^class TL_DLL TeErrorMessage$/;"	c
TeErrorMessagePrototype	kernel/TeErrorMessage.h	/^class TL_DLL TeErrorMessagePrototype: public TePrototype<TeErrorMessage>$/;"	c
TeErrorMessage_H	kernel/TeErrorMessage.h	27;"	d
TeErrorType	kernel/TeErrorLog.h	/^enum TeErrorType$/;"	g
TeErrorTypeMap	kernel/TeErrorLog.h	/^typedef map<TeErrorType, string> TeErrorTypeMap;$/;"	t
TeEsfericSemivarModel	stat/TeSemivarModelFactory.h	/^		TeEsfericSemivarModel(const TeSemivarModelParams& params){$/;"	f	class:TeEsfericSemivarModel
TeEsfericSemivarModel	stat/TeSemivarModelFactory.h	/^class STAT_DLL TeEsfericSemivarModel : public TeSemivarModel$/;"	c
TeEsfericSemivar_Factory	stat/TeSemivarModelFactory.h	/^	TeEsfericSemivar_Factory (const string& name) : TeSemivarModelFactory(name){}$/;"	f	class:TeEsfericSemivar_Factory
TeEsfericSemivar_Factory	stat/TeSemivarModelFactory.h	/^class STAT_DLL TeEsfericSemivar_Factory : public TeSemivarModelFactory$/;"	c
TeEuclidianClassify	stat/TeKMeansGrouping.h	/^TeEuclidianClassify (ItIn begin, ItIn end, ItOut& result, C& kmeans) $/;"	f
TeEuclidianDistance	stat/TeKMeansGrouping.h	/^TeEuclidianDistance(I it, T& centroide)$/;"	f
TeException	kernel/TeException.cpp	/^TeException::TeException ( TeErrorType msgCode, const string& userText, bool haserrno ):$/;"	f	class:TeException
TeException	kernel/TeException.h	/^class TL_DLL TeException {$/;"	c
TeExpansible	kernel/TeRasterParams.h	/^	{  TeExpansible=1, TeNoExpansible=2 };$/;"	e	enum:TeRasterParams::TeRasterTilingType
TeExponentialSemivarModel	stat/TeSemivarModelFactory.h	/^		TeExponentialSemivarModel(const TeSemivarModelParams& params){$/;"	f	class:TeExponentialSemivarModel
TeExponentialSemivarModel	stat/TeSemivarModelFactory.h	/^class STAT_DLL TeExponentialSemivarModel : public TeSemivarModel$/;"	c
TeExponentialSemivar_Factory	stat/TeSemivarModelFactory.h	/^	TeExponentialSemivar_Factory (const string& name) : TeSemivarModelFactory(name){}$/;"	f	class:TeExponentialSemivar_Factory
TeExponentialSemivar_Factory	stat/TeSemivarModelFactory.h	/^class STAT_DLL TeExponentialSemivar_Factory : public TeSemivarModelFactory$/;"	c
TeExportLayerToCSV	functions/TeExportCSV.cpp	/^TeExportLayerToCSV(TeLayer* layer, const string& filename, const char& sep)$/;"	f
TeExportLayerToMIF	functions/TeExportMIF.cpp	/^TeExportLayerToMIF(TeLayer* layer, const string& baseName)$/;"	f
TeExportLayerToShapefile	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeExportLayerToShapefile(TeLayer* layer, const string& baseName)$/;"	f
TeExportLayerToShapefile	drivers/shapelib/TeExportSHP.cpp	/^TeExportLayerToShapefile(TeLayer* layer, const string& baseName)$/;"	f
TeExportLinesToOGR	drivers/gdal/TeOGRExportImportFunctions.cpp	/^bool TeExportLinesToOGR(TeLayer* lrInput, TeGeoDataDriver* driver)$/;"	f
TeExportMIF	functions/TeExportMIF.cpp	/^TeExportMIF( TeLayer* layer, const string& mifFileName, const string& tableName, const string& restriction)$/;"	f
TeExportMIFAttributeList	functions/TeExportMIF.cpp	/^TeExportMIFAttributeList (TeAttributeList& attList, TeAsciiFile& mifFile)$/;"	f
TeExportMIFCellSet	functions/TeExportMIF.cpp	/^TeExportMIFCellSet (TeAsciiFile& mifFile, TeCellSet& cells, bool isColl)$/;"	f
TeExportMIFLineSet	functions/TeExportMIF.cpp	/^TeExportMIFLineSet (TeAsciiFile& mifFile, TeLineSet& lines)$/;"	f
TeExportMIFPointSet	functions/TeExportMIF.cpp	/^TeExportMIFPointSet (TeAsciiFile& mifFile, TePointSet& points, bool isMulti)$/;"	f
TeExportMIFPolygonSet	functions/TeExportMIF.cpp	/^TeExportMIFPolygonSet (TeAsciiFile& mifFile, TePolygonSet& polygons)$/;"	f
TeExportMIFProjection	functions/TeExportMIF.cpp	/^TeExportMIFProjection ( TeProjection* proj, TeAsciiFile& mifFile)$/;"	f
TeExportMIFRow	functions/TeExportMIF.cpp	/^TeExportMIFRow(TeTableRow& row, TeAsciiFile& midFile)$/;"	f
TeExportPointsToOGR	drivers/gdal/TeOGRExportImportFunctions.cpp	/^bool TeExportPointsToOGR(TeLayer* lrInput, TeGeoDataDriver* driver)$/;"	f
TeExportPolygonSet2SHP	drivers/shapelib/TeDriverSHPDBF.cpp	/^bool TeExportPolygonSet2SHP( const TePolygonSet& ps,const std::string& base_file_name  )$/;"	f
TeExportPolygonSet2SHP	drivers/shapelib/TeExportSHP.cpp	/^bool TeExportPolygonSet2SHP( const TePolygonSet& ps,const std::string& base_file_name  )$/;"	f
TeExportPolygonsToOGR	drivers/gdal/TeOGRExportImportFunctions.cpp	/^bool TeExportPolygonsToOGR(TeLayer* lrInput, TeGeoDataDriver* driver)$/;"	f
TeExportQuerierToCSV	functions/TeExportCSV.cpp	/^bool TeExportQuerierToCSV(TeQuerier* querier, const std::string& filename, const char& sep)$/;"	f
TeExportQuerierToMIF	functions/TeExportMIF.cpp	/^TeExportQuerierToMIF(TeQuerier* querier, const std::string& base, TeProjection* proj)$/;"	f
TeExportQuerierToSPRING	functions/TeExportSPR.cpp	/^bool TeExportQuerierToSPRING(TeQuerier* querier, const std::string& base, TeSpringModels cat, const string& name, $/;"	f
TeExportQuerierToShapefile	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeExportQuerierToShapefile(TeQuerier* querier, const std::string& base)$/;"	f
TeExportQuerierToShapefile	drivers/shapelib/TeExportSHP.cpp	/^TeExportQuerierToShapefile(TeQuerier* querier, const std::string& base)$/;"	f
TeExportSPR	functions/TeExportSPR.cpp	/^TeExportSPR (TeLayer* layer, const string& sprFileName, const string& tableName, TeSpringModels cat, const string& name)$/;"	f
TeExportShapefile	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeExportShapefile(TeLayer* layer, const string& shpFileName, const string& tableName, const string& restriction)$/;"	f
TeExportShapefile	drivers/shapelib/TeExportDBF.cpp	/^TeExportShapefile(TeLayer& layer)$/;"	f
TeExportShapefile	drivers/shapelib/TeExportSHP.cpp	/^TeExportShapefile(TeLayer* layer, const string& shpFileName, const string& tableName, const string& restriction)$/;"	f
TeExportThemeToCSV	functions/TeExportCSV.cpp	/^TeExportThemeToCSV(TeTheme* theme, TeSelectedObjects selOb, const std::string& filename, const char& sep)$/;"	f
TeExportThemeToMIF	functions/TeExportMIF.cpp	/^TeExportThemeToMIF(TeTheme* theme, TeSelectedObjects selOb, const std::string& baseName)$/;"	f
TeExportThemeToSPRING	functions/TeExportSPR.cpp	/^TeExportThemeToSPRING(TeTheme* theme, TeSpringModels cat, const string& name, TeSelectedObjects selOb, const string& baseName)$/;"	f
TeExportThemeToShapefile	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeExportThemeToShapefile(TeTheme* theme, TeSelectedObjects selOb, const std::string& baseName, const std::vector<std::string> attributes)$/;"	f
TeExportThemeToShapefile	drivers/shapelib/TeExportSHP.cpp	/^TeExportThemeToShapefile(TeTheme* theme, TeSelectedObjects selOb, const std::string& baseName)$/;"	f
TeExportToOGR	drivers/gdal/TeOGRExportImportFunctions.cpp	/^bool TeExportToOGR(TeLayer* lrInput, const std::string& fileName, const std::string& ogrType)$/;"	f
TeExternalTheme	kernel/TeExternalTheme.cpp	/^TeExternalTheme::TeExternalTheme(TeDatabase* sourceDb, TeTheme* remoteTheme, const int& viewId, $/;"	f	class:TeExternalTheme
TeExternalTheme	kernel/TeExternalTheme.h	/^class TL_DLL TeExternalTheme : public TeTheme$/;"	c
TeExternalThemeFactory	kernel/TeExternalTheme.h	/^	TeExternalThemeFactory() : TeViewNodeFactory((int)TeEXTERNALTHEME)$/;"	f	class:TeExternalThemeFactory
TeExternalThemeFactory	kernel/TeExternalTheme.h	/^class TL_DLL TeExternalThemeFactory : public TeViewNodeFactory$/;"	c
TeExtractBand	kernel/TeRasterTransform.h	/^		TeExtractRGB=5, TeExtractBand=6, TeExtractBands=7, TeThreeBand2RGB=8, $/;"	e	enum:TeRasterTransform::TeRasterTransfFunctions
TeExtractBands	kernel/TeRasterTransform.h	/^		TeExtractRGB=5, TeExtractBand=6, TeExtractBands=7, TeThreeBand2RGB=8, $/;"	e	enum:TeRasterTransform::TeRasterTransfFunctions
TeExtractRGB	kernel/TeRasterTransform.h	/^		TeExtractRGB=5, TeExtractBand=6, TeExtractBands=7, TeThreeBand2RGB=8, $/;"	e	enum:TeRasterTransform::TeRasterTransfFunctions
TeFILETHEME	kernel/TeViewNode.h	/^{ TeTHEME=0, TeTREE=1, TeEXTERNALTHEME=2, TeFILETHEME=3, TeSFSTHEME=4 }; $/;"	e	enum:TeViewNodeType
TeFLOAT	kernel/TeDataTypes.h	/^{	TeBIT, TeUNSIGNEDCHAR, TeCHAR, TeUNSIGNEDSHORT, TeSHORT, TeINTEGER, TeUNSIGNEDLONG, TeLONG, TeFLOAT, TeDOUBLE };$/;"	e	enum:TeDataType
TeFPEquals	kernel/TeUtils.h	/^    inline bool TeFPEquals(double d1, double d2, double precision)$/;"	f
TeFactory	kernel/TeFactory.h	/^TeFactory<T,Arg>::TeFactory(const string& name):$/;"	f	class:TeFactory
TeFactory	kernel/TeFactory.h	/^class TeFactory$/;"	c
TeFactoryMap	kernel/TeAbstractFactory.h	/^	typedef std::map<PRODUCTIDTYPE, TeAbstractFactory<PRODUCT,PARAMS,PRODUCTIDTYPE>* > TeFactoryMap;$/;"	t	class:TeAbstractFactory
TeFactoryMap	kernel/TeFactory.h	/^	typedef map<string, TeFactory<T,Arg>* > TeFactoryMap; $/;"	t	class:TeFactory
TeFeet	kernel/TeDataTypes.h	/^enum TeUnits { TeUndefinedUnit, TeMillimeters, TeCentimeters, TeMeters, TeKilometers, TeMiles, TeInches, TeFeet, TeDecimalDegress };$/;"	e	enum:TeUnits
TeFileCopy	kernel/TeUtils.cpp	/^bool TeFileCopy(const std::string& fileNameIn, const std::string& fileNameOut)$/;"	f
TeFileDelete	kernel/TeUtils.cpp	/^bool TeFileDelete(const std::string& fileName)$/;"	f
TeFileExists	kernel/TeUtils.cpp	/^bool TeFileExists(const std::string& fileName)$/;"	f
TeFileRename	kernel/TeUtils.cpp	/^bool TeFileRename(const std::string& oldFileName, const std::string& newFileName)$/;"	f
TeFileTheme	kernel/TeFileTheme.cpp	/^TeFileTheme::TeFileTheme(const TeFileTheme& other):$/;"	f	class:TeFileTheme
TeFileTheme	kernel/TeFileTheme.cpp	/^TeFileTheme::TeFileTheme(const std::string& themeName, TeGeoDataDriver* dataDriver, TeDatabase* localDb, TeViewNode* parent, int view):$/;"	f	class:TeFileTheme
TeFileTheme	kernel/TeFileTheme.cpp	/^TeFileTheme::TeFileTheme(const string& name, TeViewNode* parent, int view, int id):$/;"	f	class:TeFileTheme
TeFileTheme	kernel/TeFileTheme.h	/^class TL_DLL TeFileTheme : public TeAbstractTheme$/;"	c
TeFileThemeFactory	kernel/TeFileTheme.h	/^	TeFileThemeFactory() : TeViewNodeFactory((int)TeFILETHEME)$/;"	f	class:TeFileThemeFactory
TeFileThemeFactory	kernel/TeFileTheme.h	/^class TeFileThemeFactory : public TeViewNodeFactory$/;"	c
TeFillCellAggregateOperation	functions/TeCellAlgorithms.cpp	/^bool TeFillCellAggregateOperation ( TeDatabase* db,$/;"	f
TeFillCellCategoryAreaPercentageOperation	functions/TeCellAlgorithms.cpp	/^bool TeFillCellCategoryAreaPercentageOperation(TeTheme* theme,$/;"	f
TeFillCellCategoryCountPercentageRasterOperation	functions/TeCellAlgorithms.cpp	/^bool TeFillCellCategoryCountPercentageRasterOperation(TeDatabase* db,$/;"	f
TeFillCellConnectionOperation	functions/TeCellAlgorithms.cpp	/^bool TeFillCellConnectionOperation (	TeDatabase* db,$/;"	f
TeFillCellDistanceOperation	functions/TeCellAlgorithms.cpp	/^bool TeFillCellDistanceOperation(TeTheme* theme,$/;"	f
TeFillCellInitLoad	functions/TeCellAlgorithms.cpp	/^bool TeFillCellInitLoad (TeLayer* cell_layer, const string& cell_tablename, TeCellSet& cells)$/;"	f
TeFillCellInitSTO	functions/TeCellAlgorithms.cpp	/^void TeFillCellInitSTO (const TeCell& cell, TePropertyVector& result, TeSTElementSet& cellObjSet, TeAttrTableType atttype, TeTimeInterval& t)$/;"	f
TeFillCellInitSTO	functions/TeCellAlgorithms.cpp	/^void TeFillCellInitSTO (const TeCell& cell, vector<string>& result, TeSTElementSet& cellObjSet, TeAttrTableType atttype, TeTimeInterval& t)$/;"	f
TeFillCellNonSpatialOperation	functions/TeCellAlgorithms.cpp	/^bool TeFillCellNonSpatialOperation (TeDatabase* db,$/;"	f
TeFillCellNonSpatialOperation	functions/TeCellAlgorithms.cpp	/^bool TeFillCellNonSpatialOperation (TeTheme* theme,$/;"	f
TeFillCellNonSpatialRasterOperation	functions/TeCellAlgorithms.cpp	/^bool TeFillCellNonSpatialRasterOperation (TeDatabase* db,$/;"	f
TeFillCellSpatialOperation	functions/TeCellAlgorithms.cpp	/^bool TeFillCellSpatialOperation(TeDatabase* db,$/;"	f
TeFillCellStepLoadingData	functions/TeCellAlgorithms.cpp	/^void TeFillCellStepLoadingData()$/;"	f
TeFillCellStepNextStep	functions/TeCellAlgorithms.cpp	/^bool TeFillCellStepNextStep(int step)$/;"	f
TeFillCellStepStartProcessing	functions/TeCellAlgorithms.cpp	/^void TeFillCellStepStartProcessing(int steps)$/;"	f
TeFillCellStepWriting	functions/TeCellAlgorithms.cpp	/^void TeFillCellStepWriting()$/;"	f
TeFindAndMoveClosedRings	kernel/TeOverlayUtils.cpp	/^void TeOVERLAY::TeFindAndMoveClosedRings(TeLineIndex& fragmentsIndex, vector<TeLinearRing>& rings)$/;"	f	class:TeOVERLAY
TeFindBaricenter	kernel/TeCentroid.cpp	/^TeFindBaricenter ( const TeLinearRing& ring )$/;"	f
TeFindCentroid	kernel/TeCentroid.cpp	/^TeFindCentroid (const TeLine2D& line )$/;"	f
TeFindCentroid	kernel/TeCentroid.cpp	/^TeFindCentroid(TeMultiGeometry& mGeom )$/;"	f
TeFindCentroid	kernel/TeCentroid.cpp	/^TeFindCentroid(TePointSet& points)$/;"	f
TeFindCentroid	kernel/TeCentroid.cpp	/^TeFindCentroid(TeTextSet& texts)$/;"	f
TeFindCentroid	kernel/TeCentroid.cpp	/^TeFindCentroid(const TeCell& c) $/;"	f
TeFindCentroid	kernel/TeCentroid.cpp	/^TeFindCentroid(const TeCellSet& s)$/;"	f
TeFindCentroid	kernel/TeCentroid.cpp	/^TeFindCentroid(const TeLineSet& s)$/;"	f
TeFindCentroid	kernel/TeCentroid.cpp	/^TeFindCentroid(const TePoint& p) $/;"	f
TeFindCentroid	kernel/TeCentroid.cpp	/^TeFindCentroid(const TePolygon& poly )$/;"	f
TeFindCentroid	kernel/TeCentroid.cpp	/^TeFindCentroid(const TePolygonSet& s)$/;"	f
TeFindCentroid	kernel/TeCentroid.cpp	/^TeFindCentroid(const TeText& t) $/;"	f
TeFindCentroid	kernel/TeGeometryAlgorithms.cpp	/^bool TeFindCentroid(const TeLine2D &line, TeCoord2D &p)$/;"	f
TeFindCentroidConcavePolygon	kernel/TeCentroid.cpp	/^TeFindCentroidConcavePolygon ( const TePolygon& poly )$/;"	f
TeFindInitialAng	kernel/TeBufferRegion.cpp	/^inline void TeFindInitialAng(TeCoord2D& first, TeCoord2D& last, double& ang, bool& didswap)$/;"	f	namespace:TeBUFFERREGION
TeFindObjectCentroid	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeFindObjectCentroid (TeMultiGeometry& mGeom, TeGeomRep rep, TeCoord2D& p)$/;"	f
TeFindObjectsCentroid	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeFindObjectsCentroid (TeSTElementSet* objects, const string& object_id, TeGeomRep rep, TeCoord2D& p)$/;"	f
TeFindRepresentation	kernel/TeRepresentation.cpp	/^TeFindRepresentation(TeRepresPointerVectorIterator begin, TeRepresPointerVectorIterator end, TeGeomRep rep)$/;"	f
TeFindTheme	kernel/TeViewTreeUtils.cpp	/^TeTheme* TeFindTheme(TeViewTree& vtree, char* name, bool case_sensitive)$/;"	f
TeFindTriangleCenter	kernel/TeGeometryAlgorithms.cpp	/^bool TeFindTriangleCenter(const TeCoord2D& vert0, const TeCoord2D& vert1, const TeCoord2D& vert2, TeCoord2D& pc )$/;"	f
TeFireBird	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::TeFireBird()  $/;"	f	class:TeFireBird
TeFireBird	drivers/ado/TeAdoFireBird.h	/^class  EXPORT_WIN  TeFireBird : public TeAdo$/;"	c
TeFireBirdFactory	drivers/ado/TeAdoFireBird.h	/^    TeFireBirdFactory() : TeDatabaseFactory( std::string( "FireBirdAdo" ) ) {};      $/;"	f	class:TeFireBirdFactory
TeFireBirdFactory	drivers/ado/TeAdoFireBird.h	/^class TeFireBirdFactory : public TeDatabaseFactory$/;"	c
TeFireBirdFactory_instance	drivers/ado/TeAdoFireBird.h	/^  static TeFireBirdFactory TeFireBirdFactory_instance;$/;"	m	namespace:__anon69
TeFireBirdPortal	drivers/ado/TeAdoFireBird.cpp	/^TeFireBirdPortal::TeFireBirdPortal ( TeDatabase*  pDatabase) $/;"	f	class:TeFireBirdPortal
TeFireBirdPortal	drivers/ado/TeAdoFireBird.cpp	/^TeFireBirdPortal::TeFireBirdPortal ()$/;"	f	class:TeFireBirdPortal
TeFireBirdPortal	drivers/ado/TeAdoFireBird.h	/^class  EXPORT_WIN  TeFireBirdPortal : public TeAdoPortal$/;"	c
TeFirebird	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::TeFirebird() :$/;"	f	class:TeFirebird
TeFirebird	drivers/Firebird/TeFirebird.h	/^class TLFIREBIRD_DLL TeFirebird : public TeDatabase$/;"	c
TeFirebirdConnection	drivers/Firebird/TeFirebirdConnection.cpp	/^TeFirebirdConnection::TeFirebirdConnection() :$/;"	f	class:TeFirebirdConnection
TeFirebirdConnection	drivers/Firebird/TeFirebirdConnection.h	/^class TLFIREBIRD_DLL TeFirebirdConnection : public TeConnection$/;"	c
TeFirebirdFactory	drivers/Firebird/TeFirebird.h	/^    TeFirebirdFactory() : TeDatabaseFactory( std::string( "Firebird" ) ) {};      $/;"	f	class:TeFirebirdFactory
TeFirebirdFactory	drivers/Firebird/TeFirebird.h	/^class TLFIREBIRD_DLL TeFirebirdFactory : public TeDatabaseFactory$/;"	c
TeFirebirdFactory_instance	drivers/Firebird/TeFirebird.h	/^  static TeFirebirdFactory TeFirebirdFactory_instance;$/;"	m	namespace:__anon67
TeFirebirdPortal	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::TeFirebirdPortal ( const TeFirebirdPortal& p) : $/;"	f	class:TeFirebirdPortal
TeFirebirdPortal	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::TeFirebirdPortal (TeFirebird* firebird) :$/;"	f	class:TeFirebirdPortal
TeFirebirdPortal	drivers/Firebird/TeFirebird.h	/^class TLFIREBIRD_DLL TeFirebirdPortal  : public TeDatabasePortal$/;"	c
TeFirstMoment	kernel/TeStatistics.h	/^double TeFirstMoment (It begin, It end)$/;"	f
TeFirstMoment	kernel/TeStatistics.h	/^double TeFirstMoment (It begin, It end, int dim)$/;"	f
TeFixOrientation	kernel/TeOverlayUtils.cpp	/^void TeOVERLAY::TeFixOrientation(TePolygonSet& polSet, const short& outerOrientationToReverse, const short& innerOrientationToReverse)$/;"	f	class:TeOVERLAY
TeFixedGeomDynAttr	kernel/TeDataTypes.h	/^{	TeAllAttrTypes, TeAttrStatic, TeAttrMedia, TeAttrExternal, TeAttrEvent, TeFixedGeomDynAttr, $/;"	e	enum:TeAttrTableType
TeFragmentBoundary	kernel/TeFragmentation.cpp	/^void TeFragmentBoundary(const TeLineSet& lines, TeINTERSECTOR2::TeVectorBoundaryIP& ips, TeLineSet& boundaryFragments, TeLineSet& fragments)$/;"	f
TeFragmentBoundary	kernel/TeFragmentation.cpp	/^void TeFragmentBoundary(const TePolygonSet& polygons, TeINTERSECTOR2::TeVectorBoundaryIP& ips, TeLineSet& boundaryFragments, vector<pair<unsigned int, unsigned int> >& boundaryFragmentsIds, TeLineSet& fragments, vector<pair<unsigned int, unsigned int> >& fragmentsIds)$/;"	f
TeFragmentSegmentByNonOverlapping	kernel/TeFragmentation.cpp	/^inline void TeFragmentSegmentByNonOverlapping(const TeCoord2D& s1, const TeCoord2D& \/* s2 *\/,$/;"	f
TeFragmentSegmentByOverlapping	kernel/TeFragmentation.cpp	/^inline void TeFragmentSegmentByOverlapping(const TeCoord2D& s1, const TeCoord2D& \/* s2 *\/,$/;"	f
TeFullElementarBuffer	kernel/TeBufferRegion.cpp	/^inline void TeFullElementarBuffer(TeCoord2D first, TeCoord2D last, const double& bufferDistance,$/;"	f	namespace:TeBUFFERREGION
TeFunctionCallThreadJob	kernel/TeFunctionCallThreadJob.cpp	/^TeFunctionCallThreadJob::TeFunctionCallThreadJob() $/;"	f	class:TeFunctionCallThreadJob
TeFunctionCallThreadJob	kernel/TeFunctionCallThreadJob.h	/^class TL_DLL TeFunctionCallThreadJob : public TeThreadJob$/;"	c
TeFusionIndexes	image_processing/TePDIFusionIndexes.hpp	/^      enum TeFusionIndexes {CC, BIAS, VARDIF, SDD, UIQI, RMSE, ERGAS, SIMM, SERGAS, SCC};$/;"	g	class:TePDIFusionIndexes
TeGDALDecoder	drivers/gdal/TeGDALDecoder.cpp	/^TeGDALDecoder::TeGDALDecoder() :$/;"	f	class:TeGDALDecoder
TeGDALDecoder	drivers/gdal/TeGDALDecoder.cpp	/^TeGDALDecoder::TeGDALDecoder(const TeRasterParams& par) :$/;"	f	class:TeGDALDecoder
TeGDALDecoder	drivers/gdal/TeGDALDecoder.h	/^class TEGDAL_DLL TeGDALDecoder : public TeDecoderVirtualMemory $/;"	c
TeGDALDecoderFactory	drivers/gdal/TeGDALDecoder.cpp	/^TeGDALDecoderFactory::TeGDALDecoderFactory(const string& name) : TeDecoderFactory(name) $/;"	f	class:TeGDALDecoderFactory
TeGDALDecoderFactory	drivers/gdal/TeGDALDecoder.h	/^class TEGDAL_DLL TeGDALDecoderFactory : public TeDecoderFactory$/;"	c
TeGDALDriverInfo	drivers/gdal/TeGDALDecoder.cpp	/^TeGDALDriverInfo::TeGDALDriverInfo() :$/;"	f	class:TeGDALDriverInfo
TeGDALDriverInfo	drivers/gdal/TeGDALDecoder.h	/^class TEGDAL_DLL TeGDALDriverInfo$/;"	c
TeGDriverFactory	kernel/TeGDriverFactory.cpp	/^TeGDriverFactory::TeGDriverFactory(const string & facName) :$/;"	f	class:TeGDriverFactory
TeGDriverFactory	kernel/TeGDriverFactory.h	/^class TL_DLL TeGDriverFactory : public TeAbstractFactory<TeGeoDataDriver, TeGDriverParams, string> $/;"	c
TeGDriverParams	kernel/TeGDriverFactory.cpp	/^TeGDriverParams::TeGDriverParams(const string & fileType, const string & fileName) $/;"	f	class:TeGDriverParams
TeGDriverParams	kernel/TeGDriverFactory.h	/^struct TL_DLL TeGDriverParams $/;"	s
TeGEOMETRYNONE	kernel/TeDataTypes.h	/^	TeRASTERFILE = 1024, TeGEOMETRYNONE = 2048, TeSHAPEFILE = 4096, TeCOVERAGE = 8192};$/;"	e	enum:TeGeomRep
TeGPMConstructionStrategy	kernel/TeDataTypes.h	/^enum TeGPMConstructionStrategy { TeAdjacencyStrategy, TeDistanceStrategy, TeNearestNeighboursStrategy,$/;"	g
TeGPMImplementation	kernel/TeDataTypes.h	/^enum TeGPMImplementation { TeGraphBreymann };$/;"	g
TeGPMSlicingStrategy	kernel/TeDataTypes.h	/^enum TeGPMSlicingStrategy { TeNoSlicingStrategy, TeZonesSlicingStrategy };$/;"	g
TeGPMWeightsStrategy	kernel/TeDataTypes.h	/^enum TeGPMWeightsStrategy { TeNoWeightsStrategy, TeInverseDistanceStrategy, $/;"	g
TeGREENCHANNEL	kernel/TeRasterTransform.h	/^	enum TeRGBChannels { TeREDCHANNEL=0, TeGREENCHANNEL=1, TeBLUECHANNEL=2 };$/;"	e	enum:TeRasterTransform::TeRGBChannels
TeGStatistics	stat/TeSpatialStatistics.h	/^TeGStatistics (Set* elemSet, Matrix* proxMatrix, int indexAttr)$/;"	f
TeGTFactory	kernel/TeGTFactory.cpp	/^TeGTFactory::TeGTFactory( const std::string& factoryName )$/;"	f	class:TeGTFactory
TeGTFactory	kernel/TeGTFactory.h	/^  class TL_DLL TeGTFactory : $/;"	c
TeGTM	drivers/GTM/TeGTM.cpp	/^TeGTM::TeGTM(FILE* file)$/;"	f	class:TeGTM
TeGTM	drivers/GTM/TeGTM.h	/^class TDKEB_DGNIMPORT_API TeGTM$/;"	c
TeGTMGridDatum	drivers/GTM/TeGTM.cpp	/^TeGTMGridDatum::TeGTMGridDatum()$/;"	f	class:TeGTMGridDatum
TeGTMGridDatum	drivers/GTM/TeGTM.h	/^class TDKEB_DGNIMPORT_API TeGTMGridDatum$/;"	c
TeGTMHeader	drivers/GTM/TeGTM.cpp	/^TeGTMHeader::TeGTMHeader()$/;"	f	class:TeGTMHeader
TeGTMHeader	drivers/GTM/TeGTM.h	/^class TDKEB_DGNIMPORT_API TeGTMHeader$/;"	c
TeGTMInformationImages	drivers/GTM/TeGTM.cpp	/^TeGTMInformationImages::TeGTMInformationImages()$/;"	f	class:TeGTMInformationImages
TeGTMInformationImages	drivers/GTM/TeGTM.h	/^class TDKEB_DGNIMPORT_API TeGTMInformationImages$/;"	c
TeGTMLayers	drivers/GTM/TeGTM.cpp	/^TeGTMLayers::TeGTMLayers()$/;"	f	class:TeGTMLayers
TeGTMLayers	drivers/GTM/TeGTM.h	/^class TDKEB_DGNIMPORT_API TeGTMLayers$/;"	c
TeGTMRoutes	drivers/GTM/TeGTM.cpp	/^TeGTMRoutes::TeGTMRoutes()$/;"	f	class:TeGTMRoutes
TeGTMRoutes	drivers/GTM/TeGTM.h	/^class TDKEB_DGNIMPORT_API TeGTMRoutes$/;"	c
TeGTMTrackLogStyles	drivers/GTM/TeGTM.cpp	/^TeGTMTrackLogStyles::TeGTMTrackLogStyles()$/;"	f	class:TeGTMTrackLogStyles
TeGTMTrackLogStyles	drivers/GTM/TeGTM.h	/^class TDKEB_DGNIMPORT_API TeGTMTrackLogStyles$/;"	c
TeGTMTrackLogs	drivers/GTM/TeGTM.cpp	/^TeGTMTrackLogs::TeGTMTrackLogs()$/;"	f	class:TeGTMTrackLogs
TeGTMTrackLogs	drivers/GTM/TeGTM.h	/^class TDKEB_DGNIMPORT_API TeGTMTrackLogs$/;"	c
TeGTMUserIcons	drivers/GTM/TeGTM.cpp	/^TeGTMUserIcons::TeGTMUserIcons()$/;"	f	class:TeGTMUserIcons
TeGTMUserIcons	drivers/GTM/TeGTM.h	/^class TDKEB_DGNIMPORT_API TeGTMUserIcons$/;"	c
TeGTMWaypoints	drivers/GTM/TeGTM.cpp	/^TeGTMWaypoints::TeGTMWaypoints()$/;"	f	class:TeGTMWaypoints
TeGTMWaypoints	drivers/GTM/TeGTM.h	/^class TDKEB_DGNIMPORT_API TeGTMWaypoints$/;"	c
TeGTMWaypointsStyles	drivers/GTM/TeGTM.cpp	/^TeGTMWaypointsStyles::TeGTMWaypointsStyles()$/;"	f	class:TeGTMWaypointsStyles
TeGTMWaypointsStyles	drivers/GTM/TeGTM.h	/^class TDKEB_DGNIMPORT_API TeGTMWaypointsStyles$/;"	c
TeGTParams	kernel/TeGTParams.cpp	/^TeGTParams::TeGTParams( const TeGTParams& external )$/;"	f	class:TeGTParams
TeGTParams	kernel/TeGTParams.cpp	/^TeGTParams::TeGTParams()$/;"	f	class:TeGTParams
TeGTParams	kernel/TeGTParams.h	/^  class TL_DLL TeGTParams$/;"	c
TeGaussianSemivarModel	stat/TeSemivarModelFactory.h	/^		TeGaussianSemivarModel(const TeSemivarModelParams& params){$/;"	f	class:TeGaussianSemivarModel
TeGaussianSemivarModel	stat/TeSemivarModelFactory.h	/^class STAT_DLL TeGaussianSemivarModel : public TeSemivarModel$/;"	c
TeGaussianSemivar_Factory	stat/TeSemivarModelFactory.h	/^	TeGaussianSemivar_Factory (const string& name) : TeSemivarModelFactory(name){}$/;"	f	class:TeGaussianSemivar_Factory
TeGaussianSemivar_Factory	stat/TeSemivarModelFactory.h	/^class STAT_DLL TeGaussianSemivar_Factory : public TeSemivarModelFactory$/;"	c
TeGeneralizedProxMatrix	kernel/TeGeneralizedProxMatrix.h	/^	TeGeneralizedProxMatrix ():$/;"	f	class:TeGeneralizedProxMatrix
TeGeneralizedProxMatrix	kernel/TeGeneralizedProxMatrix.h	/^	TeGeneralizedProxMatrix (const int& id, const string& tableName, TeProxMatrixImplementation* imp, TeProxMatrixWeightsStrategy* ws):$/;"	f	class:TeGeneralizedProxMatrix
TeGeneralizedProxMatrix	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::TeGeneralizedProxMatrix (TeProxMatrixConstructionStrategy<Set>* sc,  TeProxMatrixWeightsStrategy* sw, $/;"	f	class:TeGeneralizedProxMatrix
TeGeneralizedProxMatrix	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::TeGeneralizedProxMatrix(TeSTElementSet* objects, TeGeomRep geom_type, const TeGPMImplementation& imp_type)$/;"	f	class:TeGeneralizedProxMatrix
TeGeneralizedProxMatrix	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::TeGeneralizedProxMatrix(const TeGeneralizedProxMatrix<Set>& pm)$/;"	f	class:TeGeneralizedProxMatrix
TeGeneralizedProxMatrix	kernel/TeGeneralizedProxMatrix.h	/^class TeGeneralizedProxMatrix  $/;"	c
TeGenerateArc	kernel/TeGeometryAlgorithms.cpp	/^bool TeGenerateArc(TePoint& p1, TePoint& p2, TePoint& p3, TeLine2D& arcOut, const short& NPoints)$/;"	f
TeGenerateCircle	kernel/TeGeometryAlgorithms.cpp	/^bool TeGenerateCircle(const TePoint& center, const double& radius, TeLine2D& circle, const short& NPoints)$/;"	f
TeGeoDataDriver	kernel/TeGeoDataDriver.cpp	/^TeGeoDataDriver::TeGeoDataDriver() $/;"	f	class:TeGeoDataDriver
TeGeoDataDriver	kernel/TeGeoDataDriver.h	/^class TL_DLL TeGeoDataDriver$/;"	c
TeGeoDataSet	kernel/TeGeoDataSet.cpp	/^TeGeoDataSet::TeGeoDataSet()$/;"	f	class:TeGeoDataSet
TeGeoDataSet	kernel/TeGeoDataSet.h	/^class TL_DLL TeGeoDataSet$/;"	c
TeGeoFileInfo	kernel/TeGeoFileInfo.cpp	/^TeGeoFileInfo::TeGeoFileInfo() :$/;"	f	class:TeGeoFileInfo
TeGeoFileInfo	kernel/TeGeoFileInfo.h	/^class TL_DLL TeGeoFileInfo$/;"	c
TeGeoOpAdd	functions/TeGeoProcessingFunctions.cpp	/^bool TeGeoOpAdd(TeLayer* newLayer, TeTheme* theme, vector<TeTheme*> themeVec, $/;"	f
TeGeoOpAggregation	functions/TeGeoProcessingFunctions.cpp	/^bool TeGeoOpAggregation(TeLayer* newLayer, TeTheme* theme, vector<string>& agregAttrVec, $/;"	f
TeGeoOpAssignByLocationCollect	functions/TeGeoProcessingFunctions.cpp	/^bool TeGeoOpAssignByLocationCollect(TeTheme* restrTheme, TeTheme* srcTheme, $/;"	f
TeGeoOpAssignDataLocationDistribute	functions/TeGeoProcessingFunctions.cpp	/^bool TeGeoOpAssignDataLocationDistribute(TeTheme* themeMod, TeTheme* theme, const string& tableName, $/;"	f
TeGeoOpBuffer	functions/TeGeoProcessingFunctions.cpp	/^bool TeGeoOpBuffer(TeLayer* newLayer, TeTheme* themeIn, const TeSelectedObjects& selOb, const TeBUFFERREGION::TeBufferType& bufferType, const double& bufferDistance, $/;"	f
TeGeoOpNearestNeighbour	functions/TeGeoProcessingFunctions.cpp	/^bool TeGeoOpNearestNeighbour(TeTheme* inputTheme, TeSelectedObjects iselObj, $/;"	f
TeGeoOpOverlayDifference	functions/TeGeoProcessingFunctions.cpp	/^bool TeGeoOpOverlayDifference(TeLayer* newLayer, TeTheme* theme1, $/;"	f
TeGeoOpOverlayIntersection	functions/TeGeoProcessingFunctions.cpp	/^TeGeoOpOverlayIntersection(TeLayer* newLayer, TeTheme* theme, TeTheme* themeTrim, TeSelectedObjects selObTrim, double backValue, TeAsciiFile* logFile)$/;"	f
TeGeoOpOverlayIntersection	functions/TeGeoProcessingFunctions.cpp	/^bool TeGeoOpOverlayIntersection(TeLayer* newLayer, TeTheme* theme, TeTheme* themeTrim, $/;"	f
TeGeoOpOverlayUnion	functions/TeGeoProcessingFunctions.cpp	/^bool TeGeoOpOverlayUnion(TeLayer* newLayer, TeTheme* theme, TeTheme* themeOverlay, $/;"	f
TeGeocodeTableMetadata	functions/TeAddressLocator.h	/^struct TLFUNCTIONS_DLL TeGeocodeTableMetadata$/;"	s
TeGeocoderDictionary	functions/TeAddressLocator.h	/^typedef multimap<string, string> TeGeocoderDictionary;$/;"	t
TeGeocodingData	kernel/TeDataTypes.h	/^	TeDynGeomDynAttr, TeGeomAttrLinkTime, TeGeocodingData };$/;"	e	enum:TeAttrTableType
TeGeomAttrLinkTime	kernel/TeDataTypes.h	/^	TeDynGeomDynAttr, TeGeomAttrLinkTime, TeGeocodingData };$/;"	e	enum:TeAttrTableType
TeGeomComposite	kernel/TeGeometry.h	/^	TeGeomComposite ( const TeGeomComposite& other ) : TeVector()$/;"	f	class:TeGeomComposite
TeGeomComposite	kernel/TeGeometry.h	/^	TeGeomComposite()$/;"	f	class:TeGeomComposite
TeGeomComposite	kernel/TeGeometry.h	/^class TeGeomComposite: public TeVector$/;"	c
TeGeomRep	kernel/TeDataTypes.h	/^enum TeGeomRep $/;"	g
TeGeomRepVisualMap	kernel/TeLegendEntry.h	/^typedef map<TeGeomRep,TeVisual*> TeGeomRepVisualMap;$/;"	t
TeGeomSingle	kernel/TeGeometry.h	/^	TeGeomSingle ( const TeGeomSingle& other ) : TeVector()$/;"	f	class:TeGeomSingle
TeGeomSingle	kernel/TeGeometry.h	/^	TeGeomSingle<T> (const T& elem ): elem_ ( elem  ) $/;"	f	class:TeGeomSingle
TeGeomSingle	kernel/TeGeometry.h	/^	TeGeomSingle<T>() {}$/;"	f	class:TeGeomSingle
TeGeomSingle	kernel/TeGeometry.h	/^class TeGeomSingle : public TeVector$/;"	c
TeGeomValuePair	kernel/TeCoverageDecoder.h	/^    TeGeomValuePair(){}$/;"	f	struct:TeGeomValuePair
TeGeomValuePair	kernel/TeCoverageDecoder.h	/^    TeGeomValuePair(const T& geom,$/;"	f	struct:TeGeomValuePair
TeGeomValuePair	kernel/TeCoverageDecoder.h	/^struct TeGeomValuePair$/;"	s
TeGeometricTransformation	kernel/TeGeometricTransformation.cpp	/^TeGeometricTransformation::TeGeometricTransformation()$/;"	f	class:TeGeometricTransformation
TeGeometricTransformation	kernel/TeGeometricTransformation.h	/^  class TL_DLL TeGeometricTransformation {$/;"	c
TeGeometry	kernel/TeGeometry.h	/^	TeGeometry ( const TeGeometry& other ) $/;"	f	class:TeGeometry
TeGeometry	kernel/TeGeometry.h	/^	TeGeometry(): box_ ( TeMAXFLOAT, TeMAXFLOAT, -TeMAXFLOAT, -TeMAXFLOAT ),$/;"	f	class:TeGeometry
TeGeometry	kernel/TeGeometry.h	/^class TL_DLL TeGeometry$/;"	c
TeGeometryAlgorithmsPrecision	kernel/TeGeometryAlgorithms.h	/^class TL_DLL TeGeometryAlgorithmsPrecision$/;"	c
TeGeometryArea	kernel/TeGeometryAlgorithms.cpp	/^template<> double TeGeometryArea(const TeBox& b)$/;"	f
TeGeometryArea	kernel/TeGeometryAlgorithms.cpp	/^template<> double TeGeometryArea(const TeMultiGeometry& mGeom)$/;"	f
TeGeometryArea	kernel/TeGeometryAlgorithms.cpp	/^template<> double TeGeometryArea(const TePolygon& p)$/;"	f
TeGeometryArea	kernel/TeGeometryAlgorithms.cpp	/^template<> double TeGeometryArea(const TePolygonSet& ps)$/;"	f
TeGeometryArea	kernel/TeGeometryAlgorithms.h	/^double TeGeometryArea(const T& \/* geom *\/)$/;"	f
TeGeometryNone	kernel/TeGeometry.h	/^class TL_DLL TeGeometryNone:  public TeGeometry$/;"	c
TeGeometryVect	kernel/TeDatabase.h	/^typedef vector<TeGeometry*> TeGeometryVect;$/;"	t
TeGetAccentuatedLowerVector	kernel/TeUtils.cpp	/^void TeGetAccentuatedLowerVector(std::vector<std::string> & lowerIn, std::vector<std::string> & lowerOut)$/;"	f
TeGetAccentuatedUpperVector	kernel/TeUtils.cpp	/^void TeGetAccentuatedUpperVector(std::vector<std::string> & upperIn, std::vector<std::string> & upperOut)$/;"	f
TeGetArea	kernel/TeSpatialOperations.cpp	/^bool TeGetArea(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIdsIn, TeDatabase* db, double& area)$/;"	f
TeGetAreaUnit	kernel/TeUtils.cpp	/^TeAreaUnits TeGetAreaUnit(const std::string& unitName)$/;"	f
TeGetAreaUnitName	kernel/TeUtils.cpp	/^std::string TeGetAreaUnitName(const TeAreaUnits& units)$/;"	f
TeGetBaseName	kernel/TeUtils.cpp	/^TeGetBaseName ( const char* value )$/;"	f
TeGetBuffer	kernel/TeSpatialOperations.cpp	/^bool TeGetBuffer(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIds, TeDatabase* db, TePolygonSet& bufferSet, double dist)$/;"	f
TeGetCenter	kernel/TeGeometryAlgorithms.cpp	/^bool TeGetCenter(TePoint p1, TePoint p2, TePoint p3, TePoint& center)$/;"	f
TeGetCentroid	kernel/TeSpatialOperations.cpp	/^bool TeGetCentroid(const string& actGeomTable, TeGeomRep actRep, TeDatabase* db, TePointSet& centroidSet, TeKeys& actIds, const string& actCollTable)$/;"	f
TeGetConvexHull	kernel/TeSpatialOperations.cpp	/^bool TeGetConvexHull(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIds, TeDatabase* db, TePolygonSet& convexHullSet)$/;"	f
TeGetDatumList	kernel/TeDatum.cpp	/^const char** TeGetDatumList()$/;"	f
TeGetDirFullFilesNames	kernel/TeUtils.cpp	/^TeGetDirFullFilesNames( const std::string& path,$/;"	f
TeGetDistance	kernel/TeSpatialOperations.cpp	/^bool TeGetDistance(const string& actGeomTable, TeGeomRep actRep, TeKeys& IdsIn, TeDatabase* db, double& distance)$/;"	f
TeGetEspecialCharsFixVector	kernel/TeUtils.cpp	/^void TeGetEspecialCharsFixVector(std::vector<std::string> & especialIn, std::vector<std::string> & especialOut)$/;"	f
TeGetExtension	kernel/TeUtils.cpp	/^TeGetExtension ( const char* value )$/;"	f
TeGetFileSize	kernel/TeUtils.cpp	/^unsigned long int TeGetFileSize( const std::string& filename )$/;"	f
TeGetFreePhysicalMemory	kernel/TeUtils.cpp	/^unsigned long int TeGetFreePhysicalMemory()$/;"	f
TeGetIntersections	kernel/TeGeometryAlgorithms.cpp	/^TeCoordPairVect	TeGetIntersections(const TePolygon &poly, const double& y)$/;"	f
TeGetLength	kernel/TeSpatialOperations.cpp	/^bool TeGetLength(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIdsIn, TeDatabase* db, double& length)$/;"	f
TeGetMiddlePoint	kernel/TeGeometryAlgorithms.cpp	/^void TeGetMiddlePoint(const TeCoord2D &first, const TeCoord2D &last, TeCoord2D &middle)$/;"	f
TeGetName	kernel/TeUtils.cpp	/^TeGetName ( const char* value )$/;"	f
TeGetOverlay	kernel/TeSpatialOperations.cpp	/^bool TeGetOverlay(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIds, TeDatabase* db, TeGeometryVect& geomVect, const short& operation)$/;"	f
TeGetPath	kernel/TeUtils.cpp	/^TeGetPath(const char* value)$/;"	f
TeGetPhysProcNumber	kernel/TeUtils.cpp	/^unsigned int TeGetPhysProcNumber()$/;"	f
TeGetPrecision	kernel/TeGeometryAlgorithms.cpp	/^double TeGetPrecision(TeProjection* proj)$/;"	f
TeGetProjInfo	kernel/TeProjection.cpp	/^const char** TeGetProjInfo()$/;"	f
TeGetRadius	kernel/TeGeometryAlgorithms.cpp	/^double TeGetRadius(TePoint& p1, TePoint& p2, TePoint& p3)$/;"	f
TeGetRasterMinMaxBounds	image_processing/TePDIUtils.cpp	/^  bool TeGetRasterMinMaxBounds( $/;"	f	namespace:TePDIUtils
TeGetRasterReqMem	image_processing/TePDIUtils.cpp	/^  unsigned long int TeGetRasterReqMem( TeRasterParams& params )$/;"	f	namespace:TePDIUtils
TeGetSHPInfo	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeGetSHPInfo(std::string shpfileName, unsigned int& nShapes, TeBox& box, TeGeomRep& rep)$/;"	f
TeGetSProjFromTeProjection	kernel/TeProjection.cpp	/^string TeGetSProjFromTeProjection(TeProjection* teproj)$/;"	f
TeGetTeProjectionFromSProj	kernel/TeProjection.cpp	/^TeProjection* TeGetTeProjectionFromSProj(const string& proj4)$/;"	f
TeGetTeProjectionFromWKT	kernel/TeProjection.cpp	/^TeGetTeProjectionFromWKT(const string& wkt)$/;"	f
TeGetTempFileName	kernel/TeUtils.cpp	/^bool TeGetTempFileName( std::string& filename )$/;"	f
TeGetTotalPhysicalMemory	kernel/TeUtils.cpp	/^unsigned long int TeGetTotalPhysicalMemory()$/;"	f
TeGetTotalVirtualMemory	kernel/TeUtils.cpp	/^unsigned long int TeGetTotalVirtualMemory()$/;"	f
TeGetUnit	kernel/TeUtils.cpp	/^TeUnits TeGetUnit(const std::string& unitName)$/;"	f
TeGetUnitName	kernel/TeUtils.cpp	/^std::string TeGetUnitName(const TeUnits& units)$/;"	f
TeGetUsedVirtualMemory	kernel/TeUtils.cpp	/^unsigned long int TeGetUsedVirtualMemory()$/;"	f
TeGetWKTFromTeProjection	kernel/TeProjection.cpp	/^TeGetWKTFromTeProjection(TeProjection* teproj)$/;"	f
TeGetWKTProejctionForPROJCS	kernel/TeProjection.cpp	/^std::string TeGetWKTProejctionForPROJCS(TeProjection* teproj)$/;"	f
TeGetWithinDistance	kernel/TeSpatialOperations.cpp	/^bool TeGetWithinDistance(const string& actGeomTable, TeGeomRep actRep, const TeCoord2D& point, TeKeysToDist& IdsDistOut,$/;"	f
TeGlobalBayesError	stat/TeBayesFunctions.h	/^enum TeGlobalBayesError {$/;"	g
TeGlobalBayesException	stat/TeBayesFunctions.h	/^  TeGlobalBayesException(TeGlobalBayesError e) {$/;"	f	class:TeGlobalBayesException
TeGlobalBayesException	stat/TeBayesFunctions.h	/^class STAT_DLL TeGlobalBayesException  {$/;"	c
TeGlobalEmpiricalBayes	stat/TeBayesFunctions.cpp	/^bool TeGlobalEmpiricalBayes(TeSTStatInstanceSet *rs, double rate)$/;"	f
TeGlobalMoranSignificance	stat/TeSpatialStatistics.h	/^TeGlobalMoranSignificance (Set* elemSet, Matrix* proxMatrix, int indexAttr,$/;"	f
TeGraphBreymann	kernel/TeDataTypes.h	/^enum TeGPMImplementation { TeGraphBreymann };$/;"	e	enum:TeGPMImplementation
TeGraphNetwork	kernel/TeNetwork.cpp	/^TeGraphNetwork:: TeGraphNetwork (TeLineSet& ls)  : graph_ (false)$/;"	f	class:TeGraphNetwork
TeGraphNetwork	kernel/TeNetwork.cpp	/^TeGraphNetwork:: TeGraphNetwork (TeLineSet& ls, map<string, double>& line_costs)  : graph_ (false)$/;"	f	class:TeGraphNetwork
TeGraphNetwork	kernel/TeNetwork.cpp	/^TeGraphNetwork:: TeGraphNetwork (TeSTElementSet& stos, string& attrName)  : graph_ (false)$/;"	f	class:TeGraphNetwork
TeGraphNetwork	kernel/TeNetwork.h	/^	TeGraphNetwork() : graph_ (true) {}; \/\/ directed graph$/;"	f	class:TeGraphNetwork
TeGraphNetwork	kernel/TeNetwork.h	/^class TL_DLL TeGraphNetwork$/;"	c
TeGraphPlot	kernel/TeGraph.cpp	/^TeGraphPlot :: TeGraphPlot ()$/;"	f	class:TeGraphPlot
TeGraphPlot	kernel/TeGraph.h	/^class TL_DLL TeGraphPlot$/;"	c
TeGridElement	stat/TeStatDataStructures.h	/^	TeGridElement(TeRaster* rst=0, int col=0, int lin=0):$/;"	f	class:TeGridElement
TeGridElement	stat/TeStatDataStructures.h	/^class STAT_DLL TeGridElement$/;"	c
TeGridIndex	kernel/TeGridIndex.h	/^		TeGridIndex()$/;"	f	class:TeSAM::TeGridIndex
TeGridIndex	kernel/TeGridIndex.h	/^		TeGridIndex(const TeBox& b, const double& resX, const double& resY)$/;"	f	class:TeSAM::TeGridIndex
TeGridIndex	kernel/TeGridIndex.h	/^class TL_DLL TeGridIndex$/;"	c	namespace:TeSAM
TeGroupByEqualStep	kernel/TeGroupingAlgorithms.cpp	/^TeGroupByEqualStep(double min, double max, int nstep, vector<TeSlice>& result, int precision)$/;"	f
TeGroupByEqualStep	kernel/TeGroupingAlgorithms.h	/^void TeGroupByEqualStep(iterator begin, iterator end, int nstep, vector<TeSlice>& result,$/;"	f
TeGroupByQuantil	kernel/TeGroupingAlgorithms.h	/^void TeGroupByQuantil(iterator begin, iterator end, int nstep, vector<TeSlice>& result,$/;"	f
TeGroupByStdDev	kernel/TeGroupingAlgorithms.h	/^void TeGroupByStdDev(iterator begin, iterator end, double ndev, vector<TeSlice>& result, string& rmean,$/;"	f
TeGroupByUniqueValue	kernel/TeGroupingAlgorithms.cpp	/^TeGroupByUniqueValue(vector<string>& vec, TeAttrDataType tipo, vector<TeSlice>& result, int precision)$/;"	f
TeGrouped	kernel/TeDataTypes.h	/^	TeSelectedByPointingAndQuery, TeSelectedByPointingOrQuery, TeGrouped, TeNotGrouped };$/;"	e	enum:TeSelectedObjects
TeGrouping	kernel/TeAbstractTheme.h	/^	TeGrouping(TeAttributeRep att=TeAttributeRep(), const string& normAttr="", $/;"	f	struct:TeGrouping
TeGrouping	kernel/TeAbstractTheme.h	/^	TeGrouping(const TeGrouping& other)$/;"	f	struct:TeGrouping
TeGrouping	kernel/TeAbstractTheme.h	/^struct TL_DLL TeGrouping$/;"	s
TeGroupingAttr	kernel/TeAttribute.h	/^typedef vector< pair<TeAttributeRep, TeStatisticType> > TeGroupingAttr;$/;"	t
TeGroupingMode	kernel/TeDataTypes.h	/^enum TeGroupingMode$/;"	g
TeHOUR	kernel/TeDataTypes.h	/^enum TeChronon {	TeNOCHRONON, TeSECOND, TeMINUTE, TeHOUR, TeDAY, TeMONTH, TeYEAR,$/;"	e	enum:TeChronon
TeHOUROFDAY	kernel/TeDataTypes.h	/^					TeHOUROFDAY, TeMINUTEOFHOUR, TeSECONDOFMINUTE };$/;"	e	enum:TeChronon
TeHasToRemap	kernel/TeVectorRemap.cpp	/^bool TeHasToRemap(TeProjection* projection1, TeProjection* projection2)$/;"	f
TeHectares	kernel/TeDataTypes.h	/^enum TeAreaUnits { TeUndefinedAreaUnit, TeSquareMeters, TeSquareKilometers, TeHectares, TeSquareMillimeters, TeSquareCentimeters, TeSquareMiles, TeSquareInches, TeSquareFeet,};$/;"	e	enum:TeAreaUnits
TeHemisphere	kernel/TeProjection.h	/^enum TeHemisphere$/;"	g
TeHistogram	kernel/TeStatistics.h	/^typedef map<double, int> TeHistogram;$/;"	t
TeHoareFind	kernel/TeKdTree.h	/^void TeHoareFind(CONTAINER& A, const unsigned int& kthElement, const unsigned int& firstElement, const unsigned int& lastElement,  const COMPFUNCTOR& compFunctor)$/;"	f	namespace:TeSAM
TeINSIDE	kernel/TeDefines.h	175;"	d
TeINSIDEBUFFER	kernel/TeBufferRegion.h	/^	enum TeBufferType { TeINSIDEBUFFER, TeOUTSIDEBUFFER, TeINSIDEOUTSIDEBUFFER };$/;"	e	enum:TeBUFFERREGION::TeBufferType
TeINSIDEOUTSIDEBUFFER	kernel/TeBufferRegion.h	/^	enum TeBufferType { TeINSIDEBUFFER, TeOUTSIDEBUFFER, TeINSIDEOUTSIDEBUFFER };$/;"	e	enum:TeBUFFERREGION::TeBufferType
TeINT	kernel/TeDataTypes.h	/^{TeSTRING, TeREAL, TeINT, TeDATETIME, TeBLOB, TeOBJECT, TeCHARACTER, TeUNKNOWN, TeUNSIGNEDINT,$/;"	e	enum:TeAttrDataType
TeINTEGER	kernel/TeDataTypes.h	/^{	TeBIT, TeUNSIGNEDCHAR, TeCHAR, TeUNSIGNEDSHORT, TeSHORT, TeINTEGER, TeUNSIGNEDLONG, TeLONG, TeFLOAT, TeDOUBLE };$/;"	e	enum:TeDataType
TeINTERIORBOUNDARY	kernel/TeDefines.h	190;"	d
TeINTERIOREXTERIOR	kernel/TeDefines.h	191;"	d
TeINTERIORINTERIOR	kernel/TeDefines.h	189;"	d
TeINTERSECTION	kernel/TeDefines.h	215;"	d
TeINTERSECTOR2	kernel/TeIntersector.h	/^namespace TeINTERSECTOR2$/;"	n
TeINTERSECTS	kernel/TeDataTypes.h	/^	TeOVERLAPS = 16, TeCONTAINS = 32, TeINTERSECTS = 64, TeEQUALS = 128, TeCOVERS = 256,$/;"	e	enum:TeSpatialRelation
TeIPAux	kernel/TeFragmentation.cpp	/^	TeIPAux(const double& x, const double& y, const int& t)$/;"	f	struct:TeIPAux
TeIPAux	kernel/TeFragmentation.cpp	/^struct TeIPAux$/;"	s	file:
TeISNAN	kernel/TeDefines.h	227;"	d
TeISNAN	kernel/TeDefines.h	230;"	d
TeImportBNA	functions/TeImportBNA.cpp	/^TeLayer* TeImportBNA(const string& bnaFileName, TeDatabase* db, const string& layerName, const std::string& linkName)$/;"	f
TeImportBNA	functions/TeImportBNA.cpp	/^bool TeImportBNA(TeLayer* layer, const string& bnaFileName, string attrTableName,$/;"	f
TeImportCSVFile	functions/TeImportCSV.cpp	/^bool TeImportCSVFile(const string& csvFileName, TeTable& attrTable, TeDatabase* db, TeLayer* layer, $/;"	f
TeImportCSVFile	functions/TeImportCSV.cpp	/^bool TeImportCSVFile(const string& csvFileName, const int& attributeX, const int& attributeY, $/;"	f
TeImportDBFIndexes	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeImportDBFIndexes(const string& shpFileName, vector<string>& indexVect, const string objectIdAttr )$/;"	f
TeImportDBFIndexes	drivers/shapelib/TeImportDBF.cpp	/^TeImportDBFIndexes(const string& shpFileName, vector<string>& indexVect, const string objectIdAttr )$/;"	f
TeImportDBFTable	drivers/shapelib/TeDriverSHPDBF.cpp	/^bool TeImportDBFTable(const string& dbFileName,TeDatabase* db, TeLayer* layer,TeAttrTableType tableType, string objectIdAtt)$/;"	f
TeImportDBFTable	drivers/shapelib/TeImportDBF.cpp	/^bool TeImportDBFTable(const string& dbFileName,TeDatabase* db, TeLayer* layer,TeAttrTableType tableType, string objectIdAtt)$/;"	f
TeImportGEO	functions/TeImportGeo.cpp	/^TeImportGEO(TeLayer* layer, const string& geoFileName, string attrTableName, unsigned int chunckSize)$/;"	f
TeImportGEO	functions/TeImportGeo.cpp	/^TeImportGEO(const string& geoFileName, TeDatabase* db, const string& layerName)$/;"	f
TeImportGeoAttributes	functions/TeImportGeo.cpp	/^TeImportGeoAttributes(TeLayer* layer,const string& geoFileName, string attrTableName, unsigned  int chunckSize)$/;"	f
TeImportGeoGeometries	functions/TeImportGeo.cpp	/^TeImportGeoGeometries ( TeLayer* layer, const string& geoFileName, unsigned int chunckSize)$/;"	f
TeImportGeometriesToLayer	functions/TeLayerFunctions.h	/^bool TeImportGeometriesToLayer(TeLayer* layer, G& geomSet)$/;"	f
TeImportMIF	functions/TeImportMIF.cpp	/^TeImportMIF(TeLayer* layer, const string& mifFileName, string attrTableName, $/;"	f
TeImportMIF	functions/TeImportMIF.cpp	/^TeLayer* TeImportMIF(const string& mifFileName, TeDatabase* db, const string& layerName)$/;"	f
TeImportMIFGeometries	functions/TeImportMIF.cpp	/^TeImportMIFGeometries(TeLayer* layer,const string& mifFileName, $/;"	f
TeImportOGR	drivers/gdal/TeOGRExportImportFunctions.cpp	/^bool TeImportOGR(TeLayer* lrInput, const std::string& fileName, const std::string& linkName, const int& chunkSize)$/;"	f
TeImportRaster	kernel/TeImportRaster.cpp	/^TeImportRaster (const string& layerName, TeRaster* rasterIn, TeDatabase* database)$/;"	f
TeImportRaster	kernel/TeImportRaster.cpp	/^bool TeImportRaster (TeLayer* layer, TeRaster* rasterIn, $/;"	f
TeImportSHPGeometries	drivers/shapelib/TeImportSHP.cpp	/^TeImportSHPGeometries(TeLayer* layer,const string& shpFileName, $/;"	f
TeImportSPR	functions/TeImportSPR.cpp	/^TeImportSPR ( TeLayer& layer, const string& fileName )$/;"	f
TeImportShape	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeLayer* TeImportShape(const string& shpFileName, TeDatabase* db, const string& layerName)$/;"	f
TeImportShape	drivers/shapelib/TeDriverSHPDBF.cpp	/^bool TeImportShape (TeLayer* layer, const string& shpFileName, string attrTableName,  $/;"	f
TeImportShape	drivers/shapelib/TeImportSHP.cpp	/^TeLayer* TeImportShape(const string& shpFileName, TeDatabase* db, const string& layerName)$/;"	f
TeImportShape	drivers/shapelib/TeImportSHP.cpp	/^bool TeImportShape (TeLayer* layer, const string& shpFileName, string attrTableName,  $/;"	f
TeImportShapeGeometry	drivers/shapelib/TeDriverSHPDBF.cpp	/^bool TeImportShapeGeometry (TeLayer* layer, const string& shpFileName, string attrTableName,  $/;"	f
TeImportShapeGeometry	drivers/shapelib/TeImportSHP.cpp	/^bool TeImportShapeGeometry (TeLayer* layer, const string& shpFileName, string attrTableName,  $/;"	f
TeImproperIntersection	kernel/TeDataTypes.h	/^enum TeSegmentIntersectionType { TeProperIntersection, TeImproperIntersection };$/;"	e	enum:TeSegmentIntersectionType
TeInOutBufferRegion	kernel/TeBufferRegion.cpp	/^inline bool TeInOutBufferRegion(const TePolygon& pol, const double& bufferDistance, const unsigned int& numPoints, const unsigned int& bufferLevels, vector<TePolygonSet>& polsVec)$/;"	f	namespace:TeBUFFERREGION
TeInches	kernel/TeDataTypes.h	/^enum TeUnits { TeUndefinedUnit, TeMillimeters, TeCentimeters, TeMeters, TeKilometers, TeMiles, TeInches, TeFeet, TeDecimalDegress };$/;"	e	enum:TeUnits
TeIndexIntersection	kernel/TeIntersector.cpp	/^void TeIndexIntersection(TeINTERSECTOR2::TeBoundaryIP& ip, const unsigned int& redPos, const unsigned int& bluePos, TeIntersectionIndex& interIndex)$/;"	f
TeIndexPolygonSet	kernel/TeIntersector.cpp	/^void TeINTERSECTOR2::TeIndexPolygonSet(const TePolygonSet& polygons, TeINTERSECTOR2::TeSegmentRTree& tree)$/;"	f	class:TeINTERSECTOR2
TeInitAdoDatabase	drivers/ado/TeInitAdoDatabase.cpp	/^void TeInitAdoDatabase()$/;"	f
TeInitAdoDatabase_H	drivers/ado/TeInitAdoDatabase.h	27;"	d
TeInitDatabases	kernel/TeInitDatabases.cpp	/^void TeInitDatabases()$/;"	f
TeInitDatabases_H	kernel/TeInitDatabases.h	27;"	d
TeInitRasterDecoders	kernel/TeInitRasterDecoders.cpp	/^TeInitRasterDecoders()$/;"	f
TeInitRasterDecoders_H	kernel/TeInitRasterDecoders.h	27;"	d
TeInitRasterQtDecoder	drivers/qt/TeInitRasterQtDecoder.cpp	/^TeInitRasterQtDecoder()$/;"	f
TeInsertIntersection	kernel/TeIntersector.cpp	/^void TeInsertIntersection(TeINTERSECTOR2::TeBoundaryIP& ip, TeINTERSECTOR2::TeVectorBoundaryIP& report)$/;"	f
TeInsideBufferRegion	kernel/TeBufferRegion.cpp	/^inline bool TeInsideBufferRegion(const TePolygon& pol, const double& bufferDistance, const unsigned int& numPoints, const unsigned int& bufferLevels, vector<TePolygonSet>& polsVec)$/;"	f	namespace:TeBUFFERREGION
TeInterpolateIn	kernel/TeRasterRemap.cpp	/^bool TeRasterRemap::TeInterpolateIn( const TeBox& box )$/;"	f	class:TeRasterRemap
TeInterpolationAlgorithm	functions/TeInterpolation.h	/^enum TeInterpolationAlgorithm { TeNNInterpolation, TeAvgInterpolation, TeDistWeightAvgInterpolation,$/;"	g
TeInterpolationAlgorithms	functions/TeInterpolation.h	/^		TeInterpolationAlgorithms(const ADAPTATIVEKDTREE& kd)$/;"	f	class:TeInterpolationAlgorithms
TeInterpolationAlgorithms	functions/TeInterpolation.h	/^template<class ADAPTATIVEKDTREE> class TeInterpolationAlgorithms$/;"	c
TeIntersCoordsVec	kernel/TeGeometryAlgorithms.h	/^typedef vector<TeCoord2D> TeIntersCoordsVec;$/;"	t
TeIntersection	kernel/TeGeometryAlgorithms.cpp	/^bool TeIntersection(const TeBox& bx1, const TeBox& bx2, TeBox& bout)$/;"	f
TeIntersection	kernel/TeIntersector.cpp	/^bool TeINTERSECTOR2::TeIntersection(const TeCoord2D& a, const TeCoord2D& b, const TeCoord2D& c, const TeCoord2D& d, TeBoundaryIP& ips, TeSegmentIntersectionType& intersectionType)$/;"	f	class:TeINTERSECTOR2
TeIntersection	kernel/TeIntersector.cpp	/^bool TeINTERSECTOR2::TeIntersection(const TeLineSet& redLines, const TePolygonSet& bluePolygons, TeSegmentRTree& blueTree, TeINTERSECTOR2::TeVectorBoundaryIP& report)$/;"	f	class:TeINTERSECTOR2
TeIntersection	kernel/TeIntersector.cpp	/^bool TeINTERSECTOR2::TeIntersection(const TePolygonSet& polygons, TeINTERSECTOR2::TeSegmentRTree& tree, TeINTERSECTOR2::TeVectorBoundaryIP& report)$/;"	f	class:TeINTERSECTOR2
TeIntersection	kernel/TeIntersector.cpp	/^bool TeINTERSECTOR2::TeIntersection(const TePolygonSet& redPolygons, TeINTERSECTOR2::TeSegmentRTree& redTree, const TePolygonSet& bluePolygons, TeINTERSECTOR2::TeVectorBoundaryIP& report)$/;"	f	class:TeINTERSECTOR2
TeIntersection	kernel/TeOverlay.cpp	/^TeMultiGeometry TeOVERLAY::TeIntersection(TeLineSet& redLines, TePolygonSet& bluePols)$/;"	f	class:TeOVERLAY
TeIntersection	kernel/TeOverlay.cpp	/^bool TeOVERLAY::TeIntersection(TePolygonSet& redPols, vector<TePolygonSet>& bluePols, vector<TePolygonSet>& vecPolsOut, vector<bool>& resultVec, const bool& makeCopy, const bool fixOrientation)$/;"	f	class:TeOVERLAY
TeIntersection	kernel/TeOverlay.cpp	/^bool TeOVERLAY::TeIntersection(const TePolygonSet& redPols, const TePolygonSet& bluePols, TePolygonSet& polsOut)$/;"	f	class:TeOVERLAY
TeIntersectionIndex	kernel/TeIntersector.cpp	/^typedef multimap<TeIntersectionIndexKey, unsigned int> TeIntersectionIndex;$/;"	t	file:
TeIntersectionIndexKey	kernel/TeIntersector.cpp	/^	TeIntersectionIndexKey()$/;"	f	struct:TeIntersectionIndexKey
TeIntersectionIndexKey	kernel/TeIntersector.cpp	/^	TeIntersectionIndexKey(const unsigned int& segNum, const unsigned int& partNum, const unsigned int& polNum)$/;"	f	struct:TeIntersectionIndexKey
TeIntersectionIndexKey	kernel/TeIntersector.cpp	/^struct TeIntersectionIndexKey$/;"	s	file:
TeIntersectorAlgorithm	kernel/TeDataTypes.h	/^enum TeIntersectorAlgorithm { TeBentleyOttman, TeRedBlue, TeTrivial };$/;"	g
TeIntersects	kernel/TeGeometryAlgorithms.cpp	/^template<> bool TeIntersects(const TeBox& bx1, const TeBox& bx2)$/;"	f
TeIntersects	kernel/TeGeometryAlgorithms.cpp	/^template<> bool TeIntersects(const TeCoord2D& c, const TeBox& b)$/;"	f
TeIntersects	kernel/TeGeometryAlgorithms.cpp	/^template<> bool TeIntersects(const TePoint& p, const TeBox& b)$/;"	f
TeIntersects	kernel/TeGeometryAlgorithms.h	/^bool TeIntersects(const T1& o1, const T2& o2)$/;"	f
TeIntersects	kernel/TeIntersector.cpp	/^bool TeINTERSECTOR2::TeIntersects(const TeCoord2D& a, const TeCoord2D& b, const TeCoord2D& c, const TeCoord2D& d, TeSegmentIntersectionType& intersectionType)$/;"	f	class:TeINTERSECTOR2
TeIntersects	kernel/TeIntersector.cpp	/^bool TeINTERSECTOR2::TeIntersects(const TeLine2D& redLine, const TeLine2D& blueLine)$/;"	f	class:TeINTERSECTOR2
TeInverseDistanceStrategy	kernel/TeDataTypes.h	/^enum TeGPMWeightsStrategy { TeNoWeightsStrategy, TeInverseDistanceStrategy, $/;"	e	enum:TeGPMWeightsStrategy
TeIsConvex	kernel/TeGeometryAlgorithms.cpp	/^bool TeIsConvex(const TeLinearRing& ring)$/;"	f
TeIsOnLine	kernel/TeGeometryAlgorithms.cpp	/^bool TeIsOnLine(const TeCoord2D& c, const TeLine2D& l)$/;"	f
TeIsOnSegment	kernel/TeGeometryAlgorithms.cpp	/^bool TeIsOnSegment(const TeCoord2D& c, const TeCoord2D& c1, const TeCoord2D& c2)$/;"	f
TeIsSimple	kernel/TeIntersector.cpp	/^bool TeINTERSECTOR2::TeIsSimple(const TeLineSet& lines, vector<TeINTERSECTOR2::TePairSegIdInPolygonSet>& selfIntersectionList)$/;"	f	class:TeINTERSECTOR2
TeIsSimple	kernel/TeIntersector.cpp	/^bool TeINTERSECTOR2::TeIsSimple(const TePolygonSet& polygons, vector<TeINTERSECTOR2::TePairSegIdInPolygonSet>& selfIntersectionList)$/;"	f	class:TeINTERSECTOR2
TeJoinFragments	kernel/TeOverlayUtils.cpp	/^void TeOVERLAY::TeJoinFragments(TeLineIndex& fragmentsIndex, TeLineIndex& boundaryFragmentsIndex)$/;"	f	class:TeOVERLAY
TeJpeg	kernel/TeRasterParams.h	/^	{ TeNoCompression, TeZLib, TeJpeg, TeTiffCompression };$/;"	e	enum:TeRasterParams::TeRasterCompressionMode
TeKDensity	stat/TeKernelParams.h	/^{TeKDensity, TeKMovingAverage, TeKProbability};$/;"	e	enum:TeKernelComputeType
TeKERNEL	kernel/TeDataTypes.h	/^{	TeNOSTATISTIC, TeSUM, TeMAXVALUE, TeMINVALUE, TeCOUNT, TeVALIDCOUNT, TeSTANDARDDEVIATION, TeKERNEL,  $/;"	e	enum:TeStatisticType
TeKLogRatio	stat/TeKernelParams.h	/^{TeKRatio, TeKLogRatio, TeAbsDifference, TeRelDifference, TeAbsSum, TeRelSum};$/;"	e	enum:TeKernelCombinationType
TeKMeans	stat/TeKMeansGrouping.h	/^TeKMeans (It begin, It end, C& result, double conv) $/;"	f
TeKMovingAverage	stat/TeKernelParams.h	/^{TeKDensity, TeKMovingAverage, TeKProbability};$/;"	e	enum:TeKernelComputeType
TeKNegExponential	stat/TeKernelParams.h	/^ {TeKQuartic, TeKNormal, TeKUniform, TeKTriangular, TeKNegExponential};$/;"	e	enum:TeKernelFunctionType
TeKNormal	stat/TeKernelParams.h	/^ {TeKQuartic, TeKNormal, TeKUniform, TeKTriangular, TeKNegExponential};$/;"	e	enum:TeKernelFunctionType
TeKProbability	stat/TeKernelParams.h	/^{TeKDensity, TeKMovingAverage, TeKProbability};$/;"	e	enum:TeKernelComputeType
TeKQuartic	stat/TeKernelParams.h	/^ {TeKQuartic, TeKNormal, TeKUniform, TeKTriangular, TeKNegExponential};$/;"	e	enum:TeKernelFunctionType
TeKRatio	stat/TeKernelParams.h	/^{TeKRatio, TeKLogRatio, TeAbsDifference, TeRelDifference, TeAbsSum, TeRelSum};$/;"	e	enum:TeKernelCombinationType
TeKTriangular	stat/TeKernelParams.h	/^ {TeKQuartic, TeKNormal, TeKUniform, TeKTriangular, TeKNegExponential};$/;"	e	enum:TeKernelFunctionType
TeKURTOSIS	kernel/TeDataTypes.h	/^	TeMEAN, TeVARIANCE, TeSKEWNESS, TeKURTOSIS, TeAMPLITUDE, TeMEDIAN, TeVARCOEFF, TeMODE};$/;"	e	enum:TeStatisticType
TeKUniform	stat/TeKernelParams.h	/^ {TeKQuartic, TeKNormal, TeKUniform, TeKTriangular, TeKNegExponential};$/;"	e	enum:TeKernelFunctionType
TeKdTree	kernel/TeKdTree.h	/^		TeKdTree(const TeBox& mbr)$/;"	f	class:TeSAM::TeKdTree
TeKdTree	kernel/TeKdTree.h	/^class TeKdTree : public TeBasicKdTree<KdTreeNode>$/;"	c	namespace:TeSAM
TeKdTreeNode	kernel/TeKdTree.h	/^		TeKdTreeNode(const NodeKey& k)$/;"	f	class:TeSAM::TeKdTreeNode
TeKdTreeNode	kernel/TeKdTree.h	/^class TeKdTreeNode$/;"	c	namespace:TeSAM
TeKeepStatistics	functions/TeCellAlgorithms.cpp	/^TeKeepStatistics(TeTable& tableAttrCell, TeDatabasePortal* portal)$/;"	f
TeKernelCombinationType	stat/TeKernelParams.h	/^enum TeKernelCombinationType$/;"	g
TeKernelComputeType	stat/TeKernelParams.h	/^enum TeKernelComputeType $/;"	g
TeKernelError	stat/TeKernelFunctions.h	/^enum TeKernelError {$/;"	g
TeKernelException	stat/TeKernelFunctions.h	/^  TeKernelException(TeKernelError e) {$/;"	f	class:TeKernelException
TeKernelException	stat/TeKernelFunctions.h	/^class STAT_DLL TeKernelException  {$/;"	c
TeKernelFunctionType	stat/TeKernelParams.h	/^enum TeKernelFunctionType $/;"	g
TeKernelGeometricMean	stat/TeKernelFunctions.h	/^double TeKernelGeometricMean(ItReg& beginReg, ItReg& endReg, int idx)$/;"	f
TeKernelGridSupport	stat/TeStatDataStructures.h	/^	TeKernelGridSupport(TeBox& bb, int ncols, TeProjection* proj, unsigned int nBands = 1)$/;"	f	class:TeKernelGridSupport
TeKernelGridSupport	stat/TeStatDataStructures.h	/^class STAT_DLL TeKernelGridSupport$/;"	c
TeKernelNegExponential	stat/TeKernelFunctions.cpp	/^double TeKernelNegExponential(double tau, double distance, double intensity)$/;"	f
TeKernelNormal	stat/TeKernelFunctions.cpp	/^double TeKernelNormal(double tau, double distance, double intensity)$/;"	f
TeKernelNormalize	stat/TeKernelFunctions.h	/^bool TeKernelNormalize(EventSet& events, $/;"	f
TeKernelParams	stat/TeKernelParams.h	/^	TeKernelParams():$/;"	f	struct:TeKernelParams
TeKernelParams	stat/TeKernelParams.h	/^struct STAT_DLL TeKernelParams$/;"	s
TeKernelParamsVector	stat/TeKernelParams.h	/^typedef vector<TeKernelParams> TeKernelParamsVector;$/;"	t
TeKernelQuartic	stat/TeKernelFunctions.cpp	/^double TeKernelQuartic(double tau, double distance, double intensity) $/;"	f
TeKernelTriangular	stat/TeKernelFunctions.cpp	/^double TeKernelTriangular(double tau, double distance, double intensity)$/;"	f
TeKernelUniform	stat/TeKernelFunctions.cpp	/^double TeKernelUniform(double tau, double distance, double intensity)$/;"	f
TeKernelValue	stat/TeKernelFunctions.h	/^double TeKernelValue (TeCoord2D& center, ItEvt& begin, ItEvt& end, $/;"	f
TeKeys	kernel/TeDatabase.h	/^typedef vector<string>				TeKeys;$/;"	t
TeKeysToDist	kernel/TeDatabase.h	/^typedef map<string, double>			TeKeysToDist;$/;"	t
TeKilometers	kernel/TeDataTypes.h	/^enum TeUnits { TeUndefinedUnit, TeMillimeters, TeCentimeters, TeMeters, TeKilometers, TeMiles, TeInches, TeFeet, TeDecimalDegress };$/;"	e	enum:TeUnits
TeLINE2DTYPE	kernel/TeDataTypes.h	/^ TePOINTTYPE, TeLINE2DTYPE, TePOLYGONTYPE, TeCELLTYPE, TeTEXTTYPE, TeNODETYPE,$/;"	e	enum:TeAttrDataType
TeLINES	kernel/TeDataTypes.h	/^{	TePOLYGONS = 1, TeLINES = 2, TePOINTS = 4, TeSAMPLES = 8, TeCONTOURS = 16,$/;"	e	enum:TeGeomRep
TeLINESETTYPE	kernel/TeDataTypes.h	/^ TePOINTSETTYPE, TeLINESETTYPE, TePOLYGONSETTYPE, TeCELLSETTYPE, TeTEXTSETTYPE, TeNODESETTYPE,$/;"	e	enum:TeAttrDataType
TeLONG	kernel/TeDataTypes.h	/^{	TeBIT, TeUNSIGNEDCHAR, TeCHAR, TeUNSIGNEDSHORT, TeSHORT, TeINTEGER, TeUNSIGNEDLONG, TeLONG, TeFLOAT, TeDOUBLE };$/;"	e	enum:TeDataType
TeLOWERLEFT	kernel/TeBox.h	/^	enum TeBoxCorner { TeLOWERLEFT=0, TeUPPERLEFT=1, TeLOWERRIGHT=2, TeUPPERRIGHT=3 };$/;"	e	enum:TeBox::TeBoxCorner
TeLOWERRIGHT	kernel/TeBox.h	/^	enum TeBoxCorner { TeLOWERLEFT=0, TeUPPERLEFT=1, TeLOWERRIGHT=2, TeUPPERRIGHT=3 };$/;"	e	enum:TeBox::TeBoxCorner
TeLUT2Three	kernel/TeRasterTransform.h	/^	{	TeNoTransf=0, TeMono2Three=1, TeBand2Band=2, TePall2Three=3, TeLUT2Three=4, $/;"	e	enum:TeRasterTransform::TeRasterTransfFunctions
TeLambertConformal	kernel/TeProjection.h	/^	TeLambertConformal ( const TeDatum& datum, $/;"	f	class:TeLambertConformal
TeLambertConformal	kernel/TeProjection.h	/^class TL_DLL TeLambertConformal : public TeProjection$/;"	c
TeLatDMS2DD	functions/TeCoordAlgorithms.cpp	/^TeLatDMS2DD(char hem, short& dg, short& mn, float& sc, double& grauDec)$/;"	f
TeLatLong	kernel/TeProjection.cpp	/^TeLatLong::TeLatLong( const TeDatum& datum, const string& units ):$/;"	f	class:TeLatLong
TeLatLong	kernel/TeProjection.h	/^class TL_DLL TeLatLong : public TeProjection$/;"	c
TeLayer	kernel/TeLayer.cpp	/^TeLayer::TeLayer( const TeLayer& other ) :$/;"	f	class:TeLayer
TeLayer	kernel/TeLayer.cpp	/^TeLayer::TeLayer(const string& name, TeDatabase* db, TeBox& box, TeProjection* proj):$/;"	f	class:TeLayer
TeLayer	kernel/TeLayer.cpp	/^TeLayer::TeLayer(const string& name, TeDatabase* db, TeProjection* proj): $/;"	f	class:TeLayer
TeLayer	kernel/TeLayer.h	/^	TeLayer():$/;"	f	class:TeLayer
TeLayer	kernel/TeLayer.h	/^class TL_DLL TeLayer {$/;"	c
TeLayerMap	kernel/TeLayer.h	/^typedef map<int,TeLayer*> TeLayerMap;$/;"	t
TeLegendEntry	kernel/TeLegendEntry.cpp	/^TeLegendEntry::TeLegendEntry (const TeLegendEntry& leg)$/;"	f	class:TeLegendEntry
TeLegendEntry	kernel/TeLegendEntry.cpp	/^TeLegendEntry::TeLegendEntry(const TeSlice& slice) :$/;"	f	class:TeLegendEntry
TeLegendEntry	kernel/TeLegendEntry.h	/^	TeLegendEntry () : $/;"	f	class:TeLegendEntry
TeLegendEntry	kernel/TeLegendEntry.h	/^class TL_DLL TeLegendEntry$/;"	c
TeLegendEntryMap	kernel/TeLegendEntry.h	/^typedef map<int, TeLegendEntry*> TeLegendEntryMap;$/;"	t
TeLegendEntryVector	kernel/TeLegendEntry.h	/^typedef vector<TeLegendEntry> TeLegendEntryVector;$/;"	t
TeLength	kernel/TeGeometryAlgorithms.cpp	/^double TeLength(const TeLine2D& l)$/;"	f
TeLine2D	kernel/TeGeometry.h	/^class TL_DLL TeLine2D : public TeGeomComposite<TeCoord2D>$/;"	c
TeLine2DToPGBinary	drivers/PostgreSQL/TePGInterface.cpp	/^char* TeLine2DToPGBinary(const TeLine2D &line, unsigned int &size)$/;"	f
TeLine2DToWKBLineString	drivers/PostgreSQL/TePGInterface.cpp	/^char* TeLine2DToWKBLineString(const TeLine2D &line, unsigned int &size)$/;"	f
TeLineBuffer	kernel/TeBufferRegion.cpp	/^inline bool TeLineBuffer(const TeLine2D& line, const double& bufferDistance, const unsigned int& numPoints,$/;"	f	namespace:TeBUFFERREGION
TeLineIndex	kernel/TeOverlayUtils.h	/^typedef multimap<TeCoord2D, pair<unsigned int, TeLine2D>, xyOrder> TeLineIndex;$/;"	t	namespace:TeOVERLAY
TeLineLengthStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeLineLengthStrategy (TeTheme* theme_) : TeComputeSpatialStrategy(theme_, TeLINES){}$/;"	f	class:TeLineLengthStrategy
TeLineLengthStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeLineLengthStrategy: public TeComputeSpatialStrategy $/;"	c
TeLineSet	kernel/TeGeometry.h	/^class TL_DLL TeLineSet: public TeGeomComposite<TeLine2D>$/;"	c
TeLineSimplify	kernel/TeGeometryAlgorithms.cpp	/^bool TeLineSimplify(TeLine2D& ptlist, double snap, double maxdist)$/;"	f
TeLinearRing	kernel/TeGeometry.cpp	/^TeLinearRing::TeLinearRing ( TeLine2D& line ): TeLine2D ( line ) $/;"	f	class:TeLinearRing
TeLinearRing	kernel/TeGeometry.h	/^	TeLinearRing() : TeLine2D() {}$/;"	f	class:TeLinearRing
TeLinearRing	kernel/TeGeometry.h	/^class TL_DLL TeLinearRing : public TeLine2D  {$/;"	c
TeLisaMap	stat/TeSpatialStatistics.h	/^TeLisaMap (Set* elemSet, int indexSignifLISA, int \/* permutationNumber *\/)$/;"	f
TeLisaStatisticalSignificance	stat/TeSpatialStatistics.h	/^TeLisaStatisticalSignificance (Set* elemSet, int indexZ, int indexLISA, $/;"	f
TeLnBasicType	kernel/TeDataTypes.h	/^enum TeLnBasicType { TeLnTypeContinuous=0, TeLnTypeDashed=1, TeLnTypeDotted=2,  $/;"	g
TeLnBevelJoin	kernel/TeDataTypes.h	/^enum TeLnJoinStyle { TeLnMiterJoin=0, TeLnBevelJoin=1, TeLnRoundJoin=2 };$/;"	e	enum:TeLnJoinStyle
TeLnCapStyle	kernel/TeDataTypes.h	/^enum TeLnCapStyle { TeLnFlatCap=0, TeLnSquareCap=1, TeLnRoundCap=2 };$/;"	g
TeLnFlatCap	kernel/TeDataTypes.h	/^enum TeLnCapStyle { TeLnFlatCap=0, TeLnSquareCap=1, TeLnRoundCap=2 };$/;"	e	enum:TeLnCapStyle
TeLnJoinStyle	kernel/TeDataTypes.h	/^enum TeLnJoinStyle { TeLnMiterJoin=0, TeLnBevelJoin=1, TeLnRoundJoin=2 };$/;"	g
TeLnMiterJoin	kernel/TeDataTypes.h	/^enum TeLnJoinStyle { TeLnMiterJoin=0, TeLnBevelJoin=1, TeLnRoundJoin=2 };$/;"	e	enum:TeLnJoinStyle
TeLnRoundCap	kernel/TeDataTypes.h	/^enum TeLnCapStyle { TeLnFlatCap=0, TeLnSquareCap=1, TeLnRoundCap=2 };$/;"	e	enum:TeLnCapStyle
TeLnRoundJoin	kernel/TeDataTypes.h	/^enum TeLnJoinStyle { TeLnMiterJoin=0, TeLnBevelJoin=1, TeLnRoundJoin=2 };$/;"	e	enum:TeLnJoinStyle
TeLnSquareCap	kernel/TeDataTypes.h	/^enum TeLnCapStyle { TeLnFlatCap=0, TeLnSquareCap=1, TeLnRoundCap=2 };$/;"	e	enum:TeLnCapStyle
TeLnTypeArrow	kernel/TeDataTypes.h	/^					 TeLnTypeCustom=6, TeLnTypeArrow=7, TeLnTypeMiddleArrow=8 };$/;"	e	enum:TeLnBasicType
TeLnTypeContinuous	kernel/TeDataTypes.h	/^enum TeLnBasicType { TeLnTypeContinuous=0, TeLnTypeDashed=1, TeLnTypeDotted=2,  $/;"	e	enum:TeLnBasicType
TeLnTypeCustom	kernel/TeDataTypes.h	/^					 TeLnTypeCustom=6, TeLnTypeArrow=7, TeLnTypeMiddleArrow=8 };$/;"	e	enum:TeLnBasicType
TeLnTypeDashDot	kernel/TeDataTypes.h	/^					 TeLnTypeDashDot=3, TeLnTypeDashDotDot=4, TeLnTypeNone=5,$/;"	e	enum:TeLnBasicType
TeLnTypeDashDotDot	kernel/TeDataTypes.h	/^					 TeLnTypeDashDot=3, TeLnTypeDashDotDot=4, TeLnTypeNone=5,$/;"	e	enum:TeLnBasicType
TeLnTypeDashed	kernel/TeDataTypes.h	/^enum TeLnBasicType { TeLnTypeContinuous=0, TeLnTypeDashed=1, TeLnTypeDotted=2,  $/;"	e	enum:TeLnBasicType
TeLnTypeDotted	kernel/TeDataTypes.h	/^enum TeLnBasicType { TeLnTypeContinuous=0, TeLnTypeDashed=1, TeLnTypeDotted=2,  $/;"	e	enum:TeLnBasicType
TeLnTypeMiddleArrow	kernel/TeDataTypes.h	/^					 TeLnTypeCustom=6, TeLnTypeArrow=7, TeLnTypeMiddleArrow=8 };$/;"	e	enum:TeLnBasicType
TeLnTypeNone	kernel/TeDataTypes.h	/^					 TeLnTypeDashDot=3, TeLnTypeDashDotDot=4, TeLnTypeNone=5,$/;"	e	enum:TeLnBasicType
TeLocalEmpiricalBayes	stat/TeBayesFunctions.h	/^TeLocalEmpiricalBayes(TeSTElementSet *rs, Matrix* neighMatrix, string& colname, double rate)$/;"	f
TeLocalMean	stat/TeSpatialStatistics.h	/^TeLocalMean (Set* elemSet, Matrix* proxMatrix, int indexAttr)$/;"	f
TeLocateLineSegment	kernel/TeGeometryAlgorithms.cpp	/^bool TeLocateLineSegment (TeCoord2D& pin, TeLine2D& line, int& segment, double \/*tol*\/)$/;"	f
TeLogicalOperator	kernel/TeDataTypes.h	/^enum TeLogicalOperator { TeAND = 1, TeOR = 2 };$/;"	g
TeLongDMS2DD	functions/TeCoordAlgorithms.cpp	/^bool TeLongDMS2DD(char hem, short& dg, short& mn, float& sc, double& grauDec)$/;"	f
TeMAXFLOAT	kernel/TeDefines.h	/^const double	TeMAXFLOAT =	3.4E37;			\/\/!< Maximum float value$/;"	v
TeMAXVALUE	kernel/TeDataTypes.h	/^{	TeNOSTATISTIC, TeSUM, TeMAXVALUE, TeMINVALUE, TeCOUNT, TeVALIDCOUNT, TeSTANDARDDEVIATION, TeKERNEL,  $/;"	e	enum:TeStatisticType
TeMCNode	kernel/TeMultiContainer.h	/^      TeMCNode() $/;"	f	class:TeMCNode
TeMCNode	kernel/TeMultiContainer.h	/^  class TeMCNode : public TeMCNodeInterface< TeMultiContainerKeyT > {$/;"	c
TeMCNodeInterface	kernel/TeMultiContainer.h	/^      TeMCNodeInterface( $/;"	f	class:TeMCNodeInterface
TeMCNodeInterface	kernel/TeMultiContainer.h	/^      TeMCNodeInterface() {};$/;"	f	class:TeMCNodeInterface
TeMCNodeInterface	kernel/TeMultiContainer.h	/^  class TeMCNodeInterface {$/;"	c
TeMEAN	kernel/TeDataTypes.h	/^	TeMEAN, TeVARIANCE, TeSKEWNESS, TeKURTOSIS, TeAMPLITUDE, TeMEDIAN, TeVARCOEFF, TeMODE};$/;"	e	enum:TeStatisticType
TeMEDIAN	kernel/TeDataTypes.h	/^	TeMEAN, TeVARIANCE, TeSKEWNESS, TeKURTOSIS, TeAMPLITUDE, TeMEDIAN, TeVARCOEFF, TeMODE};$/;"	e	enum:TeStatisticType
TeMIFCollectionDecode	functions/TeImportMIF.cpp	/^TeMIFCollectionDecode(TeAsciiFile& mifFile, TePointSet& ps, TeLineSet& ls, TePolygonSet& pols, string& index)$/;"	f
TeMIFLineDecode	functions/TeImportMIF.cpp	/^TeMIFLineDecode (TeAsciiFile& mifFile, TeLineSet& temp, string& index)$/;"	f
TeMIFMultiPointDecode	functions/TeImportMIF.cpp	/^TeMIFMultiPointDecode (TeAsciiFile& mifFile, TePointSet& temp, string& index)$/;"	f
TeMIFOthersDecode	functions/TeImportMIF.cpp	/^TeMIFOthersDecode ( TeAsciiFile& mifFile )$/;"	f
TeMIFPlineDecode	functions/TeImportMIF.cpp	/^TeMIFPlineDecode (TeAsciiFile& mifFile, TeLineSet& temp, string& index)$/;"	f
TeMIFPointDecode	functions/TeImportMIF.cpp	/^TeMIFPointDecode (TeAsciiFile& mifFile, TePointSet& temp, string& index)$/;"	f
TeMIFProjectionDatum	functions/TeMIFProjection.cpp	/^TeMIFProjectionDatum ( const int& datCode )$/;"	f
TeMIFProjectionFactory	functions/TeMIFProjection.h	/^class TLFUNCTIONS_DLL TeMIFProjectionFactory$/;"	c
TeMIFProjectionInfo	functions/TeMIFProjection.cpp	/^TeMIFProjectionInfo ( const string& projName  )$/;"	f
TeMIFProjectionName	functions/TeMIFProjection.cpp	/^TeMIFProjectionName ( const int& prjCode )$/;"	f
TeMIFProjectionUnits	functions/TeMIFProjection.cpp	/^TeMIFProjectionUnits ( const int& code )$/;"	f
TeMIFRectDecode	functions/TeImportMIF.cpp	/^TeMIFRectDecode (TeAsciiFile& mifFile, TePolygonSet& temp, string& index)$/;"	f
TeMIFRegionDecode	functions/TeImportMIF.cpp	/^TeMIFRegionDecode ( TeAsciiFile& mifFile, TePolygonSet& temp, string& index)$/;"	f
TeMIFTextDecode	functions/TeImportMIF.cpp	/^TeMIFTextDecode (TeAsciiFile& mifFile, TeTextSet& temp, string& index)$/;"	f
TeMIFTransformDecode	functions/TeImportMIF.cpp	/^TeMIFTransformDecode ( TeAsciiFile& mifFile )$/;"	f
TeMINFLOAT	kernel/TeDefines.h	/^const double	TeMINFLOAT =	3.4E-37;		\/\/!< Minimum float value$/;"	v
TeMINUTE	kernel/TeDataTypes.h	/^enum TeChronon {	TeNOCHRONON, TeSECOND, TeMINUTE, TeHOUR, TeDAY, TeMONTH, TeYEAR,$/;"	e	enum:TeChronon
TeMINUTEOFHOUR	kernel/TeDataTypes.h	/^					TeHOUROFDAY, TeMINUTEOFHOUR, TeSECONDOFMINUTE };$/;"	e	enum:TeChronon
TeMINVALUE	kernel/TeDataTypes.h	/^{	TeNOSTATISTIC, TeSUM, TeMAXVALUE, TeMINVALUE, TeCOUNT, TeVALIDCOUNT, TeSTANDARDDEVIATION, TeKERNEL,  $/;"	e	enum:TeStatisticType
TeMISSING	kernel/TeTemporalSeries.h	/^enum TeTSDataType  { TeDATA, TeMISSING, TeDMISSING, TeOUTLIER, TeDOUTLIER, TePREDICTION };$/;"	e	enum:TeTSDataType
TeMODE	kernel/TeDataTypes.h	/^	TeMEAN, TeVARIANCE, TeSKEWNESS, TeKURTOSIS, TeAMPLITUDE, TeMEDIAN, TeVARCOEFF, TeMODE};$/;"	e	enum:TeStatisticType
TeMONTH	kernel/TeDataTypes.h	/^enum TeChronon {	TeNOCHRONON, TeSECOND, TeMINUTE, TeHOUR, TeDAY, TeMONTH, TeYEAR,$/;"	e	enum:TeChronon
TeMONTHOFYEAR	kernel/TeDataTypes.h	/^					TeDAYOFWEEK, TeDAYOFMONTH, TeDAYOFYEAR, TeMONTHOFYEAR, TeSEASON, TeWEEKOFYEAR, $/;"	e	enum:TeChronon
TeMSTGraph	stat/TeTreeMinimum.h	/^typedef vector<TeMSTGraphLink> TeMSTGraph;$/;"	t
TeMSTGraphLink	stat/TeTreeMinimum.h	/^	TeMSTGraphLink() :$/;"	f	class:TeMSTGraphLink
TeMSTGraphLink	stat/TeTreeMinimum.h	/^	TeMSTGraphLink(const string& GeoId1, const string& GeoId2):$/;"	f	class:TeMSTGraphLink
TeMSTGraphLink	stat/TeTreeMinimum.h	/^	TeMSTGraphLink(const string& GeoId1, const string& GeoId2, const double Dissimilarity)  :$/;"	f	class:TeMSTGraphLink
TeMSTGraphLink	stat/TeTreeMinimum.h	/^class TeMSTGraphLink$/;"	c
TeMSTMatrix	stat/TeTreeMinimum.h	/^typedef map<string,TeMSTGraph> TeMSTMatrix;$/;"	t
TeMSV	stat/TeMSVFactory.h	/^	TeMSV (){};$/;"	f	class:TeMSV
TeMSV	stat/TeMSVFactory.h	/^class STAT_DLL TeMSV		$/;"	c
TeMSVFactory	stat/TeMSVFactory.h	/^	TeMSVFactory(const string& name) : TeFactory<TeMSV, TeMSVParams>(name){}$/;"	f	class:TeMSVFactory
TeMSVFactory	stat/TeMSVFactory.h	/^class STAT_DLL TeMSVFactory : public TeFactory<TeMSV, TeMSVParams>$/;"	c
TeMSVParams	stat/TeMSVFactory.h	/^struct STAT_DLL TeMSVParams$/;"	s
TeMajorityCategoryStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeMajorityCategoryStrategy (const map<string, string>& classesMap, TeAttrDataType defaultType = TeINT) $/;"	f	class:TeMajorityCategoryStrategy
TeMajorityCategoryStrategy	kernel/TeComputeAttributeStrategies.h	/^class TeMajorityCategoryStrategy: public TeComputeAttrStrategy<Iterator>   $/;"	c
TeMajorityStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeMajorityStrategy (TeAttrDataType defaultType = TeINT, string defaultValue = "", string dummyV = "")$/;"	f	class:TeMajorityStrategy
TeMajorityStrategy	kernel/TeComputeAttributeStrategies.h	/^class TeMajorityStrategy: public TeComputeAttrStrategy<Iterator>$/;"	c
TeMakePolygon	kernel/TeGeometryAlgorithms.cpp	/^TePolygon TeMakePolygon(const TeBox& b)$/;"	f
TeMappedMemory	kernel/TeMappedMemory.cpp	/^TeMappedMemory::TeMappedMemory()$/;"	f	class:TeMappedMemory
TeMappedMemory	kernel/TeMappedMemory.h	/^      TeMappedMemory( const TeMappedMemory& ) {}; $/;"	f	class:TeMappedMemory
TeMappedMemory	kernel/TeMappedMemory.h	/^  class TL_DLL TeMappedMemory {$/;"	c
TeMask	kernel/TeSpatialOperations.cpp	/^TeMask(TeRaster* whole, TePolygon& poly, TeStrategicIterator st)$/;"	f
TeMatrix	kernel/TeMatrix.cpp	/^TeMatrix::TeMatrix(){$/;"	f	class:TeMatrix
TeMatrix	kernel/TeMatrix.cpp	/^TeMatrix::TeMatrix(const TeMatrix& m)$/;"	f	class:TeMatrix
TeMatrix	kernel/TeMatrix.h	/^class TL_DLL TeMatrix$/;"	c
TeMaximumStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeMaximumStrategy (double dummyV = 0.0, double defaultV = 0.0) {this->defaultValue_.value_ = Te2String (defaultV); dummy = dummyV; }$/;"	f	class:TeMaximumStrategy
TeMaximumStrategy	kernel/TeComputeAttributeStrategies.h	/^class TeMaximumStrategy: public TeComputeAttrStrategy<Iterator>   $/;"	c
TeMaximumValue	kernel/TeGroupingAlgorithms.h	/^void TeMaximumValue(It begin, It end, vector<double>& maxValue, double dummy=-9999.99, bool usesDummy=false)$/;"	f
TeMeanVector	kernel/TeStatistics.h	/^bool TeMeanVector ( It begin, It end, T& result)$/;"	f
TeMeasure	kernel/TeMeasure.h	/^	TeMeasure( double value ) : value_( value ) {}$/;"	f	class:TeMeasure
TeMeasure	kernel/TeMeasure.h	/^class TL_DLL TeMeasure $/;"	c
TeMeasurementScale	kernel/TeAttribute.h	/^enum TeMeasurementScale $/;"	g
TeMemoryPage	kernel/TeDecoderVirtualMemory.cpp	/^TeMemoryPage::TeMemoryPage(const TeMemoryPage& rhs)$/;"	f	class:TeMemoryPage
TeMemoryPage	kernel/TeDecoderVirtualMemory.cpp	/^TeMemoryPage::TeMemoryPage(unsigned long size, double defValue, TeDataType dataType):$/;"	f	class:TeMemoryPage
TeMemoryPage	kernel/TeDecoderVirtualMemory.h	/^class TL_DLL TeMemoryPage$/;"	c
TeMemoryZonal	functions/TeMemoryZonal.cpp	/^bool TeMemoryZonal(TeRaster* raster, TePolygon& poly, TeStatisticsDimensionVect& result)$/;"	f
TeMercator	kernel/TeProjection.h	/^	TeMercator ( const TeDatum& datum,  $/;"	f	class:TeMercator
TeMercator	kernel/TeProjection.h	/^class TL_DLL TeMercator : public TeProjection$/;"	c
TeMergeFragments	kernel/TeOverlayUtils.cpp	/^bool TeOVERLAY::TeMergeFragments(TeLineIndex& fragmentsIndex, vector<TeLinearRing>& rings, const bool& doExaustive)$/;"	f	class:TeOVERLAY
TeMergeFragmentsFB	kernel/TeOverlayUtils.cpp	/^bool TeMergeFragmentsFB(TeOVERLAY::TeLineIndex& fragmentsIndex, TeLine2D& line)$/;"	f
TeMessageIcon	kernel/TeErrorMessage.h	/^enum TeMessageIcon$/;"	g
TeMessageReturn	kernel/TeErrorMessage.h	/^enum TeMessageReturn$/;"	g
TeMessageType	kernel/TeErrorMessage.h	/^enum TeMessageType$/;"	g
TeMetaModelCache	kernel/TeMetaModelCache.h	/^        TeMetaModelCache()$/;"	f	class:TeMetaModelCache
TeMetaModelCache	kernel/TeMetaModelCache.h	/^class TL_DLL TeMetaModelCache$/;"	c
TeMeters	kernel/TeDataTypes.h	/^enum TeUnits { TeUndefinedUnit, TeMillimeters, TeCentimeters, TeMeters, TeKilometers, TeMiles, TeInches, TeFeet, TeDecimalDegress };$/;"	e	enum:TeUnits
TeMiles	kernel/TeDataTypes.h	/^enum TeUnits { TeUndefinedUnit, TeMillimeters, TeCentimeters, TeMeters, TeKilometers, TeMiles, TeInches, TeFeet, TeDecimalDegress };$/;"	e	enum:TeUnits
TeMiller	kernel/TeProjection.h	/^	TeMiller ( const TeDatum& datum,  $/;"	f	class:TeMiller
TeMiller	kernel/TeProjection.h	/^class TL_DLL TeMiller : public TeProjection	$/;"	c
TeMillimeters	kernel/TeDataTypes.h	/^enum TeUnits { TeUndefinedUnit, TeMillimeters, TeCentimeters, TeMeters, TeKilometers, TeMiles, TeInches, TeFeet, TeDecimalDegress };$/;"	e	enum:TeUnits
TeMinimumDistance	kernel/TeGeometryAlgorithms.cpp	/^double TeMinimumDistance (const TeCoord2D& first, const TeCoord2D& last, const TeCoord2D& pin, TeCoord2D& pout, double \/*tol*\/)$/;"	f
TeMinimumDistance	stat/TeKMeansGrouping.h	/^TeMinimumDistance(I it, T& centroides )$/;"	f
TeMinimumDistanceLinesStrategy	kernel/TeComputeAttributeStrategies.cpp	/^TeMinimumDistanceLinesStrategy::TeMinimumDistanceLinesStrategy(TeTheme* theme_, double dist_)$/;"	f	class:TeMinimumDistanceLinesStrategy
TeMinimumDistanceLinesStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeMinimumDistanceLinesStrategy : public TeMinimumDistanceStrategy$/;"	c
TeMinimumDistancePointsStrategy	kernel/TeComputeAttributeStrategies.cpp	/^TeMinimumDistancePointsStrategy::TeMinimumDistancePointsStrategy(TeTheme* theme_)$/;"	f	class:TeMinimumDistancePointsStrategy
TeMinimumDistancePointsStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeMinimumDistancePointsStrategy: public TeMinimumDistanceStrategy$/;"	c
TeMinimumDistancePolygonsStrategy	kernel/TeComputeAttributeStrategies.cpp	/^TeMinimumDistancePolygonsStrategy::TeMinimumDistancePolygonsStrategy(TeTheme* theme_, double dist_)$/;"	f	class:TeMinimumDistancePolygonsStrategy
TeMinimumDistancePolygonsStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeMinimumDistancePolygonsStrategy: public TeMinimumDistanceStrategy$/;"	c
TeMinimumDistanceStrategy	kernel/TeComputeAttributeStrategies.cpp	/^TeMinimumDistanceStrategy::TeMinimumDistanceStrategy(TeTheme* theme_, TeGeomRep rep_, double distError_) $/;"	f	class:TeMinimumDistanceStrategy
TeMinimumDistanceStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeMinimumDistanceStrategy:  public TeComputeSpatialStrategy$/;"	c
TeMinimumStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeMinimumStrategy (double dummyV = 0.0, double defaultV = 0.0) {this->defaultValue_.value_ = Te2String (defaultV); dummy = dummyV; }$/;"	f	class:TeMinimumStrategy
TeMinimumStrategy	kernel/TeComputeAttributeStrategies.h	/^class TeMinimumStrategy: public TeComputeAttrStrategy<Iterator>   $/;"	c
TeMinimumValue	kernel/TeGroupingAlgorithms.h	/^void TeMinimumValue(It begin, It end, vector<double>& minValue, double dummy=-9999.99, bool usesDummy=false)$/;"	f
TeMono2LUT	kernel/TeRasterTransform.h	/^		TeThree2LUTThreeBand=9, TeMono2LUTMonoBand=10, TeMono2LUT = 11$/;"	e	enum:TeRasterTransform::TeRasterTransfFunctions
TeMono2LUTMonoBand	kernel/TeRasterTransform.h	/^		TeThree2LUTThreeBand=9, TeMono2LUTMonoBand=10, TeMono2LUT = 11$/;"	e	enum:TeRasterTransform::TeRasterTransfFunctions
TeMono2Three	kernel/TeRasterTransform.h	/^	{	TeNoTransf=0, TeMono2Three=1, TeBand2Band=2, TePall2Three=3, TeLUT2Three=4, $/;"	e	enum:TeRasterTransform::TeRasterTransfFunctions
TeMoranIndex	stat/TeSpatialStatistics.h	/^TeMoranIndex (Set* elemSet, int indexZ, int indexWZ)$/;"	f
TeMoranIndex2	stat/TeSpatialStatistics.h	/^TeMoranIndex2 (Set* elemSet, const double& mean, const double& var, Matrix* proxMatrix, int indexAttr)$/;"	f
TeMoranMap	stat/TeSpatialStatistics.h	/^TeMoranMap (Set* elemSet, int indexLISAMap, int indexBoxMap)$/;"	f
TeMosaicRaster	kernel/TeImportRaster.cpp	/^bool TeMosaicRaster(TeRaster* rasterIn, TeLayer* layer,  const string& objectId)$/;"	f
TeMountTopology	kernel/TeOverlayUtils.cpp	/^bool TeOVERLAY::TeMountTopology(TePolygonSet& polysOut, vector<TeLinearRing>& holes)$/;"	f	class:TeOVERLAY
TeMrSIDReader	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::TeMrSIDReader(const std::string& fname):$/;"	f	class:TeMrSIDReader
TeMrSIDReader	drivers/MrSID/TeMrSID.h	/^class TeMrSIDReader$/;"	c
TeMultiBand	kernel/TeRasterParams.h	/^	{ TeUnknown, TePallete, TeMultiBand, TeRGB };$/;"	e	enum:TeRasterParams::TeRasterPhotometricInterpretation
TeMultiContainer	kernel/TeMultiContainer.h	/^  class TeMultiContainer {$/;"	c
TeMultiContainer	kernel/TeMultiContainer.h	/^TeMultiContainer< TeMultiContainerKeyT >::TeMultiContainer( $/;"	f	class:TeMultiContainer
TeMultiContainer	kernel/TeMultiContainer.h	/^TeMultiContainer< TeMultiContainerKeyT >::TeMultiContainer()$/;"	f	class:TeMultiContainer
TeMultiGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::TeMultiGeometry(const TeMultiGeometry& other)$/;"	f	class:TeMultiGeometry
TeMultiGeometry	kernel/TeMultiGeometry.h	/^	TeMultiGeometry() {};$/;"	f	class:TeMultiGeometry
TeMultiGeometry	kernel/TeMultiGeometry.h	/^class TL_DLL TeMultiGeometry$/;"	c
TeMutex	kernel/TeMutex.cpp	/^TeMutex::TeMutex()$/;"	f	class:TeMutex
TeMutex	kernel/TeMutex.h	/^      TeMutex(  const TeMutex& ) {};$/;"	f	class:TeMutex
TeMutex	kernel/TeMutex.h	/^  class TL_DLL TeMutex$/;"	c
TeMySQL	drivers/MySQL/TeMySQL.cpp	/^TeMySQL::TeMySQL()$/;"	f	class:TeMySQL
TeMySQL	drivers/MySQL/TeMySQL.h	/^class TLMYSQL_DLL TeMySQL : public TeDatabase$/;"	c
TeMySQLFactory	drivers/MySQL/TeMySQL.h	/^    TeMySQLFactory() : TeDatabaseFactory( std::string( "MySQL" ) ) {};$/;"	f	class:TeMySQLFactory
TeMySQLFactory	drivers/MySQL/TeMySQL.h	/^class TLMYSQL_DLL TeMySQLFactory : public TeDatabaseFactory$/;"	c
TeMySQLFactory_instance	drivers/MySQL/TeMySQL.h	/^    static TeMySQLFactory TeMySQLFactory_instance;$/;"	m	namespace:__anon74
TeMySQLPortal	drivers/MySQL/TeMySQL.cpp	/^TeMySQLPortal::TeMySQLPortal ( TeMySQL  *m)$/;"	f	class:TeMySQLPortal
TeMySQLPortal	drivers/MySQL/TeMySQL.cpp	/^TeMySQLPortal::TeMySQLPortal ( const TeMySQLPortal& p) : TeDatabasePortal()$/;"	f	class:TeMySQLPortal
TeMySQLPortal	drivers/MySQL/TeMySQL.h	/^class TLMYSQL_DLL TeMySQLPortal  : public TeDatabasePortal$/;"	c
TeNAME_LENGTH	kernel/TeDefines.h	/^const int	TeNAME_LENGTH = 2000;			\/\/!< A default name length$/;"	v
TeNEIGHBORHOOD	functions/TeAddressLocator.h	/^TLFUNCTIONS_DLL enum TeCentroidFieldType { TeNEIGHBORHOOD, TeZIPCODE };$/;"	e	enum:TeCentroidFieldType
TeNNInterpolation	functions/TeInterpolation.h	/^enum TeInterpolationAlgorithm { TeNNInterpolation, TeAvgInterpolation, TeDistWeightAvgInterpolation,$/;"	e	enum:TeInterpolationAlgorithm
TeNOCHRONON	kernel/TeDataTypes.h	/^enum TeChronon {	TeNOCHRONON, TeSECOND, TeMINUTE, TeHOUR, TeDAY, TeMONTH, TeYEAR,$/;"	e	enum:TeChronon
TeNODES	kernel/TeDataTypes.h	/^	TeARCS = 32, TeNODES = 64  , TeTEXT = 128, TeCELLS = 256 , TeRASTER = 512,$/;"	e	enum:TeGeomRep
TeNODESETTYPE	kernel/TeDataTypes.h	/^ TePOINTSETTYPE, TeLINESETTYPE, TePOLYGONSETTYPE, TeCELLSETTYPE, TeTEXTSETTYPE, TeNODESETTYPE,$/;"	e	enum:TeAttrDataType
TeNODETYPE	kernel/TeDataTypes.h	/^ TePOINTTYPE, TeLINE2DTYPE, TePOLYGONTYPE, TeCELLTYPE, TeTEXTTYPE, TeNODETYPE,$/;"	e	enum:TeAttrDataType
TeNORTH_HEM	kernel/TeProjection.h	/^{ TeNORTH_HEM, TeSOUTH_HEM };$/;"	e	enum:TeHemisphere
TeNOSTATISTIC	kernel/TeDataTypes.h	/^{	TeNOSTATISTIC, TeSUM, TeMAXVALUE, TeMINVALUE, TeCOUNT, TeVALIDCOUNT, TeSTANDARDDEVIATION, TeKERNEL,  $/;"	e	enum:TeStatisticType
TeNOTURN	kernel/TeDefines.h	161;"	d
TeNames2Decoders	kernel/TeDecoder.h	/^	typedef map<string,string> TeNames2Decoders;$/;"	t	class:TeDecoderFactory
TeNearest	kernel/TeGeometryAlgorithms.cpp	/^bool TeNearest ( TeCoord2D& pt, TeNodeSet& ns , int& k, const double& tol)$/;"	f
TeNearest	kernel/TeGeometryAlgorithms.cpp	/^bool TeNearest ( TeCoord2D& pt, TePointSet& ps , int& k, const double& tol)$/;"	f
TeNearest	kernel/TeGeometryAlgorithms.cpp	/^bool TeNearest ( TeCoord2D& pt, TeTextSet& ts , int& k, const double& tol)$/;"	f
TeNearest	kernel/TeGeometryAlgorithms.cpp	/^bool TeNearest (TeCoord2D& pt,TeLineSet& ls, int& lindex, TeCoord2D& pout, double& dmin, const double& tol)$/;"	f
TeNearest	kernel/TeGeometryAlgorithms.cpp	/^bool TeNearest(TeCoord2D& pt, TeLineSet& ls , int& k, TeCoord2D& pi, const double& tol)$/;"	f
TeNearest	kernel/TeGeometryAlgorithms.cpp	/^bool TeNearest(TeCoord2D& pt, TePolygonSet& ps , int& k, const double& \/*tol*\/)$/;"	f
TeNearestByPoints	kernel/TeGeometryAlgorithms.cpp	/^bool TeNearestByPoints ( TeCoord2D& pt, TeLineSet& ls , int& k, double& dist, const double& tol)$/;"	f
TeNearestNeighboursStrategy	kernel/TeDataTypes.h	/^enum TeGPMConstructionStrategy { TeAdjacencyStrategy, TeDistanceStrategy, TeNearestNeighboursStrategy,$/;"	e	enum:TeGPMConstructionStrategy
TeNeighbours	kernel/TeNeighbours.cpp	/^TeNeighbours::TeNeighbours (const TeNeighbours& neigh)$/;"	f	class:TeNeighbours
TeNeighbours	kernel/TeNeighbours.cpp	/^TeNeighbours::TeNeighbours(const TeNeighboursMap& neigh)  $/;"	f	class:TeNeighbours
TeNeighbours	kernel/TeNeighbours.h	/^	TeNeighbours () {};$/;"	f	class:TeNeighbours
TeNeighbours	kernel/TeNeighbours.h	/^class TL_DLL TeNeighbours  $/;"	c
TeNeighboursMap	kernel/TeNeighbours.h	/^typedef map<string, TeProxMatrixAttributes> TeNeighboursMap;$/;"	t
TeNetwork	kernel/TeNetwork.cpp	/^TeNetwork:: TeNetwork (TeLineSet& ls)  : graph_ (false)$/;"	f	class:TeNetwork
TeNetwork	kernel/TeNetwork.h	/^	TeNetwork() : graph_ (false) { };$/;"	f	class:TeNetwork
TeNetwork	kernel/TeNetwork.h	/^class TL_DLL TeNetwork$/;"	c
TeNetwork_H	kernel/TeNetwork.h	27;"	d
TeNextStep	functions/TeLayerFunctions.cpp	/^bool TeNextStep(int step)$/;"	f
TeNoCaseCmp	kernel/TeUtils.cpp	/^bool TeNoCaseCmp(const char&  c1, const char& c2)$/;"	f
TeNoCompression	kernel/TeRasterParams.h	/^	{ TeNoCompression, TeZLib, TeJpeg, TeTiffCompression };$/;"	e	enum:TeRasterParams::TeRasterCompressionMode
TeNoExpansible	kernel/TeRasterParams.h	/^	{  TeExpansible=1, TeNoExpansible=2 };$/;"	e	enum:TeRasterParams::TeRasterTilingType
TeNoGrouping	kernel/TeDataTypes.h	/^  TeRasterSlicing = 4, TeCustomGroup = 5, TeNoGrouping = 100 };$/;"	e	enum:TeGroupingMode
TeNoProjection	kernel/TeProjection.h	/^	TeNoProjection(const TeDatum& datum = TeDatum(), const string& units = "Units"):$/;"	f	class:TeNoProjection
TeNoProjection	kernel/TeProjection.h	/^class TL_DLL TeNoProjection : public TeProjection$/;"	c
TeNoRelation	kernel/TeDataTypes.h	/^{	TeNoRelation, TeRINoCascadeDeletion, TeRICascadeDeletion };$/;"	e	enum:TeDBRelationType
TeNoSlicingStrategy	kernel/TeDataTypes.h	/^enum TeGPMSlicingStrategy { TeNoSlicingStrategy, TeZonesSlicingStrategy };$/;"	e	enum:TeGPMSlicingStrategy
TeNoTransf	kernel/TeRasterTransform.h	/^	{	TeNoTransf=0, TeMono2Three=1, TeBand2Band=2, TePall2Three=3, TeLUT2Three=4, $/;"	e	enum:TeRasterTransform::TeRasterTransfFunctions
TeNoWeightsStrategy	kernel/TeDataTypes.h	/^enum TeGPMWeightsStrategy { TeNoWeightsStrategy, TeInverseDistanceStrategy, $/;"	e	enum:TeGPMWeightsStrategy
TeNode	kernel/TeGeometry.h	/^class TL_DLL TeNode: public TeGeomSingle<TeCoord2D>$/;"	c
TeNodeMap	drivers/ado/TeAdoDB.cpp	/^typedef map<int,TeNode> TeNodeMap;$/;"	t	file:
TeNodeMap	drivers/ado/TeAdoFireBird.cpp	/^typedef map<int,TeNode> TeNodeMap;$/;"	t	file:
TeNodeMap	drivers/ado/TeAdoOracle.cpp	/^typedef map<int,TeNode> TeNodeMap;$/;"	t	file:
TeNodeMap	drivers/ado/TeAdoSqlServer.cpp	/^typedef map<int,TeNode> TeNodeMap;$/;"	t	file:
TeNodeMap	drivers/ado/TeAdoSqlServerSpatial.cpp	/^typedef map<int,TeNode> TeNodeMap;$/;"	t	file:
TeNodeMap	kernel/TeDatabase.cpp	/^typedef map<int,TeNode> TeNodeMap;$/;"	t	file:
TeNodeSet	kernel/TeGeometry.h	/^class TL_DLL TeNodeSet : public TeGeomComposite<TeNode> $/;"	c
TeNormalizeIntersection	kernel/TeIntersector.cpp	/^void TeNormalizeIntersection(TeINTERSECTOR2::TeBoundaryIP& ip, TeINTERSECTOR2::TeVectorBoundaryIP& report, TeIntersectionIndex& interIndex)$/;"	f
TeNotGrouped	kernel/TeDataTypes.h	/^	TeSelectedByPointingAndQuery, TeSelectedByPointingOrQuery, TeGrouped, TeNotGrouped };$/;"	e	enum:TeSelectedObjects
TeNotReady	kernel/TeRasterParams.h	/^	{ TeNotReady, TeReadyToRead, TeReadyToWrite };$/;"	e	enum:TeRasterParams::TeRasterStatus
TeNotSelectedByPointing	kernel/TeDataTypes.h	/^{	TeAll, TeSelectedByPointing, TeNotSelectedByPointing, TeSelectedByQuery, TeNotSelectedByQuery,$/;"	e	enum:TeSelectedObjects
TeNotSelectedByQuery	kernel/TeDataTypes.h	/^{	TeAll, TeSelectedByPointing, TeNotSelectedByPointing, TeSelectedByQuery, TeNotSelectedByQuery,$/;"	e	enum:TeSelectedObjects
TeOBJECT	kernel/TeDataTypes.h	/^{TeSTRING, TeREAL, TeINT, TeDATETIME, TeBLOB, TeOBJECT, TeCHARACTER, TeUNKNOWN, TeUNSIGNEDINT,$/;"	e	enum:TeAttrDataType
TeOCIConnection	drivers/Oracle/TeOCIConnect.cpp	/^TeOCIConnection::TeOCIConnection() $/;"	f	class:TeOCIConnection
TeOCIConnection	drivers/Oracle/TeOCIConnect.h	/^class TLORACLE_DLL TeOCIConnection$/;"	c
TeOCICursor	drivers/Oracle/TeOCICursor.cpp	/^TeOCICursor::TeOCICursor(TeOCIConnection* connec, const unsigned long& maxBlobSize, const unsigned long& maxRowNum)$/;"	f	class:TeOCICursor
TeOCICursor	drivers/Oracle/TeOCICursor.h	/^class TLORACLE_DLL TeOCICursor$/;"	c
TeOCIOracle	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::TeOCIOracle() $/;"	f	class:TeOCIOracle
TeOCIOracle	drivers/Oracle/TeOCIOracle.h	/^class TLORACLE_DLL TeOCIOracle : public TeDatabase$/;"	c
TeOCIOracleFactory	drivers/Oracle/TeOCIOracle.h	/^    TeOCIOracleFactory() : TeDatabaseFactory( std::string( "OracleOCI" ) ) {};      $/;"	f	class:TeOCIOracleFactory
TeOCIOracleFactory	drivers/Oracle/TeOCIOracle.h	/^class TLORACLE_DLL TeOCIOracleFactory : public TeDatabaseFactory$/;"	c
TeOCIOracleFactory_instance	drivers/Oracle/TeOCIOracle.h	/^  static TeOCIOracleFactory TeOCIOracleFactory_instance;$/;"	m	namespace:__anon78
TeOCIOraclePortal	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::TeOCIOraclePortal(TeOCIOracle *pDatabase) $/;"	f	class:TeOCIOraclePortal
TeOCIOraclePortal	drivers/Oracle/TeOCIOracle.h	/^class TLORACLE_DLL TeOCIOraclePortal : public TeDatabasePortal$/;"	c
TeOGRDataSet	drivers/gdal/TeOGRDataSet.cpp	/^TeOGRDataSet::TeOGRDataSet(OGRLayer* ogrLayer)$/;"	f	class:TeOGRDataSet
TeOGRDataSet	drivers/gdal/TeOGRDataSet.h	/^class TEGDAL_DLL TeOGRDataSet : public TeGeoDataSet $/;"	c
TeOGRDriver	drivers/gdal/TeOGRDriver.cpp	/^TeOGRDriver::TeOGRDriver(const std::string& fileName, const bool &writing, const std::string &OGRDriverName) :$/;"	f	class:TeOGRDriver
TeOGRDriver	drivers/gdal/TeOGRDriver.h	/^class TEGDAL_DLL TeOGRDriver : public TeGeoDataDriver $/;"	c
TeOGRDriverFactory	drivers/gdal/TeOGRDriverFactory.cpp	/^TeOGRDriverFactory::TeOGRDriverFactory() :$/;"	f	class:TeOGRDriverFactory
TeOGRDriverFactory	drivers/gdal/TeOGRDriverFactory.h	/^class TEGDAL_DLL TeOGRDriverFactory : public TeGDriverFactory $/;"	c
TeOR	kernel/TeDataTypes.h	/^enum TeLogicalOperator { TeAND = 1, TeOR = 2 };$/;"	e	enum:TeLogicalOperator
TeOUTLIER	kernel/TeTemporalSeries.h	/^enum TeTSDataType  { TeDATA, TeMISSING, TeDMISSING, TeOUTLIER, TeDOUTLIER, TePREDICTION };$/;"	e	enum:TeTSDataType
TeOUTSIDE	kernel/TeDefines.h	176;"	d
TeOUTSIDEBUFFER	kernel/TeBufferRegion.h	/^	enum TeBufferType { TeINSIDEBUFFER, TeOUTSIDEBUFFER, TeINSIDEOUTSIDEBUFFER };$/;"	e	enum:TeBUFFERREGION::TeBufferType
TeOVERLAPS	kernel/TeDataTypes.h	/^	TeOVERLAPS = 16, TeCONTAINS = 32, TeINTERSECTS = 64, TeEQUALS = 128, TeCOVERS = 256,$/;"	e	enum:TeSpatialRelation
TeOVERLAY	kernel/TeOverlay.h	/^namespace TeOVERLAY$/;"	n
TeOVERLAY	kernel/TeOverlayUtils.h	/^namespace TeOVERLAY$/;"	n
TeObjStatisticsMap	kernel/TeDataTypes.h	/^typedef map<string, TeStatisticValMap> TeObjStatisticsMap;$/;"	t
TeObjectSelectionMode	kernel/TeDataTypes.h	/^enum TeObjectSelectionMode$/;"	g
TeObjectStatistics	kernel/TeDatabase.h	/^typedef map<string, TeStatisticsDimensionVect>  TeObjectStatistics;$/;"	t
TeOpenNetworkStrategy	kernel/TeDataTypes.h	/^								 TeClosedNetworkStrategy, TeOpenNetworkStrategy, TeOpenNetworkStrategy2 };$/;"	e	enum:TeGPMConstructionStrategy
TeOpenNetworkStrategy2	kernel/TeDataTypes.h	/^								 TeClosedNetworkStrategy, TeOpenNetworkStrategy, TeOpenNetworkStrategy2 };$/;"	e	enum:TeGPMConstructionStrategy
TeOptimizedInterpolateIn	kernel/TeRasterRemap.cpp	/^bool TeRasterRemap::TeOptimizedInterpolateIn( const TeBox &box )$/;"	f	class:TeRasterRemap
TeOracle	drivers/ado/TeAdoOracle.cpp	/^TeOracle::TeOracle()  $/;"	f	class:TeOracle
TeOracle	drivers/ado/TeAdoOracle.h	/^class  TLADO_DLL  TeOracle : public TeAdo$/;"	c
TeOracleFactory	drivers/ado/TeAdoOracle.h	/^    TeOracleFactory() : TeDatabaseFactory( std::string( "OracleAdo" ) ) {};      $/;"	f	class:TeOracleFactory
TeOracleFactory	drivers/ado/TeAdoOracle.h	/^class TLADO_DLL TeOracleFactory : public TeDatabaseFactory$/;"	c
TeOracleFactory_instance	drivers/ado/TeAdoOracle.h	/^  static TeOracleFactory TeOracleFactory_instance;$/;"	m	namespace:__anon73
TeOraclePortal	drivers/ado/TeAdoOracle.cpp	/^TeOraclePortal::TeOraclePortal ( TeDatabase*  pDatabase) $/;"	f	class:TeOraclePortal
TeOraclePortal	drivers/ado/TeAdoOracle.cpp	/^TeOraclePortal::TeOraclePortal()$/;"	f	class:TeOraclePortal
TeOraclePortal	drivers/ado/TeAdoOracle.h	/^class  TLADO_DLL  TeOraclePortal : public TeAdoPortal$/;"	c
TeOracleSpatial	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::TeOracleSpatial() : TeOCIOracle()  $/;"	f	class:TeOracleSpatial
TeOracleSpatial	drivers/Oracle/TeOracleSpatial.h	/^class TLORACLE_DLL TeOracleSpatial : public TeOCIOracle$/;"	c
TeOracleSpatialFactory	drivers/Oracle/TeOracleSpatial.h	/^    TeOracleSpatialFactory() : TeDatabaseFactory( $/;"	f	class:TeOracleSpatialFactory
TeOracleSpatialFactory	drivers/Oracle/TeOracleSpatial.h	/^class TLORACLE_DLL TeOracleSpatialFactory : public TeDatabaseFactory$/;"	c
TeOracleSpatialFactory_instance	drivers/Oracle/TeOracleSpatial.h	/^  static TeOracleSpatialFactory TeOracleSpatialFactory_instance;$/;"	m	namespace:__anon79
TeOracleSpatialPortal	drivers/Oracle/TeOracleSpatial.h	/^	TeOracleSpatialPortal(TeOracleSpatial* pDatabase) : TeOCIOraclePortal(pDatabase) $/;"	f	class:TeOracleSpatialPortal
TeOracleSpatialPortal	drivers/Oracle/TeOracleSpatial.h	/^class TLORACLE_DLL TeOracleSpatialPortal : public TeOCIOraclePortal$/;"	c
TeOrientation	kernel/TeGeometryAlgorithms.cpp	/^short TeOrientation(const TeLinearRing& r)$/;"	f
TeOutsideBufferRegion	kernel/TeBufferRegion.cpp	/^inline bool TeOutsideBufferRegion(const TePolygon& pol, const double& bufferDistance, const unsigned int& numPoints, const unsigned int& bufferLevels, vector<TePolygonSet>& polsVec)$/;"	f	namespace:TeBUFFERREGION
TeOverlaps	kernel/TeGeometryAlgorithms.cpp	/^bool TeOverlaps(const TeCell& cell, const TePolygon& poly)$/;"	f
TeOverlaps	kernel/TeGeometryAlgorithms.cpp	/^bool TeOverlaps(const TeCell& cell1, const TeCell& cell2)$/;"	f
TeOverlaps	kernel/TeGeometryAlgorithms.cpp	/^bool TeOverlaps(const TeLine2D& redLine, const TeLine2D& blueLine)$/;"	f
TeOverlaps	kernel/TeGeometryAlgorithms.cpp	/^bool TeOverlaps(const TePolygon& redPol, const TePolygon& bluePol)$/;"	f
TeOverlay	kernel/TeOverlay.cpp	/^TeMultiGeometry TeOVERLAY::TeOverlay(const TeLineSet& redLinesIn, const TePolygonSet& bluePolsIn, const short& operation)$/;"	f	class:TeOVERLAY
TeOverlay	kernel/TeOverlay.cpp	/^TeMultiGeometry TeOverlay(const TeLineSet& redLinesIn, const TePolygonSet& bluePolsIn, TeINTERSECTOR2::TeSegmentRTree& blueTree, const short& operation)$/;"	f
TeOverlay	kernel/TeOverlay.cpp	/^bool TeOVERLAY::TeOverlay(const TePolygonSet& redPols, const TePolygonSet& bluePols, TePolygonSet& polsOut, const short& operation)$/;"	f	class:TeOVERLAY
TeOverlay	kernel/TeOverlay.cpp	/^bool TeOverlay(TePolygonSet& redPols, vector<TePolygonSet>& bluePols, vector<TePolygonSet>& vecPolsOut, vector<bool>& resultVec, const short& operation, const bool& makeCopy, const bool fixOrientation)$/;"	f
TeOverlay	kernel/TeOverlay.cpp	/^void TeOverlay(vector<TeLineSet>& redLinesIn, const TePolygonSet& bluePolsIn, vector<TeMultiGeometry>& outPutGeoms, const short& operation)$/;"	f
TeOverlayMiddle	kernel/TeOverlayUtils.cpp	/^inline void TeOverlayMiddle(const TeCoord2D& c1, const TeCoord2D& c2, TeCoord2D& m)$/;"	f
TePDI2DLutType	image_processing/TePDITypes.hpp	/^    typedef std::map< double, TePDILutType > TePDI2DLutType;$/;"	t	namespace:TePDITypes
TePDIAlgorithm	image_processing/TePDIAlgorithm.cpp	/^TePDIAlgorithm::TePDIAlgorithm()$/;"	f	class:TePDIAlgorithm
TePDIAlgorithm	image_processing/TePDIAlgorithm.hpp	/^      TePDIAlgorithm( const TePDIAlgorithm& ) {};$/;"	f	class:TePDIAlgorithm
TePDIAlgorithm	image_processing/TePDIAlgorithm.hpp	/^  class PDI_DLL TePDIAlgorithm$/;"	c
TePDIAlgorithmFactory	image_processing/TePDIAlgorithmFactory.cpp	/^TePDIAlgorithmFactory::TePDIAlgorithmFactory( const std::string& factoryName )$/;"	f	class:TePDIAlgorithmFactory
TePDIAlgorithmFactory	image_processing/TePDIAlgorithmFactory.hpp	/^  class PDI_DLL TePDIAlgorithmFactory : $/;"	c
TePDIArithmetic	image_processing/TePDIArithmetic.cpp	/^TePDIArithmetic::TePDIArithmetic()$/;"	f	class:TePDIArithmetic
TePDIArithmetic	image_processing/TePDIArithmetic.hpp	/^  class PDI_DLL TePDIArithmetic : public TePDIAlgorithm $/;"	c
TePDIArithmeticFactory	image_processing/TePDIArithmeticFactory.cpp	/^TePDIArithmeticFactory::TePDIArithmeticFactory()$/;"	f	class:TePDIArithmeticFactory
TePDIArithmeticFactory	image_processing/TePDIArithmeticFactory.hpp	/^  class PDI_DLL TePDIArithmeticFactory : public TePDIAlgorithmFactory$/;"	c
TePDIArithmeticFactory_instance	image_processing/TePDIArithmeticFactory.hpp	/^    static TePDIArithmeticFactory TePDIArithmeticFactory_instance;$/;"	m	namespace:__anon21
TePDIBDFilter	image_processing/TePDIBDFilter.cpp	/^TePDIBDFilter::TePDIBDFilter()$/;"	f	class:TePDIBDFilter
TePDIBDFilter	image_processing/TePDIBDFilter.hpp	/^  class PDI_DLL TePDIBDFilter : public TePDIBufferedFilter{$/;"	c
TePDIBDFilterFactory	image_processing/TePDIBDFilterFactory.cpp	/^TePDIBDFilterFactory::TePDIBDFilterFactory()$/;"	f	class:TePDIBDFilterFactory
TePDIBDFilterFactory	image_processing/TePDIBDFilterFactory.hpp	/^  class PDI_DLL TePDIBDFilterFactory : public TePDIAlgorithmFactory$/;"	c
TePDIBDFilterFactory_instance	image_processing/TePDIBDFilterFactory.hpp	/^    static TePDIBDFilterFactory TePDIBDFilterFactory_instance;$/;"	m	namespace:__anon19
TePDIBDType	image_processing/TePDIBDFilter.hpp	/^      enum TePDIBDType{$/;"	g	class:TePDIBDFilter
TePDIBaatz	image_processing/TePDIBaatz.cpp	/^TePDIBaatz::TePDIBaatz()$/;"	f	class:TePDIBaatz
TePDIBaatz	image_processing/TePDIBaatz.hpp	/^  class PDI_DLL TePDIBaatz : public TePDIAlgorithm {$/;"	c
TePDIBatchGeoMosaic	image_processing/TePDIBatchGeoMosaic.cpp	/^TePDIBatchGeoMosaic::TePDIBatchGeoMosaic()$/;"	f	class:TePDIBatchGeoMosaic
TePDIBatchGeoMosaic	image_processing/TePDIBatchGeoMosaic.hpp	/^  class PDI_DLL TePDIBatchGeoMosaic : public TePDIAlgorithm {$/;"	c
TePDIBlender	image_processing/TePDIBlender.cpp	/^TePDIBlender::TePDIBlender()$/;"	f	class:TePDIBlender
TePDIBlender	image_processing/TePDIBlender.hpp	/^  class PDI_DLL TePDIBlender $/;"	c
TePDIBufferedFilter	image_processing/TePDIBufferedFilter.cpp	/^TePDIBufferedFilter::TePDIBufferedFilter()$/;"	f	class:TePDIBufferedFilter
TePDIBufferedFilter	image_processing/TePDIBufferedFilter.hpp	/^  class PDI_DLL TePDIBufferedFilter : public TePDIAlgorithm {$/;"	c
TePDICluster	image_processing/TePDICluster.cpp	/^TePDICluster::TePDICluster(int nBands) : nbands(nBands), nElems(0)$/;"	f	class:TePDICluster
TePDICluster	image_processing/TePDICluster.hpp	/^    TePDICluster()$/;"	f	class:TePDICluster
TePDICluster	image_processing/TePDICluster.hpp	/^class PDI_DLL TePDICluster$/;"	c
TePDIColorTransform	image_processing/TePDIColorTransform.cpp	/^TePDIColorTransform::TePDIColorTransform()$/;"	f	class:TePDIColorTransform
TePDIColorTransform	image_processing/TePDIColorTransform.hpp	/^  class PDI_DLL TePDIColorTransform : public TePDIAlgorithm {$/;"	c
TePDIColorTransformFactory	image_processing/TePDIColorTransformFactory.cpp	/^TePDIColorTransformFactory::TePDIColorTransformFactory()$/;"	f	class:TePDIColorTransformFactory
TePDIColorTransformFactory	image_processing/TePDIColorTransformFactory.hpp	/^  class PDI_DLL TePDIColorTransformFactory : public TePDIAlgorithmFactory$/;"	c
TePDIColorTransformFactory_instance	image_processing/TePDIColorTransformFactory.hpp	/^    static TePDIColorTransformFactory TePDIColorTransformFactory_instance;$/;"	m	namespace:__anon4
TePDIContrast	image_processing/TePDIContrast.cpp	/^TePDIContrast::TePDIContrast()$/;"	f	class:TePDIContrast
TePDIContrast	image_processing/TePDIContrast.hpp	/^  class PDI_DLL TePDIContrast : public TePDIAlgorithm {$/;"	c
TePDIContrastFactory	image_processing/TePDIContrastFactory.cpp	/^TePDIContrastFactory::TePDIContrastFactory()$/;"	f	class:TePDIContrastFactory
TePDIContrastFactory	image_processing/TePDIContrastFactory.hpp	/^  class PDI_DLL TePDIContrastFactory : public TePDIAlgorithmFactory$/;"	c
TePDIContrastFactory_instance	image_processing/TePDIContrastFactory.hpp	/^    static TePDIContrastFactory TePDIContrastFactory_instance;$/;"	m	namespace:__anon12
TePDIContrastHistEqualizer	image_processing/TePDIContrast.hpp	/^        TePDIContrastHistEqualizer = 7,$/;"	e	enum:TePDIContrast::TePDIContrastType
TePDIContrastLinear	image_processing/TePDIContrast.hpp	/^        TePDIContrastLinear = 2,$/;"	e	enum:TePDIContrast::TePDIContrastType
TePDIContrastLog	image_processing/TePDIContrast.hpp	/^        TePDIContrastLog = 5,$/;"	e	enum:TePDIContrast::TePDIContrastType
TePDIContrastMinMax	image_processing/TePDIContrast.hpp	/^        TePDIContrastMinMax = 1,$/;"	e	enum:TePDIContrast::TePDIContrastType
TePDIContrastNegative	image_processing/TePDIContrast.hpp	/^        TePDIContrastNegative = 6,$/;"	e	enum:TePDIContrast::TePDIContrastType
TePDIContrastSimpleSlicer	image_processing/TePDIContrast.hpp	/^        TePDIContrastSimpleSlicer = 8,$/;"	e	enum:TePDIContrast::TePDIContrastType
TePDIContrastSquare	image_processing/TePDIContrast.hpp	/^        TePDIContrastSquare = 4,$/;"	e	enum:TePDIContrast::TePDIContrastType
TePDIContrastSquareRoot	image_processing/TePDIContrast.hpp	/^        TePDIContrastSquareRoot = 3,$/;"	e	enum:TePDIContrast::TePDIContrastType
TePDIContrastStat	image_processing/TePDIContrast.hpp	/^        TePDIContrastStat = 9$/;"	e	enum:TePDIContrast::TePDIContrastType
TePDIContrastType	image_processing/TePDIContrast.hpp	/^      enum TePDIContrastType{$/;"	g	class:TePDIContrast
TePDICorrelationMatching	image_processing/TePDICorrelationMatching.cpp	/^TePDICorrelationMatching::TePDICorrelationMatching()$/;"	f	class:TePDICorrelationMatching
TePDICorrelationMatching	image_processing/TePDICorrelationMatching.hpp	/^  class PDI_DLL TePDICorrelationMatching : public TePDIAlgorithm {$/;"	c
TePDIDecorrelationEnhancement	image_processing/TePDIDecorrelationEnhancement.cpp	/^TePDIDecorrelationEnhancement::TePDIDecorrelationEnhancement()$/;"	f	class:TePDIDecorrelationEnhancement
TePDIDecorrelationEnhancement	image_processing/TePDIDecorrelationEnhancement.hpp	/^  class PDI_DLL TePDIDecorrelationEnhancement : public TePDIAlgorithm {$/;"	c
TePDIEMClas	image_processing/TePDIEMClas.cpp	/^TePDIEMClas::TePDIEMClas()$/;"	f	class:TePDIEMClas
TePDIEMClas	image_processing/TePDIEMClas.hpp	/^  class PDI_DLL TePDIEMClas : public TePDIAlgorithm$/;"	c
TePDIEMClasFactory	image_processing/TePDIEMClasFactory.cpp	/^TePDIEMClasFactory::TePDIEMClasFactory()$/;"	f	class:TePDIEMClasFactory
TePDIEMClasFactory	image_processing/TePDIEMClasFactory.hpp	/^  class PDI_DLL TePDIEMClasFactory : public TePDIAlgorithmFactory$/;"	c
TePDIEMClasFactory_instance	image_processing/TePDIEMClasFactory.hpp	/^    static TePDIEMClasFactory TePDIEMClasFactory_instance;$/;"	m	namespace:__anon18
TePDIEspecData	image_processing/TePDIEspecData.cpp	/^TePDIEspecData::TePDIEspecData()$/;"	f	class:TePDIEspecData
TePDIEspecData	image_processing/TePDIEspecData.hpp	/^class PDI_DLL TePDIEspecData$/;"	c
TePDIFFT	image_processing/TePDIFFT.cpp	/^TePDIFFT::TePDIFFT()$/;"	f	class:TePDIFFT
TePDIFFT	image_processing/TePDIFFT.hpp	/^  class PDI_DLL TePDIFFT : public TePDIAlgorithm {$/;"	c
TePDIFilterMask	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::TePDIFilterMask( unsigned int width, double gain )$/;"	f	class:TePDIFilterMask
TePDIFilterMask	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::TePDIFilterMask()$/;"	f	class:TePDIFilterMask
TePDIFilterMask	image_processing/TePDIFilterMask.hpp	/^  class PDI_DLL TePDIFilterMask {$/;"	c
TePDIFrostDTLinear	image_processing/TePDIRadarFrostFilter.hpp	/^        TePDIFrostDTLinear = 1,$/;"	e	enum:TePDIRadarFrostFilter::TePDIFrostDetType
TePDIFrostDTQuadratic	image_processing/TePDIRadarFrostFilter.hpp	/^        TePDIFrostDTQuadratic = 2$/;"	e	enum:TePDIRadarFrostFilter::TePDIFrostDetType
TePDIFrostDetType	image_processing/TePDIRadarFrostFilter.hpp	/^      enum TePDIFrostDetType{$/;"	g	class:TePDIRadarFrostFilter
TePDIFusionIndexes	image_processing/TePDIFusionIndexes.cpp	/^TePDIFusionIndexes::TePDIFusionIndexes()$/;"	f	class:TePDIFusionIndexes
TePDIFusionIndexes	image_processing/TePDIFusionIndexes.hpp	/^  class PDI_DLL TePDIFusionIndexes : public TePDIAlgorithm {$/;"	c
TePDIGammaAdaptType	image_processing/TePDIRadarGammaFilter.hpp	/^        TePDIGammaAdaptType = 2$/;"	e	enum:TePDIRadarGammaFilter::TePDIGammaFType
TePDIGammaDTLinear	image_processing/TePDIRadarGammaFilter.hpp	/^        TePDIGammaDTLinear = 1,$/;"	e	enum:TePDIRadarGammaFilter::TePDIGammaDetType
TePDIGammaDTQuadratic	image_processing/TePDIRadarGammaFilter.hpp	/^        TePDIGammaDTQuadratic = 2$/;"	e	enum:TePDIRadarGammaFilter::TePDIGammaDetType
TePDIGammaDetType	image_processing/TePDIRadarGammaFilter.hpp	/^      enum TePDIGammaDetType{$/;"	g	class:TePDIRadarGammaFilter
TePDIGammaFType	image_processing/TePDIRadarGammaFilter.hpp	/^      enum TePDIGammaFType{$/;"	g	class:TePDIRadarGammaFilter
TePDIGammaFixedType	image_processing/TePDIRadarGammaFilter.hpp	/^        TePDIGammaFixedType = 1,$/;"	e	enum:TePDIRadarGammaFilter::TePDIGammaFType
TePDIGarguetFusion	image_processing/TePDIGarguetFusion.cpp	/^TePDIGarguetFusion::TePDIGarguetFusion()$/;"	f	class:TePDIGarguetFusion
TePDIGarguetFusion	image_processing/TePDIGarguetFusion.hpp	/^  class PDI_DLL TePDIGarguetFusion : public TePDIAlgorithm$/;"	c
TePDIGeneralizedIHSFusion	image_processing/TePDIGeneralizedIHSFusion.cpp	/^TePDIGeneralizedIHSFusion::TePDIGeneralizedIHSFusion()$/;"	f	class:TePDIGeneralizedIHSFusion
TePDIGeneralizedIHSFusion	image_processing/TePDIGeneralizedIHSFusion.hpp	/^  class PDI_DLL TePDIGeneralizedIHSFusion : public TePDIAlgorithm {$/;"	c
TePDIGeoMosaic	image_processing/TePDIGeoMosaic.cpp	/^TePDIGeoMosaic::TePDIGeoMosaic()$/;"	f	class:TePDIGeoMosaic
TePDIGeoMosaic	image_processing/TePDIGeoMosaic.hpp	/^  class PDI_DLL TePDIGeoMosaic : public TePDIAlgorithm {$/;"	c
TePDIHMapSpec	image_processing/TePDIHistogram.hpp	/^  class PDI_DLL TePDIHMapSpec : public std::map< double, unsigned int > {};$/;"	c
TePDIHants	image_processing/TePDIHants.cpp	/^TePDIHants::TePDIHants()$/;"	f	class:TePDIHants
TePDIHants	image_processing/TePDIHants.hpp	/^  class PDI_DLL TePDIHants : public TePDIAlgorithm {$/;"	c
TePDIHaralick	image_processing/TePDIHaralick.cpp	/^TePDIHaralick::TePDIHaralick()$/;"	f	class:TePDIHaralick
TePDIHaralick	image_processing/TePDIHaralick.hpp	/^  class PDI_DLL TePDIHaralick : public TePDIAlgorithm $/;"	c
TePDIHistogram	image_processing/TePDIHistogram.cpp	/^TePDIHistogram::TePDIHistogram( $/;"	f	class:TePDIHistogram
TePDIHistogram	image_processing/TePDIHistogram.cpp	/^TePDIHistogram::TePDIHistogram( const TePDIHistogram& external )$/;"	f	class:TePDIHistogram
TePDIHistogram	image_processing/TePDIHistogram.cpp	/^TePDIHistogram::TePDIHistogram()$/;"	f	class:TePDIHistogram
TePDIHistogram	image_processing/TePDIHistogram.hpp	/^  class PDI_DLL TePDIHistogram : public TePDIHMapSpec {$/;"	c
TePDIIHSFusion	image_processing/TePDIIHSFusion.cpp	/^TePDIIHSFusion::TePDIIHSFusion()$/;"	f	class:TePDIIHSFusion
TePDIIHSFusion	image_processing/TePDIIHSFusion.hpp	/^  class PDI_DLL TePDIIHSFusion : public TePDIAlgorithm{$/;"	c
TePDIIHSWaveletFusion	image_processing/TePDIIHSWaveletFusion.cpp	/^TePDIIHSWaveletFusion::TePDIIHSWaveletFusion()$/;"	f	class:TePDIIHSWaveletFusion
TePDIIHSWaveletFusion	image_processing/TePDIIHSWaveletFusion.hpp	/^  class PDI_DLL TePDIIHSWaveletFusion : public TePDIAlgorithm {$/;"	c
TePDIInterpolator	image_processing/TePDIInterpolator.cpp	/^TePDIInterpolator::TePDIInterpolator()$/;"	f	class:TePDIInterpolator
TePDIInterpolator	image_processing/TePDIInterpolator.hpp	/^  class PDI_DLL TePDIInterpolator {$/;"	c
TePDIIsosegClas	image_processing/TePDIIsosegClas.cpp	/^TePDIIsosegClas::TePDIIsosegClas()$/;"	f	class:TePDIIsosegClas
TePDIIsosegClas	image_processing/TePDIIsosegClas.hpp	/^class PDI_DLL TePDIIsosegClas : public TePDIAlgorithm$/;"	c
TePDIIsosegClasFactory	image_processing/TePDIIsosegClasFactory.cpp	/^TePDIIsosegClasFactory::TePDIIsosegClasFactory()$/;"	f	class:TePDIIsosegClasFactory
TePDIIsosegClasFactory	image_processing/TePDIIsosegClasFactory.hpp	/^  class PDI_DLL TePDIIsosegClasFactory : public TePDIAlgorithmFactory$/;"	c
TePDIIsosegClasFactory_instance	image_processing/TePDIIsosegClasFactory.hpp	/^    static TePDIIsosegClasFactory TePDIIsosegClasFactory_instance;$/;"	m	namespace:__anon7
TePDIJointHistogram	image_processing/TePDIJointHistogram.cpp	/^TePDIJointHistogram::TePDIJointHistogram( const TePDIJointHistogram& external )$/;"	f	class:TePDIJointHistogram
TePDIJointHistogram	image_processing/TePDIJointHistogram.cpp	/^TePDIJointHistogram::TePDIJointHistogram()$/;"	f	class:TePDIJointHistogram
TePDIJointHistogram	image_processing/TePDIJointHistogram.hpp	/^  class PDI_DLL TePDIJointHistogram$/;"	c
TePDIKMeansClas	image_processing/TePDIKMeansClas.cpp	/^TePDIKMeansClas::TePDIKMeansClas()$/;"	f	class:TePDIKMeansClas
TePDIKMeansClas	image_processing/TePDIKMeansClas.hpp	/^class PDI_DLL TePDIKMeansClas : public TePDIAlgorithm$/;"	c
TePDIKMeansClasFactory	image_processing/TePDIKMeansClasFactory.cpp	/^TePDIKMeansClasFactory::TePDIKMeansClasFactory()$/;"	f	class:TePDIKMeansClasFactory
TePDIKMeansClasFactory	image_processing/TePDIKMeansClasFactory.hpp	/^  class PDI_DLL TePDIKMeansClasFactory : public TePDIAlgorithmFactory$/;"	c
TePDIKMeansClasFactory_instance	image_processing/TePDIKMeansClasFactory.hpp	/^    static TePDIKMeansClasFactory TePDIKMeansClasFactory_instance;$/;"	m	namespace:__anon15
TePDIKuanAdaptType	image_processing/TePDIRadarKuanFilter.hpp	/^        TePDIKuanAdaptType = 2$/;"	e	enum:TePDIRadarKuanFilter::TePDIKuanFType
TePDIKuanDTLinear	image_processing/TePDIRadarKuanFilter.hpp	/^        TePDIKuanDTLinear = 1,$/;"	e	enum:TePDIRadarKuanFilter::TePDIKuanDetType
TePDIKuanDTQuadratic	image_processing/TePDIRadarKuanFilter.hpp	/^        TePDIKuanDTQuadratic = 2$/;"	e	enum:TePDIRadarKuanFilter::TePDIKuanDetType
TePDIKuanDetType	image_processing/TePDIRadarKuanFilter.hpp	/^      enum TePDIKuanDetType{$/;"	g	class:TePDIRadarKuanFilter
TePDIKuanFType	image_processing/TePDIRadarKuanFilter.hpp	/^      enum TePDIKuanFType{$/;"	g	class:TePDIRadarKuanFilter
TePDIKuanFixedType	image_processing/TePDIRadarKuanFilter.hpp	/^        TePDIKuanFixedType = 1,$/;"	e	enum:TePDIRadarKuanFilter::TePDIKuanFType
TePDILayerPtrType	image_processing/TePDITypes.hpp	/^    typedef TeSharedPtr< TeLayer > TePDILayerPtrType;$/;"	t	namespace:TePDITypes
TePDILeeAdaptType	image_processing/TePDIRadarLeeFilter.hpp	/^        TePDILeeAdaptType = 2$/;"	e	enum:TePDIRadarLeeFilter::TePDILeeFType
TePDILeeDTLinear	image_processing/TePDIRadarLeeFilter.hpp	/^        TePDILeeDTLinear = 1,$/;"	e	enum:TePDIRadarLeeFilter::TePDILeeDetType
TePDILeeDTQuadratic	image_processing/TePDIRadarLeeFilter.hpp	/^        TePDILeeDTQuadratic = 2$/;"	e	enum:TePDIRadarLeeFilter::TePDILeeDetType
TePDILeeDetType	image_processing/TePDIRadarLeeFilter.hpp	/^      enum TePDILeeDetType{$/;"	g	class:TePDIRadarLeeFilter
TePDILeeFType	image_processing/TePDIRadarLeeFilter.hpp	/^      enum TePDILeeFType{$/;"	g	class:TePDIRadarLeeFilter
TePDILeeFixedType	image_processing/TePDIRadarLeeFilter.hpp	/^        TePDILeeFixedType = 1,$/;"	e	enum:TePDIRadarLeeFilter::TePDILeeFType
TePDILevelRemap	image_processing/TePDILevelRemap.cpp	/^TePDILevelRemap::TePDILevelRemap()$/;"	f	class:TePDILevelRemap
TePDILevelRemap	image_processing/TePDILevelRemap.hpp	/^  class PDI_DLL TePDILevelRemap : public TePDIAlgorithm {$/;"	c
TePDILinearFilter	image_processing/TePDILinearFilter.cpp	/^TePDILinearFilter::TePDILinearFilter()$/;"	f	class:TePDILinearFilter
TePDILinearFilter	image_processing/TePDILinearFilter.hpp	/^  class PDI_DLL TePDILinearFilter : public TePDIBufferedFilter{$/;"	c
TePDILinearFilterFactory	image_processing/TePDILinearFilterFactory.cpp	/^TePDILinearFilterFactory::TePDILinearFilterFactory()$/;"	f	class:TePDILinearFilterFactory
TePDILinearFilterFactory	image_processing/TePDILinearFilterFactory.hpp	/^  class PDI_DLL TePDILinearFilterFactory : public TePDIAlgorithmFactory$/;"	c
TePDILinearFilterFactory_instance	image_processing/TePDILinearFilterFactory.hpp	/^    static TePDILinearFilterFactory TePDILinearFilterFactory_instance;$/;"	m	namespace:__anon5
TePDILutPtrType	image_processing/TePDITypes.hpp	/^    typedef TeSharedPtr< TePDILutType > TePDILutPtrType;    $/;"	t	namespace:TePDITypes
TePDILutType	image_processing/TePDITypes.hpp	/^    typedef std::map< double, double > TePDILutType;$/;"	t	namespace:TePDITypes
TePDILutsVectorType	image_processing/TePDITypes.hpp	/^    typedef std::vector< TePDILutType > TePDILutsVectorType;$/;"	t	namespace:TePDITypes
TePDIMDilationType	image_processing/TePDIMorfFilter.hpp	/^        TePDIMDilationType = 1,$/;"	e	enum:TePDIMorfFilter::TePDIMorfType
TePDIMErosionType	image_processing/TePDIMorfFilter.hpp	/^        TePDIMErosionType = 2,$/;"	e	enum:TePDIMorfFilter::TePDIMorfType
TePDIMIMatching	image_processing/TePDIMIMatching.cpp	/^TePDIMIMatching::TePDIMIMatching()$/;"	f	class:TePDIMIMatching
TePDIMIMatching	image_processing/TePDIMIMatching.hpp	/^  class PDI_DLL TePDIMIMatching : public TePDIAlgorithm {$/;"	c
TePDIMMIOMatching	image_processing/TePDIMMIOMatching.cpp	/^TePDIMMIOMatching::TePDIMMIOMatching()$/;"	f	class:TePDIMMIOMatching
TePDIMMIOMatching	image_processing/TePDIMMIOMatching.hpp	/^  class PDI_DLL TePDIMMIOMatching : public TePDIAlgorithm {$/;"	c
TePDIMMedianType	image_processing/TePDIMorfFilter.hpp	/^        TePDIMMedianType = 3,$/;"	e	enum:TePDIMorfFilter::TePDIMorfType
TePDIMModeType	image_processing/TePDIMorfFilter.hpp	/^        TePDIMModeType = 4$/;"	e	enum:TePDIMorfFilter::TePDIMorfType
TePDIMallatWavelets	image_processing/TePDIMallatWavelets.cpp	/^TePDIMallatWavelets::TePDIMallatWavelets()$/;"	f	class:TePDIMallatWavelets
TePDIMallatWavelets	image_processing/TePDIMallatWavelets.hpp	/^  class PDI_DLL TePDIMallatWavelets : public TePDIAlgorithm {$/;"	c
TePDIMathFunctions	image_processing/TePDIMathFunctions.cpp	/^namespace TePDIMathFunctions {$/;"	n	file:
TePDIMathFunctions	image_processing/TePDIMathFunctions.hpp	/^  namespace TePDIMathFunctions$/;"	n
TePDIMatrix	image_processing/TePDIMatrix.hpp	/^  TePDIMatrix< ElementType >::TePDIMatrix( $/;"	f	class:TePDIMatrix
TePDIMatrix	image_processing/TePDIMatrix.hpp	/^  TePDIMatrix< ElementType >::TePDIMatrix()$/;"	f	class:TePDIMatrix
TePDIMatrix	image_processing/TePDIMatrix.hpp	/^  class TePDIMatrix {$/;"	c
TePDIMatrixFunctions	image_processing/TePDIMatrixFunctions.cpp	/^namespace TePDIMatrixFunctions {$/;"	n	file:
TePDIMatrixFunctions	image_processing/TePDIMatrixFunctions.hpp	/^  namespace TePDIMatrixFunctions$/;"	n
TePDIMatrixPtrType	image_processing/TePDITypes.hpp	/^    typedef TeSharedPtr< TeMatrix > TePDIMatrixPtrType;$/;"	t	namespace:TePDITypes
TePDIMixModel	image_processing/TePDIMixModel.cpp	/^TePDIMixModel::TePDIMixModel()$/;"	f	class:TePDIMixModel
TePDIMixModel	image_processing/TePDIMixModel.hpp	/^class PDI_DLL TePDIMixModel : public TePDIAlgorithm$/;"	c
TePDIMixModelComponent	image_processing/TePDIMixModelComponent.cpp	/^TePDIMixModelComponent::TePDIMixModelComponent(string l)$/;"	f	class:TePDIMixModelComponent
TePDIMixModelComponent	image_processing/TePDIMixModelComponent.hpp	/^class PDI_DLL TePDIMixModelComponent$/;"	c
TePDIMixModelComponentList	image_processing/TePDIMixModelComponentList.cpp	/^TePDIMixModelComponentList::TePDIMixModelComponentList()$/;"	f	class:TePDIMixModelComponentList
TePDIMixModelComponentList	image_processing/TePDIMixModelComponentList.hpp	/^class PDI_DLL TePDIMixModelComponentList$/;"	c
TePDIMixModelFactory	image_processing/TePDIMixModelFactory.cpp	/^TePDIMixModelFactory::TePDIMixModelFactory():TePDIAlgorithmFactory(std::string("TePDIMixModel"))$/;"	f	class:TePDIMixModelFactory
TePDIMixModelFactory	image_processing/TePDIMixModelFactory.hpp	/^class PDI_DLL TePDIMixModelFactory : public TePDIAlgorithmFactory$/;"	c
TePDIMixModelFactory_instance	image_processing/TePDIMixModelFactory.hpp	/^namespace{static TePDIMixModelFactory TePDIMixModelFactory_instance;};$/;"	m	namespace:__anon17
TePDIMixModelSpectralBand	image_processing/TePDIMixModelSpectralBand.cpp	/^TePDIMixModelSpectralBand::TePDIMixModelSpectralBand(unsigned int s, unsigned int b, double ll, double ul, string l)$/;"	f	class:TePDIMixModelSpectralBand
TePDIMixModelSpectralBand	image_processing/TePDIMixModelSpectralBand.hpp	/^class PDI_DLL TePDIMixModelSpectralBand$/;"	c
TePDIMixModelSpectralBandList	image_processing/TePDIMixModelSpectralBandList.cpp	/^TePDIMixModelSpectralBandList::TePDIMixModelSpectralBandList()$/;"	f	class:TePDIMixModelSpectralBandList
TePDIMixModelSpectralBandList	image_processing/TePDIMixModelSpectralBandList.hpp	/^class PDI_DLL TePDIMixModelSpectralBandList$/;"	c
TePDIMixModelStratFactory	image_processing/TePDIMixModelStratFactory.cpp	/^TePDIMixModelStratFactory::TePDIMixModelStratFactory( $/;"	f	class:TePDIMixModelStratFactory
TePDIMixModelStratFactory	image_processing/TePDIMixModelStratFactory.hpp	/^  class PDI_DLL TePDIMixModelStratFactory : $/;"	c
TePDIMixModelStrategy	image_processing/TePDIMixModelStrategy.cpp	/^TePDIMixModelStrategy::TePDIMixModelStrategy()$/;"	f	class:TePDIMixModelStrategy
TePDIMixModelStrategy	image_processing/TePDIMixModelStrategy.hpp	/^  class PDI_DLL TePDIMixModelStrategy : public TePDIStrategy {$/;"	c
TePDIMorfFilter	image_processing/TePDIMorfFilter.cpp	/^TePDIMorfFilter::TePDIMorfFilter()$/;"	f	class:TePDIMorfFilter
TePDIMorfFilter	image_processing/TePDIMorfFilter.hpp	/^  class PDI_DLL TePDIMorfFilter : public TePDIBufferedFilter {$/;"	c
TePDIMorfFilterFactory	image_processing/TePDIMorfFilterFactory.cpp	/^TePDIMorfFilterFactory::TePDIMorfFilterFactory()$/;"	f	class:TePDIMorfFilterFactory
TePDIMorfFilterFactory	image_processing/TePDIMorfFilterFactory.hpp	/^  class PDI_DLL TePDIMorfFilterFactory : public TePDIAlgorithmFactory$/;"	c
TePDIMorfFilterFactory_instance	image_processing/TePDIMorfFilterFactory.hpp	/^    static TePDIMorfFilterFactory TePDIMorfFilterFactory_instance;$/;"	m	namespace:__anon3
TePDIMorfType	image_processing/TePDIMorfFilter.hpp	/^      enum TePDIMorfType{$/;"	g	class:TePDIMorfFilter
TePDIMtxDoubleAdpt	image_processing/TePDIMtxDoubleAdpt.hpp	/^      TePDIMtxDoubleAdpt() {};$/;"	f	class:TePDIMtxDoubleAdpt
TePDIMtxDoubleAdpt	image_processing/TePDIMtxDoubleAdpt.hpp	/^  class TePDIMtxDoubleAdpt : public TePDIMatrix< T >,$/;"	c
TePDIMtxDoubleAdptInt	image_processing/TePDIMtxDoubleAdpt.hpp	/^      TePDIMtxDoubleAdptInt( const TePDIMtxDoubleAdptInt& ) {};$/;"	f	class:TePDIMtxDoubleAdptInt
TePDIMtxDoubleAdptInt	image_processing/TePDIMtxDoubleAdpt.hpp	/^      TePDIMtxDoubleAdptInt() {};$/;"	f	class:TePDIMtxDoubleAdptInt
TePDIMtxDoubleAdptInt	image_processing/TePDIMtxDoubleAdpt.hpp	/^  class TePDIMtxDoubleAdptInt$/;"	c
TePDIOFMatching	image_processing/TePDIOFMatching.cpp	/^TePDIOFMatching::TePDIOFMatching()$/;"	f	class:TePDIOFMatching
TePDIOFMatching	image_processing/TePDIOFMatching.hpp	/^  class PDI_DLL TePDIOFMatching : public TePDIAlgorithm {$/;"	c
TePDIPCADirect	image_processing/TePDIPrincipalComponents.hpp	/^        TePDIPCADirect, $/;"	e	enum:TePDIPrincipalComponents::TePDIPCAType
TePDIPCAInverse	image_processing/TePDIPrincipalComponents.hpp	/^        TePDIPCAInverse$/;"	e	enum:TePDIPrincipalComponents::TePDIPCAType
TePDIPCAType	image_processing/TePDIPrincipalComponents.hpp	/^      enum TePDIPCAType$/;"	g	class:TePDIPrincipalComponents
TePDIPCAWaveletFusion	image_processing/TePDIPCAWaveletFusion.cpp	/^TePDIPCAWaveletFusion::TePDIPCAWaveletFusion()$/;"	f	class:TePDIPCAWaveletFusion
TePDIPCAWaveletFusion	image_processing/TePDIPCAWaveletFusion.hpp	/^  class PDI_DLL TePDIPCAWaveletFusion : public TePDIAlgorithm {$/;"	c
TePDIPIManager	image_processing/TePDIPIManager.cpp	/^TePDIPIManager::TePDIPIManager( const TePDIPIManager& )$/;"	f	class:TePDIPIManager
TePDIPIManager	image_processing/TePDIPIManager.cpp	/^TePDIPIManager::TePDIPIManager( const std::string& message, $/;"	f	class:TePDIPIManager
TePDIPIManager	image_processing/TePDIPIManager.hpp	/^  class PDI_DLL TePDIPIManager {$/;"	c
TePDIPIManagerGlobalSettings	image_processing/TePDIPIManagerGlobalSettings.hpp	/^      TePDIPIManagerGlobalSettings()$/;"	f	class:TePDIPIManagerGlobalSettings
TePDIPIManagerGlobalSettings	image_processing/TePDIPIManagerGlobalSettings.hpp	/^  class PDI_DLL TePDIPIManagerGlobalSettings : public $/;"	c
TePDIParaSegBaatzStrategy	image_processing/TePDIParaSegBaatzStrategy.cpp	/^TePDIParaSegBaatzStrategy::TePDIParaSegBaatzStrategy( $/;"	f	class:TePDIParaSegBaatzStrategy
TePDIParaSegBaatzStrategy	image_processing/TePDIParaSegBaatzStrategy.hpp	/^  class PDI_DLL TePDIParaSegBaatzStrategy : public TePDIParaSegStrategy$/;"	c
TePDIParaSegBaatzStrategyFactory	image_processing/TePDIParaSegBaatzStrategyFactory.cpp	/^TePDIParaSegBaatzStrategyFactory::TePDIParaSegBaatzStrategyFactory()$/;"	f	class:TePDIParaSegBaatzStrategyFactory
TePDIParaSegBaatzStrategyFactory	image_processing/TePDIParaSegBaatzStrategyFactory.hpp	/^  class PDI_DLL TePDIParaSegBaatzStrategyFactory : $/;"	c
TePDIParaSegRegGrowStrategy	image_processing/TePDIParaSegRegGrowStrategy.cpp	/^TePDIParaSegRegGrowStrategy::TePDIParaSegRegGrowStrategy( $/;"	f	class:TePDIParaSegRegGrowStrategy
TePDIParaSegRegGrowStrategy	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^  class PDI_DLL TePDIParaSegRegGrowStrategy : public TePDIParaSegStrategy$/;"	c
TePDIParaSegRegGrowStrategyFactory	image_processing/TePDIParaSegRegGrowStrategyFactory.cpp	/^TePDIParaSegRegGrowStrategyFactory::TePDIParaSegRegGrowStrategyFactory()$/;"	f	class:TePDIParaSegRegGrowStrategyFactory
TePDIParaSegRegGrowStrategyFactory	image_processing/TePDIParaSegRegGrowStrategyFactory.hpp	/^  class PDI_DLL TePDIParaSegRegGrowStrategyFactory : $/;"	c
TePDIParaSegSegment	image_processing/TePDIParaSegSegment.cpp	/^TePDIParaSegSegment::TePDIParaSegSegment()$/;"	f	class:TePDIParaSegSegment
TePDIParaSegSegment	image_processing/TePDIParaSegSegment.hpp	/^  class PDI_DLL TePDIParaSegSegment$/;"	c
TePDIParaSegSegmentsBlock	image_processing/TePDIParaSegSegmentsBlock.cpp	/^TePDIParaSegSegmentsBlock::TePDIParaSegSegmentsBlock()$/;"	f	class:TePDIParaSegSegmentsBlock
TePDIParaSegSegmentsBlock	image_processing/TePDIParaSegSegmentsBlock.hpp	/^  class PDI_DLL TePDIParaSegSegmentsBlock$/;"	c
TePDIParaSegStrategy	image_processing/TePDIParaSegStrategy.cpp	/^TePDIParaSegStrategy::TePDIParaSegStrategy( const TePDIParaSegStrategyParams& $/;"	f	class:TePDIParaSegStrategy
TePDIParaSegStrategy	image_processing/TePDIParaSegStrategy.hpp	/^  class PDI_DLL TePDIParaSegStrategy$/;"	c
TePDIParaSegStrategyFactory	image_processing/TePDIParaSegStrategyFactory.cpp	/^TePDIParaSegStrategyFactory::TePDIParaSegStrategyFactory( $/;"	f	class:TePDIParaSegStrategyFactory
TePDIParaSegStrategyFactory	image_processing/TePDIParaSegStrategyFactory.hpp	/^  class PDI_DLL TePDIParaSegStrategyFactory : $/;"	c
TePDIParaSegStrategyFactoryParams	image_processing/TePDIParaSegStrategyFactoryParams.cpp	/^TePDIParaSegStrategyFactoryParams::TePDIParaSegStrategyFactoryParams()$/;"	f	class:TePDIParaSegStrategyFactoryParams
TePDIParaSegStrategyFactoryParams	image_processing/TePDIParaSegStrategyFactoryParams.hpp	/^  class PDI_DLL TePDIParaSegStrategyFactoryParams$/;"	c
TePDIParaSegStrategyParams	image_processing/TePDIParaSegStrategyParams.cpp	/^TePDIParaSegStrategyParams::TePDIParaSegStrategyParams()$/;"	f	class:TePDIParaSegStrategyParams
TePDIParaSegStrategyParams	image_processing/TePDIParaSegStrategyParams.hpp	/^  class PDI_DLL TePDIParaSegStrategyParams$/;"	c
TePDIParallelSegmenter	image_processing/TePDIParallelSegmenter.cpp	/^TePDIParallelSegmenter::TePDIParallelSegmenter()$/;"	f	class:TePDIParallelSegmenter
TePDIParallelSegmenter	image_processing/TePDIParallelSegmenter.hpp	/^  class PDI_DLL TePDIParallelSegmenter : public TePDIAlgorithm $/;"	c
TePDIParameters	image_processing/TePDIParameters.cpp	/^TePDIParameters::TePDIParameters( const TePDIParameters& external )$/;"	f	class:TePDIParameters
TePDIParameters	image_processing/TePDIParameters.cpp	/^TePDIParameters::TePDIParameters()$/;"	f	class:TePDIParameters
TePDIParameters	image_processing/TePDIParameters.hpp	/^  class PDI_DLL TePDIParameters : protected $/;"	c
TePDIPolSetMapPtrType	image_processing/TePDITypes.hpp	/^    typedef TeSharedPtr< TePDIPolSetMapType > TePDIPolSetMapPtrType;      $/;"	t	namespace:TePDITypes
TePDIPolSetMapType	image_processing/TePDITypes.hpp	/^    typedef std::map< double, TePolygonSet > TePDIPolSetMapType;      $/;"	t	namespace:TePDITypes
TePDIPolygonPtrType	image_processing/TePDITypes.hpp	/^    typedef TeSharedPtr< TePolygon > TePDIPolygonPtrType;    $/;"	t	namespace:TePDITypes
TePDIPolygonSetPtrType	image_processing/TePDITypes.hpp	/^    typedef TeSharedPtr< TePolygonSet > TePDIPolygonSetPtrType; $/;"	t	namespace:TePDITypes
TePDIPrincipalComponents	image_processing/TePDIPrincipalComponents.cpp	/^TePDIPrincipalComponents::TePDIPrincipalComponents()$/;"	f	class:TePDIPrincipalComponents
TePDIPrincipalComponents	image_processing/TePDIPrincipalComponents.hpp	/^  class PDI_DLL TePDIPrincipalComponents : public TePDIAlgorithm {$/;"	c
TePDIPrincipalComponentsFactory	image_processing/TePDIPrincipalComponentsFactory.cpp	/^TePDIPrincipalComponentsFactory::TePDIPrincipalComponentsFactory()$/;"	f	class:TePDIPrincipalComponentsFactory
TePDIPrincipalComponentsFactory	image_processing/TePDIPrincipalComponentsFactory.hpp	/^  class PDI_DLL TePDIPrincipalComponentsFactory : public TePDIAlgorithmFactory$/;"	c
TePDIPrincipalComponentsFactory_instance	image_processing/TePDIPrincipalComponentsFactory.hpp	/^      TePDIPrincipalComponentsFactory_instance;$/;"	m	namespace:__anon8
TePDIPrincipalComponentsFusion	image_processing/TePDIPrincipalComponentsFusion.cpp	/^TePDIPrincipalComponentsFusion::TePDIPrincipalComponentsFusion()$/;"	f	class:TePDIPrincipalComponentsFusion
TePDIPrincipalComponentsFusion	image_processing/TePDIPrincipalComponentsFusion.hpp	/^  class PDI_DLL TePDIPrincipalComponentsFusion : public TePDIAlgorithm {$/;"	c
TePDIPrincoMixModelSF	image_processing/TePDIPrincoMixModelSF.cpp	/^TePDIPrincoMixModelSF::TePDIPrincoMixModelSF()$/;"	f	class:TePDIPrincoMixModelSF
TePDIPrincoMixModelSF	image_processing/TePDIPrincoMixModelSF.hpp	/^class PDI_DLL TePDIPrincoMixModelSF : public TePDIMixModelStratFactory$/;"	c
TePDIPrincoMixModelSF_instance	image_processing/TePDIPrincoMixModelSF.hpp	/^namespace{static TePDIPrincoMixModelSF TePDIPrincoMixModelSF_instance;};$/;"	m	namespace:__anon20
TePDIPrincoMixModelStrategy	image_processing/TePDIPrincoMixModelStrategy.cpp	/^TePDIPrincoMixModelStrategy::TePDIPrincoMixModelStrategy()$/;"	f	class:TePDIPrincoMixModelStrategy
TePDIPrincoMixModelStrategy	image_processing/TePDIPrincoMixModelStrategy.hpp	/^class PDI_DLL TePDIPrincoMixModelStrategy : public TePDIMixModelStrategy$/;"	c
TePDIRGSCell	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRGSCell :: TePDIRGSCell( unsigned long* tuple, long id, short lin, short col, short Nban )$/;"	f	class:TePDIRGSCell
TePDIRGSCell	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRGSCell :: TePDIRGSCell()$/;"	f	class:TePDIRGSCell
TePDIRGSCell	image_processing/TePDIRegGrowSeg.hpp	/^class PDI_DLL TePDIRGSCell$/;"	c
TePDIRGSCellList	image_processing/TePDIRegGrowSeg.hpp	/^  typedef map<long, TePDIRGSCell *> TePDIRGSCellList;    $/;"	t
TePDIRadarFilter	image_processing/TePDIRadarFilter.cpp	/^TePDIRadarFilter::TePDIRadarFilter()$/;"	f	class:TePDIRadarFilter
TePDIRadarFilter	image_processing/TePDIRadarFilter.hpp	/^  class PDI_DLL TePDIRadarFilter : public TePDIBufferedFilter {$/;"	c
TePDIRadarFrostFilter	image_processing/TePDIRadarFrostFilter.cpp	/^TePDIRadarFrostFilter::TePDIRadarFrostFilter()$/;"	f	class:TePDIRadarFrostFilter
TePDIRadarFrostFilter	image_processing/TePDIRadarFrostFilter.hpp	/^  class PDI_DLL TePDIRadarFrostFilter : public TePDIRadarFilter{$/;"	c
TePDIRadarFrostFilterFactory	image_processing/TePDIRadarFrostFilterFactory.cpp	/^TePDIRadarFrostFilterFactory::TePDIRadarFrostFilterFactory()$/;"	f	class:TePDIRadarFrostFilterFactory
TePDIRadarFrostFilterFactory	image_processing/TePDIRadarFrostFilterFactory.hpp	/^  class PDI_DLL TePDIRadarFrostFilterFactory : public TePDIAlgorithmFactory$/;"	c
TePDIRadarFrostFilterFactory_instance	image_processing/TePDIRadarFrostFilterFactory.hpp	/^    static TePDIRadarFrostFilterFactory TePDIRadarFrostFilterFactory_instance;$/;"	m	namespace:__anon10
TePDIRadarGammaFilter	image_processing/TePDIRadarGammaFilter.cpp	/^TePDIRadarGammaFilter::TePDIRadarGammaFilter()$/;"	f	class:TePDIRadarGammaFilter
TePDIRadarGammaFilter	image_processing/TePDIRadarGammaFilter.hpp	/^  class PDI_DLL TePDIRadarGammaFilter : public TePDIRadarFilter{$/;"	c
TePDIRadarKuanFilter	image_processing/TePDIRadarKuanFilter.cpp	/^TePDIRadarKuanFilter::TePDIRadarKuanFilter()$/;"	f	class:TePDIRadarKuanFilter
TePDIRadarKuanFilter	image_processing/TePDIRadarKuanFilter.hpp	/^  class PDI_DLL TePDIRadarKuanFilter : public TePDIRadarFilter{$/;"	c
TePDIRadarKuanFilterFactory	image_processing/TePDIRadarKuanFilterFactory.cpp	/^TePDIRadarKuanFilterFactory::TePDIRadarKuanFilterFactory()$/;"	f	class:TePDIRadarKuanFilterFactory
TePDIRadarKuanFilterFactory	image_processing/TePDIRadarKuanFilterFactory.hpp	/^  class PDI_DLL TePDIRadarKuanFilterFactory : public TePDIAlgorithmFactory$/;"	c
TePDIRadarKuanFilterFactory_instance	image_processing/TePDIRadarKuanFilterFactory.hpp	/^    static TePDIRadarKuanFilterFactory TePDIRadarKuanFilterFactory_instance;$/;"	m	namespace:__anon11
TePDIRadarLeeFilter	image_processing/TePDIRadarLeeFilter.cpp	/^TePDIRadarLeeFilter::TePDIRadarLeeFilter()$/;"	f	class:TePDIRadarLeeFilter
TePDIRadarLeeFilter	image_processing/TePDIRadarLeeFilter.hpp	/^  class PDI_DLL TePDIRadarLeeFilter : public TePDIRadarFilter{$/;"	c
TePDIRadarLeeFilterFactory	image_processing/TePDIRadarLeeFilterFactory.cpp	/^TePDIRadarLeeFilterFactory::TePDIRadarLeeFilterFactory()$/;"	f	class:TePDIRadarLeeFilterFactory
TePDIRadarLeeFilterFactory	image_processing/TePDIRadarLeeFilterFactory.hpp	/^  class PDI_DLL TePDIRadarLeeFilterFactory : public TePDIAlgorithmFactory$/;"	c
TePDIRadarLeeFilterFactory_instance	image_processing/TePDIRadarLeeFilterFactory.hpp	/^    static TePDIRadarLeeFilterFactory TePDIRadarLeeFilterFactory_instance;$/;"	m	namespace:__anon1
TePDIRaster2Vector	image_processing/TePDIRaster2Vector.cpp	/^TePDIRaster2Vector::TePDIRaster2Vector()$/;"	f	class:TePDIRaster2Vector
TePDIRaster2Vector	image_processing/TePDIRaster2Vector.hpp	/^  class PDI_DLL TePDIRaster2Vector : public TePDIAlgorithm$/;"	c
TePDIRaster2VectorFactory	image_processing/TePDIRaster2VectorFactory.cpp	/^TePDIRaster2VectorFactory::TePDIRaster2VectorFactory()$/;"	f	class:TePDIRaster2VectorFactory
TePDIRaster2VectorFactory	image_processing/TePDIRaster2VectorFactory.hpp	/^  class PDI_DLL TePDIRaster2VectorFactory : public TePDIAlgorithmFactory$/;"	c
TePDIRaster2VectorFactory_instance	image_processing/TePDIRaster2VectorFactory.hpp	/^    static TePDIRaster2VectorFactory TePDIRaster2VectorFactory_instance;$/;"	m	namespace:__anon22
TePDIRaster2VectorPolStruct	image_processing/TePDIRaster2Vector.hpp	/^      TePDIRaster2VectorPolStruct( $/;"	f	class:TePDIRaster2VectorPolStruct
TePDIRaster2VectorPolStruct	image_processing/TePDIRaster2Vector.hpp	/^      TePDIRaster2VectorPolStruct( const TePolygon& p, $/;"	f	class:TePDIRaster2VectorPolStruct
TePDIRaster2VectorPolStruct	image_processing/TePDIRaster2Vector.hpp	/^      TePDIRaster2VectorPolStruct()$/;"	f	class:TePDIRaster2VectorPolStruct
TePDIRaster2VectorPolStruct	image_processing/TePDIRaster2Vector.hpp	/^  class PDI_DLL TePDIRaster2VectorPolStruct$/;"	c
TePDIRasterPtrType	image_processing/TePDITypes.hpp	/^    typedef TeSharedPtr< TeRaster > TePDIRasterPtrType;$/;"	t	namespace:TePDITypes
TePDIRasterRUBuffer	image_processing/TePDIRasterRUBuffer.cpp	/^TePDIRasterRUBuffer::TePDIRasterRUBuffer()$/;"	f	class:TePDIRasterRUBuffer
TePDIRasterRUBuffer	image_processing/TePDIRasterRUBuffer.hpp	/^  class PDI_DLL TePDIRasterRUBuffer {$/;"	c
TePDIRasterVectorPtrType	image_processing/TePDITypes.hpp	/^    typedef TeSharedPtr< TePDIRasterVectorType > TePDIRasterVectorPtrType;    $/;"	t	namespace:TePDITypes
TePDIRasterVectorType	image_processing/TePDITypes.hpp	/^    typedef std::vector< TePDIRasterPtrType > TePDIRasterVectorType;$/;"	t	namespace:TePDITypes
TePDIRegGrowSeg	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRegGrowSeg::TePDIRegGrowSeg()$/;"	f	class:TePDIRegGrowSeg
TePDIRegGrowSeg	image_processing/TePDIRegGrowSeg.hpp	/^  class PDI_DLL TePDIRegGrowSeg : public TePDIAlgorithm {$/;"	c
TePDIRegGrowSegFactory	image_processing/TePDIRegGrowSegFactory.cpp	/^TePDIRegGrowSegFactory::TePDIRegGrowSegFactory()$/;"	f	class:TePDIRegGrowSegFactory
TePDIRegGrowSegFactory	image_processing/TePDIRegGrowSegFactory.hpp	/^  class PDI_DLL TePDIRegGrowSegFactory : public TePDIAlgorithmFactory$/;"	c
TePDIRegGrowSegFactory_instance	image_processing/TePDIRegGrowSegFactory.hpp	/^    static TePDIRegGrowSegFactory TePDIRegGrowSegFactory_instance;$/;"	m	namespace:__anon14
TePDIRegion	image_processing/TePDIRegion.hpp	/^    TePDIRegion(long id_region)$/;"	f	class:TePDIRegion
TePDIRegion	image_processing/TePDIRegion.hpp	/^class PDI_DLL TePDIRegion$/;"	c
TePDIRegister	image_processing/TePDIRegister.cpp	/^TePDIRegister::TePDIRegister()$/;"	f	class:TePDIRegister
TePDIRegister	image_processing/TePDIRegister.hpp	/^  class PDI_DLL TePDIRegister : public TePDIAlgorithm {$/;"	c
TePDIRegisterFactory	image_processing/TePDIRegisterFactory.cpp	/^TePDIRegisterFactory::TePDIRegisterFactory()$/;"	f	class:TePDIRegisterFactory
TePDIRegisterFactory	image_processing/TePDIRegisterFactory.hpp	/^  class PDI_DLL TePDIRegisterFactory : public TePDIAlgorithmFactory$/;"	c
TePDIRegisterFactory_instance	image_processing/TePDIRegisterFactory.hpp	/^    static TePDIRegisterFactory TePDIRegisterFactory_instance;$/;"	m	namespace:__anon6
TePDIRgbPalette	image_processing/TePDIRgbPalette.cpp	/^TePDIRgbPalette::TePDIRgbPalette()$/;"	f	class:TePDIRgbPalette
TePDIRgbPalette	image_processing/TePDIRgbPalette.hpp	/^  class PDI_DLL TePDIRgbPalette : public std::map< double, TePDIRgbPaletteNode >$/;"	c
TePDIRgbPaletteFunctions	image_processing/TePDIRgbPaletteFunctions.cpp	/^namespace TePDIRgbPaletteFunctions$/;"	n	file:
TePDIRgbPaletteFunctions	image_processing/TePDIRgbPaletteFunctions.hpp	/^  namespace TePDIRgbPaletteFunctions$/;"	n
TePDIRgbPaletteNode	image_processing/TePDIRgbPaletteNode.hpp	/^      TePDIRgbPaletteNode( unsigned int red, unsigned int green,$/;"	f	class:TePDIRgbPaletteNode
TePDIRgbPaletteNode	image_processing/TePDIRgbPaletteNode.hpp	/^      TePDIRgbPaletteNode()$/;"	f	class:TePDIRgbPaletteNode
TePDIRgbPaletteNode	image_processing/TePDIRgbPaletteNode.hpp	/^  class PDI_DLL TePDIRgbPaletteNode {$/;"	c
TePDIRoberts	image_processing/TePDIBDFilter.hpp	/^        TePDIRoberts = 2$/;"	e	enum:TePDIBDFilter::TePDIBDType
TePDISAMClassifier	image_processing/TePDISAMClassifier.cpp	/^TePDISAMClassifier::TePDISAMClassifier()$/;"	f	class:TePDISAMClassifier
TePDISAMClassifier	image_processing/TePDISAMClassifier.hpp	/^  class PDI_DLL TePDISAMClassifier : public TePDIAlgorithm$/;"	c
TePDISensorSimulator	image_processing/TePDISensorSimulator.cpp	/^TePDISensorSimulator::TePDISensorSimulator()$/;"	f	class:TePDISensorSimulator
TePDISensorSimulator	image_processing/TePDISensorSimulator.hpp	/^  class PDI_DLL TePDISensorSimulator : public TePDIAlgorithm {$/;"	c
TePDISensorSimulatorFactory	image_processing/TePDISensorSimulatorFactory.cpp	/^TePDISensorSimulatorFactory::TePDISensorSimulatorFactory()$/;"	f	class:TePDISensorSimulatorFactory
TePDISensorSimulatorFactory	image_processing/TePDISensorSimulatorFactory.hpp	/^  class PDI_DLL TePDISensorSimulatorFactory : public TePDIAlgorithmFactory$/;"	c
TePDISensorSimulatorFactory_instance	image_processing/TePDISensorSimulatorFactory.hpp	/^    static TePDISensorSimulatorFactory TePDISensorSimulatorFactory_instance;$/;"	m	namespace:__anon2
TePDISimplex	image_processing/TePDISimplex.cpp	/^TePDISimplex::TePDISimplex()$/;"	f	class:TePDISimplex
TePDISimplex	image_processing/TePDISimplex.hpp	/^  class PDI_DLL TePDISimplex : public TePDIAlgorithm {$/;"	c
TePDISobel	image_processing/TePDIBDFilter.hpp	/^        TePDISobel = 1,$/;"	e	enum:TePDIBDFilter::TePDIBDType
TePDIStatistic	image_processing/TePDIStatistic.cpp	/^TePDIStatistic::TePDIStatistic()$/;"	f	class:TePDIStatistic
TePDIStatistic	image_processing/TePDIStatistic.hpp	/^  class PDI_DLL TePDIStatistic : public TePDIAlgorithm {$/;"	c
TePDIStrategy	image_processing/TePDIStrategy.cpp	/^TePDIStrategy::TePDIStrategy()$/;"	f	class:TePDIStrategy
TePDIStrategy	image_processing/TePDIStrategy.hpp	/^  class PDI_DLL TePDIStrategy$/;"	c
TePDIStrategyFactory	image_processing/TePDIStrategyFactory.cpp	/^TePDIStrategyFactory::TePDIStrategyFactory( const std::string& factoryName )$/;"	f	class:TePDIStrategyFactory
TePDIStrategyFactory	image_processing/TePDIStrategyFactory.hpp	/^  class PDI_DLL TePDIStrategyFactory : $/;"	c
TePDITPMosaic	image_processing/TePDITPMosaic.cpp	/^TePDITPMosaic::TePDITPMosaic()$/;"	f	class:TePDITPMosaic
TePDITPMosaic	image_processing/TePDITPMosaic.hpp	/^  class PDI_DLL TePDITPMosaic : public TePDIAlgorithm {$/;"	c
TePDITileIndexer	image_processing/TePDITileIndexer.hpp	/^    TePDITileIndexer( const TePolygon& pol, const double& dy )$/;"	f	class:TePDITileIndexer
TePDITileIndexer	image_processing/TePDITileIndexer.hpp	/^class PDI_DLL TePDITileIndexer$/;"	c
TePDITypes	image_processing/TePDITypes.hpp	/^  namespace TePDITypes$/;"	n
TePDIUtils	image_processing/TePDIUtils.cpp	/^namespace TePDIUtils{$/;"	n	file:
TePDIUtils	image_processing/TePDIUtils.hpp	/^  namespace TePDIUtils$/;"	n
TePDIUtilsAutoMemPol	image_processing/TePDIUtils.hpp	/^      TePDIUtilsAutoMemPol = 1,$/;"	e	enum:TePDIUtils::TePDIUtilsMemPol
TePDIUtilsDiskMemPol	image_processing/TePDIUtils.hpp	/^      TePDIUtilsDiskMemPol = 3$/;"	e	enum:TePDIUtils::TePDIUtilsMemPol
TePDIUtilsMemPol	image_processing/TePDIUtils.hpp	/^    enum TePDIUtilsMemPol {$/;"	g	namespace:TePDIUtils
TePDIUtilsRamMemPol	image_processing/TePDIUtils.hpp	/^      TePDIUtilsRamMemPol = 2,$/;"	e	enum:TePDIUtils::TePDIUtilsMemPol
TePDIVenturaFusion	image_processing/TePDIVenturaFusion.cpp	/^TePDIVenturaFusion::TePDIVenturaFusion()$/;"	f	class:TePDIVenturaFusion
TePDIVenturaFusion	image_processing/TePDIVenturaFusion.hpp	/^  class PDI_DLL TePDIVenturaFusion : public TePDIAlgorithm$/;"	c
TePDIWaveletAtrous	image_processing/TePDIWaveletAtrous.cpp	/^TePDIWaveletAtrous::TePDIWaveletAtrous()$/;"	f	class:TePDIWaveletAtrous
TePDIWaveletAtrous	image_processing/TePDIWaveletAtrous.hpp	/^  class PDI_DLL TePDIWaveletAtrous : public TePDIAlgorithm {$/;"	c
TePDIWaveletAtrousFusion	image_processing/TePDIWaveletAtrousFusion.cpp	/^TePDIWaveletAtrousFusion::TePDIWaveletAtrousFusion()$/;"	f	class:TePDIWaveletAtrousFusion
TePDIWaveletAtrousFusion	image_processing/TePDIWaveletAtrousFusion.hpp	/^  class PDI_DLL TePDIWaveletAtrousFusion : public TePDIAlgorithm {$/;"	c
TePDIWiSpeRFusion	image_processing/TePDIWiSpeRFusion.cpp	/^TePDIWiSpeRFusion::TePDIWiSpeRFusion()$/;"	f	class:TePDIWiSpeRFusion
TePDIWiSpeRFusion	image_processing/TePDIWiSpeRFusion.hpp	/^  class PDI_DLL TePDIWiSpeRFusion : public TePDIAlgorithm {$/;"	c
TePERSISTENCE_DATABASE	kernel/TeCoverageParams.h	/^{	TePERSISTENCE_NONE, TePERSISTENCE_DATABASE, TePERSISTENCE_DATABASE_CACHELRU };$/;"	e	enum:TeCoveragePersistenceType
TePERSISTENCE_DATABASE_CACHELRU	kernel/TeCoverageParams.h	/^{	TePERSISTENCE_NONE, TePERSISTENCE_DATABASE, TePERSISTENCE_DATABASE_CACHELRU };$/;"	e	enum:TeCoveragePersistenceType
TePERSISTENCE_NONE	kernel/TeCoverageParams.h	/^{	TePERSISTENCE_NONE, TePERSISTENCE_DATABASE, TePERSISTENCE_DATABASE_CACHELRU };$/;"	e	enum:TeCoveragePersistenceType
TePGConnection	drivers/PostgreSQL/TePGInterface.h	/^        TePGConnection(const string& str_connection = "")$/;"	f	class:TePGConnection
TePGConnection	drivers/PostgreSQL/TePGInterface.h	/^class TLPOSTGRESQL_DLL TePGConnection$/;"	c
TePGRecordset	drivers/PostgreSQL/TePGInterface.cpp	/^TePGRecordset::TePGRecordset(const string& str_qry, TePGConnection* con_x,$/;"	f	class:TePGRecordset
TePGRecordset	drivers/PostgreSQL/TePGInterface.h	/^class TLPOSTGRESQL_DLL TePGRecordset$/;"	c
TePGSwapUInt	drivers/PostgreSQL/TePGInterface.cpp	/^unsigned int TePGSwapUInt(const unsigned int& uintVal)$/;"	f
TePI	kernel/TeDefines.h	/^const double	TePI  =	3.14159265358979323846;		\/\/!< The ratio of the circumference to the diameter of a circle$/;"	v
TePLATFORM	kernel/TeDefines.h	51;"	d
TePLATFORM	kernel/TeDefines.h	53;"	d
TePLATFORM	kernel/TeDefines.h	55;"	d
TePLATFORM	kernel/TeDefines.h	57;"	d
TePLATFORM	kernel/TeDefines.h	59;"	d
TePLATFORMCODE_AIX	kernel/TeDefines.h	48;"	d
TePLATFORMCODE_APPLE	kernel/TeDefines.h	46;"	d
TePLATFORMCODE_LINUX	kernel/TeDefines.h	42;"	d
TePLATFORMCODE_MSWINDOWS	kernel/TeDefines.h	40;"	d
TePLATFORMCODE_SOLARIS	kernel/TeDefines.h	44;"	d
TePOINTED	kernel/TeDefines.h	152;"	d
TePOINTED_QUERIED	kernel/TeDefines.h	154;"	d
TePOINTS	kernel/TeDataTypes.h	/^{	TePOLYGONS = 1, TeLINES = 2, TePOINTS = 4, TeSAMPLES = 8, TeCONTOURS = 16,$/;"	e	enum:TeGeomRep
TePOINTSETTYPE	kernel/TeDataTypes.h	/^ TePOINTSETTYPE, TeLINESETTYPE, TePOLYGONSETTYPE, TeCELLSETTYPE, TeTEXTSETTYPE, TeNODESETTYPE,$/;"	e	enum:TeAttrDataType
TePOINTTYPE	kernel/TeDataTypes.h	/^ TePOINTTYPE, TeLINE2DTYPE, TePOLYGONTYPE, TeCELLTYPE, TeTEXTTYPE, TeNODETYPE,$/;"	e	enum:TeAttrDataType
TePOLYGONS	kernel/TeDataTypes.h	/^{	TePOLYGONS = 1, TeLINES = 2, TePOINTS = 4, TeSAMPLES = 8, TeCONTOURS = 16,$/;"	e	enum:TeGeomRep
TePOLYGONSETTYPE	kernel/TeDataTypes.h	/^ TePOINTSETTYPE, TeLINESETTYPE, TePOLYGONSETTYPE, TeCELLSETTYPE, TeTEXTSETTYPE, TeNODESETTYPE,$/;"	e	enum:TeAttrDataType
TePOLYGONTYPE	kernel/TeDataTypes.h	/^ TePOINTTYPE, TeLINE2DTYPE, TePOLYGONTYPE, TeCELLTYPE, TeTEXTTYPE, TeNODETYPE,$/;"	e	enum:TeAttrDataType
TePREDICTION	kernel/TeTemporalSeries.h	/^enum TeTSDataType  { TeDATA, TeMISSING, TeDMISSING, TeOUTLIER, TeDOUTLIER, TePREDICTION };$/;"	e	enum:TeTSDataType
TePairSegIdInPolygonSet	kernel/TeIntersector.h	/^typedef pair<TeSegIdInPolygonSet, TeSegIdInPolygonSet> TePairSegIdInPolygonSet;$/;"	t	namespace:TeINTERSECTOR2
TePairUnion	kernel/TeOverlay.cpp	/^bool TeOVERLAY::TePairUnion(TePolygonSet& psetIn, TePolygonSet& psetOut)$/;"	f	class:TeOVERLAY
TePall2Three	kernel/TeRasterTransform.h	/^	{	TeNoTransf=0, TeMono2Three=1, TeBand2Band=2, TePall2Three=3, TeLUT2Three=4, $/;"	e	enum:TeRasterTransform::TeRasterTransfFunctions
TePallete	kernel/TeRasterParams.h	/^	{ TeUnknown, TePallete, TeMultiBand, TeRGB };$/;"	e	enum:TeRasterParams::TeRasterPhotometricInterpretation
TePartitionVars	kernel/TeRTree.h	/^		struct TePartitionVars$/;"	s	class:TeSAM::TeRTree
TePerBand	kernel/TeRasterParams.h	/^		TePerBand	\/\/ BSQ - Band Sequential$/;"	e	enum:TeRasterParams::TeRasterInterLeavingMode
TePerLine	kernel/TeRasterParams.h	/^		TePerLine,	\/\/ BIL - Band Interleaved by Line$/;"	e	enum:TeRasterParams::TeRasterInterLeavingMode
TePerPixel	kernel/TeRasterParams.h	/^		TePerPixel, \/\/ BIP - Band Interleaved by Pixel$/;"	e	enum:TeRasterParams::TeRasterInterLeavingMode
TePerpendicularDistance	kernel/TeGeometryAlgorithms.cpp	/^double TePerpendicularDistance(const TeCoord2D& first, const TeCoord2D& last, const TeCoord2D& pin, TeCoord2D &pinter)$/;"	f
TePieBar	kernel/TePieBar.h	/^	TePieBar (const TePieBar& pb )$/;"	f	class:TePieBar
TePieBar	kernel/TePieBar.h	/^	TePieBar() {}$/;"	f	class:TePieBar
TePieBar	kernel/TePieBar.h	/^	TePieBar(int themeId, TeDatabase* db)$/;"	f	class:TePieBar
TePieBar	kernel/TePieBar.h	/^class TL_DLL TePieBar$/;"	c
TePieBarInput	kernel/TePieBar.h	/^	enum			TePieBarInput {ALL, TABSEL, QUERYSEL, LEGEND, NOTTABSEL, NOTQUERYSEL, NOTLEGEND};$/;"	g	class:TePieBar
TePieChart	kernel/TeDataTypes.h	/^{   TeBarChart, TePieChart };$/;"	e	enum:TeChartType
TePixelBBInterPoly	kernel/TeRaster.cpp	/^	TePixelBBInterPoly(TeRaster* r=0, double y=0): TeStrategic(r,y) {}$/;"	f	class:TePixelBBInterPoly
TePixelBBInterPoly	kernel/TeRaster.cpp	/^class TePixelBBInterPoly: public TeStrategic$/;"	c	file:
TePixelBoxInPoly	kernel/TeRaster.cpp	/^	TePixelBoxInPoly(TeRaster* r=0, double y=0): TeStrategic(r,y) {}$/;"	f	class:TePixelBoxInPoly
TePixelBoxInPoly	kernel/TeRaster.cpp	/^class TePixelBoxInPoly: public TeStrategic$/;"	c	file:
TePlotFrame	drivers/qt/TePlotTheme.h	/^void TePlotFrame(TeAppTheme* appTheme, Canvas* canvas, map<int, RepMap>& layerRepMap, map<string, TeGeomRepVisualMap*>& objVisualMap)$/;"	f
TePlotObjects	drivers/qt/TePlotTheme.h	/^void TePlotObjects (TeAppTheme* appTheme, Canvas *canvas, map<int, RepMap>& layerRepMap, Progress *progress = 0, TeBox box = TeBox())$/;"	f
TePlotSelectedObjects	drivers/qt/TePlotTheme.h	/^TeBox TePlotSelectedObjects(TeAppTheme* appTheme, Canvas *canvas, set<string>& drawSet, map<int, RepMap>& layerRepMap, Progress * \/* progress *\/ = 0, TeGeomRepVisualMap* visualMap = 0)$/;"	f
TePlotTextWV	drivers/qt/TePlotTheme.h	/^void TePlotTextWV(TeAppTheme* appTheme, Canvas* canvas, Progress * progress, TeBox box = TeBox())$/;"	f
TePlotTexts	drivers/qt/TePlotTheme.h	/^void TePlotTexts(TeAppTheme* appTheme, Canvas* canvas, Progress * progress)$/;"	f
TePlotView	drivers/qt/TePlotView.h	/^void TePlotView (Portal *portal, TeView *view, Canvas *canvas)$/;"	f
TePlotWidget	drivers/qt/TeQtGraph.cpp	/^TePlotWidget::TePlotWidget(QWidget *parent, const char *name):TeQtGraphPlot(parent,name)$/;"	f	class:TePlotWidget
TePlotWidget	drivers/qt/TeQtGraph.h	/^class TL_DLL TePlotWidget : public TeQtGraphPlot {$/;"	c
TePoint	kernel/TeGeometry.h	/^	TePoint(const TeCoord2D& c):$/;"	f	class:TePoint
TePoint	kernel/TeGeometry.h	/^	TePoint(const double& x = 0., const double& y = 0. ):$/;"	f	class:TePoint
TePoint	kernel/TeGeometry.h	/^class TL_DLL TePoint : public TeGeomSingle<TeCoord2D>$/;"	c
TePointInPoly	kernel/TeGeometryAlgorithms.cpp	/^bool TePointInPoly(const TeCoord2D& c, const TeLinearRing& r)$/;"	f
TePointOnLine	kernel/TeRasterRemap.cpp	/^bool TePointOnLine (TeCoord2D& p, TeCoord2D& q, TeCoord2D& t, double tol)$/;"	f
TePointSet	kernel/TeGeometry.h	/^class TL_DLL TePointSet: public  TeGeomComposite<TePoint> $/;"	c
TePointTInstanceSet	stat/TeStatDataStructures.h	/^	TePointTInstanceSet() : TeSTStatInstanceSet() $/;"	f	class:TePointTInstanceSet
TePointTInstanceSet	stat/TeStatDataStructures.h	/^class STAT_DLL TePointTInstanceSet : public TeSTStatInstanceSet$/;"	c
TePointToWKBPoint	drivers/PostgreSQL/TePGInterface.cpp	/^char* TePointToWKBPoint(const TePoint &point, unsigned int &size)$/;"	f
TePointingAndQuerySelection	kernel/TeDataTypes.h	/^{   TeDefaultSelection, TePointingSelection, TeQuerySelection, TePointingAndQuerySelection };$/;"	e	enum:TeObjectSelectionMode
TePointingSelection	kernel/TeDataTypes.h	/^{   TeDefaultSelection, TePointingSelection, TeQuerySelection, TePointingAndQuerySelection };$/;"	e	enum:TeObjectSelectionMode
TePolarStereographic	kernel/TeProjection.cpp	/^TePolarStereographic::TePolarStereographic ( const TeDatum& datum, double lon0,  double offx, $/;"	f	class:TePolarStereographic
TePolarStereographic	kernel/TeProjection.h	/^class TL_DLL TePolarStereographic : public TeProjection$/;"	c
TePolyBasicType	kernel/TeDataTypes.h	/^enum TePolyBasicType { TePolyTypeTransparent=0, TePolyTypeFill=1, TePolyTypeHorizontal=2,$/;"	g
TePolyTypeBDiagonal	kernel/TeDataTypes.h	/^					 TePolyTypeVertical=3, TePolyTypeFDiagonal=4, TePolyTypeBDiagonal=5,$/;"	e	enum:TePolyBasicType
TePolyTypeCross	kernel/TeDataTypes.h	/^					 TePolyTypeCross=6, TePolyTypeDiagonalCross=7,  TePolyTypeCustom=8 };$/;"	e	enum:TePolyBasicType
TePolyTypeCustom	kernel/TeDataTypes.h	/^					 TePolyTypeCross=6, TePolyTypeDiagonalCross=7,  TePolyTypeCustom=8 };$/;"	e	enum:TePolyBasicType
TePolyTypeDiagonalCross	kernel/TeDataTypes.h	/^					 TePolyTypeCross=6, TePolyTypeDiagonalCross=7,  TePolyTypeCustom=8 };$/;"	e	enum:TePolyBasicType
TePolyTypeFDiagonal	kernel/TeDataTypes.h	/^					 TePolyTypeVertical=3, TePolyTypeFDiagonal=4, TePolyTypeBDiagonal=5,$/;"	e	enum:TePolyBasicType
TePolyTypeFill	kernel/TeDataTypes.h	/^enum TePolyBasicType { TePolyTypeTransparent=0, TePolyTypeFill=1, TePolyTypeHorizontal=2,$/;"	e	enum:TePolyBasicType
TePolyTypeHorizontal	kernel/TeDataTypes.h	/^enum TePolyBasicType { TePolyTypeTransparent=0, TePolyTypeFill=1, TePolyTypeHorizontal=2,$/;"	e	enum:TePolyBasicType
TePolyTypeTransparent	kernel/TeDataTypes.h	/^enum TePolyBasicType { TePolyTypeTransparent=0, TePolyTypeFill=1, TePolyTypeHorizontal=2,$/;"	e	enum:TePolyBasicType
TePolyTypeVertical	kernel/TeDataTypes.h	/^					 TePolyTypeVertical=3, TePolyTypeFDiagonal=4, TePolyTypeBDiagonal=5,$/;"	e	enum:TePolyBasicType
TePolyconic	kernel/TeProjection.cpp	/^TePolyconic::TePolyconic (const TeDatum& datum, double long0, double lat0, double offx, double offy,$/;"	f	class:TePolyconic
TePolyconic	kernel/TeProjection.h	/^class TL_DLL TePolyconic : public TeProjection$/;"	c
TePolygon	kernel/TeGeometry.h	/^class TL_DLL TePolygon: public TeGeomComposite<TeLinearRing>  $/;"	c
TePolygonSet	kernel/TeGeometry.h	/^class TL_DLL TePolygonSet: public TeGeomComposite<TePolygon> $/;"	c
TePolygonSetMemoryZonal	functions/TeMemoryZonal.cpp	/^bool TePolygonSetMemoryZonal(TeRaster* raster, TePolygonSet& ps, TeStatisticsDimensionVect& result)$/;"	f
TePolygonSetPointer	image_processing/TePDIHistogram.hpp	/^      class PDI_DLL TePolygonSetPointer : public TeSharedPtr< TePolygonSet> {};$/;"	c	class:TePDIHistogram
TePolygonSetProperties	kernel/TePolygonSetProperties.cpp	/^TePolygonSetProperties::TePolygonSetProperties( const TePolygonSet& polSet )$/;"	f	class:TePolygonSetProperties
TePolygonSetProperties	kernel/TePolygonSetProperties.h	/^  class TL_DLL TePolygonSetProperties {$/;"	c
TePolygonToWKBPolygon	drivers/PostgreSQL/TePGInterface.cpp	/^char* TePolygonToWKBPolygon(const TePolygon &polygon, unsigned int &size)$/;"	f
TePostGIS	drivers/PostgreSQL/TePostGIS.cpp	/^TePostGIS::TePostGIS()$/;"	f	class:TePostGIS
TePostGIS	drivers/PostgreSQL/TePostGIS.h	/^class TLPOSTGRESQL_DLL TePostGIS : public TePostgreSQL$/;"	c
TePostGISFactory	drivers/PostgreSQL/TePostGIS.h	/^    TePostGISFactory() : TeDatabaseFactory( std::string( "PostGIS" ) ) {};      $/;"	f	class:TePostGISFactory
TePostGISFactory	drivers/PostgreSQL/TePostGIS.h	/^class TLPOSTGRESQL_DLL TePostGISFactory : public TeDatabaseFactory$/;"	c
TePostGISFactory_instance	drivers/PostgreSQL/TePostGIS.h	/^  static TePostGISFactory TePostGISFactory_instance;$/;"	m	namespace:__anon179
TePostGISPortal	drivers/PostgreSQL/TePostGIS.cpp	/^TePostGISPortal::TePostGISPortal(TeDatabase *pDatabase)$/;"	f	class:TePostGISPortal
TePostGISPortal	drivers/PostgreSQL/TePostGIS.h	/^		TePostGISPortal()$/;"	f	class:TePostGISPortal
TePostGISPortal	drivers/PostgreSQL/TePostGIS.h	/^class TLPOSTGRESQL_DLL TePostGISPortal : public TePostgreSQLPortal$/;"	c
TePostgreSQL	drivers/PostgreSQL/TePostgreSQL.cpp	/^TePostgreSQL::TePostgreSQL() :$/;"	f	class:TePostgreSQL
TePostgreSQL	drivers/PostgreSQL/TePostgreSQL.h	/^class TLPOSTGRESQL_DLL TePostgreSQL : public TeDatabase$/;"	c
TePostgreSQLConnection	drivers/PostgreSQL/TePostgreSQLConnection.cpp	/^TePostgreSQLConnection::TePostgreSQLConnection() :$/;"	f	class:TePostgreSQLConnection
TePostgreSQLConnection	drivers/PostgreSQL/TePostgreSQLConnection.h	/^class TLPOSTGRESQL_DLL TePostgreSQLConnection : public TeConnection $/;"	c
TePostgreSQLFactory	drivers/PostgreSQL/TePostgreSQL.h	/^    TePostgreSQLFactory() : TeDatabaseFactory( $/;"	f	class:TePostgreSQLFactory
TePostgreSQLFactory	drivers/PostgreSQL/TePostgreSQL.h	/^class TLPOSTGRESQL_DLL TePostgreSQLFactory : public TeDatabaseFactory$/;"	c
TePostgreSQLFactory_instance	drivers/PostgreSQL/TePostgreSQL.h	/^  static TePostgreSQLFactory TePostgreSQLFactory_instance;$/;"	m	namespace:__anon180
TePostgreSQLPortal	drivers/PostgreSQL/TePostgreSQL.cpp	/^TePostgreSQLPortal::TePostgreSQLPortal() : con_(0), curRow_(-1)$/;"	f	class:TePostgreSQLPortal
TePostgreSQLPortal	drivers/PostgreSQL/TePostgreSQL.cpp	/^TePostgreSQLPortal::TePostgreSQLPortal(TeDatabase *pDatabase) : curRow_(-1)$/;"	f	class:TePostgreSQLPortal
TePostgreSQLPortal	drivers/PostgreSQL/TePostgreSQL.h	/^class TLPOSTGRESQL_DLL TePostgreSQLPortal : public TeDatabasePortal$/;"	c
TePrecision	kernel/TePrecision.h	/^	TePrecision(): precision_ ( TeMINFLOAT )$/;"	f	class:TePrecision
TePrecision	kernel/TePrecision.h	/^class TL_DLL TePrecision: public TeSingleton<TePrecision>$/;"	c
TePresenceStrategy	kernel/TeComputeAttributeStrategies.h	/^		TePresenceStrategy (bool defaultValue = 0) $/;"	f	class:TePresenceStrategy
TePresenceStrategy	kernel/TeComputeAttributeStrategies.h	/^class TePresenceStrategy: public TeComputeAttrStrategy<Iterator>$/;"	c
TeProfile1	kernel/TeProfile1.cpp	/^TeProfile1::TeProfile1(TeContourLineSet *parLineSet,TeLine2D *parLine)$/;"	f	class:TeProfile1
TeProfile1	kernel/TeProfile1.h	/^class TL_DLL TeProfile1$/;"	c
TeProgress	kernel/TeProgress.h	/^	TeProgress() {}$/;"	f	class:TeProgress
TeProgress	kernel/TeProgress.h	/^class TL_DLL TeProgress$/;"	c
TeProgressBase	kernel/TeProgressBase.h	/^	TeProgressBase(){}$/;"	f	class:TeProgressBase
TeProgressBase	kernel/TeProgressBase.h	/^class TL_DLL TeProgressBase$/;"	c
TeProjInfo	kernel/TeProjection.h	/^struct TL_DLL TeProjInfo $/;"	s
TeProjInfoMap	kernel/TeProjection.h	/^typedef map<string,TeProjInfo> TeProjInfoMap;$/;"	t
TeProjParamsPtrType	image_processing/TePDITypes.hpp	/^    typedef TeSharedPtr< TeProjectionParams > TeProjParamsPtrType;    $/;"	t	namespace:TePDITypes
TeProject	kernel/TeProject.cpp	/^TeProject::TeProject():$/;"	f	class:TeProject
TeProject	kernel/TeProject.cpp	/^TeProject::TeProject(const TeProject& other)$/;"	f	class:TeProject
TeProject	kernel/TeProject.cpp	/^TeProject::TeProject(const string& name, TeDatabase* db):$/;"	f	class:TeProject
TeProject	kernel/TeProject.cpp	/^TeProject::TeProject(int id, TeDatabase* db):$/;"	f	class:TeProject
TeProject	kernel/TeProject.h	/^class TL_DLL TeProject$/;"	c
TeProjectIdVector	kernel/TeProject.h	/^typedef vector<int> TeProjectIdVector;$/;"	t
TeProjectMap	kernel/TeProject.h	/^typedef map<int, TeProject*>  TeProjectMap;$/;"	t
TeProjection	kernel/TeProjection.cpp	/^TeProjection::TeProjection(const TeProjection& rhs)$/;"	f	class:TeProjection
TeProjection	kernel/TeProjection.h	/^		TeProjection ():$/;"	f	class:TeProjection
TeProjection	kernel/TeProjection.h	/^	TeProjection ( const string& name, const TeDatum& datum,$/;"	f	class:TeProjection
TeProjection	kernel/TeProjection.h	/^class TL_DLL TeProjection $/;"	c
TeProjectionFactory	kernel/TeProjection.h	/^class TL_DLL TeProjectionFactory $/;"	c
TeProjectionInfo	kernel/TeProjection.cpp	/^TeProjectionInfo ( const string& projName  )$/;"	f
TeProjectionParams	kernel/TeProjection.h	/^  TeProjectionParams()$/;"	f	struct:TeProjectionParams
TeProjectionParams	kernel/TeProjection.h	/^struct TL_DLL TeProjectionParams$/;"	s
TeProjectiveGT	kernel/TeProjectiveGT.cpp	/^TeProjectiveGT::TeProjectiveGT()$/;"	f	class:TeProjectiveGT
TeProjectiveGT	kernel/TeProjectiveGT.h	/^class TL_DLL TeProjectiveGT : public TeGeometricTransformation {$/;"	c
TeProjectiveGTFactory	kernel/TeProjectiveGTFactory.cpp	/^TeProjectiveGTFactory::TeProjectiveGTFactory()$/;"	f	class:TeProjectiveGTFactory
TeProjectiveGTFactory	kernel/TeProjectiveGTFactory.h	/^  class TL_DLL TeProjectiveGTFactory : public TeGTFactory$/;"	c
TeProjectiveGTFactory_instance	kernel/TeProjectiveGTFactory.h	/^    static TeProjectiveGTFactory TeProjectiveGTFactory_instance;$/;"	m	namespace:__anon33
TeProperIntersection	kernel/TeDataTypes.h	/^enum TeSegmentIntersectionType { TeProperIntersection, TeImproperIntersection };$/;"	e	enum:TeSegmentIntersectionType
TeProperty	kernel/TeAttribute.h	/^struct TL_DLL TeProperty$/;"	s
TePropertyVector	kernel/TeAttribute.h	/^typedef vector<TeProperty> TePropertyVector;$/;"	t
TePrototype	kernel/TePrototype.h	/^TePrototype<T>::TePrototype()$/;"	f	class:TePrototype
TePrototype	kernel/TePrototype.h	/^class TePrototype$/;"	c
TePrototypePtr	kernel/TePrototype.h	/^	typedef  TePrototype<T>* TePrototypePtr;$/;"	t	class:TePrototype
TePrototype_H	kernel/TePrototype.h	27;"	d
TeProxMatrixAbstractFactory	kernel/TeProxMatrixImplementation.h	/^class TL_DLL TeProxMatrixAbstractFactory  $/;"	c
TeProxMatrixAttributes	kernel/TeNeighbours.cpp	/^TeProxMatrixAttributes::TeProxMatrixAttributes (const TeProxMatrixAttributes& att) $/;"	f	class:TeProxMatrixAttributes
TeProxMatrixAttributes	kernel/TeNeighbours.cpp	/^TeProxMatrixAttributes::TeProxMatrixAttributes() $/;"	f	class:TeProxMatrixAttributes
TeProxMatrixAttributes	kernel/TeNeighbours.h	/^		TeProxMatrixAttributes(const double& w, const int& slice, const int& order, $/;"	f	class:TeProxMatrixAttributes
TeProxMatrixAttributes	kernel/TeNeighbours.h	/^class TL_DLL TeProxMatrixAttributes  $/;"	c
TeProxMatrixChooseOneTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixChooseOneTopologyStrategy::TeProxMatrixChooseOneTopologyStrategy () : $/;"	f	class:TeProxMatrixChooseOneTopologyStrategy
TeProxMatrixChooseOneTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixChooseOneTopologyStrategy::TeProxMatrixChooseOneTopologyStrategy (TeProxMatrixChooseOneTopologyStrategy& st):$/;"	f	class:TeProxMatrixChooseOneTopologyStrategy
TeProxMatrixChooseOneTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixChooseOneTopologyStrategy::TeProxMatrixChooseOneTopologyStrategy (TeSTElementSet*  objects, TeGeomRep	geomRep,TeSTElementSet*  objects2, TeGeomRep	geomRep2, int toprel, bool calcDistance):$/;"	f	class:TeProxMatrixChooseOneTopologyStrategy
TeProxMatrixChooseOneTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^class TL_DLL TeProxMatrixChooseOneTopologyStrategy : public  TeProxMatrixConstructionStrategy<TeSTElementSet>$/;"	c
TeProxMatrixClosedNetworkStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixClosedNetworkStrategy::TeProxMatrixClosedNetworkStrategy (TeSTElementSet*  objects,$/;"	f	class:TeProxMatrixClosedNetworkStrategy
TeProxMatrixClosedNetworkStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixClosedNetworkStrategy::TeProxMatrixClosedNetworkStrategy (const TeProxMatrixClosedNetworkStrategy& rhs) :$/;"	f	class:TeProxMatrixClosedNetworkStrategy
TeProxMatrixClosedNetworkStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^class TL_DLL TeProxMatrixClosedNetworkStrategy : public TeProxMatrixConstructionStrategy<TeSTElementSet>$/;"	c
TeProxMatrixConnectionStrenghtStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^	TeProxMatrixConnectionStrenghtStrategy  (double dist_ratio = 1.0, double max_local_distance = 0.0, double factor = 1.0, bool norm = true) $/;"	f	class:TeProxMatrixConnectionStrenghtStrategy
TeProxMatrixConnectionStrenghtStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^class TL_DLL TeProxMatrixConnectionStrenghtStrategy : public TeProxMatrixWeightsStrategy$/;"	c
TeProxMatrixConstructionParams	kernel/TeProxMatrixConstructionStrategy.h	/^	TeProxMatrixConstructionParams():$/;"	f	struct:TeProxMatrixConstructionParams
TeProxMatrixConstructionParams	kernel/TeProxMatrixConstructionStrategy.h	/^	TeProxMatrixConstructionParams(const int& theme1, const TeGeomRep& geomRep1, const TeGPMConstructionStrategy& strType):$/;"	f	struct:TeProxMatrixConstructionParams
TeProxMatrixConstructionParams	kernel/TeProxMatrixConstructionStrategy.h	/^struct TL_DLL TeProxMatrixConstructionParams$/;"	s
TeProxMatrixConstructionStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^TeProxMatrixConstructionStrategy<T>::TeProxMatrixConstructionStrategy (const TeProxMatrixConstructionStrategy& st)$/;"	f	class:TeProxMatrixConstructionStrategy
TeProxMatrixConstructionStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^TeProxMatrixConstructionStrategy<T>::TeProxMatrixConstructionStrategy() : $/;"	f	class:TeProxMatrixConstructionStrategy
TeProxMatrixConstructionStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^TeProxMatrixConstructionStrategy<T>::TeProxMatrixConstructionStrategy(T*  objects, TeGeomRep geomRep, const TeGPMConstructionStrategy& type) :$/;"	f	class:TeProxMatrixConstructionStrategy
TeProxMatrixConstructionStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^class TeProxMatrixConstructionStrategy $/;"	c
TeProxMatrixConstructionStrategy_H	kernel/TeProxMatrixConstructionStrategy.h	28;"	d
TeProxMatrixGraphBreymann	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann:: TeProxMatrixGraphBreymann () : $/;"	f	class:TeProxMatrixGraphBreymann
TeProxMatrixGraphBreymann	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann:: TeProxMatrixGraphBreymann (TeProxMatrixGraphBreymann&  other) : $/;"	f	class:TeProxMatrixGraphBreymann
TeProxMatrixGraphBreymann	kernel/TeProxMatrixImplementation.h	/^class TL_DLL TeProxMatrixGraphBreymann : public  TeProxMatrixImplementation$/;"	c
TeProxMatrixImplementation	kernel/TeProxMatrixImplementation.h	/^	TeProxMatrixImplementation(const TeGPMImplementation& type): type_(type)$/;"	f	class:TeProxMatrixImplementation
TeProxMatrixImplementation	kernel/TeProxMatrixImplementation.h	/^class TL_DLL TeProxMatrixImplementation  $/;"	c
TeProxMatrixImplementation_H	kernel/TeProxMatrixImplementation.h	28;"	d
TeProxMatrixInverseDistanceStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^	TeProxMatrixInverseDistanceStrategy  (double a = 1.0, double b = 1.0, double c = 1.0, double factor = 1.0, bool norm = true) : $/;"	f	class:TeProxMatrixInverseDistanceStrategy
TeProxMatrixInverseDistanceStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^class TL_DLL TeProxMatrixInverseDistanceStrategy : public TeProxMatrixWeightsStrategy$/;"	c
TeProxMatrixKeepInBothTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixKeepInBothTopologyStrategy::TeProxMatrixKeepInBothTopologyStrategy () : $/;"	f	class:TeProxMatrixKeepInBothTopologyStrategy
TeProxMatrixKeepInBothTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixKeepInBothTopologyStrategy::TeProxMatrixKeepInBothTopologyStrategy (TeProxMatrixKeepInBothTopologyStrategy& st):$/;"	f	class:TeProxMatrixKeepInBothTopologyStrategy
TeProxMatrixKeepInBothTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixKeepInBothTopologyStrategy::TeProxMatrixKeepInBothTopologyStrategy (TeSTElementSet*  objects, TeGeomRep	geomRep,TeSTElementSet*  objects2, TeGeomRep	geomRep2, int toprel, bool calcDistance):$/;"	f	class:TeProxMatrixKeepInBothTopologyStrategy
TeProxMatrixKeepInBothTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^class TL_DLL TeProxMatrixKeepInBothTopologyStrategy : public  TeProxMatrixConstructionStrategy<TeSTElementSet>$/;"	c
TeProxMatrixLocalAdjacencyStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixLocalAdjacencyStrategy::TeProxMatrixLocalAdjacencyStrategy () : $/;"	f	class:TeProxMatrixLocalAdjacencyStrategy
TeProxMatrixLocalAdjacencyStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixLocalAdjacencyStrategy::TeProxMatrixLocalAdjacencyStrategy (TeProxMatrixLocalAdjacencyStrategy& st):$/;"	f	class:TeProxMatrixLocalAdjacencyStrategy
TeProxMatrixLocalAdjacencyStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixLocalAdjacencyStrategy::TeProxMatrixLocalAdjacencyStrategy (TeSTElementSet*  objects, TeGeomRep	geomRep, bool calcDistance):$/;"	f	class:TeProxMatrixLocalAdjacencyStrategy
TeProxMatrixLocalAdjacencyStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^class TL_DLL TeProxMatrixLocalAdjacencyStrategy : public  TeProxMatrixConstructionStrategy<TeSTElementSet>$/;"	c
TeProxMatrixLocalDistanceStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^TeProxMatrixLocalDistanceStrategy<Set>::TeProxMatrixLocalDistanceStrategy ():$/;"	f	class:TeProxMatrixLocalDistanceStrategy
TeProxMatrixLocalDistanceStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^TeProxMatrixLocalDistanceStrategy<Set>::TeProxMatrixLocalDistanceStrategy (Set*  objects, TeGeomRep geomRep, double max_distance): $/;"	f	class:TeProxMatrixLocalDistanceStrategy
TeProxMatrixLocalDistanceStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^TeProxMatrixLocalDistanceStrategy<Set>::TeProxMatrixLocalDistanceStrategy (const TeProxMatrixLocalDistanceStrategy<Set>& st): $/;"	f	class:TeProxMatrixLocalDistanceStrategy
TeProxMatrixLocalDistanceStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^class TeProxMatrixLocalDistanceStrategy : public TeProxMatrixConstructionStrategy<Set>$/;"	c
TeProxMatrixLocalTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixLocalTopologyStrategy::TeProxMatrixLocalTopologyStrategy () : $/;"	f	class:TeProxMatrixLocalTopologyStrategy
TeProxMatrixLocalTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixLocalTopologyStrategy::TeProxMatrixLocalTopologyStrategy (TeProxMatrixLocalTopologyStrategy& st):$/;"	f	class:TeProxMatrixLocalTopologyStrategy
TeProxMatrixLocalTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixLocalTopologyStrategy::TeProxMatrixLocalTopologyStrategy (TeSTElementSet*  objects, TeGeomRep	geomRep,TeSTElementSet*  objects2, TeGeomRep	geomRep2, int toprel, bool calcDistance):$/;"	f	class:TeProxMatrixLocalTopologyStrategy
TeProxMatrixLocalTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^class TL_DLL TeProxMatrixLocalTopologyStrategy : public  TeProxMatrixConstructionStrategy<TeSTElementSet>$/;"	c
TeProxMatrixNearestNeighbourStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixNearestNeighbourStrategy::TeProxMatrixNearestNeighbourStrategy ():$/;"	f	class:TeProxMatrixNearestNeighbourStrategy
TeProxMatrixNearestNeighbourStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixNearestNeighbourStrategy::TeProxMatrixNearestNeighbourStrategy (TeSTEventSet* objects, int num_neighbours):$/;"	f	class:TeProxMatrixNearestNeighbourStrategy
TeProxMatrixNearestNeighbourStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixNearestNeighbourStrategy::TeProxMatrixNearestNeighbourStrategy (const TeProxMatrixNearestNeighbourStrategy& st):$/;"	f	class:TeProxMatrixNearestNeighbourStrategy
TeProxMatrixNearestNeighbourStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^class TL_DLL TeProxMatrixNearestNeighbourStrategy : public  TeProxMatrixConstructionStrategy<TeSTEventSet>$/;"	c
TeProxMatrixNoSlicingStrategy	kernel/TeProxMatrixSlicingStrategy.h	/^	TeProxMatrixNoSlicingStrategy (): TeProxMatrixSlicingStrategy(TeNoSlicingStrategy)$/;"	f	class:TeProxMatrixNoSlicingStrategy
TeProxMatrixNoSlicingStrategy	kernel/TeProxMatrixSlicingStrategy.h	/^class TL_DLL TeProxMatrixNoSlicingStrategy : public TeProxMatrixSlicingStrategy$/;"	c
TeProxMatrixNoWeightsStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^	TeProxMatrixNoWeightsStrategy (bool norm = true) : TeProxMatrixWeightsStrategy(norm, TeNoWeightsStrategy)$/;"	f	class:TeProxMatrixNoWeightsStrategy
TeProxMatrixNoWeightsStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^class TL_DLL TeProxMatrixNoWeightsStrategy : public TeProxMatrixWeightsStrategy$/;"	c
TeProxMatrixOpenNetworkStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixOpenNetworkStrategy::TeProxMatrixOpenNetworkStrategy (TeSTElementSet*  objects, TeGeomRep rep, $/;"	f	class:TeProxMatrixOpenNetworkStrategy
TeProxMatrixOpenNetworkStrategy	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixOpenNetworkStrategy::TeProxMatrixOpenNetworkStrategy (const TeProxMatrixOpenNetworkStrategy& rhs): $/;"	f	class:TeProxMatrixOpenNetworkStrategy
TeProxMatrixOpenNetworkStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^class TL_DLL TeProxMatrixOpenNetworkStrategy : public TeProxMatrixConstructionStrategy<TeSTElementSet>$/;"	c
TeProxMatrixOpenNetworkStrategy2	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixOpenNetworkStrategy2::TeProxMatrixOpenNetworkStrategy2 (TeSTElementSet*  objects1, $/;"	f	class:TeProxMatrixOpenNetworkStrategy2
TeProxMatrixOpenNetworkStrategy2	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixOpenNetworkStrategy2::TeProxMatrixOpenNetworkStrategy2 (const TeProxMatrixOpenNetworkStrategy2& rhs)$/;"	f	class:TeProxMatrixOpenNetworkStrategy2
TeProxMatrixOpenNetworkStrategy2	kernel/TeProxMatrixConstructionStrategy.h	/^class TL_DLL TeProxMatrixOpenNetworkStrategy2 : public TeProxMatrixConstructionStrategy<TeSTElementSet>$/;"	c
TeProxMatrixSlicingParams	kernel/TeProxMatrixSlicingStrategy.h	/^	TeProxMatrixSlicingParams(const TeGPMSlicingStrategy& type=TeNoSlicingStrategy):$/;"	f	struct:TeProxMatrixSlicingParams
TeProxMatrixSlicingParams	kernel/TeProxMatrixSlicingStrategy.h	/^struct TL_DLL TeProxMatrixSlicingParams$/;"	s
TeProxMatrixSlicingStrategy	kernel/TeProxMatrixSlicingStrategy.h	/^	TeProxMatrixSlicingStrategy(const TeGPMSlicingStrategy& type): params_(type) {}$/;"	f	class:TeProxMatrixSlicingStrategy
TeProxMatrixSlicingStrategy	kernel/TeProxMatrixSlicingStrategy.h	/^class TL_DLL TeProxMatrixSlicingStrategy  $/;"	c
TeProxMatrixSlicingStrategy_H	kernel/TeProxMatrixSlicingStrategy.h	29;"	d
TeProxMatrixSquaredInverseDistanceStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^	TeProxMatrixSquaredInverseDistanceStrategy  (double a = 1.0, double b = 1.0, double c = 1.0, double factor = 1.0, bool norm = true) : $/;"	f	class:TeProxMatrixSquaredInverseDistanceStrategy
TeProxMatrixSquaredInverseDistanceStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^class TL_DLL TeProxMatrixSquaredInverseDistanceStrategy : public TeProxMatrixWeightsStrategy$/;"	c
TeProxMatrixWeightsParams	kernel/TeProxMatrixWeightsStrategy.h	/^	TeProxMatrixWeightsParams(): $/;"	f	struct:TeProxMatrixWeightsParams
TeProxMatrixWeightsParams	kernel/TeProxMatrixWeightsStrategy.h	/^	TeProxMatrixWeightsParams(bool norm, const TeGPMWeightsStrategy& type): $/;"	f	struct:TeProxMatrixWeightsParams
TeProxMatrixWeightsParams	kernel/TeProxMatrixWeightsStrategy.h	/^struct TL_DLL TeProxMatrixWeightsParams$/;"	s
TeProxMatrixWeightsStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^	TeProxMatrixWeightsStrategy(bool norm = false, const TeGPMWeightsStrategy& type=TeNoWeightsStrategy ):$/;"	f	class:TeProxMatrixWeightsStrategy
TeProxMatrixWeightsStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^class TL_DLL TeProxMatrixWeightsStrategy  $/;"	c
TeProxMatrixWeightsStrategy_H	kernel/TeProxMatrixWeightsStrategy.h	29;"	d
TeProxMatrixZonesSlicingStrategy	kernel/TeProxMatrixSlicingStrategy.h	/^	TeProxMatrixZonesSlicingStrategy (double dist, bool local = true):$/;"	f	class:TeProxMatrixZonesSlicingStrategy
TeProxMatrixZonesSlicingStrategy	kernel/TeProxMatrixSlicingStrategy.h	/^class TL_DLL TeProxMatrixZonesSlicingStrategy : public TeProxMatrixSlicingStrategy$/;"	c
TeProxMatrix_H	kernel/TeGeneralizedProxMatrix.h	28;"	d
TePtBasicType	kernel/TeDataTypes.h	/^enum TePtBasicType { TePtTypePlus=0, TePtTypeStar=1, TePtTypeCircle=2, TePtTypeX=3,  $/;"	g
TePtTypeBox	kernel/TeDataTypes.h	/^					 TePtTypeBox=4, TePtTypeDiamond=5, TePtTypeHollowCircle=6, $/;"	e	enum:TePtBasicType
TePtTypeCircle	kernel/TeDataTypes.h	/^enum TePtBasicType { TePtTypePlus=0, TePtTypeStar=1, TePtTypeCircle=2, TePtTypeX=3,  $/;"	e	enum:TePtBasicType
TePtTypeCustom	kernel/TeDataTypes.h	/^					 TePtTypeHollowBox=7, TePtTypeHollowDiamond=8, TePtTypeCustom=9 };$/;"	e	enum:TePtBasicType
TePtTypeDiamond	kernel/TeDataTypes.h	/^					 TePtTypeBox=4, TePtTypeDiamond=5, TePtTypeHollowCircle=6, $/;"	e	enum:TePtBasicType
TePtTypeHollowBox	kernel/TeDataTypes.h	/^					 TePtTypeHollowBox=7, TePtTypeHollowDiamond=8, TePtTypeCustom=9 };$/;"	e	enum:TePtBasicType
TePtTypeHollowCircle	kernel/TeDataTypes.h	/^					 TePtTypeBox=4, TePtTypeDiamond=5, TePtTypeHollowCircle=6, $/;"	e	enum:TePtBasicType
TePtTypeHollowDiamond	kernel/TeDataTypes.h	/^					 TePtTypeHollowBox=7, TePtTypeHollowDiamond=8, TePtTypeCustom=9 };$/;"	e	enum:TePtBasicType
TePtTypePlus	kernel/TeDataTypes.h	/^enum TePtBasicType { TePtTypePlus=0, TePtTypeStar=1, TePtTypeCircle=2, TePtTypeX=3,  $/;"	e	enum:TePtBasicType
TePtTypeStar	kernel/TeDataTypes.h	/^enum TePtBasicType { TePtTypePlus=0, TePtTypeStar=1, TePtTypeCircle=2, TePtTypeX=3,  $/;"	e	enum:TePtBasicType
TePtTypeX	kernel/TeDataTypes.h	/^enum TePtBasicType { TePtTypePlus=0, TePtTypeStar=1, TePtTypeCircle=2, TePtTypeX=3,  $/;"	e	enum:TePtBasicType
TeQUADTREE	kernel/TeDatabase.h	/^enum TeSpatialIndexType {TeRTREE, TeQUADTREE};$/;"	e	enum:TeSpatialIndexType
TeQUERIED	kernel/TeDefines.h	153;"	d
TeQtAnimaThread	drivers/qt/TeQtAnimaThread.h	/^	TeQtAnimaThread(){$/;"	f	class:TeQtAnimaThread
TeQtAnimaThread	drivers/qt/TeQtAnimaThread.h	/^class TL_DLL TeQtAnimaThread : public QThread$/;"	c
TeQtBigTable	drivers/qt/TeQtBigTable.cpp	/^TeQtBigTable::TeQtBigTable(QWidget *parent, const char *name)$/;"	f	class:TeQtBigTable
TeQtBigTable	drivers/qt/TeQtBigTable.cpp	/^TeQtBigTable::TeQtBigTable(TeQtDataSource *dSource, QWidget *parent, const char *name)$/;"	f	class:TeQtBigTable
TeQtBigTable	drivers/qt/TeQtBigTable.h	/^class TL_DLL TeQtBigTable : public QTable$/;"	c
TeQtCanvas	drivers/qt/TeQtCanvas.cpp	/^TeQtCanvas::TeQtCanvas(QWidget *parent, const char *name)$/;"	f	class:TeQtCanvas
TeQtCanvas	drivers/qt/TeQtCanvas.h	/^class TL_DLL TeQtCanvas : public QScrollView$/;"	c
TeQtChartItem	drivers/qt/TeQtChartItem.cpp	/^TeQtChartItem::TeQtChartItem(QListViewItem *parent,$/;"	f	class:TeQtChartItem
TeQtChartItem	drivers/qt/TeQtChartItem.h	/^class TL_DLL TeQtChartItem : public TeQtCheckListItem$/;"	c
TeQtChartTitleItem	drivers/qt/TeQtChartItem.h	/^    TeQtChartTitleItem(QListViewItem *parent, QString text)$/;"	f	class:TeQtChartTitleItem
TeQtChartTitleItem	drivers/qt/TeQtChartItem.h	/^class TL_DLL TeQtChartTitleItem : public TeQtCheckListItem$/;"	c
TeQtCheckListItem	drivers/qt/TeQtCheckListItem.h	/^	TeQtCheckListItem(QCheckListItem *parent, QString text, QCheckListItem::Type ctype = QCheckListItem::Controller)$/;"	f	class:TeQtCheckListItem
TeQtCheckListItem	drivers/qt/TeQtCheckListItem.h	/^	TeQtCheckListItem(QListViewItem *parent, QString text, QCheckListItem::Type ctype = QCheckListItem::Controller)$/;"	f	class:TeQtCheckListItem
TeQtCheckListItem	drivers/qt/TeQtCheckListItem.h	/^    TeQtCheckListItem(QListView *parent, QString text, QCheckListItem::Type ctype = QCheckListItem::Controller)$/;"	f	class:TeQtCheckListItem
TeQtCheckListItem	drivers/qt/TeQtCheckListItem.h	/^class TL_DLL TeQtCheckListItem : public QCheckListItem$/;"	c
TeQtColorBar	drivers/qt/TeQtColorBar.cpp	/^TeQtColorBar::TeQtColorBar(QWidget* parent, const char* name)$/;"	f	class:TeQtColorBar
TeQtColorBar	drivers/qt/TeQtColorBar.h	/^class TL_DLL TeQtColorBar : public QFrame$/;"	c
TeQtDataSource	drivers/qt/TeQtDataSource.h	/^	TeQtDataSource() {}$/;"	f	class:TeQtDataSource
TeQtDataSource	drivers/qt/TeQtDataSource.h	/^class TL_DLL TeQtDataSource : public QObject$/;"	c
TeQtDatabaseItem	drivers/qt/TeQtDatabaseItem.cpp	/^TeQtDatabaseItem::TeQtDatabaseItem(QListView *parent,$/;"	f	class:TeQtDatabaseItem
TeQtDatabaseItem	drivers/qt/TeQtDatabaseItem.h	/^class TL_DLL TeQtDatabaseItem : public TeQtCheckListItem$/;"	c
TeQtDatabasesListView	drivers/qt/TeQtDatabasesListView.cpp	/^TeQtDatabasesListView::TeQtDatabasesListView(QWidget *parent, const char *name)$/;"	f	class:TeQtDatabasesListView
TeQtDatabasesListView	drivers/qt/TeQtDatabasesListView.h	/^class TL_DLL TeQtDatabasesListView : public QListView$/;"	c
TeQtFrame	drivers/qt/TeQtFrame.cpp	/^TeQtFrame::TeQtFrame(QWidget* parent, const char* name)$/;"	f	class:TeQtFrame
TeQtFrame	drivers/qt/TeQtFrame.h	/^class TL_DLL TeQtFrame : public QFrame$/;"	c
TeQtGLWidget	drivers/qt/TeQtGLWidget.cpp	/^TeQtGLWidget::TeQtGLWidget( QWidget* parent, const char* name, TeQtGrid* grid, string xField, string yField, string zField, QPaintDevice* xy, QPaintDevice* zx, QPaintDevice* yz, int selectedObjects, string func)$/;"	f	class:TeQtGLWidget
TeQtGLWidget	drivers/qt/TeQtGLWidget.h	/^class TL_DLL TeQtGLWidget : public QGLWidget$/;"	c
TeQtGraphPlot	drivers/qt/TeQtGraph.cpp	/^TeQtGraphPlot::TeQtGraphPlot (QWidget *parent, const char * \/* name *\/)$/;"	f	class:TeQtGraphPlot
TeQtGraphPlot	drivers/qt/TeQtGraph.h	/^class TL_DLL TeQtGraphPlot : public TeGraphPlot$/;"	c
TeQtGrid	drivers/qt/TeQtGrid.cpp	/^TeQtGrid::TeQtGrid(QWidget* parent, const char* name)$/;"	f	class:TeQtGrid
TeQtGrid	drivers/qt/TeQtGrid.h	/^class TL_DLL TeQtGrid : public QTable$/;"	c
TeQtGridItem	drivers/qt/TeQtGrid.h	/^    TeQtGridItem(QTable *t, EditType et, const QString &txt)$/;"	f	class:TeQtGridItem
TeQtGridItem	drivers/qt/TeQtGrid.h	/^class TL_DLL TeQtGridItem : public QTableItem$/;"	c
TeQtGridSource	drivers/qt/TeQtGridSource.h	/^	TeQtGridSource() : theme_(0), portal_(0), nRows_(0), nCols_(0)$/;"	f	class:TeQtGridSource
TeQtGridSource	drivers/qt/TeQtGridSource.h	/^class TL_DLL TeQtGridSource : public TeQtDataSource$/;"	c
TeQtLayerItem	drivers/qt/TeQtLayerItem.cpp	/^TeQtLayerItem::TeQtLayerItem(QListViewItem *parent, $/;"	f	class:TeQtLayerItem
TeQtLayerItem	drivers/qt/TeQtLayerItem.h	/^class TL_DLL TeQtLayerItem : public TeQtCheckListItem$/;"	c
TeQtLegendItem	drivers/qt/TeQtLegendItem.cpp	/^TeQtLegendItem::TeQtLegendItem(QListViewItem *parent,$/;"	f	class:TeQtLegendItem
TeQtLegendItem	drivers/qt/TeQtLegendItem.h	/^class TL_DLL TeQtLegendItem : public TeQtCheckListItem$/;"	c
TeQtLegendSource	drivers/qt/TeQtLegendSource.cpp	/^TeQtLegendSource::TeQtLegendSource() : nRows_(0), nCols_(0)$/;"	f	class:TeQtLegendSource
TeQtLegendSource	drivers/qt/TeQtLegendSource.h	/^class TL_DLL TeQtLegendSource : public TeQtDataSource$/;"	c
TeQtLegendTitleItem	drivers/qt/TeQtLegendItem.h	/^    TeQtLegendTitleItem(QListViewItem *parent, QString text)$/;"	f	class:TeQtLegendTitleItem
TeQtLegendTitleItem	drivers/qt/TeQtLegendItem.h	/^class TL_DLL TeQtLegendTitleItem : public TeQtCheckListItem$/;"	c
TeQtMultiTextEdit	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::TeQtMultiTextEdit()$/;"	f	class:TeQtMultiTextEdit
TeQtMultiTextEdit	drivers/qt/TeQtTextEdit.h	/^class TL_DLL TeQtMultiTextEdit$/;"	c
TeQtProgress	drivers/qt/TeQtProgress.h	/^	TeQtProgress( QWidget * creator = 0, const char * name = 0, bool modal = FALSE, WFlags f = 0)$/;"	f	class:TeQtProgress
TeQtProgress	drivers/qt/TeQtProgress.h	/^class TL_DLL TeQtProgress : public QProgressDialog, public TeProgressBase$/;"	c
TeQtTable	drivers/qt/TeQtTable.cpp	/^TeQtTable::TeQtTable(QWidget* parent, QString name)$/;"	f	class:TeQtTable
TeQtTable	drivers/qt/TeQtTable.h	/^class TL_DLL TeQtTable : public QTable$/;"	c
TeQtTextEdit	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::TeQtTextEdit()$/;"	f	class:TeQtTextEdit
TeQtTextEdit	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::TeQtTextEdit(TeText& tx, TeVisual v, TeQtCanvas* canvas)$/;"	f	class:TeQtTextEdit
TeQtTextEdit	drivers/qt/TeQtTextEdit.h	/^class TL_DLL TeQtTextEdit$/;"	c
TeQtThemeItem	drivers/qt/TeQtThemeItem.cpp	/^TeQtThemeItem::TeQtThemeItem(QListViewItem *parent,$/;"	f	class:TeQtThemeItem
TeQtThemeItem	drivers/qt/TeQtThemeItem.h	/^class TL_DLL TeQtThemeItem : public TeQtCheckListItem$/;"	c
TeQtViewItem	drivers/qt/TeQtViewItem.cpp	/^TeQtViewItem::TeQtViewItem(QListView *parent,$/;"	f	class:TeQtViewItem
TeQtViewItem	drivers/qt/TeQtViewItem.h	/^class TL_DLL TeQtViewItem : public TeQtCheckListItem$/;"	c
TeQtViewsListView	drivers/qt/TeQtViewsListView.cpp	/^TeQtViewsListView::TeQtViewsListView(QWidget *parent, const char *name)$/;"	f	class:TeQtViewsListView
TeQtViewsListView	drivers/qt/TeQtViewsListView.h	/^class TL_DLL TeQtViewsListView : public QListView$/;"	c
TeQuantil	kernel/TeDataTypes.h	/^{ TeEqualSteps = 0, TeQuantil = 1, TeStdDeviation = 2, TeUniqueValue = 3,$/;"	e	enum:TeGroupingMode
TeQuerier	kernel/TeQuerier.cpp	/^TeQuerier::TeQuerier(TeQuerierParams& params)$/;"	f	class:TeQuerier
TeQuerier	kernel/TeQuerier.cpp	/^TeQuerier::TeQuerier(const TeQuerier& other)$/;"	f	class:TeQuerier
TeQuerier	kernel/TeQuerier.h	/^		TeQuerier():$/;"	f	class:TeQuerier
TeQuerier	kernel/TeQuerier.h	/^class TL_DLL TeQuerier$/;"	c
TeQuerierDB	kernel/TeQuerierDB.h	/^	TeQuerierDB(TeQuerierParams* params): TeQuerierImpl(params), flagPortal_(false) $/;"	f	class:TeQuerierDB
TeQuerierDB	kernel/TeQuerierDB.h	/^class TL_DLL TeQuerierDB : public TeQuerierImpl$/;"	c
TeQuerierDBStr1	kernel/TeQuerierDBStr1.h	/^	TeQuerierDBStr1(TeQuerierParams* params) : $/;"	f	class:TeQuerierDBStr1
TeQuerierDBStr1	kernel/TeQuerierDBStr1.h	/^class TL_DLL TeQuerierDBStr1 : public TeQuerierDB$/;"	c
TeQuerierDBStr1Factory	kernel/TeQuerierDBStr1.h	/^	TeQuerierDBStr1Factory(const string& name) : TeQuerierImplFactory(name) {}$/;"	f	class:TeQuerierDBStr1Factory
TeQuerierDBStr1Factory	kernel/TeQuerierDBStr1.h	/^class TL_DLL TeQuerierDBStr1Factory : public TeQuerierImplFactory$/;"	c
TeQuerierDBStr2	kernel/TeQuerierDBStr2.h	/^	TeQuerierDBStr2(TeQuerierParams* params): $/;"	f	class:TeQuerierDBStr2
TeQuerierDBStr2	kernel/TeQuerierDBStr2.h	/^class TL_DLL TeQuerierDBStr2: public TeQuerierDB$/;"	c
TeQuerierDBStr2Factory	kernel/TeQuerierDBStr2.h	/^	TeQuerierDBStr2Factory(const string& name) : TeQuerierImplFactory(name) {}$/;"	f	class:TeQuerierDBStr2Factory
TeQuerierDBStr2Factory	kernel/TeQuerierDBStr2.h	/^class TL_DLL TeQuerierDBStr2Factory : public TeQuerierImplFactory$/;"	c
TeQuerierDBStr3	kernel/TeQuerierDBStr3.h	/^	TeQuerierDBStr3(TeQuerierParams* params): $/;"	f	class:TeQuerierDBStr3
TeQuerierDBStr3	kernel/TeQuerierDBStr3.h	/^class TL_DLL TeQuerierDBStr3: public TeQuerierDB$/;"	c
TeQuerierDBStr3Factory	kernel/TeQuerierDBStr3.h	/^	TeQuerierDBStr3Factory(const string& name) : TeQuerierImplFactory(name) {}$/;"	f	class:TeQuerierDBStr3Factory
TeQuerierDBStr3Factory	kernel/TeQuerierDBStr3.h	/^class TL_DLL TeQuerierDBStr3Factory : public TeQuerierImplFactory$/;"	c
TeQuerierImpl	kernel/TeQuerierImpl.cpp	/^TeQuerierImpl::TeQuerierImpl( const TeQuerierImpl& other)$/;"	f	class:TeQuerierImpl
TeQuerierImpl	kernel/TeQuerierImpl.cpp	/^TeQuerierImpl::TeQuerierImpl(TeQuerierParams* par): params_(par), filledSerie_(false)$/;"	f	class:TeQuerierImpl
TeQuerierImpl	kernel/TeQuerierImpl.h	/^class TL_DLL TeQuerierImpl$/;"	c
TeQuerierImplFactory	kernel/TeQuerierImpl.h	/^	TeQuerierImplFactory(const string& name) : TeFactory<TeQuerierImpl, TeQuerierParams>(name) { }$/;"	f	class:TeQuerierImplFactory
TeQuerierImplFactory	kernel/TeQuerierImpl.h	/^class TL_DLL TeQuerierImplFactory : public TeFactory<TeQuerierImpl, TeQuerierParams>$/;"	c
TeQuerierParams	kernel/TeQuerierParams.cpp	/^TeQuerierParams::TeQuerierParams(const TeQuerierParams& rhs)$/;"	f	class:TeQuerierParams
TeQuerierParams	kernel/TeQuerierParams.h	/^	TeQuerierParams(bool loadGeom = false, bool loadAllAttr = true): $/;"	f	class:TeQuerierParams
TeQuerierParams	kernel/TeQuerierParams.h	/^	TeQuerierParams(bool loadGeom, TeGroupingAttr& groupAttr): $/;"	f	class:TeQuerierParams
TeQuerierParams	kernel/TeQuerierParams.h	/^	TeQuerierParams(bool loadGeom, const vector<string>& loadAttr): $/;"	f	class:TeQuerierParams
TeQuerierParams	kernel/TeQuerierParams.h	/^class TL_DLL TeQuerierParams$/;"	c
TeQuerierSHP	drivers/shapelib/TeQuerierSHP.h	/^		TeQuerierSHP(TeQuerierParams* params): $/;"	f	class:TeQuerierSHP
TeQuerierSHP	drivers/shapelib/TeQuerierSHP.h	/^class TeQuerierSHP : public TeQuerierImpl$/;"	c
TeQuerierSHPFactory	drivers/shapelib/TeQuerierSHP.h	/^	TeQuerierSHPFactory(const string& name) : TeQuerierImplFactory(name) {}$/;"	f	class:TeQuerierSHPFactory
TeQuerierSHPFactory	drivers/shapelib/TeQuerierSHP.h	/^class TeQuerierSHPFactory : public TeQuerierImplFactory$/;"	c
TeQuerySelection	kernel/TeDataTypes.h	/^{   TeDefaultSelection, TePointingSelection, TeQuerySelection, TePointingAndQuerySelection };$/;"	e	enum:TeObjectSelectionMode
TeQwtPlot	drivers/qwt/TeQwtPlot.cpp	/^TeQwtPlot::TeQwtPlot(QWidget *p)$/;"	f	class:TeQwtPlot
TeQwtPlot	drivers/qwt/TeQwtPlot.cpp	/^TeQwtPlot::TeQwtPlot(const QwtText &title, QWidget *p)$/;"	f	class:TeQwtPlot
TeQwtPlot	drivers/qwt/TeQwtPlot.h	/^class TL_DLL TeQwtPlot:public QwtPlot$/;"	c
TeQwtPlotCurve	drivers/qwt/TeQwtPlotCurve.h	/^	explicit TeQwtPlotCurve():QwtPlotCurve(){}$/;"	f	class:TeQwtPlotCurve
TeQwtPlotCurve	drivers/qwt/TeQwtPlotCurve.h	/^	explicit TeQwtPlotCurve(const QString &title):QwtPlotCurve(title){}$/;"	f	class:TeQwtPlotCurve
TeQwtPlotCurve	drivers/qwt/TeQwtPlotCurve.h	/^	explicit TeQwtPlotCurve(const QwtText &title):QwtPlotCurve(title){}$/;"	f	class:TeQwtPlotCurve
TeQwtPlotCurve	drivers/qwt/TeQwtPlotCurve.h	/^class TL_DLL TeQwtPlotCurve : public QwtPlotCurve$/;"	c
TeQwtPlotPicker	drivers/qwt/TeQwtPlotPicker.cpp	/^TeQwtPlotPicker::TeQwtPlotPicker(QwtPlotCanvas *c)$/;"	f	class:TeQwtPlotPicker
TeQwtPlotPicker	drivers/qwt/TeQwtPlotPicker.cpp	/^TeQwtPlotPicker::TeQwtPlotPicker(int xAxis, int yAxis, QwtPlotCanvas *c)$/;"	f	class:TeQwtPlotPicker
TeQwtPlotPicker	drivers/qwt/TeQwtPlotPicker.cpp	/^TeQwtPlotPicker::TeQwtPlotPicker(int xAxis, int yAxis, int selectionFlags, DisplayMode trackerMode, QwtPlotCanvas *c)$/;"	f	class:TeQwtPlotPicker
TeQwtPlotPicker	drivers/qwt/TeQwtPlotPicker.h	/^class TL_DLL TeQwtPlotPicker:public QwtPlotPicker$/;"	c
TeQwtPlotZoomer	drivers/qwt/TeQwtPlotZoomer.cpp	/^TeQwtPlotZoomer::TeQwtPlotZoomer(QwtPlotCanvas *c)$/;"	f	class:TeQwtPlotZoomer
TeQwtPlotZoomer	drivers/qwt/TeQwtPlotZoomer.cpp	/^TeQwtPlotZoomer::TeQwtPlotZoomer(int xAxis, int yAxis, QwtPlotCanvas *c)$/;"	f	class:TeQwtPlotZoomer
TeQwtPlotZoomer	drivers/qwt/TeQwtPlotZoomer.cpp	/^TeQwtPlotZoomer::TeQwtPlotZoomer(int xAxis, int yAxis, int selectionFlags,$/;"	f	class:TeQwtPlotZoomer
TeQwtPlotZoomer	drivers/qwt/TeQwtPlotZoomer.h	/^class TL_DLL TeQwtPlotZoomer: public QwtPlotZoomer$/;"	c
TeRANDOMACCESS	kernel/TeDatabase.h	/^enum TeCursorType { TeUNIDIRECTIONAL, TeBIDIRECTIONAL, TeRANDOMACCESS };$/;"	e	enum:TeCursorType
TeRASTER	kernel/TeDataTypes.h	/^	TeARCS = 32, TeNODES = 64  , TeTEXT = 128, TeCELLS = 256 , TeRASTER = 512,$/;"	e	enum:TeGeomRep
TeRASTERFILE	kernel/TeDataTypes.h	/^	TeRASTERFILE = 1024, TeGEOMETRYNONE = 2048, TeSHAPEFILE = 4096, TeCOVERAGE = 8192};$/;"	e	enum:TeGeomRep
TeRASTERTYPE	kernel/TeDataTypes.h	/^ TeRASTERTYPE, TeBOOLEAN};$/;"	e	enum:TeAttrDataType
TeRBNodeColor	kernel/TeRedBlackTree.h	/^	enum TeRBNodeColor { TeREDNODE, TeBLACKNODE };$/;"	g	namespace:TeREDBLACK
TeRBTree	kernel/TeRedBlackTree.h	/^			TeRBTree()$/;"	f	class:TeREDBLACK::TeRBTree
TeRBTree	kernel/TeRedBlackTree.h	/^	class TeRBTree$/;"	c	namespace:TeREDBLACK
TeREADONLY	kernel/TeDatabase.h	/^enum TeCursorEditType { TeREADONLY, TeREADWRITE };$/;"	e	enum:TeCursorEditType
TeREADWRITE	kernel/TeDatabase.h	/^enum TeCursorEditType { TeREADONLY, TeREADWRITE };$/;"	e	enum:TeCursorEditType
TeREAL	kernel/TeDataTypes.h	/^{TeSTRING, TeREAL, TeINT, TeDATETIME, TeBLOB, TeOBJECT, TeCHARACTER, TeUNKNOWN, TeUNSIGNEDINT,$/;"	e	enum:TeAttrDataType
TeREDBLACK	kernel/TeRedBlackTree.h	/^namespace TeREDBLACK$/;"	n
TeREDCHANNEL	kernel/TeRasterTransform.h	/^	enum TeRGBChannels { TeREDCHANNEL=0, TeGREENCHANNEL=1, TeBLUECHANNEL=2 };$/;"	e	enum:TeRasterTransform::TeRGBChannels
TeREDNODE	kernel/TeRedBlackTree.h	/^	enum TeRBNodeColor { TeREDNODE, TeBLACKNODE };$/;"	e	enum:TeREDBLACK::TeRBNodeColor
TeRGB	kernel/TeRasterParams.h	/^	{ TeUnknown, TePallete, TeMultiBand, TeRGB };$/;"	e	enum:TeRasterParams::TeRasterPhotometricInterpretation
TeRGBChannels	kernel/TeRasterTransform.h	/^	enum TeRGBChannels { TeREDCHANNEL=0, TeGREENCHANNEL=1, TeBLUECHANNEL=2 };$/;"	g	class:TeRasterTransform
TeRICascadeDeletion	kernel/TeDataTypes.h	/^{	TeNoRelation, TeRINoCascadeDeletion, TeRICascadeDeletion };$/;"	e	enum:TeDBRelationType
TeRINoCascadeDeletion	kernel/TeDataTypes.h	/^{	TeNoRelation, TeRINoCascadeDeletion, TeRICascadeDeletion };$/;"	e	enum:TeDBRelationType
TeRTREE	kernel/TeDatabase.h	/^enum TeSpatialIndexType {TeRTREE, TeQUADTREE};$/;"	e	enum:TeSpatialIndexType
TeRTree	kernel/TeRTree.h	/^		TeRTree(const TeBox& mbr)$/;"	f	class:TeSAM::TeRTree
TeRTree	kernel/TeRTree.h	/^class TeRTree$/;"	c	namespace:TeSAM
TeRTreeBranch	kernel/TeRTree.h	/^		struct TeRTreeBranch$/;"	s	class:TeSAM::TeRTreeNode
TeRTreeBranch	kernel/TeRTree.h	/^		typedef typename TeRTreeNodeType::TeRTreeBranch TeRTreeBranch;$/;"	t	class:TeSAM::TeRTree
TeRTreeNode	kernel/TeRTree.h	/^		TeRTreeNode()$/;"	f	class:TeSAM::TeRTreeNode
TeRTreeNode	kernel/TeRTree.h	/^class TeRTreeNode$/;"	c	namespace:TeSAM
TeRTreeNodeType	kernel/TeRTree.h	/^		typedef TeRTreeNode<DATATYPE, MAXNODES, MINNODES> TeRTreeNodeType;$/;"	t	class:TeSAM::TeRTree
TeRaster	kernel/TeRaster.cpp	/^TeRaster::TeRaster( TeRasterParams& pars ) $/;"	f	class:TeRaster
TeRaster	kernel/TeRaster.cpp	/^TeRaster::TeRaster( const string& filename, const char& mode ) $/;"	f	class:TeRaster
TeRaster	kernel/TeRaster.cpp	/^TeRaster::TeRaster(int ncols, int nlines, int nbands, TeDataType elemType)$/;"	f	class:TeRaster
TeRaster	kernel/TeRaster.h	/^	  TeRaster( const TeRaster& ) : TeGeometry()$/;"	f	class:TeRaster
TeRaster	kernel/TeRaster.h	/^	TeRaster() : decoder_(0) {}$/;"	f	class:TeRaster
TeRaster	kernel/TeRaster.h	/^class TL_DLL TeRaster : public TeGeometry$/;"	c
TeRaster2Geotiff	image_processing/TePDIUtils.cpp	/^  bool TeRaster2Geotiff($/;"	f	namespace:TePDIUtils
TeRaster2Jpeg	image_processing/TePDIUtils.cpp	/^  bool TeRaster2Jpeg($/;"	f	namespace:TePDIUtils
TeRaster2RGBGeotiff	image_processing/TePDIUtils.cpp	/^  bool TeRaster2RGBGeotiff($/;"	f	namespace:TePDIUtils
TeRasterClipping	kernel/TeRaster.cpp	/^TeRasterClipping(TeRaster* whole, TePolygonSet& mask, TeProjection* geomProj, const string& clipName, double background, const string& decId)$/;"	f
TeRasterCompressionMode	kernel/TeRasterParams.h	/^	enum TeRasterCompressionMode$/;"	g	class:TeRasterParams
TeRasterInterLeavingMode	kernel/TeRasterParams.h	/^	enum TeRasterInterLeavingMode$/;"	g	class:TeRasterParams
TeRasterInterpolate	functions/TeInterpolation.cpp	/^bool TeRasterInterpolate(TeTheme* inputTheme, const string& inputAttrTableName, const string& sampleColumnName,$/;"	f
TeRasterMemManager	kernel/TeRasterMemManager.cpp	/^TeRasterMemManager::TeRasterMemManager()$/;"	f	class:TeRasterMemManager
TeRasterMemManager	kernel/TeRasterMemManager.h	/^      TeRasterMemManager( const TeRasterMemManager& ) {};$/;"	f	class:TeRasterMemManager
TeRasterMemManager	kernel/TeRasterMemManager.h	/^  class TL_DLL TeRasterMemManager {$/;"	c
TeRasterParams	kernel/TeRasterParams.cpp	/^TeRasterParams::TeRasterParams(const TeRasterParams& other)$/;"	f	class:TeRasterParams
TeRasterParams	kernel/TeRasterParams.h	/^	TeRasterParams () :$/;"	f	class:TeRasterParams
TeRasterParams	kernel/TeRasterParams.h	/^class TL_DLL TeRasterParams$/;"	c
TeRasterPhotometricInterpretation	kernel/TeRasterParams.h	/^	enum TeRasterPhotometricInterpretation$/;"	g	class:TeRasterParams
TeRasterRemap	kernel/TeRasterRemap.cpp	/^TeRasterRemap::TeRasterRemap(TeRaster* rasterIn, TeRaster* rasterOut, $/;"	f	class:TeRasterRemap
TeRasterRemap	kernel/TeRasterRemap.h	/^class TL_DLL TeRasterRemap$/;"	c
TeRasterSlicing	kernel/TeDataTypes.h	/^  TeRasterSlicing = 4, TeCustomGroup = 5, TeNoGrouping = 100 };$/;"	e	enum:TeGroupingMode
TeRasterStatus	kernel/TeRasterParams.h	/^	enum TeRasterStatus$/;"	g	class:TeRasterParams
TeRasterTilingType	kernel/TeRasterParams.h	/^	enum TeRasterTilingType$/;"	g	class:TeRasterParams
TeRasterTransfFunctions	kernel/TeRasterTransform.h	/^	enum TeRasterTransfFunctions$/;"	g	class:TeRasterTransform
TeRasterTransform	kernel/TeRasterTransform.h	/^	TeRasterTransform(TeRaster* rIn=0, TeRaster* rOut=0):  $/;"	f	class:TeRasterTransform
TeRasterTransform	kernel/TeRasterTransform.h	/^class TL_DLL TeRasterTransform$/;"	c
TeRasterVisual	kernel/TeVisual.h	/^typedef TeRasterTransform TeRasterVisual;$/;"	t
TeReadBNAAttributeList	functions/TeImportBNA.cpp	/^bool TeReadBNAAttributeList(const string& bnaFileName, TeAttributeList& attList)$/;"	f
TeReadBNAObjects	functions/TeImportBNA.cpp	/^bool TeReadBNAObjects(TeAsciiFile& bnaFile, TeTable& attTable, TePointSet& ptSet,$/;"	f
TeReadCSVFile	functions/TeImportCSV.cpp	/^inline bool TeReadCSVFile(const string& csvFileName, TeTable& attrTable, TeDatabase* db, TeLayer* layer, $/;"	f
TeReadColorRampTextFile	utils/TeColorUtils.cpp	/^unsigned int  TeReadColorRampTextFile(const string& fileName, map<string,string>& colorRamps)$/;"	f
TeReadDBFAttributeList	drivers/shapelib/TeDriverSHPDBF.cpp	/^bool TeReadDBFAttributeList ( const string& dbfFileName, TeAttributeList& attList )$/;"	f
TeReadDBFAttributeList	drivers/shapelib/TeImportDBF.cpp	/^bool TeReadDBFAttributeList ( const string& dbfFileName, TeAttributeList& attList )$/;"	f
TeReadDBFAttributes	drivers/shapelib/TeDriverSHPDBF.cpp	/^bool TeReadDBFAttributes (const string& dbfFileName, TeTable& table, $/;"	f
TeReadDBFAttributes	drivers/shapelib/TeImportDBF.cpp	/^bool TeReadDBFAttributes (const string& dbfFileName, TeTable& table, $/;"	f
TeReadGeoAttributeList	functions/TeImportGeo.cpp	/^TeReadGeoAttributeList(const string& geoFileName,TeAttributeList& attList, string& labelName )$/;"	f
TeReadMIFAttributeList	functions/TeImportMIF.cpp	/^TeReadMIFAttributeList ( const string& mifFileName, TeAttributeList& attList )$/;"	f
TeReadMIFAttributes	functions/TeImportMIF.cpp	/^bool TeReadMIFAttributes(TeAsciiFile& midFile, TeTable& attTable, $/;"	f
TeReadMIFProjection	functions/TeImportMIF.cpp	/^TeReadMIFProjection(const string& mifFileName)$/;"	f
TeReadMIFSeparator	functions/TeImportMIF.cpp	/^TeReadMIFSeparator(const string& mifFileName)$/;"	f
TeReadSHPAttributes	drivers/shapelib/TeDriverSHPDBF.cpp	/^void TeReadSHPAttributes (const string& dbfFileName, TeTable& table)$/;"	f
TeReadSHPAttributes	drivers/shapelib/TeImportDBF.cpp	/^void TeReadSHPAttributes (const string& dbfFileName, TeTable& table)$/;"	f
TeReadyToRead	kernel/TeRasterParams.h	/^	{ TeNotReady, TeReadyToRead, TeReadyToWrite };$/;"	e	enum:TeRasterParams::TeRasterStatus
TeReadyToWrite	kernel/TeRasterParams.h	/^	{ TeNotReady, TeReadyToRead, TeReadyToWrite };$/;"	e	enum:TeRasterParams::TeRasterStatus
TeRedBlackNode	kernel/TeRedBlackTree.h	/^			TeRedBlackNode(T& d, const TeRBNodeColor& color = TeREDNODE)$/;"	f	class:TeREDBLACK::TeRedBlackNode
TeRedBlackNode	kernel/TeRedBlackTree.h	/^			TeRedBlackNode(const TeRBNodeColor& color = TeREDNODE)$/;"	f	class:TeREDBLACK::TeRedBlackNode
TeRedBlackNode	kernel/TeRedBlackTree.h	/^	class TeRedBlackNode$/;"	c	namespace:TeREDBLACK
TeRedBlackNodeData	kernel/TeRedBlackTree.h	/^			typedef T TeRedBlackNodeData;$/;"	t	class:TeREDBLACK::TeRedBlackNode
TeRedBlackNodeData	kernel/TeRedBlackTree.h	/^			typedef typename NODE::TeRedBlackNodeData TeRedBlackNodeData;$/;"	t	class:TeREDBLACK::TeRBTree
TeRedBlue	kernel/TeDataTypes.h	/^enum TeIntersectorAlgorithm { TeBentleyOttman, TeRedBlue, TeTrivial };$/;"	e	enum:TeIntersectorAlgorithm
TeRelDifference	stat/TeKernelParams.h	/^{TeKRatio, TeKLogRatio, TeAbsDifference, TeRelDifference, TeAbsSum, TeRelSum};$/;"	e	enum:TeKernelCombinationType
TeRelSum	stat/TeKernelParams.h	/^{TeKRatio, TeKLogRatio, TeAbsDifference, TeRelDifference, TeAbsSum, TeRelSum};$/;"	e	enum:TeKernelCombinationType
TeRelation	image_processing/TePDIUtils.cpp	/^  short TeRelation( const TeCoord2D& c, const TePDITileIndexer& indexer )$/;"	f	namespace:TePDIUtils
TeRelation	kernel/TeGeometryAlgorithms.cpp	/^short TeRelation(const TeCoord2D& c, const TeLine2D& l)$/;"	f
TeRelation	kernel/TeGeometryAlgorithms.cpp	/^short TeRelation(const TeCoord2D& c, const TeLinearRing& r)$/;"	f
TeRelation	kernel/TeGeometryAlgorithms.cpp	/^short TeRelation(const TeCoord2D& c, const TePolygon& pol)$/;"	f
TeRelation	kernel/TeGeometryAlgorithms.cpp	/^short TeRelation(const TeCoord2D& c, const TePolygonSet& pSet)$/;"	f
TeRelation	kernel/TeGeometryAlgorithms.cpp	/^short TeRelation(const TeLine2D& lRed, const TeLine2D& lBlue, const short& relation)$/;"	f
TeRelation	kernel/TeGeometryAlgorithms.cpp	/^short TeRelation(const TeLine2D& line, const TePolygon& pol)$/;"	f
TeRelation	kernel/TeGeometryAlgorithms.cpp	/^short TeRelation(const TePoint& p, const TePolygon& pol)$/;"	f
TeRelation	kernel/TeGeometryAlgorithms.cpp	/^short TeRelation(const TePolygon& pRed, const TePolygon& pBlue)$/;"	f
TeRemapBox	kernel/TeVectorRemap.cpp	/^TeBox TeRemapBox (const TeBox& box, TeProjection* projFrom, TeProjection* projTo)$/;"	f
TeRemapBoxGeodetic2PC	kernel/TeVectorRemap.cpp	/^TeBox TeRemapBoxGeodetic2PC (const TeBox& box, TeProjection* proj)$/;"	f
TeRemapBoxPC2Geodetic	kernel/TeVectorRemap.cpp	/^TeBox TeRemapBoxPC2Geodetic (const TeBox& box, TeProjection* proj)$/;"	f
TeRemoveDuplicatedCoordinates	kernel/TeGeometryAlgorithms.h	/^inline void TeRemoveDuplicatedCoordinates(TeLine2D& l)$/;"	f
TeRemoveDuplicatedCoordinates	kernel/TeGeometryAlgorithms.h	/^inline void TeRemoveDuplicatedCoordinates(TePolygon& p)$/;"	f
TeRemoveNonAsciiChar	drivers/shapelib/TeDriverSHPDBF.cpp	/^void TeRemoveNonAsciiChar(std::string& text)$/;"	f
TeRemoveOpositeBoundaryFragments	kernel/TeOverlayUtils.cpp	/^void TeOVERLAY::TeRemoveOpositeBoundaryFragments(TeLineIndex& fragmentsIndex)$/;"	f	class:TeOVERLAY
TeRemoveRightDecimalZeroes	kernel/TeUtils.cpp	/^void TeRemoveRightDecimalZeroes( const std::string& strIn,$/;"	f
TeRemoveSameBoundaryFragments	kernel/TeOverlayUtils.cpp	/^void TeOVERLAY::TeRemoveSameBoundaryFragments(TeLineIndex& fragmentsIndex)$/;"	f	class:TeOVERLAY
TeRemoveSpecialChars	kernel/TeUtils.cpp	/^TeRemoveSpecialChars ( const std::string& str)$/;"	f
TeRenameInvalidFieldName	kernel/TeUtils.cpp	/^bool TeRenameInvalidFieldName(TeAttributeList &attr)$/;"	f
TeReplaceSpecialChars	kernel/TeUtils.cpp	/^std::string TeReplaceSpecialChars ( const std::string& str)$/;"	f
TeReplaceSpecialChars	kernel/TeUtils.cpp	/^std::string TeReplaceSpecialChars ( const std::string& str, bool& changed)$/;"	f
TeReplaceTextFileSubString	kernel/TeUtils.cpp	/^bool TeReplaceTextFileSubString( const std::string& inputFileName,$/;"	f
TeRepresPointerVector	kernel/TeRepresentation.h	/^typedef std::vector<TeRepresentation* > TeRepresPointerVector;$/;"	t
TeRepresPointerVectorIterator	kernel/TeRepresentation.h	/^typedef std::vector<TeRepresentation* >::iterator TeRepresPointerVectorIterator;$/;"	t
TeRepres_eq	kernel/TeRepresentation.h	/^	explicit TeRepres_eq(TeGeomRep rr): r(rr) {}$/;"	f	class:TeRepres_eq
TeRepres_eq	kernel/TeRepresentation.h	/^class TL_DLL TeRepres_eq : public unary_function<TeRepresentation*,bool>$/;"	c
TeRepresentation	kernel/TeRepresentation.h	/^	TeRepresentation() :$/;"	f	struct:TeRepresentation
TeRepresentation	kernel/TeRepresentation.h	/^struct TL_DLL TeRepresentation$/;"	s
TeRetrieveCoverageBox	kernel/TeCoverageUtils.cpp	/^TeRetrieveCoverageBox(TeLayer* layer, const std::string& coverageId)$/;"	f
TeRetrieveCoverageIds	kernel/TeCoverageUtils.cpp	/^TeRetrieveCoverageIds(TeLayer* layer, std::vector<std::string>& coverageIds)$/;"	f
TeRetrieveCoverageLayerTable	kernel/TeCoverageUtils.cpp	/^TeRetrieveCoverageLayerTable(TeLayer* layer, const std::string& coverageId)$/;"	f
TeRetrieveCoverageLayerTables	kernel/TeCoverageUtils.cpp	/^TeRetrieveCoverageLayerTables(TeLayer* layer, std::vector<std::string>& coverageLayerTables)$/;"	f
TeRetrieveCoverageNumElements	kernel/TeCoverageUtils.cpp	/^TeRetrieveCoverageNumElements(TeLayer* layer, const std::string& coverageId)$/;"	f
TeRetrieveCoverageTable	kernel/TeCoverageUtils.cpp	/^TeRetrieveCoverageTable(TeLayer* layer, const std::string& coverageId)$/;"	f
TeRetrieveDimensions	kernel/TeCoverageUtils.cpp	/^TeRetrieveDimensions(TeLayer* layer, const std::string& coverageId, std::vector<TeCoverageDimension>& dimensions)$/;"	f
TeRetrieveLayer	kernel/TeCoverageUtils.cpp	/^TeRetrieveLayer(TeDatabase* database, const int layerId)$/;"	f
TeReverseLine	kernel/TeGeometryAlgorithms.h	/^inline void TeReverseLine(TeLine2D& lin)$/;"	f
TeRound	kernel/TeUtils.h	/^    inline int TeRound(double val)$/;"	f
TeRoundD	kernel/TeUtils.cpp	/^TeRoundD(double val, int precision)$/;"	f
TeRoundRasterIndex	kernel/TeUtils.h	/^    inline int TeRoundRasterIndex(double val)$/;"	f
TeRtreeGetFragments	kernel/TeOverlayUtils.cpp	/^void TeOVERLAY::TeRtreeGetFragments(const TePolygonSet& bluePolygons, TeINTERSECTOR2::TeSegmentRTree& blueTree, TeLineSet& redFragments, const short& locationFragments, short& mask, TeLineIndex& redFragmentsIndex, vector<TeLinearRing>& rings)$/;"	f	class:TeOVERLAY
TeRtreeGetFragments	kernel/TeOverlayUtils.cpp	/^void TeOVERLAY::TeRtreeGetFragments(const TePolygonSet& polygons, TeINTERSECTOR2::TeSegmentRTree& tree, TeLineSet& fragments, vector<pair<unsigned int, unsigned int> >& fragmentsIds, const short& locationFragments, short& mask, TeLineIndex& fragmentsIndex, vector<TeLinearRing>& rings)$/;"	f	class:TeOVERLAY
TeRtreeRemoveFragments	kernel/TeOverlayUtils.cpp	/^void TeOVERLAY::TeRtreeRemoveFragments(const TePolygonSet& polygons, TeINTERSECTOR2::TeSegmentRTree& tree,$/;"	f	class:TeOVERLAY
TeSAM	kernel/TeGridIndex.h	/^namespace TeSAM$/;"	n
TeSAM	kernel/TeKdTree.h	/^namespace TeSAM$/;"	n
TeSAM	kernel/TeRTree.h	/^namespace TeSAM$/;"	n
TeSAMPLES	kernel/TeDataTypes.h	/^{	TePOLYGONS = 1, TeLINES = 2, TePOINTS = 4, TeSAMPLES = 8, TeCONTOURS = 16,$/;"	e	enum:TeGeomRep
TeSDOCOLLECTION	drivers/Oracle/TeOracleSpatial.h	/^{ TeSDOUNKNOWN, TeSDOPOINT, TeSDOLINE, TeSDOPOLYGON,TeSDOCOLLECTION, $/;"	e	enum:TeSDOGType
TeSDOGType	drivers/Oracle/TeOracleSpatial.h	/^enum TeSDOGType  $/;"	g
TeSDOLINE	drivers/Oracle/TeOracleSpatial.h	/^{ TeSDOUNKNOWN, TeSDOPOINT, TeSDOLINE, TeSDOPOLYGON,TeSDOCOLLECTION, $/;"	e	enum:TeSDOGType
TeSDOMULTILINE	drivers/Oracle/TeOracleSpatial.h	/^  TeSDOMULTIPOINT, TeSDOMULTILINE, TeSDOMULTIPOLYGON};$/;"	e	enum:TeSDOGType
TeSDOMULTIPOINT	drivers/Oracle/TeOracleSpatial.h	/^  TeSDOMULTIPOINT, TeSDOMULTILINE, TeSDOMULTIPOLYGON};$/;"	e	enum:TeSDOGType
TeSDOMULTIPOLYGON	drivers/Oracle/TeOracleSpatial.h	/^  TeSDOMULTIPOINT, TeSDOMULTILINE, TeSDOMULTIPOLYGON};$/;"	e	enum:TeSDOGType
TeSDOPOINT	drivers/Oracle/TeOracleSpatial.h	/^{ TeSDOUNKNOWN, TeSDOPOINT, TeSDOLINE, TeSDOPOLYGON,TeSDOCOLLECTION, $/;"	e	enum:TeSDOGType
TeSDOPOLYGON	drivers/Oracle/TeOracleSpatial.h	/^{ TeSDOUNKNOWN, TeSDOPOINT, TeSDOLINE, TeSDOPOLYGON,TeSDOCOLLECTION, $/;"	e	enum:TeSDOGType
TeSDOUNKNOWN	drivers/Oracle/TeOracleSpatial.h	/^{ TeSDOUNKNOWN, TeSDOPOINT, TeSDOLINE, TeSDOPOLYGON,TeSDOCOLLECTION, $/;"	e	enum:TeSDOGType
TeSEASON	kernel/TeDataTypes.h	/^					TeDAYOFWEEK, TeDAYOFMONTH, TeDAYOFYEAR, TeMONTHOFYEAR, TeSEASON, TeWEEKOFYEAR, $/;"	e	enum:TeChronon
TeSECOND	kernel/TeDataTypes.h	/^enum TeChronon {	TeNOCHRONON, TeSECOND, TeMINUTE, TeHOUR, TeDAY, TeMONTH, TeYEAR,$/;"	e	enum:TeChronon
TeSECONDOFMINUTE	kernel/TeDataTypes.h	/^					TeHOUROFDAY, TeMINUTEOFHOUR, TeSECONDOFMINUTE };$/;"	e	enum:TeChronon
TeSERVERSIDE	kernel/TeDatabase.h	/^enum TeCursorLocation { TeCLIENTESIDE, TeSERVERSIDE };$/;"	e	enum:TeCursorLocation
TeSEquals	kernel/TeOverlayUtils.cpp	/^inline bool TeSEquals(const TeCoord2D& c1, const TeCoord2D& c2)$/;"	f
TeSFSTHEME	kernel/TeViewNode.h	/^{ TeTHEME=0, TeTREE=1, TeEXTERNALTHEME=2, TeFILETHEME=3, TeSFSTHEME=4 }; $/;"	e	enum:TeViewNodeType
TeSFSTheme	kernel/TeSFSTheme.cpp	/^TeSFSTheme::TeSFSTheme(const std::string& name, TeViewNode* parent, int view, int id)$/;"	f	class:TeSFSTheme
TeSFSTheme	kernel/TeSFSTheme.h	/^class TL_DLL TeSFSTheme : public TeAbstractTheme$/;"	c
TeSFSThemeFactory	kernel/TeSFSTheme.h	/^	TeSFSThemeFactory() : TeViewNodeFactory((int)TeSFSTHEME)$/;"	f	class:TeSFSThemeFactory
TeSFSThemeFactory	kernel/TeSFSTheme.h	/^class TL_DLL TeSFSThemeFactory : public TeViewNodeFactory$/;"	c
TeSFragment	kernel/TeOverlayUtils.cpp	/^	TeSFragment()$/;"	f	struct:TeSFragment
TeSFragment	kernel/TeOverlayUtils.cpp	/^	TeSFragment(const unsigned int &initialIndex, const TeCoord2D &coord)$/;"	f	struct:TeSFragment
TeSFragment	kernel/TeOverlayUtils.cpp	/^struct TeSFragment$/;"	s	file:
TeSHAPEFILE	kernel/TeDataTypes.h	/^	TeRASTERFILE = 1024, TeGEOMETRYNONE = 2048, TeSHAPEFILE = 4096, TeCOVERAGE = 8192};$/;"	e	enum:TeGeomRep
TeSHORT	kernel/TeDataTypes.h	/^{	TeBIT, TeUNSIGNEDCHAR, TeCHAR, TeUNSIGNEDSHORT, TeSHORT, TeINTEGER, TeUNSIGNEDLONG, TeLONG, TeFLOAT, TeDOUBLE };$/;"	e	enum:TeDataType
TeSHPDriverFactory	drivers/shapelib/TeSHPDriverFactory.cpp	/^TeSHPDriverFactory::TeSHPDriverFactory() :$/;"	f	class:TeSHPDriverFactory
TeSHPDriverFactory	drivers/shapelib/TeSHPDriverFactory.h	/^class SHP_DLL TeSHPDriverFactory : public TeGDriverFactory $/;"	c
TeSHPPointDecode	drivers/shapelib/TeDriverSHPDBF.cpp	/^void TeSHPPointDecode(SHPObject* psShape, TePointSet& points, string& objid)$/;"	f
TeSHPPointDecode	drivers/shapelib/TeImportSHP.cpp	/^TeSHPPointDecode( TeLayer* layer, SHPHandle hSHP, vector<string>& indexVect, unsigned int chunckSize  )$/;"	f
TeSHPPointDecode	drivers/shapelib/TeImportSHP.cpp	/^void TeSHPPointDecode(SHPObject* psShape, TePointSet& points, string& objid)$/;"	f
TeSHPPolyLineDecode	drivers/shapelib/TeDriverSHPDBF.cpp	/^void TeSHPPolyLineDecode(SHPObject* psShape, TeLineSet& lines, string& objid)$/;"	f
TeSHPPolyLineDecode	drivers/shapelib/TeImportSHP.cpp	/^TeSHPPolyLineDecode ( TeLayer*layer, SHPHandle hSHP, vector<string>& indexVect, unsigned int chunckSize )$/;"	f
TeSHPPolyLineDecode	drivers/shapelib/TeImportSHP.cpp	/^void TeSHPPolyLineDecode(SHPObject* psShape, TeLineSet& lines, string& objid)$/;"	f
TeSHPPolygonDecode	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeSHPPolygonDecode(SHPObject* psShape, TePolygonSet& polys, string& objid)$/;"	f
TeSHPPolygonDecode	drivers/shapelib/TeImportSHP.cpp	/^TeSHPPolygonDecode ( TeLayer* layer, SHPHandle hSHP, vector<string>& indexVect, unsigned int chunckSize )$/;"	f
TeSHPPolygonDecode	drivers/shapelib/TeImportSHP.cpp	/^TeSHPPolygonDecode(SHPObject* psShape, TePolygonSet& polys, string& objid)$/;"	f
TeSIP	kernel/TeOverlayUtils.cpp	/^	TeSIP() $/;"	f	struct:TeSIP
TeSIP	kernel/TeOverlayUtils.cpp	/^	TeSIP(const TeCoord2D& coord)$/;"	f	struct:TeSIP
TeSIP	kernel/TeOverlayUtils.cpp	/^struct TeSIP$/;"	s	file:
TeSKEWNESS	kernel/TeDataTypes.h	/^	TeMEAN, TeVARIANCE, TeSKEWNESS, TeKURTOSIS, TeAMPLITUDE, TeMEDIAN, TeVARCOEFF, TeMODE};$/;"	e	enum:TeStatisticType
TeSMergeFragments	kernel/TeOverlayUtils.cpp	/^inline bool TeSMergeFragments(vector<TeSFragment> &fragments, vector<TeLinearRing>& rings)$/;"	f
TeSOUTH_HEM	kernel/TeProjection.h	/^{ TeNORTH_HEM, TeSOUTH_HEM };$/;"	e	enum:TeHemisphere
TeSPRCadastral	kernel/TeDataTypes.h	/^{   TeSPRCadastral=0, TeSPRNetwork=1, TeSPRThematic=2, TeSPRMNT=3 };$/;"	e	enum:TeSpringModels
TeSPRFile	functions/TeSPRFile.cpp	/^TeSPRFile::TeSPRFile ( const string& name, const char* mode, char separator): 	$/;"	f	class:TeSPRFile
TeSPRFile	functions/TeSPRFile.h	/^class TLFUNCTIONS_DLL TeSPRFile : public TeAsciiFile$/;"	c
TeSPRMNT	kernel/TeDataTypes.h	/^{   TeSPRCadastral=0, TeSPRNetwork=1, TeSPRThematic=2, TeSPRMNT=3 };$/;"	e	enum:TeSpringModels
TeSPRNetwork	kernel/TeDataTypes.h	/^{   TeSPRCadastral=0, TeSPRNetwork=1, TeSPRThematic=2, TeSPRMNT=3 };$/;"	e	enum:TeSpringModels
TeSPRThematic	kernel/TeDataTypes.h	/^{   TeSPRCadastral=0, TeSPRNetwork=1, TeSPRThematic=2, TeSPRMNT=3 };$/;"	e	enum:TeSpringModels
TeSQLite	drivers/SQLite/TeSQLite.cpp	/^TeSQLite::TeSQLite() $/;"	f	class:TeSQLite
TeSQLite	drivers/SQLite/TeSQLite.h	/^class TLSQLITE_DLL TeSQLite : public TeDatabase$/;"	c
TeSQLiteFactory	drivers/SQLite/TeSQLite.h	/^    TeSQLiteFactory() : TeDatabaseFactory( $/;"	f	class:TeSQLiteFactory
TeSQLiteFactory	drivers/SQLite/TeSQLite.h	/^class TLSQLITE_DLL TeSQLiteFactory : public TeDatabaseFactory$/;"	c
TeSQLiteFactory_instance	drivers/SQLite/TeSQLite.h	/^	static TeSQLiteFactory TeSQLiteFactory_instance;$/;"	m	namespace:__anon38
TeSQLitePortal	drivers/SQLite/TeSQLite.cpp	/^TeSQLitePortal::TeSQLitePortal() : TeDatabasePortal()$/;"	f	class:TeSQLitePortal
TeSQLitePortal	drivers/SQLite/TeSQLite.cpp	/^TeSQLitePortal::TeSQLitePortal(TeDatabase* pDatabase) : TeDatabasePortal()$/;"	f	class:TeSQLitePortal
TeSQLitePortal	drivers/SQLite/TeSQLite.h	/^class TLSQLITE_DLL TeSQLitePortal : public TeDatabasePortal$/;"	c
TeSTANDARDDEVIATION	kernel/TeDataTypes.h	/^{	TeNOSTATISTIC, TeSUM, TeMAXVALUE, TeMINVALUE, TeCOUNT, TeVALIDCOUNT, TeSTANDARDDEVIATION, TeKERNEL,  $/;"	e	enum:TeStatisticType
TeSTDevStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeSTDevStrategy (double dummyV = 0.0, double defaultV = 0.0) {this->defaultValue_.value_ = Te2String (defaultV); dummy = dummyV; }$/;"	f	class:TeSTDevStrategy
TeSTDevStrategy	kernel/TeComputeAttributeStrategies.h	/^class TeSTDevStrategy: public TeComputeAttrStrategy<Iterator>  $/;"	c
TeSTElement	kernel/TeSTInstance.h	/^typedef vector<TeSTInstance>  TeSTElement;$/;"	t
TeSTElementSet	kernel/TeSTElementSet.h	/^	TeSTElementSet() : TeBaseSTInstanceSet<TeMultiGeometry, TeTimeInterval, TeSTInstance>()$/;"	f	class:TeSTElementSet
TeSTElementSet	kernel/TeSTElementSet.h	/^	TeSTElementSet(TeLayer* layer, TeAttributeList attList = TeAttributeList()) : $/;"	f	class:TeSTElementSet
TeSTElementSet	kernel/TeSTElementSet.h	/^	TeSTElementSet(TeTheme* theme, TeAttributeList attList = TeAttributeList()) : $/;"	f	class:TeSTElementSet
TeSTElementSet	kernel/TeSTElementSet.h	/^	TeSTElementSet(const TeBox& box, const TeAttributeList& attrList) :$/;"	f	class:TeSTElementSet
TeSTElementSet	kernel/TeSTElementSet.h	/^class TL_DLL TeSTElementSet  : public TeBaseSTInstanceSet<TeMultiGeometry, TeTimeInterval, TeSTInstance>$/;"	c
TeSTEvent	kernel/TeSTEvent.h	/^	TeSTEvent() : TeBaseSTInstance<TePoint, long>()$/;"	f	class:TeSTEvent
TeSTEvent	kernel/TeSTEvent.h	/^	TeSTEvent(const string& objId, const TePoint& point, const long& time) :$/;"	f	class:TeSTEvent
TeSTEvent	kernel/TeSTEvent.h	/^	TeSTEvent(const string& objId, const TePoint& point, const vector<string>& attrValues, $/;"	f	class:TeSTEvent
TeSTEvent	kernel/TeSTEvent.h	/^class TL_DLL TeSTEvent : public TeBaseSTInstance<TePoint, long>$/;"	c
TeSTEventSet	kernel/TeSTEvent.cpp	/^TeSTEventSet::TeSTEventSet(TeTheme* theme, const TeAttributeList& attrList) : $/;"	f	class:TeSTEventSet
TeSTEventSet	kernel/TeSTEvent.h	/^class TL_DLL TeSTEventSet : public TeBaseSTInstanceSet<TePoint, long, TeSTEvent>$/;"	c
TeSTGeoDataDriver	kernel/TeSTGeoDataDriver.cpp	/^TeSTGeoDataDriver::TeSTGeoDataDriver()$/;"	f	class:TeSTGeoDataDriver
TeSTGeoDataDriver	kernel/TeSTGeoDataDriver.h	/^class TL_DLL TeSTGeoDataDriver : public TeGeoDataDriver$/;"	c
TeSTGeoDataSet	kernel/TeSTGeoDataSet.cpp	/^TeSTGeoDataSet::TeSTGeoDataSet(TeSTElementSet* dataSet)$/;"	f	class:TeSTGeoDataSet
TeSTGeoDataSet	kernel/TeSTGeoDataSet.cpp	/^TeSTGeoDataSet::TeSTGeoDataSet(TeSTElementSet* dataSet, std::vector<int>& vecFilter)$/;"	f	class:TeSTGeoDataSet
TeSTGeoDataSet	kernel/TeSTGeoDataSet.h	/^class TL_DLL TeSTGeoDataSet : public TeGeoDataSet$/;"	c
TeSTInstance	kernel/TeSTInstance.cpp	/^TeSTInstance::TeSTInstance (const string& object_id, TeProperty& prop) :$/;"	f	class:TeSTInstance
TeSTInstance	kernel/TeSTInstance.h	/^	TeSTInstance (const string& object_id, const TeMultiGeometry& geometries, $/;"	f	class:TeSTInstance
TeSTInstance	kernel/TeSTInstance.h	/^	TeSTInstance (const string& object_id, vector<string>& prop, TeAttributeList* attList = 0, const int& s = -1) : $/;"	f	class:TeSTInstance
TeSTInstance	kernel/TeSTInstance.h	/^	TeSTInstance (const string& object_id, vector<string>& prop, TeAttributeList* attList, $/;"	f	class:TeSTInstance
TeSTInstance	kernel/TeSTInstance.h	/^	TeSTInstance() : $/;"	f	class:TeSTInstance
TeSTInstance	kernel/TeSTInstance.h	/^class TL_DLL TeSTInstance : public TeBaseSTInstance<TeMultiGeometry, TeTimeInterval>$/;"	c
TeSTOSetBuildDB	kernel/TeSTEFunctionsDB.h	/^bool TeSTOSetBuildDB(elementSet* stoset, TeGroupingAttr& groupAttr, bool loadGeometries)$/;"	f
TeSTOSetBuildDB	kernel/TeSTEFunctionsDB.h	/^bool TeSTOSetBuildDB(elementSet* stoset, bool loadGeometries, bool loadAllAttributes, vector<string> attrNames)$/;"	f
TeSTOSetBuildSHP	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeSTOSetBuildSHP(TeSTElementSet& stoset, const string& fileName)$/;"	f
TeSTOSetBuildSHP	drivers/shapelib/TeSTEFunctionsSHP.cpp	/^TeSTOSetBuildSHP(TeSTElementSet& stoset, const string& fileName)$/;"	f
TeSTRING	kernel/TeDataTypes.h	/^{TeSTRING, TeREAL, TeINT, TeDATETIME, TeBLOB, TeOBJECT, TeCHARACTER, TeUNKNOWN, TeUNSIGNEDINT,$/;"	e	enum:TeAttrDataType
TeSTStatInstance	stat/TeStatDataStructures.cpp	/^TeSTStatInstance::TeSTStatInstance(TeSTInstance& other, int nd, int ad): TeSTInstance(other)$/;"	f	class:TeSTStatInstance
TeSTStatInstance	stat/TeStatDataStructures.cpp	/^TeSTStatInstance::TeSTStatInstance(const TeSTStatInstance& other) : TeSTInstance(other) $/;"	f	class:TeSTStatInstance
TeSTStatInstance	stat/TeStatDataStructures.cpp	/^TeSTStatInstance::TeSTStatInstance(int nDlbProp) : TeSTInstance() $/;"	f	class:TeSTStatInstance
TeSTStatInstance	stat/TeStatDataStructures.h	/^class STAT_DLL TeSTStatInstance : public  TeSTInstance$/;"	c
TeSTStatInstanceSet	stat/TeStatDataStructures.h	/^    TeSTStatInstanceSet() $/;"	f	class:TeSTStatInstanceSet
TeSTStatInstanceSet	stat/TeStatDataStructures.h	/^    TeSTStatInstanceSet(const TeSTStatInstanceSet& other)$/;"	f	class:TeSTStatInstanceSet
TeSTStatInstanceSet	stat/TeStatDataStructures.h	/^class STAT_DLL TeSTStatInstanceSet  $/;"	c
TeSUM	kernel/TeDataTypes.h	/^{	TeNOSTATISTIC, TeSUM, TeMAXVALUE, TeMINVALUE, TeCOUNT, TeVALIDCOUNT, TeSTANDARDDEVIATION, TeKERNEL,  $/;"	e	enum:TeStatisticType
TeSafeIntersections	kernel/TeIntersector.cpp	/^bool TeINTERSECTOR2::TeSafeIntersections(const TeLine2D& redLine, const TeLine2D& blueLine, TeVectorBoundaryIP& report, const unsigned int& redObjId, const unsigned int& blueObjId)$/;"	f	class:TeINTERSECTOR2
TeSafeIntersections	kernel/TeIntersector.cpp	/^bool TeINTERSECTOR2::TeSafeIntersections(const TePolygonSet& redPols, const TePolygonSet& bluePols, TeVectorBoundaryIP& report)$/;"	f	class:TeINTERSECTOR2
TeSafeIntersectionsGrid	kernel/TeGridIndex.h	/^TL_DLL inline bool TeSafeIntersectionsGrid(const TeLine2D& redLine, const TeLine2D& blueLine, TeINTERSECTOR2::TeVectorBoundaryIP& report, const unsigned int& redObjId = 0, const unsigned int& blueObjId = 0)$/;"	f	namespace:TeSAM
TeSample	kernel/TeGeometry.h	/^	TeSample ( const TeCoord2D& location, double measure = 0.  ):$/;"	f	class:TeSample
TeSample	kernel/TeGeometry.h	/^class TL_DLL TeSample: public TeGeomSingle<TeCoord2D>, public TeMeasure$/;"	c
TeSampleSet	kernel/TeGeometry.h	/^class TL_DLL TeSampleSet: public TeGeomComposite<TeSample>$/;"	c
TeSatelliteProjection	kernel/TeProjection.h	/^	TeSatelliteProjection(const TeDatum& datum, double offx, double offy,  $/;"	f	class:TeSatelliteProjection
TeSatelliteProjection	kernel/TeProjection.h	/^class TL_DLL TeSatelliteProjection : public TeProjection$/;"	c
TeSatellitesTypes	image_processing/TePDIWiSpeRFusion.hpp	/^      enum TeSatellitesTypes {CBERS, CBERS2B, IKONOS, QUICKBIRD, SPOT4, SPOT5};$/;"	g	class:TePDIWiSpeRFusion
TeSecondMoment	kernel/TeStatistics.h	/^double TeSecondMoment (It begin, It end, double mean)$/;"	f
TeSecondMoment	kernel/TeStatistics.h	/^double TeSecondMoment (It begin, It end, double mean, int dim)$/;"	f
TeSegIdInPolygonSet	kernel/TeIntersector.h	/^struct TL_DLL TeSegIdInPolygonSet$/;"	s	namespace:TeINTERSECTOR2
TeSegSetIntersection	image_processing/TePDIUtils.cpp	/^  void TeSegSetIntersection( const TeLineSet& ls1, const TeLineSet& ls2,$/;"	f	namespace:TePDIUtils
TeSegmentIntersectionType	kernel/TeDataTypes.h	/^enum TeSegmentIntersectionType { TeProperIntersection, TeImproperIntersection };$/;"	g
TeSegmentRTree	kernel/TeIntersector.h	/^typedef TeSAM::TeRTree<TeSegIdInPolygonSet, 8> TeSegmentRTree;$/;"	t	namespace:TeINTERSECTOR2
TeSegmentsIntersectPoint	kernel/TeGeometryAlgorithms.cpp	/^bool TeSegmentsIntersectPoint(const TeCoord2D& fr0, const TeCoord2D& to0, const TeCoord2D& fr1, const TeCoord2D& to1, TeCoord2D& pi)$/;"	f
TeSelectEntryPoints	kernel/TeProxMatrixConstructionStrategy.cpp	/^bool  TeSelectEntryPoints (TeNodeSet  entry_set, map<string, string> entry_geom_map, TeGraphNetwork* net,$/;"	f
TeSelectEntryPoints2	kernel/TeProxMatrixConstructionStrategy.cpp	/^bool  TeSelectEntryPoints2 (TeNodeSet    entry_set1,$/;"	f
TeSelectedByPointing	kernel/TeDataTypes.h	/^{	TeAll, TeSelectedByPointing, TeNotSelectedByPointing, TeSelectedByQuery, TeNotSelectedByQuery,$/;"	e	enum:TeSelectedObjects
TeSelectedByPointingAndQuery	kernel/TeDataTypes.h	/^	TeSelectedByPointingAndQuery, TeSelectedByPointingOrQuery, TeGrouped, TeNotGrouped };$/;"	e	enum:TeSelectedObjects
TeSelectedByPointingOrQuery	kernel/TeDataTypes.h	/^	TeSelectedByPointingAndQuery, TeSelectedByPointingOrQuery, TeGrouped, TeNotGrouped };$/;"	e	enum:TeSelectedObjects
TeSelectedByQuery	kernel/TeDataTypes.h	/^{	TeAll, TeSelectedByPointing, TeNotSelectedByPointing, TeSelectedByQuery, TeNotSelectedByQuery,$/;"	e	enum:TeSelectedObjects
TeSelectedGeom	kernel/TeSpatialOperations.h	/^typedef vector<TeGeometry*> TeSelectedGeom;$/;"	t
TeSelectedObjects	kernel/TeDataTypes.h	/^enum TeSelectedObjects$/;"	g
TeSemaphore	kernel/TeSemaphore.cpp	/^TeSemaphore::TeSemaphore( unsigned int count )$/;"	f	class:TeSemaphore
TeSemaphore	kernel/TeSemaphore.cpp	/^TeSemaphore::TeSemaphore( unsigned int count, const std::string& semName )$/;"	f	class:TeSemaphore
TeSemaphore	kernel/TeSemaphore.h	/^      TeSemaphore(  const TeSemaphore& ) {};$/;"	f	class:TeSemaphore
TeSemaphore	kernel/TeSemaphore.h	/^  class TL_DLL TeSemaphore$/;"	c
TeSemimadogram	stat/TeMSVFactory.h	/^		TeSemimadogram(const TeMSVParams& params){$/;"	f	class:TeSemimadogram
TeSemimadogram	stat/TeMSVFactory.h	/^class STAT_DLL TeSemimadogram : public TeMSV$/;"	c
TeSemimadogram_Factory	stat/TeMSVFactory.h	/^	TeSemimadogram_Factory (const string& name) : TeMSVFactory (name){}$/;"	f	class:TeSemimadogram_Factory
TeSemimadogram_Factory	stat/TeMSVFactory.h	/^class STAT_DLL TeSemimadogram_Factory : public TeMSVFactory$/;"	c
TeSemivarModel	stat/TeSemivarModelFactory.h	/^	TeSemivarModel (){};$/;"	f	class:TeSemivarModel
TeSemivarModel	stat/TeSemivarModelFactory.h	/^class STAT_DLL TeSemivarModel		$/;"	c
TeSemivarModelFactory	stat/TeSemivarModelFactory.h	/^	TeSemivarModelFactory( const string& name) : TeFactory<TeSemivarModel, TeSemivarModelParams>(name){}$/;"	f	class:TeSemivarModelFactory
TeSemivarModelFactory	stat/TeSemivarModelFactory.h	/^class STAT_DLL TeSemivarModelFactory : public TeFactory<TeSemivarModel, TeSemivarModelParams>$/;"	c
TeSemivarModelParams	stat/TeSemivarModelFactory.h	/^struct STAT_DLL TeSemivarModelParams$/;"	s
TeSemivariogram	stat/TeMSVFactory.h	/^	TeSemivariogram(const TeMSVParams& params){$/;"	f	class:TeSemivariogram
TeSemivariogram	stat/TeMSVFactory.h	/^class STAT_DLL TeSemivariogram : public TeMSV$/;"	c
TeSemivariogram_Factory	stat/TeMSVFactory.h	/^	TeSemivariogram_Factory (const string& name) : TeMSVFactory(name){}$/;"	f	class:TeSemivariogram_Factory
TeSemivariogram_Factory	stat/TeMSVFactory.h	/^class STAT_DLL TeSemivariogram_Factory : public TeMSVFactory$/;"	c
TeShapefileDriver	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeShapefileDriver::TeShapefileDriver(std::string fileName):$/;"	f	class:TeShapefileDriver
TeShapefileDriver	drivers/shapelib/TeDriverSHPDBF.h	/^class SHP_DLL TeShapefileDriver: public TeSTGeoDataDriver$/;"	c
TeSharedPtr	kernel/TeSharedPtr.h	/^  TeSharedPtr< T >::TeSharedPtr( T& objectReference )$/;"	f	class:TeSharedPtr
TeSharedPtr	kernel/TeSharedPtr.h	/^  TeSharedPtr< T >::TeSharedPtr( T* pointer )$/;"	f	class:TeSharedPtr
TeSharedPtr	kernel/TeSharedPtr.h	/^  TeSharedPtr< T >::TeSharedPtr( T* pointer, bool not_shared_flag )$/;"	f	class:TeSharedPtr
TeSharedPtr	kernel/TeSharedPtr.h	/^  TeSharedPtr< T >::TeSharedPtr( const TeSharedPtr< T >& external )$/;"	f	class:TeSharedPtr
TeSharedPtr	kernel/TeSharedPtr.h	/^  TeSharedPtr< T >::TeSharedPtr()$/;"	f	class:TeSharedPtr
TeSharedPtr	kernel/TeSharedPtr.h	/^  class TeSharedPtr {$/;"	c
TeSimilarity	functions/TeSimilarity.cpp	/^TeSimilarity (const char *streetname, const char *rotuloname)$/;"	f
TeSimpleClosedPath	kernel/TeGeometryAlgorithms.cpp	/^TeLinearRing TeSimpleClosedPath(const TePointSet& pSet)$/;"	f
TeSingle	kernel/TeComposite.h	/^	TeSingle<T> ( T& elem ): elem_ ( elem  ) {}$/;"	f	class:TeSingle
TeSingle	kernel/TeComposite.h	/^	TeSingle<T>() {}$/;"	f	class:TeSingle
TeSingle	kernel/TeComposite.h	/^class TeSingle$/;"	c
TeSingleton	kernel/TeSingleton.h	/^	TeSingleton() {}$/;"	f	class:TeSingleton
TeSingleton	kernel/TeSingleton.h	/^class TeSingleton {$/;"	c
TeSinusoidal	kernel/TeProjection.h	/^	TeSinusoidal (const TeDatum& datum,  $/;"	f	class:TeSinusoidal
TeSinusoidal	kernel/TeProjection.h	/^class TL_DLL TeSinusoidal : public TeProjection	$/;"	c
TeSkaterFunction	stat/TeSkaterFunctions.h	/^TeSkaterFunction(bool hasPop, int tipo, int nGrupos, int popMin, TeSTElementSet& regSet, $/;"	f
TeSlice	kernel/TeSlice.h	/^	TeSlice () : count_(0),from_(""),to_("") {}$/;"	f	class:TeSlice
TeSlice	kernel/TeSlice.h	/^	TeSlice(const TeSlice& slice)$/;"	f	class:TeSlice
TeSlice	kernel/TeSlice.h	/^	TeSlice(const string& from, const string& to, int count=0) :$/;"	f	class:TeSlice
TeSlice	kernel/TeSlice.h	/^class TL_DLL TeSlice$/;"	c
TeSliceVector	kernel/TeSlice.h	/^typedef vector<TeSlice> TeSliceVector;$/;"	t
TeSparseMatrix	kernel/TeSparseMatrix.h	/^class TeSparseMatrix$/;"	c
TeSpatialEmpiricalBayes	stat/TeSpatialStatistics.h	/^TeSpatialEmpiricalBayes (It rBegin, It rEnd, It n, It mean, It variance, It bayes)$/;"	f
TeSpatialIndexType	kernel/TeDatabase.h	/^enum TeSpatialIndexType {TeRTREE, TeQUADTREE};$/;"	g
TeSpatialRelation	kernel/TeDataTypes.h	/^enum TeSpatialRelation	$/;"	g
TeSplitCoordSort	kernel/TeOverlayUtils.cpp	/^struct TeSplitCoordSort$/;"	s	file:
TeSplitRing	kernel/TeOverlayUtils.cpp	/^bool TeOVERLAY::TeSplitRing(TeLinearRing& ring, TeLineSet& ringsOut)$/;"	f	class:TeOVERLAY
TeSplitRings	kernel/TeOverlayUtils.cpp	/^bool TeOVERLAY::TeSplitRings(vector<TeLinearRing>& rings, vector<TeLinearRing>& ringsOut)$/;"	f	class:TeOVERLAY
TeSplitString	kernel/TeUtils.cpp	/^int TeSplitString(const string& input, const string& delimiter, vector<string>& results)$/;"	f
TeSpringModels	kernel/TeDataTypes.h	/^enum TeSpringModels$/;"	g
TeSqlServer	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::TeSqlServer()  $/;"	f	class:TeSqlServer
TeSqlServer	drivers/ado/TeAdoSqlServer.h	/^class  TLADO_DLL  TeSqlServer : public TeAdo$/;"	c
TeSqlServerFactory	drivers/ado/TeAdoSqlServer.h	/^    TeSqlServerFactory() : TeDatabaseFactory( $/;"	f	class:TeSqlServerFactory
TeSqlServerFactory	drivers/ado/TeAdoSqlServer.h	/^class TLADO_DLL TeSqlServerFactory : public TeDatabaseFactory$/;"	c
TeSqlServerFactory_instance	drivers/ado/TeAdoSqlServer.h	/^  static TeSqlServerFactory TeSqlServerFactory_instance;$/;"	m	namespace:__anon71
TeSqlServerPortal	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServerPortal::TeSqlServerPortal ( TeDatabase*  pDatabase) $/;"	f	class:TeSqlServerPortal
TeSqlServerPortal	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServerPortal::TeSqlServerPortal ()$/;"	f	class:TeSqlServerPortal
TeSqlServerPortal	drivers/ado/TeAdoSqlServer.h	/^class  TLADO_DLL  TeSqlServerPortal : public TeAdoPortal$/;"	c
TeSqlServerSpatial	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::TeSqlServerSpatial()  $/;"	f	class:TeSqlServerSpatial
TeSqlServerSpatial	drivers/ado/TeAdoSqlServerSpatial.h	/^class  TLADO_DLL  TeSqlServerSpatial : public TeSqlServer$/;"	c
TeSqlServerSpatialFactory	drivers/ado/TeAdoSqlServerSpatial.h	/^    TeSqlServerSpatialFactory() : TeDatabaseFactory( $/;"	f	class:TeSqlServerSpatialFactory
TeSqlServerSpatialFactory	drivers/ado/TeAdoSqlServerSpatial.h	/^class TLADO_DLL TeSqlServerSpatialFactory : public TeDatabaseFactory$/;"	c
TeSqlServerSpatialFactory_instance	drivers/ado/TeAdoSqlServerSpatial.h	/^  static TeSqlServerSpatialFactory TeSqlServerSpatialFactory_instance;$/;"	m	namespace:__anon72
TeSqlServerSpatialPortal	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatialPortal::TeSqlServerSpatialPortal ( TeDatabase*  pDatabase) $/;"	f	class:TeSqlServerSpatialPortal
TeSqlServerSpatialPortal	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatialPortal::TeSqlServerSpatialPortal ()$/;"	f	class:TeSqlServerSpatialPortal
TeSqlServerSpatialPortal	drivers/ado/TeAdoSqlServerSpatial.h	/^class  TLADO_DLL  TeSqlServerSpatialPortal : public TeAdoPortal$/;"	c
TeSquareCentimeters	kernel/TeDataTypes.h	/^enum TeAreaUnits { TeUndefinedAreaUnit, TeSquareMeters, TeSquareKilometers, TeHectares, TeSquareMillimeters, TeSquareCentimeters, TeSquareMiles, TeSquareInches, TeSquareFeet,};$/;"	e	enum:TeAreaUnits
TeSquareFeet	kernel/TeDataTypes.h	/^enum TeAreaUnits { TeUndefinedAreaUnit, TeSquareMeters, TeSquareKilometers, TeHectares, TeSquareMillimeters, TeSquareCentimeters, TeSquareMiles, TeSquareInches, TeSquareFeet,};$/;"	e	enum:TeAreaUnits
TeSquareInches	kernel/TeDataTypes.h	/^enum TeAreaUnits { TeUndefinedAreaUnit, TeSquareMeters, TeSquareKilometers, TeHectares, TeSquareMillimeters, TeSquareCentimeters, TeSquareMiles, TeSquareInches, TeSquareFeet,};$/;"	e	enum:TeAreaUnits
TeSquareKilometers	kernel/TeDataTypes.h	/^enum TeAreaUnits { TeUndefinedAreaUnit, TeSquareMeters, TeSquareKilometers, TeHectares, TeSquareMillimeters, TeSquareCentimeters, TeSquareMiles, TeSquareInches, TeSquareFeet,};$/;"	e	enum:TeAreaUnits
TeSquareMeters	kernel/TeDataTypes.h	/^enum TeAreaUnits { TeUndefinedAreaUnit, TeSquareMeters, TeSquareKilometers, TeHectares, TeSquareMillimeters, TeSquareCentimeters, TeSquareMiles, TeSquareInches, TeSquareFeet,};$/;"	e	enum:TeAreaUnits
TeSquareMiles	kernel/TeDataTypes.h	/^enum TeAreaUnits { TeUndefinedAreaUnit, TeSquareMeters, TeSquareKilometers, TeHectares, TeSquareMillimeters, TeSquareCentimeters, TeSquareMiles, TeSquareInches, TeSquareFeet,};$/;"	e	enum:TeAreaUnits
TeSquareMillimeters	kernel/TeDataTypes.h	/^enum TeAreaUnits { TeUndefinedAreaUnit, TeSquareMeters, TeSquareKilometers, TeHectares, TeSquareMillimeters, TeSquareCentimeters, TeSquareMiles, TeSquareInches, TeSquareFeet,};$/;"	e	enum:TeAreaUnits
TeSquaredInverseDistStrategy	kernel/TeDataTypes.h	/^							TeSquaredInverseDistStrategy, TeConnectionStrenghtStrategy};$/;"	e	enum:TeGPMWeightsStrategy
TeStartProcessing	functions/TeLayerFunctions.cpp	/^void TeStartProcessing(int steps, const char* message)$/;"	f
TeStatAdaptiveGeoMeanIntKernel	stat/TeKernelFunctions.h	/^bool TeStatAdaptiveGeoMeanIntKernel(EventSet& events, $/;"	f
TeStatIntKernel	stat/TeKernelFunctions.h	/^bool TeStatIntKernel(EventSet& events, $/;"	f
TeStatKernel	stat/TeKernelFunctions.h	/^  TeStatKernel() {$/;"	f	class:TeStatKernel
TeStatKernel	stat/TeKernelFunctions.h	/^class STAT_DLL TeStatKernel {$/;"	c
TeStatKernelRatio	stat/TeKernelFunctions.h	/^  TeStatKernelRatio() {$/;"	f	class:TeStatKernelRatio
TeStatKernelRatio	stat/TeKernelFunctions.h	/^class STAT_DLL TeStatKernelRatio$/;"	c
TeStatisticStringValMap	kernel/TeDataTypes.h	/^typedef map<TeStatisticType, string> TeStatisticStringValMap;$/;"	t
TeStatisticType	kernel/TeDataTypes.h	/^enum TeStatisticType$/;"	g
TeStatisticValMap	kernel/TeDataTypes.h	/^typedef map<TeStatisticType, double> TeStatisticValMap;$/;"	t
TeStatisticsDimension	kernel/TeStatistics.h	/^	TeStatisticsDimension(int d, TeStatisticValMap& st): $/;"	f	struct:TeStatisticsDimension
TeStatisticsDimension	kernel/TeStatistics.h	/^struct TL_DLL TeStatisticsDimension$/;"	s
TeStatisticsDimensionVect	kernel/TeStatistics.h	/^typedef vector<TeStatisticsDimension>	TeStatisticsDimensionVect;$/;"	t
TeStatisticsMap	kernel/TeDataTypes.h	/^typedef map<TeStatisticType, string> TeStatisticsMap;$/;"	t
TeStatistics_H	kernel/TeStatistics.h	28;"	d
TeStdDeviation	kernel/TeDataTypes.h	/^{ TeEqualSteps = 0, TeQuantil = 1, TeStdDeviation = 2, TeUniqueValue = 3,$/;"	e	enum:TeGroupingMode
TeStdFile	kernel/TeStdFile.cpp	/^TeStdFile::TeStdFile ( const string& name, const char* mode ):$/;"	f	class:TeStdFile
TeStdFile	kernel/TeStdFile.h	/^class TL_DLL TeStdFile {$/;"	c
TeStdIOProgress	kernel/TeStdIOProgress.cpp	/^TeStdIOProgress::TeStdIOProgress() :$/;"	f	class:TeStdIOProgress
TeStdIOProgress	kernel/TeStdIOProgress.h	/^class TL_DLL TeStdIOProgress : public TeProgressBase$/;"	c
TeStrategic	kernel/TeRaster.cpp	/^	TeStrategic(TeRaster* r=0, double y=0): raster_(r), y_(y) {}$/;"	f	class:TeStrategic
TeStrategic	kernel/TeRaster.cpp	/^class TeStrategic$/;"	c	file:
TeStrategicIterator	kernel/TeRaster.h	/^enum TeStrategicIterator$/;"	g
TeStringCompare	kernel/TeUtils.cpp	/^TeStringCompare(const string& str1, const string& str2, bool caseS)$/;"	f
TeSum	kernel/TeStatistics.h	/^double TeSum (It begin, It end)$/;"	f
TeSum	kernel/TeStatistics.h	/^double TeSum (It begin, It end, int dim)$/;"	f
TeSumStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeSumStrategy (double dummyV = 0.0, double defaultV = 0.0) {this->defaultValue_.value_ = Te2String (defaultV); dummy = dummyV; }$/;"	f	class:TeSumStrategy
TeSumStrategy	kernel/TeComputeAttributeStrategies.h	/^class TeSumStrategy: public TeComputeAttrStrategy<Iterator>   $/;"	c
TeSumWeighByAreaStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeSumWeighByAreaStrategy (TeTheme* theme_, string att_, TeGeomRep rep_) : TeComputeSpatialStrategy(theme_, rep_) { attribute = att_; }$/;"	f	class:TeSumWeighByAreaStrategy
TeSumWeighByAreaStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeSumWeighByAreaStrategy: public TeComputeSpatialStrategy  $/;"	c
TeSwap	kernel/TeGeometryAlgorithms.cpp	/^void TeSwap(TePoint& p1, TePoint& p2)$/;"	f
TeTEXT	kernel/TeDataTypes.h	/^	TeARCS = 32, TeNODES = 64  , TeTEXT = 128, TeCELLS = 256 , TeRASTER = 512,$/;"	e	enum:TeGeomRep
TeTEXTCURSOR	kernel/TeDatabase.h	/^enum TeCursorDataType { TeBINARYCURSOR, TeTEXTCURSOR };$/;"	e	enum:TeCursorDataType
TeTEXTSETTYPE	kernel/TeDataTypes.h	/^ TePOINTSETTYPE, TeLINESETTYPE, TePOLYGONSETTYPE, TeCELLSETTYPE, TeTEXTSETTYPE, TeNODESETTYPE,$/;"	e	enum:TeAttrDataType
TeTEXTTYPE	kernel/TeDataTypes.h	/^ TePOINTTYPE, TeLINE2DTYPE, TePOLYGONTYPE, TeCELLTYPE, TeTEXTTYPE, TeNODETYPE,$/;"	e	enum:TeAttrDataType
TeTHEME	kernel/TeViewNode.h	/^{ TeTHEME=0, TeTREE=1, TeEXTERNALTHEME=2, TeFILETHEME=3, TeSFSTHEME=4 }; $/;"	e	enum:TeViewNodeType
TeTIMEAFTER	kernel/TeDataTypes.h	/^enum TeTemporalRelation { TeTIMEUNDEFINED, TeTIMEEQUAL, TeTIMEBEFORE, TeTIMEAFTER, TeTIMEMEETS, TeTIMEDURING, TeTIMEOVERLAPS, TeTIMEENDS, TeTIMESTARTS };$/;"	e	enum:TeTemporalRelation
TeTIMEBEFORE	kernel/TeDataTypes.h	/^enum TeTemporalRelation { TeTIMEUNDEFINED, TeTIMEEQUAL, TeTIMEBEFORE, TeTIMEAFTER, TeTIMEMEETS, TeTIMEDURING, TeTIMEOVERLAPS, TeTIMEENDS, TeTIMESTARTS };$/;"	e	enum:TeTemporalRelation
TeTIMEDURING	kernel/TeDataTypes.h	/^enum TeTemporalRelation { TeTIMEUNDEFINED, TeTIMEEQUAL, TeTIMEBEFORE, TeTIMEAFTER, TeTIMEMEETS, TeTIMEDURING, TeTIMEOVERLAPS, TeTIMEENDS, TeTIMESTARTS };$/;"	e	enum:TeTemporalRelation
TeTIMEENDS	kernel/TeDataTypes.h	/^enum TeTemporalRelation { TeTIMEUNDEFINED, TeTIMEEQUAL, TeTIMEBEFORE, TeTIMEAFTER, TeTIMEMEETS, TeTIMEDURING, TeTIMEOVERLAPS, TeTIMEENDS, TeTIMESTARTS };$/;"	e	enum:TeTemporalRelation
TeTIMEEQUAL	kernel/TeDataTypes.h	/^enum TeTemporalRelation { TeTIMEUNDEFINED, TeTIMEEQUAL, TeTIMEBEFORE, TeTIMEAFTER, TeTIMEMEETS, TeTIMEDURING, TeTIMEOVERLAPS, TeTIMEENDS, TeTIMESTARTS };$/;"	e	enum:TeTemporalRelation
TeTIMEMEETS	kernel/TeDataTypes.h	/^enum TeTemporalRelation { TeTIMEUNDEFINED, TeTIMEEQUAL, TeTIMEBEFORE, TeTIMEAFTER, TeTIMEMEETS, TeTIMEDURING, TeTIMEOVERLAPS, TeTIMEENDS, TeTIMESTARTS };$/;"	e	enum:TeTemporalRelation
TeTIMEOVERLAPS	kernel/TeDataTypes.h	/^enum TeTemporalRelation { TeTIMEUNDEFINED, TeTIMEEQUAL, TeTIMEBEFORE, TeTIMEAFTER, TeTIMEMEETS, TeTIMEDURING, TeTIMEOVERLAPS, TeTIMEENDS, TeTIMESTARTS };$/;"	e	enum:TeTemporalRelation
TeTIMESTARTS	kernel/TeDataTypes.h	/^enum TeTemporalRelation { TeTIMEUNDEFINED, TeTIMEEQUAL, TeTIMEBEFORE, TeTIMEAFTER, TeTIMEMEETS, TeTIMEDURING, TeTIMEOVERLAPS, TeTIMEENDS, TeTIMESTARTS };$/;"	e	enum:TeTemporalRelation
TeTIMEUNDEFINED	kernel/TeDataTypes.h	/^enum TeTemporalRelation { TeTIMEUNDEFINED, TeTIMEEQUAL, TeTIMEBEFORE, TeTIMEAFTER, TeTIMEMEETS, TeTIMEDURING, TeTIMEOVERLAPS, TeTIMEENDS, TeTIMESTARTS };$/;"	e	enum:TeTemporalRelation
TeTOUCHES	kernel/TeDataTypes.h	/^{	TeDISJOINT = 1, TeTOUCHES = 2, TeCROSSES = 4, TeWITHIN = 8, $/;"	e	enum:TeSpatialRelation
TeTREE	kernel/TeViewNode.h	/^{ TeTHEME=0, TeTREE=1, TeEXTERNALTHEME=2, TeFILETHEME=3, TeSFSTHEME=4 }; $/;"	e	enum:TeViewNodeType
TeTSDataType	kernel/TeTemporalSeries.h	/^enum TeTSDataType  { TeDATA, TeMISSING, TeDMISSING, TeOUTLIER, TeDOUTLIER, TePREDICTION };$/;"	g
TeTSEntry	kernel/TeTemporalSeries.cpp	/^TeTSEntry::TeTSEntry(const double& val, TeTimeInterval& time, int timeFrame, int nItens, TeTSDataType dType)$/;"	f	class:TeTSEntry
TeTSEntry	kernel/TeTemporalSeries.h	/^	TeTSEntry(): $/;"	f	class:TeTSEntry
TeTSEntry	kernel/TeTemporalSeries.h	/^	TeTSEntry(const TeTSEntry& other)$/;"	f	class:TeTSEntry
TeTSEntry	kernel/TeTemporalSeries.h	/^class TL_DLL TeTSEntry$/;"	c
TeTSParams	kernel/TeTemporalSeries.h	/^	TeTSParams():$/;"	f	class:TeTSParams
TeTSParams	kernel/TeTemporalSeries.h	/^	TeTSParams(TeTheme* theme, TeChronon chr, const string& table, const string& col, TeStatisticType tOper, TeStatisticType sOper):$/;"	f	class:TeTSParams
TeTSParams	kernel/TeTemporalSeries.h	/^	TeTSParams(TeTheme* theme, const string& objId, TeChronon chr, const string& table, const string& col, TeStatisticType tOper, TeStatisticType sOper):$/;"	f	class:TeTSParams
TeTSParams	kernel/TeTemporalSeries.h	/^class TL_DLL TeTSParams $/;"	c
TeTSType	kernel/TeTemporalSeries.h	/^enum TeTSType  { TeATTRDYN, TeATTRDYNGROUP, TeEVENT, TeATTREVENT};$/;"	g
TeTable	kernel/TeTable.cpp	/^TeTable::TeTable():$/;"	f	class:TeTable
TeTable	kernel/TeTable.cpp	/^TeTable::TeTable(const TeTable& other)$/;"	f	class:TeTable
TeTable	kernel/TeTable.cpp	/^TeTable::TeTable(const string& name):$/;"	f	class:TeTable
TeTable	kernel/TeTable.cpp	/^TeTable::TeTable(const string& name, const TeAttributeList& attList, const string& uniqueName,$/;"	f	class:TeTable
TeTable	kernel/TeTable.h	/^class TL_DLL TeTable$/;"	c
TeTableImpl	kernel/TeTable.h	/^	TeTableImpl(): refCount_(0){}$/;"	f	class:TeTableImpl
TeTableImpl	kernel/TeTable.h	/^class TL_DLL TeTableImpl: public TeComposite<TeTableRow>$/;"	c
TeTableRow	kernel/TeTable.h	/^typedef vector<string> TeTableRow;$/;"	t
TeTempFilesRemover	kernel/TeTempFilesRemover.cpp	/^TeTempFilesRemover::TeTempFilesRemover()$/;"	f	class:TeTempFilesRemover
TeTempFilesRemover	kernel/TeTempFilesRemover.h	/^  class TL_DLL TeTempFilesRemover : public TeSingleton< TeTempFilesRemover >$/;"	c
TeTemporalRelation	kernel/TeDataTypes.h	/^enum TeTemporalRelation { TeTIMEUNDEFINED, TeTIMEEQUAL, TeTIMEBEFORE, TeTIMEAFTER, TeTIMEMEETS, TeTIMEDURING, TeTIMEOVERLAPS, TeTIMEENDS, TeTIMESTARTS };$/;"	g
TeTemporalSeries	kernel/TeTemporalSeries.h	/^	TeTemporalSeries(): $/;"	f	class:TeTemporalSeries
TeTemporalSeries	kernel/TeTemporalSeries.h	/^	TeTemporalSeries(TeChronon chr, TeTheme* theme=0, const string& table="", const string& col="", TeStatisticType tOper=TeNOSTATISTIC, TeStatisticType sOper=TeNOSTATISTIC): $/;"	f	class:TeTemporalSeries
TeTemporalSeries	kernel/TeTemporalSeries.h	/^	TeTemporalSeries(TeTheme* theme, const string& objId, TeChronon chr, const string& table, const string& col, TeStatisticType tOper, TeStatisticType sOper): $/;"	f	class:TeTemporalSeries
TeTemporalSeries	kernel/TeTemporalSeries.h	/^class TL_DLL TeTemporalSeries$/;"	c
TeText	kernel/TeGeometry.h	/^	TeText( TeCoord2D& location, const string& txt="" ):$/;"	f	class:TeText
TeText	kernel/TeGeometry.h	/^	TeText(const TeText& other ) : TeGeomSingle<TeCoord2D>()$/;"	f	class:TeText
TeText	kernel/TeGeometry.h	/^	TeText(const string& txt="" ):$/;"	f	class:TeText
TeText	kernel/TeGeometry.h	/^class TL_DLL TeText: public TeGeomSingle<TeCoord2D>$/;"	c
TeTextSet	kernel/TeGeometry.h	/^class TL_DLL TeTextSet : public TeGeomComposite<TeText> $/;"	c
TeTheme	kernel/TeTheme.cpp	/^TeTheme::TeTheme (const TeTheme& other) :$/;"	f	class:TeTheme
TeTheme	kernel/TeTheme.cpp	/^TeTheme::TeTheme( const string& name, TeLayer* layer, TeViewNode* parent, const int& view, const int& id)$/;"	f	class:TeTheme
TeTheme	kernel/TeTheme.cpp	/^TeTheme::TeTheme(const TeViewNodeParams& params) : TeAbstractTheme(params),	layer_(0), layerId_(-1),$/;"	f	class:TeTheme
TeTheme	kernel/TeTheme.h	/^class TL_DLL TeTheme: public TeAbstractTheme$/;"	c
TeThemeFactory	kernel/TeTheme.h	/^	TeThemeFactory() : TeViewNodeFactory((int)TeTHEME)$/;"	f	class:TeThemeFactory
TeThemeFactory	kernel/TeTheme.h	/^class TL_DLL TeThemeFactory : public TeViewNodeFactory$/;"	c
TeThemeMap	kernel/TeAbstractTheme.h	/^typedef map<int, TeAbstractTheme*>	TeThemeMap;$/;"	t
TeThemeVector	kernel/TeAbstractTheme.h	/^typedef vector<TeAbstractTheme*>	TeThemeVector;$/;"	t
TeThread	kernel/TeThread.cpp	/^TeThread::TeThread()$/;"	f	class:TeThread
TeThread	kernel/TeThread.h	/^class TL_DLL TeThread$/;"	c
TeThreadAboveNormalPriority	kernel/TeThreadDatatypes.h	/^	TeThreadAboveNormalPriority,	\/*!< Above normal priority. *\/     $/;"	e	enum:TeThreadPriority
TeThreadBelowNormalPriority	kernel/TeThreadDatatypes.h	/^	TeThreadBelowNormalPriority,	\/*!< Below normal priority. *\/$/;"	e	enum:TeThreadPriority
TeThreadFunctor	kernel/TeThreadFunctor.cpp	/^TeThreadFunctor::TeThreadFunctor()$/;"	f	class:TeThreadFunctor
TeThreadFunctor	kernel/TeThreadFunctor.h	/^class TL_DLL TeThreadFunctor : public TeThread$/;"	c
TeThreadIdlePriority	kernel/TeThreadDatatypes.h	/^	TeThreadIdlePriority,			\/*!< Idle priority. *\/$/;"	e	enum:TeThreadPriority
TeThreadJob	kernel/TeThreadJob.cpp	/^TeThreadJob::TeThreadJob() $/;"	f	class:TeThreadJob
TeThreadJob	kernel/TeThreadJob.h	/^class TL_DLL TeThreadJob$/;"	c
TeThreadJobsManager	kernel/TeThreadJobsManager.cpp	/^TeThreadJobsManager::TeThreadJobsManager()$/;"	f	class:TeThreadJobsManager
TeThreadJobsManager	kernel/TeThreadJobsManager.h	/^class TL_DLL TeThreadJobsManager$/;"	c
TeThreadNormalPriority	kernel/TeThreadDatatypes.h	/^	TeThreadNormalPriority,			\/*!< Normal priority. *\/$/;"	e	enum:TeThreadPriority
TeThreadParameters	kernel/TeThreadParameters.h	/^  class TL_DLL TeThreadParameters : public TeMultiContainer< std::string > {};$/;"	c
TeThreadPriority	kernel/TeThreadDatatypes.h	/^enum TeThreadPriority$/;"	g
TeThreadRunning	kernel/TeThreadDatatypes.h	/^	TeThreadRunning		\/\/!< The thread is running.$/;"	e	enum:TeThreadStatus
TeThreadSignal	kernel/TeThreadSignal.cpp	/^TeThreadSignal::TeThreadSignal()$/;"	f	class:TeThreadSignal
TeThreadSignal	kernel/TeThreadSignal.h	/^      TeThreadSignal(  const TeThreadSignal& ) {};$/;"	f	class:TeThreadSignal
TeThreadSignal	kernel/TeThreadSignal.h	/^  class TL_DLL TeThreadSignal$/;"	c
TeThreadStartFunctT	kernel/TeThreadFunctor.h	/^    typedef TeThreadStartFunctT1 TeThreadStartFunctT;$/;"	t	class:TeThreadFunctor
TeThreadStartFunctT1	kernel/TeThreadFunctor.h	/^    typedef bool (*TeThreadStartFunctT1)( const TeThreadParameters& params );$/;"	t	class:TeThreadFunctor
TeThreadStartFunctT2	kernel/TeThreadFunctor.h	/^    typedef bool (*TeThreadStartFunctT2)( void* userParamsPtr );        $/;"	t	class:TeThreadFunctor
TeThreadStatus	kernel/TeThreadDatatypes.h	/^enum TeThreadStatus$/;"	g
TeThreadStopped	kernel/TeThreadDatatypes.h	/^	TeThreadStopped,	\/\/!< The thread is stopped: it has already finished the job or it doesn't have start it.$/;"	e	enum:TeThreadStatus
TeThreadTimeCriticalPriority	kernel/TeThreadDatatypes.h	/^	TeThreadTimeCriticalPriority	\/*!< Time critical priority. *\/$/;"	e	enum:TeThreadPriority
TeThree2LUTThreeBand	kernel/TeRasterTransform.h	/^		TeThree2LUTThreeBand=9, TeMono2LUTMonoBand=10, TeMono2LUT = 11$/;"	e	enum:TeRasterTransform::TeRasterTransfFunctions
TeThreeBand2RGB	kernel/TeRasterTransform.h	/^		TeExtractRGB=5, TeExtractBand=6, TeExtractBands=7, TeThreeBand2RGB=8, $/;"	e	enum:TeRasterTransform::TeRasterTransfFunctions
TeTiffCompression	kernel/TeRasterParams.h	/^	{ TeNoCompression, TeZLib, TeJpeg, TeTiffCompression };$/;"	e	enum:TeRasterParams::TeRasterCompressionMode
TeTileSegIndex	image_processing/TePDITileIndexer.hpp	/^    typedef vector< pair< unsigned int, unsigned int > > TeTileSegIndex;$/;"	t	class:TePDITileIndexer
TeTime	kernel/TeTime.cpp	/^TeTime::TeTime()$/;"	f	class:TeTime
TeTime	kernel/TeTime.cpp	/^TeTime::TeTime(const TeTime& other)$/;"	f	class:TeTime
TeTime	kernel/TeTime.cpp	/^TeTime::TeTime(const std::string& ds, TeChronon chronon, const std::string& mask, const std::string& dateS, const std::string& timeS, const std::string& indPM)$/;"	f	class:TeTime
TeTime	kernel/TeTime.cpp	/^TeTime::TeTime(int h, int m, int s, TeChronon chronon)$/;"	f	class:TeTime
TeTime	kernel/TeTime.h	/^class TL_DLL TeTime$/;"	c
TeTimeInterval	kernel/TeTimeInterval.cpp	/^TeTimeInterval :: TeTimeInterval(const std::string& s1, const std::string& s2, TeChronon chronon, $/;"	f	class:TeTimeInterval
TeTimeInterval	kernel/TeTimeInterval.h	/^	TeTimeInterval (TeTime& t1, TeTime& t2): 	t1_(t1), t2_(t2) {}$/;"	f	class:TeTimeInterval
TeTimeInterval	kernel/TeTimeInterval.h	/^	TeTimeInterval (void): 	t1_(), t2_() {}$/;"	f	class:TeTimeInterval
TeTimeInterval	kernel/TeTimeInterval.h	/^	TeTimeInterval(const TeTimeInterval& t): t1_(t.t1_), t2_(t.t2_) {}$/;"	f	class:TeTimeInterval
TeTimeInterval	kernel/TeTimeInterval.h	/^	TeTimeInterval(const std::string& t1, TeChronon chronon=TeSECOND, const std::string& mask="YYYYsMMsDDsHHsmmsSS", int delta = 0, int numsteps = 1): $/;"	f	class:TeTimeInterval
TeTimeInterval	kernel/TeTimeInterval.h	/^class TL_DLL TeTimeInterval$/;"	c
TeTin	kernel/TeTin.h	/^	TeTin()$/;"	f	class:TeTin
TeTin	kernel/TeTin.h	/^	TeTin(TeBox & \/* box *\/) $/;"	f	class:TeTin
TeTin	kernel/TeTin.h	/^class TL_DLL TeTin$/;"	c
TeTinBIGFLOAT	kernel/TeTin.h	/^const double	TeTinBIGFLOAT = TeMAXFLOAT \/ 10.;		\/\/!< Near Maximum float value - TeMAXFLOAT \/ 10.$/;"	v
TeTinEdge	kernel/TeTin.h	/^	TeTinEdge() {}$/;"	f	class:TeTinEdge
TeTinEdge	kernel/TeTin.h	/^	TeTinEdge(long from, long to, long left, long right,$/;"	f	class:TeTinEdge
TeTinEdge	kernel/TeTin.h	/^class TL_DLL TeTinEdge : public TeGeometry$/;"	c
TeTinEdgeIterator	kernel/TeTin.h	/^	typedef  TeTinEdgeSet::iterator TeTinEdgeIterator;$/;"	t	class:TeTin
TeTinEdgeSet	kernel/TeTin.h	/^	TeTinEdgeSet()	{}$/;"	f	class:TeTinEdgeSet
TeTinEdgeSet	kernel/TeTin.h	/^class TL_DLL TeTinEdgeSet : public TeGeomComposite<TeTinEdge>$/;"	c
TeTinEdgeType	kernel/TeTin.h	/^enum TeTinEdgeType $/;"	g
TeTinTriangle	kernel/TeTin.h	/^	TeTinTriangle()$/;"	f	class:TeTinTriangle
TeTinTriangle	kernel/TeTin.h	/^	TeTinTriangle(long first, long second, long third) $/;"	f	class:TeTinTriangle
TeTinTriangle	kernel/TeTin.h	/^class TL_DLL TeTinTriangle : public TeGeometry$/;"	c
TeTinTriangleIterator	kernel/TeTin.h	/^	typedef  TeTinTriangleSet::iterator TeTinTriangleIterator;$/;"	t	class:TeTin
TeTinTriangleSet	kernel/TeTin.h	/^	TeTinTriangleSet()	{}$/;"	f	class:TeTinTriangleSet
TeTinTriangleSet	kernel/TeTin.h	/^class TL_DLL TeTinTriangleSet : public TeGeomComposite<TeTinTriangle>$/;"	c
TeTinVertex	kernel/TeTin.h	/^	TeTinVertex( TeCoord2D xy, double value, TeTinVertexType type,$/;"	f	class:TeTinVertex
TeTinVertex	kernel/TeTin.h	/^	TeTinVertex() : TeMeasure ( TeMAXFLOAT ), oneEdge_ (-1) {}$/;"	f	class:TeTinVertex
TeTinVertex	kernel/TeTin.h	/^class TL_DLL TeTinVertex : public TeGeomSingle<TeCoord2D>, public TeMeasure$/;"	c
TeTinVertexIterator	kernel/TeTin.h	/^	typedef TeTinVertexSet::iterator TeTinVertexIterator;$/;"	t	class:TeTin
TeTinVertexSet	kernel/TeTin.h	/^	TeTinVertexSet() {}$/;"	f	class:TeTinVertexSet
TeTinVertexSet	kernel/TeTin.h	/^class TL_DLL TeTinVertexSet : public TeGeomComposite <TeTinVertex>$/;"	c
TeTinVertexType	kernel/TeTin.h	/^enum TeTinVertexType $/;"	g
TeTopologicalRelation	kernel/TeSpatialOperations.cpp	/^bool TeTopologicalRelation(const TeCell* geom1, const TeCell* geom2, int relation)$/;"	f
TeTopologicalRelation	kernel/TeSpatialOperations.cpp	/^bool TeTopologicalRelation(const TeCell* geom1, const TeLine2D* geom2, int relation)$/;"	f
TeTopologicalRelation	kernel/TeSpatialOperations.cpp	/^bool TeTopologicalRelation(const TeCell* geom1, const TePoint* geom2, int relation)$/;"	f
TeTopologicalRelation	kernel/TeSpatialOperations.cpp	/^bool TeTopologicalRelation(const TeCell* geom1, const TePolygon* geom2, int relation)$/;"	f
TeTopologicalRelation	kernel/TeSpatialOperations.cpp	/^bool TeTopologicalRelation(const TeLine2D* geom1, const TeLine2D* geom2, int relation)$/;"	f
TeTopologicalRelation	kernel/TeSpatialOperations.cpp	/^bool TeTopologicalRelation(const TeLine2D* geom1, const TePoint* geom2, int relation)$/;"	f
TeTopologicalRelation	kernel/TeSpatialOperations.cpp	/^bool TeTopologicalRelation(const TePoint* geom1, const TePoint* geom2, int relation)$/;"	f
TeTopologicalRelation	kernel/TeSpatialOperations.cpp	/^bool TeTopologicalRelation(const TePolygon* geom1, const TeLine2D* geom2, int relation)$/;"	f
TeTopologicalRelation	kernel/TeSpatialOperations.cpp	/^bool TeTopologicalRelation(const TePolygon* geom1, const TePoint* geom2, int relation)$/;"	f
TeTopologicalRelation	kernel/TeSpatialOperations.cpp	/^bool TeTopologicalRelation(const TePolygon* geom1, const TePolygon* geom2, int relation)$/;"	f
TeTopologicalRelation	kernel/TeSpatialOperations.cpp	/^bool TeTopologicalRelation(const string& actGeomTable, TeGeomRep actRep, TeGeometry* geom, $/;"	f
TeTopologicalRelation	kernel/TeSpatialOperations.cpp	/^bool TeTopologicalRelation(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIdsIn, $/;"	f
TeTotalAreaPercentageStrategy	kernel/TeComputeAttributeStrategies.h	/^		TeTotalAreaPercentageStrategy (TeTheme* theme_) : TeComputeSpatialStrategy(theme_, TePOLYGONS){}$/;"	f	class:TeTotalAreaPercentageStrategy
TeTotalAreaPercentageStrategy	kernel/TeComputeAttributeStrategies.h	/^class TL_DLL TeTotalAreaPercentageStrategy: public TeComputeSpatialStrategy  $/;"	c
TeTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeTouches(const TeBox& bx1, const TeBox& bx2)$/;"	f
TeTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeTouches(const TeCell& c1, const TeCell& c2)$/;"	f
TeTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeTouches(const TeCell& c1, const TePolygon& poly)$/;"	f
TeTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeTouches(const TeCoord2D& c, const TeLine2D& l)$/;"	f
TeTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeTouches(const TeCoord2D& c, const TePolygon& pol)$/;"	f
TeTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeTouches(const TeLine2D& l, const TePolygon& pol)$/;"	f
TeTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeTouches(const TeLine2D& line, const TeCell& cell)$/;"	f
TeTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeTouches(const TeLine2D& redLine, const TeLine2D& blueLine)$/;"	f
TeTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeTouches(const TePoint& p, const TeLine2D& l)$/;"	f
TeTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeTouches(const TePoint& p, const TePolygon& pol)$/;"	f
TeTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeTouches(const TePoint& point,const TeCell& c1)$/;"	f
TeTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeTouches(const TePolygon& redPol, const TePolygon& bluePol)$/;"	f
TeTrim	kernel/TeUtils.cpp	/^TeTrim(string &str)$/;"	f
TeTrivial	kernel/TeDataTypes.h	/^enum TeIntersectorAlgorithm { TeBentleyOttman, TeRedBlue, TeTrivial };$/;"	e	enum:TeIntersectorAlgorithm
TeUNDEFINEDREL	kernel/TeDataTypes.h	/^	TeCOVEREDBY = 512, TeUNDEFINEDREL = 1024};$/;"	e	enum:TeSpatialRelation
TeUNIDIRECTIONAL	kernel/TeDatabase.h	/^enum TeCursorType { TeUNIDIRECTIONAL, TeBIDIRECTIONAL, TeRANDOMACCESS };$/;"	e	enum:TeCursorType
TeUNION	kernel/TeDefines.h	214;"	d
TeUNKNOWN	kernel/TeDataTypes.h	/^{TeSTRING, TeREAL, TeINT, TeDATETIME, TeBLOB, TeOBJECT, TeCHARACTER, TeUNKNOWN, TeUNSIGNEDINT,$/;"	e	enum:TeAttrDataType
TeUNKNOWNPOSITION	kernel/TeDefines.h	174;"	d
TeUNSIGNEDCHAR	kernel/TeDataTypes.h	/^{	TeBIT, TeUNSIGNEDCHAR, TeCHAR, TeUNSIGNEDSHORT, TeSHORT, TeINTEGER, TeUNSIGNEDLONG, TeLONG, TeFLOAT, TeDOUBLE };$/;"	e	enum:TeDataType
TeUNSIGNEDINT	kernel/TeDataTypes.h	/^{TeSTRING, TeREAL, TeINT, TeDATETIME, TeBLOB, TeOBJECT, TeCHARACTER, TeUNKNOWN, TeUNSIGNEDINT,$/;"	e	enum:TeAttrDataType
TeUNSIGNEDLONG	kernel/TeDataTypes.h	/^{	TeBIT, TeUNSIGNEDCHAR, TeCHAR, TeUNSIGNEDSHORT, TeSHORT, TeINTEGER, TeUNSIGNEDLONG, TeLONG, TeFLOAT, TeDOUBLE };$/;"	e	enum:TeDataType
TeUNSIGNEDSHORT	kernel/TeDataTypes.h	/^{	TeBIT, TeUNSIGNEDCHAR, TeCHAR, TeUNSIGNEDSHORT, TeSHORT, TeINTEGER, TeUNSIGNEDLONG, TeLONG, TeFLOAT, TeDOUBLE };$/;"	e	enum:TeDataType
TeUPPERLEFT	kernel/TeBox.h	/^	enum TeBoxCorner { TeLOWERLEFT=0, TeUPPERLEFT=1, TeLOWERRIGHT=2, TeUPPERRIGHT=3 };$/;"	e	enum:TeBox::TeBoxCorner
TeUPPERRIGHT	kernel/TeBox.h	/^	enum TeBoxCorner { TeLOWERLEFT=0, TeUPPERLEFT=1, TeLOWERRIGHT=2, TeUPPERRIGHT=3 };$/;"	e	enum:TeBox::TeBoxCorner
TeUndefinedAreaUnit	kernel/TeDataTypes.h	/^enum TeAreaUnits { TeUndefinedAreaUnit, TeSquareMeters, TeSquareKilometers, TeHectares, TeSquareMillimeters, TeSquareCentimeters, TeSquareMiles, TeSquareInches, TeSquareFeet,};$/;"	e	enum:TeAreaUnits
TeUndefinedUnit	kernel/TeDataTypes.h	/^enum TeUnits { TeUndefinedUnit, TeMillimeters, TeCentimeters, TeMeters, TeKilometers, TeMiles, TeInches, TeFeet, TeDecimalDegress };$/;"	e	enum:TeUnits
TeUnion	kernel/TeGeometryAlgorithms.cpp	/^TeBox TeUnion(const TeBox& bx1, const TeBox& bx2)$/;"	f
TeUnion	kernel/TeOverlay.cpp	/^TeMultiGeometry TeOVERLAY::TeUnion(TeLineSet& redLines, TePolygonSet& bluePols)$/;"	f	class:TeOVERLAY
TeUnion	kernel/TeOverlay.cpp	/^bool TeOVERLAY::TeUnion(TePolygonSet& polsIn, TePolygonSet& polsOut, const bool& makeCopy, const bool fixOrientation)$/;"	f	class:TeOVERLAY
TeUnion	kernel/TeOverlay.cpp	/^bool TeOVERLAY::TeUnion(TePolygonSet& redPols, TePolygonSet& bluePols, TePolygonSet& polsOut)$/;"	f	class:TeOVERLAY
TeUnion	kernel/TeOverlay.cpp	/^bool TeOVERLAY::TeUnion(TePolygonSet& redPols, vector<TePolygonSet>& bluePols, vector<TePolygonSet>& vecPolsOut, vector<bool>& resultVec, const bool& makeCopy, const bool fixOrientation)$/;"	f	class:TeOVERLAY
TeUniqueValue	kernel/TeDataTypes.h	/^{ TeEqualSteps = 0, TeQuantil = 1, TeStdDeviation = 2, TeUniqueValue = 3,$/;"	e	enum:TeGroupingMode
TeUnits	kernel/TeDataTypes.h	/^enum TeUnits { TeUndefinedUnit, TeMillimeters, TeCentimeters, TeMeters, TeKilometers, TeMiles, TeInches, TeFeet, TeDecimalDegress };$/;"	g
TeUnknown	kernel/TeRasterParams.h	/^	{ TeUnknown, TePallete, TeMultiBand, TeRGB };$/;"	e	enum:TeRasterParams::TeRasterPhotometricInterpretation
TeUpdateDBFromSet	kernel/TeSTEFunctionsDB.h	/^bool TeUpdateDBFromSet (elementSet* elemSet, const string& tableName, vector<int>* indexes)$/;"	f
TeUtm	kernel/TeProjection.cpp	/^TeUtm::TeUtm(const TeDatum& datum, double long0, double lat0, $/;"	f	class:TeUtm
TeUtm	kernel/TeProjection.h	/^class TL_DLL TeUtm : public TeProjection$/;"	c
TeVALIDCOUNT	kernel/TeDataTypes.h	/^{	TeNOSTATISTIC, TeSUM, TeMAXVALUE, TeMINVALUE, TeCOUNT, TeVALIDCOUNT, TeSTANDARDDEVIATION, TeKERNEL,  $/;"	e	enum:TeStatisticType
TeVARCOEFF	kernel/TeDataTypes.h	/^	TeMEAN, TeVARIANCE, TeSKEWNESS, TeKURTOSIS, TeAMPLITUDE, TeMEDIAN, TeVARCOEFF, TeMODE};$/;"	e	enum:TeStatisticType
TeVARIANCE	kernel/TeDataTypes.h	/^	TeMEAN, TeVARIANCE, TeSKEWNESS, TeKURTOSIS, TeAMPLITUDE, TeMEDIAN, TeVARCOEFF, TeMODE};$/;"	e	enum:TeStatisticType
TeValidPolygonHoles	kernel/TeOverlay.cpp	/^bool TeOVERLAY::TeValidPolygonHoles(TePolygon& polygon, TePolygonSet& psValid)$/;"	f	class:TeOVERLAY
TeValidPolygonHoles	kernel/TeOverlay.cpp	/^bool TeOVERLAY::TeValidPolygonHoles(TePolygonSet& polygons, TePolygonSet& psValid)$/;"	f	class:TeOVERLAY
TeVector	kernel/TeGeometry.h	/^class TL_DLL TeVector : public TeGeometry$/;"	c
TeVectorBoundaryIP	kernel/TeIntersector.h	/^typedef vector<TeBoundaryIP> TeVectorBoundaryIP;$/;"	t	namespace:TeINTERSECTOR2
TeVectorRemap	kernel/TeVectorRemap.cpp	/^TeVectorRemap(TeCoord2D& c1, TeProjection* p1, TeCoord2D& c2, TeProjection* p2)$/;"	f
TeVectorRemap	kernel/TeVectorRemap.cpp	/^TeVectorRemap(TeText& t1, TeProjection* p1, TeText& t2, TeProjection* p2)$/;"	f
TeVectorRemap	kernel/TeVectorRemap.cpp	/^void TeVectorRemap(TeCell& c1, TeProjection* p1, TeCell& c2, TeProjection* p2)$/;"	f
TeVectorRemap	kernel/TeVectorRemap.cpp	/^void TeVectorRemap(TeCell& cell, TeProjection* projFrom, TeProjection* projTo)$/;"	f
TeVectorRemap	kernel/TeVectorRemap.cpp	/^void TeVectorRemap(TeCoord2D& coord, TeProjection* projFrom, TeProjection* projTo)$/;"	f
TeVectorRemap	kernel/TeVectorRemap.cpp	/^void TeVectorRemap(TeGeometry* geometry, TeProjection* projFrom, TeProjection* projTo)$/;"	f
TeVectorRemap	kernel/TeVectorRemap.h	/^void TeVectorRemap (G& g1, TeProjection* p1, G& g2, TeProjection* p2)$/;"	f
TeVectorRemap	kernel/TeVectorRemap.h	/^void TeVectorRemap (G& g1, TeProjection* projFrom, TeProjection* projTo)$/;"	f
TeView	kernel/TeView.h	/^    TeView( const string& name="", const string& user="", int id=0)$/;"	f	class:TeView
TeView	kernel/TeView.h	/^class TL_DLL TeView$/;"	c
TeViewMap	kernel/TeView.h	/^typedef map<int,TeView*> TeViewMap;$/;"	t
TeViewNameVector	kernel/TeProject.h	/^typedef vector<string> TeViewNameVector;$/;"	t
TeViewNode	kernel/TeViewNode.h	/^    TeViewNode(const TeViewNodeParams& viewNodeParams): $/;"	f	class:TeViewNode
TeViewNode	kernel/TeViewNode.h	/^    TeViewNode(const string& name="", TeViewNode* parent=0, const int& view=0, const int& id=0, const int& nodeType=0): $/;"	f	class:TeViewNode
TeViewNode	kernel/TeViewNode.h	/^class TL_DLL TeViewNode$/;"	c
TeViewNodeFactory	kernel/TeViewNode.h	/^	TeViewNodeFactory(const int& nodeType) : $/;"	f	class:TeViewNodeFactory
TeViewNodeFactory	kernel/TeViewNode.h	/^class TL_DLL TeViewNodeFactory : public TeAbstractFactory<TeViewNode,TeViewNodeParams, int>$/;"	c
TeViewNodeParams	kernel/TeViewNode.h	/^	TeViewNodeParams(const TeViewNodeParams& params)$/;"	f	class:TeViewNodeParams
TeViewNodeParams	kernel/TeViewNode.h	/^	TeViewNodeParams(const string& name="", const int& id=0, const int& viewId=0, $/;"	f	class:TeViewNodeParams
TeViewNodeParams	kernel/TeViewNode.h	/^class TL_DLL TeViewNodeParams$/;"	c
TeViewNodeType	kernel/TeViewNode.h	/^enum TeViewNodeType$/;"	g
TeViewTree	kernel/TeViewNode.h	/^	TeViewTree(const string& name=""): TeViewNode(name, 0, 0, 0, (int)TeTREE)$/;"	f	class:TeViewTree
TeViewTree	kernel/TeViewNode.h	/^    TeViewTree(const TeViewNodeParams& params): $/;"	f	class:TeViewTree
TeViewTree	kernel/TeViewNode.h	/^class TL_DLL TeViewTree: public TeViewNode$/;"	c
TeViewTreeFactory	kernel/TeViewNode.h	/^	TeViewTreeFactory() : TeViewNodeFactory((int)TeTREE)$/;"	f	class:TeViewTreeFactory
TeViewTreeFactory	kernel/TeViewNode.h	/^class TL_DLL TeViewTreeFactory : public TeViewNodeFactory$/;"	c
TeViewTreeIterator	kernel/TeViewTreeIterator.h	/^class TL_DLL TeViewTreeIterator$/;"	c
TeViewTreeIterator	kernel/TeViewTreeIterator.h	/^inline TeViewTreeIterator::TeViewTreeIterator(TeViewTree* root)$/;"	f	class:TeViewTreeIterator
TeViewTreeRevIterator	kernel/TeViewTreeIterator.h	/^class TL_DLL TeViewTreeRevIterator$/;"	c
TeViewTreeRevIterator	kernel/TeViewTreeIterator.h	/^inline TeViewTreeRevIterator::TeViewTreeRevIterator(TeViewTree* root)$/;"	f	class:TeViewTreeRevIterator
TeViewVector	kernel/TeProject.h	/^typedef vector<int> TeViewVector;$/;"	t
TeVirtualEarthMercator	kernel/TeProjection.h	/^	TeVirtualEarthMercator ( const TeDatum& datum,  $/;"	f	class:TeVirtualEarthMercator
TeVirtualEarthMercator	kernel/TeProjection.h	/^class TL_DLL TeVirtualEarthMercator : public TeProjection$/;"	c
TeVisual	kernel/TeVisual.cpp	/^TeVisual::TeVisual(TeGeomRep rep) : $/;"	f	class:TeVisual
TeVisual	kernel/TeVisual.cpp	/^TeVisual::TeVisual(const TeVisual& other)$/;"	f	class:TeVisual
TeVisual	kernel/TeVisual.h	/^class TL_DLL TeVisual$/;"	c
TeVisualFactory	kernel/TeVisual.h	/^	TeVisualFactory(const string& facName) : TeAbstractFactory<TeVisual, TeBaseVisualParams, string>(facName)$/;"	f	class:TeVisualFactory
TeVisualFactory	kernel/TeVisual.h	/^class TL_DLL TeVisualFactory : public TeAbstractFactory<TeVisual, TeBaseVisualParams, string>$/;"	c
TeWEEKOFYEAR	kernel/TeDataTypes.h	/^					TeDAYOFWEEK, TeDAYOFMONTH, TeDAYOFYEAR, TeMONTHOFYEAR, TeSEASON, TeWEEKOFYEAR, $/;"	e	enum:TeChronon
TeWITHIN	kernel/TeDataTypes.h	/^{	TeDISJOINT = 1, TeTOUCHES = 2, TeCROSSES = 4, TeWITHIN = 8, $/;"	e	enum:TeSpatialRelation
TeWKBGeometryDecoder	utils/TeWKBGeometryDecoder.h	/^namespace TeWKBGeometryDecoder$/;"	n
TeWKTGeometryDecoder	utils/TeWKTGeometryDecoder.h	/^namespace TeWKTGeometryDecoder$/;"	n
TeWaitCursor	drivers/qt/TeWaitCursor.cpp	/^TeWaitCursor::TeWaitCursor ()$/;"	f	class:TeWaitCursor
TeWaitCursor	drivers/qt/TeWaitCursor.h	/^class TL_DLL TeWaitCursor : public QCursor  {$/;"	c
TeWaveletAtrousDirection	image_processing/TePDIWaveletAtrous.hpp	/^      enum TeWaveletAtrousDirection {DECOMPOSE, RECOMPOSE};$/;"	g	class:TePDIWaveletAtrous
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TeBox& bx1, const TeBox& bx2)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TeCell& cell, const TePolygon& poly)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TeCell& cell1, const TeCell& cell2)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TeCoord2D& c, const TeBox& b)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TeCoord2D& c, const TeLine2D& l)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TeCoord2D& c, const TePolygon& pol)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TeCoord2D& c1, const TeCoord2D& c2)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TeLine2D& l, const TePolygon& pol)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TeLine2D& line, const TeCell& cell)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TeLine2D& redLine, const TeLine2D& blueLine)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TePoint& p, const TeLine2D& l)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TePoint& p, const TePolygon& pol)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TePoint& p1, const TePoint& p2)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TePoint& point, const TeCell& cell)$/;"	f
TeWithin	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithin(const TePolygon& redPol, const TePolygon& bluePol)$/;"	f
TeWithinOrCoveredByOrEquals	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithinOrCoveredByOrEquals(const TeBox& bx1, const TeBox& bx2)$/;"	f
TeWithinOrCoveredByOrEquals	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithinOrCoveredByOrEquals(const TeLine2D& line1, const TeLine2D& line2)$/;"	f
TeWithinOrCoveredByOrEquals	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithinOrCoveredByOrEquals(const TeLine2D& line1, const TePolygon& pol)$/;"	f
TeWithinOrCoveredByOrEquals	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithinOrCoveredByOrEquals(const TePolygon& pol1, const TePolygon& pol2)$/;"	f
TeWithinOrCoveredByOrEquals	kernel/TeGeometryAlgorithms.h	/^bool TeWithinOrCoveredByOrEquals(const T1& geom1, const T2& geom2)$/;"	f
TeWithinOrTouches	kernel/TeGeometryAlgorithms.cpp	/^bool TeWithinOrTouches(const TeCoord2D& c, const TeCoord2D& c1, const TeCoord2D& c2)$/;"	f
TeWriteDataProjectionToFile	drivers/shapelib/TeDriverSHPDBF.cpp	/^void TeWriteDataProjectionToFile(TeProjection* projection, const std::string& fileName)$/;"	f
TeWriteToFile	kernel/TeUtils.cpp	/^void TeWriteToFile(const string& fileName, const string& text, const string& mode)$/;"	f
TeYEAR	kernel/TeDataTypes.h	/^enum TeChronon {	TeNOCHRONON, TeSECOND, TeMINUTE, TeHOUR, TeDAY, TeMONTH, TeYEAR,$/;"	e	enum:TeChronon
TeZAndWZ	stat/TeSpatialStatistics.h	/^TeZAndWZ (Set* elemSet, Matrix* proxMatrix, int indexAttr)$/;"	f
TeZIPCODE	functions/TeAddressLocator.h	/^TLFUNCTIONS_DLL enum TeCentroidFieldType { TeNEIGHBORHOOD, TeZIPCODE };$/;"	e	enum:TeCentroidFieldType
TeZLib	kernel/TeRasterParams.h	/^	{ TeNoCompression, TeZLib, TeJpeg, TeTiffCompression };$/;"	e	enum:TeRasterParams::TeRasterCompressionMode
TeZonesSlicingStrategy	kernel/TeDataTypes.h	/^enum TeGPMSlicingStrategy { TeNoSlicingStrategy, TeZonesSlicingStrategy };$/;"	e	enum:TeGPMSlicingStrategy
Te_ABORTRETRYIGNORE	kernel/TeErrorMessage.h	/^{ Te_ABORTRETRYIGNORE, Te_OK, Te_OKCANCEL, Te_RETRYCANCEL, Te_YESNO, Te_YESNOCANCEL };$/;"	e	enum:TeMessageType
Te_ICONEXCLAMATION	kernel/TeErrorMessage.h	/^{	Te_ICONEXCLAMATION, Te_ICONINFORMATION, Te_ICONQUESTION, Te_ICONSTOP };$/;"	e	enum:TeMessageIcon
Te_ICONINFORMATION	kernel/TeErrorMessage.h	/^{	Te_ICONEXCLAMATION, Te_ICONINFORMATION, Te_ICONQUESTION, Te_ICONSTOP };$/;"	e	enum:TeMessageIcon
Te_ICONQUESTION	kernel/TeErrorMessage.h	/^{	Te_ICONEXCLAMATION, Te_ICONINFORMATION, Te_ICONQUESTION, Te_ICONSTOP };$/;"	e	enum:TeMessageIcon
Te_ICONSTOP	kernel/TeErrorMessage.h	/^{	Te_ICONEXCLAMATION, Te_ICONINFORMATION, Te_ICONQUESTION, Te_ICONSTOP };$/;"	e	enum:TeMessageIcon
Te_IDABORT	kernel/TeErrorMessage.h	/^{ Te_IDABORT, Te_IDCANCEL, Te_IDIGNORE, Te_IDNO, Te_IDOK, Te_IDRETRY, Te_IDYES };$/;"	e	enum:TeMessageReturn
Te_IDCANCEL	kernel/TeErrorMessage.h	/^{ Te_IDABORT, Te_IDCANCEL, Te_IDIGNORE, Te_IDNO, Te_IDOK, Te_IDRETRY, Te_IDYES };$/;"	e	enum:TeMessageReturn
Te_IDIGNORE	kernel/TeErrorMessage.h	/^{ Te_IDABORT, Te_IDCANCEL, Te_IDIGNORE, Te_IDNO, Te_IDOK, Te_IDRETRY, Te_IDYES };$/;"	e	enum:TeMessageReturn
Te_IDNO	kernel/TeErrorMessage.h	/^{ Te_IDABORT, Te_IDCANCEL, Te_IDIGNORE, Te_IDNO, Te_IDOK, Te_IDRETRY, Te_IDYES };$/;"	e	enum:TeMessageReturn
Te_IDOK	kernel/TeErrorMessage.h	/^{ Te_IDABORT, Te_IDCANCEL, Te_IDIGNORE, Te_IDNO, Te_IDOK, Te_IDRETRY, Te_IDYES };$/;"	e	enum:TeMessageReturn
Te_IDRETRY	kernel/TeErrorMessage.h	/^{ Te_IDABORT, Te_IDCANCEL, Te_IDIGNORE, Te_IDNO, Te_IDOK, Te_IDRETRY, Te_IDYES };$/;"	e	enum:TeMessageReturn
Te_IDYES	kernel/TeErrorMessage.h	/^{ Te_IDABORT, Te_IDCANCEL, Te_IDIGNORE, Te_IDNO, Te_IDOK, Te_IDRETRY, Te_IDYES };$/;"	e	enum:TeMessageReturn
Te_OK	kernel/TeErrorMessage.h	/^{ Te_ABORTRETRYIGNORE, Te_OK, Te_OKCANCEL, Te_RETRYCANCEL, Te_YESNO, Te_YESNOCANCEL };$/;"	e	enum:TeMessageType
Te_OKCANCEL	kernel/TeErrorMessage.h	/^{ Te_ABORTRETRYIGNORE, Te_OK, Te_OKCANCEL, Te_RETRYCANCEL, Te_YESNO, Te_YESNOCANCEL };$/;"	e	enum:TeMessageType
Te_RETRYCANCEL	kernel/TeErrorMessage.h	/^{ Te_ABORTRETRYIGNORE, Te_OK, Te_OKCANCEL, Te_RETRYCANCEL, Te_YESNO, Te_YESNOCANCEL };$/;"	e	enum:TeMessageType
Te_SPR_H	functions/TeImportSPR.h	10;"	d
Te_YESNO	kernel/TeErrorMessage.h	/^{ Te_ABORTRETRYIGNORE, Te_OK, Te_OKCANCEL, Te_RETRYCANCEL, Te_YESNO, Te_YESNOCANCEL };$/;"	e	enum:TeMessageType
Te_YESNOCANCEL	kernel/TeErrorMessage.h	/^{ Te_ABORTRETRYIGNORE, Te_OK, Te_OKCANCEL, Te_RETRYCANCEL, Te_YESNO, Te_YESNOCANCEL };$/;"	e	enum:TeMessageType
Tem_Pop	stat/TeSkaterGrafo.h	/^    char Tem_Pop;$/;"	m	class:TSkaterGrafo
TermOffset	drivers/SQLite/sqlite3/sqlite3.c	/^struct TermOffset {$/;"	s	file:
TermOffset	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct TermOffset TermOffset;$/;"	t	typeref:struct:TermOffset	file:
TermOffsetCtx	drivers/SQLite/sqlite3/sqlite3.c	/^struct TermOffsetCtx {$/;"	s	file:
TermOffsetCtx	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct TermOffsetCtx TermOffsetCtx;$/;"	t	typeref:struct:TermOffsetCtx	file:
TermSelect	drivers/SQLite/sqlite3/sqlite3.c	/^struct TermSelect {$/;"	s	file:
TermSelect	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct TermSelect TermSelect;$/;"	t	typeref:struct:TermSelect	file:
Terms	kernel/TeGraph.cpp	/^unsigned Terms[] =$/;"	v
TerrainProfile	kernel/TeProfile1.cpp	/^typedef std::map<double,double> TerrainProfile;$/;"	t	file:
TestInnerRings	kernel/TeGeometryAlgorithms.cpp	/^short TestInnerRings(const TePolygon& pRed, vector<TeLinearRing>& rings)$/;"	f
Text_color	kernel/TeGraph.cpp	/^} Text_color;$/;"	v	typeref:struct:Txtc
Theta	kernel/TeGeometryAlgorithms.cpp	/^double Theta(const TeCoord2D& c1, const TeCoord2D& c2)$/;"	f
ThetaOrder	kernel/TeGeometryAlgorithms.cpp	/^	ThetaOrder(const TeCoord2D& c)$/;"	f	struct:ThetaOrder
ThetaOrder	kernel/TeGeometryAlgorithms.cpp	/^struct ThetaOrder$/;"	s	file:
ThreeBand2LUTThreeBand	kernel/TeRasterTransform.h	/^	void ThreeBand2LUTThreeBand(double icol, double ilin, double ocol, double olin)$/;"	f	class:TeRasterTransform
ThreeBand2RGB	kernel/TeRasterTransform.h	/^	void ThreeBand2RGB(double icol, double ilin, double ocol, double olin)$/;"	f	class:TeRasterTransform
TileDataT	kernel/TeRasterMemManager.h	/^      typedef unsigned char TileDataT;    $/;"	t	class:TeRasterMemManager
TilePtrT	kernel/TeRasterMemManager.h	/^      typedef TileDataT* TilePtrT;$/;"	t	class:TeRasterMemManager
TilesPtrsVecT	kernel/TeRasterMemManager.h	/^      typedef std::vector< TilePtrT > TilesPtrsVecT;   $/;"	t	class:TeRasterMemManager
TimKdTreeNode	kernel/TeTin.h	/^typedef TeSAM::TeKdTreeNode<TeCoord2D, unsigned int, unsigned int> TimKdTreeNode;$/;"	t
Time	drivers/Firebird/ibpp/core/ibpp.h	/^		Time()			{ Clear(); }$/;"	f	class:IBPP::Time
Time	drivers/Firebird/ibpp/core/ibpp.h	/^		Time(int tm)	{ SetTime(tm); }$/;"	f	class:IBPP::Time
Time	drivers/Firebird/ibpp/core/ibpp.h	/^	class Time$/;"	c	namespace:IBPP
Time	drivers/Firebird/ibpp/core/time.cpp	/^IBPP::Time::Time(const IBPP::Time& copied)$/;"	f	class:IBPP::Time
Time	drivers/Firebird/ibpp/core/time.cpp	/^IBPP::Time::Time(int hour, int minute, int second, int tenthousandths)$/;"	f	class:IBPP::Time
Timestamp	drivers/Firebird/ibpp/core/ibpp.h	/^		Timestamp()		{ Clear(); }$/;"	f	class:IBPP::Timestamp
Timestamp	drivers/Firebird/ibpp/core/ibpp.h	/^		Timestamp(const Date& rv)$/;"	f	class:IBPP::Timestamp
Timestamp	drivers/Firebird/ibpp/core/ibpp.h	/^		Timestamp(const Time& rv)$/;"	f	class:IBPP::Timestamp
Timestamp	drivers/Firebird/ibpp/core/ibpp.h	/^		Timestamp(const Timestamp& rv)$/;"	f	class:IBPP::Timestamp
Timestamp	drivers/Firebird/ibpp/core/ibpp.h	/^		Timestamp(int y, int mo, int d, int h, int mi, int s, int t = 0)$/;"	f	class:IBPP::Timestamp
Timestamp	drivers/Firebird/ibpp/core/ibpp.h	/^	  	Timestamp(int y, int m, int d)$/;"	f	class:IBPP::Timestamp
Timestamp	drivers/Firebird/ibpp/core/ibpp.h	/^	class Timestamp : public Date, public Time$/;"	c	namespace:IBPP
Timestamp	drivers/Oracle/OCI/include/occiData.h	/^class Timestamp$/;"	c	namespace:oracle::occi
TipoHeap	stat/heap.h	/^    typedef struct TipoHeap {$/;"	s	class:THeap
TipoHeap_ptr	stat/heap.h	/^      }TipoHeap_t,*TipoHeap_ptr;$/;"	t	class:THeap	typeref:struct:THeap::TipoHeap
TipoHeap_t	stat/heap.h	/^      }TipoHeap_t,*TipoHeap_ptr;$/;"	t	class:THeap	typeref:struct:THeap::TipoHeap
Title_y	kernel/TeGraph.h	/^	int Title_y;           \/* y pixel coordinate of main title *\/$/;"	m	class:TeGraphPlot
ToLower	drivers/SQLite/sqlite3/shell.c	91;"	d	file:
Today	drivers/Firebird/ibpp/core/date.cpp	/^void IBPP::Date::Today()$/;"	f	class:IBPP::Date
Today	drivers/Firebird/ibpp/core/ibpp.h	/^		void Today()	{ Date::Today(); Time::Clear(); }$/;"	f	class:IBPP::Timestamp
Toggle	image_processing/TePDIPIManager.cpp	/^void TePDIPIManager::Toggle( bool enabled )$/;"	f	class:TePDIPIManager
ToggleProgInt	image_processing/TePDIAlgorithm.cpp	/^void TePDIAlgorithm::ToggleProgInt( bool enabled )$/;"	f	class:TePDIAlgorithm
ToggleProgInt	image_processing/TePDIStrategy.cpp	/^void TePDIStrategy::ToggleProgInt( bool enabled )$/;"	f	class:TePDIStrategy
ToggleProgressInt	image_processing/TePDIHistogram.cpp	/^void TePDIHistogram::ToggleProgressInt( bool enabled )$/;"	f	class:TePDIHistogram
Token	drivers/SQLite/sqlite3/sqlite3.c	/^struct Token {$/;"	s	file:
Token	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Token Token;$/;"	t	typeref:struct:Token	file:
TopologicRelation	kernel/TeGeometryAlgorithms.cpp	/^short TopologicRelation(const TeLine2D& line, const TeLinearRing& r)$/;"	f
TopologicRelation	kernel/TeGeometryAlgorithms.cpp	/^short TopologicRelation(const TeLinearRing& rRed, const TeLinearRing& rBlue)$/;"	f
Transaction	drivers/Firebird/ibpp/core/ibpp.h	/^	class ITransaction;		typedef Ptr<ITransaction> Transaction;$/;"	t	namespace:IBPP
TransactionFactory	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	Transaction TransactionFactory(Database db, TAM am,$/;"	f	namespace:IBPP
TransactionImpl	drivers/Firebird/ibpp/core/_ibpp.h	/^class TransactionImpl : public IBPP::ITransaction$/;"	c	namespace:ibpp_internals
TransactionImpl	drivers/Firebird/ibpp/core/transaction.cpp	/^TransactionImpl::TransactionImpl(DatabaseImpl* db,$/;"	f	class:TransactionImpl
TransactionPtr	drivers/Firebird/ibpp/core/array.cpp	/^IBPP::Transaction ArrayImpl::TransactionPtr() const$/;"	f	class:ArrayImpl
TransactionPtr	drivers/Firebird/ibpp/core/blob.cpp	/^IBPP::Transaction BlobImpl::TransactionPtr() const$/;"	f	class:BlobImpl
TransactionPtr	drivers/Firebird/ibpp/core/row.cpp	/^IBPP::Transaction RowImpl::TransactionPtr() const$/;"	f	class:RowImpl
TransactionPtr	drivers/Firebird/ibpp/core/statement.cpp	/^IBPP::Transaction StatementImpl::TransactionPtr() const$/;"	f	class:StatementImpl
TransformFunction	kernel/TeRasterTransform.h	/^	typedef void (TeRasterTransform::*TransformFunction)(double, double, double, double);$/;"	t	class:TeRasterTransform
Transpose	kernel/TeMatrix.cpp	/^TeMatrix::Transpose( TeMatrix &rm ) const$/;"	f	class:TeMatrix
TravStack	kernel/TeViewTreeIterator.h	/^  std::stack<StackElem> TravStack; \/\/ traversal stack$/;"	m	class:TeViewTreeRevIterator
TravStack	kernel/TeViewTreeIterator.h	/^  std::stack<StackElem> TravStack; \/\/!< traversal stack$/;"	m	class:TeViewTreeIterator
TriangleFilter	image_processing/TePDIWaveletAtrous.hpp	/^        TriangleFilter$/;"	e	enum:TePDIWaveletAtrous::FilterType
TrigEvent	drivers/SQLite/sqlite3/sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	s	file:
Trigger	drivers/SQLite/sqlite3/sqlite3.c	/^struct Trigger {$/;"	s	file:
Trigger	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Trigger Trigger;$/;"	t	typeref:struct:Trigger	file:
TriggerPrg	drivers/SQLite/sqlite3/sqlite3.c	/^struct TriggerPrg {$/;"	s	file:
TriggerPrg	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct TriggerPrg TriggerPrg;$/;"	t	typeref:struct:TriggerPrg	file:
TriggerStep	drivers/SQLite/sqlite3/sqlite3.c	/^struct TriggerStep {$/;"	s	file:
TriggerStep	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct TriggerStep TriggerStep;$/;"	t	typeref:struct:TriggerStep	file:
TrimTrailingZeros	drivers/PostgreSQL/TePGInterface.cpp	/^inline void TrimTrailingZeros(char *str)$/;"	f
Txtc	kernel/TeGraph.cpp	/^struct Txtc{$/;"	s	file:
Type	drivers/Firebird/ibpp/core/_ibpp.h	/^	IBPP::STT Type() { return mType; }$/;"	f	class:ibpp_internals::StatementImpl
Type	drivers/Oracle/OCI/include/occiCommon.h	/^enum Type$/;"	g	namespace:oracle::occi
Type	kernel/TeComputeAttributeStrategies.h	/^		virtual TeAttrDataType Type() { return TeINT; }$/;"	f	class:TeCountObjectsStrategy
Type	kernel/TeComputeAttributeStrategies.h	/^		virtual TeAttrDataType Type() { return TeREAL; }$/;"	f	class:TeComputeSpatialStrategy
TypeCode	drivers/Oracle/OCI/include/occiCommon.h	/^enum TypeCode$/;"	g	namespace:oracle::occi
UB1BITS	drivers/Oracle/OCI/include/oratypes.h	115;"	d
UB1MASK	drivers/Oracle/OCI/include/oratypes.h	116;"	d
UB1MAXVAL	drivers/Oracle/OCI/include/oratypes.h	40;"	d
UB1MINVAL	drivers/Oracle/OCI/include/oratypes.h	41;"	d
UB2MAXVAL	drivers/Oracle/OCI/include/oratypes.h	60;"	d
UB2MINVAL	drivers/Oracle/OCI/include/oratypes.h	61;"	d
UB4MAXVAL	drivers/Oracle/OCI/include/oratypes.h	79;"	d
UB4MINVAL	drivers/Oracle/OCI/include/oratypes.h	80;"	d
UBIGORABITS	drivers/Oracle/OCI/include/oratypes.h	255;"	d
UBIG_ORAMAXVAL	drivers/Oracle/OCI/include/oratypes.h	225;"	d
UBIG_ORAMAXVAL	drivers/Oracle/OCI/include/oratypes.h	244;"	d
UBIG_ORAMINVAL	drivers/Oracle/OCI/include/oratypes.h	226;"	d
UBIG_ORAMINVAL	drivers/Oracle/OCI/include/oratypes.h	245;"	d
UGLMESA_H	drivers/GL/uglmesa.h	35;"	d
UGL_MESA_COLOR_FORMAT	drivers/GL/uglmesa.h	90;"	d
UGL_MESA_COLOR_INDEXED	drivers/GL/uglmesa.h	95;"	d
UGL_MESA_COLOR_MODEL	drivers/GL/uglmesa.h	91;"	d
UGL_MESA_CONTEXT	drivers/GL/uglmesa.h	/^typedef struct uglMesaContext * UGL_MESA_CONTEXT;$/;"	t	typeref:struct:uglMesaContext
UGL_MESA_DISPLAY_HEIGHT	drivers/GL/uglmesa.h	89;"	d
UGL_MESA_DISPLAY_WIDTH	drivers/GL/uglmesa.h	88;"	d
UGL_MESA_DOUBLE	drivers/GL/uglmesa.h	64;"	d
UGL_MESA_DOUBLE_BUFFER	drivers/GL/uglmesa.h	97;"	d
UGL_MESA_DOUBLE_BUFFER_HARDWARE	drivers/GL/uglmesa.h	99;"	d
UGL_MESA_DOUBLE_BUFFER_SOFTWARE	drivers/GL/uglmesa.h	98;"	d
UGL_MESA_DOUBLE_HARDWARE	drivers/GL/uglmesa.h	66;"	d
UGL_MESA_DOUBLE_SOFTWARE	drivers/GL/uglmesa.h	65;"	d
UGL_MESA_FULLSCREEN_HEIGHT	drivers/GL/uglmesa.h	71;"	d
UGL_MESA_FULLSCREEN_WIDTH	drivers/GL/uglmesa.h	70;"	d
UGL_MESA_HEIGHT	drivers/GL/uglmesa.h	87;"	d
UGL_MESA_LEFT_X	drivers/GL/uglmesa.h	84;"	d
UGL_MESA_MAJOR_VERSION	drivers/GL/uglmesa.h	41;"	d
UGL_MESA_MINOR_VERSION	drivers/GL/uglmesa.h	42;"	d
UGL_MESA_PIXEL_FORMAT	drivers/GL/uglmesa.h	92;"	d
UGL_MESA_RGB	drivers/GL/uglmesa.h	94;"	d
UGL_MESA_ROW_LENGTH	drivers/GL/uglmesa.h	77;"	d
UGL_MESA_SINGLE	drivers/GL/uglmesa.h	63;"	d
UGL_MESA_SINGLE_BUFFER	drivers/GL/uglmesa.h	96;"	d
UGL_MESA_TOP_Y	drivers/GL/uglmesa.h	85;"	d
UGL_MESA_TYPE	drivers/GL/uglmesa.h	93;"	d
UGL_MESA_WIDTH	drivers/GL/uglmesa.h	86;"	d
UGL_MESA_WINDML_EXCLUSIVE	drivers/GL/uglmesa.h	68;"	d
UGL_MESA_Y_UP	drivers/GL/uglmesa.h	78;"	d
UINT16_TYPE	drivers/SQLite/sqlite3/sqlite3.c	7701;"	d	file:
UINT16_TYPE	drivers/SQLite/sqlite3/sqlite3.c	7703;"	d	file:
UINT32_TYPE	drivers/SQLite/sqlite3/sqlite3.c	7694;"	d	file:
UINT32_TYPE	drivers/SQLite/sqlite3/sqlite3.c	7696;"	d	file:
UINT8_TYPE	drivers/SQLite/sqlite3/sqlite3.c	7715;"	d	file:
UINT8_TYPE	drivers/SQLite/sqlite3/sqlite3.c	7717;"	d	file:
UIQI	image_processing/TePDIFusionIndexes.hpp	/^      enum TeFusionIndexes {CC, BIAS, VARDIF, SDD, UIQI, RMSE, ERGAS, SIMM, SERGAS, SCC};$/;"	e	enum:TePDIFusionIndexes::TeFusionIndexes
UNABLE_TO_OPEN_DBF_FILE	kernel/TeErrorLog.h	/^    UNABLE_TO_OPEN_DBF_FILE,$/;"	e	enum:TeErrorType
UNHANDLED_SHP_TYPE	kernel/TeErrorLog.h	/^    UNHANDLED_SHP_TYPE,$/;"	e	enum:TeErrorType
UNIXFILE_DIRSYNC	drivers/SQLite/sqlite3/sqlite3.c	24652;"	d	file:
UNIXFILE_DIRSYNC	drivers/SQLite/sqlite3/sqlite3.c	24654;"	d	file:
UNIXFILE_EXCL	drivers/SQLite/sqlite3/sqlite3.c	24648;"	d	file:
UNIXFILE_PERSIST_WAL	drivers/SQLite/sqlite3/sqlite3.c	24650;"	d	file:
UNIXFILE_RDONLY	drivers/SQLite/sqlite3/sqlite3.c	24649;"	d	file:
UNIXVFS	drivers/SQLite/sqlite3/sqlite3.c	31298;"	d	file:
UNIX_EPOCH_JDATE	drivers/PostgreSQL/TePGInterface.cpp	198;"	d	file:
UNIX_SHM_BASE	drivers/SQLite/sqlite3/sqlite3.c	28242;"	d	file:
UNIX_SHM_DMS	drivers/SQLite/sqlite3/sqlite3.c	28243;"	d	file:
UNKNOWN_DECODER_TECHNOLOGY_TYPE	kernel/TeErrorLog.h	/^    UNKNOWN_DECODER_TECHNOLOGY_TYPE,$/;"	e	enum:TeErrorType
UNKNOWN_ERROR_TYPE	kernel/TeErrorLog.h	/^	UNKNOWN_ERROR_TYPE$/;"	e	enum:TeErrorType
UNKNOWN_LOCK	drivers/SQLite/sqlite3/sqlite3.c	37730;"	d	file:
UNKNOWN_RASTER_FORMAT	kernel/TeErrorLog.h	/^    UNKNOWN_RASTER_FORMAT,$/;"	e	enum:TeErrorType
UNK_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        UNK_ATTR_COUNT = 0$/;"	e	enum:oracle::occi::MetaData::AttrCount
UNPACKED_IGNORE_ROWID	drivers/SQLite/sqlite3/sqlite3.c	10134;"	d	file:
UNPACKED_INCRKEY	drivers/SQLite/sqlite3/sqlite3.c	10135;"	d	file:
UNPACKED_NEED_DESTROY	drivers/SQLite/sqlite3/sqlite3.c	10133;"	d	file:
UNPACKED_NEED_FREE	drivers/SQLite/sqlite3/sqlite3.c	10132;"	d	file:
UNPACKED_PREFIX_MATCH	drivers/SQLite/sqlite3/sqlite3.c	10136;"	d	file:
UNPACKED_PREFIX_SEARCH	drivers/SQLite/sqlite3/sqlite3.c	10137;"	d	file:
UNPREPARED	drivers/Oracle/OCI/include/occiControl.h	/^    UNPREPARED,$/;"	e	enum:oracle::occi::Statement::Status
UNUSED_PARAMETER	drivers/SQLite/sqlite3/shell.c	213;"	d	file:
UNUSED_PARAMETER	drivers/SQLite/sqlite3/sqlite3.c	114528;"	d	file:
UNUSED_PARAMETER	drivers/SQLite/sqlite3/sqlite3.c	127949;"	d	file:
UNUSED_PARAMETER	drivers/SQLite/sqlite3/sqlite3.c	7901;"	d	file:
UNUSED_PARAMETER2	drivers/SQLite/sqlite3/sqlite3.c	7902;"	d	file:
UPDATE_COUNT_AVAILABLE	drivers/Oracle/OCI/include/occiControl.h	/^    UPDATE_COUNT_AVAILABLE,$/;"	e	enum:oracle::occi::Statement::Status
UPDATE_MAX_BLOBSIZE	drivers/SQLite/sqlite3/sqlite3.c	63018;"	d	file:
UPDATE_MAX_BLOBSIZE	drivers/SQLite/sqlite3/sqlite3.c	63020;"	d	file:
USER_SEC_DATA	drivers/Firebird/ibpp/core/ibase.h	/^} USER_SEC_DATA;$/;"	t	typeref:struct:__anon65
USE_LDAP	drivers/Oracle/OCI/include/occiControl.h	/^    USE_LDAP = OCI_USE_LDAP$/;"	e	enum:oracle::occi::Environment::Mode
UString	drivers/Oracle/OCI/include/occiCommon.h	/^typedef OCCI_STD_NAMESPACE::basic_string<utext> UString;$/;"	t	namespace:oracle::occi
UWORDMAXVAL	drivers/Oracle/OCI/include/oratypes.h	203;"	d
UWORDMINVAL	drivers/Oracle/OCI/include/oratypes.h	204;"	d
UnixUnusedFd	drivers/SQLite/sqlite3/sqlite3.c	/^struct UnixUnusedFd {$/;"	s	file:
UnixUnusedFd	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct UnixUnusedFd UnixUnusedFd;     \/* An unused file descriptor *\/$/;"	t	typeref:struct:UnixUnusedFd	file:
UnlockFile	drivers/SQLite/sqlite3/sqlite3.c	32329;"	d	file:
UnpackedRecord	drivers/SQLite/sqlite3/sqlite3.c	/^struct UnpackedRecord {$/;"	s	file:
UnpackedRecord	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct UnpackedRecord UnpackedRecord;$/;"	t	typeref:struct:UnpackedRecord	file:
UnpinOption	drivers/Oracle/OCI/include/occiObjects.h	/^        enum UnpinOption {OCCI_PINCOUNT_DECR, OCCI_PINCOUNT_RESET};$/;"	g	class:oracle::occi::PObject
UpArrow	drivers/qt/TeQtCanvas.h	/^		 UpArrow, Edit, Distance, Information, ZoomIn, ZoomOut };$/;"	e	enum:TeQtCanvas::CursorMode
UpHeap	stat/heap.cpp	/^void THeap::UpHeap(int i){$/;"	f	class:THeap
UpSampleMatrix	image_processing/TePDIMallatWavelets.cpp	/^bool TePDIMallatWavelets::UpSampleMatrix( const TePDIMatrix< double >& in,$/;"	f	class:TePDIMallatWavelets
Update	image_processing/TePDIPIManager.cpp	/^bool TePDIPIManager::Update( unsigned long int step )$/;"	f	class:TePDIPIManager
Update	image_processing/TePDIRegGrowSeg.hpp	/^        Update( TePDIRGSCell *cell, float dist )$/;"	f	class:CloserCells
UpdateProgInt	image_processing/TePDIAlgorithm.cpp	/^bool TePDIAlgorithm::UpdateProgInt( unsigned int step )$/;"	f	class:TePDIAlgorithm
Updated	drivers/Firebird/ibpp/core/row.cpp	/^bool RowImpl::Updated()$/;"	f	class:RowImpl
UpperToLower	drivers/SQLite/sqlite3/sqlite3.c	20846;"	d	file:
User	drivers/Firebird/ibpp/core/ibpp.h	/^		User() : userid(0), groupid(0)	{ }$/;"	f	class:IBPP::User
User	drivers/Firebird/ibpp/core/ibpp.h	/^		User(const User& r)				{ copyfrom(r); }$/;"	f	class:IBPP::User
User	drivers/Firebird/ibpp/core/ibpp.h	/^	class User$/;"	c	namespace:IBPP
UserPassword	drivers/Firebird/ibpp/core/_ibpp.h	/^	const char* UserPassword() const	{ return mUserPassword.c_str(); }$/;"	f	class:ibpp_internals::DatabaseImpl
Username	drivers/Firebird/ibpp/core/_ibpp.h	/^	const char* Username() const		{ return mUserName.c_str(); }$/;"	f	class:ibpp_internals::DatabaseImpl
Users	drivers/Firebird/ibpp/core/database.cpp	/^void DatabaseImpl::Users(std::vector<std::string>& users)$/;"	f	class:DatabaseImpl
VARCHAR2_TYPE	drivers/Oracle/OCI/include/ocidem.h	47;"	d
VARDIF	image_processing/TePDIFusionIndexes.hpp	/^      enum TeFusionIndexes {CC, BIAS, VARDIF, SDD, UIQI, RMSE, ERGAS, SIMM, SERGAS, SCC};$/;"	e	enum:TePDIFusionIndexes::TeFusionIndexes
VARIANT_GUTTMAN_LINEAR_SPLIT	drivers/SQLite/sqlite3/sqlite3.c	127907;"	d	file:
VARIANT_GUTTMAN_QUADRATIC_SPLIT	drivers/SQLite/sqlite3/sqlite3.c	127906;"	d	file:
VARIANT_GUTTMAN_SPLIT	drivers/SQLite/sqlite3/sqlite3.c	127910;"	d	file:
VARIANT_RSTARTREE_CHOOSESUBTREE	drivers/SQLite/sqlite3/sqlite3.c	127900;"	d	file:
VARIANT_RSTARTREE_REINSERT	drivers/SQLite/sqlite3/sqlite3.c	127901;"	d	file:
VARIANT_RSTARTREE_SPLIT	drivers/SQLite/sqlite3/sqlite3.c	127908;"	d	file:
VAR_NOT_IN_LIST	drivers/Oracle/OCI/include/ocidem.h	56;"	d
VDBE_MAGIC_DEAD	drivers/SQLite/sqlite3/sqlite3.c	12932;"	d	file:
VDBE_MAGIC_HALT	drivers/SQLite/sqlite3/sqlite3.c	12931;"	d	file:
VDBE_MAGIC_INIT	drivers/SQLite/sqlite3/sqlite3.c	12929;"	d	file:
VDBE_MAGIC_RUN	drivers/SQLite/sqlite3/sqlite3.c	12930;"	d	file:
VERT_FONT	kernel/TeGraph.cpp	51;"	d	file:
VIEW	drivers/qt/TeQtCheckListItem.h	/^	enum ItemType {DATABASE, INFOLAYER, VIEW, THEME, LEGENDTITLE, LEGEND, CHARTTITLE, CHART};$/;"	e	enum:TeQtCheckListItem::ItemType
VIEW_ATTR_COUNT	drivers/Oracle/OCI/include/occiControl.h	/^        VIEW_ATTR_COUNT = 7, $/;"	e	enum:oracle::occi::MetaData::AttrCount
VMS_X_FIX	drivers/GL/vms_x_fix.h	12;"	d
VTable	drivers/SQLite/sqlite3/sqlite3.c	/^struct VTable {$/;"	s	file:
VTable	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct VTable VTable;$/;"	t	typeref:struct:VTable	file:
VVA_ONLY	drivers/SQLite/sqlite3/sqlite3.c	489;"	d	file:
VVA_ONLY	drivers/SQLite/sqlite3/sqlite3.c	491;"	d	file:
Value	kernel/TeSparseMatrix.h	/^   ValueType Value(iterator& I) const$/;"	f	class:TeSparseMatrix
VariancePreProcessing	image_processing/TePDIGeneralizedIHSFusion.hpp	/^        VariancePreProcessing = 1,$/;"	e	enum:TePDIGeneralizedIHSFusion::PreProcessingType
Variaveis	stat/TeSkaterGrafo.h	/^      double *Variaveis;$/;"	m	struct:TSkaterGrafo::No_Grafo
Vdbe	drivers/SQLite/sqlite3/sqlite3.c	/^struct Vdbe {$/;"	s	file:
Vdbe	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Vdbe Vdbe;$/;"	t	typeref:struct:Vdbe	file:
VdbeComment	drivers/SQLite/sqlite3/sqlite3.c	8618;"	d	file:
VdbeComment	drivers/SQLite/sqlite3/sqlite3.c	8622;"	d	file:
VdbeCursor	drivers/SQLite/sqlite3/sqlite3.c	/^struct VdbeCursor {$/;"	s	file:
VdbeCursor	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct VdbeCursor VdbeCursor;$/;"	t	typeref:struct:VdbeCursor	file:
VdbeFrame	drivers/SQLite/sqlite3/sqlite3.c	/^struct VdbeFrame {$/;"	s	file:
VdbeFrame	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct VdbeFrame VdbeFrame;$/;"	t	typeref:struct:VdbeFrame	file:
VdbeFrameMem	drivers/SQLite/sqlite3/sqlite3.c	12725;"	d	file:
VdbeFunc	drivers/SQLite/sqlite3/sqlite3.c	/^struct VdbeFunc {$/;"	s	file:
VdbeFunc	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct VdbeFunc VdbeFunc;$/;"	t	typeref:struct:VdbeFunc	file:
VdbeNoopComment	drivers/SQLite/sqlite3/sqlite3.c	8620;"	d	file:
VdbeNoopComment	drivers/SQLite/sqlite3/sqlite3.c	8623;"	d	file:
VdbeOp	drivers/SQLite/sqlite3/sqlite3.c	/^struct VdbeOp {$/;"	s	file:
VdbeOp	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct VdbeOp VdbeOp;$/;"	t	typeref:struct:VdbeOp	file:
VdbeOpIter	drivers/SQLite/sqlite3/sqlite3.c	/^struct VdbeOpIter {$/;"	s	file:
VdbeOpIter	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct VdbeOpIter VdbeOpIter;$/;"	t	typeref:struct:VdbeOpIter	file:
VdbeOpList	drivers/SQLite/sqlite3/sqlite3.c	/^struct VdbeOpList {$/;"	s	file:
VdbeOpList	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct VdbeOpList VdbeOpList;$/;"	t	typeref:struct:VdbeOpList	file:
VdbeSorter	drivers/SQLite/sqlite3/sqlite3.c	/^struct VdbeSorter {$/;"	s	file:
VdbeSorter	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct VdbeSorter VdbeSorter;$/;"	t	typeref:struct:VdbeSorter	file:
VdbeSorterIter	drivers/SQLite/sqlite3/sqlite3.c	/^struct VdbeSorterIter {$/;"	s	file:
VdbeSorterIter	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct VdbeSorterIter VdbeSorterIter;$/;"	t	typeref:struct:VdbeSorterIter	file:
VectorKeyT	drivers/spl/PluginsParametersContainer.h	/^        TeSharedPtr< PPCNodeInterface > > VectorKeyT;$/;"	t	class:PluginsParametersContainer
VectorT	drivers/spl/PluginsParametersContainer.h	/^      typedef typename std::vector< VectorKeyT > VectorT;$/;"	t	class:PluginsParametersContainer
Version	drivers/Firebird/ibpp/core/ibpp.h	/^	const uint32_t Version = (2<<24) + (5<<16) + (3<<8) + 1; \/\/ Version == 2.5.3.1$/;"	m	namespace:IBPP
Version_OCIXADMethodEntry	drivers/Oracle/OCI/include/ocixad.h	/^  ub4                       Version_OCIXADMethodEntry;$/;"	m	struct:OCIXADMethodEntry
VertStatus	kernel/graph.h	/^	enum VertStatus {notVisited, visited, processed};$/;"	g	namespace:br_stl
Visibility	drivers/Oracle/OCI/include/occiAQ.h	/^     enum Visibility$/;"	g	class:oracle::occi::aq::Consumer
Visibility	drivers/Oracle/OCI/include/occiAQ.h	/^     enum Visibility$/;"	g	class:oracle::occi::aq::Producer
Vizinho	stat/lista.h	/^    typedef struct Vizinho {$/;"	s	class:TListaVizinho
Vizinho_ptr	stat/lista.h	/^    }Vizinho_t,*Vizinho_ptr;$/;"	t	class:TListaVizinho	typeref:struct:TListaVizinho::Vizinho
Vizinho_t	stat/lista.h	/^    }Vizinho_t,*Vizinho_ptr;$/;"	t	class:TListaVizinho	typeref:struct:TListaVizinho::Vizinho
Vizinhos	stat/TeSkaterGrafo.h	/^      TListaVizinho *Vizinhos;$/;"	m	struct:TSkaterGrafo::No_Grafo
VtabCtx	drivers/SQLite/sqlite3/sqlite3.c	/^struct VtabCtx {$/;"	s	file:
VtabCtx	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct VtabCtx VtabCtx;$/;"	t	typeref:struct:VtabCtx	file:
W	image_processing/TePDIEMClas.hpp	/^      long W, H;$/;"	m	class:TePDIEMClas
W	image_processing/TePDIIsosegClas.hpp	/^    long W, H;$/;"	m	class:TePDIIsosegClas
W	image_processing/TePDIRaster2Vector.cpp	44;"	d	file:
WAIT	drivers/Oracle/OCI/include/occiControl.h	/^       WAIT = OCI_SPOOL_ATTRVAL_WAIT,$/;"	e	enum:oracle::occi::StatelessConnectionPool::BusyOption
WALINDEX_HDR_SIZE	drivers/SQLite/sqlite3/sqlite3.c	44565;"	d	file:
WALINDEX_LOCK_OFFSET	drivers/SQLite/sqlite3/sqlite3.c	44563;"	d	file:
WALINDEX_LOCK_RESERVED	drivers/SQLite/sqlite3/sqlite3.c	44564;"	d	file:
WALINDEX_MAX_VERSION	drivers/SQLite/sqlite3/sqlite3.c	44458;"	d	file:
WALINDEX_PGSZ	drivers/SQLite/sqlite3/sqlite3.c	44687;"	d	file:
WALTRACE	drivers/SQLite/sqlite3/sqlite3.c	44439;"	d	file:
WALTRACE	drivers/SQLite/sqlite3/sqlite3.c	44441;"	d	file:
WAL_ALL_BUT_WRITE	drivers/SQLite/sqlite3/sqlite3.c	44465;"	d	file:
WAL_CKPT_LOCK	drivers/SQLite/sqlite3/sqlite3.c	44466;"	d	file:
WAL_EXCLUSIVE_MODE	drivers/SQLite/sqlite3/sqlite3.c	44624;"	d	file:
WAL_FRAME_HDRSIZE	drivers/SQLite/sqlite3/sqlite3.c	44568;"	d	file:
WAL_HDRSIZE	drivers/SQLite/sqlite3/sqlite3.c	44572;"	d	file:
WAL_HEAPMEMORY_MODE	drivers/SQLite/sqlite3/sqlite3.c	44625;"	d	file:
WAL_MAGIC	drivers/SQLite/sqlite3/sqlite3.c	44583;"	d	file:
WAL_MAX_VERSION	drivers/SQLite/sqlite3/sqlite3.c	44457;"	d	file:
WAL_NORMAL_MODE	drivers/SQLite/sqlite3/sqlite3.c	44623;"	d	file:
WAL_NREADER	drivers/SQLite/sqlite3/sqlite3.c	44469;"	d	file:
WAL_RDONLY	drivers/SQLite/sqlite3/sqlite3.c	44631;"	d	file:
WAL_RDWR	drivers/SQLite/sqlite3/sqlite3.c	44630;"	d	file:
WAL_READ_LOCK	drivers/SQLite/sqlite3/sqlite3.c	44468;"	d	file:
WAL_RECOVER_LOCK	drivers/SQLite/sqlite3/sqlite3.c	44467;"	d	file:
WAL_RETRY	drivers/SQLite/sqlite3/sqlite3.c	46160;"	d	file:
WAL_SAVEPOINT_NDATA	drivers/SQLite/sqlite3/sqlite3.c	37263;"	d	file:
WAL_SHM_RDONLY	drivers/SQLite/sqlite3/sqlite3.c	44632;"	d	file:
WAL_WRITE_LOCK	drivers/SQLite/sqlite3/sqlite3.c	44464;"	d	file:
WGLAPI	drivers/GL/glut.h	158;"	d
WGLAPI	drivers/GL/glut.h	189;"	d
WGLAPI	drivers/GL/mesa_wgl.h	45;"	d
WGLAPI	drivers/GL/mesa_wgl.h	48;"	d
WGLAPI	drivers/GL/mesa_wgl.h	51;"	d
WGL_ARB_extensions_string	drivers/GL/mesa_wgl.h	116;"	d
WGL_FONT_LINES	drivers/GL/glut.h	145;"	d
WGL_FONT_POLYGONS	drivers/GL/glut.h	146;"	d
WHERETRACE	drivers/SQLite/sqlite3/sqlite3.c	100727;"	d	file:
WHERETRACE	drivers/SQLite/sqlite3/sqlite3.c	100729;"	d	file:
WHERE_AND_ONLY	drivers/SQLite/sqlite3/sqlite3.c	10657;"	d	file:
WHERE_BOTH_LIMIT	drivers/SQLite/sqlite3/sqlite3.c	100956;"	d	file:
WHERE_BTM_LIMIT	drivers/SQLite/sqlite3/sqlite3.c	100955;"	d	file:
WHERE_COLUMN_EQ	drivers/SQLite/sqlite3/sqlite3.c	100947;"	d	file:
WHERE_COLUMN_IN	drivers/SQLite/sqlite3/sqlite3.c	100949;"	d	file:
WHERE_COLUMN_NULL	drivers/SQLite/sqlite3/sqlite3.c	100950;"	d	file:
WHERE_COLUMN_RANGE	drivers/SQLite/sqlite3/sqlite3.c	100948;"	d	file:
WHERE_DISTINCT	drivers/SQLite/sqlite3/sqlite3.c	100964;"	d	file:
WHERE_DISTINCT_ORDERED	drivers/SQLite/sqlite3/sqlite3.c	10684;"	d	file:
WHERE_DISTINCT_UNIQUE	drivers/SQLite/sqlite3/sqlite3.c	10683;"	d	file:
WHERE_DUPLICATES_OK	drivers/SQLite/sqlite3/sqlite3.c	10653;"	d	file:
WHERE_FORCE_TABLE	drivers/SQLite/sqlite3/sqlite3.c	10655;"	d	file:
WHERE_IDX_ONLY	drivers/SQLite/sqlite3/sqlite3.c	100957;"	d	file:
WHERE_INDEXED	drivers/SQLite/sqlite3/sqlite3.c	100951;"	d	file:
WHERE_IN_ABLE	drivers/SQLite/sqlite3/sqlite3.c	100953;"	d	file:
WHERE_MULTI_OR	drivers/SQLite/sqlite3/sqlite3.c	100962;"	d	file:
WHERE_NOT_FULLSCAN	drivers/SQLite/sqlite3/sqlite3.c	100952;"	d	file:
WHERE_OMIT_OPEN_CLOSE	drivers/SQLite/sqlite3/sqlite3.c	10654;"	d	file:
WHERE_ONEPASS_DESIRED	drivers/SQLite/sqlite3/sqlite3.c	10652;"	d	file:
WHERE_ONETABLE_ONLY	drivers/SQLite/sqlite3/sqlite3.c	10656;"	d	file:
WHERE_ORDERBY	drivers/SQLite/sqlite3/sqlite3.c	100958;"	d	file:
WHERE_ORDERBY_MAX	drivers/SQLite/sqlite3/sqlite3.c	10651;"	d	file:
WHERE_ORDERBY_MIN	drivers/SQLite/sqlite3/sqlite3.c	10650;"	d	file:
WHERE_ORDERBY_NORMAL	drivers/SQLite/sqlite3/sqlite3.c	10649;"	d	file:
WHERE_REVERSE	drivers/SQLite/sqlite3/sqlite3.c	100959;"	d	file:
WHERE_ROWID_EQ	drivers/SQLite/sqlite3/sqlite3.c	100945;"	d	file:
WHERE_ROWID_RANGE	drivers/SQLite/sqlite3/sqlite3.c	100946;"	d	file:
WHERE_TEMP_INDEX	drivers/SQLite/sqlite3/sqlite3.c	100963;"	d	file:
WHERE_TOP_LIMIT	drivers/SQLite/sqlite3/sqlite3.c	100954;"	d	file:
WHERE_UNIQUE	drivers/SQLite/sqlite3/sqlite3.c	100960;"	d	file:
WHERE_VIRTUALTABLE	drivers/SQLite/sqlite3/sqlite3.c	100961;"	d	file:
WIN32_LEAN_AND_MEAN	drivers/GL/gl.h	83;"	d
WIN32_LEAN_AND_MEAN	drivers/GL/glext.h	38;"	d
WIN32_LEAN_AND_MEAN	drivers/GL/glxext.h	38;"	d
WINCE_DELETION_ATTEMPTS	drivers/SQLite/sqlite3/sqlite3.c	32679;"	d	file:
WINMEM_MAGIC	drivers/SQLite/sqlite3/sqlite3.c	31752;"	d	file:
WIN_SHM_BASE	drivers/SQLite/sqlite3/sqlite3.c	33385;"	d	file:
WIN_SHM_DMS	drivers/SQLite/sqlite3/sqlite3.c	33386;"	d	file:
WMESA_H	drivers/GL/wmesa.h	45;"	d
WMatrix_	kernel/TeGTParams.h	/^      TeMatrix WMatrix_;$/;"	m	class:TeGTParams
WMesaContext	drivers/GL/wmesa.h	/^typedef struct wmesa_context *WMesaContext;$/;"	t	typeref:struct:wmesa_context
WO_ALL	drivers/SQLite/sqlite3/sqlite3.c	100929;"	d	file:
WO_AND	drivers/SQLite/sqlite3/sqlite3.c	100926;"	d	file:
WO_EQ	drivers/SQLite/sqlite3/sqlite3.c	100918;"	d	file:
WO_GE	drivers/SQLite/sqlite3/sqlite3.c	100922;"	d	file:
WO_GT	drivers/SQLite/sqlite3/sqlite3.c	100921;"	d	file:
WO_IN	drivers/SQLite/sqlite3/sqlite3.c	100917;"	d	file:
WO_ISNULL	drivers/SQLite/sqlite3/sqlite3.c	100924;"	d	file:
WO_LE	drivers/SQLite/sqlite3/sqlite3.c	100920;"	d	file:
WO_LT	drivers/SQLite/sqlite3/sqlite3.c	100919;"	d	file:
WO_MATCH	drivers/SQLite/sqlite3/sqlite3.c	100923;"	d	file:
WO_NOOP	drivers/SQLite/sqlite3/sqlite3.c	100927;"	d	file:
WO_OR	drivers/SQLite/sqlite3/sqlite3.c	100925;"	d	file:
WO_SINGLE	drivers/SQLite/sqlite3/sqlite3.c	100930;"	d	file:
WRC_Abort	drivers/SQLite/sqlite3/sqlite3.c	11192;"	d	file:
WRC_Continue	drivers/SQLite/sqlite3/sqlite3.c	11190;"	d	file:
WRC_Prune	drivers/SQLite/sqlite3/sqlite3.c	11191;"	d	file:
WRITE	kernel/TeCoverageImport.h	45;"	d
WRITE_LOCK	drivers/SQLite/sqlite3/sqlite3.c	47480;"	d	file:
WRITE_UTF16BE	drivers/SQLite/sqlite3/sqlite3.c	20167;"	d	file:
WRITE_UTF16LE	drivers/SQLite/sqlite3/sqlite3.c	20155;"	d	file:
WRITE_UTF8	drivers/SQLite/sqlite3/sqlite3.c	20135;"	d	file:
WS	image_processing/TePDIRaster2Vector.cpp	43;"	d	file:
Wait	drivers/Firebird/ibpp/core/service.cpp	/^void ServiceImpl::Wait()$/;"	f	class:ServiceImpl
WaitMsg	drivers/Firebird/ibpp/core/service.cpp	/^const char* ServiceImpl::WaitMsg()$/;"	f	class:ServiceImpl
Wal	drivers/SQLite/sqlite3/sqlite3.c	/^struct Wal {$/;"	s	file:
Wal	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Wal Wal;$/;"	t	typeref:struct:Wal	file:
WalCkptInfo	drivers/SQLite/sqlite3/sqlite3.c	/^struct WalCkptInfo {$/;"	s	file:
WalCkptInfo	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct WalCkptInfo WalCkptInfo;$/;"	t	typeref:struct:WalCkptInfo	file:
WalIndexHdr	drivers/SQLite/sqlite3/sqlite3.c	/^struct WalIndexHdr {$/;"	s	file:
WalIndexHdr	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct WalIndexHdr WalIndexHdr;$/;"	t	typeref:struct:WalIndexHdr	file:
WalIterator	drivers/SQLite/sqlite3/sqlite3.c	/^struct WalIterator {$/;"	s	file:
WalIterator	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct WalIterator WalIterator;$/;"	t	typeref:struct:WalIterator	file:
WalSegment	drivers/SQLite/sqlite3/sqlite3.c	/^  struct WalSegment {$/;"	s	struct:WalIterator	file:
Walker	drivers/SQLite/sqlite3/sqlite3.c	/^struct Walker {$/;"	s	file:
Walker	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Walker Walker;$/;"	t	typeref:struct:Walker	file:
WasBordersLengthComputed	kernel/TeNeighbours.h	/^		bool WasBordersLengthComputed () {if (_borders_length == -1.0) return false; else return true;}$/;"	f	class:TeProxMatrixAttributes
WasCentroidDistanceComputed	kernel/TeNeighbours.h	/^		bool WasCentroidDistanceComputed () {if (_centroid_distance == -1.0) return false; else return true;}$/;"	f	class:TeProxMatrixAttributes
WasNetworkMinimumPathComputed	kernel/TeNeighbours.h	/^		bool WasNetworkMinimumPathComputed () {if (_net_minimum_path == -1.0) return false; else return true;}$/;"	f	class:TeProxMatrixAttributes
WasNetworkObjectsDistanceComputed	kernel/TeNeighbours.h	/^		bool WasNetworkObjectsDistanceComputed () {if (_net_objects_distance == -1.0) return false; else return true;}$/;"	f	class:TeProxMatrixAttributes
Weight	kernel/TeNeighbours.cpp	/^TeNeighbours:: Weight (const string& object_id)$/;"	f	class:TeNeighbours
Weight	kernel/TeNeighbours.cpp	/^TeNeighbours:: Weight (int n)$/;"	f	class:TeNeighbours
Weight	kernel/TeNeighbours.h	/^		double	Weight() {return _weight;}$/;"	f	class:TeProxMatrixAttributes
Weight	kernel/TeNeighbours.h	/^		void Weight(double w) {_weight = w;}$/;"	f	class:TeProxMatrixAttributes
West	image_processing/TePDIHaralick.hpp	/^        West = 64,$/;"	e	enum:TePDIHaralick::DirectionT
WhereAndInfo	drivers/SQLite/sqlite3/sqlite3.c	/^struct WhereAndInfo {$/;"	s	file:
WhereAndInfo	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct WhereAndInfo WhereAndInfo;$/;"	t	typeref:struct:WhereAndInfo	file:
WhereClause	drivers/SQLite/sqlite3/sqlite3.c	/^struct WhereClause {$/;"	s	file:
WhereClause	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct WhereClause WhereClause;$/;"	t	typeref:struct:WhereClause	file:
WhereCost	drivers/SQLite/sqlite3/sqlite3.c	/^struct WhereCost {$/;"	s	file:
WhereCost	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct WhereCost WhereCost;$/;"	t	typeref:struct:WhereCost	file:
WhereInfo	drivers/SQLite/sqlite3/sqlite3.c	/^struct WhereInfo {$/;"	s	file:
WhereInfo	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct WhereInfo WhereInfo;$/;"	t	typeref:struct:WhereInfo	file:
WhereIsGreater	image_processing/TePDIMatrixFunctions.cpp	/^  bool WhereIsGreater( const TePDIMatrix< double >& inMatrix1,$/;"	f	namespace:TePDIMatrixFunctions
WhereLevel	drivers/SQLite/sqlite3/sqlite3.c	/^struct WhereLevel {$/;"	s	file:
WhereLevel	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct WhereLevel WhereLevel;$/;"	t	typeref:struct:WhereLevel	file:
WhereMaskSet	drivers/SQLite/sqlite3/sqlite3.c	/^struct WhereMaskSet {$/;"	s	file:
WhereMaskSet	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct WhereMaskSet WhereMaskSet;$/;"	t	typeref:struct:WhereMaskSet	file:
WhereOrInfo	drivers/SQLite/sqlite3/sqlite3.c	/^struct WhereOrInfo {$/;"	s	file:
WhereOrInfo	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct WhereOrInfo WhereOrInfo;$/;"	t	typeref:struct:WhereOrInfo	file:
WherePlan	drivers/SQLite/sqlite3/sqlite3.c	/^struct WherePlan {$/;"	s	file:
WherePlan	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct WherePlan WherePlan;$/;"	t	typeref:struct:WherePlan	file:
WhereTerm	drivers/SQLite/sqlite3/sqlite3.c	/^struct WhereTerm {$/;"	s	file:
WhereTerm	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct WhereTerm WhereTerm;$/;"	t	typeref:struct:WhereTerm	file:
WindowCell_	image_processing/TePDIRegGrowSeg.hpp	/^      TePDIRGSCell            **WindowCell_;$/;"	m	class:TePDIRegGrowSeg
WindowColumns_	image_processing/TePDIRegGrowSeg.hpp	/^      long            WindowColumns_;$/;"	m	class:TePDIRegGrowSeg
WindowLines_	image_processing/TePDIRegGrowSeg.hpp	/^      long            WindowLines_;$/;"	m	class:TePDIRegGrowSeg
WindowOffset_	image_processing/TePDIRegGrowSeg.hpp	/^      long            WindowOffset_;$/;"	m	class:TePDIRegGrowSeg
WrapperFuncPtrT	kernel/TeCommunicator.h	/^      typedef void (*WrapperFuncPtrT)( const DataType&, void* );$/;"	t	class:TeCommunicator
Write	drivers/Firebird/ibpp/core/blob.cpp	/^void BlobImpl::Write(const void* buffer, int size)$/;"	f	class:BlobImpl
WriteFrom	drivers/Firebird/ibpp/core/array.cpp	/^void ArrayImpl::WriteFrom(IBPP::ADT adtype, const void* data, int datacount)$/;"	f	class:ArrayImpl
WriteToFile	kernel/TeRedBlackTree.h	/^			virtual void WriteToFile(NODE* n, string& strRepres) const$/;"	f	class:TeREDBLACK::TeRBTree
WriteToFile	kernel/TeRedBlackTree.h	/^			virtual void WriteToFile(const string& fileName) const$/;"	f	class:TeREDBLACK::TeRBTree
WrongType	drivers/Firebird/ibpp/core/ibpp.h	/^	class WrongType : public LogicException$/;"	c	namespace:IBPP
WrongTypeImpl	drivers/Firebird/ibpp/core/_ibpp.h	/^class WrongTypeImpl : public IBPP::WrongType, public ExceptionBase$/;"	c	namespace:ibpp_internals
WrongTypeImpl	drivers/Firebird/ibpp/core/exception.cpp	/^WrongTypeImpl::WrongTypeImpl() throw()$/;"	f	class:WrongTypeImpl
WrongTypeImpl	drivers/Firebird/ibpp/core/exception.cpp	/^WrongTypeImpl::WrongTypeImpl(const WrongTypeImpl& copied) throw()$/;"	f	class:WrongTypeImpl
WrongTypeImpl	drivers/Firebird/ibpp/core/exception.cpp	/^WrongTypeImpl::WrongTypeImpl(const std::string& context, int sqlType, IITYPE varType,$/;"	f	class:WrongTypeImpl
X	stat/TeSkaterGrafo.h	/^      double X;$/;"	m	struct:TSkaterGrafo::No_Grafo
XAddHosts	drivers/GL/vms_x_fix.h	659;"	d
XAllocClassHint	drivers/GL/vms_x_fix.h	15;"	d
XAllocColor	drivers/GL/vms_x_fix.h	16;"	d
XAllocColorCells	drivers/GL/vms_x_fix.h	17;"	d
XAllocIconSize	drivers/GL/vms_x_fix.h	827;"	d
XAllocNamedColor	drivers/GL/vms_x_fix.h	648;"	d
XAllocSizeHints	drivers/GL/vms_x_fix.h	18;"	d
XAllocStandardColormap	drivers/GL/vms_x_fix.h	828;"	d
XAllocWMHints	drivers/GL/vms_x_fix.h	19;"	d
XAllowEvents	drivers/GL/vms_x_fix.h	829;"	d
XAutoRepeatOff	drivers/GL/vms_x_fix.h	20;"	d
XAutoRepeatOn	drivers/GL/vms_x_fix.h	21;"	d
XBaseFontNameListOfFontSet	drivers/GL/vms_x_fix.h	22;"	d
XBell	drivers/GL/vms_x_fix.h	23;"	d
XBitmapPad	drivers/GL/vms_x_fix.h	24;"	d
XBlackPixel	drivers/GL/vms_x_fix.h	830;"	d
XBlackPixelOfScreen	drivers/GL/vms_x_fix.h	649;"	d
XCROSS	kernel/TeGraph.cpp	60;"	d	file:
XCTXINIT_ERRHDL	drivers/Oracle/OCI/include/ocixmldb.h	/^  XCTXINIT_ERRHDL  = 2$/;"	e	enum:__anon90
XCTXINIT_OCIDUR	drivers/Oracle/OCI/include/ocixmldb.h	/^  XCTXINIT_OCIDUR  = 1,$/;"	e	enum:__anon90
XChangeActivePointerGrab	drivers/GL/vms_x_fix.h	25;"	d
XChangeGC	drivers/GL/vms_x_fix.h	26;"	d
XChangeKeyboardControl	drivers/GL/vms_x_fix.h	633;"	d
XChangeProperty	drivers/GL/vms_x_fix.h	27;"	d
XChangeWindowAttributes	drivers/GL/vms_x_fix.h	28;"	d
XCheckIfEvent	drivers/GL/vms_x_fix.h	29;"	d
XCheckMaskEvent	drivers/GL/vms_x_fix.h	30;"	d
XCheckTypedWindowEvent	drivers/GL/vms_x_fix.h	31;"	d
XCheckWindowEvent	drivers/GL/vms_x_fix.h	32;"	d
XClearArea	drivers/GL/vms_x_fix.h	33;"	d
XClearWindow	drivers/GL/vms_x_fix.h	34;"	d
XClipBox	drivers/GL/vms_x_fix.h	35;"	d
XCloseDisplay	drivers/GL/vms_x_fix.h	36;"	d
XCloseIM	drivers/GL/vms_x_fix.h	37;"	d
XConfigureWindow	drivers/GL/vms_x_fix.h	38;"	d
XConvertSelection	drivers/GL/vms_x_fix.h	39;"	d
XCopyArea	drivers/GL/vms_x_fix.h	40;"	d
XCopyColormapAndFree	drivers/GL/vms_x_fix.h	831;"	d
XCopyGC	drivers/GL/vms_x_fix.h	41;"	d
XCopyPlane	drivers/GL/vms_x_fix.h	42;"	d
XCreateBitmapFromData	drivers/GL/vms_x_fix.h	43;"	d
XCreateColormap	drivers/GL/vms_x_fix.h	44;"	d
XCreateFontCursor	drivers/GL/vms_x_fix.h	45;"	d
XCreateFontSet	drivers/GL/vms_x_fix.h	46;"	d
XCreateGC	drivers/GL/vms_x_fix.h	47;"	d
XCreateIC	drivers/GL/vms_x_fix.h	48;"	d
XCreateImage	drivers/GL/vms_x_fix.h	49;"	d
XCreatePixmap	drivers/GL/vms_x_fix.h	50;"	d
XCreatePixmapCursor	drivers/GL/vms_x_fix.h	51;"	d
XCreatePixmapFromBitmapData	drivers/GL/vms_x_fix.h	52;"	d
XCreateRegion	drivers/GL/vms_x_fix.h	53;"	d
XCreateSimpleWindow	drivers/GL/vms_x_fix.h	54;"	d
XCreateWindow	drivers/GL/vms_x_fix.h	55;"	d
XDefaultColormap	drivers/GL/vms_x_fix.h	650;"	d
XDefaultColormapOfScreen	drivers/GL/vms_x_fix.h	651;"	d
XDefaultDepth	drivers/GL/vms_x_fix.h	652;"	d
XDefaultGC	drivers/GL/vms_x_fix.h	832;"	d
XDefaultRootWindow	drivers/GL/vms_x_fix.h	774;"	d
XDefaultScreen	drivers/GL/vms_x_fix.h	653;"	d
XDefaultScreenOfDisplay	drivers/GL/vms_x_fix.h	56;"	d
XDefaultVisual	drivers/GL/vms_x_fix.h	654;"	d
XDefineCursor	drivers/GL/vms_x_fix.h	57;"	d
XDeleteProperty	drivers/GL/vms_x_fix.h	58;"	d
XDestroyIC	drivers/GL/vms_x_fix.h	59;"	d
XDestroyRegion	drivers/GL/vms_x_fix.h	60;"	d
XDestroySubwindows	drivers/GL/vms_x_fix.h	634;"	d
XDestroyWindow	drivers/GL/vms_x_fix.h	61;"	d
XDisableAccessControl	drivers/GL/vms_x_fix.h	660;"	d
XDisplayCells	drivers/GL/vms_x_fix.h	775;"	d
XDisplayHeight	drivers/GL/vms_x_fix.h	833;"	d
XDisplayName	drivers/GL/vms_x_fix.h	62;"	d
XDisplayOfScreen	drivers/GL/vms_x_fix.h	63;"	d
XDisplayWidth	drivers/GL/vms_x_fix.h	834;"	d
XDrawArc	drivers/GL/vms_x_fix.h	64;"	d
XDrawImageString	drivers/GL/vms_x_fix.h	65;"	d
XDrawImageString16	drivers/GL/vms_x_fix.h	66;"	d
XDrawLine	drivers/GL/vms_x_fix.h	67;"	d
XDrawLines	drivers/GL/vms_x_fix.h	68;"	d
XDrawPoint	drivers/GL/vms_x_fix.h	69;"	d
XDrawPoints	drivers/GL/vms_x_fix.h	70;"	d
XDrawRectangle	drivers/GL/vms_x_fix.h	71;"	d
XDrawRectangles	drivers/GL/vms_x_fix.h	846;"	d
XDrawSegments	drivers/GL/vms_x_fix.h	72;"	d
XDrawString	drivers/GL/vms_x_fix.h	73;"	d
XDrawString16	drivers/GL/vms_x_fix.h	74;"	d
XDrawText	drivers/GL/vms_x_fix.h	870;"	d
XEmptyRegion	drivers/GL/vms_x_fix.h	75;"	d
XEnableAccessControl	drivers/GL/vms_x_fix.h	661;"	d
XEqualRegion	drivers/GL/vms_x_fix.h	76;"	d
XEventsQueued	drivers/GL/vms_x_fix.h	77;"	d
XExtentsOfFontSet	drivers/GL/vms_x_fix.h	78;"	d
XFetchName	drivers/GL/vms_x_fix.h	877;"	d
XFillArc	drivers/GL/vms_x_fix.h	79;"	d
XFillArcs	drivers/GL/vms_x_fix.h	662;"	d
XFillPolygon	drivers/GL/vms_x_fix.h	80;"	d
XFillRectangle	drivers/GL/vms_x_fix.h	81;"	d
XFillRectangles	drivers/GL/vms_x_fix.h	82;"	d
XFilterEvent	drivers/GL/vms_x_fix.h	83;"	d
XFlush	drivers/GL/vms_x_fix.h	84;"	d
XFontsOfFontSet	drivers/GL/vms_x_fix.h	85;"	d
XForceScreenSaver	drivers/GL/vms_x_fix.h	663;"	d
XFree	drivers/GL/vms_x_fix.h	86;"	d
XFreeColormap	drivers/GL/vms_x_fix.h	87;"	d
XFreeColors	drivers/GL/vms_x_fix.h	88;"	d
XFreeCursor	drivers/GL/vms_x_fix.h	89;"	d
XFreeDeviceList	drivers/GL/vms_x_fix.h	635;"	d
XFreeDeviceState	drivers/GL/vms_x_fix.h	636;"	d
XFreeFont	drivers/GL/vms_x_fix.h	90;"	d
XFreeFontInfo	drivers/GL/vms_x_fix.h	91;"	d
XFreeFontNames	drivers/GL/vms_x_fix.h	92;"	d
XFreeFontSet	drivers/GL/vms_x_fix.h	93;"	d
XFreeGC	drivers/GL/vms_x_fix.h	94;"	d
XFreeModifiermap	drivers/GL/vms_x_fix.h	95;"	d
XFreePixmap	drivers/GL/vms_x_fix.h	96;"	d
XFreeStringList	drivers/GL/vms_x_fix.h	97;"	d
XGetAtomName	drivers/GL/vms_x_fix.h	98;"	d
XGetCommand	drivers/GL/vms_x_fix.h	835;"	d
XGetDefault	drivers/GL/vms_x_fix.h	99;"	d
XGetErrorDatabaseText	drivers/GL/vms_x_fix.h	100;"	d
XGetErrorText	drivers/GL/vms_x_fix.h	101;"	d
XGetExtensionVersion	drivers/GL/vms_x_fix.h	637;"	d
XGetFontProperty	drivers/GL/vms_x_fix.h	102;"	d
XGetGCValues	drivers/GL/vms_x_fix.h	103;"	d
XGetGeometry	drivers/GL/vms_x_fix.h	104;"	d
XGetICValues	drivers/GL/vms_x_fix.h	105;"	d
XGetIMValues	drivers/GL/vms_x_fix.h	106;"	d
XGetIconSizes	drivers/GL/vms_x_fix.h	836;"	d
XGetImage	drivers/GL/vms_x_fix.h	107;"	d
XGetKeyboardControl	drivers/GL/vms_x_fix.h	108;"	d
XGetModifierMapping	drivers/GL/vms_x_fix.h	109;"	d
XGetMotionEvents	drivers/GL/vms_x_fix.h	110;"	d
XGetNormalHints	drivers/GL/vms_x_fix.h	111;"	d
XGetRGBColormaps	drivers/GL/vms_x_fix.h	638;"	d
XGetScreenSaver	drivers/GL/vms_x_fix.h	664;"	d
XGetSelectionOwner	drivers/GL/vms_x_fix.h	112;"	d
XGetSubImage	drivers/GL/vms_x_fix.h	113;"	d
XGetVisualInfo	drivers/GL/vms_x_fix.h	114;"	d
XGetWMColormapWindows	drivers/GL/vms_x_fix.h	115;"	d
XGetWMHints	drivers/GL/vms_x_fix.h	116;"	d
XGetWMName	drivers/GL/vms_x_fix.h	117;"	d
XGetWMNormalHints	drivers/GL/vms_x_fix.h	118;"	d
XGetWindowAttributes	drivers/GL/vms_x_fix.h	119;"	d
XGetWindowProperty	drivers/GL/vms_x_fix.h	120;"	d
XGrabButton	drivers/GL/vms_x_fix.h	847;"	d
XGrabKeyboard	drivers/GL/vms_x_fix.h	121;"	d
XGrabPointer	drivers/GL/vms_x_fix.h	122;"	d
XGrabServer	drivers/GL/vms_x_fix.h	123;"	d
XHeightOfScreen	drivers/GL/vms_x_fix.h	124;"	d
XIconifyWindow	drivers/GL/vms_x_fix.h	639;"	d
XIfEvent	drivers/GL/vms_x_fix.h	125;"	d
XInstallColormap	drivers/GL/vms_x_fix.h	640;"	d
XInternAtom	drivers/GL/vms_x_fix.h	126;"	d
XIntersectRegion	drivers/GL/vms_x_fix.h	127;"	d
XKeycodeToKeysym	drivers/GL/vms_x_fix.h	128;"	d
XKeysymToKeycode	drivers/GL/vms_x_fix.h	129;"	d
XKeysymToString	drivers/GL/vms_x_fix.h	130;"	d
XKillClient	drivers/GL/vms_x_fix.h	837;"	d
XListFonts	drivers/GL/vms_x_fix.h	131;"	d
XListFontsWithInfo	drivers/GL/vms_x_fix.h	132;"	d
XListHosts	drivers/GL/vms_x_fix.h	665;"	d
XListInputDevices	drivers/GL/vms_x_fix.h	641;"	d
XListInstalledColormaps	drivers/GL/vms_x_fix.h	838;"	d
XListPixmapFormats	drivers/GL/vms_x_fix.h	133;"	d
XListProperties	drivers/GL/vms_x_fix.h	134;"	d
XLoadQueryFont	drivers/GL/vms_x_fix.h	135;"	d
XLookupColor	drivers/GL/vms_x_fix.h	848;"	d
XLookupKeysym	drivers/GL/vms_x_fix.h	642;"	d
XLookupString	drivers/GL/vms_x_fix.h	136;"	d
XLowerWindow	drivers/GL/vms_x_fix.h	137;"	d
XMESA_EXTENSIONS	drivers/GL/xmesa.h	99;"	d
XMESA_FX_FULLSCREEN	drivers/GL/xmesa.h	106;"	d
XMESA_FX_WINDOW	drivers/GL/xmesa.h	105;"	d
XMESA_H	drivers/GL/xmesa.h	65;"	d
XMESA_MAJOR_VERSION	drivers/GL/xmesa.h	90;"	d
XMESA_MINOR_VERSION	drivers/GL/xmesa.h	91;"	d
XMESA_VERSION	drivers/GL/xmesa.h	98;"	d
XMLCTX_DEFINED	drivers/Oracle/OCI/include/ocixmldb.h	53;"	d
XMapRaised	drivers/GL/vms_x_fix.h	138;"	d
XMapSubwindows	drivers/GL/vms_x_fix.h	849;"	d
XMapWindow	drivers/GL/vms_x_fix.h	139;"	d
XMatchVisualInfo	drivers/GL/vms_x_fix.h	140;"	d
XMaxRequestSize	drivers/GL/vms_x_fix.h	776;"	d
XMesaBuffer	drivers/GL/xmesa.h	/^typedef struct xmesa_buffer *XMesaBuffer;$/;"	t	typeref:struct:xmesa_buffer
XMesaColor	drivers/GL/xmesa_x.h	/^typedef XColor       XMesaColor;$/;"	t
XMesaColor	drivers/GL/xmesa_xf86.h	/^typedef xColorItem  XMesaColor;$/;"	t
XMesaColormap	drivers/GL/xmesa_x.h	/^typedef Colormap     XMesaColormap;$/;"	t
XMesaColormap	drivers/GL/xmesa_xf86.h	/^typedef ColormapPtr XMesaColormap;$/;"	t
XMesaContext	drivers/GL/xmesa.h	/^typedef struct xmesa_context *XMesaContext;$/;"	t	typeref:struct:xmesa_context
XMesaCopyArea	drivers/GL/xmesa_x.h	70;"	d
XMesaCopyArea	drivers/GL/xmesa_xf86.h	134;"	d
XMesaCreatePixmap	drivers/GL/xmesa_x.h	72;"	d
XMesaCreatePixmap	drivers/GL/xmesa_xf86.h	144;"	d
XMesaDestroyImage	drivers/GL/xmesa_x.h	53;"	d
XMesaDisplay	drivers/GL/xmesa_x.h	/^typedef Display      XMesaDisplay;$/;"	t
XMesaDisplay	drivers/GL/xmesa_xf86.h	/^typedef ScreenRec   XMesaDisplay;$/;"	t
XMesaDrawLine	drivers/GL/xmesa_x.h	67;"	d
XMesaDrawLine	drivers/GL/xmesa_xf86.h	98;"	d
XMesaDrawPoint	drivers/GL/xmesa_x.h	65;"	d
XMesaDrawPoint	drivers/GL/xmesa_xf86.h	81;"	d
XMesaDrawPoints	drivers/GL/xmesa_x.h	66;"	d
XMesaDrawPoints	drivers/GL/xmesa_xf86.h	91;"	d
XMesaDrawable	drivers/GL/xmesa_x.h	/^typedef Drawable     XMesaDrawable;$/;"	t
XMesaDrawable	drivers/GL/xmesa_xf86.h	/^typedef DrawablePtr XMesaDrawable;$/;"	t
XMesaFillRectangle	drivers/GL/xmesa_x.h	68;"	d
XMesaFillRectangle	drivers/GL/xmesa_xf86.h	110;"	d
XMesaFreeGC	drivers/GL/xmesa_x.h	74;"	d
XMesaFreeGC	drivers/GL/xmesa_xf86.h	150;"	d
XMesaFreePixmap	drivers/GL/xmesa_x.h	73;"	d
XMesaFreePixmap	drivers/GL/xmesa_xf86.h	147;"	d
XMesaGC	drivers/GL/xmesa_x.h	/^typedef GC           XMesaGC;$/;"	t
XMesaGC	drivers/GL/xmesa_xf86.h	/^typedef GCPtr       XMesaGC;$/;"	t
XMesaGetPixel	drivers/GL/xmesa_x.h	56;"	d
XMesaImage	drivers/GL/xmesa_x.h	/^typedef XImage       XMesaImage;$/;"	t
XMesaImage	drivers/GL/xmesa_xf86.h	/^typedef struct _XMesaImageRec XMesaImage;$/;"	t	typeref:struct:_XMesaImageRec
XMesaPixmap	drivers/GL/xmesa_x.h	/^typedef Pixmap       XMesaPixmap;$/;"	t
XMesaPixmap	drivers/GL/xmesa_xf86.h	/^typedef PixmapPtr   XMesaPixmap;$/;"	t
XMesaPoint	drivers/GL/xmesa_x.h	/^typedef XPoint       XMesaPoint;$/;"	t
XMesaPoint	drivers/GL/xmesa_xf86.h	/^typedef DDXPointRec XMesaPoint;$/;"	t
XMesaPutImage	drivers/GL/xmesa_x.h	69;"	d
XMesaPutImage	drivers/GL/xmesa_xf86.h	122;"	d
XMesaPutPixel	drivers/GL/xmesa_x.h	55;"	d
XMesaSetBackground	drivers/GL/xmesa_x.h	59;"	d
XMesaSetBackground	drivers/GL/xmesa_xf86.h	74;"	d
XMesaSetFillStyle	drivers/GL/xmesa_x.h	62;"	d
XMesaSetFillStyle	drivers/GL/xmesa_xf86.h	77;"	d
XMesaSetForeground	drivers/GL/xmesa_x.h	58;"	d
XMesaSetForeground	drivers/GL/xmesa_xf86.h	73;"	d
XMesaSetFunction	drivers/GL/xmesa_x.h	61;"	d
XMesaSetFunction	drivers/GL/xmesa_xf86.h	76;"	d
XMesaSetGeneric	drivers/GL/xmesa_xf86.h	57;"	d
XMesaSetGenericPtr	drivers/GL/xmesa_xf86.h	65;"	d
XMesaSetPlaneMask	drivers/GL/xmesa_x.h	60;"	d
XMesaSetPlaneMask	drivers/GL/xmesa_xf86.h	75;"	d
XMesaSetTile	drivers/GL/xmesa_x.h	63;"	d
XMesaSetTile	drivers/GL/xmesa_xf86.h	79;"	d
XMesaVisual	drivers/GL/xmesa.h	/^typedef struct xmesa_visual *XMesaVisual;$/;"	t	typeref:struct:xmesa_visual
XMesaVisualInfo	drivers/GL/xmesa_x.h	/^typedef XVisualInfo *XMesaVisualInfo;$/;"	t
XMesaVisualInfo	drivers/GL/xmesa_xf86.h	/^typedef VisualPtr   XMesaVisualInfo;$/;"	t
XMesaWindow	drivers/GL/xmesa_x.h	/^typedef Window       XMesaWindow;$/;"	t
XMesaWindow	drivers/GL/xmesa_xf86.h	/^typedef WindowPtr   XMesaWindow;$/;"	t
XMoveResizeWindow	drivers/GL/vms_x_fix.h	141;"	d
XMoveWindow	drivers/GL/vms_x_fix.h	142;"	d
XNextEvent	drivers/GL/vms_x_fix.h	143;"	d
XOffsetRegion	drivers/GL/vms_x_fix.h	144;"	d
XOpenDevice	drivers/GL/vms_x_fix.h	643;"	d
XOpenDisplay	drivers/GL/vms_x_fix.h	145;"	d
XOpenIM	drivers/GL/vms_x_fix.h	146;"	d
XOrigin	drivers/GL/glxext.h	/^    int XOrigin, YOrigin, maxHeight, maxWidth;$/;"	m	struct:__anon97
XParseColor	drivers/GL/vms_x_fix.h	147;"	d
XParseGeometry	drivers/GL/vms_x_fix.h	148;"	d
XPeekEvent	drivers/GL/vms_x_fix.h	149;"	d
XPeekIfEvent	drivers/GL/vms_x_fix.h	878;"	d
XPending	drivers/GL/vms_x_fix.h	150;"	d
XPointInRegion	drivers/GL/vms_x_fix.h	151;"	d
XPolygonRegion	drivers/GL/vms_x_fix.h	152;"	d
XPutBackEvent	drivers/GL/vms_x_fix.h	153;"	d
XPutImage	drivers/GL/vms_x_fix.h	154;"	d
XQueryColor	drivers/GL/vms_x_fix.h	155;"	d
XQueryColors	drivers/GL/vms_x_fix.h	156;"	d
XQueryDeviceState	drivers/GL/vms_x_fix.h	644;"	d
XQueryExtension	drivers/GL/vms_x_fix.h	157;"	d
XQueryFont	drivers/GL/vms_x_fix.h	631;"	d
XQueryKeymap	drivers/GL/vms_x_fix.h	879;"	d
XQueryPointer	drivers/GL/vms_x_fix.h	158;"	d
XQueryTree	drivers/GL/vms_x_fix.h	159;"	d
XRaiseWindow	drivers/GL/vms_x_fix.h	160;"	d
XReadBitmapFile	drivers/GL/vms_x_fix.h	666;"	d
XRecolorCursor	drivers/GL/vms_x_fix.h	850;"	d
XReconfigureWMWindow	drivers/GL/vms_x_fix.h	161;"	d
XRectInRegion	drivers/GL/vms_x_fix.h	162;"	d
XRefreshKeyboardMapping	drivers/GL/vms_x_fix.h	163;"	d
XRemoveHosts	drivers/GL/vms_x_fix.h	667;"	d
XReparentWindow	drivers/GL/vms_x_fix.h	164;"	d
XResetScreenSaver	drivers/GL/vms_x_fix.h	668;"	d
XResizeWindow	drivers/GL/vms_x_fix.h	165;"	d
XResourceManagerString	drivers/GL/vms_x_fix.h	669;"	d
XRestackWindows	drivers/GL/vms_x_fix.h	166;"	d
XRootWindow	drivers/GL/vms_x_fix.h	839;"	d
XRootWindowOfScreen	drivers/GL/vms_x_fix.h	167;"	d
XSQLDA	drivers/Firebird/ibpp/core/ibase.h	/^} XSQLDA;$/;"	t	typeref:struct:__anon64
XSQLDA_LENGTH	drivers/Firebird/ibpp/core/ibase.h	365;"	d
XSQLVAR	drivers/Firebird/ibpp/core/ibase.h	/^} XSQLVAR;$/;"	t	typeref:struct:__anon63
XScreenNumberOfScreen	drivers/GL/vms_x_fix.h	168;"	d
XScreenOfDisplay	drivers/GL/vms_x_fix.h	777;"	d
XSelectAsyncEvent	drivers/GL/vms_x_fix.h	169;"	d
XSelectAsyncInput	drivers/GL/vms_x_fix.h	170;"	d
XSelectExtensionEvent	drivers/GL/vms_x_fix.h	645;"	d
XSelectInput	drivers/GL/vms_x_fix.h	171;"	d
XSendEvent	drivers/GL/vms_x_fix.h	172;"	d
XServerVendor	drivers/GL/vms_x_fix.h	173;"	d
XSetBackground	drivers/GL/vms_x_fix.h	174;"	d
XSetClassHint	drivers/GL/vms_x_fix.h	175;"	d
XSetClipMask	drivers/GL/vms_x_fix.h	176;"	d
XSetClipOrigin	drivers/GL/vms_x_fix.h	177;"	d
XSetClipRectangles	drivers/GL/vms_x_fix.h	178;"	d
XSetCloseDownMode	drivers/GL/vms_x_fix.h	179;"	d
XSetCommand	drivers/GL/vms_x_fix.h	180;"	d
XSetDashes	drivers/GL/vms_x_fix.h	181;"	d
XSetErrorHandler	drivers/GL/vms_x_fix.h	182;"	d
XSetFillRule	drivers/GL/vms_x_fix.h	778;"	d
XSetFillStyle	drivers/GL/vms_x_fix.h	183;"	d
XSetFont	drivers/GL/vms_x_fix.h	184;"	d
XSetForeground	drivers/GL/vms_x_fix.h	185;"	d
XSetFunction	drivers/GL/vms_x_fix.h	186;"	d
XSetGraphicsExposures	drivers/GL/vms_x_fix.h	187;"	d
XSetICFocus	drivers/GL/vms_x_fix.h	188;"	d
XSetICValues	drivers/GL/vms_x_fix.h	189;"	d
XSetIOErrorHandler	drivers/GL/vms_x_fix.h	190;"	d
XSetIconName	drivers/GL/vms_x_fix.h	655;"	d
XSetInputFocus	drivers/GL/vms_x_fix.h	191;"	d
XSetLineAttributes	drivers/GL/vms_x_fix.h	192;"	d
XSetLocaleModifiers	drivers/GL/vms_x_fix.h	193;"	d
XSetNormalHints	drivers/GL/vms_x_fix.h	194;"	d
XSetPlaneMask	drivers/GL/vms_x_fix.h	632;"	d
XSetRegion	drivers/GL/vms_x_fix.h	195;"	d
XSetScreenSaver	drivers/GL/vms_x_fix.h	670;"	d
XSetSelectionOwner	drivers/GL/vms_x_fix.h	196;"	d
XSetStandardProperties	drivers/GL/vms_x_fix.h	844;"	d
XSetState	drivers/GL/vms_x_fix.h	845;"	d
XSetStipple	drivers/GL/vms_x_fix.h	197;"	d
XSetSubwindowMode	drivers/GL/vms_x_fix.h	198;"	d
XSetTSOrigin	drivers/GL/vms_x_fix.h	199;"	d
XSetTile	drivers/GL/vms_x_fix.h	200;"	d
XSetTransientForHint	drivers/GL/vms_x_fix.h	201;"	d
XSetWMColormapWindows	drivers/GL/vms_x_fix.h	202;"	d
XSetWMHints	drivers/GL/vms_x_fix.h	203;"	d
XSetWMIconName	drivers/GL/vms_x_fix.h	204;"	d
XSetWMName	drivers/GL/vms_x_fix.h	205;"	d
XSetWMNormalHints	drivers/GL/vms_x_fix.h	206;"	d
XSetWMProperties	drivers/GL/vms_x_fix.h	207;"	d
XSetWMProtocols	drivers/GL/vms_x_fix.h	208;"	d
XSetWindowBackground	drivers/GL/vms_x_fix.h	209;"	d
XSetWindowBackgroundPixmap	drivers/GL/vms_x_fix.h	210;"	d
XSetWindowColormap	drivers/GL/vms_x_fix.h	211;"	d
XShapeCombineMask	drivers/GL/vms_x_fix.h	212;"	d
XShapeCombineRectangles	drivers/GL/vms_x_fix.h	213;"	d
XShapeGetRectangles	drivers/GL/vms_x_fix.h	214;"	d
XShrinkRegion	drivers/GL/vms_x_fix.h	215;"	d
XStoreBytes	drivers/GL/vms_x_fix.h	851;"	d
XStoreColor	drivers/GL/vms_x_fix.h	216;"	d
XStoreColors	drivers/GL/vms_x_fix.h	217;"	d
XStoreName	drivers/GL/vms_x_fix.h	218;"	d
XStringListToTextProperty	drivers/GL/vms_x_fix.h	671;"	d
XStringToKeysym	drivers/GL/vms_x_fix.h	219;"	d
XSubtractRegion	drivers/GL/vms_x_fix.h	220;"	d
XSupportsLocale	drivers/GL/vms_x_fix.h	221;"	d
XSync	drivers/GL/vms_x_fix.h	222;"	d
XSynchronize	drivers/GL/vms_x_fix.h	223;"	d
XTextExtents	drivers/GL/vms_x_fix.h	224;"	d
XTextExtents16	drivers/GL/vms_x_fix.h	225;"	d
XTextWidth	drivers/GL/vms_x_fix.h	226;"	d
XTextWidth16	drivers/GL/vms_x_fix.h	227;"	d
XTranslateCoordinates	drivers/GL/vms_x_fix.h	228;"	d
XUndefineCursor	drivers/GL/vms_x_fix.h	229;"	d
XUngrabButton	drivers/GL/vms_x_fix.h	852;"	d
XUngrabKeyboard	drivers/GL/vms_x_fix.h	230;"	d
XUngrabPointer	drivers/GL/vms_x_fix.h	231;"	d
XUngrabServer	drivers/GL/vms_x_fix.h	232;"	d
XUninstallColormap	drivers/GL/vms_x_fix.h	853;"	d
XUnionRectWithRegion	drivers/GL/vms_x_fix.h	233;"	d
XUnionRegion	drivers/GL/vms_x_fix.h	234;"	d
XUnmapWindow	drivers/GL/vms_x_fix.h	235;"	d
XUnsetICFocus	drivers/GL/vms_x_fix.h	237;"	d
XVaCreateNestedList	drivers/GL/vms_x_fix.h	238;"	d
XVisualIDFromVisual	drivers/GL/vms_x_fix.h	239;"	d
XWMGeometry	drivers/GL/vms_x_fix.h	840;"	d
XWarpPointer	drivers/GL/vms_x_fix.h	646;"	d
XWhitePixel	drivers/GL/vms_x_fix.h	841;"	d
XWidthOfScreen	drivers/GL/vms_x_fix.h	240;"	d
XWindowEvent	drivers/GL/vms_x_fix.h	241;"	d
XWithdrawWindow	drivers/GL/vms_x_fix.h	242;"	d
XXorRegion	drivers/GL/vms_x_fix.h	243;"	d
XYY_ASCII	kernel/TeGraph.h	38;"	d
XYY_BINARY	kernel/TeGraph.h	39;"	d
XY_ASCII	kernel/TeGraph.h	36;"	d
XY_BINARY	kernel/TeGraph.h	37;"	d
X_GLXChangeDrawableAttributes	drivers/GL/glxproto.h	1963;"	d
X_GLXClientInfo	drivers/GL/glxproto.h	1953;"	d
X_GLXCopyContext	drivers/GL/glxproto.h	1943;"	d
X_GLXCreateContext	drivers/GL/glxproto.h	1936;"	d
X_GLXCreateGLXPixmap	drivers/GL/glxproto.h	1946;"	d
X_GLXCreateNewContext	drivers/GL/glxproto.h	1957;"	d
X_GLXCreatePbuffer	drivers/GL/glxproto.h	1960;"	d
X_GLXCreatePixmap	drivers/GL/glxproto.h	1955;"	d
X_GLXCreateWindow	drivers/GL/glxproto.h	1964;"	d
X_GLXDestroyContext	drivers/GL/glxproto.h	1937;"	d
X_GLXDestroyGLXPixmap	drivers/GL/glxproto.h	1948;"	d
X_GLXDestroyPbuffer	drivers/GL/glxproto.h	1961;"	d
X_GLXDestroyPixmap	drivers/GL/glxproto.h	1956;"	d
X_GLXDestroyWindow	drivers/GL/glxproto.h	1965;"	d
X_GLXGetDrawableAttributes	drivers/GL/glxproto.h	1962;"	d
X_GLXGetFBConfigs	drivers/GL/glxproto.h	1954;"	d
X_GLXGetVisualConfigs	drivers/GL/glxproto.h	1947;"	d
X_GLXIsDirect	drivers/GL/glxproto.h	1939;"	d
X_GLXMakeContextCurrent	drivers/GL/glxproto.h	1959;"	d
X_GLXMakeCurrent	drivers/GL/glxproto.h	1938;"	d
X_GLXQueryContext	drivers/GL/glxproto.h	1958;"	d
X_GLXQueryExtensionsString	drivers/GL/glxproto.h	1951;"	d
X_GLXQueryServerString	drivers/GL/glxproto.h	1952;"	d
X_GLXQueryVersion	drivers/GL/glxproto.h	1940;"	d
X_GLXRender	drivers/GL/glxproto.h	1934;"	d
X_GLXRenderLarge	drivers/GL/glxproto.h	1935;"	d
X_GLXSwapBuffers	drivers/GL/glxproto.h	1944;"	d
X_GLXUseXFont	drivers/GL/glxproto.h	1945;"	d
X_GLXVendorPrivate	drivers/GL/glxproto.h	1949;"	d
X_GLXVendorPrivateWithReply	drivers/GL/glxproto.h	1950;"	d
X_GLXWaitGL	drivers/GL/glxproto.h	1941;"	d
X_GLXWaitX	drivers/GL/glxproto.h	1942;"	d
X_GLXvop_BindSwapBarrierSGIX	drivers/GL/glxproto.h	2384;"	d
X_GLXvop_BindTexImageEXT	drivers/GL/glxproto.h	2390;"	d
X_GLXvop_ChangeDrawableAttributesSGIX	drivers/GL/glxproto.h	2381;"	d
X_GLXvop_CreateContextWithConfigSGIX	drivers/GL/glxproto.h	2377;"	d
X_GLXvop_CreateGLXPbufferSGIX	drivers/GL/glxproto.h	2379;"	d
X_GLXvop_CreateGLXPixmapWithConfigSGIX	drivers/GL/glxproto.h	2378;"	d
X_GLXvop_CreateGLXVideoSourceSGIX	drivers/GL/glxproto.h	2374;"	d
X_GLXvop_DestroyGLXPbufferSGIX	drivers/GL/glxproto.h	2380;"	d
X_GLXvop_DestroyGLXVideoSourceSGIX	drivers/GL/glxproto.h	2375;"	d
X_GLXvop_DestroyHyperpipeConfigSGIX	drivers/GL/glxproto.h	2389;"	d
X_GLXvop_GetDrawableAttributesSGIX	drivers/GL/glxproto.h	2382;"	d
X_GLXvop_GetFBConfigsSGIX	drivers/GL/glxproto.h	2376;"	d
X_GLXvop_HyperpipeConfigSGIX	drivers/GL/glxproto.h	2388;"	d
X_GLXvop_JoinSwapGroupSGIX	drivers/GL/glxproto.h	2383;"	d
X_GLXvop_MakeCurrentReadSGI	drivers/GL/glxproto.h	2373;"	d
X_GLXvop_QueryContextInfoEXT	drivers/GL/glxproto.h	2371;"	d
X_GLXvop_QueryHyperpipeConfigSGIX	drivers/GL/glxproto.h	2387;"	d
X_GLXvop_QueryHyperpipeNetworkSGIX	drivers/GL/glxproto.h	2386;"	d
X_GLXvop_QueryMaxSwapBarriersSGIX	drivers/GL/glxproto.h	2385;"	d
X_GLXvop_ReleaseTexImageEXT	drivers/GL/glxproto.h	2391;"	d
X_GLXvop_SwapIntervalSGI	drivers/GL/glxproto.h	2372;"	d
X_GLrop_Accum	drivers/GL/glxproto.h	2170;"	d
X_GLrop_ActiveStencilFaceEXT	drivers/GL/glxproto.h	2503;"	d
X_GLrop_ActiveTextureARB	drivers/GL/glxproto.h	2263;"	d
X_GLrop_AlphaFunc	drivers/GL/glxproto.h	2191;"	d
X_GLrop_Begin	drivers/GL/glxproto.h	2037;"	d
X_GLrop_BindProgramARB	drivers/GL/glxproto.h	2417;"	d
X_GLrop_BindTexture	drivers/GL/glxproto.h	2232;"	d
X_GLrop_Bitmap	drivers/GL/glxproto.h	2038;"	d
X_GLrop_BlendColor	drivers/GL/glxproto.h	2235;"	d
X_GLrop_BlendEquation	drivers/GL/glxproto.h	2236;"	d
X_GLrop_BlendEquationSeparateEXT	drivers/GL/glxproto.h	2516;"	d
X_GLrop_BlendFunc	drivers/GL/glxproto.h	2192;"	d
X_GLrop_BlendFuncSeparate	drivers/GL/glxproto.h	2303;"	d
X_GLrop_CallList	drivers/GL/glxproto.h	2034;"	d
X_GLrop_CallLists	drivers/GL/glxproto.h	2035;"	d
X_GLrop_Clear	drivers/GL/glxproto.h	2160;"	d
X_GLrop_ClearAccum	drivers/GL/glxproto.h	2161;"	d
X_GLrop_ClearColor	drivers/GL/glxproto.h	2163;"	d
X_GLrop_ClearDepth	drivers/GL/glxproto.h	2165;"	d
X_GLrop_ClearIndex	drivers/GL/glxproto.h	2162;"	d
X_GLrop_ClearStencil	drivers/GL/glxproto.h	2164;"	d
X_GLrop_ClipPlane	drivers/GL/glxproto.h	2110;"	d
X_GLrop_Color3bv	drivers/GL/glxproto.h	2039;"	d
X_GLrop_Color3dv	drivers/GL/glxproto.h	2040;"	d
X_GLrop_Color3fv	drivers/GL/glxproto.h	2041;"	d
X_GLrop_Color3iv	drivers/GL/glxproto.h	2042;"	d
X_GLrop_Color3sv	drivers/GL/glxproto.h	2043;"	d
X_GLrop_Color3ubv	drivers/GL/glxproto.h	2044;"	d
X_GLrop_Color3uiv	drivers/GL/glxproto.h	2045;"	d
X_GLrop_Color3usv	drivers/GL/glxproto.h	2046;"	d
X_GLrop_Color4bv	drivers/GL/glxproto.h	2047;"	d
X_GLrop_Color4dv	drivers/GL/glxproto.h	2048;"	d
X_GLrop_Color4fv	drivers/GL/glxproto.h	2049;"	d
X_GLrop_Color4iv	drivers/GL/glxproto.h	2050;"	d
X_GLrop_Color4sv	drivers/GL/glxproto.h	2051;"	d
X_GLrop_Color4ubv	drivers/GL/glxproto.h	2052;"	d
X_GLrop_Color4uiv	drivers/GL/glxproto.h	2053;"	d
X_GLrop_Color4usv	drivers/GL/glxproto.h	2054;"	d
X_GLrop_ColorMask	drivers/GL/glxproto.h	2167;"	d
X_GLrop_ColorMaterial	drivers/GL/glxproto.h	2111;"	d
X_GLrop_ColorSubTable	drivers/GL/glxproto.h	2241;"	d
X_GLrop_ColorTable	drivers/GL/glxproto.h	2237;"	d
X_GLrop_ColorTableParameterfv	drivers/GL/glxproto.h	2238;"	d
X_GLrop_ColorTableParameteriv	drivers/GL/glxproto.h	2239;"	d
X_GLrop_CombinerInputNV	drivers/GL/glxproto.h	2465;"	d
X_GLrop_CombinerOutputNV	drivers/GL/glxproto.h	2466;"	d
X_GLrop_CombinerParameterfNV	drivers/GL/glxproto.h	2461;"	d
X_GLrop_CombinerParameterfvNV	drivers/GL/glxproto.h	2462;"	d
X_GLrop_CombinerParameteriNV	drivers/GL/glxproto.h	2463;"	d
X_GLrop_CombinerParameterivNV	drivers/GL/glxproto.h	2464;"	d
X_GLrop_CompressedTexImage1D	drivers/GL/glxproto.h	2280;"	d
X_GLrop_CompressedTexImage2D	drivers/GL/glxproto.h	2281;"	d
X_GLrop_CompressedTexImage3D	drivers/GL/glxproto.h	2282;"	d
X_GLrop_CompressedTexSubImage1D	drivers/GL/glxproto.h	2283;"	d
X_GLrop_CompressedTexSubImage2D	drivers/GL/glxproto.h	2284;"	d
X_GLrop_CompressedTexSubImage3D	drivers/GL/glxproto.h	2285;"	d
X_GLrop_ConvolutionFilter1D	drivers/GL/glxproto.h	2243;"	d
X_GLrop_ConvolutionFilter2D	drivers/GL/glxproto.h	2244;"	d
X_GLrop_ConvolutionParameterf	drivers/GL/glxproto.h	2245;"	d
X_GLrop_ConvolutionParameterfv	drivers/GL/glxproto.h	2246;"	d
X_GLrop_ConvolutionParameteri	drivers/GL/glxproto.h	2247;"	d
X_GLrop_ConvolutionParameteriv	drivers/GL/glxproto.h	2248;"	d
X_GLrop_CopyColorSubTable	drivers/GL/glxproto.h	2242;"	d
X_GLrop_CopyColorTable	drivers/GL/glxproto.h	2240;"	d
X_GLrop_CopyConvolutionFilter1D	drivers/GL/glxproto.h	2249;"	d
X_GLrop_CopyConvolutionFilter2D	drivers/GL/glxproto.h	2250;"	d
X_GLrop_CopyPixels	drivers/GL/glxproto.h	2204;"	d
X_GLrop_CopyTexImage1D	drivers/GL/glxproto.h	2226;"	d
X_GLrop_CopyTexImage2D	drivers/GL/glxproto.h	2227;"	d
X_GLrop_CopyTexSubImage1D	drivers/GL/glxproto.h	2228;"	d
X_GLrop_CopyTexSubImage2D	drivers/GL/glxproto.h	2229;"	d
X_GLrop_CopyTexSubImage3D	drivers/GL/glxproto.h	2258;"	d
X_GLrop_CullFace	drivers/GL/glxproto.h	2112;"	d
X_GLrop_DepthBoundsEXT	drivers/GL/glxproto.h	2513;"	d
X_GLrop_DepthFunc	drivers/GL/glxproto.h	2196;"	d
X_GLrop_DepthMask	drivers/GL/glxproto.h	2168;"	d
X_GLrop_DepthRange	drivers/GL/glxproto.h	2206;"	d
X_GLrop_Disable	drivers/GL/glxproto.h	2171;"	d
X_GLrop_DrawArrays	drivers/GL/glxproto.h	2224;"	d
X_GLrop_DrawArraysEXT	drivers/GL/glxproto.h	2259;"	d
X_GLrop_DrawBuffer	drivers/GL/glxproto.h	2159;"	d
X_GLrop_DrawPixels	drivers/GL/glxproto.h	2205;"	d
X_GLrop_EdgeFlagv	drivers/GL/glxproto.h	2055;"	d
X_GLrop_Enable	drivers/GL/glxproto.h	2172;"	d
X_GLrop_End	drivers/GL/glxproto.h	2056;"	d
X_GLrop_EvalCoord1dv	drivers/GL/glxproto.h	2183;"	d
X_GLrop_EvalCoord1fv	drivers/GL/glxproto.h	2184;"	d
X_GLrop_EvalCoord2dv	drivers/GL/glxproto.h	2185;"	d
X_GLrop_EvalCoord2fv	drivers/GL/glxproto.h	2186;"	d
X_GLrop_EvalMesh1	drivers/GL/glxproto.h	2187;"	d
X_GLrop_EvalMesh2	drivers/GL/glxproto.h	2189;"	d
X_GLrop_EvalPoint1	drivers/GL/glxproto.h	2188;"	d
X_GLrop_EvalPoint2	drivers/GL/glxproto.h	2190;"	d
X_GLrop_ExecuteProgramNV	drivers/GL/glxproto.h	2477;"	d
X_GLrop_FinalCombinerInputNV	drivers/GL/glxproto.h	2467;"	d
X_GLrop_FinishFenceNV	drivers/GL/glxproto.h	2471;"	d
X_GLrop_FogCoorddv	drivers/GL/glxproto.h	2292;"	d
X_GLrop_FogCoordfv	drivers/GL/glxproto.h	2291;"	d
X_GLrop_Fogf	drivers/GL/glxproto.h	2113;"	d
X_GLrop_Fogfv	drivers/GL/glxproto.h	2114;"	d
X_GLrop_Fogi	drivers/GL/glxproto.h	2115;"	d
X_GLrop_Fogiv	drivers/GL/glxproto.h	2116;"	d
X_GLrop_FrontFace	drivers/GL/glxproto.h	2117;"	d
X_GLrop_Frustum	drivers/GL/glxproto.h	2207;"	d
X_GLrop_Hint	drivers/GL/glxproto.h	2118;"	d
X_GLrop_Histogram	drivers/GL/glxproto.h	2252;"	d
X_GLrop_IndexMask	drivers/GL/glxproto.h	2169;"	d
X_GLrop_Indexdv	drivers/GL/glxproto.h	2057;"	d
X_GLrop_Indexfv	drivers/GL/glxproto.h	2058;"	d
X_GLrop_Indexiv	drivers/GL/glxproto.h	2059;"	d
X_GLrop_Indexsv	drivers/GL/glxproto.h	2060;"	d
X_GLrop_Indexubv	drivers/GL/glxproto.h	2234;"	d
X_GLrop_InitNames	drivers/GL/glxproto.h	2154;"	d
X_GLrop_LightModelf	drivers/GL/glxproto.h	2123;"	d
X_GLrop_LightModelfv	drivers/GL/glxproto.h	2124;"	d
X_GLrop_LightModeli	drivers/GL/glxproto.h	2125;"	d
X_GLrop_LightModeliv	drivers/GL/glxproto.h	2126;"	d
X_GLrop_Lightf	drivers/GL/glxproto.h	2119;"	d
X_GLrop_Lightfv	drivers/GL/glxproto.h	2120;"	d
X_GLrop_Lighti	drivers/GL/glxproto.h	2121;"	d
X_GLrop_Lightiv	drivers/GL/glxproto.h	2122;"	d
X_GLrop_LineStipple	drivers/GL/glxproto.h	2127;"	d
X_GLrop_LineWidth	drivers/GL/glxproto.h	2128;"	d
X_GLrop_ListBase	drivers/GL/glxproto.h	2036;"	d
X_GLrop_LoadIdentity	drivers/GL/glxproto.h	2208;"	d
X_GLrop_LoadMatrixd	drivers/GL/glxproto.h	2210;"	d
X_GLrop_LoadMatrixf	drivers/GL/glxproto.h	2209;"	d
X_GLrop_LoadName	drivers/GL/glxproto.h	2155;"	d
X_GLrop_LoadProgamNV	drivers/GL/glxproto.h	2479;"	d
X_GLrop_LogicOp	drivers/GL/glxproto.h	2193;"	d
X_GLrop_Map1d	drivers/GL/glxproto.h	2175;"	d
X_GLrop_Map1f	drivers/GL/glxproto.h	2176;"	d
X_GLrop_Map2d	drivers/GL/glxproto.h	2177;"	d
X_GLrop_Map2f	drivers/GL/glxproto.h	2178;"	d
X_GLrop_MapGrid1d	drivers/GL/glxproto.h	2179;"	d
X_GLrop_MapGrid1f	drivers/GL/glxproto.h	2180;"	d
X_GLrop_MapGrid2d	drivers/GL/glxproto.h	2181;"	d
X_GLrop_MapGrid2f	drivers/GL/glxproto.h	2182;"	d
X_GLrop_Materialf	drivers/GL/glxproto.h	2129;"	d
X_GLrop_Materialfv	drivers/GL/glxproto.h	2130;"	d
X_GLrop_Materiali	drivers/GL/glxproto.h	2131;"	d
X_GLrop_Materialiv	drivers/GL/glxproto.h	2132;"	d
X_GLrop_MatrixMode	drivers/GL/glxproto.h	2211;"	d
X_GLrop_Minmax	drivers/GL/glxproto.h	2253;"	d
X_GLrop_MultMatrixd	drivers/GL/glxproto.h	2213;"	d
X_GLrop_MultMatrixf	drivers/GL/glxproto.h	2212;"	d
X_GLrop_MultiTexCoord1dvARB	drivers/GL/glxproto.h	2264;"	d
X_GLrop_MultiTexCoord1fvARB	drivers/GL/glxproto.h	2265;"	d
X_GLrop_MultiTexCoord1ivARB	drivers/GL/glxproto.h	2266;"	d
X_GLrop_MultiTexCoord1svARB	drivers/GL/glxproto.h	2267;"	d
X_GLrop_MultiTexCoord2dvARB	drivers/GL/glxproto.h	2268;"	d
X_GLrop_MultiTexCoord2fvARB	drivers/GL/glxproto.h	2269;"	d
X_GLrop_MultiTexCoord2ivARB	drivers/GL/glxproto.h	2270;"	d
X_GLrop_MultiTexCoord2svARB	drivers/GL/glxproto.h	2271;"	d
X_GLrop_MultiTexCoord3dvARB	drivers/GL/glxproto.h	2272;"	d
X_GLrop_MultiTexCoord3fvARB	drivers/GL/glxproto.h	2273;"	d
X_GLrop_MultiTexCoord3ivARB	drivers/GL/glxproto.h	2274;"	d
X_GLrop_MultiTexCoord3svARB	drivers/GL/glxproto.h	2275;"	d
X_GLrop_MultiTexCoord4dvARB	drivers/GL/glxproto.h	2276;"	d
X_GLrop_MultiTexCoord4fvARB	drivers/GL/glxproto.h	2277;"	d
X_GLrop_MultiTexCoord4ivARB	drivers/GL/glxproto.h	2278;"	d
X_GLrop_MultiTexCoord4svARB	drivers/GL/glxproto.h	2279;"	d
X_GLrop_Normal3bv	drivers/GL/glxproto.h	2061;"	d
X_GLrop_Normal3dv	drivers/GL/glxproto.h	2062;"	d
X_GLrop_Normal3fv	drivers/GL/glxproto.h	2063;"	d
X_GLrop_Normal3iv	drivers/GL/glxproto.h	2064;"	d
X_GLrop_Normal3sv	drivers/GL/glxproto.h	2065;"	d
X_GLrop_Ortho	drivers/GL/glxproto.h	2214;"	d
X_GLrop_PassThrough	drivers/GL/glxproto.h	2156;"	d
X_GLrop_PixelMapfv	drivers/GL/glxproto.h	2200;"	d
X_GLrop_PixelMapuiv	drivers/GL/glxproto.h	2201;"	d
X_GLrop_PixelMapusv	drivers/GL/glxproto.h	2202;"	d
X_GLrop_PixelTransferf	drivers/GL/glxproto.h	2198;"	d
X_GLrop_PixelTransferi	drivers/GL/glxproto.h	2199;"	d
X_GLrop_PixelZoom	drivers/GL/glxproto.h	2197;"	d
X_GLrop_PointParameterfARB	drivers/GL/glxproto.h	2293;"	d
X_GLrop_PointParameterfvARB	drivers/GL/glxproto.h	2294;"	d
X_GLrop_PointParameteri	drivers/GL/glxproto.h	2304;"	d
X_GLrop_PointParameteriv	drivers/GL/glxproto.h	2305;"	d
X_GLrop_PointSize	drivers/GL/glxproto.h	2133;"	d
X_GLrop_PolygonMode	drivers/GL/glxproto.h	2134;"	d
X_GLrop_PolygonOffset	drivers/GL/glxproto.h	2225;"	d
X_GLrop_PolygonStipple	drivers/GL/glxproto.h	2135;"	d
X_GLrop_PopAttrib	drivers/GL/glxproto.h	2173;"	d
X_GLrop_PopMatrix	drivers/GL/glxproto.h	2215;"	d
X_GLrop_PopName	drivers/GL/glxproto.h	2157;"	d
X_GLrop_PrioritizeTextures	drivers/GL/glxproto.h	2233;"	d
X_GLrop_ProgramEnvParameter4dvARB	drivers/GL/glxproto.h	2419;"	d
X_GLrop_ProgramEnvParameter4fvARB	drivers/GL/glxproto.h	2418;"	d
X_GLrop_ProgramLocalParameter4dvARB	drivers/GL/glxproto.h	2432;"	d
X_GLrop_ProgramLocalParameter4fvARB	drivers/GL/glxproto.h	2431;"	d
X_GLrop_ProgramNamedParameter4dvNV	drivers/GL/glxproto.h	2507;"	d
X_GLrop_ProgramNamedParameter4fvNV	drivers/GL/glxproto.h	2506;"	d
X_GLrop_ProgramParameters4dvNV	drivers/GL/glxproto.h	2481;"	d
X_GLrop_ProgramParameters4fvNV	drivers/GL/glxproto.h	2480;"	d
X_GLrop_ProgramStringARB	drivers/GL/glxproto.h	2433;"	d
X_GLrop_PushAttrib	drivers/GL/glxproto.h	2174;"	d
X_GLrop_PushMatrix	drivers/GL/glxproto.h	2216;"	d
X_GLrop_PushName	drivers/GL/glxproto.h	2158;"	d
X_GLrop_RasterPos2dv	drivers/GL/glxproto.h	2066;"	d
X_GLrop_RasterPos2fv	drivers/GL/glxproto.h	2067;"	d
X_GLrop_RasterPos2iv	drivers/GL/glxproto.h	2068;"	d
X_GLrop_RasterPos2sv	drivers/GL/glxproto.h	2069;"	d
X_GLrop_RasterPos3dv	drivers/GL/glxproto.h	2070;"	d
X_GLrop_RasterPos3fv	drivers/GL/glxproto.h	2071;"	d
X_GLrop_RasterPos3iv	drivers/GL/glxproto.h	2072;"	d
X_GLrop_RasterPos3sv	drivers/GL/glxproto.h	2073;"	d
X_GLrop_RasterPos4dv	drivers/GL/glxproto.h	2074;"	d
X_GLrop_RasterPos4fv	drivers/GL/glxproto.h	2075;"	d
X_GLrop_RasterPos4iv	drivers/GL/glxproto.h	2076;"	d
X_GLrop_RasterPos4sv	drivers/GL/glxproto.h	2077;"	d
X_GLrop_ReadBuffer	drivers/GL/glxproto.h	2203;"	d
X_GLrop_Rectdv	drivers/GL/glxproto.h	2078;"	d
X_GLrop_Rectfv	drivers/GL/glxproto.h	2079;"	d
X_GLrop_Rectiv	drivers/GL/glxproto.h	2080;"	d
X_GLrop_Rectsv	drivers/GL/glxproto.h	2081;"	d
X_GLrop_RequestResidentProgramsNV	drivers/GL/glxproto.h	2478;"	d
X_GLrop_ResetHistogram	drivers/GL/glxproto.h	2254;"	d
X_GLrop_ResetMinmax	drivers/GL/glxproto.h	2255;"	d
X_GLrop_Rotated	drivers/GL/glxproto.h	2217;"	d
X_GLrop_Rotatef	drivers/GL/glxproto.h	2218;"	d
X_GLrop_SampleCoverageARB	drivers/GL/glxproto.h	2286;"	d
X_GLrop_Scaled	drivers/GL/glxproto.h	2219;"	d
X_GLrop_Scalef	drivers/GL/glxproto.h	2220;"	d
X_GLrop_Scissor	drivers/GL/glxproto.h	2136;"	d
X_GLrop_SecondaryColor3bv	drivers/GL/glxproto.h	2295;"	d
X_GLrop_SecondaryColor3dv	drivers/GL/glxproto.h	2299;"	d
X_GLrop_SecondaryColor3fv	drivers/GL/glxproto.h	2298;"	d
X_GLrop_SecondaryColor3iv	drivers/GL/glxproto.h	2297;"	d
X_GLrop_SecondaryColor3sv	drivers/GL/glxproto.h	2296;"	d
X_GLrop_SecondaryColor3ubv	drivers/GL/glxproto.h	2300;"	d
X_GLrop_SecondaryColor3uiv	drivers/GL/glxproto.h	2302;"	d
X_GLrop_SecondaryColor3usv	drivers/GL/glxproto.h	2301;"	d
X_GLrop_SeparableFilter2D	drivers/GL/glxproto.h	2251;"	d
X_GLrop_SetFenceNV	drivers/GL/glxproto.h	2470;"	d
X_GLrop_ShadeModel	drivers/GL/glxproto.h	2137;"	d
X_GLrop_StencilFunc	drivers/GL/glxproto.h	2194;"	d
X_GLrop_StencilMask	drivers/GL/glxproto.h	2166;"	d
X_GLrop_StencilOp	drivers/GL/glxproto.h	2195;"	d
X_GLrop_TexCoord1dv	drivers/GL/glxproto.h	2082;"	d
X_GLrop_TexCoord1fv	drivers/GL/glxproto.h	2083;"	d
X_GLrop_TexCoord1iv	drivers/GL/glxproto.h	2084;"	d
X_GLrop_TexCoord1sv	drivers/GL/glxproto.h	2085;"	d
X_GLrop_TexCoord2dv	drivers/GL/glxproto.h	2086;"	d
X_GLrop_TexCoord2fv	drivers/GL/glxproto.h	2087;"	d
X_GLrop_TexCoord2iv	drivers/GL/glxproto.h	2088;"	d
X_GLrop_TexCoord2sv	drivers/GL/glxproto.h	2089;"	d
X_GLrop_TexCoord3dv	drivers/GL/glxproto.h	2090;"	d
X_GLrop_TexCoord3fv	drivers/GL/glxproto.h	2091;"	d
X_GLrop_TexCoord3iv	drivers/GL/glxproto.h	2092;"	d
X_GLrop_TexCoord3sv	drivers/GL/glxproto.h	2093;"	d
X_GLrop_TexCoord4dv	drivers/GL/glxproto.h	2094;"	d
X_GLrop_TexCoord4fv	drivers/GL/glxproto.h	2095;"	d
X_GLrop_TexCoord4iv	drivers/GL/glxproto.h	2096;"	d
X_GLrop_TexCoord4sv	drivers/GL/glxproto.h	2097;"	d
X_GLrop_TexEnvf	drivers/GL/glxproto.h	2144;"	d
X_GLrop_TexEnvfv	drivers/GL/glxproto.h	2145;"	d
X_GLrop_TexEnvi	drivers/GL/glxproto.h	2146;"	d
X_GLrop_TexEnviv	drivers/GL/glxproto.h	2147;"	d
X_GLrop_TexGend	drivers/GL/glxproto.h	2148;"	d
X_GLrop_TexGendv	drivers/GL/glxproto.h	2149;"	d
X_GLrop_TexGenf	drivers/GL/glxproto.h	2150;"	d
X_GLrop_TexGenfv	drivers/GL/glxproto.h	2151;"	d
X_GLrop_TexGeni	drivers/GL/glxproto.h	2152;"	d
X_GLrop_TexGeniv	drivers/GL/glxproto.h	2153;"	d
X_GLrop_TexImage1D	drivers/GL/glxproto.h	2142;"	d
X_GLrop_TexImage2D	drivers/GL/glxproto.h	2143;"	d
X_GLrop_TexImage3D	drivers/GL/glxproto.h	2256;"	d
X_GLrop_TexParameterf	drivers/GL/glxproto.h	2138;"	d
X_GLrop_TexParameterfv	drivers/GL/glxproto.h	2139;"	d
X_GLrop_TexParameteri	drivers/GL/glxproto.h	2140;"	d
X_GLrop_TexParameteriv	drivers/GL/glxproto.h	2141;"	d
X_GLrop_TexSubImage1D	drivers/GL/glxproto.h	2230;"	d
X_GLrop_TexSubImage2D	drivers/GL/glxproto.h	2231;"	d
X_GLrop_TexSubImage3D	drivers/GL/glxproto.h	2257;"	d
X_GLrop_TrackMatrixNV	drivers/GL/glxproto.h	2482;"	d
X_GLrop_Translated	drivers/GL/glxproto.h	2221;"	d
X_GLrop_Translatef	drivers/GL/glxproto.h	2222;"	d
X_GLrop_Vertex2dv	drivers/GL/glxproto.h	2098;"	d
X_GLrop_Vertex2fv	drivers/GL/glxproto.h	2099;"	d
X_GLrop_Vertex2iv	drivers/GL/glxproto.h	2100;"	d
X_GLrop_Vertex2sv	drivers/GL/glxproto.h	2101;"	d
X_GLrop_Vertex3dv	drivers/GL/glxproto.h	2102;"	d
X_GLrop_Vertex3fv	drivers/GL/glxproto.h	2103;"	d
X_GLrop_Vertex3iv	drivers/GL/glxproto.h	2104;"	d
X_GLrop_Vertex3sv	drivers/GL/glxproto.h	2105;"	d
X_GLrop_Vertex4dv	drivers/GL/glxproto.h	2106;"	d
X_GLrop_Vertex4fv	drivers/GL/glxproto.h	2107;"	d
X_GLrop_Vertex4iv	drivers/GL/glxproto.h	2108;"	d
X_GLrop_Vertex4sv	drivers/GL/glxproto.h	2109;"	d
X_GLrop_VertexAttrib1dvARB	drivers/GL/glxproto.h	2428;"	d
X_GLrop_VertexAttrib1fvARB	drivers/GL/glxproto.h	2424;"	d
X_GLrop_VertexAttrib1svARB	drivers/GL/glxproto.h	2420;"	d
X_GLrop_VertexAttrib2dvARB	drivers/GL/glxproto.h	2429;"	d
X_GLrop_VertexAttrib2fvARB	drivers/GL/glxproto.h	2425;"	d
X_GLrop_VertexAttrib2svARB	drivers/GL/glxproto.h	2421;"	d
X_GLrop_VertexAttrib3dvARB	drivers/GL/glxproto.h	2430;"	d
X_GLrop_VertexAttrib3fvARB	drivers/GL/glxproto.h	2426;"	d
X_GLrop_VertexAttrib3svARB	drivers/GL/glxproto.h	2422;"	d
X_GLrop_VertexAttrib4NbvARB	drivers/GL/glxproto.h	2441;"	d
X_GLrop_VertexAttrib4NivARB	drivers/GL/glxproto.h	2443;"	d
X_GLrop_VertexAttrib4NsvARB	drivers/GL/glxproto.h	2442;"	d
X_GLrop_VertexAttrib4NubvARB	drivers/GL/glxproto.h	2435;"	d
X_GLrop_VertexAttrib4NuivARB	drivers/GL/glxproto.h	2445;"	d
X_GLrop_VertexAttrib4NusvARB	drivers/GL/glxproto.h	2444;"	d
X_GLrop_VertexAttrib4bvARB	drivers/GL/glxproto.h	2436;"	d
X_GLrop_VertexAttrib4dvARB	drivers/GL/glxproto.h	2434;"	d
X_GLrop_VertexAttrib4fvARB	drivers/GL/glxproto.h	2427;"	d
X_GLrop_VertexAttrib4ivARB	drivers/GL/glxproto.h	2437;"	d
X_GLrop_VertexAttrib4svARB	drivers/GL/glxproto.h	2423;"	d
X_GLrop_VertexAttrib4ubvARB	drivers/GL/glxproto.h	2438;"	d
X_GLrop_VertexAttrib4uivARB	drivers/GL/glxproto.h	2440;"	d
X_GLrop_VertexAttrib4usvARB	drivers/GL/glxproto.h	2439;"	d
X_GLrop_VertexAttribs1dvNV	drivers/GL/glxproto.h	2491;"	d
X_GLrop_VertexAttribs1fvNV	drivers/GL/glxproto.h	2487;"	d
X_GLrop_VertexAttribs1svNV	drivers/GL/glxproto.h	2483;"	d
X_GLrop_VertexAttribs2dvNV	drivers/GL/glxproto.h	2492;"	d
X_GLrop_VertexAttribs2fvNV	drivers/GL/glxproto.h	2488;"	d
X_GLrop_VertexAttribs2svNV	drivers/GL/glxproto.h	2484;"	d
X_GLrop_VertexAttribs3dvNV	drivers/GL/glxproto.h	2493;"	d
X_GLrop_VertexAttribs3fvNV	drivers/GL/glxproto.h	2489;"	d
X_GLrop_VertexAttribs3svNV	drivers/GL/glxproto.h	2485;"	d
X_GLrop_VertexAttribs4dvNV	drivers/GL/glxproto.h	2494;"	d
X_GLrop_VertexAttribs4fvNV	drivers/GL/glxproto.h	2490;"	d
X_GLrop_VertexAttribs4svNV	drivers/GL/glxproto.h	2486;"	d
X_GLrop_VertexAttribs4ubvNV	drivers/GL/glxproto.h	2495;"	d
X_GLrop_VertexBlendARB	drivers/GL/glxproto.h	2407;"	d
X_GLrop_VertexWeightfvEXT	drivers/GL/glxproto.h	2458;"	d
X_GLrop_Viewport	drivers/GL/glxproto.h	2223;"	d
X_GLrop_WeightbvARB	drivers/GL/glxproto.h	2401;"	d
X_GLrop_WeightdvARB	drivers/GL/glxproto.h	2409;"	d
X_GLrop_WeightfvARB	drivers/GL/glxproto.h	2408;"	d
X_GLrop_WeightivARB	drivers/GL/glxproto.h	2405;"	d
X_GLrop_WeightsvARB	drivers/GL/glxproto.h	2403;"	d
X_GLrop_WeightubvARB	drivers/GL/glxproto.h	2402;"	d
X_GLrop_WeightuivARB	drivers/GL/glxproto.h	2406;"	d
X_GLrop_WeightusvARB	drivers/GL/glxproto.h	2404;"	d
X_GLrop_WindowPos3fARB	drivers/GL/glxproto.h	2290;"	d
X_GLsop_AreTexturesResident	drivers/GL/glxproto.h	2012;"	d
X_GLsop_DeleteLists	drivers/GL/glxproto.h	1972;"	d
X_GLsop_DeleteTextures	drivers/GL/glxproto.h	2013;"	d
X_GLsop_EndList	drivers/GL/glxproto.h	1971;"	d
X_GLsop_FeedbackBuffer	drivers/GL/glxproto.h	1974;"	d
X_GLsop_Finish	drivers/GL/glxproto.h	1977;"	d
X_GLsop_Flush	drivers/GL/glxproto.h	1978;"	d
X_GLsop_GenLists	drivers/GL/glxproto.h	1973;"	d
X_GLsop_GenTextures	drivers/GL/glxproto.h	2014;"	d
X_GLsop_GetBooleanv	drivers/GL/glxproto.h	1982;"	d
X_GLsop_GetClipPlane	drivers/GL/glxproto.h	1983;"	d
X_GLsop_GetColorTable	drivers/GL/glxproto.h	2016;"	d
X_GLsop_GetColorTableParameterfv	drivers/GL/glxproto.h	2017;"	d
X_GLsop_GetColorTableParameteriv	drivers/GL/glxproto.h	2018;"	d
X_GLsop_GetCompressedTexImage	drivers/GL/glxproto.h	2029;"	d
X_GLsop_GetConvolutionFilter	drivers/GL/glxproto.h	2019;"	d
X_GLsop_GetConvolutionParameterfv	drivers/GL/glxproto.h	2020;"	d
X_GLsop_GetConvolutionParameteriv	drivers/GL/glxproto.h	2021;"	d
X_GLsop_GetDoublev	drivers/GL/glxproto.h	1984;"	d
X_GLsop_GetError	drivers/GL/glxproto.h	1985;"	d
X_GLsop_GetFloatv	drivers/GL/glxproto.h	1986;"	d
X_GLsop_GetHistogram	drivers/GL/glxproto.h	2023;"	d
X_GLsop_GetHistogramParameterfv	drivers/GL/glxproto.h	2024;"	d
X_GLsop_GetHistogramParameteriv	drivers/GL/glxproto.h	2025;"	d
X_GLsop_GetIntegerv	drivers/GL/glxproto.h	1987;"	d
X_GLsop_GetLightfv	drivers/GL/glxproto.h	1988;"	d
X_GLsop_GetLightiv	drivers/GL/glxproto.h	1989;"	d
X_GLsop_GetMapdv	drivers/GL/glxproto.h	1990;"	d
X_GLsop_GetMapfv	drivers/GL/glxproto.h	1991;"	d
X_GLsop_GetMapiv	drivers/GL/glxproto.h	1992;"	d
X_GLsop_GetMaterialfv	drivers/GL/glxproto.h	1993;"	d
X_GLsop_GetMaterialiv	drivers/GL/glxproto.h	1994;"	d
X_GLsop_GetMinmax	drivers/GL/glxproto.h	2026;"	d
X_GLsop_GetMinmaxParameterfv	drivers/GL/glxproto.h	2027;"	d
X_GLsop_GetMinmaxParameteriv	drivers/GL/glxproto.h	2028;"	d
X_GLsop_GetPixelMapfv	drivers/GL/glxproto.h	1995;"	d
X_GLsop_GetPixelMapuiv	drivers/GL/glxproto.h	1996;"	d
X_GLsop_GetPixelMapusv	drivers/GL/glxproto.h	1997;"	d
X_GLsop_GetPolygonStipple	drivers/GL/glxproto.h	1998;"	d
X_GLsop_GetSeparableFilter	drivers/GL/glxproto.h	2022;"	d
X_GLsop_GetString	drivers/GL/glxproto.h	1999;"	d
X_GLsop_GetTexEnvfv	drivers/GL/glxproto.h	2000;"	d
X_GLsop_GetTexEnviv	drivers/GL/glxproto.h	2001;"	d
X_GLsop_GetTexGendv	drivers/GL/glxproto.h	2002;"	d
X_GLsop_GetTexGenfv	drivers/GL/glxproto.h	2003;"	d
X_GLsop_GetTexGeniv	drivers/GL/glxproto.h	2004;"	d
X_GLsop_GetTexImage	drivers/GL/glxproto.h	2005;"	d
X_GLsop_GetTexLevelParameterfv	drivers/GL/glxproto.h	2008;"	d
X_GLsop_GetTexLevelParameteriv	drivers/GL/glxproto.h	2009;"	d
X_GLsop_GetTexParameterfv	drivers/GL/glxproto.h	2006;"	d
X_GLsop_GetTexParameteriv	drivers/GL/glxproto.h	2007;"	d
X_GLsop_IsEnabled	drivers/GL/glxproto.h	2010;"	d
X_GLsop_IsList	drivers/GL/glxproto.h	2011;"	d
X_GLsop_IsTexture	drivers/GL/glxproto.h	2015;"	d
X_GLsop_NewList	drivers/GL/glxproto.h	1970;"	d
X_GLsop_PixelStoref	drivers/GL/glxproto.h	1979;"	d
X_GLsop_PixelStorei	drivers/GL/glxproto.h	1980;"	d
X_GLsop_ReadPixels	drivers/GL/glxproto.h	1981;"	d
X_GLsop_RenderMode	drivers/GL/glxproto.h	1976;"	d
X_GLsop_SelectBuffer	drivers/GL/glxproto.h	1975;"	d
X_GLvop_AreProgramsResidentNV	drivers/GL/glxproto.h	2338;"	d
X_GLvop_AreTexturesResidentEXT	drivers/GL/glxproto.h	2323;"	d
X_GLvop_CheckFramebufferStatusEXT	drivers/GL/glxproto.h	2524;"	d
X_GLvop_DeleteFenceNV	drivers/GL/glxproto.h	2333;"	d
X_GLvop_DeleteProgramARB	drivers/GL/glxproto.h	2339;"	d
X_GLvop_DeleteTexturesEXT	drivers/GL/glxproto.h	2324;"	d
X_GLvop_FlushRasterSGIX	drivers/GL/glxproto.h	2367;"	d
X_GLvop_GenFencesNV	drivers/GL/glxproto.h	2334;"	d
X_GLvop_GenFramebuffersEXT	drivers/GL/glxproto.h	2523;"	d
X_GLvop_GenProgramsARB	drivers/GL/glxproto.h	2340;"	d
X_GLvop_GenRenderbuffersEXT	drivers/GL/glxproto.h	2520;"	d
X_GLvop_GenTexturesEXT	drivers/GL/glxproto.h	2325;"	d
X_GLvop_GetColorTableParameterfvSGI	drivers/GL/glxproto.h	2361;"	d
X_GLvop_GetColorTableParameterivSGI	drivers/GL/glxproto.h	2362;"	d
X_GLvop_GetColorTableSGI	drivers/GL/glxproto.h	2360;"	d
X_GLvop_GetCombinerInputParameterfvNV	drivers/GL/glxproto.h	2327;"	d
X_GLvop_GetCombinerInputParameterivNV	drivers/GL/glxproto.h	2328;"	d
X_GLvop_GetCombinerOutputParameterfvNV	drivers/GL/glxproto.h	2329;"	d
X_GLvop_GetCombinerOutputParameterivNV	drivers/GL/glxproto.h	2330;"	d
X_GLvop_GetConvolutionFilterEXT	drivers/GL/glxproto.h	2313;"	d
X_GLvop_GetConvolutionParameterfvEXT	drivers/GL/glxproto.h	2314;"	d
X_GLvop_GetConvolutionParameterivEXT	drivers/GL/glxproto.h	2315;"	d
X_GLvop_GetDetailTexFuncSGIS	drivers/GL/glxproto.h	2358;"	d
X_GLvop_GetFenceivNV	drivers/GL/glxproto.h	2337;"	d
X_GLvop_GetFinalCombinerOutputParameterfvNV	drivers/GL/glxproto.h	2331;"	d
X_GLvop_GetFinalCombinerOutputParameterivNV	drivers/GL/glxproto.h	2332;"	d
X_GLvop_GetFramebufferAttachmentParameterivEXT	drivers/GL/glxproto.h	2525;"	d
X_GLvop_GetHistogramEXT	drivers/GL/glxproto.h	2317;"	d
X_GLvop_GetHistogramParameterfvEXT	drivers/GL/glxproto.h	2318;"	d
X_GLvop_GetHistogramParameterivEXT	drivers/GL/glxproto.h	2319;"	d
X_GLvop_GetInstrumentsSGIX	drivers/GL/glxproto.h	2364;"	d
X_GLvop_GetMinmaxEXT	drivers/GL/glxproto.h	2320;"	d
X_GLvop_GetMinmaxParameterfvEXT	drivers/GL/glxproto.h	2321;"	d
X_GLvop_GetMinmaxParameterivEXT	drivers/GL/glxproto.h	2322;"	d
X_GLvop_GetProgramEnvParameterdvARB	drivers/GL/glxproto.h	2342;"	d
X_GLvop_GetProgramEnvParameterfvARB	drivers/GL/glxproto.h	2341;"	d
X_GLvop_GetProgramEnvParameterivNV	drivers/GL/glxproto.h	2343;"	d
X_GLvop_GetProgramLocalParameterdvARB	drivers/GL/glxproto.h	2351;"	d
X_GLvop_GetProgramLocalParameterfvARB	drivers/GL/glxproto.h	2350;"	d
X_GLvop_GetProgramNamedParameter4dvNV	drivers/GL/glxproto.h	2355;"	d
X_GLvop_GetProgramNamedParameter4fvNV	drivers/GL/glxproto.h	2354;"	d
X_GLvop_GetProgramStringARB	drivers/GL/glxproto.h	2353;"	d
X_GLvop_GetProgramStringNV	drivers/GL/glxproto.h	2344;"	d
X_GLvop_GetProgramivARB	drivers/GL/glxproto.h	2352;"	d
X_GLvop_GetRenderbufferParameterivEXT	drivers/GL/glxproto.h	2521;"	d
X_GLvop_GetSeparableFilterEXT	drivers/GL/glxproto.h	2316;"	d
X_GLvop_GetSharpenTexFuncSGIS	drivers/GL/glxproto.h	2359;"	d
X_GLvop_GetTexFilterFuncSGIS	drivers/GL/glxproto.h	2363;"	d
X_GLvop_GetTrackMatrixivNV	drivers/GL/glxproto.h	2345;"	d
X_GLvop_GetVertexAttribdvARB	drivers/GL/glxproto.h	2346;"	d
X_GLvop_GetVertexAttribfvARB	drivers/GL/glxproto.h	2347;"	d
X_GLvop_GetVertexAttribivARB	drivers/GL/glxproto.h	2348;"	d
X_GLvop_InstrumentsBufferSGIX	drivers/GL/glxproto.h	2365;"	d
X_GLvop_IsFenceNV	drivers/GL/glxproto.h	2335;"	d
X_GLvop_IsFramebufferEXT	drivers/GL/glxproto.h	2522;"	d
X_GLvop_IsProgramARB	drivers/GL/glxproto.h	2349;"	d
X_GLvop_IsRenderbufferEXT	drivers/GL/glxproto.h	2519;"	d
X_GLvop_IsTextureEXT	drivers/GL/glxproto.h	2326;"	d
X_GLvop_PollInstrumentsSGIX	drivers/GL/glxproto.h	2366;"	d
X_GLvop_SampleMaskSGIS	drivers/GL/glxproto.h	2356;"	d
X_GLvop_SamplePatternSGIS	drivers/GL/glxproto.h	2357;"	d
X_GLvop_TestFenceNV	drivers/GL/glxproto.h	2336;"	d
X_max	stat/TeSkaterGrafo.h	/^	double X_min,X_max;\/\/Usado para conversao de escala$/;"	m	class:TSkaterGrafo
X_min	stat/TeSkaterGrafo.h	/^	double X_min,X_max;\/\/Usado para conversao de escala$/;"	m	class:TSkaterGrafo
X_pixels	kernel/TeGraph.h	/^	int X_pixels;          \/* number of pixels in horizontal direction *\/$/;"	m	class:TeGraphPlot
Xaxis_y	kernel/TeGraph.h	/^	int Xaxis_y;           \/* y pixel coordinate of X axis title *\/$/;"	m	class:TeGraphPlot
XmActivateProtocol	drivers/GL/vms_x_fix.h	779;"	d
XmAddProtocolCallback	drivers/GL/vms_x_fix.h	244;"	d
XmAddProtocols	drivers/GL/vms_x_fix.h	245;"	d
XmChangeColor	drivers/GL/vms_x_fix.h	246;"	d
XmClipboardCopy	drivers/GL/vms_x_fix.h	247;"	d
XmClipboardEndCopy	drivers/GL/vms_x_fix.h	248;"	d
XmClipboardInquireLength	drivers/GL/vms_x_fix.h	249;"	d
XmClipboardLock	drivers/GL/vms_x_fix.h	250;"	d
XmClipboardRetrieve	drivers/GL/vms_x_fix.h	251;"	d
XmClipboardStartCopy	drivers/GL/vms_x_fix.h	252;"	d
XmClipboardUnlock	drivers/GL/vms_x_fix.h	253;"	d
XmCreateArrowButton	drivers/GL/vms_x_fix.h	254;"	d
XmCreateArrowButtonGadget	drivers/GL/vms_x_fix.h	255;"	d
XmCreateBulletinBoardDialog	drivers/GL/vms_x_fix.h	780;"	d
XmCreateCascadeButton	drivers/GL/vms_x_fix.h	256;"	d
XmCreateDialogShell	drivers/GL/vms_x_fix.h	257;"	d
XmCreateDragIcon	drivers/GL/vms_x_fix.h	258;"	d
XmCreateDrawingArea	drivers/GL/vms_x_fix.h	259;"	d
XmCreateDrawnButton	drivers/GL/vms_x_fix.h	260;"	d
XmCreateErrorDialog	drivers/GL/vms_x_fix.h	781;"	d
XmCreateFileSelectionBox	drivers/GL/vms_x_fix.h	261;"	d
XmCreateFileSelectionDialog	drivers/GL/vms_x_fix.h	262;"	d
XmCreateForm	drivers/GL/vms_x_fix.h	263;"	d
XmCreateFormDialog	drivers/GL/vms_x_fix.h	264;"	d
XmCreateFrame	drivers/GL/vms_x_fix.h	265;"	d
XmCreateInformationDialog	drivers/GL/vms_x_fix.h	266;"	d
XmCreateLabel	drivers/GL/vms_x_fix.h	682;"	d
XmCreateLabelGadget	drivers/GL/vms_x_fix.h	267;"	d
XmCreateMainWindow	drivers/GL/vms_x_fix.h	268;"	d
XmCreateMenuBar	drivers/GL/vms_x_fix.h	269;"	d
XmCreateMessageBox	drivers/GL/vms_x_fix.h	270;"	d
XmCreateMessageDialog	drivers/GL/vms_x_fix.h	271;"	d
XmCreateOptionMenu	drivers/GL/vms_x_fix.h	272;"	d
XmCreatePanedWindow	drivers/GL/vms_x_fix.h	273;"	d
XmCreatePopupMenu	drivers/GL/vms_x_fix.h	274;"	d
XmCreatePromptDialog	drivers/GL/vms_x_fix.h	275;"	d
XmCreatePulldownMenu	drivers/GL/vms_x_fix.h	276;"	d
XmCreatePushButton	drivers/GL/vms_x_fix.h	277;"	d
XmCreatePushButtonGadget	drivers/GL/vms_x_fix.h	278;"	d
XmCreateQuestionDialog	drivers/GL/vms_x_fix.h	279;"	d
XmCreateRadioBox	drivers/GL/vms_x_fix.h	280;"	d
XmCreateRowColumn	drivers/GL/vms_x_fix.h	281;"	d
XmCreateScale	drivers/GL/vms_x_fix.h	282;"	d
XmCreateScrollBar	drivers/GL/vms_x_fix.h	283;"	d
XmCreateScrolledList	drivers/GL/vms_x_fix.h	284;"	d
XmCreateScrolledText	drivers/GL/vms_x_fix.h	285;"	d
XmCreateScrolledWindow	drivers/GL/vms_x_fix.h	286;"	d
XmCreateSelectionDialog	drivers/GL/vms_x_fix.h	287;"	d
XmCreateSeparator	drivers/GL/vms_x_fix.h	288;"	d
XmCreateSeparatorGadget	drivers/GL/vms_x_fix.h	289;"	d
XmCreateTemplateDialog	drivers/GL/vms_x_fix.h	290;"	d
XmCreateText	drivers/GL/vms_x_fix.h	291;"	d
XmCreateTextField	drivers/GL/vms_x_fix.h	292;"	d
XmCreateToggleButton	drivers/GL/vms_x_fix.h	293;"	d
XmCreateToggleButtonGadget	drivers/GL/vms_x_fix.h	294;"	d
XmCreateWarningDialog	drivers/GL/vms_x_fix.h	782;"	d
XmCvtCTToXmString	drivers/GL/vms_x_fix.h	783;"	d
XmDestroyPixmap	drivers/GL/vms_x_fix.h	784;"	d
XmDragStart	drivers/GL/vms_x_fix.h	295;"	d
XmDropSiteRegister	drivers/GL/vms_x_fix.h	296;"	d
XmDropSiteUnregister	drivers/GL/vms_x_fix.h	297;"	d
XmDropSiteUpdate	drivers/GL/vms_x_fix.h	298;"	d
XmDropTransferStart	drivers/GL/vms_x_fix.h	299;"	d
XmFileSelectionBoxGetChild	drivers/GL/vms_x_fix.h	300;"	d
XmFileSelectionDoSearch	drivers/GL/vms_x_fix.h	301;"	d
XmFontListAppendEntry	drivers/GL/vms_x_fix.h	302;"	d
XmFontListCopy	drivers/GL/vms_x_fix.h	303;"	d
XmFontListCreate	drivers/GL/vms_x_fix.h	304;"	d
XmFontListEntryCreate	drivers/GL/vms_x_fix.h	305;"	d
XmFontListEntryFree	drivers/GL/vms_x_fix.h	306;"	d
XmFontListEntryGetFont	drivers/GL/vms_x_fix.h	307;"	d
XmFontListEntryGetTag	drivers/GL/vms_x_fix.h	308;"	d
XmFontListEntryLoad	drivers/GL/vms_x_fix.h	309;"	d
XmFontListFree	drivers/GL/vms_x_fix.h	310;"	d
XmFontListFreeFontContext	drivers/GL/vms_x_fix.h	311;"	d
XmFontListGetNextFont	drivers/GL/vms_x_fix.h	312;"	d
XmFontListInitFontContext	drivers/GL/vms_x_fix.h	313;"	d
XmFontListNextEntry	drivers/GL/vms_x_fix.h	314;"	d
XmGetColors	drivers/GL/vms_x_fix.h	315;"	d
XmGetFocusWidget	drivers/GL/vms_x_fix.h	316;"	d
XmGetMenuCursor	drivers/GL/vms_x_fix.h	317;"	d
XmGetPixmap	drivers/GL/vms_x_fix.h	785;"	d
XmGetPixmapByDepth	drivers/GL/vms_x_fix.h	318;"	d
XmGetTearOffControl	drivers/GL/vms_x_fix.h	319;"	d
XmGetXmDisplay	drivers/GL/vms_x_fix.h	320;"	d
XmImMbLookupString	drivers/GL/vms_x_fix.h	321;"	d
XmImRegister	drivers/GL/vms_x_fix.h	322;"	d
XmImSetFocusValues	drivers/GL/vms_x_fix.h	323;"	d
XmImSetValues	drivers/GL/vms_x_fix.h	324;"	d
XmImUnregister	drivers/GL/vms_x_fix.h	325;"	d
XmImUnsetFocus	drivers/GL/vms_x_fix.h	326;"	d
XmInstallImage	drivers/GL/vms_x_fix.h	786;"	d
XmInternAtom	drivers/GL/vms_x_fix.h	327;"	d
XmIsMotifWMRunning	drivers/GL/vms_x_fix.h	328;"	d
XmListAddItem	drivers/GL/vms_x_fix.h	329;"	d
XmListAddItemUnselected	drivers/GL/vms_x_fix.h	330;"	d
XmListAddItems	drivers/GL/vms_x_fix.h	787;"	d
XmListAddItemsUnselected	drivers/GL/vms_x_fix.h	331;"	d
XmListDeleteAllItems	drivers/GL/vms_x_fix.h	332;"	d
XmListDeleteItem	drivers/GL/vms_x_fix.h	788;"	d
XmListDeleteItemsPos	drivers/GL/vms_x_fix.h	333;"	d
XmListDeletePos	drivers/GL/vms_x_fix.h	334;"	d
XmListDeselectAllItems	drivers/GL/vms_x_fix.h	335;"	d
XmListDeselectPos	drivers/GL/vms_x_fix.h	336;"	d
XmListGetKbdItemPos	drivers/GL/vms_x_fix.h	337;"	d
XmListGetMatchPos	drivers/GL/vms_x_fix.h	338;"	d
XmListGetSelectedPos	drivers/GL/vms_x_fix.h	339;"	d
XmListItemExists	drivers/GL/vms_x_fix.h	789;"	d
XmListItemPos	drivers/GL/vms_x_fix.h	790;"	d
XmListPosSelected	drivers/GL/vms_x_fix.h	340;"	d
XmListReplaceItems	drivers/GL/vms_x_fix.h	791;"	d
XmListReplaceItemsPos	drivers/GL/vms_x_fix.h	792;"	d
XmListSelectItem	drivers/GL/vms_x_fix.h	341;"	d
XmListSelectPos	drivers/GL/vms_x_fix.h	342;"	d
XmListSetBottomPos	drivers/GL/vms_x_fix.h	343;"	d
XmListSetItem	drivers/GL/vms_x_fix.h	344;"	d
XmListSetKbdItemPos	drivers/GL/vms_x_fix.h	345;"	d
XmListSetPos	drivers/GL/vms_x_fix.h	346;"	d
XmMainWindowSetAreas	drivers/GL/vms_x_fix.h	347;"	d
XmMenuPosition	drivers/GL/vms_x_fix.h	348;"	d
XmMessageBoxGetChild	drivers/GL/vms_x_fix.h	349;"	d
XmOptionButtonGadget	drivers/GL/vms_x_fix.h	350;"	d
XmOptionLabelGadget	drivers/GL/vms_x_fix.h	351;"	d
XmProcessTraversal	drivers/GL/vms_x_fix.h	352;"	d
XmQmotif	drivers/GL/vms_x_fix.h	353;"	d
XmRemoveProtocolCallback	drivers/GL/vms_x_fix.h	354;"	d
XmRemoveProtocols	drivers/GL/vms_x_fix.h	793;"	d
XmRemoveTabGroup	drivers/GL/vms_x_fix.h	794;"	d
XmRepTypeGetId	drivers/GL/vms_x_fix.h	355;"	d
XmRepTypeGetRecord	drivers/GL/vms_x_fix.h	356;"	d
XmRepTypeRegister	drivers/GL/vms_x_fix.h	357;"	d
XmRepTypeValidValue	drivers/GL/vms_x_fix.h	358;"	d
XmScrollBarSetValues	drivers/GL/vms_x_fix.h	359;"	d
XmScrolledWindowSetAreas	drivers/GL/vms_x_fix.h	360;"	d
XmSelectionBoxGetChild	drivers/GL/vms_x_fix.h	361;"	d
XmSetColorCalculation	drivers/GL/vms_x_fix.h	795;"	d
XmStringByteCompare	drivers/GL/vms_x_fix.h	362;"	d
XmStringCompare	drivers/GL/vms_x_fix.h	363;"	d
XmStringConcat	drivers/GL/vms_x_fix.h	364;"	d
XmStringCopy	drivers/GL/vms_x_fix.h	365;"	d
XmStringCreate	drivers/GL/vms_x_fix.h	366;"	d
XmStringCreateLocalized	drivers/GL/vms_x_fix.h	367;"	d
XmStringCreateLtoR	drivers/GL/vms_x_fix.h	368;"	d
XmStringCreateSimple	drivers/GL/vms_x_fix.h	369;"	d
XmStringDraw	drivers/GL/vms_x_fix.h	370;"	d
XmStringDrawUnderline	drivers/GL/vms_x_fix.h	371;"	d
XmStringExtent	drivers/GL/vms_x_fix.h	372;"	d
XmStringFree	drivers/GL/vms_x_fix.h	373;"	d
XmStringFreeContext	drivers/GL/vms_x_fix.h	374;"	d
XmStringGetLtoR	drivers/GL/vms_x_fix.h	375;"	d
XmStringGetNextComponent	drivers/GL/vms_x_fix.h	376;"	d
XmStringGetNextSegment	drivers/GL/vms_x_fix.h	377;"	d
XmStringInitContext	drivers/GL/vms_x_fix.h	378;"	d
XmStringLength	drivers/GL/vms_x_fix.h	379;"	d
XmStringLtoRCreate	drivers/GL/vms_x_fix.h	380;"	d
XmStringNConcat	drivers/GL/vms_x_fix.h	381;"	d
XmStringSegmentCreate	drivers/GL/vms_x_fix.h	382;"	d
XmStringWidth	drivers/GL/vms_x_fix.h	383;"	d
XmTextClearSelection	drivers/GL/vms_x_fix.h	384;"	d
XmTextCopy	drivers/GL/vms_x_fix.h	796;"	d
XmTextCut	drivers/GL/vms_x_fix.h	797;"	d
XmTextFieldClearSelection	drivers/GL/vms_x_fix.h	798;"	d
XmTextFieldCopy	drivers/GL/vms_x_fix.h	799;"	d
XmTextFieldCut	drivers/GL/vms_x_fix.h	800;"	d
XmTextFieldGetEditable	drivers/GL/vms_x_fix.h	385;"	d
XmTextFieldGetInsertionPosition	drivers/GL/vms_x_fix.h	386;"	d
XmTextFieldGetLastPosition	drivers/GL/vms_x_fix.h	387;"	d
XmTextFieldGetMaxLength	drivers/GL/vms_x_fix.h	801;"	d
XmTextFieldGetSelection	drivers/GL/vms_x_fix.h	388;"	d
XmTextFieldGetSelectionPosition	drivers/GL/vms_x_fix.h	802;"	d
XmTextFieldGetString	drivers/GL/vms_x_fix.h	389;"	d
XmTextFieldInsert	drivers/GL/vms_x_fix.h	390;"	d
XmTextFieldPaste	drivers/GL/vms_x_fix.h	803;"	d
XmTextFieldRemove	drivers/GL/vms_x_fix.h	391;"	d
XmTextFieldReplace	drivers/GL/vms_x_fix.h	804;"	d
XmTextFieldSetAddMode	drivers/GL/vms_x_fix.h	805;"	d
XmTextFieldSetHighlight	drivers/GL/vms_x_fix.h	806;"	d
XmTextFieldSetInsertionPosition	drivers/GL/vms_x_fix.h	807;"	d
XmTextFieldSetMaxLength	drivers/GL/vms_x_fix.h	808;"	d
XmTextFieldSetSelection	drivers/GL/vms_x_fix.h	392;"	d
XmTextFieldSetString	drivers/GL/vms_x_fix.h	393;"	d
XmTextFieldShowPosition	drivers/GL/vms_x_fix.h	809;"	d
XmTextGetCursorPosition	drivers/GL/vms_x_fix.h	394;"	d
XmTextGetEditable	drivers/GL/vms_x_fix.h	810;"	d
XmTextGetInsertionPosition	drivers/GL/vms_x_fix.h	395;"	d
XmTextGetLastPosition	drivers/GL/vms_x_fix.h	396;"	d
XmTextGetMaxLength	drivers/GL/vms_x_fix.h	397;"	d
XmTextGetSelection	drivers/GL/vms_x_fix.h	398;"	d
XmTextGetSelectionPosition	drivers/GL/vms_x_fix.h	399;"	d
XmTextGetString	drivers/GL/vms_x_fix.h	400;"	d
XmTextInsert	drivers/GL/vms_x_fix.h	401;"	d
XmTextPaste	drivers/GL/vms_x_fix.h	811;"	d
XmTextPosToXY	drivers/GL/vms_x_fix.h	812;"	d
XmTextRemove	drivers/GL/vms_x_fix.h	402;"	d
XmTextReplace	drivers/GL/vms_x_fix.h	403;"	d
XmTextSetCursorPosition	drivers/GL/vms_x_fix.h	404;"	d
XmTextSetEditable	drivers/GL/vms_x_fix.h	813;"	d
XmTextSetHighlight	drivers/GL/vms_x_fix.h	405;"	d
XmTextSetInsertionPosition	drivers/GL/vms_x_fix.h	406;"	d
XmTextSetSelection	drivers/GL/vms_x_fix.h	407;"	d
XmTextSetString	drivers/GL/vms_x_fix.h	408;"	d
XmTextShowPosition	drivers/GL/vms_x_fix.h	814;"	d
XmToggleButtonGadgetGetState	drivers/GL/vms_x_fix.h	409;"	d
XmToggleButtonGadgetSetState	drivers/GL/vms_x_fix.h	410;"	d
XmToggleButtonGetState	drivers/GL/vms_x_fix.h	411;"	d
XmToggleButtonSetState	drivers/GL/vms_x_fix.h	412;"	d
XmUninstallImage	drivers/GL/vms_x_fix.h	815;"	d
XmUpdateDisplay	drivers/GL/vms_x_fix.h	413;"	d
XmVaCreateSimpleRadioBox	drivers/GL/vms_x_fix.h	414;"	d
XmbDrawString	drivers/GL/vms_x_fix.h	415;"	d
XmbLookupString	drivers/GL/vms_x_fix.h	416;"	d
XmbResetIC	drivers/GL/vms_x_fix.h	417;"	d
XmbSetWMProperties	drivers/GL/vms_x_fix.h	418;"	d
XmbTextEscapement	drivers/GL/vms_x_fix.h	419;"	d
XmbTextExtents	drivers/GL/vms_x_fix.h	420;"	d
XmbTextListToTextProperty	drivers/GL/vms_x_fix.h	421;"	d
XmbTextPropertyToTextList	drivers/GL/vms_x_fix.h	422;"	d
XmuClientWindow	drivers/GL/vms_x_fix.h	423;"	d
XmuCvtStringToBitmap	drivers/GL/vms_x_fix.h	816;"	d
XmuLookupStandardColormap	drivers/GL/vms_x_fix.h	647;"	d
XmuPrintDefaultErrorMessage	drivers/GL/vms_x_fix.h	424;"	d
XrmCombineDatabase	drivers/GL/vms_x_fix.h	842;"	d
XrmCombineFileDatabase	drivers/GL/vms_x_fix.h	843;"	d
XrmDestroyDatabase	drivers/GL/vms_x_fix.h	672;"	d
XrmGetDatabase	drivers/GL/vms_x_fix.h	425;"	d
XrmGetFileDatabase	drivers/GL/vms_x_fix.h	673;"	d
XrmGetResource	drivers/GL/vms_x_fix.h	426;"	d
XrmGetStringDatabase	drivers/GL/vms_x_fix.h	674;"	d
XrmInitialize	drivers/GL/vms_x_fix.h	675;"	d
XrmMergeDatabases	drivers/GL/vms_x_fix.h	676;"	d
XrmParseCommand	drivers/GL/vms_x_fix.h	677;"	d
XrmPutFileDatabase	drivers/GL/vms_x_fix.h	817;"	d
XrmPutLineResource	drivers/GL/vms_x_fix.h	678;"	d
XrmPutStringResource	drivers/GL/vms_x_fix.h	427;"	d
XrmQPutStringResource	drivers/GL/vms_x_fix.h	679;"	d
XrmQuarkToString	drivers/GL/vms_x_fix.h	428;"	d
XrmStringToBindingQuarkList	drivers/GL/vms_x_fix.h	680;"	d
XrmStringToQuark	drivers/GL/vms_x_fix.h	429;"	d
XrmStringToQuark	drivers/GL/vms_x_fix.h	681;"	d
XtAddCallback	drivers/GL/vms_x_fix.h	430;"	d
XtAddCallbacks	drivers/GL/vms_x_fix.h	431;"	d
XtAddConverter	drivers/GL/vms_x_fix.h	818;"	d
XtAddEventHandler	drivers/GL/vms_x_fix.h	432;"	d
XtAddGrab	drivers/GL/vms_x_fix.h	433;"	d
XtAllocateGC	drivers/GL/vms_x_fix.h	434;"	d
XtAppAddActions	drivers/GL/vms_x_fix.h	435;"	d
XtAppAddInput	drivers/GL/vms_x_fix.h	436;"	d
XtAppAddTimeOut	drivers/GL/vms_x_fix.h	437;"	d
XtAppAddWorkProc	drivers/GL/vms_x_fix.h	465;"	d
XtAppCreateShell	drivers/GL/vms_x_fix.h	438;"	d
XtAppInitialize	drivers/GL/vms_x_fix.h	439;"	d
XtAppNextEvent	drivers/GL/vms_x_fix.h	440;"	d
XtAppPeekEvent	drivers/GL/vms_x_fix.h	441;"	d
XtAppPending	drivers/GL/vms_x_fix.h	442;"	d
XtAppProcessEvent	drivers/GL/vms_x_fix.h	443;"	d
XtAppSetErrorHandler	drivers/GL/vms_x_fix.h	444;"	d
XtAppSetFallbackResources	drivers/GL/vms_x_fix.h	445;"	d
XtAppSetWarningHandler	drivers/GL/vms_x_fix.h	446;"	d
XtAppSetWarningMsgHandler	drivers/GL/vms_x_fix.h	447;"	d
XtAppWarning	drivers/GL/vms_x_fix.h	448;"	d
XtCallActionProc	drivers/GL/vms_x_fix.h	449;"	d
XtCallCallbackList	drivers/GL/vms_x_fix.h	450;"	d
XtCallCallbacks	drivers/GL/vms_x_fix.h	451;"	d
XtCloseDisplay	drivers/GL/vms_x_fix.h	871;"	d
XtConfigureWidget	drivers/GL/vms_x_fix.h	452;"	d
XtConvertAndStore	drivers/GL/vms_x_fix.h	453;"	d
XtCreateApplicationContext	drivers/GL/vms_x_fix.h	454;"	d
XtCreateManagedWidget	drivers/GL/vms_x_fix.h	455;"	d
XtCreatePopupShell	drivers/GL/vms_x_fix.h	456;"	d
XtCreateWidget	drivers/GL/vms_x_fix.h	457;"	d
XtDatabase	drivers/GL/vms_x_fix.h	458;"	d
XtDestroyApplicationContext	drivers/GL/vms_x_fix.h	872;"	d
XtDestroyWidget	drivers/GL/vms_x_fix.h	459;"	d
XtDisownSelection	drivers/GL/vms_x_fix.h	460;"	d
XtDispatchEvent	drivers/GL/vms_x_fix.h	461;"	d
XtDisplay	drivers/GL/vms_x_fix.h	825;"	d
XtDisplayOfObject	drivers/GL/vms_x_fix.h	462;"	d
XtDisplayStringConvWarning	drivers/GL/vms_x_fix.h	463;"	d
XtDisplayToApplicationContext	drivers/GL/vms_x_fix.h	464;"	d
XtError	drivers/GL/vms_x_fix.h	819;"	d
XtFree	drivers/GL/vms_x_fix.h	467;"	d
XtGetActionKeysym	drivers/GL/vms_x_fix.h	468;"	d
XtGetActionList	drivers/GL/vms_x_fix.h	469;"	d
XtGetApplicationNameAndClass	drivers/GL/vms_x_fix.h	470;"	d
XtGetApplicationResources	drivers/GL/vms_x_fix.h	471;"	d
XtGetGC	drivers/GL/vms_x_fix.h	472;"	d
XtGetMultiClickTime	drivers/GL/vms_x_fix.h	473;"	d
XtGetSelectionValue	drivers/GL/vms_x_fix.h	474;"	d
XtGetSelectionValues	drivers/GL/vms_x_fix.h	475;"	d
XtGetSubresources	drivers/GL/vms_x_fix.h	476;"	d
XtGetValues	drivers/GL/vms_x_fix.h	477;"	d
XtGrabKeyboard	drivers/GL/vms_x_fix.h	478;"	d
XtGrabPointer	drivers/GL/vms_x_fix.h	479;"	d
XtHasCallbacks	drivers/GL/vms_x_fix.h	480;"	d
XtInitialize	drivers/GL/vms_x_fix.h	656;"	d
XtInitializeWidgetClass	drivers/GL/vms_x_fix.h	481;"	d
XtInsertEventHandler	drivers/GL/vms_x_fix.h	482;"	d
XtIsManaged	drivers/GL/vms_x_fix.h	483;"	d
XtIsObject	drivers/GL/vms_x_fix.h	484;"	d
XtIsSensitive	drivers/GL/vms_x_fix.h	485;"	d
XtIsSubclass	drivers/GL/vms_x_fix.h	486;"	d
XtLastTimestampProcessed	drivers/GL/vms_x_fix.h	487;"	d
XtMainLoop	drivers/GL/vms_x_fix.h	657;"	d
XtMakeGeometryRequest	drivers/GL/vms_x_fix.h	488;"	d
XtMakeResizeRequest	drivers/GL/vms_x_fix.h	489;"	d
XtMalloc	drivers/GL/vms_x_fix.h	490;"	d
XtManageChild	drivers/GL/vms_x_fix.h	491;"	d
XtManageChildren	drivers/GL/vms_x_fix.h	492;"	d
XtMergeArgLists	drivers/GL/vms_x_fix.h	493;"	d
XtMoveWidget	drivers/GL/vms_x_fix.h	494;"	d
XtName	drivers/GL/vms_x_fix.h	495;"	d
XtNameToWidget	drivers/GL/vms_x_fix.h	496;"	d
XtOpenDisplay	drivers/GL/vms_x_fix.h	497;"	d
XtOverrideTranslations	drivers/GL/vms_x_fix.h	498;"	d
XtOwnSelection	drivers/GL/vms_x_fix.h	499;"	d
XtParseTranslationTable	drivers/GL/vms_x_fix.h	500;"	d
XtPopdown	drivers/GL/vms_x_fix.h	501;"	d
XtPopup	drivers/GL/vms_x_fix.h	502;"	d
XtQueryGeometry	drivers/GL/vms_x_fix.h	503;"	d
XtRealizeWidget	drivers/GL/vms_x_fix.h	504;"	d
XtRealloc	drivers/GL/vms_x_fix.h	505;"	d
XtRegisterDrawable	drivers/GL/vms_x_fix.h	629;"	d
XtReleaseGC	drivers/GL/vms_x_fix.h	506;"	d
XtRemoveAllCallbacks	drivers/GL/vms_x_fix.h	507;"	d
XtRemoveCallback	drivers/GL/vms_x_fix.h	508;"	d
XtRemoveEventHandler	drivers/GL/vms_x_fix.h	509;"	d
XtRemoveGrab	drivers/GL/vms_x_fix.h	510;"	d
XtRemoveInput	drivers/GL/vms_x_fix.h	511;"	d
XtRemoveTimeOut	drivers/GL/vms_x_fix.h	512;"	d
XtRemoveWorkProc	drivers/GL/vms_x_fix.h	466;"	d
XtResizeWidget	drivers/GL/vms_x_fix.h	513;"	d
XtResolvePathname	drivers/GL/vms_x_fix.h	514;"	d
XtScreen	drivers/GL/vms_x_fix.h	826;"	d
XtSetKeyboardFocus	drivers/GL/vms_x_fix.h	515;"	d
XtSetMappedWhenManaged	drivers/GL/vms_x_fix.h	516;"	d
XtSetSensitive	drivers/GL/vms_x_fix.h	517;"	d
XtSetTypeConverter	drivers/GL/vms_x_fix.h	518;"	d
XtSetValues	drivers/GL/vms_x_fix.h	519;"	d
XtShellStrings	drivers/GL/vms_x_fix.h	520;"	d
XtStrings	drivers/GL/vms_x_fix.h	521;"	d
XtToolkitInitialize	drivers/GL/vms_x_fix.h	522;"	d
XtTranslateCoords	drivers/GL/vms_x_fix.h	523;"	d
XtTranslateKeycode	drivers/GL/vms_x_fix.h	524;"	d
XtUngrabKeyboard	drivers/GL/vms_x_fix.h	525;"	d
XtUngrabPointer	drivers/GL/vms_x_fix.h	526;"	d
XtUnmanageChild	drivers/GL/vms_x_fix.h	527;"	d
XtUnmanageChildren	drivers/GL/vms_x_fix.h	528;"	d
XtUnrealizeWidget	drivers/GL/vms_x_fix.h	529;"	d
XtUnregisterDrawable	drivers/GL/vms_x_fix.h	630;"	d
XtVaCreateManagedWidget	drivers/GL/vms_x_fix.h	530;"	d
XtVaCreatePopupShell	drivers/GL/vms_x_fix.h	820;"	d
XtVaCreateWidget	drivers/GL/vms_x_fix.h	531;"	d
XtVaGetValues	drivers/GL/vms_x_fix.h	532;"	d
XtVaSetValues	drivers/GL/vms_x_fix.h	533;"	d
XtWarning	drivers/GL/vms_x_fix.h	534;"	d
XtWidgetToApplicationContext	drivers/GL/vms_x_fix.h	535;"	d
XtWindowOfObject	drivers/GL/vms_x_fix.h	536;"	d
XtWindowToWidget	drivers/GL/vms_x_fix.h	537;"	d
XwcDrawString	drivers/GL/vms_x_fix.h	538;"	d
XwcFreeStringList	drivers/GL/vms_x_fix.h	539;"	d
XwcTextEscapement	drivers/GL/vms_x_fix.h	540;"	d
XwcTextExtents	drivers/GL/vms_x_fix.h	541;"	d
XwcTextListToTextProperty	drivers/GL/vms_x_fix.h	542;"	d
XwcTextPropertyToTextList	drivers/GL/vms_x_fix.h	543;"	d
Y	drivers/SQLite/sqlite3/sqlite3.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
Y	stat/TeSkaterGrafo.h	/^      double Y;$/;"	m	struct:TSkaterGrafo::No_Grafo
YOrigin	drivers/GL/glxext.h	/^    int XOrigin, YOrigin, maxHeight, maxWidth;$/;"	m	struct:__anon97
YYABORT	kernel/yyTemporal.cpp	269;"	d	file:
YYACCEPT	kernel/yyTemporal.cpp	271;"	d	file:
YYACTIONTYPE	drivers/SQLite/sqlite3/sqlite3.c	106111;"	d	file:
YYBYACC	kernel/yyTemporal.cpp	33;"	d	file:
YYCODETYPE	drivers/SQLite/sqlite3/sqlite3.c	106109;"	d	file:
YYDEBUG	kernel/yyTemporal.cpp	183;"	d	file:
YYEMPTY	kernel/yyTemporal.cpp	37;"	d	file:
YYERRCODE	kernel/yyTemporal.cpp	88;"	d	file:
YYERRCODE	kernel/yyTemporal.h	25;"	d
YYERROR	kernel/yyTemporal.cpp	272;"	d	file:
YYFALLBACK	drivers/SQLite/sqlite3/sqlite3.c	106140;"	d	file:
YYFINAL	kernel/yyTemporal.cpp	181;"	d	file:
YYINITSTACKSIZE	kernel/yyTemporal.cpp	223;"	d	file:
YYLEX	kernel/yyTemporal.cpp	36;"	d	file:
YYMAJOR	kernel/yyTemporal.cpp	34;"	d	file:
YYMAXDEPTH	kernel/yyTemporal.cpp	213;"	d	file:
YYMAXDEPTH	kernel/yyTemporal.cpp	214;"	d	file:
YYMAXDEPTH	kernel/yyTemporal.cpp	220;"	d	file:
YYMAXTOKEN	kernel/yyTemporal.cpp	185;"	d	file:
YYMINOR	kernel/yyTemporal.cpp	35;"	d	file:
YYMINORTYPE	drivers/SQLite/sqlite3/sqlite3.c	/^} YYMINORTYPE;$/;"	t	typeref:union:__anon56	file:
YYNOCODE	drivers/SQLite/sqlite3/sqlite3.c	106110;"	d	file:
YYNOERRORRECOVERY	drivers/SQLite/sqlite3/sqlite3.c	105946;"	d	file:
YYNRULE	drivers/SQLite/sqlite3/sqlite3.c	106139;"	d	file:
YYNSTATE	drivers/SQLite/sqlite3/sqlite3.c	106138;"	d	file:
YYPARSE_PARAM_ARG	kernel/yyTemporal.cpp	276;"	d	file:
YYPARSE_PARAM_ARG	kernel/yyTemporal.cpp	279;"	d	file:
YYPARSE_PARAM_ARG	kernel/yyTemporal.cpp	287;"	d	file:
YYPARSE_PARAM_ARG	kernel/yyTemporal.cpp	290;"	d	file:
YYPARSE_PARAM_DECL	kernel/yyTemporal.cpp	277;"	d	file:
YYPARSE_PARAM_DECL	kernel/yyTemporal.cpp	280;"	d	file:
YYPARSE_PARAM_DECL	kernel/yyTemporal.cpp	288;"	d	file:
YYPARSE_PARAM_DECL	kernel/yyTemporal.cpp	291;"	d	file:
YYPARSE_PARAM_TYPE	kernel/yyTemporal.cpp	284;"	d	file:
YYPREFIX	kernel/yyTemporal.cpp	42;"	d	file:
YYRECOVERING	kernel/yyTemporal.cpp	40;"	d	file:
YYREJECT	kernel/yyTemporal.cpp	270;"	d	file:
YYSTACKDEPTH	drivers/SQLite/sqlite3/sqlite3.c	106132;"	d	file:
YYSTACKSIZE	kernel/yyTemporal.cpp	217;"	d	file:
YYSTACKSIZE	kernel/yyTemporal.cpp	219;"	d	file:
YYSTATE	kernel/lexTemporal.cpp	112;"	d	file:
YYSTYPE	kernel/yyTemporal.cpp	/^typedef int YYSTYPE;$/;"	t	file:
YYTABLESIZE	kernel/yyTemporal.cpp	122;"	d	file:
YYWILDCARD	drivers/SQLite/sqlite3/sqlite3.c	106112;"	d	file:
YY_ACCEPT_ACTION	drivers/SQLite/sqlite3/sqlite3.c	106142;"	d	file:
YY_ACTTAB_COUNT	drivers/SQLite/sqlite3/sqlite3.c	106209;"	d	file:
YY_AT_BOL	kernel/lexTemporal.cpp	288;"	d	file:
YY_BREAK	kernel/lexTemporal.cpp	821;"	d	file:
YY_BUFFER_EOF_PENDING	kernel/lexTemporal.cpp	224;"	d	file:
YY_BUFFER_NEW	kernel/lexTemporal.cpp	212;"	d	file:
YY_BUFFER_NORMAL	kernel/lexTemporal.cpp	213;"	d	file:
YY_BUFFER_STATE	kernel/lexTemporal.cpp	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	kernel/lexTemporal.cpp	123;"	d	file:
YY_CHAR	kernel/lexTemporal.cpp	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	kernel/lexTemporal.cpp	233;"	d	file:
YY_DECL	kernel/lexTemporal.cpp	809;"	d	file:
YY_DO_BEFORE_ACTION	kernel/lexTemporal.cpp	311;"	d	file:
YY_END_OF_BUFFER	kernel/lexTemporal.cpp	319;"	d	file:
YY_END_OF_BUFFER_CHAR	kernel/lexTemporal.cpp	120;"	d	file:
YY_ERROR_ACTION	drivers/SQLite/sqlite3/sqlite3.c	106143;"	d	file:
YY_EXIT_FAILURE	kernel/lexTemporal.cpp	1819;"	d	file:
YY_FATAL_ERROR	kernel/lexTemporal.cpp	802;"	d	file:
YY_FLEX_MAJOR_VERSION	kernel/lexTemporal.cpp	31;"	d	file:
YY_FLEX_MINOR_VERSION	kernel/lexTemporal.cpp	32;"	d	file:
YY_FLUSH_BUFFER	kernel/lexTemporal.cpp	262;"	d	file:
YY_INPUT	kernel/lexTemporal.cpp	636;"	d	file:
YY_INPUT	kernel/lexTemporal.cpp	638;"	d	file:
YY_INPUT	kernel/lexTemporal.cpp	758;"	d	file:
YY_MORE_ADJ	kernel/lexTemporal.cpp	619;"	d	file:
YY_NEW_FILE	kernel/lexTemporal.cpp	118;"	d	file:
YY_NO_ACTION	drivers/SQLite/sqlite3/sqlite3.c	106141;"	d	file:
YY_NO_POP_STATE	kernel/lexTemporal.cpp	721;"	d	file:
YY_NO_PUSH_STATE	kernel/lexTemporal.cpp	720;"	d	file:
YY_NO_TOP_STATE	kernel/lexTemporal.cpp	722;"	d	file:
YY_NULL	kernel/lexTemporal.cpp	92;"	d	file:
YY_NUM_RULES	kernel/lexTemporal.cpp	318;"	d	file:
YY_PROTO	kernel/lexTemporal.cpp	85;"	d	file:
YY_PROTO	kernel/lexTemporal.cpp	87;"	d	file:
YY_READ_BUF_SIZE	kernel/lexTemporal.cpp	742;"	d	file:
YY_REDUCE_COUNT	drivers/SQLite/sqlite3/sqlite3.c	106575;"	d	file:
YY_REDUCE_MAX	drivers/SQLite/sqlite3/sqlite3.c	106577;"	d	file:
YY_REDUCE_MIN	drivers/SQLite/sqlite3/sqlite3.c	106576;"	d	file:
YY_REDUCE_USE_DFLT	drivers/SQLite/sqlite3/sqlite3.c	106574;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	kernel/lexTemporal.cpp	620;"	d	file:
YY_RULE_SETUP	kernel/lexTemporal.cpp	824;"	d	file:
YY_SC_TO_UI	kernel/lexTemporal.cpp	99;"	d	file:
YY_SHIFT_COUNT	drivers/SQLite/sqlite3/sqlite3.c	106527;"	d	file:
YY_SHIFT_MAX	drivers/SQLite/sqlite3/sqlite3.c	106529;"	d	file:
YY_SHIFT_MIN	drivers/SQLite/sqlite3/sqlite3.c	106528;"	d	file:
YY_SHIFT_USE_DFLT	drivers/SQLite/sqlite3/sqlite3.c	106526;"	d	file:
YY_SKIP_YYWRAP	kernel/lexTemporal.cpp	294;"	d	file:
YY_START	kernel/lexTemporal.cpp	111;"	d	file:
YY_START_STACK_INCR	kernel/lexTemporal.cpp	797;"	d	file:
YY_STATE_EOF	kernel/lexTemporal.cpp	115;"	d	file:
YY_USER_ACTION	kernel/lexTemporal.cpp	816;"	d	file:
YY_USES_REJECT	kernel/lexTemporal.cpp	291;"	d	file:
YY_USE_CONST	kernel/lexTemporal.cpp	56;"	d	file:
YY_USE_CONST	kernel/lexTemporal.cpp	63;"	d	file:
YY_USE_CONST	kernel/lexTemporal.cpp	73;"	d	file:
YY_USE_PROTOS	kernel/lexTemporal.cpp	53;"	d	file:
YY_USE_PROTOS	kernel/lexTemporal.cpp	62;"	d	file:
YY_USE_PROTOS	kernel/lexTemporal.cpp	74;"	d	file:
Y_max	stat/TeSkaterGrafo.h	/^    double Y_min,Y_max;\/\/Usado para conversao de escala$/;"	m	class:TSkaterGrafo
Y_min	stat/TeSkaterGrafo.h	/^    double Y_min,Y_max;\/\/Usado para conversao de escala$/;"	m	class:TSkaterGrafo
Y_pixels	kernel/TeGraph.h	/^	int Y_pixels;          \/* number of pixels in vertical direction *\/$/;"	m	class:TeGraphPlot
Yaxis_x	kernel/TeGraph.h	/^	int Yaxis_x;           \/* x pixel coordinate of Y axis title *\/$/;"	m	class:TeGraphPlot
Year	drivers/Firebird/ibpp/core/date.cpp	/^int IBPP::Date::Year() const$/;"	f	class:IBPP::Date
ZoomIn	drivers/qt/TeQtCanvas.h	/^		 UpArrow, Edit, Distance, Information, ZoomIn, ZoomOut };$/;"	e	enum:TeQtCanvas::CursorMode
ZoomOut	drivers/qt/TeQtCanvas.h	/^		 UpArrow, Edit, Distance, Information, ZoomIn, ZoomOut };$/;"	e	enum:TeQtCanvas::CursorMode
_	drivers/Firebird/ibpp/core/ibpp.h	87;"	d
_BTREE_H_	drivers/SQLite/sqlite3/sqlite3.c	7974;"	d	file:
_CRTIMP	drivers/GL/glut.h	86;"	d
_CRTIMP	drivers/GL/glut.h	90;"	d
_CRTIMP	drivers/GL/glut.h	92;"	d
_CRT_SECURE_NO_WARNINGS	drivers/SQLite/sqlite3/shell.c	17;"	d	file:
_FILE_OFFSET_BITS	drivers/SQLite/sqlite3/shell.c	26;"	d	file:
_FILE_OFFSET_BITS	drivers/SQLite/sqlite3/sqlite3.c	24503;"	d	file:
_FILE_OFFSET_BITS	drivers/SQLite/sqlite3/sqlite3.c	68;"	d	file:
_FTS3_HASH_H_	drivers/SQLite/sqlite3/sqlite3.c	114333;"	d	file:
_FTS3_TOKENIZER_H_	drivers/SQLite/sqlite3/sqlite3.c	114180;"	d	file:
_FTSINT_H	drivers/SQLite/sqlite3/sqlite3.c	114136;"	d	file:
_GLUfuncptr	drivers/GL/glu.h	/^typedef void (GLAPIENTRYP _GLUfuncptr)();$/;"	t
_GLX_glxmd_h_	drivers/GL/glxmd.h	2;"	d
_GLX_glxproto_h_	drivers/GL/glxproto.h	2;"	d
_GNU_SOURCE	drivers/SQLite/sqlite3/sqlite3.c	306;"	d	file:
_HWTIME_H_	drivers/SQLite/sqlite3/sqlite3.c	22389;"	d	file:
_HWTIME_H_	drivers/SQLite/sqlite3/sqlite3.c	24731;"	d	file:
_HWTIME_H_	drivers/SQLite/sqlite3/sqlite3.c	31512;"	d	file:
_HWTIME_H_	drivers/SQLite/sqlite3/sqlite3.c	63380;"	d	file:
_LARGEFILE_SOURCE	drivers/SQLite/sqlite3/shell.c	28;"	d	file:
_LARGEFILE_SOURCE	drivers/SQLite/sqlite3/sqlite3.c	24505;"	d	file:
_LARGEFILE_SOURCE	drivers/SQLite/sqlite3/sqlite3.c	70;"	d	file:
_LARGE_FILE	drivers/SQLite/sqlite3/shell.c	24;"	d	file:
_LARGE_FILE	drivers/SQLite/sqlite3/sqlite3.c	24501;"	d	file:
_LARGE_FILE	drivers/SQLite/sqlite3/sqlite3.c	66;"	d	file:
_MEMORY_ZONAL_H_	functions/TeMemoryZonal.h	28;"	d
_MSC_VER	drivers/Firebird/ibpp/core/_ibpp.h	43;"	d
_MSC_VER	drivers/Firebird/ibpp/core/_ibpp.h	54;"	d
_OS_COMMON_H_	drivers/SQLite/sqlite3/sqlite3.c	22340;"	d	file:
_OS_COMMON_H_	drivers/SQLite/sqlite3/sqlite3.c	24682;"	d	file:
_OS_COMMON_H_	drivers/SQLite/sqlite3/sqlite3.c	31463;"	d	file:
_OvflCell	drivers/SQLite/sqlite3/sqlite3.c	/^  struct _OvflCell {   \/* Cells that will not fit on aData[] *\/$/;"	s	struct:MemPage	file:
_PAGER_H_	drivers/SQLite/sqlite3/sqlite3.c	8649;"	d	file:
_ParentExtender	kernel/TeDecoderTIFF.cpp	/^static TIFFExtendProc _ParentExtender = NULL;$/;"	v	file:
_RASTER_ITERATOR_SET_H_	functions/TeRasterIteratorSet.h	27;"	d
_SHM_RDLCK	drivers/SQLite/sqlite3/sqlite3.c	23297;"	d	file:
_SHM_RDLCK	drivers/SQLite/sqlite3/sqlite3.c	33392;"	d	file:
_SHM_UNLCK	drivers/SQLite/sqlite3/sqlite3.c	23296;"	d	file:
_SHM_UNLCK	drivers/SQLite/sqlite3/sqlite3.c	33391;"	d	file:
_SHM_WRLCK	drivers/SQLite/sqlite3/sqlite3.c	23298;"	d	file:
_SHM_WRLCK	drivers/SQLite/sqlite3/sqlite3.c	33393;"	d	file:
_SHM_WRLCK_WAIT	drivers/SQLite/sqlite3/sqlite3.c	23299;"	d	file:
_SQLITE3EXT_H_	drivers/SQLite/sqlite3/sqlite3.c	89236;"	d	file:
_SQLITE3EXT_H_	drivers/SQLite/sqlite3/sqlite3ext.h	19;"	d
_SQLITE3RTREE_H_	drivers/SQLite/sqlite3/sqlite3.c	7295;"	d	file:
_SQLITE3RTREE_H_	drivers/SQLite/sqlite3/sqlite3.h	6753;"	d
_SQLITE3_H_	drivers/SQLite/sqlite3/sqlite3.c	576;"	d	file:
_SQLITE3_H_	drivers/SQLite/sqlite3/sqlite3.h	34;"	d
_SQLITEINT_H_	drivers/SQLite/sqlite3/sqlite3.c	44;"	d	file:
_SQLITE_HASH_H_	drivers/SQLite/sqlite3/sqlite3.c	7357;"	d	file:
_SQLITE_OS_C_	drivers/SQLite/sqlite3/sqlite3.c	14428;"	d	file:
_SQLITE_OS_C_	drivers/SQLite/sqlite3/sqlite3.c	14429;"	d	file:
_SQLITE_OS_H_	drivers/SQLite/sqlite3/sqlite3.c	9001;"	d	file:
_SQLITE_VDBE_H_	drivers/SQLite/sqlite3/sqlite3.c	8222;"	d	file:
_TEDXFDRIVERFACTORY_H	drivers/DXF/TeDXFDriverFactory.h	3;"	d
_TEDXFDRIVER_H	drivers/DXF/TeDXFDriver.h	14;"	d
_TEDXFLAYER_H	drivers/DXF/tedxflayer.h	13;"	d
_TEDXFVISITOR_H	drivers/DXF/tedxfvisitor.h	13;"	d
_TEGDALDRIVER_H	drivers/gdal/TeGDALDecoder.h	30;"	d
_TEGDALUTILS_H	drivers/gdal/TeGDALUtils.h	30;"	d
_TEGDRIVERFACTORY_H	kernel/TeGDriverFactory.h	2;"	d
_TEOGRDATASET_H	drivers/gdal/TeOGRDataSet.h	30;"	d
_TEOGRDRIVERFACTORY_H	drivers/gdal/TeOGRDriverFactory.h	30;"	d
_TEOGRDRIVER_H	drivers/gdal/TeOGRDriver.h	30;"	d
_TEOGREXPORTIMPORTFUNCTIONS_H	drivers/gdal/TeOGRExportImportFunctions.h	29;"	d
_TEOGRUTILS_H	drivers/gdal/TeOGRUtils.h	30;"	d
_TESHPDRIVERFACTORY_H	drivers/shapelib/TeSHPDriverFactory.h	3;"	d
_VDBEINT_H_	drivers/SQLite/sqlite3/sqlite3.c	12614;"	d	file:
_WAL_H_	drivers/SQLite/sqlite3/sqlite3.c	37240;"	d	file:
_WIN32	drivers/Firebird/ibpp/core/_ibpp.h	46;"	d
_WIN32	drivers/Firebird/ibpp/core/_ibpp.h	55;"	d
_XMESA_XF86_H_	drivers/GL/xmesa_xf86.h	40;"	d
_XMESA_X_H_	drivers/GL/xmesa_x.h	40;"	d
_XOPEN_SOURCE	drivers/SQLite/sqlite3/sqlite3.c	427;"	d	file:
_XRegisterFilterByType	drivers/GL/vms_x_fix.h	14;"	d
_XUnregisterFilter	drivers/GL/vms_x_fix.h	236;"	d
_XmBottomShadowColorDefault	drivers/GL/vms_x_fix.h	544;"	d
_XmClearBorder	drivers/GL/vms_x_fix.h	545;"	d
_XmConfigureObject	drivers/GL/vms_x_fix.h	546;"	d
_XmDestroyParentCallback	drivers/GL/vms_x_fix.h	547;"	d
_XmDrawArrow	drivers/GL/vms_x_fix.h	548;"	d
_XmDrawShadows	drivers/GL/vms_x_fix.h	549;"	d
_XmFontListGetDefaultFont	drivers/GL/vms_x_fix.h	550;"	d
_XmFromHorizontalPixels	drivers/GL/vms_x_fix.h	551;"	d
_XmFromVerticalPixels	drivers/GL/vms_x_fix.h	552;"	d
_XmGetClassExtensionPtr	drivers/GL/vms_x_fix.h	553;"	d
_XmGetDefaultFontList	drivers/GL/vms_x_fix.h	554;"	d
_XmGetTextualDragIcon	drivers/GL/vms_x_fix.h	555;"	d
_XmGetWidgetExtData	drivers/GL/vms_x_fix.h	556;"	d
_XmGrabKeyboard	drivers/GL/vms_x_fix.h	557;"	d
_XmGrabPointer	drivers/GL/vms_x_fix.h	558;"	d
_XmInheritClass	drivers/GL/vms_x_fix.h	559;"	d
_XmInputInGadget	drivers/GL/vms_x_fix.h	560;"	d
_XmMakeGeometryRequest	drivers/GL/vms_x_fix.h	561;"	d
_XmMenuPopDown	drivers/GL/vms_x_fix.h	562;"	d
_XmMoveObject	drivers/GL/vms_x_fix.h	563;"	d
_XmNavigChangeManaged	drivers/GL/vms_x_fix.h	564;"	d
_XmOSBuildFileList	drivers/GL/vms_x_fix.h	565;"	d
_XmOSFileCompare	drivers/GL/vms_x_fix.h	566;"	d
_XmOSFindPatternPart	drivers/GL/vms_x_fix.h	567;"	d
_XmOSQualifyFileSpec	drivers/GL/vms_x_fix.h	568;"	d
_XmPostPopupMenu	drivers/GL/vms_x_fix.h	569;"	d
_XmPrimitiveEnter	drivers/GL/vms_x_fix.h	570;"	d
_XmPrimitiveLeave	drivers/GL/vms_x_fix.h	571;"	d
_XmRedisplayGadgets	drivers/GL/vms_x_fix.h	572;"	d
_XmShellIsExclusive	drivers/GL/vms_x_fix.h	573;"	d
_XmStringDraw	drivers/GL/vms_x_fix.h	574;"	d
_XmStringGetTextConcat	drivers/GL/vms_x_fix.h	575;"	d
_XmStrings	drivers/GL/vms_x_fix.h	576;"	d
_XmToHorizontalPixels	drivers/GL/vms_x_fix.h	577;"	d
_XmToVerticalPixels	drivers/GL/vms_x_fix.h	578;"	d
_XmTopShadowColorDefault	drivers/GL/vms_x_fix.h	579;"	d
_Xm_fastPtr	drivers/GL/vms_x_fix.h	580;"	d
_XtCheckSubclassFlag	drivers/GL/vms_x_fix.h	581;"	d
_XtInherit	drivers/GL/vms_x_fix.h	582;"	d
_XtInheritTranslations	drivers/GL/vms_x_fix.h	583;"	d
__DIRECTFBGL_H__	drivers/GL/directfbgl.h	25;"	d
__DRIcontext	drivers/GL/dri_interface.h	/^typedef struct __DRIcontextRec  __DRIcontext;$/;"	t	typeref:struct:__DRIcontextRec
__DRIcontext	drivers/GL/internal/dri_interface.h	/^typedef struct __DRIcontextRec  __DRIcontext;$/;"	t	typeref:struct:__DRIcontextRec
__DRIcontextRec	drivers/GL/dri_interface.h	/^struct __DRIcontextRec {$/;"	s
__DRIcontextRec	drivers/GL/internal/dri_interface.h	/^struct __DRIcontextRec {$/;"	s
__DRIdisplay	drivers/GL/dri_interface.h	/^typedef struct __DRIdisplayRec  __DRIdisplay;$/;"	t	typeref:struct:__DRIdisplayRec
__DRIdisplay	drivers/GL/internal/dri_interface.h	/^typedef struct __DRIdisplayRec  __DRIdisplay;$/;"	t	typeref:struct:__DRIdisplayRec
__DRIdrawable	drivers/GL/dri_interface.h	/^typedef struct __DRIdrawableRec __DRIdrawable;$/;"	t	typeref:struct:__DRIdrawableRec
__DRIdrawable	drivers/GL/internal/dri_interface.h	/^typedef struct __DRIdrawableRec __DRIdrawable;$/;"	t	typeref:struct:__DRIdrawableRec
__DRIdrawableRec	drivers/GL/dri_interface.h	/^struct __DRIdrawableRec {$/;"	s
__DRIdrawableRec	drivers/GL/internal/dri_interface.h	/^struct __DRIdrawableRec {$/;"	s
__DRIdriver	drivers/GL/dri_interface.h	/^typedef struct __DRIdriverRec   __DRIdriver;$/;"	t	typeref:struct:__DRIdriverRec
__DRIdriver	drivers/GL/internal/dri_interface.h	/^typedef struct __DRIdriverRec   __DRIdriver;$/;"	t	typeref:struct:__DRIdriverRec
__DRIframebuffer	drivers/GL/dri_interface.h	/^typedef struct __DRIframebufferRec __DRIframebuffer;$/;"	t	typeref:struct:__DRIframebufferRec
__DRIframebuffer	drivers/GL/internal/dri_interface.h	/^typedef struct __DRIframebufferRec __DRIframebuffer;$/;"	t	typeref:struct:__DRIframebufferRec
__DRIframebufferRec	drivers/GL/dri_interface.h	/^struct __DRIframebufferRec {$/;"	s
__DRIframebufferRec	drivers/GL/internal/dri_interface.h	/^struct __DRIframebufferRec {$/;"	s
__DRIfuncPtr	drivers/GL/dri_interface.h	/^typedef void (*__DRIfuncPtr)(void);$/;"	t
__DRIfuncPtr	drivers/GL/internal/dri_interface.h	/^typedef void (*__DRIfuncPtr)(void);$/;"	t
__DRIid	drivers/GL/dri_interface.h	/^typedef unsigned long __DRIid;$/;"	t
__DRIid	drivers/GL/internal/dri_interface.h	/^typedef unsigned long __DRIid;$/;"	t
__DRIinterfaceMethods	drivers/GL/dri_interface.h	/^typedef struct __DRIinterfaceMethodsRec  __DRIinterfaceMethods;$/;"	t	typeref:struct:__DRIinterfaceMethodsRec
__DRIinterfaceMethods	drivers/GL/internal/dri_interface.h	/^typedef struct __DRIinterfaceMethodsRec  __DRIinterfaceMethods;$/;"	t	typeref:struct:__DRIinterfaceMethodsRec
__DRIinterfaceMethodsRec	drivers/GL/dri_interface.h	/^struct __DRIinterfaceMethodsRec {$/;"	s
__DRIinterfaceMethodsRec	drivers/GL/internal/dri_interface.h	/^struct __DRIinterfaceMethodsRec {$/;"	s
__DRInativeDisplay	drivers/GL/dri_interface.h	/^typedef void __DRInativeDisplay;$/;"	t
__DRInativeDisplay	drivers/GL/internal/dri_interface.h	/^typedef void __DRInativeDisplay;$/;"	t
__DRIscreen	drivers/GL/dri_interface.h	/^typedef struct __DRIscreenRec   __DRIscreen;$/;"	t	typeref:struct:__DRIscreenRec
__DRIscreen	drivers/GL/internal/dri_interface.h	/^typedef struct __DRIscreenRec   __DRIscreen;$/;"	t	typeref:struct:__DRIscreenRec
__DRIscreenRec	drivers/GL/dri_interface.h	/^struct __DRIscreenRec {$/;"	s
__DRIscreenRec	drivers/GL/internal/dri_interface.h	/^struct __DRIscreenRec {$/;"	s
__DRIversion	drivers/GL/dri_interface.h	/^typedef struct __DRIversionRec     __DRIversion;$/;"	t	typeref:struct:__DRIversionRec
__DRIversion	drivers/GL/internal/dri_interface.h	/^typedef struct __DRIversionRec     __DRIversion;$/;"	t	typeref:struct:__DRIversionRec
__DRIversionRec	drivers/GL/dri_interface.h	/^struct __DRIversionRec {$/;"	s
__DRIversionRec	drivers/GL/internal/dri_interface.h	/^struct __DRIversionRec {$/;"	s
__GLXColorSubTableHeader	drivers/GL/glxproto.h	/^} __GLXColorSubTableHeader;$/;"	t	typeref:struct:__anon172
__GLXColorSubTableLargeHeader	drivers/GL/glxproto.h	/^} __GLXColorSubTableLargeHeader;$/;"	t	typeref:struct:__anon173
__GLXColorTableHeader	drivers/GL/glxproto.h	/^} __GLXColorTableHeader;$/;"	t	typeref:struct:__anon169
__GLXColorTableLargeHeader	drivers/GL/glxproto.h	/^} __GLXColorTableLargeHeader;$/;"	t	typeref:struct:__anon170
__GLXConvolutionFilterHeader	drivers/GL/glxproto.h	/^} __GLXConvolutionFilterHeader;$/;"	t	typeref:struct:__anon162
__GLXConvolutionFilterLargeHeader	drivers/GL/glxproto.h	/^} __GLXConvolutionFilterLargeHeader;$/;"	t	typeref:struct:__anon163
__GLXEvent	drivers/GL/glx.h	/^typedef union __GLXEvent {$/;"	u
__GLXFBConfig	drivers/GL/glxint.h	/^typedef struct __GLXFBConfigRec __GLXFBConfig;$/;"	t	typeref:struct:__GLXFBConfigRec
__GLXFBConfigRec	drivers/GL/glxint.h	/^struct __GLXFBConfigRec {$/;"	s
__GLX_BITMAP_CMD_DISPATCH_HDR_SIZE	drivers/GL/glxproto.h	1349;"	d
__GLX_BITMAP_CMD_HDR_SIZE	drivers/GL/glxproto.h	1346;"	d
__GLX_BITMAP_HDR	drivers/GL/glxproto.h	/^    __GLX_BITMAP_HDR;$/;"	m	struct:__anon131
__GLX_BITMAP_HDR	drivers/GL/glxproto.h	/^    __GLX_BITMAP_HDR;$/;"	m	struct:__anon132
__GLX_BITMAP_HDR	drivers/GL/glxproto.h	/^    __GLX_BITMAP_HDR;$/;"	m	struct:__anon133
__GLX_BITMAP_HDR	drivers/GL/glxproto.h	1319;"	d
__GLX_BITMAP_HDR_SIZE	drivers/GL/glxproto.h	1344;"	d
__GLX_COLOR_SUBTABLE_CMD_HDR_SIZE	drivers/GL/glxproto.h	1889;"	d
__GLX_COLOR_SUBTABLE_HDR	drivers/GL/glxproto.h	/^    __GLX_COLOR_SUBTABLE_HDR;$/;"	m	struct:__anon172
__GLX_COLOR_SUBTABLE_HDR	drivers/GL/glxproto.h	/^    __GLX_COLOR_SUBTABLE_HDR;$/;"	m	struct:__anon173
__GLX_COLOR_SUBTABLE_HDR	drivers/GL/glxproto.h	/^    __GLX_COLOR_SUBTABLE_HDR;$/;"	m	struct:__anon174
__GLX_COLOR_SUBTABLE_HDR	drivers/GL/glxproto.h	1880;"	d
__GLX_COLOR_SUBTABLE_HDR_SIZE	drivers/GL/glxproto.h	1887;"	d
__GLX_COLOR_TABLE_CMD_HDR_SIZE	drivers/GL/glxproto.h	1852;"	d
__GLX_COLOR_TABLE_HDR	drivers/GL/glxproto.h	/^    __GLX_COLOR_TABLE_HDR;$/;"	m	struct:__anon169
__GLX_COLOR_TABLE_HDR	drivers/GL/glxproto.h	/^    __GLX_COLOR_TABLE_HDR;$/;"	m	struct:__anon170
__GLX_COLOR_TABLE_HDR	drivers/GL/glxproto.h	/^    __GLX_COLOR_TABLE_HDR;$/;"	m	struct:__anon171
__GLX_COLOR_TABLE_HDR	drivers/GL/glxproto.h	1843;"	d
__GLX_COLOR_TABLE_HDR_SIZE	drivers/GL/glxproto.h	1850;"	d
__GLX_COMPONENT_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPONENT_HDR;$/;"	m	struct:__anon168
__GLX_COMPONENT_HDR	drivers/GL/glxproto.h	1824;"	d
__GLX_COMPONENT_HDR_SIZE	drivers/GL/glxproto.h	1833;"	d
__GLX_COMPRESSED_TEXIMAGE_3D_CMD_HDR_SIZE	drivers/GL/glxproto.h	1652;"	d
__GLX_COMPRESSED_TEXIMAGE_3D_DISPATCH_HDR_SIZE	drivers/GL/glxproto.h	1655;"	d
__GLX_COMPRESSED_TEXIMAGE_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPRESSED_TEXIMAGE_3D_HDR;$/;"	m	struct:__anon153
__GLX_COMPRESSED_TEXIMAGE_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPRESSED_TEXIMAGE_3D_HDR;$/;"	m	struct:__anon154
__GLX_COMPRESSED_TEXIMAGE_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPRESSED_TEXIMAGE_3D_HDR;$/;"	m	struct:__anon155
__GLX_COMPRESSED_TEXIMAGE_3D_HDR	drivers/GL/glxproto.h	1640;"	d
__GLX_COMPRESSED_TEXIMAGE_3D_HDR_SIZE	drivers/GL/glxproto.h	1650;"	d
__GLX_COMPRESSED_TEXIMAGE_CMD_HDR_SIZE	drivers/GL/glxproto.h	1570;"	d
__GLX_COMPRESSED_TEXIMAGE_DISPATCH_HDR_SIZE	drivers/GL/glxproto.h	1573;"	d
__GLX_COMPRESSED_TEXIMAGE_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPRESSED_TEXIMAGE_HDR;$/;"	m	struct:__anon147
__GLX_COMPRESSED_TEXIMAGE_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPRESSED_TEXIMAGE_HDR;$/;"	m	struct:__anon148
__GLX_COMPRESSED_TEXIMAGE_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPRESSED_TEXIMAGE_HDR;$/;"	m	struct:__anon149
__GLX_COMPRESSED_TEXIMAGE_HDR	drivers/GL/glxproto.h	1559;"	d
__GLX_COMPRESSED_TEXIMAGE_HDR_SIZE	drivers/GL/glxproto.h	1568;"	d
__GLX_COMPRESSED_TEXSUBIMAGE_3D_CMD_HDR_SIZE	drivers/GL/glxproto.h	1693;"	d
__GLX_COMPRESSED_TEXSUBIMAGE_3D_DISPATCH_HDR_SIZE	drivers/GL/glxproto.h	1696;"	d
__GLX_COMPRESSED_TEXSUBIMAGE_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPRESSED_TEXSUBIMAGE_3D_HDR;$/;"	m	struct:__anon156
__GLX_COMPRESSED_TEXSUBIMAGE_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPRESSED_TEXSUBIMAGE_3D_HDR;$/;"	m	struct:__anon157
__GLX_COMPRESSED_TEXSUBIMAGE_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPRESSED_TEXSUBIMAGE_3D_HDR;$/;"	m	struct:__anon158
__GLX_COMPRESSED_TEXSUBIMAGE_3D_HDR	drivers/GL/glxproto.h	1679;"	d
__GLX_COMPRESSED_TEXSUBIMAGE_3D_HDR_SIZE	drivers/GL/glxproto.h	1691;"	d
__GLX_COMPRESSED_TEXSUBIMAGE_CMD_HDR_SIZE	drivers/GL/glxproto.h	1613;"	d
__GLX_COMPRESSED_TEXSUBIMAGE_DISPATCH_HDR_SIZE	drivers/GL/glxproto.h	1616;"	d
__GLX_COMPRESSED_TEXSUBIMAGE_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPRESSED_TEXSUBIMAGE_HDR;$/;"	m	struct:__anon150
__GLX_COMPRESSED_TEXSUBIMAGE_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPRESSED_TEXSUBIMAGE_HDR;$/;"	m	struct:__anon151
__GLX_COMPRESSED_TEXSUBIMAGE_HDR	drivers/GL/glxproto.h	/^    __GLX_COMPRESSED_TEXSUBIMAGE_HDR;$/;"	m	struct:__anon152
__GLX_COMPRESSED_TEXSUBIMAGE_HDR	drivers/GL/glxproto.h	1601;"	d
__GLX_COMPRESSED_TEXSUBIMAGE_HDR_SIZE	drivers/GL/glxproto.h	1611;"	d
__GLX_CONV_FILT_CMD_DISPATCH_HDR_SIZE	drivers/GL/glxproto.h	1772;"	d
__GLX_CONV_FILT_CMD_HDR_SIZE	drivers/GL/glxproto.h	1769;"	d
__GLX_CONV_FILT_HDR	drivers/GL/glxproto.h	/^    __GLX_CONV_FILT_HDR;$/;"	m	struct:__anon162
__GLX_CONV_FILT_HDR	drivers/GL/glxproto.h	/^    __GLX_CONV_FILT_HDR;$/;"	m	struct:__anon163
__GLX_CONV_FILT_HDR	drivers/GL/glxproto.h	/^    __GLX_CONV_FILT_HDR;$/;"	m	struct:__anon164
__GLX_CONV_FILT_HDR	drivers/GL/glxproto.h	1759;"	d
__GLX_CONV_FILT_HDR_SIZE	drivers/GL/glxproto.h	1767;"	d
__GLX_DRAWARRAYS_CMD_HDR_SIZE	drivers/GL/glxproto.h	1807;"	d
__GLX_DRAWARRAYS_HDR	drivers/GL/glxproto.h	/^    __GLX_DRAWARRAYS_HDR;$/;"	m	struct:__anon165
__GLX_DRAWARRAYS_HDR	drivers/GL/glxproto.h	/^    __GLX_DRAWARRAYS_HDR;$/;"	m	struct:__anon166
__GLX_DRAWARRAYS_HDR	drivers/GL/glxproto.h	/^    __GLX_DRAWARRAYS_HDR;$/;"	m	struct:__anon167
__GLX_DRAWARRAYS_HDR	drivers/GL/glxproto.h	1800;"	d
__GLX_DRAWARRAYS_HDR_SIZE	drivers/GL/glxproto.h	1805;"	d
__GLX_DRAWPIXELS_CMD_DISPATCH_HDR_SIZE	drivers/GL/glxproto.h	1731;"	d
__GLX_DRAWPIXELS_CMD_HDR_SIZE	drivers/GL/glxproto.h	1728;"	d
__GLX_DRAWPIXELS_HDR	drivers/GL/glxproto.h	/^    __GLX_DRAWPIXELS_HDR;$/;"	m	struct:__anon159
__GLX_DRAWPIXELS_HDR	drivers/GL/glxproto.h	/^    __GLX_DRAWPIXELS_HDR;$/;"	m	struct:__anon160
__GLX_DRAWPIXELS_HDR	drivers/GL/glxproto.h	/^    __GLX_DRAWPIXELS_HDR;$/;"	m	struct:__anon161
__GLX_DRAWPIXELS_HDR	drivers/GL/glxproto.h	1720;"	d
__GLX_DRAWPIXELS_HDR_SIZE	drivers/GL/glxproto.h	1726;"	d
__GLX_EXT_CONFIG_PROPS	drivers/GL/glxint.h	61;"	d
__GLX_MAX_CONFIG_PROPS	drivers/GL/glxint.h	59;"	d
__GLX_MAX_CONTEXT_PROPS	drivers/GL/glxproto.h	75;"	d
__GLX_MAX_RENDER_CMD_SIZE	drivers/GL/glxproto.h	142;"	d
__GLX_MIN_CONFIG_PROPS	drivers/GL/glxint.h	58;"	d
__GLX_NUMBER_ERRORS	drivers/GL/glxproto.h	60;"	d
__GLX_NUMBER_EVENTS	drivers/GL/glxproto.h	70;"	d
__GLX_PIXEL_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_3D_HDR;$/;"	m	struct:__anon138
__GLX_PIXEL_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_3D_HDR;$/;"	m	struct:__anon139
__GLX_PIXEL_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_3D_HDR;$/;"	m	struct:__anon140
__GLX_PIXEL_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_3D_HDR;$/;"	m	struct:__anon144
__GLX_PIXEL_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_3D_HDR;$/;"	m	struct:__anon145
__GLX_PIXEL_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_3D_HDR;$/;"	m	struct:__anon146
__GLX_PIXEL_3D_HDR	drivers/GL/glxproto.h	1296;"	d
__GLX_PIXEL_3D_HDR_SIZE	drivers/GL/glxproto.h	1310;"	d
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon130
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon131
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon132
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon133
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon134
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon135
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon136
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon137
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon141
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon142
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon143
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon159
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon160
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon161
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon162
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon163
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon164
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon169
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon170
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon171
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon172
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon173
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	/^    __GLX_PIXEL_HDR;$/;"	m	struct:__anon174
__GLX_PIXEL_HDR	drivers/GL/glxproto.h	1275;"	d
__GLX_PIXEL_HDR_SIZE	drivers/GL/glxproto.h	1285;"	d
__GLX_POLYGONSTIPPLE_CMD_HDR_SIZE	drivers/GL/glxproto.h	1357;"	d
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon128
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon131
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon134
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon135
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon138
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon141
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon144
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon147
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon150
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon153
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon156
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon159
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon162
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon165
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon169
__GLX_RENDER_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_HDR;$/;"	m	struct:__anon172
__GLX_RENDER_HDR	drivers/GL/glxproto.h	1249;"	d
__GLX_RENDER_HDR_SIZE	drivers/GL/glxproto.h	1253;"	d
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon129
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon132
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon136
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon139
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon142
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon145
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon148
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon151
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon154
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon157
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon160
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon163
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon166
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon170
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	/^    __GLX_RENDER_LARGE_HDR;$/;"	m	struct:__anon173
__GLX_RENDER_LARGE_HDR	drivers/GL/glxproto.h	1259;"	d
__GLX_RENDER_LARGE_HDR_SIZE	drivers/GL/glxproto.h	1263;"	d
__GLX_SINGLE_HDR_SIZE	drivers/GL/glxproto.h	1246;"	d
__GLX_SIZE_CARD16	drivers/GL/glxproto.h	117;"	d
__GLX_SIZE_CARD32	drivers/GL/glxproto.h	118;"	d
__GLX_SIZE_CARD8	drivers/GL/glxproto.h	116;"	d
__GLX_SIZE_FLOAT32	drivers/GL/glxproto.h	119;"	d
__GLX_SIZE_FLOAT64	drivers/GL/glxproto.h	120;"	d
__GLX_SIZE_INT16	drivers/GL/glxproto.h	114;"	d
__GLX_SIZE_INT32	drivers/GL/glxproto.h	115;"	d
__GLX_SIZE_INT8	drivers/GL/glxproto.h	113;"	d
__GLX_TEXIMAGE_3D_CMD_DISPATCH_HDR_SIZE	drivers/GL/glxproto.h	1433;"	d
__GLX_TEXIMAGE_3D_CMD_HDR_SIZE	drivers/GL/glxproto.h	1429;"	d
__GLX_TEXIMAGE_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_TEXIMAGE_3D_HDR;$/;"	m	struct:__anon138
__GLX_TEXIMAGE_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_TEXIMAGE_3D_HDR;$/;"	m	struct:__anon139
__GLX_TEXIMAGE_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_TEXIMAGE_3D_HDR;$/;"	m	struct:__anon140
__GLX_TEXIMAGE_3D_HDR	drivers/GL/glxproto.h	1414;"	d
__GLX_TEXIMAGE_3D_HDR_SIZE	drivers/GL/glxproto.h	1427;"	d
__GLX_TEXIMAGE_CMD_DISPATCH_HDR_SIZE	drivers/GL/glxproto.h	1383;"	d
__GLX_TEXIMAGE_CMD_HDR_SIZE	drivers/GL/glxproto.h	1380;"	d
__GLX_TEXIMAGE_HDR	drivers/GL/glxproto.h	/^    __GLX_TEXIMAGE_HDR;$/;"	m	struct:__anon135
__GLX_TEXIMAGE_HDR	drivers/GL/glxproto.h	/^    __GLX_TEXIMAGE_HDR;$/;"	m	struct:__anon136
__GLX_TEXIMAGE_HDR	drivers/GL/glxproto.h	/^    __GLX_TEXIMAGE_HDR;$/;"	m	struct:__anon137
__GLX_TEXIMAGE_HDR	drivers/GL/glxproto.h	1368;"	d
__GLX_TEXIMAGE_HDR_SIZE	drivers/GL/glxproto.h	1378;"	d
__GLX_TEXSUBIMAGE_3D_CMD_DISPATCH_HDR_SIZE	drivers/GL/glxproto.h	1528;"	d
__GLX_TEXSUBIMAGE_3D_CMD_HDR_SIZE	drivers/GL/glxproto.h	1524;"	d
__GLX_TEXSUBIMAGE_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_TEXSUBIMAGE_3D_HDR;$/;"	m	struct:__anon144
__GLX_TEXSUBIMAGE_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_TEXSUBIMAGE_3D_HDR;$/;"	m	struct:__anon145
__GLX_TEXSUBIMAGE_3D_HDR	drivers/GL/glxproto.h	/^    __GLX_TEXSUBIMAGE_3D_HDR;$/;"	m	struct:__anon146
__GLX_TEXSUBIMAGE_3D_HDR	drivers/GL/glxproto.h	1507;"	d
__GLX_TEXSUBIMAGE_3D_HDR_SIZE	drivers/GL/glxproto.h	1522;"	d
__GLX_TEXSUBIMAGE_CMD_DISPATCH_HDR_SIZE	drivers/GL/glxproto.h	1478;"	d
__GLX_TEXSUBIMAGE_CMD_HDR_SIZE	drivers/GL/glxproto.h	1475;"	d
__GLX_TEXSUBIMAGE_HDR	drivers/GL/glxproto.h	/^    __GLX_TEXSUBIMAGE_HDR;$/;"	m	struct:__anon141
__GLX_TEXSUBIMAGE_HDR	drivers/GL/glxproto.h	/^    __GLX_TEXSUBIMAGE_HDR;$/;"	m	struct:__anon142
__GLX_TEXSUBIMAGE_HDR	drivers/GL/glxproto.h	/^    __GLX_TEXSUBIMAGE_HDR;$/;"	m	struct:__anon143
__GLX_TEXSUBIMAGE_HDR	drivers/GL/glxproto.h	1462;"	d
__GLX_TEXSUBIMAGE_HDR_SIZE	drivers/GL/glxproto.h	1473;"	d
__GLX_TOTAL_CONFIG	drivers/GL/glxint.h	70;"	d
__GLX_TOTAL_FBCONFIG_PROPS	drivers/GL/glxint.h	127;"	d
__GLX_VENDPRIV_HDR_SIZE	drivers/GL/glxproto.h	1247;"	d
__GLX_glxint_h__	drivers/GL/glxint.h	2;"	d
__GLX_glxtokens_h__	drivers/GL/glxtokens.h	2;"	d
__GLXbitmapHeader	drivers/GL/glxproto.h	/^} __GLXbitmapHeader;$/;"	t	typeref:struct:__anon131
__GLXbitmapLargeHeader	drivers/GL/glxproto.h	/^} __GLXbitmapLargeHeader;$/;"	t	typeref:struct:__anon132
__GLXcompressedTexImage3DHeader	drivers/GL/glxproto.h	/^} __GLXcompressedTexImage3DHeader;$/;"	t	typeref:struct:__anon153
__GLXcompressedTexImage3DLargeHeader	drivers/GL/glxproto.h	/^} __GLXcompressedTexImage3DLargeHeader;$/;"	t	typeref:struct:__anon154
__GLXcompressedTexImageHeader	drivers/GL/glxproto.h	/^} __GLXcompressedTexImageHeader;$/;"	t	typeref:struct:__anon147
__GLXcompressedTexImageLargeHeader	drivers/GL/glxproto.h	/^} __GLXcompressedTexImageLargeHeader;$/;"	t	typeref:struct:__anon148
__GLXcompressedTexSubImage3DHeader	drivers/GL/glxproto.h	/^} __GLXcompressedTexSubImage3DHeader;$/;"	t	typeref:struct:__anon156
__GLXcompressedTexSubImage3DLargeHeader	drivers/GL/glxproto.h	/^} __GLXcompressedTexSubImage3DLargeHeader;$/;"	t	typeref:struct:__anon157
__GLXcompressedTexSubImageHeader	drivers/GL/glxproto.h	/^} __GLXcompressedTexSubImageHeader;$/;"	t	typeref:struct:__anon150
__GLXcompressedTexSubImageLargeHeader	drivers/GL/glxproto.h	/^} __GLXcompressedTexSubImageLargeHeader;$/;"	t	typeref:struct:__anon151
__GLXdispatchBitmapHeader	drivers/GL/glxproto.h	/^} __GLXdispatchBitmapHeader;$/;"	t	typeref:struct:__anon133
__GLXdispatchColorSubTableHeader	drivers/GL/glxproto.h	/^} __GLXdispatchColorSubTableHeader;$/;"	t	typeref:struct:__anon174
__GLXdispatchColorTableHeader	drivers/GL/glxproto.h	/^} __GLXdispatchColorTableHeader;$/;"	t	typeref:struct:__anon171
__GLXdispatchCompressedTexImage3DHeader	drivers/GL/glxproto.h	/^} __GLXdispatchCompressedTexImage3DHeader;$/;"	t	typeref:struct:__anon155
__GLXdispatchCompressedTexImageHeader	drivers/GL/glxproto.h	/^} __GLXdispatchCompressedTexImageHeader;$/;"	t	typeref:struct:__anon149
__GLXdispatchCompressedTexSubImage3DHeader	drivers/GL/glxproto.h	/^} __GLXdispatchCompressedTexSubImage3DHeader;$/;"	t	typeref:struct:__anon158
__GLXdispatchCompressedTexSubImageHeader	drivers/GL/glxproto.h	/^} __GLXdispatchCompressedTexSubImageHeader;$/;"	t	typeref:struct:__anon152
__GLXdispatchConvolutionFilterHeader	drivers/GL/glxproto.h	/^} __GLXdispatchConvolutionFilterHeader;$/;"	t	typeref:struct:__anon164
__GLXdispatchDrawArraysComponentHeader	drivers/GL/glxproto.h	/^} __GLXdispatchDrawArraysComponentHeader;$/;"	t	typeref:struct:__anon168
__GLXdispatchDrawArraysHeader	drivers/GL/glxproto.h	/^} __GLXdispatchDrawArraysHeader;$/;"	t	typeref:struct:__anon167
__GLXdispatchDrawPixelsHeader	drivers/GL/glxproto.h	/^} __GLXdispatchDrawPixelsHeader;$/;"	t	typeref:struct:__anon161
__GLXdispatchTexImage3DHeader	drivers/GL/glxproto.h	/^} __GLXdispatchTexImage3DHeader;$/;"	t	typeref:struct:__anon140
__GLXdispatchTexImageHeader	drivers/GL/glxproto.h	/^} __GLXdispatchTexImageHeader;$/;"	t	typeref:struct:__anon137
__GLXdispatchTexSubImage3DHeader	drivers/GL/glxproto.h	/^} __GLXdispatchTexSubImage3DHeader;$/;"	t	typeref:struct:__anon146
__GLXdispatchTexSubImageHeader	drivers/GL/glxproto.h	/^} __GLXdispatchTexSubImageHeader;$/;"	t	typeref:struct:__anon143
__GLXdrawArraysHeader	drivers/GL/glxproto.h	/^} __GLXdrawArraysHeader;$/;"	t	typeref:struct:__anon165
__GLXdrawArraysLargeHeader	drivers/GL/glxproto.h	/^} __GLXdrawArraysLargeHeader;$/;"	t	typeref:struct:__anon166
__GLXdrawPixelsHeader	drivers/GL/glxproto.h	/^} __GLXdrawPixelsHeader;$/;"	t	typeref:struct:__anon159
__GLXdrawPixelsLargeHeader	drivers/GL/glxproto.h	/^} __GLXdrawPixelsLargeHeader;$/;"	t	typeref:struct:__anon160
__GLXextFuncPtr	drivers/GL/glx.h	/^typedef void (*__GLXextFuncPtr)(void);$/;"	t
__GLXextFuncPtr	drivers/GL/glxext.h	/^typedef void (*__GLXextFuncPtr)(void);$/;"	t
__GLXpixelHeader	drivers/GL/glxproto.h	/^} __GLXpixelHeader;$/;"	t	typeref:struct:__anon130
__GLXpolygonStippleHeader	drivers/GL/glxproto.h	/^} __GLXpolygonStippleHeader;$/;"	t	typeref:struct:__anon134
__GLXrenderHeader	drivers/GL/glxproto.h	/^} __GLXrenderHeader;$/;"	t	typeref:struct:__anon128
__GLXrenderLargeHeader	drivers/GL/glxproto.h	/^} __GLXrenderLargeHeader;$/;"	t	typeref:struct:__anon129
__GLXtexImage3DHeader	drivers/GL/glxproto.h	/^} __GLXtexImage3DHeader;$/;"	t	typeref:struct:__anon138
__GLXtexImage3DLargeHeader	drivers/GL/glxproto.h	/^} __GLXtexImage3DLargeHeader;$/;"	t	typeref:struct:__anon139
__GLXtexImageHeader	drivers/GL/glxproto.h	/^} __GLXtexImageHeader;$/;"	t	typeref:struct:__anon135
__GLXtexImageLargeHeader	drivers/GL/glxproto.h	/^} __GLXtexImageLargeHeader;$/;"	t	typeref:struct:__anon136
__GLXtexSubImage3DHeader	drivers/GL/glxproto.h	/^} __GLXtexSubImage3DHeader;$/;"	t	typeref:struct:__anon144
__GLXtexSubImage3DLargeHeader	drivers/GL/glxproto.h	/^} __GLXtexSubImage3DLargeHeader;$/;"	t	typeref:struct:__anon145
__GLXtexSubImageHeader	drivers/GL/glxproto.h	/^} __GLXtexSubImageHeader;$/;"	t	typeref:struct:__anon141
__GLXtexSubImageLargeHeader	drivers/GL/glxproto.h	/^} __GLXtexSubImageLargeHeader;$/;"	t	typeref:struct:__anon142
__GLXvisualConfig	drivers/GL/glxint.h	/^typedef struct __GLXvisualConfigRec __GLXvisualConfig;$/;"	t	typeref:struct:__GLXvisualConfigRec
__GLXvisualConfigRec	drivers/GL/glxint.h	/^struct __GLXvisualConfigRec {$/;"	s
__GL_ACCUM_BUFFER_MASK	drivers/GL/glcore.h	216;"	d
__GL_ACCUM_BUFFER_MASK	drivers/GL/internal/glcore.h	216;"	d
__GL_ALL_BUFFER_MASK	drivers/GL/glcore.h	221;"	d
__GL_ALL_BUFFER_MASK	drivers/GL/internal/glcore.h	221;"	d
__GL_AUX_BUFFER_MASK	drivers/GL/glcore.h	219;"	d
__GL_AUX_BUFFER_MASK	drivers/GL/internal/glcore.h	219;"	d
__GL_BACK_BUFFER_MASK	drivers/GL/glcore.h	213;"	d
__GL_BACK_BUFFER_MASK	drivers/GL/internal/glcore.h	213;"	d
__GL_BACK_LEFT_BUFFER_MASK	drivers/GL/glcore.h	214;"	d
__GL_BACK_LEFT_BUFFER_MASK	drivers/GL/internal/glcore.h	214;"	d
__GL_BACK_RIGHT_BUFFER_MASK	drivers/GL/glcore.h	215;"	d
__GL_BACK_RIGHT_BUFFER_MASK	drivers/GL/internal/glcore.h	215;"	d
__GL_BUFFER_FALLBACK	drivers/GL/glcore.h	224;"	d
__GL_BUFFER_FALLBACK	drivers/GL/internal/glcore.h	224;"	d
__GL_DEPTH_BUFFER_MASK	drivers/GL/glcore.h	217;"	d
__GL_DEPTH_BUFFER_MASK	drivers/GL/internal/glcore.h	217;"	d
__GL_FRONT_BUFFER_MASK	drivers/GL/glcore.h	210;"	d
__GL_FRONT_BUFFER_MASK	drivers/GL/internal/glcore.h	210;"	d
__GL_FRONT_LEFT_BUFFER_MASK	drivers/GL/glcore.h	211;"	d
__GL_FRONT_LEFT_BUFFER_MASK	drivers/GL/internal/glcore.h	211;"	d
__GL_FRONT_RIGHT_BUFFER_MASK	drivers/GL/glcore.h	212;"	d
__GL_FRONT_RIGHT_BUFFER_MASK	drivers/GL/internal/glcore.h	212;"	d
__GL_LOCK_DP	drivers/GL/glcore.h	409;"	d
__GL_LOCK_DP	drivers/GL/glcore.h	420;"	d
__GL_LOCK_DP	drivers/GL/internal/glcore.h	409;"	d
__GL_LOCK_DP	drivers/GL/internal/glcore.h	420;"	d
__GL_STENCIL_BUFFER_MASK	drivers/GL/glcore.h	218;"	d
__GL_STENCIL_BUFFER_MASK	drivers/GL/internal/glcore.h	218;"	d
__GL_UNLOCK_DP	drivers/GL/glcore.h	414;"	d
__GL_UNLOCK_DP	drivers/GL/glcore.h	421;"	d
__GL_UNLOCK_DP	drivers/GL/internal/glcore.h	414;"	d
__GL_UNLOCK_DP	drivers/GL/internal/glcore.h	421;"	d
__GLbufFallbackInitFn	drivers/GL/glcore.h	/^typedef void (*__GLbufFallbackInitFn)(__GLdrawableBuffer *buf, $/;"	t
__GLbufFallbackInitFn	drivers/GL/internal/glcore.h	/^typedef void (*__GLbufFallbackInitFn)(__GLdrawableBuffer *buf, $/;"	t
__GLbufMainInitFn	drivers/GL/glcore.h	/^typedef void (*__GLbufMainInitFn)(__GLdrawableBuffer *buf, $/;"	t
__GLbufMainInitFn	drivers/GL/internal/glcore.h	/^typedef void (*__GLbufMainInitFn)(__GLdrawableBuffer *buf, $/;"	t
__GLcontext	drivers/GL/glcore.h	/^typedef struct __GLcontextRec __GLcontext;$/;"	t	typeref:struct:__GLcontextRec
__GLcontext	drivers/GL/internal/glcore.h	/^typedef struct __GLcontextRec __GLcontext;$/;"	t	typeref:struct:__GLcontextRec
__GLcontextModes	drivers/GL/glcore.h	/^} __GLcontextModes;$/;"	t	typeref:struct:__GLcontextModesRec
__GLcontextModes	drivers/GL/internal/glcore.h	/^} __GLcontextModes;$/;"	t	typeref:struct:__GLcontextModesRec
__GLcontextModesRec	drivers/GL/glcore.h	/^typedef struct __GLcontextModesRec {$/;"	s
__GLcontextModesRec	drivers/GL/internal/glcore.h	/^typedef struct __GLcontextModesRec {$/;"	s
__GLdrawableBuffer	drivers/GL/glcore.h	/^typedef struct __GLdrawableBufferRec __GLdrawableBuffer;$/;"	t	typeref:struct:__GLdrawableBufferRec
__GLdrawableBuffer	drivers/GL/internal/glcore.h	/^typedef struct __GLdrawableBufferRec __GLdrawableBuffer;$/;"	t	typeref:struct:__GLdrawableBufferRec
__GLdrawableBufferRec	drivers/GL/glcore.h	/^struct __GLdrawableBufferRec {$/;"	s
__GLdrawableBufferRec	drivers/GL/internal/glcore.h	/^struct __GLdrawableBufferRec {$/;"	s
__GLdrawablePrivate	drivers/GL/glcore.h	/^typedef struct __GLdrawablePrivateRec __GLdrawablePrivate;$/;"	t	typeref:struct:__GLdrawablePrivateRec
__GLdrawablePrivate	drivers/GL/internal/glcore.h	/^typedef struct __GLdrawablePrivateRec __GLdrawablePrivate;$/;"	t	typeref:struct:__GLdrawablePrivateRec
__GLdrawablePrivateRec	drivers/GL/glcore.h	/^struct __GLdrawablePrivateRec {$/;"	s
__GLdrawablePrivateRec	drivers/GL/internal/glcore.h	/^struct __GLdrawablePrivateRec {$/;"	s
__GLdrawableRegion	drivers/GL/glcore.h	/^typedef struct __GLdrawableRegionRec __GLdrawableRegion;$/;"	t	typeref:struct:__GLdrawableRegionRec
__GLdrawableRegion	drivers/GL/internal/glcore.h	/^typedef struct __GLdrawableRegionRec __GLdrawableRegion;$/;"	t	typeref:struct:__GLdrawableRegionRec
__GLdrawableRegionRec	drivers/GL/glcore.h	/^struct __GLdrawableRegionRec {$/;"	s
__GLdrawableRegionRec	drivers/GL/internal/glcore.h	/^struct __GLdrawableRegionRec {$/;"	s
__GLexports	drivers/GL/glcore.h	/^} __GLexports;$/;"	t	typeref:struct:__GLexportsRec
__GLexports	drivers/GL/internal/glcore.h	/^} __GLexports;$/;"	t	typeref:struct:__GLexportsRec
__GLexportsRec	drivers/GL/glcore.h	/^typedef struct __GLexportsRec {$/;"	s
__GLexportsRec	drivers/GL/internal/glcore.h	/^typedef struct __GLexportsRec {$/;"	s
__GLimports	drivers/GL/glcore.h	/^} __GLimports;$/;"	t	typeref:struct:__GLimportsRec
__GLimports	drivers/GL/internal/glcore.h	/^} __GLimports;$/;"	t	typeref:struct:__GLimportsRec
__GLimportsRec	drivers/GL/glcore.h	/^typedef struct __GLimportsRec {$/;"	s
__GLimportsRec	drivers/GL/internal/glcore.h	/^typedef struct __GLimportsRec {$/;"	s
__GLinterface	drivers/GL/glcore.h	/^typedef struct __GLinterfaceRec __GLinterface;$/;"	t	typeref:struct:__GLinterfaceRec
__GLinterface	drivers/GL/internal/glcore.h	/^typedef struct __GLinterfaceRec __GLinterface;$/;"	t	typeref:struct:__GLinterfaceRec
__GLinterfaceRec	drivers/GL/glcore.h	/^struct __GLinterfaceRec {$/;"	s
__GLinterfaceRec	drivers/GL/internal/glcore.h	/^struct __GLinterfaceRec {$/;"	s
__GLregionRect	drivers/GL/glcore.h	/^} __GLregionRect;$/;"	t	typeref:struct:__GLregionRectRec
__GLregionRect	drivers/GL/internal/glcore.h	/^} __GLregionRect;$/;"	t	typeref:struct:__GLregionRectRec
__GLregionRectRec	drivers/GL/glcore.h	/^typedef struct __GLregionRectRec {$/;"	s
__GLregionRectRec	drivers/GL/internal/glcore.h	/^typedef struct __GLregionRectRec {$/;"	s
__GUIUTILSH	drivers/qt/TeGUIUtils.h	2;"	d
__IBPP_H__	drivers/Firebird/ibpp/core/ibpp.h	48;"	d
__INTERNAL_IBPP_H__	drivers/Firebird/ibpp/core/_ibpp.h	32;"	d
__MGLMESA_H	drivers/GL/mglmesa.h	41;"	d
__QTCANVAS_H	drivers/qt/TeQtCanvas.h	23;"	d
__STAT_INTERNAL_DEFINES_H	stat/TeStatDefines.h	27;"	d
__TEBAYESFUNCTIONSH__	stat/TeBayesFunctions.h	28;"	d
__TEDXF_INTERNAL_DEFINES_H	drivers/DXF/tedxfdefines.h	2;"	d
__TEGDAL_INTERNAL_DEFINES_H	drivers/gdal/TeGDALDefines.h	2;"	d
__TEQWT_INTERNAL_DEFINES_H	drivers/qwt/TeQwtDefines.h	27;"	d
__TERRALIB_DRIVER_LIBJPEG_WRAPPER_H	drivers/libjpeg/TeLibJpegWrapper.h	28;"	d
__TERRALIB_INTERNAL_ABSTRACT_THEME_H	kernel/TeAbstractTheme.h	27;"	d
__TERRALIB_INTERNAL_ADDRESSLOCATOR_H	functions/TeAddressLocator.h	32;"	d
__TERRALIB_INTERNAL_ADDRESSNOTIFYFUNCTORWINDOW_H	drivers/qt/TeAddressNotifyFunctorWindow.h	32;"	d
__TERRALIB_INTERNAL_ADODB_H	drivers/ado/TeAdoDB.h	27;"	d
__TERRALIB_INTERNAL_ADODEFINES_H	drivers/ado/TeAdoDefines.h	27;"	d
__TERRALIB_INTERNAL_ADOFIREBIRD_H	drivers/ado/TeAdoFireBird.h	27;"	d
__TERRALIB_INTERNAL_ADOORACLE_H	drivers/ado/TeAdoOracle.h	27;"	d
__TERRALIB_INTERNAL_ADOSQLSERVER_H	drivers/ado/TeAdoSqlServer.h	27;"	d
__TERRALIB_INTERNAL_ADOSQLSERVER_SPATIAL_H	drivers/ado/TeAdoSqlServerSpatial.h	27;"	d
__TERRALIB_INTERNAL_APPLICATIONUTILS_H	drivers/qt/TeApplicationUtils.h	27;"	d
__TERRALIB_INTERNAL_ASCIIFILE_H	kernel/TeAsciiFile.h	27;"	d
__TERRALIB_INTERNAL_ATTRIBUTE_H	kernel/TeAttribute.h	27;"	d
__TERRALIB_INTERNAL_BASESTINSTANCE_H	kernel/TeBaseSTInstance.h	29;"	d
__TERRALIB_INTERNAL_BLOCKLOADER_H	kernel/TeBlockLoader.h	27;"	d
__TERRALIB_INTERNAL_BNADRIVER_H	functions/TeDriverBNA.h	27;"	d
__TERRALIB_INTERNAL_BOX_H	kernel/TeBox.h	27;"	d
__TERRALIB_INTERNAL_BUFFER_H	kernel/TeBufferRegion.h	29;"	d
__TERRALIB_INTERNAL_CELLALGORITHMS_H	functions/TeCellAlgorithms.h	28;"	d
__TERRALIB_INTERNAL_COLORUTILS_H	utils/TeColorUtils.h	27;"	d
__TERRALIB_INTERNAL_COMPOSITE_H	kernel/TeComposite.h	28;"	d
__TERRALIB_INTERNAL_CONNECTION_H	kernel/TeConnection.h	31;"	d
__TERRALIB_INTERNAL_CONNECTION_POOL_H	kernel/TeConnectionPool.h	31;"	d
__TERRALIB_INTERNAL_COORD2D_H	kernel/TeCoord2D.h	27;"	d
__TERRALIB_INTERNAL_COORDALGORITHMS_H	functions/TeCoordAlgorithms.h	27;"	d
__TERRALIB_INTERNAL_COUNTED_H	kernel/TeCounted.h	34;"	d
__TERRALIB_INTERNAL_COVERAGEDECODERCACHELRU_H	kernel/TeCoverageDecoderCacheLRU.h	30;"	d
__TERRALIB_INTERNAL_COVERAGEDECODERDATABASE_H	kernel/TeCoverageDecoderDatabase.h	30;"	d
__TERRALIB_INTERNAL_COVERAGEDECODER_H	kernel/TeCoverageDecoder.h	30;"	d
__TERRALIB_INTERNAL_COVERAGEIMPORTUTILS_H	kernel/TeCoverageImportUtils.h	27;"	d
__TERRALIB_INTERNAL_COVERAGEIMPORT_H	kernel/TeCoverageImport.h	30;"	d
__TERRALIB_INTERNAL_COVERAGEINTERPOLATORNN_H	kernel/TeCoverageInterpolatorNN.h	30;"	d
__TERRALIB_INTERNAL_COVERAGEINTERPOLATOR_H	kernel/TeCoverageInterpolator.h	30;"	d
__TERRALIB_INTERNAL_COVERAGEPARAMS_H	kernel/TeCoverageParams.h	28;"	d
__TERRALIB_INTERNAL_COVERAGEUTILS_H	kernel/TeCoverageUtils.h	27;"	d
__TERRALIB_INTERNAL_COVERAGE_H	kernel/TeCoverage.h	30;"	d
__TERRALIB_INTERNAL_DATABASEINDEX_H	kernel/TeDatabaseIndex.h	27;"	d
__TERRALIB_INTERNAL_DATABASEUTILS_H	utils/TeDatabaseUtils.h	27;"	d
__TERRALIB_INTERNAL_DATABASE_H	kernel/TeDatabase.h	27;"	d
__TERRALIB_INTERNAL_DATATYPE_H	kernel/TeDataTypes.h	27;"	d
__TERRALIB_INTERNAL_DATUM_H	kernel/TeDatum.h	28;"	d
__TERRALIB_INTERNAL_DBFSHPDRIVER_H	drivers/shapelib/TeDriverSHPDBF.h	28;"	d
__TERRALIB_INTERNAL_DECODERASCIIGrid_H	kernel/TeDecoderASCIIGrid.h	27;"	d
__TERRALIB_INTERNAL_DECODERDATABASE_H	kernel/TeDecoderDatabase.h	28;"	d
__TERRALIB_INTERNAL_DECODERFILE_H	kernel/TeDecoderFile.h	27;"	d
__TERRALIB_INTERNAL_DECODERJPEG_H	kernel/TeDecoderJPEG.h	27;"	d
__TERRALIB_INTERNAL_DECODERMEMORYMAP_H	kernel/TeDecoderMemoryMap.h	27;"	d
__TERRALIB_INTERNAL_DECODERMEMORY_H	kernel/TeDecoderMemory.h	27;"	d
__TERRALIB_INTERNAL_DECODERMRSID_H	drivers/MrSID/TeDecoderMrSID.h	27;"	d
__TERRALIB_INTERNAL_DECODERQTIMAGE_H	drivers/qt/TeDecoderQtImage.h	27;"	d
__TERRALIB_INTERNAL_DECODERSMARTMEM_H	kernel/TeDecoderSmartMem.h	27;"	d
__TERRALIB_INTERNAL_DECODERSPR_H	kernel/TeDecoderSPR.h	27;"	d
__TERRALIB_INTERNAL_DECODERTIFF_H	kernel/TeDecoderTIFF.h	28;"	d
__TERRALIB_INTERNAL_DECODERVIRTUALMEMORY_H	kernel/TeDecoderVirtualMemory.h	27;"	d
__TERRALIB_INTERNAL_DECODER_H	kernel/TeDecoder.h	27;"	d
__TERRALIB_INTERNAL_DEFINES_H	kernel/TeDefines.h	27;"	d
__TERRALIB_INTERNAL_DRIVERCSV_H	functions/TeDriverCSV.h	27;"	d
__TERRALIB_INTERNAL_DRIVER_JPEGLIB_MEMDST_H	drivers/libjpeg/jmemdstsrc.h	28;"	d
__TERRALIB_INTERNAL_ERRORLOG_H	kernel/TeErrorLog.h	27;"	d
__TERRALIB_INTERNAL_EXCEPTION_H	kernel/TeException.h	27;"	d
__TERRALIB_INTERNAL_EXTERNALTHEME_H	kernel/TeExternalTheme.h	29;"	d
__TERRALIB_INTERNAL_FACTORY_H	kernel/TeFactory.h	27;"	d
__TERRALIB_INTERNAL_FILETHEME_H	kernel/TeFileTheme.h	29;"	d
__TERRALIB_INTERNAL_FIREBIRDDEFINES_H	drivers/Firebird/TeFirebirdDefines.h	27;"	d
__TERRALIB_INTERNAL_FIREBIRD_H	drivers/Firebird/TeFirebird.h	27;"	d
__TERRALIB_INTERNAL_FRAGMENTATION_H	kernel/TeFragmentation.h	30;"	d
__TERRALIB_INTERNAL_FUNCTIONSDEFINES_H	functions/TeFunctionsDefines.h	27;"	d
__TERRALIB_INTERNAL_GEODATADRIVER_H	kernel/TeGeoDataDriver.h	29;"	d
__TERRALIB_INTERNAL_GEODATASET_H	kernel/TeGeoDataSet.h	25;"	d
__TERRALIB_INTERNAL_GEOFILEINFO_H	kernel/TeGeoFileInfo.h	29;"	d
__TERRALIB_INTERNAL_GEOMETRYALGORITHMS_H	kernel/TeGeometryAlgorithms.h	28;"	d
__TERRALIB_INTERNAL_GEOMETRY_H	kernel/TeGeometry.h	28;"	d
__TERRALIB_INTERNAL_GEOPROCESSING_H	functions/TeGeoProcessingFunctions.h	28;"	d
__TERRALIB_INTERNAL_GRAPH_H	kernel/TeGraph.h	28;"	d
__TERRALIB_INTERNAL_GRIDINDEX_H	kernel/TeGridIndex.h	28;"	d
__TERRALIB_INTERNAL_GROUPINGALGORITHMS_H	kernel/TeGroupingAlgorithms.h	28;"	d
__TERRALIB_INTERNAL_GTMDRIVER_H	drivers/GTM/TeGTM.h	27;"	d
__TERRALIB_INTERNAL_IMPORTEXPORT_H	functions/TeImportExport.h	28;"	d
__TERRALIB_INTERNAL_IMPORTRASTER_H	kernel/TeImportRaster.h	27;"	d
__TERRALIB_INTERNAL_INTERPOLATION_H	functions/TeInterpolation.h	29;"	d
__TERRALIB_INTERNAL_INTERSECTOR2_H	kernel/TeIntersector.h	31;"	d
__TERRALIB_INTERNAL_KDTREE_H	kernel/TeKdTree.h	31;"	d
__TERRALIB_INTERNAL_KERNELFUNCTIONS_H	stat/TeKernelFunctions.h	26;"	d
__TERRALIB_INTERNAL_KERNELPARAMS_H	stat/TeKernelParams.h	25;"	d
__TERRALIB_INTERNAL_KMEANSGROUPING_H	stat/TeKMeansGrouping.h	27;"	d
__TERRALIB_INTERNAL_LAYERFUNCTIONS_H	functions/TeLayerFunctions.h	27;"	d
__TERRALIB_INTERNAL_LAYER_H	kernel/TeLayer.h	27;"	d
__TERRALIB_INTERNAL_LEGENDENTRY_H	kernel/TeLegendEntry.h	27;"	d
__TERRALIB_INTERNAL_MATRIX_H	kernel/TeMatrix.h	27;"	d
__TERRALIB_INTERNAL_MEASURE_H	kernel/TeMeasure.h	28;"	d
__TERRALIB_INTERNAL_METAMODELCACHE_H	kernel/TeMetaModelCache.h	27;"	d
__TERRALIB_INTERNAL_MIFPROJECTION_H	functions/TeMIFProjection.h	27;"	d
__TERRALIB_INTERNAL_MRSID_H	drivers/MrSID/TeMrSID.h	27;"	d
__TERRALIB_INTERNAL_MYSQLDEFINES_H	drivers/MySQL/TeMySQLDefines.h	27;"	d
__TERRALIB_INTERNAL_MYSQL_H	drivers/MySQL/TeMySQL.h	27;"	d
__TERRALIB_INTERNAL_NEGHBOURS_H	kernel/TeNeighbours.h	28;"	d
__TERRALIB_INTERNAL_NEW_FACTORY_H	kernel/TeAbstractFactory.h	27;"	d
__TERRALIB_INTERNAL_ORACLEDEFINES_H	drivers/Oracle/TeOracleDefines.h	27;"	d
__TERRALIB_INTERNAL_ORACLEOCI_H	drivers/Oracle/TeOCIOracle.h	28;"	d
__TERRALIB_INTERNAL_ORACLESPATIAL_H	drivers/Oracle/TeOracleSpatial.h	28;"	d
__TERRALIB_INTERNAL_OVERLAYUTILS_H	kernel/TeOverlayUtils.h	36;"	d
__TERRALIB_INTERNAL_OVERLAY_H	kernel/TeOverlay.h	29;"	d
__TERRALIB_INTERNAL_PGINTERFACE_H	drivers/PostgreSQL/TePGInterface.h	30;"	d
__TERRALIB_INTERNAL_PLOTTHEME_H	drivers/qt/TePlotTheme.h	27;"	d
__TERRALIB_INTERNAL_PLUGINMETADATA_H	drivers/spl/PluginMetadata.h	28;"	d
__TERRALIB_INTERNAL_PLUGINSSIGNAL_H	drivers/spl/PluginsSignal.h	28;"	d
__TERRALIB_INTERNAL_POSTGIS_H	drivers/PostgreSQL/TePostGIS.h	27;"	d
__TERRALIB_INTERNAL_POSTGRESQLDEFINES_H	drivers/PostgreSQL/TePostgreSQLDefines.h	27;"	d
__TERRALIB_INTERNAL_POSTGRESQL_CONNECTION_H	drivers/Firebird/TeFirebirdConnection.h	30;"	d
__TERRALIB_INTERNAL_POSTGRESQL_CONNECTION_H	drivers/PostgreSQL/TePostgreSQLConnection.h	31;"	d
__TERRALIB_INTERNAL_POSTGRESQL_H	drivers/PostgreSQL/TePostgreSQL.h	35;"	d
__TERRALIB_INTERNAL_PRECISION_H	kernel/TePrecision.h	27;"	d
__TERRALIB_INTERNAL_PROGRESSBASE_H	kernel/TeProgressBase.h	27;"	d
__TERRALIB_INTERNAL_PROGRESS_H	kernel/TeProgress.h	28;"	d
__TERRALIB_INTERNAL_PROJECTION_H	kernel/TeProjection.h	28;"	d
__TERRALIB_INTERNAL_PROJECT_H	kernel/TeProject.h	27;"	d
__TERRALIB_INTERNAL_QTANIMATHREAD_H	drivers/qt/TeQtAnimaThread.h	2;"	d
__TERRALIB_INTERNAL_QTCHARTITEM_H	drivers/qt/TeQtChartItem.h	23;"	d
__TERRALIB_INTERNAL_QTCHECKLISTITEM_H	drivers/qt/TeQtCheckListItem.h	23;"	d
__TERRALIB_INTERNAL_QTCOLORBAR_H	drivers/qt/TeQtColorBar.h	25;"	d
__TERRALIB_INTERNAL_QTDATABASEITEM_H	drivers/qt/TeQtDatabaseItem.h	23;"	d
__TERRALIB_INTERNAL_QTDATABASESLISTVIEW_H	drivers/qt/TeQtDatabasesListView.h	23;"	d
__TERRALIB_INTERNAL_QTFRAME_H	drivers/qt/TeQtFrame.h	25;"	d
__TERRALIB_INTERNAL_QTGLBOX_H	drivers/qt/TeQtGLWidget.h	25;"	d
__TERRALIB_INTERNAL_QTGRAPH_H	drivers/qt/TeQtGraph.h	23;"	d
__TERRALIB_INTERNAL_QTGRID_H	drivers/qt/TeQtGrid.h	23;"	d
__TERRALIB_INTERNAL_QTLAYERITEM_H	drivers/qt/TeQtLayerItem.h	23;"	d
__TERRALIB_INTERNAL_QTLEGENDITEM_H	drivers/qt/TeQtLegendItem.h	23;"	d
__TERRALIB_INTERNAL_QTPROGRESS_H	drivers/qt/TeQtProgress.h	23;"	d
__TERRALIB_INTERNAL_QTTEXTEDIT_H	drivers/qt/TeQtTextEdit.h	23;"	d
__TERRALIB_INTERNAL_QTTHEMEITEM_H	drivers/qt/TeQtThemeItem.h	23;"	d
__TERRALIB_INTERNAL_QTVIEWITEM_H	drivers/qt/TeQtViewItem.h	23;"	d
__TERRALIB_INTERNAL_QTVIEWSLISTVIEW_H	drivers/qt/TeQtViewsListView.h	23;"	d
__TERRALIB_INTERNAL_QUERIER_DBSTR1_H	kernel/TeQuerierDBStr1.h	30;"	d
__TERRALIB_INTERNAL_QUERIER_DBSTR2_H	kernel/TeQuerierDBStr2.h	29;"	d
__TERRALIB_INTERNAL_QUERIER_DBSTR3_H	kernel/TeQuerierDBStr3.h	28;"	d
__TERRALIB_INTERNAL_QUERIER_DB_H	kernel/TeQuerierDB.h	27;"	d
__TERRALIB_INTERNAL_QUERIER_H	kernel/TeQuerier.h	28;"	d
__TERRALIB_INTERNAL_QUERIER_IMPL_H	kernel/TeQuerierImpl.h	27;"	d
__TERRALIB_INTERNAL_QUERIER_PARAMS_H	kernel/TeQuerierParams.h	28;"	d
__TERRALIB_INTERNAL_QUERIER_SHP_H	drivers/shapelib/TeQuerierSHP.h	29;"	d
__TERRALIB_INTERNAL_RASTERPARAMS_H	kernel/TeRasterParams.h	27;"	d
__TERRALIB_INTERNAL_RASTERREMAP_H	kernel/TeRasterRemap.h	27;"	d
__TERRALIB_INTERNAL_RASTERTRANSFORM_H	kernel/TeRasterTransform.h	27;"	d
__TERRALIB_INTERNAL_RASTER_H	kernel/TeRaster.h	27;"	d
__TERRALIB_INTERNAL_RED_BLACK_TREE_H	kernel/TeRedBlackTree.h	29;"	d
__TERRALIB_INTERNAL_REPRESENTATION_H	kernel/TeRepresentation.h	27;"	d
__TERRALIB_INTERNAL_RTREE_H	kernel/TeRTree.h	31;"	d
__TERRALIB_INTERNAL_SEMIVARMODEL_H	stat/TeSemivarModelFactory.h	28;"	d
__TERRALIB_INTERNAL_SINGLETON_H	kernel/TeSingleton.h	27;"	d
__TERRALIB_INTERNAL_SLICE_H	kernel/TeSlice.h	27;"	d
__TERRALIB_INTERNAL_SPATIALMEASUREFACTORY_H	stat/TeMSVFactory.h	27;"	d
__TERRALIB_INTERNAL_SPATIALOPERATIONS_H	kernel/TeSpatialOperations.h	28;"	d
__TERRALIB_INTERNAL_SPATIALSTATISTICS_H	stat/TeSpatialStatistics.h	27;"	d
__TERRALIB_INTERNAL_SPRFILE_H	functions/TeSPRFile.h	27;"	d
__TERRALIB_INTERNAL_SPRINGDriver_H	functions/TeDriverSPRING.h	27;"	d
__TERRALIB_INTERNAL_SQLITEDEFINES_H	drivers/SQLite/TeSQLiteDefines.h	27;"	d
__TERRALIB_INTERNAL_SQLITE_H	drivers/SQLite/TeSQLite.h	35;"	d
__TERRALIB_INTERNAL_STATDATASTRUCTURES_H	stat/TeStatDataStructures.h	25;"	d
__TERRALIB_INTERNAL_STDIOPROGRESS_H	kernel/TeStdIOProgress.h	27;"	d
__TERRALIB_INTERNAL_STELEMENTSET_H	kernel/TeSTElementSet.h	29;"	d
__TERRALIB_INTERNAL_STEVENT_H	kernel/TeSTEvent.h	29;"	d
__TERRALIB_INTERNAL_STGEODATADRIVER_H	kernel/TeSTGeoDataDriver.h	29;"	d
__TERRALIB_INTERNAL_STGEODATASET_H	kernel/TeSTGeoDataSet.h	29;"	d
__TERRALIB_INTERNAL_STINSTANCESET_H	kernel/TeBaseSTInstanceSet.h	29;"	d
__TERRALIB_INTERNAL_STINSTANCE_H	kernel/TeSTInstance.h	29;"	d
__TERRALIB_INTERNAL_STOFUNCTIONS_H	kernel/TeSTEFunctionsDB.h	27;"	d
__TERRALIB_INTERNAL_STSFILE_H	kernel/TeStdFile.h	27;"	d
__TERRALIB_INTERNAL_TABLE_H	kernel/TeTable.h	28;"	d
__TERRALIB_INTERNAL_TEFUNCTIONCALLTHREADJOB_H	kernel/TeFunctionCallThreadJob.h	26;"	d
__TERRALIB_INTERNAL_TETRHEADDATATYPES_H	kernel/TeThreadDatatypes.h	25;"	d
__TERRALIB_INTERNAL_TETRHEADFUNCTOR_H	kernel/TeThreadFunctor.h	30;"	d
__TERRALIB_INTERNAL_TETRHEADJOBSMANAGER_H	kernel/TeThreadJobsManager.h	26;"	d
__TERRALIB_INTERNAL_TETRHEADJOB_H	kernel/TeThreadJob.h	25;"	d
__TERRALIB_INTERNAL_TETRHEAD_H	kernel/TeThread.h	30;"	d
__TERRALIB_INTERNAL_TEWINDOWSPLATFORMDEFINES_H	kernel/TeWindowsPlatformDefines.h	2;"	d
__TERRALIB_INTERNAL_THEMEAPLICATION_H	drivers/qt/TeAppTheme.h	27;"	d
__TERRALIB_INTERNAL_THEMEFUNCTIONS_H	functions/TeThemeFunctions.h	28;"	d
__TERRALIB_INTERNAL_THEME_H	kernel/TeTheme.h	27;"	d
__TERRALIB_INTERNAL_TIMEINTERVAL_H	kernel/TeTimeInterval.h	28;"	d
__TERRALIB_INTERNAL_TIME_H	kernel/TeTime.h	27;"	d
__TERRALIB_INTERNAL_TIN_H	kernel/TeTin.h	27;"	d
__TERRALIB_INTERNAL_TREEMINIMUM_H	stat/TeTreeMinimum.h	28;"	d
__TERRALIB_INTERNAL_TS_H	kernel/TeTemporalSeries.h	28;"	d
__TERRALIB_INTERNAL_TeMIDMIFDriver_H	functions/TeDriverMIDMIF.h	27;"	d
__TERRALIB_INTERNAL_TePOSTGRESQLUTILS_H	drivers/PostgreSQL/TePGUtils.h	29;"	d
__TERRALIB_INTERNAL_TeSTEFUNCTIONSSHP_H	drivers/shapelib/TeSTEFunctionsSHP.h	27;"	d
__TERRALIB_INTERNAL_UPDATEDBVERSION_H	utils/TeUpdateDBVersion.h	28;"	d
__TERRALIB_INTERNAL_UTILSDEFINES_H	utils/TeUtilsDefines.h	27;"	d
__TERRALIB_INTERNAL_UTILS_H	kernel/TeUtils.h	27;"	d
__TERRALIB_INTERNAL_VECTORREMAP_H	kernel/TeVectorRemap.h	27;"	d
__TERRALIB_INTERNAL_VERSION_H	kernel/TeVersion.h	27;"	d
__TERRALIB_INTERNAL_VIEWNODE_H	kernel/TeViewNode.h	27;"	d
__TERRALIB_INTERNAL_VIEW_H	kernel/TeView.h	27;"	d
__TERRALIB_INTERNAL_VISUAL_H	kernel/TeVisual.h	27;"	d
__TERRALIB_INTERNAL_WAITCURSOR_H	drivers/qt/TeWaitCursor.h	27;"	d
__TERRALIB_INTERNAL_WKBGEOMETRYDECODER_H	utils/TeWKBGeometryDecoder.h	25;"	d
__TERRALIB_INTERNAL_WKTGEOMETRYDECODER_H	utils/TeWKTGeometryDecoder.h	25;"	d
__TERRALIB_MULTIGEOMETRY_H	kernel/TeMultiGeometry.h	28;"	d
__TESFSTHEME_H	kernel/TeSFSTheme.h	2;"	d
__TESHP_INTERNAL_DEFINES_H	drivers/shapelib/TeSHPDefines.h	27;"	d
__TESPL_INTERNAL_DEFINES_H	drivers/spl/TeSPLDefines.h	27;"	d
__WIN32__	drivers/GL/gl.h	50;"	d
__cdecl	drivers/GL/glut.h	80;"	d
__cplusplus	kernel/lexTemporal.cpp	40;"	d	file:
__declspec	drivers/SQLite/sqlite3/sqlite3.c	/^  __declspec(naked) __inline sqlite_uint64 __cdecl sqlite3Hwtime(void){$/;"	f
__glCoreCreateContext	drivers/GL/gl_mangle.h	31;"	d
__glCoreNopDispatch	drivers/GL/gl_mangle.h	32;"	d
__gl_core_h_	drivers/GL/glcore.h	3;"	d
__gl_core_h_	drivers/GL/internal/glcore.h	3;"	d
__gl_h_	drivers/GL/gl.h	27;"	d
__glext_h_	drivers/GL/glext.h	2;"	d
__glu_h__	drivers/GL/glu.h	31;"	d
__glut_h__	drivers/GL/glut.h	2;"	d
__glutf90_h__	drivers/GL/glutf90.h	2;"	d
__glxext_h_	drivers/GL/glxext.h	2;"	d
__unix__	kernel/TeDefines.h	61;"	d
_all_whitespace	drivers/SQLite/sqlite3/shell.c	/^static int _all_whitespace(const char *z){$/;"	f	file:
_atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd _atomic;$/;"	m	struct:ODCIEnv_ind
_atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd _atomic;$/;"	m	struct:ODCIExtTableInfo_ind
_atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd _atomic;$/;"	m	struct:ODCIExtTableQCInfo_ind
_atomic	drivers/Oracle/OCI/include/odci.h	/^  OCIInd _atomic;$/;"	m	struct:ODCITabFuncInfo_ind
_atomic	drivers/Oracle/OCI/include/odci.h	/^  OCIInd _atomic;$/;"	m	struct:ODCITabFuncStats_ind
_atomic	drivers/Oracle/TeOCICursor.h	/^   OCIInd                    _atomic;$/;"	m	struct:SDO_GEOMETRY_ind
_atomic	drivers/Oracle/TeOCICursor.h	/^   OCIInd _atomic;$/;"	m	struct:sdo_point_type_ind
_attrList	kernel/TeSFSTheme.h	/^	TeAttributeList		_attrList;$/;"	m	class:TeSFSTheme
_beginSet	functions/TeRasterIteratorSet.h	/^  std::vector<It> _beginSet;$/;"	m	class:RasterIteratorSet
_borders_length	kernel/TeNeighbours.h	/^		double	_borders_length;$/;"	m	class:TeProxMatrixAttributes
_centroid_distance	kernel/TeNeighbours.h	/^		double	_centroid_distance;$/;"	m	class:TeProxMatrixAttributes
_columnName	kernel/TeSFSTheme.h	/^	std::string			_columnName;$/;"	m	class:TeSFSTheme
_conn	drivers/SQLite/TeSQLite.h	/^		sqlite3*		_conn;$/;"	m	class:TeSQLitePortal
_conn	drivers/SQLite/TeSQLite.h	/^		sqlite3*	_conn;$/;"	m	class:TeSQLite
_contains_semicolon	drivers/SQLite/sqlite3/shell.c	/^static int _contains_semicolon(const char *z, int N){$/;"	f	file:
_currIndex	functions/TeRasterIteratorSet.h	/^	    unsigned               _currIndex;$/;"	m	class:RasterIteratorSet::iterator
_currentRow	drivers/SQLite/TeSQLite.h	/^		int				_currentRow;$/;"	m	class:TeSQLitePortal
_datumMap	kernel/TeDatum.cpp	/^TeDatumMap TeDatumFactory::_datumMap;$/;"	m	class:TeDatumFactory	file:
_datumMap	kernel/TeDatum.h	/^	static TeDatumMap	_datumMap;$/;"	m	class:TeDatumFactory
_dbConns	kernel/TeDBConnectionsPool.h	/^    std::map<std::string, int> _dbConns;$/;"	m	class:TeDBConnectionsPool
_dbs	kernel/TeDBConnectionsPool.h	/^    std::map<int, TeDatabase*> _dbs;$/;"	m	class:TeDBConnectionsPool
_description	kernel/TeGeoFileInfo.h	/^	std::string _description;   \/\/!< The file description. (ex.: ESRI Shapefile)$/;"	m	class:TeGeoFileInfo
_endSet	functions/TeRasterIteratorSet.h	/^  std::vector<It> _endSet;	$/;"	m	class:RasterIteratorSet
_extension	drivers/gdal/TeGDALDecoder.h	/^	std::string _extension;     \/\/!< The extension file associated with the driver. (empty allowed)$/;"	m	class:TeGDALDriverInfo
_extension	kernel/TeGeoFileInfo.h	/^	std::string _extension;     \/\/!< The extension file associated with the driver. (empty allowed)$/;"	m	class:TeGeoFileInfo
_firstFetchResult	drivers/SQLite/TeSQLite.h	/^		bool			_firstFetchResult;$/;"	m	class:TeSQLitePortal
_fts3ht	drivers/SQLite/sqlite3/sqlite3.c	/^  struct _fts3ht {        \/* the hash table *\/$/;"	s	struct:Fts3Hash	file:
_fullName	drivers/gdal/TeGDALDecoder.h	/^	std::string _fullName;      \/\/!< The driver full name. (ex.: Arc\/Info ASCII Grid)$/;"	m	class:TeGDALDriverInfo
_gdalDS	drivers/gdal/TeGDALDecoder.h	/^	GDALDataset* _gdalDS;$/;"	m	class:TeGDALDecoder
_gdalDrivers	drivers/gdal/TeGDALDecoder.cpp	/^std::vector<TeGDALDriverInfo> TeGDALDecoder::_gdalDrivers;$/;"	m	class:TeGDALDecoder	file:
_gdalDrivers	drivers/gdal/TeGDALDecoder.h	/^	static std::vector<TeGDALDriverInfo> _gdalDrivers;$/;"	m	class:TeGDALDecoder
_geoFilesInfo	kernel/TeGDriverFactory.cpp	/^std::vector<TeGeoFileInfo> TeGDriverFactory::_geoFilesInfo;$/;"	m	class:TeGDriverFactory	file:
_geoFilesInfo	kernel/TeGDriverFactory.h	/^	static std::vector<TeGeoFileInfo> _geoFilesInfo; \/\/!< Set of geo files info.$/;"	m	class:TeGDriverFactory
_hasCreateSupport	drivers/gdal/TeGDALDecoder.h	/^	bool _hasCreateSupport;     \/\/!< Indicates if the driver has creation support.$/;"	m	class:TeGDALDriverInfo
_hasCreateSupport	kernel/TeGeoFileInfo.h	/^	bool _hasCreateSupport;     \/\/!< Indicates if the TerarLib internal driver has creation support to this geo file type.$/;"	m	class:TeGeoFileInfo
_ht	drivers/SQLite/sqlite3/sqlite3.c	/^  struct _ht {              \/* the hash table *\/$/;"	s	struct:Hash	file:
_id	drivers/gdal/TeGDALDecoder.h	/^	std::string _id;            \/\/!< The GDAL internal driver identify. (ex.: AAIGrid)$/;"	m	class:TeGDALDriverInfo
_id	kernel/TeGeoFileInfo.h	/^	std::string _id;            \/\/!< The TerraLib internal driver identify. (ex.: SHP, DXF)$/;"	m	class:TeGeoFileInfo
_indexColumns	kernel/TeDatabaseIndex.h	/^	std::vector<std::string> _indexColumns;$/;"	m	class:TeDatabaseIndex
_indexName	kernel/TeDatabaseIndex.h	/^	std::string	_indexName;$/;"	m	class:TeDatabaseIndex
_isPrimaryKey	kernel/TeDatabaseIndex.h	/^	bool _isPrimaryKey;$/;"	m	class:TeDatabaseIndex
_is_command_terminator	drivers/SQLite/sqlite3/shell.c	/^static int _is_command_terminator(const char *zLine){$/;"	f	file:
_is_complete	drivers/SQLite/sqlite3/shell.c	/^static int _is_complete(char *zSql, int nSql){$/;"	f	file:
_lines	drivers/DXF/tedxflayer.h	/^    TeLineSet _lines; \/\/!< line collection.    $/;"	m	class:TeDXFLayer
_localDB	kernel/TeSFSTheme.h	/^	TeDatabase*			_localDB;$/;"	m	class:TeSFSTheme
_mapColumnNames	drivers/SQLite/TeSQLite.h	/^		std::map<std::string, int>		_mapColumnNames;$/;"	m	class:TeSQLitePortal
_mesa_wgl_h_	drivers/GL/mesa_wgl.h	29;"	d
_mesa_wgl_h_	drivers/GL/mesa_wgl.h	32;"	d
_multiLineBuffer	drivers/PostgreSQL/TePostGIS.h	/^		TeLineSet		_multiLineBuffer;$/;"	m	class:TePostGISPortal
_multiPointBuffer	drivers/PostgreSQL/TePostGIS.h	/^		TePointSet		_multiPointBuffer;$/;"	m	class:TePostGISPortal
_multiPolygonBuffer	drivers/PostgreSQL/TePostGIS.h	/^		TePolygonSet	_multiPolygonBuffer;$/;"	m	class:TePostGISPortal
_mutexLock	drivers/PostgreSQL/TePGInterface.cpp	/^TeMutex TePGRecordset::_mutexLock;$/;"	m	class:TePGRecordset	file:
_mutexLock	drivers/PostgreSQL/TePGInterface.h	/^		static TeMutex _mutexLock;$/;"	m	class:TePGRecordset
_neigh	kernel/TeNeighbours.h	/^	neigh_vector _neigh; $/;"	m	class:TeNeighbours
_net_minimum_path	kernel/TeNeighbours.h	/^		double	_net_minimum_path;$/;"	m	class:TeProxMatrixAttributes
_net_objects_distance	kernel/TeNeighbours.h	/^		double	_net_objects_distance;$/;"	m	class:TeProxMatrixAttributes
_order	kernel/TeNeighbours.h	/^		int		_order;$/;"	m	class:TeProxMatrixAttributes
_originalAttrList	kernel/TeSFSTheme.h	/^	TeAttributeList		_originalAttrList;$/;"	m	class:TeSFSTheme
_penStyle	drivers/qt/TeQtCanvas.h	/^	TeLnBasicType	_penStyle;$/;"	m	class:TeQtCanvas
_points	drivers/DXF/tedxflayer.h	/^    TePointSet _points; \/\/!< point collection.    $/;"	m	class:TeDXFLayer
_polygons	drivers/DXF/tedxflayer.h	/^    TePolygonSet _polygons; \/\/!< poligons collection.    $/;"	m	class:TeDXFLayer
_projection	kernel/TeSFSTheme.h	/^	TeProjection*		_projection;$/;"	m	class:TeSFSTheme
_query	drivers/SQLite/TeSQLite.h	/^		std::string			_query;$/;"	m	class:TeSQLitePortal
_recordSet	drivers/SQLite/TeSQLite.h	/^		sqlite3_stmt*	_recordSet;$/;"	m	class:TeSQLitePortal
_remoteDb	kernel/TeSFSTheme.h	/^	TeDatabase*			_remoteDb;$/;"	m	class:TeSFSTheme
_remoteDbId	kernel/TeSFSTheme.h	/^	int					_remoteDbId;$/;"	m	class:TeSFSTheme
_set	functions/TeRasterIteratorSet.h	/^	    RasterIteratorSet<It>* _set;$/;"	m	class:RasterIteratorSet::iterator
_skipFirstFetch	drivers/SQLite/TeSQLite.h	/^		bool			_skipFirstFetch;$/;"	m	class:TeSQLitePortal
_slice	kernel/TeNeighbours.h	/^		int		_slice;$/;"	m	class:TeProxMatrixAttributes
_tableName	kernel/TeSFSTheme.h	/^	std::string			_tableName;$/;"	m	class:TeSFSTheme
_transactionCounter	drivers/SQLite/TeSQLite.h	/^		int			_transactionCounter;		$/;"	m	class:TeSQLite
_vecHintTexts	drivers/spl/PluginMetadata.h	/^	std::vector<std::string> _vecHintTexts;$/;"	m	class:PluginMetadata
_vecPluginNames	drivers/spl/PluginMetadata.h	/^	std::vector<std::string> _vecPluginNames;$/;"	m	class:PluginMetadata
_vecTranslatedNames	drivers/spl/PluginMetadata.h	/^	std::vector<std::string> _vecTranslatedNames;$/;"	m	class:PluginMetadata
_visible	drivers/DXF/tedxflayer.h	/^    bool _visible; \/\/!< Defines if the layer is visible or not.    $/;"	m	class:TeDXFLayer
_weight	kernel/TeNeighbours.h	/^		double	_weight;$/;"	m	class:TeProxMatrixAttributes
a	drivers/SQLite/sqlite3/sqlite3.c	/^  FuncDef *a[23];       \/* Hash table for functions *\/$/;"	m	struct:FuncDefHash	file:
a	drivers/SQLite/sqlite3/sqlite3.c	/^  WhereLevel a[1];               \/* Information about each nest loop in WHERE *\/$/;"	m	struct:WhereInfo	file:
a	drivers/SQLite/sqlite3/sqlite3.c	/^  WhereTerm *a;            \/* Each a[] describes a term of the WHERE cluase *\/$/;"	m	struct:WhereClause	file:
a	drivers/SQLite/sqlite3/sqlite3.c	/^  } *a;                     \/* An array of samples *\/$/;"	m	struct:Stat3Accum	typeref:struct:Stat3Accum::Stat3Sample	file:
a	drivers/SQLite/sqlite3/sqlite3.c	/^  } *a;                  \/* One entry for each expression *\/$/;"	m	struct:ExprList	typeref:struct:ExprList::ExprList_item	file:
a	drivers/SQLite/sqlite3/sqlite3.c	/^  } *a;$/;"	m	struct:IdList	typeref:struct:IdList::IdList_item	file:
a	drivers/SQLite/sqlite3/sqlite3.c	/^  } a[1];             \/* One entry for each identifier on the list *\/$/;"	m	struct:SrcList	typeref:struct:SrcList::SrcList_item	file:
a	drivers/SQLite/sqlite3/sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
aAction	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 aAction[2];          \/* ON DELETE and ON UPDATE actions, respectively *\/$/;"	m	struct:FKey	file:
aAlias	drivers/SQLite/sqlite3/sqlite3.c	/^  int *aAlias;         \/* Register used to hold aliased result *\/$/;"	m	struct:Parse	file:
aAll	drivers/SQLite/sqlite3/sqlite3.c	/^  char *aAll;                    \/* Array containing doclist (or NULL) *\/$/;"	m	struct:Fts3Doclist	file:
aAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 *aAlloc;                     \/* Allocated space *\/$/;"	m	struct:VdbeSorterIter	file:
aBitmap	drivers/SQLite/sqlite3/sqlite3.c	/^    BITVEC_TELEM aBitmap[BITVEC_NELEM];    \/* Bitmap representation *\/$/;"	m	union:Bitvec::__anon54	file:
aBuffer	drivers/SQLite/sqlite3/sqlite3.c	/^  char *aBuffer;                  \/* Buffer to merge doclists in *\/$/;"	m	struct:Fts3MultiSegReader	file:
aChar	drivers/SQLite/sqlite3/sqlite3.c	/^  UChar *aChar;               \/* Copy of input using utf-16 encoding *\/$/;"	m	struct:IcuCursor	file:
aCksum	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 aCksum[2];                  \/* Checksum over all prior fields *\/$/;"	m	struct:WalIndexHdr	file:
aCol	drivers/SQLite/sqlite3/sqlite3.c	/^  Column *aCol;        \/* Information about each column *\/$/;"	m	struct:Table	file:
aCol	drivers/SQLite/sqlite3/sqlite3.c	/^  } *aCol;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_col	file:
aCol	drivers/SQLite/sqlite3/sqlite3.c	/^  } aCol[1];        \/* One entry for each of nCol column s *\/$/;"	m	struct:FKey	typeref:struct:FKey::sColMap	file:
aColCache	drivers/SQLite/sqlite3/sqlite3.c	/^  } aColCache[SQLITE_N_COLCACHE];  \/* One for each column cache entry *\/$/;"	m	struct:Parse	typeref:struct:Parse::yColCache	file:
aColName	drivers/SQLite/sqlite3/sqlite3.c	/^  Mem *aColName;          \/* Column names to return *\/$/;"	m	struct:Vdbe	file:
aColl	drivers/SQLite/sqlite3/sqlite3.c	/^  CollSeq *aColl[1];  \/* Collating sequence for each term of the key *\/$/;"	m	struct:KeyInfo	file:
aCollSeq	drivers/SQLite/sqlite3/sqlite3.c	/^  Hash aCollSeq;                \/* All collating sequences *\/$/;"	m	struct:sqlite3	file:
aColmask	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 aColmask[2];        \/* Masks of old.*, new.* columns accessed *\/$/;"	m	struct:TriggerPrg	file:
aConstraint	drivers/SQLite/sqlite3/sqlite3.c	/^  RtreeConstraint *aConstraint;     \/* Search constraints. *\/$/;"	m	struct:RtreeCursor	file:
aConstraint	drivers/SQLite/sqlite3/sqlite3.c	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint	file:
aConstraint	drivers/SQLite/sqlite3/sqlite3.h	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint
aConstraintUsage	drivers/SQLite/sqlite3/sqlite3.c	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
aConstraintUsage	drivers/SQLite/sqlite3/sqlite3.h	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage
aCoord	drivers/SQLite/sqlite3/sqlite3.c	/^  RtreeCoord aCoord[RTREE_MAX_DIMENSIONS*2];$/;"	m	struct:RtreeCell	file:
aCounter	drivers/SQLite/sqlite3/sqlite3.c	/^  int aCounter[3];        \/* Counters used by sqlite3_stmt_status() *\/$/;"	m	struct:Vdbe	file:
aCtrl	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 *aCtrl;$/;"	m	struct:Mem5Global	file:
aData	drivers/SQLite/sqlite3/sqlite3.c	/^  char *aData;                    \/* Node data *\/$/;"	m	struct:SegmentNode	file:
aData	drivers/SQLite/sqlite3/sqlite3.c	/^  char *aData;                    \/* Pointer to block from malloc() *\/$/;"	m	struct:SegmentWriter	file:
aData	drivers/SQLite/sqlite3/sqlite3.c	/^  char *aData;$/;"	m	struct:PendingList	file:
aData	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 *aData;           \/* Pointer to disk image of the page data *\/$/;"	m	struct:MemPage	file:
aDb	drivers/SQLite/sqlite3/sqlite3.c	/^  Db *aDb;                      \/* All backends *\/$/;"	m	struct:sqlite3	file:
aDbStatic	drivers/SQLite/sqlite3/sqlite3.c	/^  Db aDbStatic[2];              \/* Static space for the 2 default backends *\/$/;"	m	struct:sqlite3	file:
aDigits	drivers/SQLite/sqlite3/sqlite3.c	/^static const char aDigits[] = "0123456789ABCDEF0123456789abcdef";$/;"	v	file:
aDoclist	drivers/SQLite/sqlite3/sqlite3.c	/^  char *aDoclist;                 \/* List of docids for full-text queries *\/$/;"	m	struct:Fts3Cursor	file:
aDoclist	drivers/SQLite/sqlite3/sqlite3.c	/^  char *aDoclist;                 \/* Pointer to doclist buffer *\/$/;"	m	struct:Fts3MultiSegReader	file:
aDoclist	drivers/SQLite/sqlite3/sqlite3.c	/^  char *aDoclist;                 \/* Pointer to doclist of current entry *\/$/;"	m	struct:Fts3SegReader	file:
aEntry	drivers/SQLite/sqlite3/sqlite3.c	/^  struct RowSetEntry aEntry[ROWSET_ENTRY_PER_CHUNK]; \/* Allocated entries *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetEntry	file:
aExt	drivers/SQLite/sqlite3/sqlite3.c	/^  void (**aExt)(void);   \/* Pointers to the extension init functions *\/$/;"	m	struct:sqlite3AutoExtList	file:
aExtension	drivers/SQLite/sqlite3/sqlite3.c	/^  void **aExtension;            \/* Array of shared library handles *\/$/;"	m	struct:sqlite3	file:
aFrameCksum	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 aFrameCksum[2];             \/* Checksum of last frame in log *\/$/;"	m	struct:WalIndexHdr	file:
aFunc	drivers/SQLite/sqlite3/sqlite3.c	/^  FuncDefHash aFunc;            \/* Hash table of connection functions *\/$/;"	m	struct:sqlite3	file:
aFunc	drivers/SQLite/sqlite3/sqlite3.c	/^  } *aFunc;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_func	file:
aHardLimit	drivers/SQLite/sqlite3/sqlite3.c	/^static const int aHardLimit[] = {$/;"	v	file:
aHash	drivers/SQLite/sqlite3/sqlite3.c	/^    u32 aHash[BITVEC_NINT];      \/* Hash table representation *\/$/;"	m	union:Bitvec::__anon54	file:
aHash	drivers/SQLite/sqlite3/sqlite3.c	/^  RtreeNode *aHash[HASHSIZE]; \/* Hash table of in-memory nodes. *\/ $/;"	m	struct:Rtree	file:
aInLoop	drivers/SQLite/sqlite3/sqlite3.c	/^      } *aInLoop;           \/* Information about each nested IN operator *\/$/;"	m	struct:WhereLevel::__anon45::__anon46	typeref:struct:WhereLevel::__anon45::__anon46::InLoop	file:
aIndex	drivers/SQLite/sqlite3/sqlite3.c	/^    ht_slot *aIndex;              \/* i0, i1, i2... such that aPgno[iN] ascend *\/$/;"	m	struct:WalIterator::WalSegment	file:
aIndex	drivers/SQLite/sqlite3/sqlite3.c	/^  } *aIndex;$/;"	m	struct:Fts3Table	typeref:struct:Fts3Table::Fts3Index	file:
aIter	drivers/SQLite/sqlite3/sqlite3.c	/^  VdbeSorterIter *aIter;          \/* Array of iterators to merge *\/$/;"	m	struct:VdbeSorter	file:
aJournalMagic	drivers/SQLite/sqlite3/sqlite3.c	/^static const unsigned char aJournalMagic[] = {$/;"	v	file:
aKey	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 *aKey;                       \/* Pointer to current key *\/$/;"	m	struct:VdbeSorterIter	file:
aLabel	drivers/SQLite/sqlite3/sqlite3.c	/^  int *aLabel;            \/* Space to hold the labels *\/$/;"	m	struct:Vdbe	file:
aLimit	drivers/SQLite/sqlite3/sqlite3.c	/^  int aLimit[SQLITE_N_LIMIT];   \/* Limits *\/$/;"	m	struct:sqlite3	file:
aMI	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 *aMI;$/;"	m	struct:Fts3Expr	file:
aMatchinfo	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 *aMatchinfo;                \/* Information about most recent match *\/$/;"	m	struct:Fts3Cursor	file:
aMatchinfo	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 *aMatchinfo;                \/* Pre-allocated buffer *\/$/;"	m	struct:MatchInfo	file:
aMem	drivers/SQLite/sqlite3/sqlite3.c	/^  Mem *aMem;              \/* Array of memory cells for parent frame *\/$/;"	m	struct:VdbeFrame	file:
aMem	drivers/SQLite/sqlite3/sqlite3.c	/^  Mem *aMem;              \/* The memory locations *\/$/;"	m	struct:Vdbe	file:
aMem	drivers/SQLite/sqlite3/sqlite3.c	/^  Mem *aMem;          \/* Values *\/$/;"	m	struct:UnpackedRecord	file:
aModule	drivers/SQLite/sqlite3/sqlite3.c	/^  Hash aModule;                 \/* populated by sqlite3_create_module() *\/$/;"	m	struct:sqlite3	file:
aNode	drivers/SQLite/sqlite3/sqlite3.c	/^  char *aNode;                    \/* Pointer to node data (or NULL) *\/$/;"	m	struct:Fts3SegReader	file:
aOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  int *aOffset;               \/* Offsets of each character in utf-8 input *\/$/;"	m	struct:IcuCursor	file:
aOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 *aOffset;         \/* Cached offsets to the start of each columns data *\/$/;"	m	struct:VdbeCursor	file:
aOp	drivers/SQLite/sqlite3/sqlite3.c	/^  Op *aOp;                \/* Program instructions for parent frame *\/$/;"	m	struct:VdbeFrame	file:
aOp	drivers/SQLite/sqlite3/sqlite3.c	/^  Op *aOp;                \/* Space to hold the virtual machine's program *\/$/;"	m	struct:Vdbe	file:
aOp	drivers/SQLite/sqlite3/sqlite3.c	/^  VdbeOp *aOp;                  \/* Array of opcodes for sub-program *\/$/;"	m	struct:SubProgram	file:
aOrderBy	drivers/SQLite/sqlite3/sqlite3.c	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby	file:
aOrderBy	drivers/SQLite/sqlite3/sqlite3.h	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby
aOverflow	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno *aOverflow;          \/* Cache of overflow page locations *\/$/;"	m	struct:BtCursor	file:
aOvfl	drivers/SQLite/sqlite3/sqlite3.c	/^  } aOvfl[5];$/;"	m	struct:MemPage	typeref:struct:MemPage::_OvflCell	file:
aPadding	drivers/SQLite/sqlite3/sqlite3.c	/^  char aPadding[32];$/;"	m	struct:unixFile	file:
aParam	drivers/SQLite/sqlite3/sqlite3.c	/^  double *aParam;                 \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
aParam	drivers/SQLite/sqlite3/sqlite3.c	/^  double aParam[1];$/;"	m	struct:RtreeMatchArg	file:
aParam	drivers/SQLite/sqlite3/sqlite3.h	/^  double *aParam;                 \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry
aPgno	drivers/SQLite/sqlite3/sqlite3.c	/^    u32 *aPgno;                   \/* Array of page numbers. *\/$/;"	m	struct:WalIterator::WalSegment	file:
aPhrase	drivers/SQLite/sqlite3/sqlite3.c	/^  SnippetPhrase *aPhrase;         \/* Array of size nPhrase *\/$/;"	m	struct:SnippetIter	file:
aPool	drivers/SQLite/sqlite3/sqlite3.c	/^  Mem3Block *aPool;$/;"	m	struct:Mem3Global	file:
aPrefix	drivers/SQLite/sqlite3/sqlite3.c	/^static const char aPrefix[] = "-x0\\000X0";$/;"	v	file:
aReadMark	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 aReadMark[WAL_NREADER];     \/* Reader marks *\/$/;"	m	struct:WalCkptInfo	file:
aRegion	drivers/SQLite/sqlite3/sqlite3.c	/^  } *aRegion;$/;"	m	struct:winShmNode	typeref:struct:winShmNode::ShmRegion	file:
aRow	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 *aRow;             \/* Data for the current row, if all on one page *\/$/;"	m	struct:VdbeCursor	file:
aSalt	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 aSalt[2];                   \/* Two salt values copied from WAL header *\/$/;"	m	struct:WalIndexHdr	file:
aSample	drivers/SQLite/sqlite3/sqlite3.c	/^  IndexSample *aSample;    \/* Samples of the left-most key *\/$/;"	m	struct:Index	file:
aSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^  PagerSavepoint *aSavepoint; \/* Array of active savepoints *\/$/;"	m	struct:Pager	file:
aSegment	drivers/SQLite/sqlite3/sqlite3.c	/^  } aSegment[1];                  \/* One for every 32KB page in the wal-index *\/$/;"	m	struct:WalIterator	typeref:struct:WalIterator::WalSegment	file:
aSemName	drivers/SQLite/sqlite3/sqlite3.c	/^  char aSemName[MAX_PATHNAME+2];  \/* Name of that semaphore *\/$/;"	m	struct:unixInodeInfo	file:
aSortOrder	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 *aSortOrder;     \/* Sort order for each column.  May be NULL *\/$/;"	m	struct:KeyInfo	file:
aSortOrder	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 *aSortOrder;  \/* Array of size Index.nColumn. True==DESC, False==ASC *\/$/;"	m	struct:Index	file:
aStat	drivers/SQLite/sqlite3/sqlite3.c	/^  } *aStat;$/;"	m	struct:Fts3auxCursor	typeref:struct:Fts3auxCursor::Fts3auxColstats	file:
aStatic	drivers/SQLite/sqlite3/sqlite3.c	/^  WhereTerm aStatic[1];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause	file:
aStatic	drivers/SQLite/sqlite3/sqlite3.c	/^  WhereTerm aStatic[8];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause	file:
aStmt	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *aStmt[27];$/;"	m	struct:Fts3Table	file:
aSyscall	drivers/SQLite/sqlite3/sqlite3.c	/^} aSyscall[] = {$/;"	v	typeref:struct:unix_syscall	file:
aTableLock	drivers/SQLite/sqlite3/sqlite3.c	/^  TableLock *aTableLock; \/* Required table locks for shared-cache mode *\/$/;"	m	struct:Parse	file:
aTempReg	drivers/SQLite/sqlite3/sqlite3.c	/^  int aTempReg[8];     \/* Holding area for temporary registers *\/$/;"	m	struct:Parse	file:
aTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  TermOffset *aTerm;$/;"	m	struct:TermOffsetCtx	file:
aToken	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3PhraseToken aToken[1]; \/* One entry for each token in the phrase *\/$/;"	m	struct:Fts3Phrase	file:
aTree	drivers/SQLite/sqlite3/sqlite3.c	/^  int *aTree;                     \/* Current state of incremental merge *\/$/;"	m	struct:VdbeSorter	file:
aType	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 *aType;           \/* Type values for all entries in the record *\/$/;"	m	struct:VdbeCursor	file:
aVTrans	drivers/SQLite/sqlite3/sqlite3.c	/^  VTable **aVTrans;             \/* Virtual tables with open transactions *\/$/;"	m	struct:sqlite3	file:
aVar	drivers/SQLite/sqlite3/sqlite3.c	/^  Mem *aVar;              \/* Values for the OP_Variable opcode. *\/$/;"	m	struct:Vdbe	file:
aWalData	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 aWalData[WAL_SAVEPOINT_NDATA];        \/* WAL savepoint context *\/$/;"	m	struct:PagerSavepoint	file:
a_	drivers/qt/TeQtColorBar.h	/^	int		a_;$/;"	m	class:TeQtColorBar
a_	kernel/TeProxMatrixWeightsStrategy.h	/^	double						a_;$/;"	m	struct:TeProxMatrixWeightsParams
aaOutput	drivers/SQLite/sqlite3/sqlite3.c	/^  char *aaOutput[16];             \/* Malloc'd output buffers *\/$/;"	m	struct:TermSelect	file:
abortFlag_	image_processing/TePDICorrelationMatching.hpp	/^          volatile bool& abortFlag_;$/;"	m	class:TePDICorrelationMatching::CorrThread
abortFlag_	image_processing/TePDISAMClassifier.hpp	/^          volatile bool& abortFlag_;$/;"	m	class:TePDISAMClassifier::SegThread
abortSegmentationFlagPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          bool volatile* abortSegmentationFlagPtr_;$/;"	m	class:TePDIParallelSegmenter::GroupDataThreadEntryParams
abortSegmentationFlagPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          bool volatile* abortSegmentationFlagPtr_;$/;"	m	class:TePDIParallelSegmenter::SegmenterThreadEntryParams
absFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void absFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
accelBufferMask	drivers/GL/glcore.h	/^    GLuint accelBufferMask;$/;"	m	struct:__GLdrawablePrivateRec
accelBufferMask	drivers/GL/internal/glcore.h	/^    GLuint accelBufferMask;$/;"	m	struct:__GLdrawablePrivateRec
acceptFile	kernel/TeDecoder.cpp	/^bool TeDecoderFactory::acceptFile(const std::string& fileName)$/;"	f	class:TeDecoderFactory
acceptFile	kernel/TeGDriverFactory.cpp	/^bool TeGDriverFactory::acceptFile(const std::string& fileName)$/;"	f	class:TeGDriverFactory
access	drivers/SQLite/sqlite3/shell.c	70;"	d	file:
accessPayload	drivers/SQLite/sqlite3/sqlite3.c	/^static int accessPayload($/;"	f	file:
accumAlphaBits	drivers/GL/glcore.h	/^    GLint accumRedBits, accumGreenBits, accumBlueBits, accumAlphaBits;$/;"	m	struct:__GLcontextModesRec
accumAlphaBits	drivers/GL/glxint.h	/^    GLint accumRedBits, accumGreenBits, accumBlueBits, accumAlphaBits;$/;"	m	struct:__GLXFBConfigRec
accumAlphaBits	drivers/GL/internal/glcore.h	/^    GLint accumRedBits, accumGreenBits, accumBlueBits, accumAlphaBits;$/;"	m	struct:__GLcontextModesRec
accumAlphaSize	drivers/GL/glxint.h	/^    int accumRedSize, accumGreenSize, accumBlueSize, accumAlphaSize;$/;"	m	struct:__GLXvisualConfigRec
accumBlueBits	drivers/GL/glcore.h	/^    GLint accumRedBits, accumGreenBits, accumBlueBits, accumAlphaBits;$/;"	m	struct:__GLcontextModesRec
accumBlueBits	drivers/GL/glxint.h	/^    GLint accumRedBits, accumGreenBits, accumBlueBits, accumAlphaBits;$/;"	m	struct:__GLXFBConfigRec
accumBlueBits	drivers/GL/internal/glcore.h	/^    GLint accumRedBits, accumGreenBits, accumBlueBits, accumAlphaBits;$/;"	m	struct:__GLcontextModesRec
accumBlueSize	drivers/GL/glxint.h	/^    int accumRedSize, accumGreenSize, accumBlueSize, accumAlphaSize;$/;"	m	struct:__GLXvisualConfigRec
accumBuffer	drivers/GL/glcore.h	/^    __GLdrawableBuffer accumBuffer;$/;"	m	struct:__GLdrawablePrivateRec
accumBuffer	drivers/GL/internal/glcore.h	/^    __GLdrawableBuffer accumBuffer;$/;"	m	struct:__GLdrawablePrivateRec
accumGreenBits	drivers/GL/glcore.h	/^    GLint accumRedBits, accumGreenBits, accumBlueBits, accumAlphaBits;$/;"	m	struct:__GLcontextModesRec
accumGreenBits	drivers/GL/glxint.h	/^    GLint accumRedBits, accumGreenBits, accumBlueBits, accumAlphaBits;$/;"	m	struct:__GLXFBConfigRec
accumGreenBits	drivers/GL/internal/glcore.h	/^    GLint accumRedBits, accumGreenBits, accumBlueBits, accumAlphaBits;$/;"	m	struct:__GLcontextModesRec
accumGreenSize	drivers/GL/glxint.h	/^    int accumRedSize, accumGreenSize, accumBlueSize, accumAlphaSize;$/;"	m	struct:__GLXvisualConfigRec
accumRedBits	drivers/GL/glcore.h	/^    GLint accumRedBits, accumGreenBits, accumBlueBits, accumAlphaBits;$/;"	m	struct:__GLcontextModesRec
accumRedBits	drivers/GL/glxint.h	/^    GLint accumRedBits, accumGreenBits, accumBlueBits, accumAlphaBits;$/;"	m	struct:__GLXFBConfigRec
accumRedBits	drivers/GL/internal/glcore.h	/^    GLint accumRedBits, accumGreenBits, accumBlueBits, accumAlphaBits;$/;"	m	struct:__GLcontextModesRec
accumRedSize	drivers/GL/glxint.h	/^    int accumRedSize, accumGreenSize, accumBlueSize, accumAlphaSize;$/;"	m	struct:__GLXvisualConfigRec
accum_alpha_size	drivers/GL/directfbgl.h	/^     int        accum_alpha_size;$/;"	m	struct:__anon175
accum_blue_size	drivers/GL/directfbgl.h	/^     int        accum_blue_size;$/;"	m	struct:__anon175
accum_green_size	drivers/GL/directfbgl.h	/^     int        accum_green_size;$/;"	m	struct:__anon175
accum_red_size	drivers/GL/directfbgl.h	/^     int        accum_red_size;$/;"	m	struct:__anon175
acquireNewSegID	image_processing/TePDIParaSegStrategy.cpp	/^TePDIParaSegSegment::SegIdDataType TePDIParaSegStrategy::acquireNewSegID()$/;"	f	class:TePDIParaSegStrategy
actionName	drivers/SQLite/sqlite3/sqlite3.c	/^static const char *actionName(u8 action){$/;"	f	file:
activeVdbeCnt	drivers/SQLite/sqlite3/sqlite3.c	/^  int activeVdbeCnt;            \/* Number of VDBEs currently executing *\/$/;"	m	struct:sqlite3	file:
active_manager_instances_	image_processing/TePDIPIManagerGlobalSettings.hpp	/^      volatile unsigned long int active_manager_instances_;                   $/;"	m	class:TePDIPIManagerGlobalSettings
actualWidth	drivers/SQLite/sqlite3/shell.c	/^  int actualWidth[100];  \/* Actual width of each column *\/$/;"	m	struct:callback_data	file:
adBool	drivers/Firebird/ibpp/core/ibpp.h	/^		adBool, adInt16, adInt32, adInt64, adFloat, adDouble};$/;"	e	enum:IBPP::ADT
adDate	drivers/Firebird/ibpp/core/ibpp.h	/^	enum ADT {adDate, adTime, adTimestamp, adString,$/;"	e	enum:IBPP::ADT
adDouble	drivers/Firebird/ibpp/core/ibpp.h	/^		adBool, adInt16, adInt32, adInt64, adFloat, adDouble};$/;"	e	enum:IBPP::ADT
adFloat	drivers/Firebird/ibpp/core/ibpp.h	/^		adBool, adInt16, adInt32, adInt64, adFloat, adDouble};$/;"	e	enum:IBPP::ADT
adInt16	drivers/Firebird/ibpp/core/ibpp.h	/^		adBool, adInt16, adInt32, adInt64, adFloat, adDouble};$/;"	e	enum:IBPP::ADT
adInt32	drivers/Firebird/ibpp/core/ibpp.h	/^		adBool, adInt16, adInt32, adInt64, adFloat, adDouble};$/;"	e	enum:IBPP::ADT
adInt64	drivers/Firebird/ibpp/core/ibpp.h	/^		adBool, adInt16, adInt32, adInt64, adFloat, adDouble};$/;"	e	enum:IBPP::ADT
adString	drivers/Firebird/ibpp/core/ibpp.h	/^	enum ADT {adDate, adTime, adTimestamp, adString,$/;"	e	enum:IBPP::ADT
adTime	drivers/Firebird/ibpp/core/ibpp.h	/^	enum ADT {adDate, adTime, adTimestamp, adString,$/;"	e	enum:IBPP::ADT
adTimestamp	drivers/Firebird/ibpp/core/ibpp.h	/^	enum ADT {adDate, adTime, adTimestamp, adString,$/;"	e	enum:IBPP::ADT
adapter	kernel/TeGraph.cpp	/^	char adapter[5];$/;"	m	struct:Opt	file:
add	image_processing/TePDICluster.cpp	/^void TePDICluster::add( vector<double> pixValue )$/;"	f	class:TePDICluster
add	kernel/TeComposite.h	/^	void add ( T& elem )$/;"	f	class:TeSingle
add	kernel/TeComposite.h	/^	void add ( const T& elem )$/;"	f	class:TeComposite
add	kernel/TeGeometry.h	/^	void add ( T& elem )$/;"	f	class:TeGeomSingle
add	kernel/TeGeometry.h	/^	void add ( const T& elem )$/;"	f	class:TeGeomComposite
add	kernel/TeTable.cpp	/^TeTable::add ( const TeTableRow& row )$/;"	f	class:TeTable
add	kernel/TeView.h	/^	virtual void add( TeViewNode* node, const bool& updatePriority = true)$/;"	f	class:TeView
add	kernel/TeViewNode.cpp	/^void TeViewTree::add(TeViewNode* node, const bool& updatePriority)$/;"	f	class:TeViewTree
add	kernel/TeViewNode.h	/^	virtual void add (TeViewNode*, const bool& \/*updatePriority*\/ = true) {}$/;"	f	class:TeViewNode
addAggInfoColumn	drivers/SQLite/sqlite3/sqlite3.c	/^static int addAggInfoColumn(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addAggInfoFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static int addAggInfoFunc(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addArgumentToVtab	drivers/SQLite/sqlite3/sqlite3.c	/^static void addArgumentToVtab(Parse *pParse){$/;"	f	file:
addAttributeTable	kernel/TeLayer.cpp	/^TeLayer::addAttributeTable(TeTable& table)$/;"	f	class:TeLayer
addBranch	kernel/TeRTree.h	/^bool TeRTree<DATATYPE, MAXNODES, MINNODES>::addBranch(TeRTreeBranch* branch, TeRTreeNodeType* node, TeRTreeNodeType** newNode) const$/;"	f	class:TeSAM::TeRTree
addCells	kernel/TeLayer.cpp	/^TeLayer::addCells(TeCellSet& cellSet)$/;"	f	class:TeLayer
addColOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  int addColOffset;    \/* Offset in CREATE TABLE stmt to add a new column *\/$/;"	m	struct:Table	file:
addColorSlot	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::addColorSlot()$/;"	f	class:TeQtColorBar
addColumn	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::addColumn (const string& table, TeAttributeRep &rep)$/;"	f	class:TeFirebird
addColumn	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::addColumn (const string& table, TeAttributeRep &rep)$/;"	f	class:TeMySQL
addColumn	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::addColumn (const string& table, TeAttributeRep &rep)$/;"	f	class:TeOCIOracle
addColumn	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::addColumn(const string& table, TeAttributeRep &rep)$/;"	f	class:TePostgreSQL
addColumn	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::addColumn(const string& table, TeAttributeRep &rep)$/;"	f	class:TeSQLite
addColumn	drivers/ado/TeAdoDB.cpp	/^TeAdo::addColumn (const string& table, TeAttributeRep &rep)$/;"	f	class:TeAdo
addColumn	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::addColumn (const string& table, TeAttributeRep &rep)$/;"	f	class:TeFireBird
addColumn	drivers/ado/TeAdoOracle.cpp	/^TeOracle::addColumn (const string& table, TeAttributeRep &rep)$/;"	f	class:TeOracle
addColumn	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::addColumn (const string& table, TeAttributeRep &rep)$/;"	f	class:TeSqlServer
addCompleteNameColumn	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::addCompleteNameColumn()$/;"	f	class:TeAddressLocator
addElement	drivers/gdal/TeOGRDriver.cpp	/^bool TeOGRDriver::addElement(TeSTInstance* e)$/;"	f	class:TeOGRDriver
addElement	kernel/TeGeoDataDriver.h	/^	virtual bool addElement(TeSTInstance* e) { return false; }$/;"	f	class:TeGeoDataDriver
addFile	kernel/TeTempFilesRemover.cpp	/^void TeTempFilesRemover::addFile( const std::string& fullFileName )$/;"	f	class:TeTempFilesRemover
addFile	kernel/TeTempFilesRemover.cpp	/^void TeTempFilesRemover::addFile( const std::string& fullFileName, $/;"	f	class:TeTempFilesRemover
addGeometry	kernel/TeLayer.cpp	/^bool TeLayer::addGeometry(TeGeomRep repType, const string& tName, const string& desc)$/;"	f	class:TeLayer
addGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::addGeometry(const TeCell& cell)		$/;"	f	class:TeMultiGeometry
addGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::addGeometry(const TeLine2D& line)     $/;"	f	class:TeMultiGeometry
addGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::addGeometry(const TePoint& point)	$/;"	f	class:TeMultiGeometry
addGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::addGeometry(const TePolygon& poly)  $/;"	f	class:TeMultiGeometry
addGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::addGeometry(const TeText& text)		$/;"	f	class:TeMultiGeometry
addGeometry	kernel/TeQuerierDB.cpp	/^addGeometry(TeDatabasePortal* portal, TeGeomRep geomRep, TeMultiGeometry& geometries) $/;"	f
addGeometry	kernel/TeQuerierDB.cpp	/^addGeometry(TeDatabasePortal* portal, TeGeomRep geomRep, TeSTInstance& sto, const int& linkIndex, $/;"	f
addGeometry	kernel/TeQuerierDB.cpp	/^addGeometry(TeDatabasePortal* portal, TeGeomRep geomRep, TeSTInstance& sto, const int& linkIndex, const int& geomIdIndex) $/;"	f
addGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::addGeometry(const TeCell& cell)		$/;"	f	class:TeSTInstance
addGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::addGeometry(const TeLine2D& line)     $/;"	f	class:TeSTInstance
addGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::addGeometry(const TePoint& point)	$/;"	f	class:TeSTInstance
addGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::addGeometry(const TePolygon& poly)  $/;"	f	class:TeSTInstance
addGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::addGeometry(const TeText& text)		$/;"	f	class:TeSTInstance
addGeometrySet	kernel/TeLayer.h	/^	virtual bool addGeometrySet(TeCellSet& cellSet, const string& \/* tName *\/ = "")$/;"	f	class:TeLayer
addGeometrySet	kernel/TeLayer.h	/^	virtual bool addGeometrySet(TeLineSet& lineSet, const string& \/* tName *\/ = "")$/;"	f	class:TeLayer
addGeometrySet	kernel/TeLayer.h	/^	virtual bool addGeometrySet(TePointSet& pointSet, const string& \/* tName *\/ = "")$/;"	f	class:TeLayer
addGeometrySet	kernel/TeLayer.h	/^	virtual bool addGeometrySet(TePolygonSet& polySet, const string& \/* tName *\/ = "")$/;"	f	class:TeLayer
addGeometrySet	kernel/TeLayer.h	/^	virtual bool addGeometrySet(TeTextSet& textSet, const string& tName = "")$/;"	f	class:TeLayer
addIterator	functions/TeRasterIteratorSet.h	/^	void addIterator(It begin, It end)$/;"	f	class:RasterIteratorSet
addLayer	drivers/DXF/tedxfvisitor.cpp	/^void TeDXFVisitor::addLayer(const DL_LayerData & data) $/;"	f	class:TeDXFVisitor
addLine	drivers/DXF/tedxflayer.cpp	/^void TeDXFLayer::addLine(const TeLine2D & line) $/;"	f	class:TeDXFLayer
addLine	drivers/DXF/tedxfvisitor.cpp	/^void TeDXFVisitor::addLine(const DL_LineData & data) $/;"	f	class:TeDXFVisitor
addLines	kernel/TeLayer.cpp	/^TeLayer::addLines (TeLineSet& lineSet)$/;"	f	class:TeLayer
addModuleArgument	drivers/SQLite/sqlite3/sqlite3.c	/^static void addModuleArgument(sqlite3 *db, Table *pTable, char *zArg){$/;"	f	file:
addPoint	drivers/DXF/tedxflayer.cpp	/^void TeDXFLayer::addPoint(const TePoint & pt) $/;"	f	class:TeDXFLayer
addPoint	drivers/DXF/tedxfvisitor.cpp	/^void TeDXFVisitor::addPoint(const DL_PointData & data) $/;"	f	class:TeDXFVisitor
addPoints	kernel/TeLayer.cpp	/^TeLayer::addPoints (TePointSet& pointSet)$/;"	f	class:TeLayer
addPolygon	drivers/DXF/tedxflayer.cpp	/^void TeDXFLayer::addPolygon(const TePolygon & poly) $/;"	f	class:TeDXFLayer
addPolygons	kernel/TeLayer.cpp	/^TeLayer::addPolygons (TePolygonSet& polySet)$/;"	f	class:TeLayer
addPolyline	drivers/DXF/tedxfvisitor.cpp	/^void TeDXFVisitor::addPolyline(const DL_PolylineData & \/*data*\/) $/;"	f	class:TeDXFVisitor
addPosition	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::addPosition(TeCoord2D p)$/;"	f	class:TeQtMultiTextEdit
addPosition	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::addPosition(TeCoord2D p)$/;"	f	class:TeQtTextEdit
addProperty	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::addProperty(TeAttribute& attr)$/;"	f	class:TeBaseSTInstance
addProperty	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::addProperty(TeProperty& prop)$/;"	f	class:TeBaseSTInstance
addProperty	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::addProperty(TeAttribute& attr)$/;"	f	class:TeBaseSTInstanceSet
addProperty	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::addProperty(TeAttributeRep& attr, const string& defaultValue)$/;"	f	class:TeBaseSTInstanceSet
addProperty	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::addProperty(const string& object_id, TeProperty& prop, TimeType& time, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
addProperty	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::addProperty(const string& object_id, TeProperty& prop, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
addProperty	stat/TeStatDataStructures.h	/^	void addProperty(TeProperty propK)$/;"	f	class:TeGridElement
addPropertyValue	kernel/TeBaseSTInstance.h	/^	virtual void addPropertyValue (const string& val)$/;"	f	class:TeBaseSTInstance
addRasterFileGeometry	kernel/TeLayer.cpp	/^TeLayer::addRasterFileGeometry(TeRaster* raster, const string& objectId, const string& desc)$/;"	f	class:TeLayer
addRasterGeometry	kernel/TeLayer.cpp	/^TeLayer::addRasterGeometry(TeRaster* raster, const string& objectId)$/;"	f	class:TeLayer
addRasterGeometry	kernel/TeLayer.cpp	/^TeLayer::addRasterGeometry(TeRasterParams& par, const string& objectId, $/;"	f	class:TeLayer
addReportColumn	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::addReportColumn(TeGeocodeTableMetadata& tableMetadata, pair<string, string>& newColumns)$/;"	f	class:TeAddressLocator
addRing	image_processing/TePDITileIndexer.hpp	/^    void addRing( const unsigned int& ring_index )$/;"	f	class:TePDITileIndexer
addSelection_	drivers/qt/TeQtGLWidget.h	/^	bool addSelection_;$/;"	m	class:TeQtGLWidget
addSwapRect	drivers/GL/glcore.h	/^    GLboolean (*addSwapRect)(__GLdrawablePrivate *glPriv, $/;"	m	struct:__GLdrawablePrivateRec
addSwapRect	drivers/GL/internal/glcore.h	/^    GLboolean (*addSwapRect)(__GLdrawablePrivate *glPriv, $/;"	m	struct:__GLdrawablePrivateRec
addText	kernel/TeLayer.cpp	/^TeLayer::addText (TeTextSet& textSet, const string& tName)$/;"	f	class:TeLayer
addThemeTable	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::addThemeTable(TeTable& table)$/;"	f	class:TeExternalTheme
addThemeTable	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::addThemeTable(string tableName)$/;"	f	class:TeExternalTheme
addThemeTable	kernel/TeTheme.cpp	/^TeTheme::addThemeTable(TeTable& inputTable)$/;"	f	class:TeTheme
addThemeTable	kernel/TeTheme.cpp	/^TeTheme::addThemeTable(string tableName)$/;"	f	class:TeTheme
addToBlockedList	drivers/SQLite/sqlite3/sqlite3.c	/^static void addToBlockedList(sqlite3 *db){$/;"	f	file:
addToSavepointBitvecs	drivers/SQLite/sqlite3/sqlite3.c	/^static int addToSavepointBitvecs(Pager *pPager, Pgno pgno){$/;"	f	file:
addToVTrans	drivers/SQLite/sqlite3/sqlite3.c	/^static void addToVTrans(sqlite3 *db, VTable *pVTab){$/;"	f	file:
addUniqueId	kernel/TeBaseSTInstance.h	/^	virtual void addUniqueId (const string& id) $/;"	f	class:TeBaseSTInstance
addVectRepres	kernel/TeLayer.h	/^	virtual void addVectRepres(TeRepresentation* rep)$/;"	f	class:TeLayer
addVertex	drivers/DXF/tedxfvisitor.cpp	/^void TeDXFVisitor::addVertex(const DL_VertexData & data) $/;"	f	class:TeDXFVisitor
addView	kernel/TeProject.cpp	/^TeProject::addView(int viewId)$/;"	f	class:TeProject
addWhereTerm	drivers/SQLite/sqlite3/sqlite3.c	/^static void addWhereTerm($/;"	f	file:
add_history	drivers/SQLite/sqlite3/shell.c	61;"	d	file:
addrBrk	drivers/SQLite/sqlite3/sqlite3.c	/^  int addrBrk;          \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereLevel	file:
addrCont	drivers/SQLite/sqlite3/sqlite3.c	/^  int addrCont;         \/* Jump here to continue with the next loop cycle *\/$/;"	m	struct:WhereLevel	file:
addrFillSub	drivers/SQLite/sqlite3/sqlite3.c	/^    int addrFillSub;  \/* Address of subroutine to manifest a subquery *\/$/;"	m	struct:SrcList::SrcList_item	file:
addrFirst	drivers/SQLite/sqlite3/sqlite3.c	/^  int addrFirst;        \/* First instruction of interior of the loop *\/$/;"	m	struct:WhereLevel	file:
addrInTop	drivers/SQLite/sqlite3/sqlite3.c	/^        int addrInTop;         \/* Top of the IN loop *\/$/;"	m	struct:WhereLevel::__anon45::__anon46::InLoop	file:
addrNxt	drivers/SQLite/sqlite3/sqlite3.c	/^  int addrNxt;          \/* Jump here to start the next IN combination *\/$/;"	m	struct:WhereLevel	file:
addrOpenEphm	drivers/SQLite/sqlite3/sqlite3.c	/^  int addrOpenEphm[3];   \/* OP_OpenEphem opcodes related to this select *\/$/;"	m	struct:Select	file:
addressGeocode	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::addressGeocode(TeGeocodeTableMetadata& tableMetadata, $/;"	f	class:TeAddressLocator
adjustBox	kernel/TeBox.cpp	/^int adjustBox( TeBox& bb )$/;"	f
adjustColumn	drivers/qt/TeQtBigTable.cpp	/^void TeQtBigTable::adjustColumn(int col)$/;"	f	class:TeQtBigTable
adjustColumns	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::adjustColumns()$/;"	f	class:TeQtGrid
adjustIntervaltoChronon	kernel/TeTimeInterval.cpp	/^TeTimeInterval::adjustIntervaltoChronon ()$/;"	f	class:TeTimeInterval
adjustRect	drivers/qwt/TeQwtPlotZoomer.cpp	/^QwtDoubleRect TeQwtPlotZoomer::adjustRect(const QwtDoubleRect& r)$/;"	f	class:TeQwtPlotZoomer
adjustStats	drivers/SQLite/sqlite3/sqlite3.c	/^static void adjustStats(int iSize, int increment){$/;"	f	file:
adjustToCut	kernel/TeBox.cpp	/^adjustToCut(TeBox& box, double bWidth, double bHeight)$/;"	f
affinity	drivers/SQLite/sqlite3/sqlite3.c	/^  char affinity;         \/* MakeRecord with this affinity for SRT_Set *\/$/;"	m	struct:Select	file:
affinity	drivers/SQLite/sqlite3/sqlite3.c	/^  char affinity;         \/* The affinity of the column or 0 if not a column *\/$/;"	m	struct:Expr	file:
affinity	drivers/SQLite/sqlite3/sqlite3.c	/^  char affinity;   \/* One of the SQLITE_AFF_... values *\/$/;"	m	struct:Column	file:
affinity	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 affinity;      \/* Affinity used when eDest==SRT_Set *\/$/;"	m	struct:SelectDest	file:
afpCheckReservedLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int afpCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
afpClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int afpClose(sqlite3_file *id) {$/;"	f	file:
afpLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int afpLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
afpLockingContext	drivers/SQLite/sqlite3/sqlite3.c	/^struct afpLockingContext {$/;"	s	file:
afpLockingContext	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct afpLockingContext afpLockingContext;$/;"	t	typeref:struct:afpLockingContext	file:
afpSetLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int afpSetLock($/;"	f	file:
afpUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^static int afpUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
afpfsByteRangeLock2FSCTL	drivers/SQLite/sqlite3/sqlite3.c	27061;"	d	file:
afterCopyThemeTo	kernel/TeAbstractTheme.cpp	/^bool TeAbstractTheme::afterCopyThemeTo(TeAbstractTheme* absThemeCopy, TeDatabase* outputDatabase)$/;"	f	class:TeAbstractTheme
afterCopyThemeTo	kernel/TeTheme.cpp	/^bool TeTheme::afterCopyThemeTo(TeAbstractTheme* absThemeCopy, TeDatabase* outputDatabase)$/;"	f	class:TeTheme
agentList	drivers/Oracle/OCI/include/occiAQ.h	/^     OCIAQAgent** agentList; $/;"	m	class:oracle::occi::aq::Listener
aggregate_context	drivers/SQLite/sqlite3/sqlite3.c	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines	file:
aggregate_context	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines
aggregate_count	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
aggregate_count	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
ai	drivers/SQLite/sqlite3/sqlite3.c	/^    int *ai;               \/* Used when p4type is P4_INTARRAY *\/$/;"	m	union:VdbeOp::__anon39	file:
aiColumn	drivers/SQLite/sqlite3/sqlite3.c	/^  int *aiColumn;   \/* Which columns are used by this index.  1st is 0 *\/$/;"	m	struct:Index	file:
aiFreelist	drivers/SQLite/sqlite3/sqlite3.c	/^  int aiFreelist[LOGMAX+1];$/;"	m	struct:Mem5Global	file:
aiHash	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 aiHash[N_HASH];        \/* For sizes MX_SMALL+1 and larger *\/$/;"	m	struct:Mem3Global	file:
aiIdx	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 aiIdx[BTCURSOR_MAX_DEPTH];        \/* Current index in apPage[i] *\/$/;"	m	struct:BtCursor	file:
aiRowEst	drivers/SQLite/sqlite3/sqlite3.c	/^  tRowcnt *aiRowEst; \/* Result of ANALYZE: Est. rows selected by each column *\/$/;"	m	struct:Index	file:
aiSmall	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 aiSmall[MX_SMALL-1];   \/* For sizes 2 through MX_SMALL, inclusive *\/$/;"	m	struct:Mem3Global	file:
alarmArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *alarmArg;$/;"	m	struct:Mem0Global	file:
alarmBusy	drivers/SQLite/sqlite3/sqlite3.c	/^  int alarmBusy;$/;"	m	struct:Mem3Global	file:
alarmCallback	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*alarmCallback)(void*, sqlite3_int64,int);$/;"	m	struct:Mem0Global	file:
alarmThreshold	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 alarmThreshold;$/;"	m	struct:Mem0Global	file:
alcance_	stat/TeSemivarModelFactory.h	/^	double		alcance_;$/;"	m	struct:TeSemivarModelParams
aliasVector	kernel/TeExternalTheme.cpp	/^vector<string>&	TeExternalTheme::aliasVector()$/;"	f	class:TeExternalTheme
aliasVector	kernel/TeTheme.h	/^	virtual vector<string>&	aliasVector() { return aliasVector_; }$/;"	f	class:TeTheme
aliasVector_	kernel/TeTheme.h	/^	vector<string>	aliasVector_;$/;"	m	class:TeTheme
alias_nzttPersonaDesc	drivers/Oracle/OCI/include/nzt.h	/^   text *alias_nzttPersonaDesc;           \/* Alias *\/$/;"	m	struct:nzttPersonaDesc
aliaslen_nzttPersonaDesc	drivers/Oracle/OCI/include/nzt.h	/^   ub4 aliaslen_nzttPersonaDesc;       \/* Length of alias *\/$/;"	m	struct:nzttPersonaDesc
aliasname	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SCHAR       aliasname[32];          $/;"	m	struct:__anon63
aliasname_length	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SHORT       aliasname_length;       $/;"	m	struct:__anon63
alignmentHoriz	kernel/TeGeometry.h	/^	double alignmentHoriz () const$/;"	f	class:TeText
alignmentHoriz	kernel/TeVisual.h	/^	virtual double alignmentHoriz() $/;"	f	class:TeVisual
alignmentHoriz	kernel/TeVisual.h	/^	virtual void alignmentHoriz(double a) $/;"	f	class:TeVisual
alignmentHoriz_	kernel/TeGeometry.h	/^	double alignmentHoriz_;$/;"	m	class:TeText
alignmentHoriz_	kernel/TeVisual.h	/^	double		alignmentHoriz_;	$/;"	m	class:TeBaseVisualParams
alignmentVert	kernel/TeGeometry.h	/^	double alignmentVert () const$/;"	f	class:TeText
alignmentVert	kernel/TeVisual.h	/^	virtual double alignmentVert() $/;"	f	class:TeVisual
alignmentVert	kernel/TeVisual.h	/^	virtual void alignmentVert(double a) $/;"	f	class:TeVisual
alignmentVert_	kernel/TeGeometry.h	/^	double alignmentVert_;$/;"	m	class:TeText
alignmentVert_	kernel/TeVisual.h	/^	double		alignmentVert_;		$/;"	m	class:TeBaseVisualParams
alignment_	drivers/GTM/TeGTM.h	/^	unsigned char dspl_, border_, italic_, underline_, strikeout_, alignment_;$/;"	m	class:TeGTMWaypointsStyles
allLinesPtrsVec_	image_processing/TePDIMatrix.hpp	/^      ElementType** allLinesPtrsVec_;     $/;"	m	class:TePDIMatrix
allSpaces	drivers/SQLite/sqlite3/sqlite3.c	/^static int allSpaces(const char *z, int n){$/;"	f	file:
allTilesPtrsVec_	kernel/TeRasterMemManager.h	/^      TilesPtrsVecT allTilesPtrsVec_;$/;"	m	class:TeRasterMemManager
allocResultRaster	image_processing/TePDIArithmetic.cpp	/^bool TePDIArithmetic::allocResultRaster( unsigned int nLines, unsigned int nCols,$/;"	f	class:TePDIArithmetic
allocSpace	drivers/SQLite/sqlite3/sqlite3.c	/^static void *allocSpace($/;"	f	file:
allocateBtreePage	drivers/SQLite/sqlite3/sqlite3.c	/^static int allocateBtreePage($/;"	f	file:
allocateCursor	drivers/Oracle/TeOCICursor.cpp	/^ bool TeOCICursor::allocateCursor()$/;"	f	class:TeOCICursor
allocateCursor	drivers/SQLite/sqlite3/sqlite3.c	/^static VdbeCursor *allocateCursor($/;"	f	file:
allocateDiskFiles	kernel/TeRasterMemManager.cpp	/^bool TeRasterMemManager::allocateDiskFiles( $/;"	f	class:TeRasterMemManager
allocateDiskLines	image_processing/TePDIMatrix.hpp	/^  bool TePDIMatrix< ElementType >::allocateDiskLines( unsigned int startingLineIdx )$/;"	f	class:TePDIMatrix
allocateIndexInfo	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3_index_info *allocateIndexInfo($/;"	f	file:
allocateMemory	drivers/GL/dri_interface.h	/^    void *(*allocateMemory)(__DRInativeDisplay *dpy, int scrn, GLsizei size,$/;"	m	struct:__DRIscreenRec
allocateMemory	drivers/GL/internal/dri_interface.h	/^    void *(*allocateMemory)(__DRInativeDisplay *dpy, int scrn, GLsizei size,$/;"	m	struct:__DRIscreenRec
allocateMemory	kernel/TeDecoderMemory.cpp	/^TeDecoderMemory::allocateMemory()$/;"	f	class:TeDecoderMemory
allocateObjectOrdinates	drivers/Oracle/TeOCIConnect.cpp	/^bool TeOCIConnection::allocateObjectOrdinates()$/;"	f	class:TeOCIConnection
allocateOrdinatesObject	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::allocateOrdinatesObject(TeLine2D &line, TeOCICursor* cursor_)$/;"	f	class:TeOracleSpatial
allocateOrdinatesObject	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::allocateOrdinatesObject(TePolygon &poly, string& elInfo, TeOCICursor* cursor_)$/;"	f	class:TeOracleSpatial
allocateSpace	drivers/SQLite/sqlite3/sqlite3.c	/^static int allocateSpace(MemPage *pPage, int nByte, int *pIdx){$/;"	f	file:
allocateTempSpace	drivers/SQLite/sqlite3/sqlite3.c	/^static void allocateTempSpace(BtShared *pBt){$/;"	f	file:
allocateWorkMemory	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::allocateWorkMemory()$/;"	f	class:TeDecoderTIFF
allowAgg	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 allowAgg;         \/* Aggregate functions allowed here *\/$/;"	m	struct:NameContext	file:
allowEmptyString	drivers/ado/TeAdoDB.cpp	/^TeAdo::allowEmptyString(const string& tableName, const string& column)$/;"	f	class:TeAdo
allowEmptyString	kernel/TeDatabase.h	/^	virtual bool allowEmptyString(const string& \/* tableName *\/, const string& \/* column *\/) { return false; }$/;"	f	class:TeDatabase
allowedOp	drivers/SQLite/sqlite3/sqlite3.c	/^static int allowedOp(int op){$/;"	f	file:
alphaBits	drivers/GL/glcore.h	/^    GLint redBits, greenBits, blueBits, alphaBits;	\/* bits per comp *\/$/;"	m	struct:__GLcontextModesRec
alphaBits	drivers/GL/glxint.h	/^    GLint redBits, greenBits, blueBits, alphaBits;$/;"	m	struct:__GLXFBConfigRec
alphaBits	drivers/GL/internal/glcore.h	/^    GLint redBits, greenBits, blueBits, alphaBits;	\/* bits per comp *\/$/;"	m	struct:__GLcontextModesRec
alphaMask	drivers/GL/glcore.h	/^    GLuint redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLcontextModesRec
alphaMask	drivers/GL/glxint.h	/^    GLuint redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLXFBConfigRec
alphaMask	drivers/GL/glxint.h	/^    unsigned long redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLXvisualConfigRec
alphaMask	drivers/GL/internal/glcore.h	/^    GLuint redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLcontextModesRec
alphaSize	drivers/GL/glxint.h	/^    int redSize, greenSize, blueSize, alphaSize;$/;"	m	struct:__GLXvisualConfigRec
alpha_size	drivers/GL/directfbgl.h	/^     int        alpha_size;$/;"	m	struct:__anon175
alterTable	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::alterTable(const string& tableName, TeAttributeRep& rep, const string& oldColName)$/;"	f	class:TeFirebird
alterTable	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::alterTable(const string& tableName, TeAttributeRep& rep, const string& oldColName)$/;"	f	class:TeMySQL
alterTable	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::alterTable (const string& table, TeAttributeRep &rep, const string& oldColName)$/;"	f	class:TeOCIOracle
alterTable	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::alterTable(const string& oldTableName, const string& newTableName)$/;"	f	class:TeOCIOracle
alterTable	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::alterTable(const string& oldTableName, const string& newTableName)$/;"	f	class:TePostgreSQL
alterTable	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::alterTable(const string& tableName, TeAttributeRep& rep, const string& oldColName)$/;"	f	class:TePostgreSQL
alterTable	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::alterTable(const string& oldTableName, const string& newTablename)$/;"	f	class:TeSQLite
alterTable	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::alterTable(const string& tableName, TeAttributeRep& rep, const string& oldColName)$/;"	f	class:TeSQLite
alterTable	drivers/ado/TeAdoDB.cpp	/^TeAdo::alterTable (const string& oldTableName, const string& newTableName)$/;"	f	class:TeAdo
alterTable	drivers/ado/TeAdoDB.cpp	/^TeAdo::alterTable (const string& table, TeAttributeRep &rep, const string& oldColName)$/;"	f	class:TeAdo
alterTable	drivers/ado/TeAdoOracle.cpp	/^TeOracle::alterTable (const string& table, TeAttributeRep &rep, const string& oldColName)$/;"	f	class:TeOracle
alterTable	drivers/ado/TeAdoOracle.cpp	/^TeOracle::alterTable(const string& oldTableName, const string& newTablename)$/;"	f	class:TeOracle
alterTable	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::alterTable (const string& table, TeAttributeRep &rep, const string& oldColName)$/;"	f	class:TeSqlServer
alterTable	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::alterTable(const string& oldTableName, const string& newTablename)$/;"	f	class:TeSqlServer
alterTable	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::alterTable (const string& table, TeAttributeRep &rep, const string& oldColName)$/;"	f	class:TeSqlServerSpatial
alterTable	kernel/TeDatabase.cpp	/^TeDatabase::alterTable(const string& oldTableName, const string& newTablename)$/;"	f	class:TeDatabase
alterTable	kernel/TeDatabase.cpp	/^TeDatabase::alterTable(const string& tableName, TeAttributeRep& rep, const string& oldColName)$/;"	f	class:TeDatabase
alterTableInfoInMemory	kernel/TeDatabase.cpp	/^void TeDatabase::alterTableInfoInMemory(const string& updatedTableName, string oldTableName)$/;"	f	class:TeDatabase
altitudes	kernel/TeProfile1.h	/^	vector<double> distances,altitudes;$/;"	m	class:TeProfile1
amRead	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TAM {amWrite, amRead};$/;"	e	enum:IBPP::TAM
amWrite	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TAM {amWrite, amRead};$/;"	e	enum:IBPP::TAM
anOutput	drivers/SQLite/sqlite3/sqlite3.c	/^  int anOutput[16];               \/* Size each output buffer in bytes *\/$/;"	m	struct:TermSelect	file:
anRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int *anRef;       \/* Number of times each page is referenced *\/$/;"	m	struct:IntegrityCk	file:
anStat	drivers/SQLite/sqlite3/sqlite3.c	/^  int anStat[3];          \/* 0: hits.  1: size misses.  2: full misses *\/$/;"	m	struct:Lookaside	file:
analysisInfo	drivers/SQLite/sqlite3/sqlite3.c	/^struct analysisInfo {$/;"	s	file:
analysisInfo	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct analysisInfo analysisInfo;$/;"	t	typeref:struct:analysisInfo	file:
analysisLoader	drivers/SQLite/sqlite3/sqlite3.c	/^static int analysisLoader(void *pData, int argc, char **argv, char **NotUsed){$/;"	f	file:
analyzeAggregate	drivers/SQLite/sqlite3/sqlite3.c	/^static int analyzeAggregate(Walker *pWalker, Expr *pExpr){$/;"	f	file:
analyzeAggregatesInSelect	drivers/SQLite/sqlite3/sqlite3.c	/^static int analyzeAggregatesInSelect(Walker *pWalker, Select *pSelect){$/;"	f	file:
analyzeDatabase	drivers/SQLite/sqlite3/sqlite3.c	/^static void analyzeDatabase(Parse *pParse, int iDb){$/;"	f	file:
analyzeOneTable	drivers/SQLite/sqlite3/sqlite3.c	/^static void analyzeOneTable($/;"	f	file:
analyzeTable	drivers/SQLite/sqlite3/sqlite3.c	/^static void analyzeTable(Parse *pParse, Table *pTab, Index *pOnlyIdx){$/;"	f	file:
anchor	kernel/TeGeometryAlgorithms.cpp	/^	TeCoord2D anchor;$/;"	m	struct:ThetaOrder	file:
anchorClicked	drivers/qt/ui/help.ui.h	/^void Help::anchorClicked(const QString & \/* link *\/, const QString & \/* anchor *\/ )$/;"	f	class:Help
angle	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::angle(double a)$/;"	f	class:TeQtMultiTextEdit
angle	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::angle(double a)$/;"	f	class:TeQtTextEdit
angle	kernel/TeGeometry.h	/^	double angle () const$/;"	f	class:TeText
angle_	kernel/TeGeometry.h	/^	double angle_;	$/;"	m	class:TeText
animation_	drivers/qt/TeQtAnimaThread.h	/^	Animation*	animation_;$/;"	m	class:TeQtAnimaThread
anyData	drivers/Oracle/OCI/include/occiObjects.h	/^   OCIAnyData *anyData;$/;"	m	struct:oracle::occi::AnyDataCtx
anyDataImplPtr	drivers/Oracle/OCI/include/occiObjects.h	/^    Ptr<AnyDataImpl> anyDataImplPtr;              $/;"	m	class:oracle::occi::AnyData
apArg	drivers/SQLite/sqlite3/sqlite3.c	/^  Mem **apArg;            \/* Arguments to currently executing user function *\/$/;"	m	struct:Vdbe	file:
apAux	drivers/SQLite/sqlite3/sqlite3.c	/^  } apAux[1];                   \/* One slot for each function argument *\/$/;"	m	struct:VdbeFunc	typeref:struct:VdbeFunc::AuxData	file:
apCsr	drivers/SQLite/sqlite3/sqlite3.c	/^  VdbeCursor **apCsr;     \/* Array of Vdbe cursors for parent frame *\/$/;"	m	struct:VdbeFrame	file:
apCsr	drivers/SQLite/sqlite3/sqlite3.c	/^  VdbeCursor **apCsr;     \/* One element of this array for each open cursor *\/$/;"	m	struct:Vdbe	file:
apHash	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr1 **apHash;                    \/* Hash table for fast lookup by key *\/$/;"	m	struct:PCache1	file:
apPage	drivers/SQLite/sqlite3/sqlite3.c	/^  MemPage *apPage[BTCURSOR_MAX_DEPTH];  \/* Pages from root to current page *\/$/;"	m	struct:BtCursor	file:
apRegion	drivers/SQLite/sqlite3/sqlite3.c	/^  char **apRegion;           \/* Array of mapped shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
apRegion	drivers/SQLite/sqlite3/sqlite3.c	/^  void **apRegion;           \/* Array of pointers to shared-memory regions *\/$/;"	m	struct:os2ShmNode	file:
apSegment	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3SegReader **apSegment;      \/* Array of Fts3SegReader objects *\/$/;"	m	struct:Fts3MultiSegReader	file:
apSub	drivers/SQLite/sqlite3/sqlite3.c	/^    Bitvec *apSub[BITVEC_NPTR];  \/* Recursive representation *\/$/;"	m	union:Bitvec::__anon54	file:
apSub	drivers/SQLite/sqlite3/sqlite3.c	/^  SubProgram **apSub;        \/* Array of subprograms *\/$/;"	m	struct:VdbeOpIter	file:
apTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^  Trigger *apTrigger[2];  \/* Triggers for aAction[] actions *\/$/;"	m	struct:FKey	file:
apVtabLock	drivers/SQLite/sqlite3/sqlite3.c	/^  Table **apVtabLock;        \/* Pointer to virtual tables needing locking *\/$/;"	m	struct:Parse	file:
apWiData	drivers/SQLite/sqlite3/sqlite3.c	/^  volatile u32 **apWiData;   \/* Pointer to wal-index content in memory *\/$/;"	m	struct:Wal	file:
appTheme_	drivers/qt/TeQtLegendSource.h	/^	TeAppTheme	appTheme_;$/;"	m	class:TeQtLegendSource
appTheme_	drivers/qt/TeQtThemeItem.h	/^	TeAppTheme *appTheme_;$/;"	m	class:TeQtThemeItem
appendOrdinates	drivers/Oracle/TeOCIConnect.cpp	/^bool TeOCIConnection::appendOrdinates(const double& val)$/;"	f	class:TeOCIConnection
appendOrdinates	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::appendOrdinates(const double& val)$/;"	f	class:TeOCICursor
appendSpace	drivers/SQLite/sqlite3/sqlite3.c	/^static void appendSpace(StrAccum *pAccum, int N){$/;"	f	file:
appendText	drivers/SQLite/sqlite3/shell.c	/^static char *appendText(char *zIn, char const *zAppend, char quote){$/;"	f	file:
applicationShellWidgetClass	drivers/GL/vms_x_fix.h	584;"	d
apply	dtm/TeDTMAlgorithm.cpp	/^bool TeDTMAlgorithm::apply()$/;"	f	class:TeDTMAlgorithm
apply	kernel/TeConsoleErrorMessage.cpp	/^	virtual TeMessageReturn apply ( $/;"	f	class:TeConsoleErrorMessage
apply	kernel/TeConsoleErrorMessage.h	/^	virtual TeMessageReturn apply ( $/;"	f	class:TeConsoleErrorMessage
apply	kernel/TeRasterRemap.cpp	/^bool TeRasterRemap::apply( bool showProgress )$/;"	f	class:TeRasterRemap
apply	kernel/TeRasterTransform.h	/^	void apply(double icol, double ilin, double ocol, double olin)$/;"	f	class:TeRasterTransform
apply	stat/TeKernelFunctions.h	/^  bool apply (EventSet1& ev1, $/;"	f	class:TeStatKernelRatio
apply	stat/TeKernelFunctions.h	/^  bool apply(EventSet& events, $/;"	f	class:TeStatKernel
applyAffinity	drivers/SQLite/sqlite3/sqlite3.c	/^static void applyAffinity($/;"	f	file:
applyNumericAffinity	drivers/SQLite/sqlite3/sqlite3.c	/^static void applyNumericAffinity(Mem *pRec){$/;"	f	file:
applyStrategic	kernel/TeRaster.cpp	/^applyStrategic(double& y, double ymin, double xmin, TeStrategicIterator st, TeRaster* raster, const TePolygon& poly)$/;"	f
approx	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 approx;        \/* True if non-integer value was input to the sum *\/$/;"	m	struct:SumCtx	file:
apx	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::apx(double d)$/;"	f	class:TeQtTextEdit
aq	drivers/Oracle/OCI/include/occiAQ.h	/^namespace aq{$/;"	n	namespace:oracle::occi
aq	drivers/Oracle/OCI/include/occiCommon.h	/^namespace aq {$/;"	n	namespace:oracle::occi
arcColor_	drivers/qt/TeQtCanvas.h	/^	QColor		arcColor_;$/;"	m	class:TeQtCanvas
arcPen_	drivers/qt/TeQtCanvas.h	/^	QPen		arcPen_;$/;"	m	class:TeQtCanvas
arcs_map_	kernel/TeNetwork.h	/^	map<string, TeArc>				arcs_map_;	$/;"	m	class:TeNetwork
area	image_processing/TePDIBaatz.hpp	/^  float area; \/* number of pixels in merged segment, neighbour plus original *\/$/;"	m	struct:segment_neighbor
area	image_processing/TePDIBaatz.hpp	/^  float area; \/* number of pixels in segment *\/$/;"	m	struct:segment
area	image_processing/TePDICluster.hpp	/^    long area;$/;"	m	class:TePDICluster
area	kernel/TeSTInstance.cpp	/^TeSTInstance::area(double& a, TeGeomRep geomRep)$/;"	f	class:TeSTInstance
area	stat/TeStatDataStructures.h	/^	bool area(double& a)$/;"	f	class:TeGridElement
areaTriangle	kernel/TeTin.cpp	/^TeTin::areaTriangle (TeTinTriangle& t, float &area) \/\/by Eduilson$/;"	f	class:TeTin
area_	kernel/TeRTree.h	/^			double area_[2];				\/\/!< Auxiliary area of each new page.$/;"	m	struct:TeSAM::TeRTree::TePartitionVars
argtargtresAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId argtargtresAttrId[ARG_TYPARG_TYPRES_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
argtargtresAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType argtargtresAttrType[$/;"	m	class:oracle::occi::MetaData
argvIndex	drivers/SQLite/sqlite3/sqlite3.c	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
argvIndex	drivers/SQLite/sqlite3/sqlite3.h	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
arrangeColumns	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::arrangeColumns(TeAttrTableVector cTableVec)$/;"	f	class:TeQtGrid
arrangeGridToPortalRowVector	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::arrangeGridToPortalRowVector(int col)$/;"	f	class:TeQtGrid
array_bound_lower	drivers/Firebird/ibpp/core/ibase.h	/^	short array_bound_lower;$/;"	m	struct:__anon60
array_bound_upper	drivers/Firebird/ibpp/core/ibase.h	/^	short array_bound_upper;$/;"	m	struct:__anon60
array_desc_bounds	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_ARRAY_BOUND	array_desc_bounds[16];$/;"	m	struct:__anon61
array_desc_dimensions	drivers/Firebird/ibpp/core/ibase.h	/^	short			array_desc_dimensions;$/;"	m	struct:__anon61
array_desc_dtype	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_UCHAR	array_desc_dtype;$/;"	m	struct:__anon61
array_desc_field_name	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR			array_desc_field_name[32];$/;"	m	struct:__anon61
array_desc_flags	drivers/Firebird/ibpp/core/ibase.h	/^	short			array_desc_flags;$/;"	m	struct:__anon61
array_desc_length	drivers/Firebird/ibpp/core/ibase.h	/^	unsigned short	array_desc_length;$/;"	m	struct:__anon61
array_desc_relation_name	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR			array_desc_relation_name[32];$/;"	m	struct:__anon61
array_desc_scale	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR			array_desc_scale;$/;"	m	struct:__anon61
asFactoryParams	kernel/TeDBConnectionsPool.cpp	/^TeDatabaseFactoryParams TeDBConnectionsPool::asFactoryParams(const std::string& dbmsName, $/;"	f	class:TeDBConnectionsPool
asValue	kernel/TeSparseMatrix.h	/^    ValueType asValue() const$/;"	f	class:MatrixElement
aspectTriangle	kernel/TeTin.cpp	/^TeTin::aspectTriangle(TeTinTriangle& t, double &aspect)$/;"	f	class:TeTin
assemblePage	drivers/SQLite/sqlite3/sqlite3.c	/^static void assemblePage($/;"	f	file:
assertCellInfo	drivers/SQLite/sqlite3/sqlite3.c	/^  static void assertCellInfo(BtCursor *pCur){$/;"	f	file:
assertCellInfo	drivers/SQLite/sqlite3/sqlite3.c	51698;"	d	file:
assertMutexHeld	drivers/SQLite/sqlite3/sqlite3.c	113521;"	d	file:
assertParentIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static void assertParentIndex(MemPage *pParent, int iIdx, Pgno iChild){$/;"	f	file:
assertParentIndex	drivers/SQLite/sqlite3/sqlite3.c	52272;"	d	file:
assertTruncateConstraint	drivers/SQLite/sqlite3/sqlite3.c	/^static void assertTruncateConstraint(Pager *pPager){$/;"	f	file:
assertTruncateConstraint	drivers/SQLite/sqlite3/sqlite3.c	41006;"	d	file:
assertTruncateConstraintCb	drivers/SQLite/sqlite3/sqlite3.c	/^static void assertTruncateConstraintCb(PgHdr *pPg){$/;"	f	file:
assert_pager_state	drivers/SQLite/sqlite3/sqlite3.c	/^static int assert_pager_state(Pager *p){$/;"	f	file:
assertsPriorities	kernel/TeViewNode.cpp	/^TeViewTree::assertsPriorities()$/;"	f	class:TeViewTree
associatedVisualId	drivers/GL/glxint.h	/^    int associatedVisualId;$/;"	m	struct:__GLXFBConfigRec
atFirst	drivers/SQLite/sqlite3/sqlite3.c	/^  Bool atFirst;         \/* True if pointing to first entry *\/$/;"	m	struct:VdbeCursor	file:
atLast	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 atLast;                \/* Cursor pointing to the last entry *\/$/;"	m	struct:BtCursor	file:
atoi	drivers/GL/glcore.h	/^    int (CAPI *atoi)(__GLcontext *gc, const char *str);$/;"	m	struct:__GLimportsRec
atoi	drivers/GL/internal/glcore.h	/^    int (CAPI *atoi)(__GLcontext *gc, const char *str);$/;"	m	struct:__GLimportsRec
atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd                   atomic;$/;"	m	struct:ODCIIndexCtx_ind
atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd atomic;$/;"	m	struct:ODCIArgDesc_ind
atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd atomic;$/;"	m	struct:ODCIColInfo_ind
atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd atomic;$/;"	m	struct:ODCICost_ind
atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd atomic;$/;"	m	struct:ODCIFuncInfo_ind
atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd atomic;$/;"	m	struct:ODCIIndexInfo_ind
atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd atomic;$/;"	m	struct:ODCIObject_ind
atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd atomic;$/;"	m	struct:ODCIPartInfo_ind
atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd atomic;$/;"	m	struct:ODCIPredInfo_ind
atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd atomic;$/;"	m	struct:ODCIQueryInfo_ind
atomic	drivers/Oracle/OCI/include/odci.h	/^   OCIInd atomic;$/;"	m	struct:ODCIStatsOptions_ind
attFinalTime	kernel/TeTable.h	/^	string attFinalTime()$/;"	f	class:TeTable
attFinalTime	kernel/TeTable.h	/^	void attFinalTime(const string& t)$/;"	f	class:TeTable
attFinalTime_	kernel/TeTable.h	/^	string		attFinalTime_;		\/\/ final time attribute$/;"	m	class:TeTable
attInitialTime	kernel/TeTable.h	/^	string attInitialTime()$/;"	f	class:TeTable
attInitialTime	kernel/TeTable.h	/^	void attInitialTime(const string& t)$/;"	f	class:TeTable
attInitialTime_	kernel/TeTable.h	/^	string		attInitialTime_;	\/\/ initial time attribute$/;"	m	class:TeTable
attLink_	kernel/TeTable.h	/^	string				attLink_;		\/\/ attribute that links objects to their spatial representation$/;"	m	class:TeTable
attList_	kernel/TeDatabase.h	/^	TeAttributeList	attList_;		\/\/!< the list of attributes associated to this portal$/;"	m	class:TeDatabasePortal
attList_	kernel/TeTable.h	/^	TeAttributeList		attList_;		\/\/ list of attributes$/;"	m	class:TeTable
attTableVector_	kernel/TeTheme.h	/^	TeAttrTableVector	attTableVector_;$/;"	m	class:TeTheme
attTables_	kernel/TeLayer.h	/^	TeAttrTableVector	attTables_; 	\/\/!< Attributes associated to a layer$/;"	m	class:TeLayer
attTimeUnit	kernel/TeTable.h	/^	TeChronon attTimeUnit()$/;"	f	class:TeTable
attTimeUnit	kernel/TeTable.h	/^	void attTimeUnit(TeChronon t)$/;"	f	class:TeTable
attTimeUnit_	kernel/TeTable.h	/^	TeChronon	attTimeUnit_;		\/\/ time granularity$/;"	m	class:TeTable
attUnique_	kernel/TeTable.h	/^	string				attUnique_;		\/\/ primary key $/;"	m	class:TeTable
attach	kernel/TeCounted.h	/^	void attach ()$/;"	f	class:TeCounted
attachBackupObject	drivers/SQLite/sqlite3/sqlite3.c	/^static void attachBackupObject(sqlite3_backup *p){$/;"	f	file:
attachFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void attachFunc($/;"	f	file:
attrColumn_	kernel/TeTemporalSeries.h	/^	string			attrColumn_;	\/\/date column $/;"	m	class:TeTSParams
attrCount	drivers/Oracle/OCI/include/occiControl.h	/^  AttrCount attrCount;$/;"	m	class:oracle::occi::MetaData
attrIdArray	drivers/Oracle/OCI/include/occiControl.h	/^  const AttrId* attrIdArray;$/;"	m	class:oracle::occi::MetaData
attrIndex1_	kernel/TeQuerierDB.h	/^	int				attrIndex1_;$/;"	m	class:TeQuerierDB
attrIndex2_	kernel/TeQuerierDB.h	/^	int				attrIndex2_;$/;"	m	class:TeQuerierDB
attrIndex_	kernel/TeBaseSTInstanceSet.h	/^			int											attrIndex_;	\/\/<! the numerical property index$/;"	m	class:TeBaseSTInstanceSet::propertyIterator
attrLink	kernel/TeTable.cpp	/^TeTable::attrLink(TeAttribute& att)$/;"	f	class:TeTable
attrLinkPosition	kernel/TeTable.cpp	/^TeTable::attrLinkPosition()$/;"	f	class:TeTable
attrList_	kernel/TeBaseSTInstance.h	/^	TeSharedPtr<TeAttributeList> 	attrList_;			$/;"	m	class:TeBaseSTInstance
attrList_	kernel/TeBaseSTInstanceSet.h	/^	TeSharedPtr<TeAttributeList>	attrList_;$/;"	m	class:TeBaseSTInstanceSet
attrList_	kernel/TeGeoDataDriver.h	/^	TeAttributeList attrList_; \/\/!< The list of attributes of the dataSet$/;"	m	class:TeGeoDataDriver
attrList_	kernel/TeQuerierImpl.h	/^	TeSharedPtr<TeAttributeList>	attrList_;		\/\/! list of the attributes of the querier $/;"	m	class:TeQuerierImpl
attrName_	kernel/TeBaseSTInstanceSet.h	/^			string										attrName_;	\/\/<! the numerical property name$/;"	m	class:TeBaseSTInstanceSet::propertyIterator
attrTable_	kernel/TeQuerierDB.h	/^	TeTable						attrTable_;	$/;"	m	class:TeQuerierDB
attrTable_	kernel/TeTemporalSeries.h	/^  	string			attrTable_;	    \/\/temporal table $/;"	m	class:TeTSParams
attrTables	kernel/TeExternalTheme.cpp	/^TeAttrTableVector& TeExternalTheme::attrTables()$/;"	f	class:TeExternalTheme
attrTables	kernel/TeLayer.h	/^	virtual TeAttrTableVector& attrTables () $/;"	f	class:TeLayer
attrTables	kernel/TeLayer.h	/^	virtual const TeAttrTableVector& attrTables () const$/;"	f	class:TeLayer
attrTables	kernel/TeTheme.h	/^	virtual TeAttrTableVector& attrTables()$/;"	f	class:TeTheme
attrTypeArray	drivers/Oracle/OCI/include/occiControl.h	/^  const ociAttrType* attrTypeArray;$/;"	m	class:oracle::occi::MetaData
attrUnique	kernel/TeTable.cpp	/^TeTable::attrUnique(TeAttribute& attr)$/;"	f	class:TeTable
attrUniquePosition	kernel/TeTable.cpp	/^TeTable::attrUniquePosition()$/;"	f	class:TeTable
attrVector_	kernel/TePieBar.h	/^	vector<string>	attrVector_;$/;"	m	class:TePieBar
attr_	kernel/TeAttribute.h	/^	TeAttribute		attr_;		\/\/!< attribute description$/;"	m	struct:TeProperty
attribute	kernel/TeComputeAttributeStrategies.h	/^			string attribute;$/;"	m	class:TeCategoryMajorityStrategy
attribute	kernel/TeComputeAttributeStrategies.h	/^		string attribute;$/;"	m	class:TeAverageWeighByAreaStrategy
attribute	kernel/TeComputeAttributeStrategies.h	/^		string attribute;$/;"	m	class:TeSumWeighByAreaStrategy
attributeList	kernel/TeTable.h	/^	TeAttributeList& attributeList()$/;"	f	class:TeTable
attributeList	kernel/TeTable.h	/^  const TeAttributeList& attributeList() const$/;"	f	class:TeTable
attributeListToCoverageDimensions	kernel/TeCoverageImportUtils.cpp	/^void attributeListToCoverageDimensions(const TeAttributeList& attributes, std::vector<TeCoverageDimension>& dimensions)$/;"	f
attributeNames	kernel/TeTable.cpp	/^TeTable::attributeNames(vector<string>& attrs)$/;"	f	class:TeTable
attributeRest	kernel/TeAbstractTheme.h	/^	virtual string attributeRest() { return generateAttributeRest_; }$/;"	f	class:TeAbstractTheme
attributeRest	kernel/TeAbstractTheme.h	/^	virtual void attributeRest(const string& s) { generateAttributeRest_ = s; }$/;"	f	class:TeAbstractTheme
attributeTableName_	functions/TeAddressLocator.h	/^	string attributeTableName_;		\/\/!< Attribute table name$/;"	m	struct:TeCentroidAddressMetadata
attrs	kernel/TeBlockLoader.h	/^	std::vector<std::string> attrs;$/;"	m	struct:__anon30
attrs_rest	kernel/TeBlockLoader.h	/^    std::string attrs_rest;$/;"	m	struct:__anon30
autoCommit	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 autoCommit;                \/* The auto-commit flag. *\/$/;"	m	struct:sqlite3	file:
autoIncBegin	drivers/SQLite/sqlite3/sqlite3.c	/^static int autoIncBegin($/;"	f	file:
autoIncBegin	drivers/SQLite/sqlite3/sqlite3.c	87518;"	d	file:
autoIncStep	drivers/SQLite/sqlite3/sqlite3.c	/^static void autoIncStep(Parse *pParse, int memId, int regRowid){$/;"	f	file:
autoIncStep	drivers/SQLite/sqlite3/sqlite3.c	87519;"	d	file:
autoIndex	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 autoIndex;    \/* True if is automatically created (ex: by UNIQUE) *\/$/;"	m	struct:Index	file:
autoPromote_	drivers/qt/TeQtGrid.h	/^	bool autoPromote_;$/;"	m	class:TeQtGrid
autoScale	kernel/TeGraph.cpp	/^TeGraphPlot :: autoScale(void)$/;"	f	class:TeGraphPlot
autoVacuum	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 autoVacuum;        \/* True if auto-vacuum is enabled *\/$/;"	m	struct:BtShared	file:
autoVacuumCommit	drivers/SQLite/sqlite3/sqlite3.c	/^static int autoVacuumCommit(BtShared *pBt){$/;"	f	file:
autolockIoFinder	drivers/SQLite/sqlite3/sqlite3.c	/^  *(*const autolockIoFinder)(const char*,unixFile*) = autolockIoFinderImpl;$/;"	v	file:
autolockIoFinderImpl	drivers/SQLite/sqlite3/sqlite3.c	/^static const sqlite3_io_methods *autolockIoFinderImpl($/;"	f	file:
aux	kernel/yyTemporal.cpp	/^string aux;$/;"	v
auxBuffer	drivers/GL/glcore.h	/^    __GLdrawableBuffer *auxBuffer;$/;"	m	struct:__GLdrawablePrivateRec
auxBuffer	drivers/GL/internal/glcore.h	/^    __GLdrawableBuffer *auxBuffer;$/;"	m	struct:__GLdrawablePrivateRec
auxBuffers	drivers/GL/glxint.h	/^    int auxBuffers;$/;"	m	struct:__GLXvisualConfigRec
aux_buffer	drivers/GL/glx.h	/^    unsigned int aux_buffer;	\/* which aux buffer was affected *\/$/;"	m	struct:__anon176
aux_buffers	drivers/GL/directfbgl.h	/^     int        aux_buffers;$/;"	m	struct:__anon175
average	kernel/TeKdTree.h	/^		double average(vector<pair<kdKey, kdDataItem> >& dataSet, const char& discriminator) const$/;"	f	class:TeSAM::TeAdaptativeKdTree
avgEq	drivers/SQLite/sqlite3/sqlite3.c	/^  tRowcnt avgEq;           \/* Average nEq value for key values not in aSample *\/$/;"	m	struct:Index	file:
avgFinalize	drivers/SQLite/sqlite3/sqlite3.c	/^static void avgFinalize(sqlite3_context *context){$/;"	f	file:
avgNearestNeighbor	functions/TeInterpolation.h	/^		double avgNearestNeighbor(const kdKey& key, const unsigned int& numberOfNeighbors)$/;"	f	class:TeInterpolationAlgorithms
avg_color	image_processing/TePDIBaatz.hpp	/^  float avg_color[NUM_BANDS]; \/* average colors of pixels of merged segment, one for each band *\/$/;"	m	struct:segment_neighbor
avg_color	image_processing/TePDIBaatz.hpp	/^  float avg_color[NUM_BANDS]; \/* average colors of pixels, one for each band *\/$/;"	m	struct:segment
avg_color_square	image_processing/TePDIBaatz.hpp	/^  float avg_color_square[NUM_BANDS];$/;"	m	struct:segment
avg_color_square	image_processing/TePDIBaatz.hpp	/^  float avg_color_square[NUM_BANDS];$/;"	m	struct:segment_neighbor
awaitingJobsList_	kernel/TeThreadJobsManager.h	/^      JobsListT awaitingJobsList_;$/;"	m	struct:TeThreadJobsManager::InternalManagerDataStruct
axis_	drivers/GTM/TeGTM.h	/^	double origin_, falseeast_, scale1_, falsenorthing_, axis_, flattening_;$/;"	m	class:TeGTMGridDatum
azCol	drivers/SQLite/sqlite3/sqlite3.c	/^  const char **azCol;                 \/* Array of column names for fts3 table *\/$/;"	m	struct:ParseContext	file:
azColl	drivers/SQLite/sqlite3/sqlite3.c	/^  char **azColl;   \/* Array of collation sequence names for index *\/$/;"	m	struct:Index	file:
azColumn	drivers/SQLite/sqlite3/sqlite3.c	/^  char **azColumn;                \/* column names.  malloced *\/$/;"	m	struct:Fts3Table	file:
azCompileOpt	drivers/SQLite/sqlite3/sqlite3.c	/^static const char * const azCompileOpt[] = {$/;"	v	file:
azFileLock	drivers/SQLite/sqlite3/sqlite3.c	/^static const char *azFileLock(int eFileLock){$/;"	f	file:
azModuleArg	drivers/SQLite/sqlite3/sqlite3.c	/^  char **azModuleArg;  \/* Text of all module args. [0] is module name *\/$/;"	m	struct:Table	file:
azResult	drivers/SQLite/sqlite3/sqlite3.c	/^  char **azResult;   \/* Accumulated output *\/$/;"	m	struct:TabResult	file:
azVar	drivers/SQLite/sqlite3/sqlite3.c	/^  char **azVar;           \/* Name of variables *\/$/;"	m	struct:Vdbe	file:
azVar	drivers/SQLite/sqlite3/sqlite3.c	/^  char **azVar;        \/* Pointers to names of parameters *\/$/;"	m	struct:Parse	file:
b	drivers/SQLite/sqlite3/sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
b1	drivers/Oracle/OCI/include/oratypes.h	/^typedef         sb1  b1;                   $/;"	t
b1	drivers/Oracle/OCI/include/oratypes.h	155;"	d
b2	drivers/Oracle/OCI/include/oratypes.h	/^typedef         sb2      b2;              $/;"	t
b2	drivers/Oracle/OCI/include/oratypes.h	163;"	d
b4	drivers/Oracle/OCI/include/oratypes.h	/^typedef         sb4    b4;                $/;"	t
b4	drivers/Oracle/OCI/include/oratypes.h	171;"	d
b64Cert_nzttB64Cert	drivers/Oracle/OCI/include/nzt.h	/^   ub1 *b64Cert_nzttB64Cert;$/;"	m	struct:nzttB64Cert
b64Certlen_nzttB64Cert	drivers/Oracle/OCI/include/nzt.h	/^   ub4  b64Certlen_nzttB64Cert;$/;"	m	struct:nzttB64Cert
bConstraint	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bConstraint;           \/* True if constraints are supported *\/$/;"	m	struct:VTable	file:
bCoreMutex	drivers/SQLite/sqlite3/sqlite3.c	/^  int bCoreMutex;                   \/* True to enable core mutexing *\/$/;"	m	struct:Sqlite3Config	file:
bDeferred	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bDeferred;              \/* True if this expression is entirely deferred *\/$/;"	m	struct:Fts3Expr	file:
bDesc	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bDesc;                       \/* True to sort in descending order *\/$/;"	m	struct:Fts3Cursor	file:
bDescIdx	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bDescIdx;                    \/* True if doclists are in reverse order *\/$/;"	m	struct:Fts3Table	file:
bDestLocked	drivers/SQLite/sqlite3/sqlite3.c	/^  int bDestLocked;         \/* True once a write-transaction is open on pDest *\/$/;"	m	struct:sqlite3_backup	file:
bEnabled	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bEnabled;            \/* False to disable new lookaside allocations *\/$/;"	m	struct:Lookaside	file:
bEof	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bEof;                   \/* True this expression is at EOF already *\/$/;"	m	struct:Fts3Expr	file:
bExclusive	drivers/SQLite/sqlite3/sqlite3.c	/^  BOOL bExclusive;    \/* Indicates an exclusive lock has been obtained *\/$/;"	m	struct:winceLock	file:
bFirst	drivers/SQLite/sqlite3/sqlite3.c	/^  int bFirst;                     \/* True if token must appear at position 0 *\/$/;"	m	struct:Fts3PhraseToken	file:
bFreeList	drivers/SQLite/sqlite3/sqlite3.c	/^  int bFreeList;                 \/* True if pList should be sqlite3_free()d *\/$/;"	m	struct:Fts3Doclist	file:
bFts4	drivers/SQLite/sqlite3/sqlite3.c	/^  int bFts4;                          \/* True to allow FTS4-only syntax *\/$/;"	m	struct:ParseContext	file:
bFullMutex	drivers/SQLite/sqlite3/sqlite3.c	/^  int bFullMutex;                   \/* True to enable full mutexing *\/$/;"	m	struct:Sqlite3Config	file:
bHasDocsize	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bHasDocsize;                 \/* True if %_docsize table exists *\/$/;"	m	struct:Fts3Table	file:
bHasStat	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bHasStat;                    \/* True if %_stat table exists *\/$/;"	m	struct:Fts3Table	file:
bIncr	drivers/SQLite/sqlite3/sqlite3.c	/^  int bIncr;                 \/* True if doclist is loaded incrementally *\/$/;"	m	struct:Fts3Phrase	file:
bLocaltimeFault	drivers/SQLite/sqlite3/sqlite3.c	/^  int bLocaltimeFault;              \/* True to fail localtime() calls *\/$/;"	m	struct:Sqlite3Config	file:
bLookup	drivers/SQLite/sqlite3/sqlite3.c	/^  int bLookup;                    \/* True if a lookup of a single entry. *\/$/;"	m	struct:Fts3MultiSegReader	file:
bMalloced	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bMalloced;           \/* True if pStart obtained from sqlite3_malloc() *\/$/;"	m	struct:Lookaside	file:
bMemstat	drivers/SQLite/sqlite3/sqlite3.c	/^  int bMemstat;                     \/* True to enable memory status *\/$/;"	m	struct:Sqlite3Config	file:
bOpenUri	drivers/SQLite/sqlite3/sqlite3.c	/^  int bOpenUri;                     \/* True to interpret filenames as URIs *\/$/;"	m	struct:Sqlite3Config	file:
bOwned	drivers/SQLite/sqlite3/sqlite3.c	/^  BOOL bOwned;  \/* Do we own the heap (i.e. destroy it on shutdown)? *\/$/;"	m	struct:winMemData	file:
bPending	drivers/SQLite/sqlite3/sqlite3.c	/^  BOOL bPending;      \/* Indicates a pending lock has been obtained *\/$/;"	m	struct:winceLock	file:
bPersistWal	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bPersistWal;         \/* True to persist WAL files *\/$/;"	m	struct:winFile	file:
bProcessLock	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char bProcessLock;     \/* An exclusive process lock is held *\/$/;"	m	struct:unixInodeInfo	file:
bPurgeable	drivers/SQLite/sqlite3/sqlite3.c	/^  int bPurgeable;                     \/* True if cache is purgeable *\/$/;"	m	struct:PCache1	file:
bPurgeable	drivers/SQLite/sqlite3/sqlite3.c	/^  int bPurgeable;                     \/* True if pages are on backing store *\/$/;"	m	struct:PCache	file:
bReserved	drivers/SQLite/sqlite3/sqlite3.c	/^  BOOL bReserved;     \/* Indicates a reserved lock has been obtained *\/$/;"	m	struct:winceLock	file:
bRestart	drivers/SQLite/sqlite3/sqlite3.c	/^  int bRestart;$/;"	m	struct:Fts3MultiSegReader	file:
bStart	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bStart;                 \/* True if iDocid is valid *\/$/;"	m	struct:Fts3Expr	file:
bUnderPressure	drivers/SQLite/sqlite3/sqlite3.c	/^  int bUnderPressure;            \/* True if low on PAGECACHE memory *\/$/;"	m	struct:PCacheGlobal	file:
bUnordered	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bUnordered;   \/* Use this index for == or IN queries only *\/$/;"	m	struct:Index	file:
b_	drivers/qt/TeQtColorBar.h	/^	int		b_;$/;"	m	class:TeQtColorBar
b_	kernel/TeProxMatrixWeightsStrategy.h	/^	double						b_;$/;"	m	struct:TeProxMatrixWeightsParams
b_box	image_processing/TePDIBaatz.hpp	/^  float b_box[4]; \/* bounding box of the segment of merged segment, neighbour plus original *\/$/;"	m	struct:segment_neighbor
b_box	image_processing/TePDIBaatz.hpp	/^  float b_box[4]; \/* bounding box of the segment, relative to rows and cols *\/$/;"	m	struct:segment
backBuffer	drivers/GL/glcore.h	/^    __GLdrawableBuffer backBuffer;$/;"	m	struct:__GLdrawablePrivateRec
backBuffer	drivers/GL/internal/glcore.h	/^    __GLdrawableBuffer backBuffer;$/;"	m	struct:__GLdrawablePrivateRec
backRaster_	drivers/qt/TeQtCanvas.h	/^	TeRaster*		backRaster_;$/;"	m	class:TeQtCanvas
backcolor_	drivers/GTM/TeGTM.h	/^	long height_, color_, weight_, backcolor_;$/;"	m	class:TeGTMWaypointsStyles
background	kernel/TeGraph.cpp	/^	unsigned char background;   \/* color of outermost window *\/$/;"	m	struct:Txtc	file:
background_	drivers/GTM/TeGTM.h	/^	bool background_;$/;"	m	class:TeGTMWaypointsStyles
backtrace	drivers/SQLite/sqlite3/sqlite3.c	15083;"	d	file:
backtrace_symbols_fd	drivers/SQLite/sqlite3/sqlite3.c	15084;"	d	file:
backupOnePage	drivers/SQLite/sqlite3/sqlite3.c	/^static int backupOnePage(sqlite3_backup *p, Pgno iSrcPg, const u8 *zSrcData){$/;"	f	file:
backupTruncateFile	drivers/SQLite/sqlite3/sqlite3.c	/^static int backupTruncateFile(sqlite3_file *pFile, i64 iSize){$/;"	f	file:
backup_finish	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*backup_finish)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_finish	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*backup_finish)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_init	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_backup *(*backup_init)(sqlite3*,const char*,sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
backup_init	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite3_backup *(*backup_init)(sqlite3*,const char*,sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
backup_pagecount	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*backup_pagecount)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_pagecount	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*backup_pagecount)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_remaining	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*backup_remaining)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_remaining	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*backup_remaining)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_step	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*backup_step)(sqlite3_backup*,int);$/;"	m	struct:sqlite3_api_routines	file:
backup_step	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*backup_step)(sqlite3_backup*,int);$/;"	m	struct:sqlite3_api_routines
backward	drivers/qt/ui/help.ui.h	/^void Help::backward()$/;"	f	class:Help
backward	drivers/qwt/TeQwtPlotZoomer.cpp	/^void TeQwtPlotZoomer::backward()$/;"	f	class:TeQwtPlotZoomer
bail_on_error	drivers/SQLite/sqlite3/shell.c	/^static int bail_on_error = 0;$/;"	v	file:
balance	drivers/SQLite/sqlite3/sqlite3.c	/^static int balance(BtCursor *pCur){$/;"	f	file:
balance_deeper	drivers/SQLite/sqlite3/sqlite3.c	/^static int balance_deeper(MemPage *pRoot, MemPage **ppChild){$/;"	f	file:
balance_nonroot	drivers/SQLite/sqlite3/sqlite3.c	/^static int balance_nonroot($/;"	f	file:
balance_quick	drivers/SQLite/sqlite3/sqlite3.c	/^static int balance_quick(MemPage *pParent, MemPage *pPage, u8 *pSpace){$/;"	f	file:
ballMap_	drivers/qt/TeQtGLWidget.h	/^	map<string, GLuint> ballMap_;$/;"	m	class:TeQtGLWidget
ballVec_	drivers/qt/TeQtGLWidget.h	/^	vector<GLuint> ballVec_;$/;"	m	class:TeQtGLWidget
band	image_processing/TePDIMixModelSpectralBand.hpp	/^		unsigned int	band;$/;"	m	class:TePDIMixModelSpectralBand
band	kernel/TeDecoderVirtualMemory.h	/^	int band() const$/;"	f	class:TeBlockIndex
bandName_	kernel/TeRasterParams.h	/^	vector<string> bandName_;		\/\/!< band name$/;"	m	class:TeRasterParams
band_	kernel/TeDecoderVirtualMemory.h	/^	int band_;$/;"	m	class:TeBlockIndex
band_	kernel/TeRaster.h	/^			int					band_;		\/\/ band restriction$/;"	m	class:TeRaster::iteratorPoly
bands	image_processing/TePDIBaatz.hpp	/^  int bands; \/* number of bands *\/$/;"	m	struct:segmentation_parameters
bands	image_processing/TePDIKMeansClas.hpp	/^  vector<int> bands;$/;"	m	class:TePDIKMeansClas
bands	image_processing/TePDIMixModelSpectralBandList.hpp	/^		vector<TePDIMixModelSpectralBand> bands;$/;"	m	class:TePDIMixModelSpectralBandList
bandsMeansVec_	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^          std::vector< double > bandsMeansVec_;$/;"	m	class:TePDIParaSegRegGrowStrategy::Segment
bandsNmb_	kernel/TeRasterMemManager.h	/^      unsigned int bandsNmb_;$/;"	m	class:TeRasterMemManager
bandsTileSizes_	kernel/TeRasterMemManager.h	/^      std::vector< unsigned int > bandsTileSizes_;$/;"	m	class:TeRasterMemManager
bands_	image_processing/TePDIStatistic.hpp	/^      std::vector< int > bands_;$/;"	m	class:TePDIStatistic
bands_	kernel/TeRasterParams.h	/^	vector<int>	bands_;			\/\/!< bands information $/;"	m	class:TeRasterParams
barMaxHeight	drivers/qt/TeAppTheme.h	/^	double barMaxHeight() { return barMaxHeight_; };$/;"	f	class:TeAppTheme
barMaxHeight	drivers/qt/TeAppTheme.h	/^	void barMaxHeight(double n) { barMaxHeight_ = n; };$/;"	f	class:TeAppTheme
barMaxHeight_	drivers/qt/TeAppTheme.h	/^	double			barMaxHeight_;$/;"	m	class:TeAppTheme
barMinHeight	drivers/qt/TeAppTheme.h	/^	double barMinHeight() { return barMinHeight_; };$/;"	f	class:TeAppTheme
barMinHeight	drivers/qt/TeAppTheme.h	/^	void barMinHeight(double n) { barMinHeight_ = n; };$/;"	f	class:TeAppTheme
barMinHeight_	drivers/qt/TeAppTheme.h	/^	double			barMinHeight_;$/;"	m	class:TeAppTheme
barWidth	drivers/qt/TeAppTheme.h	/^	double barWidth() { return barWidth_; };$/;"	f	class:TeAppTheme
barWidth	drivers/qt/TeAppTheme.h	/^	void barWidth(double n) { barWidth_ = n; };$/;"	f	class:TeAppTheme
barWidth_	drivers/qt/TeAppTheme.h	/^	double			barWidth_;$/;"	m	class:TeAppTheme
base	drivers/GL/dri_interface.h	/^    unsigned char *base;    \/**< Framebuffer base address in the CPU's$/;"	m	struct:__DRIframebufferRec
base	drivers/GL/glcore.h	/^    void *base;$/;"	m	struct:__GLdrawableBufferRec
base	drivers/GL/internal/dri_interface.h	/^    unsigned char *base;    \/**< Framebuffer base address in the CPU's$/;"	m	struct:__DRIframebufferRec
base	drivers/GL/internal/glcore.h	/^    void *base;$/;"	m	struct:__GLdrawableBufferRec
base	drivers/SQLite/sqlite3/sqlite3.c	/^  etByte base;             \/* The base for radix conversion *\/$/;"	m	struct:et_info	file:
base	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_tokenizer base;      \/* Base class *\/$/;"	m	struct:porter_tokenizer	file:
base	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:IcuTokenizer	file:
base	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:simple_tokenizer	file:
base	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:IcuCursor	file:
base	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:porter_tokenizer_cursor	file:
base	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:simple_tokenizer_cursor	file:
base	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Table	file:
base	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxTable	file:
base	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vtab base;$/;"	m	struct:Rtree	file:
base	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Cursor	file:
base	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxCursor	file:
base	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:RtreeCursor	file:
bcolor_	drivers/GTM/TeGTM.h	/^	long gradcolor_, bcolor_, nwptstyles_, usercolor_, nwpts_, ntrcks_, nrtes_, n_maps_, n_tk_, labelcolor_;$/;"	m	class:TeGTMHeader
before	kernel/TeTimeInterval.cpp	/^TeTimeInterval :: before (TeTime& time)$/;"	f	class:TeTimeInterval
beforeCopyThemeTo	kernel/TeAbstractTheme.cpp	/^bool TeAbstractTheme::beforeCopyThemeTo(TeAbstractTheme* absThemeCopy, TeDatabase* outputDatabase)$/;"	f	class:TeAbstractTheme
beforeCopyThemeTo	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::beforeCopyThemeTo(TeAbstractTheme* absThemeCopy, TeDatabase* outputDatabase)$/;"	f	class:TeExternalTheme
beforeCopyThemeTo	kernel/TeFileTheme.cpp	/^bool TeFileTheme::beforeCopyThemeTo(TeAbstractTheme* absThemeCopy, TeDatabase* outputDatabase)$/;"	f	class:TeFileTheme
beforeCopyThemeTo	kernel/TeTheme.cpp	/^bool TeTheme::beforeCopyThemeTo(TeAbstractTheme* absThemeCopy, TeDatabase* outputDatabase)$/;"	f	class:TeTheme
begin	drivers/Firebird/ibpp/core/_ibpp.h	/^	It begin()	{ return mIt; }$/;"	f	struct:ibpp_internals::EventBufferIterator
begin	functions/TeCellAlgorithms.cpp	/^TeBoxRasterIterator::begin()$/;"	f	class:TeBoxRasterIterator
begin	functions/TeRasterIteratorSet.h	/^	iterator begin() { return _beginSet.size() ? iterator(this, 0, _beginSet.at(0)) : iterator(); }$/;"	f	class:RasterIteratorSet
begin	image_processing/TePDIJointHistogram.cpp	/^TePDIJointHistogram::const_iterator TePDIJointHistogram::begin() const$/;"	f	class:TePDIJointHistogram
begin	kernel/TeBaseSTInstanceSet.h	/^	propertyIterator begin(const int& attIndex)$/;"	f	class:TeBaseSTInstanceSet
begin	kernel/TeBaseSTInstanceSet.h	/^	propertyIterator begin(const string& attName)$/;"	f	class:TeBaseSTInstanceSet
begin	kernel/TeBaseSTInstanceSet.h	/^	virtual iterator begin()$/;"	f	class:TeBaseSTInstanceSet
begin	kernel/TeComposite.h	/^	iterator begin(void)$/;"	f	class:TeComposite
begin	kernel/TeCoverage.h	/^    typename TeCoverage<T>::iterator begin($/;"	f	class:TeCoverage
begin	kernel/TeGeometry.h	/^	typename TeComposite<T>::iterator begin()$/;"	f	class:TeGeomComposite
begin	kernel/TeGeometry.h	/^	typename TeComposite<T>::iterator const begin() const$/;"	f	class:TeGeomComposite::TeComposite
begin	kernel/TeNeighbours.h	/^    iterator begin()     { return _neigh.begin();}$/;"	f	class:TeNeighbours
begin	kernel/TeRaster.cpp	/^TeRaster::begin(const TePolygon& poly, TeStrategicIterator st, int band)$/;"	f	class:TeRaster
begin	kernel/TeRaster.cpp	/^TeRaster::iterator TeRaster::begin() $/;"	f	class:TeRaster
begin	kernel/TeRedBlackTree.h	/^			iterator begin(void)$/;"	f	class:TeREDBLACK::TeRBTree
begin	kernel/TeSparseMatrix.h	/^   const_iterator begin() const { return C.begin();}$/;"	f	class:TeSparseMatrix
begin	kernel/TeSparseMatrix.h	/^   iterator begin()             { return C.begin();}$/;"	f	class:TeSparseMatrix
begin	kernel/graph.h	/^		iterator begin()     { return C.begin();}$/;"	f	class:br_stl::Graph
begin	stat/TeStatDataStructures.h	/^	iterator begin()$/;"	f	class:TeKernelGridSupport
begin	stat/TeStatDataStructures.h	/^	iteratorPoly begin(TePolygon poly)$/;"	f	class:TeKernelGridSupport
begin	stat/TeStatDataStructures.h	/^    iterator begin() {  $/;"	f	class:TeSTStatInstanceSet
begin	stat/TeStatDataStructures.h	/^  iterator begin()$/;"	f	class:TePointTInstanceSet
begin	stat/TeStatDataStructures.h	/^  iterator begin(const TeCoord2D& \/* center *\/, const double& \/* radius *\/)$/;"	f	class:TePointTInstanceSet
beginDispatchOverride	drivers/GL/glcore.h	/^    void (*beginDispatchOverride)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
beginDispatchOverride	drivers/GL/internal/glcore.h	/^    void (*beginDispatchOverride)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
beginTimer	drivers/SQLite/sqlite3/shell.c	/^static void beginTimer(void){$/;"	f	file:
beginTransaction	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::beginTransaction()$/;"	f	class:TeFirebird
beginTransaction	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::beginTransaction()$/;"	f	class:TeMySQL
beginTransaction	drivers/Oracle/TeOCIOracle.cpp	/^bool TeOCIOracle::beginTransaction()$/;"	f	class:TeOCIOracle
beginTransaction	drivers/PostgreSQL/TePGInterface.cpp	/^bool TePGConnection::beginTransaction(void)$/;"	f	class:TePGConnection
beginTransaction	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::beginTransaction()$/;"	f	class:TePostgreSQL
beginTransaction	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::beginTransaction()$/;"	f	class:TeSQLite
beginTransaction	drivers/ado/TeAdoDB.cpp	/^bool TeAdo::beginTransaction()$/;"	f	class:TeAdo
beginTransaction	kernel/TeDatabase.cpp	/^TeDatabase::beginTransaction()$/;"	f	class:TeDatabase
bestAutomaticIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static void bestAutomaticIndex($/;"	f	file:
bestAutomaticIndex	drivers/SQLite/sqlite3/sqlite3.c	102683;"	d	file:
bestBtreeIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static void bestBtreeIndex($/;"	f	file:
bestCorCol_	image_processing/TePDICorrelationMatching.hpp	/^          volatile unsigned int& bestCorCol_;    $/;"	m	class:TePDICorrelationMatching::CorrThread
bestCorLine_	image_processing/TePDICorrelationMatching.hpp	/^          volatile unsigned int& bestCorLine_;$/;"	m	class:TePDICorrelationMatching::CorrThread
bestCorValueFound_	image_processing/TePDICorrelationMatching.hpp	/^          volatile bool& bestCorValueFound_;          $/;"	m	class:TePDICorrelationMatching::CorrThread
bestCorValue_	image_processing/TePDICorrelationMatching.hpp	/^          volatile double& bestCorValue_;$/;"	m	class:TePDICorrelationMatching::CorrThread
bestIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static void bestIndex($/;"	f	file:
bestOrClauseIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static void bestOrClauseIndex($/;"	f	file:
bestResolution	drivers/MrSID/TeDecoderMrSID.cpp	/^TeDecoderMrSID::bestResolution(TeBox& bb, int ncols, int nlines, TeProjection* proj)$/;"	f	class:TeDecoderMrSID
bestResolution	drivers/MrSID/TeDecoderMrSID.cpp	/^TeDecoderMrSID::bestResolution(double res)$/;"	f	class:TeDecoderMrSID
bestResolution	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::bestResolution(double res)$/;"	f	class:TeMrSIDReader
bestResolution	kernel/TeDecoder.cpp	/^int TeDecoder::bestResolution(TeBox& \/*bb*\/, int \/*ncols*\/, int \/*nlines*\/, TeProjection* \/*proj*\/)$/;"	f	class:TeDecoder
bestResolution	kernel/TeDecoder.cpp	/^int TeDecoder::bestResolution(double \/*res*\/)$/;"	f	class:TeDecoder
bestResolution	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::bestResolution(TeBox& bb, int ncols, int nlines, TeProjection* proj)$/;"	f	class:TeDecoderDatabase
bestVirtualIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static void bestVirtualIndex($/;"	f	file:
bfileExt	drivers/Oracle/OCI/include/occiData.h	/^    void *bfileExt;$/;"	m	class:oracle::occi::Bfile
bias_index	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::bias_index(TePDITypes::TePDIRasterPtrType original_raster, int original_band, TePDITypes::TePDIRasterPtrType fused_raster, int fused_band, TeSharedPtr<double> bias)$/;"	f	class:TePDIFusionIndexes
bicubicInterpolation	image_processing/TePDIInterpolator.cpp	/^void TePDIInterpolator::bicubicInterpolation( const double& line, $/;"	f	class:TePDIInterpolator
bicubicResampleMatrix	image_processing/TePDIMMIOMatching.cpp	/^bool TePDIMMIOMatching::bicubicResampleMatrix( const TePDIMtxDoubleAdptInt& inputMatrix,$/;"	f	class:TePDIMMIOMatching
bicubic_buffer_	image_processing/TePDIInterpolator.hpp	/^      double bicubic_buffer_[4][4];$/;"	m	class:TePDIInterpolator
bicubic_buffer_col_	image_processing/TePDIInterpolator.hpp	/^      unsigned int bicubic_buffer_col_;$/;"	m	class:TePDIInterpolator
bicubic_buffer_line_	image_processing/TePDIInterpolator.hpp	/^      unsigned int bicubic_buffer_line_;$/;"	m	class:TePDIInterpolator
bicubic_columns_bound_	image_processing/TePDIInterpolator.hpp	/^      double bicubic_columns_bound_;        $/;"	m	class:TePDIInterpolator
bicubic_grid_raster_col_	image_processing/TePDIInterpolator.hpp	/^      unsigned int bicubic_grid_raster_col_;$/;"	m	class:TePDIInterpolator
bicubic_grid_raster_line_	image_processing/TePDIInterpolator.hpp	/^      unsigned int bicubic_grid_raster_line_;$/;"	m	class:TePDIInterpolator
bicubic_h_weights_	image_processing/TePDIInterpolator.hpp	/^      double bicubic_h_weights_[4];$/;"	m	class:TePDIInterpolator
bicubic_h_weights_sum_	image_processing/TePDIInterpolator.hpp	/^      double bicubic_h_weights_sum_;$/;"	m	class:TePDIInterpolator
bicubic_int_line_accum_	image_processing/TePDIInterpolator.hpp	/^      double bicubic_int_line_accum_;$/;"	m	class:TePDIInterpolator
bicubic_int_lines_values_	image_processing/TePDIInterpolator.hpp	/^      double bicubic_int_lines_values_[4];$/;"	m	class:TePDIInterpolator
bicubic_kernel_parameter_	image_processing/TePDIInterpolator.hpp	/^      double bicubic_kernel_parameter_;        $/;"	m	class:TePDIInterpolator
bicubic_lines_bound_	image_processing/TePDIInterpolator.hpp	/^      double bicubic_lines_bound_;      $/;"	m	class:TePDIInterpolator
bicubic_offset_x_	image_processing/TePDIInterpolator.hpp	/^      double bicubic_offset_x_;$/;"	m	class:TePDIInterpolator
bicubic_offset_y_	image_processing/TePDIInterpolator.hpp	/^      double bicubic_offset_y_;$/;"	m	class:TePDIInterpolator
bicubic_v_weights_	image_processing/TePDIInterpolator.hpp	/^      double bicubic_v_weights_[4];$/;"	m	class:TePDIInterpolator
bicubic_v_weights_sum_	image_processing/TePDIInterpolator.hpp	/^      double bicubic_v_weights_sum_;$/;"	m	class:TePDIInterpolator
bigEndCksum	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 bigEndCksum;                 \/* True if checksums in WAL are big-endian *\/$/;"	m	struct:WalIndexHdr	file:
bigMatrix_	image_processing/TePDICorrelationMatching.hpp	/^          ImgMatrixT& bigMatrix_;$/;"	m	class:TePDICorrelationMatching::CorrThread
bilinearInterpolation	image_processing/TePDIInterpolator.cpp	/^void TePDIInterpolator::bilinearInterpolation( const double& line, $/;"	f	class:TePDIInterpolator
bilinear_col_max_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_col_max_;$/;"	m	class:TePDIInterpolator
bilinear_col_min_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_col_min_;$/;"	m	class:TePDIInterpolator
bilinear_diff_col_max_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_diff_col_max_;$/;"	m	class:TePDIInterpolator
bilinear_diff_col_min_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_diff_col_min_;$/;"	m	class:TePDIInterpolator
bilinear_diff_line_max_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_diff_line_max_;$/;"	m	class:TePDIInterpolator
bilinear_diff_line_min_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_diff_line_min_;$/;"	m	class:TePDIInterpolator
bilinear_dist1_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_dist1_;$/;"	m	class:TePDIInterpolator
bilinear_dist2_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_dist2_;$/;"	m	class:TePDIInterpolator
bilinear_dist3_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_dist3_;$/;"	m	class:TePDIInterpolator
bilinear_dist4_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_dist4_;$/;"	m	class:TePDIInterpolator
bilinear_elem1_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_elem1_;$/;"	m	class:TePDIInterpolator
bilinear_elem2_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_elem2_;$/;"	m	class:TePDIInterpolator
bilinear_elem3_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_elem3_;$/;"	m	class:TePDIInterpolator
bilinear_elem4_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_elem4_;$/;"	m	class:TePDIInterpolator
bilinear_line_max_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_line_max_;$/;"	m	class:TePDIInterpolator
bilinear_line_min_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_line_min_;$/;"	m	class:TePDIInterpolator
bilinear_weigh1_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_weigh1_;$/;"	m	class:TePDIInterpolator
bilinear_weigh2_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_weigh2_;$/;"	m	class:TePDIInterpolator
bilinear_weigh3_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_weigh3_;$/;"	m	class:TePDIInterpolator
bilinear_weigh4_	image_processing/TePDIInterpolator.hpp	/^      double bilinear_weigh4_;$/;"	m	class:TePDIInterpolator
binCollFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static int binCollFunc($/;"	f	file:
binaryCompareP5	drivers/SQLite/sqlite3/sqlite3.c	/^static u8 binaryCompareP5(Expr *pExpr1, Expr *pExpr2, int jumpIfNull){$/;"	f	file:
binaryToUnaryIfNull	drivers/SQLite/sqlite3/sqlite3.c	/^  static void binaryToUnaryIfNull(Parse *pParse, Expr *pY, Expr *pA, int op){$/;"	f	file:
bindByPos	drivers/Oracle/TeOCIConnect.cpp	/^bool TeOCIConnection::bindByPos(int pos, void* value, int size, void* indicator, int type)$/;"	f	class:TeOCIConnection
bindContext	drivers/GL/dri_interface.h	/^    GLboolean (*bindContext)(__DRInativeDisplay *dpy, int scrn, __DRIid draw,$/;"	m	struct:__DRIcontextRec
bindContext	drivers/GL/internal/dri_interface.h	/^    GLboolean (*bindContext)(__DRInativeDisplay *dpy, int scrn, __DRIid draw,$/;"	m	struct:__DRIcontextRec
bindOrdinates	drivers/Oracle/TeOCIConnect.cpp	/^bool TeOCIConnection::bindOrdinates()$/;"	f	class:TeOCIConnection
bindOrdinates	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::bindOrdinates()$/;"	f	class:TeOCICursor
bindText	drivers/SQLite/sqlite3/sqlite3.c	/^static int bindText($/;"	f	file:
bind_blob	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_blob	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_double	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines	file:
bind_double	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines
bind_int	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_int	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
bind_int64	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	file:
bind_int64	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines
bind_null	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_null	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
bind_parameter_count	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_count	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
bind_parameter_index	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_index	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines
bind_parameter_name	drivers/SQLite/sqlite3/sqlite3.c	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_name	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
bind_text	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_text	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_text16	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_text16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_value	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
bind_value	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
bind_zeroblob	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_zeroblob	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
bitsPerPixel	drivers/MrSID/TeMrSID.cpp	/^unsigned int TeMrSIDReader::bitsPerPixel() const$/;"	f	class:TeMrSIDReader
blb_got_eof	drivers/Firebird/ibpp/core/ibase.h	/^enum blob_get_result {blb_got_fragment = -1, blb_got_eof = 0, blb_got_full_segment = 1};$/;"	e	enum:blob_get_result
blb_got_fragment	drivers/Firebird/ibpp/core/ibase.h	/^enum blob_get_result {blb_got_fragment = -1, blb_got_eof = 0, blb_got_full_segment = 1};$/;"	e	enum:blob_get_result
blb_got_full_segment	drivers/Firebird/ibpp/core/ibase.h	/^enum blob_get_result {blb_got_fragment = -1, blb_got_eof = 0, blb_got_full_segment = 1};$/;"	e	enum:blob_get_result
blb_seek_from_tail	drivers/Firebird/ibpp/core/ibase.h	/^enum blob_lseek_mode {blb_seek_relative = 1, blb_seek_from_tail = 2};$/;"	e	enum:blob_lseek_mode
blb_seek_relative	drivers/Firebird/ibpp/core/ibase.h	/^enum blob_lseek_mode {blb_seek_relative = 1, blb_seek_from_tail = 2};$/;"	e	enum:blob_lseek_mode
blend	image_processing/TePDIBlender.hpp	/^      inline void blend( const double& line, const double& col, $/;"	f	class:TePDIBlender
blendComponent	drivers/qt/TeQtCanvas.cpp	/^static inline int blendComponent( int back, int fore, int falpha )$/;"	f	file:
blendFunctPtr_	image_processing/TePDIBlender.hpp	/^      BlendFunctPtr blendFunctPtr_;        $/;"	m	class:TePDIBlender
blendMethod_	image_processing/TePDIBlender.hpp	/^      BlendMethod blendMethod_;  $/;"	m	class:TePDIBlender
blobExt	drivers/Oracle/OCI/include/occiData.h	/^    void *blobExt;$/;"	m	class:oracle::occi::Blob
blobReadWrite	drivers/SQLite/sqlite3/sqlite3.c	/^static int blobReadWrite($/;"	f	file:
blobSeekToRow	drivers/SQLite/sqlite3/sqlite3.c	/^static int blobSeekToRow(Incrblob *p, sqlite3_int64 iRow, char **pzErr){$/;"	f	file:
blobValue_	drivers/Oracle/TeOCIConnect.h	/^	unsigned char*	blobValue_;			\/\/!< stores the blob value that will be inserted into database  $/;"	m	class:TeOCIConnection
blob_	drivers/GTM/TeGTM.h	/^	char *name_map_, *comments_, *blob_;\/\/blob -> usado para guardar a imagem em si$/;"	m	class:TeGTMInformationImages
blob_bytes	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	file:
blob_bytes	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines
blob_close	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	file:
blob_close	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines
blob_desc_charset	drivers/Firebird/ibpp/core/ibase.h	/^	short			blob_desc_charset;$/;"	m	struct:__anon62
blob_desc_field_name	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_UCHAR	blob_desc_field_name[32];$/;"	m	struct:__anon62
blob_desc_relation_name	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_UCHAR	blob_desc_relation_name[32];$/;"	m	struct:__anon62
blob_desc_segment_size	drivers/Firebird/ibpp/core/ibase.h	/^	short			blob_desc_segment_size;$/;"	m	struct:__anon62
blob_desc_subtype	drivers/Firebird/ibpp/core/ibase.h	/^	short			blob_desc_subtype;$/;"	m	struct:__anon62
blob_get_result	drivers/Firebird/ibpp/core/ibase.h	/^enum blob_get_result {blb_got_fragment = -1, blb_got_eof = 0, blb_got_full_segment = 1};$/;"	g
blob_get_segment	drivers/Firebird/ibpp/core/ibase.h	/^    short (*blob_get_segment)$/;"	m	struct:blobcallback
blob_handle	drivers/Firebird/ibpp/core/ibase.h	/^    void*		blob_handle;$/;"	m	struct:blobcallback
blob_lseek	drivers/Firebird/ibpp/core/ibase.h	/^    ISC_LONG (*blob_lseek)$/;"	m	struct:blobcallback
blob_lseek_mode	drivers/Firebird/ibpp/core/ibase.h	/^enum blob_lseek_mode {blb_seek_relative = 1, blb_seek_from_tail = 2};$/;"	g
blob_max_segment	drivers/Firebird/ibpp/core/ibase.h	/^    ISC_LONG	blob_max_segment;$/;"	m	struct:blobcallback
blob_number_segments	drivers/Firebird/ibpp/core/ibase.h	/^    ISC_LONG	blob_number_segments;$/;"	m	struct:blobcallback
blob_open	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,$/;"	m	struct:sqlite3_api_routines	file:
blob_open	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,$/;"	m	struct:sqlite3_api_routines
blob_put_segment	drivers/Firebird/ibpp/core/ibase.h	/^    void (*blob_put_segment)$/;"	m	struct:blobcallback
blob_read	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
blob_read	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines
blob_reopen	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*blob_reopen)(sqlite3_blob*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
blob_reopen	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*blob_reopen)(sqlite3_blob*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
blob_total_length	drivers/Firebird/ibpp/core/ibase.h	/^    ISC_LONG	blob_total_length;$/;"	m	struct:blobcallback
blob_write	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
blob_write	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines
blobcallback	drivers/Firebird/ibpp/core/ibase.h	/^typedef struct blobcallback {$/;"	s
blockHeight_	kernel/TeRasterParams.h	/^	int blockHeight_;		\/\/!< tiles height $/;"	m	class:TeRasterParams
blockId_	kernel/TeRasterParams.h	/^	string blockId_;		\/\/!< tiles identification  $/;"	m	class:TeRasterParams
blockIndex	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::blockIndex(int col, int lin, int band)$/;"	f	class:TeDecoderDatabase
blockIndex	kernel/TeDecoderFile.cpp	/^TeBlockIndex TeDecoderFile::blockIndex(int col, int lin, int band)$/;"	f	class:TeDecoderFile
blockIndex	kernel/TeDecoderVirtualMemory.cpp	/^TeBlockIndex TeDecoderVirtualMemory::blockIndex(int col, int lin, int band)$/;"	f	class:TeDecoderVirtualMemory
blockIndexPos	kernel/TeDecoderDatabase.cpp	/^void TeDecoderDatabase::blockIndexPos( const TeBlockIndex& index, int& ulCol, int& ulLin, int& band)$/;"	f	class:TeDecoderDatabase
blockIndexPos	kernel/TeDecoderFile.cpp	/^void TeDecoderFile::blockIndexPos(const TeBlockIndex& index, int& ulCol, int& ulLin, int& band)$/;"	f	class:TeDecoderFile
blockIndexPos	kernel/TeDecoderVirtualMemory.cpp	/^void TeDecoderVirtualMemory::blockIndexPos( const TeBlockIndex& index, int& ulCol, int& ulLin, int& band)$/;"	f	class:TeDecoderVirtualMemory
blockMergingEnabled_	image_processing/TePDIParaSegStrategyParams.hpp	/^      bool blockMergingEnabled_;$/;"	m	class:TePDIParaSegStrategyParams
blockPortal_	kernel/TeDecoderDatabase.h	/^	TeDatabasePortal	*blockPortal_;$/;"	m	class:TeDecoderDatabase
blockWidth_	kernel/TeRasterParams.h	/^	int blockWidth_;		\/\/!< tiles width $/;"	m	class:TeRasterParams
blr_abort	drivers/Firebird/ibpp/core/ibase.h	1447;"	d
blr_add	drivers/Firebird/ibpp/core/ibase.h	1358;"	d
blr_agg_average	drivers/Firebird/ibpp/core/ibase.h	1410;"	d
blr_agg_average_distinct	drivers/Firebird/ibpp/core/ibase.h	1419;"	d
blr_agg_count	drivers/Firebird/ibpp/core/ibase.h	1406;"	d
blr_agg_count2	drivers/Firebird/ibpp/core/ibase.h	1416;"	d
blr_agg_count_distinct	drivers/Firebird/ibpp/core/ibase.h	1417;"	d
blr_agg_max	drivers/Firebird/ibpp/core/ibase.h	1407;"	d
blr_agg_min	drivers/Firebird/ibpp/core/ibase.h	1408;"	d
blr_agg_total	drivers/Firebird/ibpp/core/ibase.h	1409;"	d
blr_agg_total_distinct	drivers/Firebird/ibpp/core/ibase.h	1418;"	d
blr_aggregate	drivers/Firebird/ibpp/core/ibase.h	1403;"	d
blr_and	drivers/Firebird/ibpp/core/ibase.h	1384;"	d
blr_ansi_all	drivers/Firebird/ibpp/core/ibase.h	1475;"	d
blr_ansi_any	drivers/Firebird/ibpp/core/ibase.h	1469;"	d
blr_ansi_like	drivers/Firebird/ibpp/core/ibase.h	1429;"	d
blr_any	drivers/Firebird/ibpp/core/ibase.h	1386;"	d
blr_ascending	drivers/Firebird/ibpp/core/ibase.h	1396;"	d
blr_assignment	drivers/Firebird/ibpp/core/ibase.h	1327;"	d
blr_average	drivers/Firebird/ibpp/core/ibase.h	1352;"	d
blr_backward	drivers/Firebird/ibpp/core/ibase.h	1435;"	d
blr_begin	drivers/Firebird/ibpp/core/ibase.h	1328;"	d
blr_between	drivers/Firebird/ibpp/core/ibase.h	1382;"	d
blr_blob	drivers/Firebird/ibpp/core/ibase.h	1298;"	d
blr_blob2	drivers/Firebird/ibpp/core/ibase.h	1305;"	d
blr_blob_id	drivers/Firebird/ibpp/core/ibase.h	1301;"	d
blr_block	drivers/Firebird/ibpp/core/ibase.h	1448;"	d
blr_bof_forward	drivers/Firebird/ibpp/core/ibase.h	1436;"	d
blr_boolean	drivers/Firebird/ibpp/core/ibase.h	1395;"	d
blr_cast	drivers/Firebird/ibpp/core/ibase.h	1451;"	d
blr_concatenate	drivers/Firebird/ibpp/core/ibase.h	1363;"	d
blr_containing	drivers/Firebird/ibpp/core/ibase.h	1379;"	d
blr_continue	drivers/Firebird/ibpp/core/ibase.h	1433;"	d
blr_count	drivers/Firebird/ibpp/core/ibase.h	1353;"	d
blr_cstring	drivers/Firebird/ibpp/core/ibase.h	1299;"	d
blr_cstring2	drivers/Firebird/ibpp/core/ibase.h	1300;"	d
blr_current_date	drivers/Firebird/ibpp/core/ibase.h	1488;"	d
blr_current_role	drivers/Firebird/ibpp/core/ibase.h	1492;"	d
blr_current_time	drivers/Firebird/ibpp/core/ibase.h	1490;"	d
blr_current_time2	drivers/Firebird/ibpp/core/ibase.h	1523;"	d
blr_current_timestamp	drivers/Firebird/ibpp/core/ibase.h	1489;"	d
blr_current_timestamp2	drivers/Firebird/ibpp/core/ibase.h	1522;"	d
blr_cursor_close	drivers/Firebird/ibpp/core/ibase.h	1531;"	d
blr_cursor_fetch	drivers/Firebird/ibpp/core/ibase.h	1532;"	d
blr_cursor_open	drivers/Firebird/ibpp/core/ibase.h	1530;"	d
blr_cursor_stmt	drivers/Firebird/ibpp/core/ibase.h	1521;"	d
blr_d_float	drivers/Firebird/ibpp/core/ibase.h	1294;"	d
blr_date	drivers/Firebird/ibpp/core/ibase.h	1307;"	d
blr_dbkey	drivers/Firebird/ibpp/core/ibase.h	1347;"	d
blr_dcl_cursor	drivers/Firebird/ibpp/core/ibase.h	1520;"	d
blr_dcl_variable	drivers/Firebird/ibpp/core/ibase.h	1329;"	d
blr_default_code	drivers/Firebird/ibpp/core/ibase.h	1318;"	d
blr_descending	drivers/Firebird/ibpp/core/ibase.h	1397;"	d
blr_divide	drivers/Firebird/ibpp/core/ibase.h	1361;"	d
blr_double	drivers/Firebird/ibpp/core/ibase.h	1293;"	d
blr_end	drivers/Firebird/ibpp/core/ibase.h	1325;"	d
blr_end_savepoint	drivers/Firebird/ibpp/core/ibase.h	1454;"	d
blr_eoc	drivers/Firebird/ibpp/core/ibase.h	1324;"	d
blr_eof_backward	drivers/Firebird/ibpp/core/ibase.h	1437;"	d
blr_eql	drivers/Firebird/ibpp/core/ibase.h	1373;"	d
blr_equiv	drivers/Firebird/ibpp/core/ibase.h	1372;"	d
blr_erase	drivers/Firebird/ibpp/core/ibase.h	1331;"	d
blr_error_handler	drivers/Firebird/ibpp/core/ibase.h	1449;"	d
blr_exception	drivers/Firebird/ibpp/core/ibase.h	1316;"	d
blr_exception_msg	drivers/Firebird/ibpp/core/ibase.h	1320;"	d
blr_exec_into	drivers/Firebird/ibpp/core/ibase.h	1518;"	d
blr_exec_pid	drivers/Firebird/ibpp/core/ibase.h	1445;"	d
blr_exec_proc	drivers/Firebird/ibpp/core/ibase.h	1441;"	d
blr_exec_sql	drivers/Firebird/ibpp/core/ibase.h	1495;"	d
blr_exists	drivers/Firebird/ibpp/core/ibase.h	1470;"	d
blr_extract	drivers/Firebird/ibpp/core/ibase.h	1477;"	d
blr_extract_day	drivers/Firebird/ibpp/core/ibase.h	1481;"	d
blr_extract_hour	drivers/Firebird/ibpp/core/ibase.h	1482;"	d
blr_extract_minute	drivers/Firebird/ibpp/core/ibase.h	1483;"	d
blr_extract_month	drivers/Firebird/ibpp/core/ibase.h	1480;"	d
blr_extract_second	drivers/Firebird/ibpp/core/ibase.h	1484;"	d
blr_extract_weekday	drivers/Firebird/ibpp/core/ibase.h	1485;"	d
blr_extract_year	drivers/Firebird/ibpp/core/ibase.h	1479;"	d
blr_extract_yearday	drivers/Firebird/ibpp/core/ibase.h	1486;"	d
blr_fetch	drivers/Firebird/ibpp/core/ibase.h	1332;"	d
blr_fid	drivers/Firebird/ibpp/core/ibase.h	1349;"	d
blr_field	drivers/Firebird/ibpp/core/ibase.h	1348;"	d
blr_first	drivers/Firebird/ibpp/core/ibase.h	1392;"	d
blr_float	drivers/Firebird/ibpp/core/ibase.h	1292;"	d
blr_for	drivers/Firebird/ibpp/core/ibase.h	1333;"	d
blr_forward	drivers/Firebird/ibpp/core/ibase.h	1434;"	d
blr_from	drivers/Firebird/ibpp/core/ibase.h	1366;"	d
blr_full	drivers/Firebird/ibpp/core/ibase.h	1312;"	d
blr_function	drivers/Firebird/ibpp/core/ibase.h	1421;"	d
blr_gds_code	drivers/Firebird/ibpp/core/ibase.h	1314;"	d
blr_gen_id	drivers/Firebird/ibpp/core/ibase.h	1422;"	d
blr_geq	drivers/Firebird/ibpp/core/ibase.h	1376;"	d
blr_group_by	drivers/Firebird/ibpp/core/ibase.h	1402;"	d
blr_gtr	drivers/Firebird/ibpp/core/ibase.h	1375;"	d
blr_handler	drivers/Firebird/ibpp/core/ibase.h	1337;"	d
blr_if	drivers/Firebird/ibpp/core/ibase.h	1334;"	d
blr_index	drivers/Firebird/ibpp/core/ibase.h	1428;"	d
blr_indices	drivers/Firebird/ibpp/core/ibase.h	1461;"	d
blr_inner	drivers/Firebird/ibpp/core/ibase.h	1309;"	d
blr_int64	drivers/Firebird/ibpp/core/ibase.h	1304;"	d
blr_internal_info	drivers/Firebird/ibpp/core/ibase.h	1496;"	d
blr_join	drivers/Firebird/ibpp/core/ibase.h	1458;"	d
blr_join_type	drivers/Firebird/ibpp/core/ibase.h	1404;"	d
blr_label	drivers/Firebird/ibpp/core/ibase.h	1342;"	d
blr_leave	drivers/Firebird/ibpp/core/ibase.h	1343;"	d
blr_left	drivers/Firebird/ibpp/core/ibase.h	1310;"	d
blr_leq	drivers/Firebird/ibpp/core/ibase.h	1378;"	d
blr_like	drivers/Firebird/ibpp/core/ibase.h	1389;"	d
blr_literal	drivers/Firebird/ibpp/core/ibase.h	1346;"	d
blr_lock_state	drivers/Firebird/ibpp/core/ibase.h	1425;"	d
blr_long	drivers/Firebird/ibpp/core/ibase.h	1290;"	d
blr_loop	drivers/Firebird/ibpp/core/ibase.h	1335;"	d
blr_lowcase	drivers/Firebird/ibpp/core/ibase.h	1501;"	d
blr_lss	drivers/Firebird/ibpp/core/ibase.h	1377;"	d
blr_map	drivers/Firebird/ibpp/core/ibase.h	1401;"	d
blr_matching	drivers/Firebird/ibpp/core/ibase.h	1380;"	d
blr_matching2	drivers/Firebird/ibpp/core/ibase.h	1427;"	d
blr_maximum	drivers/Firebird/ibpp/core/ibase.h	1354;"	d
blr_merge	drivers/Firebird/ibpp/core/ibase.h	1457;"	d
blr_message	drivers/Firebird/ibpp/core/ibase.h	1330;"	d
blr_minimum	drivers/Firebird/ibpp/core/ibase.h	1355;"	d
blr_missing	drivers/Firebird/ibpp/core/ibase.h	1387;"	d
blr_modify	drivers/Firebird/ibpp/core/ibase.h	1336;"	d
blr_multiply	drivers/Firebird/ibpp/core/ibase.h	1360;"	d
blr_navigational	drivers/Firebird/ibpp/core/ibase.h	1460;"	d
blr_negate	drivers/Firebird/ibpp/core/ibase.h	1362;"	d
blr_neq	drivers/Firebird/ibpp/core/ibase.h	1374;"	d
blr_not	drivers/Firebird/ibpp/core/ibase.h	1385;"	d
blr_null	drivers/Firebird/ibpp/core/ibase.h	1370;"	d
blr_nullsfirst	drivers/Firebird/ibpp/core/ibase.h	1497;"	d
blr_nullslast	drivers/Firebird/ibpp/core/ibase.h	1499;"	d
blr_or	drivers/Firebird/ibpp/core/ibase.h	1383;"	d
blr_parameter	drivers/Firebird/ibpp/core/ibase.h	1350;"	d
blr_parameter2	drivers/Firebird/ibpp/core/ibase.h	1365;"	d
blr_parameter2_old	drivers/Firebird/ibpp/core/ibase.h	1368;"	d
blr_parameter3	drivers/Firebird/ibpp/core/ibase.h	1411;"	d
blr_pid	drivers/Firebird/ibpp/core/ibase.h	1444;"	d
blr_plan	drivers/Firebird/ibpp/core/ibase.h	1456;"	d
blr_post	drivers/Firebird/ibpp/core/ibase.h	1345;"	d
blr_post_arg	drivers/Firebird/ibpp/core/ibase.h	1517;"	d
blr_procedure	drivers/Firebird/ibpp/core/ibase.h	1443;"	d
blr_project	drivers/Firebird/ibpp/core/ibase.h	1393;"	d
blr_prot_mask	drivers/Firebird/ibpp/core/ibase.h	1423;"	d
blr_quad	drivers/Firebird/ibpp/core/ibase.h	1291;"	d
blr_raise	drivers/Firebird/ibpp/core/ibase.h	1319;"	d
blr_receive	drivers/Firebird/ibpp/core/ibase.h	1338;"	d
blr_record_version	drivers/Firebird/ibpp/core/ibase.h	1472;"	d
blr_relation	drivers/Firebird/ibpp/core/ibase.h	1398;"	d
blr_relation2	drivers/Firebird/ibpp/core/ibase.h	1464;"	d
blr_retrieve	drivers/Firebird/ibpp/core/ibase.h	1462;"	d
blr_rid	drivers/Firebird/ibpp/core/ibase.h	1399;"	d
blr_rid2	drivers/Firebird/ibpp/core/ibase.h	1465;"	d
blr_right	drivers/Firebird/ibpp/core/ibase.h	1311;"	d
blr_rs_stream	drivers/Firebird/ibpp/core/ibase.h	1440;"	d
blr_rse	drivers/Firebird/ibpp/core/ibase.h	1391;"	d
blr_run_average	drivers/Firebird/ibpp/core/ibase.h	1415;"	d
blr_run_count	drivers/Firebird/ibpp/core/ibase.h	1439;"	d
blr_run_max	drivers/Firebird/ibpp/core/ibase.h	1412;"	d
blr_run_min	drivers/Firebird/ibpp/core/ibase.h	1413;"	d
blr_run_total	drivers/Firebird/ibpp/core/ibase.h	1414;"	d
blr_savepoint_release	drivers/Firebird/ibpp/core/ibase.h	1526;"	d
blr_savepoint_release_single	drivers/Firebird/ibpp/core/ibase.h	1528;"	d
blr_savepoint_set	drivers/Firebird/ibpp/core/ibase.h	1525;"	d
blr_savepoint_undo	drivers/Firebird/ibpp/core/ibase.h	1527;"	d
blr_seek	drivers/Firebird/ibpp/core/ibase.h	1431;"	d
blr_select	drivers/Firebird/ibpp/core/ibase.h	1339;"	d
blr_send	drivers/Firebird/ibpp/core/ibase.h	1340;"	d
blr_sequential	drivers/Firebird/ibpp/core/ibase.h	1459;"	d
blr_set_generator	drivers/Firebird/ibpp/core/ibase.h	1467;"	d
blr_short	drivers/Firebird/ibpp/core/ibase.h	1289;"	d
blr_singular	drivers/Firebird/ibpp/core/ibase.h	1446;"	d
blr_skip	drivers/Firebird/ibpp/core/ibase.h	1493;"	d
blr_sort	drivers/Firebird/ibpp/core/ibase.h	1394;"	d
blr_sql_code	drivers/Firebird/ibpp/core/ibase.h	1315;"	d
blr_sql_date	drivers/Firebird/ibpp/core/ibase.h	1302;"	d
blr_sql_time	drivers/Firebird/ibpp/core/ibase.h	1303;"	d
blr_stall	drivers/Firebird/ibpp/core/ibase.h	1473;"	d
blr_start_savepoint	drivers/Firebird/ibpp/core/ibase.h	1453;"	d
blr_starting	drivers/Firebird/ibpp/core/ibase.h	1381;"	d
blr_store	drivers/Firebird/ibpp/core/ibase.h	1341;"	d
blr_store2	drivers/Firebird/ibpp/core/ibase.h	1344;"	d
blr_strlen	drivers/Firebird/ibpp/core/ibase.h	1502;"	d
blr_strlen_bit	drivers/Firebird/ibpp/core/ibase.h	1504;"	d
blr_strlen_char	drivers/Firebird/ibpp/core/ibase.h	1505;"	d
blr_strlen_octet	drivers/Firebird/ibpp/core/ibase.h	1506;"	d
blr_substring	drivers/Firebird/ibpp/core/ibase.h	1364;"	d
blr_subtract	drivers/Firebird/ibpp/core/ibase.h	1359;"	d
blr_text	drivers/Firebird/ibpp/core/ibase.h	1287;"	d
blr_text2	drivers/Firebird/ibpp/core/ibase.h	1288;"	d
blr_timestamp	drivers/Firebird/ibpp/core/ibase.h	1295;"	d
blr_total	drivers/Firebird/ibpp/core/ibase.h	1356;"	d
blr_trigger_code	drivers/Firebird/ibpp/core/ibase.h	1317;"	d
blr_trim	drivers/Firebird/ibpp/core/ibase.h	1508;"	d
blr_trim_both	drivers/Firebird/ibpp/core/ibase.h	1510;"	d
blr_trim_characters	drivers/Firebird/ibpp/core/ibase.h	1515;"	d
blr_trim_leading	drivers/Firebird/ibpp/core/ibase.h	1511;"	d
blr_trim_spaces	drivers/Firebird/ibpp/core/ibase.h	1514;"	d
blr_trim_trailing	drivers/Firebird/ibpp/core/ibase.h	1512;"	d
blr_union	drivers/Firebird/ibpp/core/ibase.h	1400;"	d
blr_unique	drivers/Firebird/ibpp/core/ibase.h	1388;"	d
blr_upcase	drivers/Firebird/ibpp/core/ibase.h	1424;"	d
blr_user_name	drivers/Firebird/ibpp/core/ibase.h	1369;"	d
blr_user_savepoint	drivers/Firebird/ibpp/core/ibase.h	1519;"	d
blr_value_if	drivers/Firebird/ibpp/core/ibase.h	1426;"	d
blr_variable	drivers/Firebird/ibpp/core/ibase.h	1351;"	d
blr_varying	drivers/Firebird/ibpp/core/ibase.h	1296;"	d
blr_varying2	drivers/Firebird/ibpp/core/ibase.h	1297;"	d
blr_version4	drivers/Firebird/ibpp/core/ibase.h	1322;"	d
blr_version5	drivers/Firebird/ibpp/core/ibase.h	1323;"	d
blr_via	drivers/Firebird/ibpp/core/ibase.h	1367;"	d
blr_writelock	drivers/Firebird/ibpp/core/ibase.h	1498;"	d
blueBits	drivers/GL/glcore.h	/^    GLint redBits, greenBits, blueBits, alphaBits;	\/* bits per comp *\/$/;"	m	struct:__GLcontextModesRec
blueBits	drivers/GL/glxint.h	/^    GLint redBits, greenBits, blueBits, alphaBits;$/;"	m	struct:__GLXFBConfigRec
blueBits	drivers/GL/internal/glcore.h	/^    GLint redBits, greenBits, blueBits, alphaBits;	\/* bits per comp *\/$/;"	m	struct:__GLcontextModesRec
blueMask	drivers/GL/glcore.h	/^    GLuint redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLcontextModesRec
blueMask	drivers/GL/glxint.h	/^    GLuint redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLXFBConfigRec
blueMask	drivers/GL/glxint.h	/^    unsigned long redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLXvisualConfigRec
blueMask	drivers/GL/internal/glcore.h	/^    GLuint redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLcontextModesRec
bluePartNum_	kernel/TeIntersector.h	/^	unsigned int bluePartNum_;		\/\/!< Line number in a polygon that a blue segment belongs.$/;"	m	struct:TeINTERSECTOR2::TeBoundaryIP
bluePolNum_	kernel/TeIntersector.h	/^	unsigned int bluePolNum_;		\/\/!< Polygon number in a vector of polygons that a segment belongs.$/;"	m	struct:TeINTERSECTOR2::TeBoundaryIP
blueSegNum_	kernel/TeIntersector.h	/^	unsigned int blueSegNum_;		\/\/!< Blue segment number.$/;"	m	struct:TeINTERSECTOR2::TeBoundaryIP
blueSize	drivers/GL/glxint.h	/^    int redSize, greenSize, blueSize, alphaSize;$/;"	m	struct:__GLXvisualConfigRec
blue_	image_processing/TePDIRgbPaletteNode.hpp	/^      unsigned int blue_;$/;"	m	class:TePDIRgbPaletteNode
blue_	kernel/TeVisual.h	/^	int blue_;	$/;"	m	struct:TeColor
blue_size	drivers/GL/directfbgl.h	/^     int        blue_size;$/;"	m	struct:__anon175
bof	drivers/PostgreSQL/TePGInterface.h	/^        bool bof(void) const { return int_index_current_ == int_bof_; }$/;"	f	class:TePGRecordset
bold	kernel/TeVisual.h	/^	virtual bool bold () $/;"	f	class:TeVisual
bold	kernel/TeVisual.h	/^	virtual void bold (bool b) $/;"	f	class:TeVisual
boldCheckBox_clicked	drivers/qt/ui/help.ui.h	/^void Help::boldCheckBox_clicked()$/;"	f	class:Help
bold_	kernel/TeVisual.h	/^	bool		bold_;			$/;"	m	class:TeBaseVisualParams
boolean	drivers/Oracle/OCI/include/oratypes.h	/^	typedef unsigned char boolean; $/;"	t
booleanValue	drivers/SQLite/sqlite3/shell.c	/^static int booleanValue(char *zArg){$/;"	f	file:
borderUp	kernel/TeTin.cpp	/^TeTin::borderUp ()$/;"	f	class:TeTin
border_	drivers/GTM/TeGTM.h	/^	unsigned char dspl_, border_, italic_, underline_, strikeout_, alignment_;$/;"	m	class:TeGTMWaypointsStyles
borderline	image_processing/TePDIBaatz.hpp	/^  bool borderline; \/* indicates if the pixel belongs to the border of the segment *\/$/;"	m	struct:segment_pixel
boundingBox	drivers/qt/TeAppTheme.cpp	/^TeBox& TeAppTheme::boundingBox()$/;"	f	class:TeAppTheme
boundingBox	kernel/TeRasterParams.cpp	/^TeRasterParams::boundingBox () const$/;"	f	class:TeRasterParams
boundingBoxLinesColumns	kernel/TeRasterParams.cpp	/^TeRasterParams::boundingBoxLinesColumns (double x1, double y1, double x2, double y2, $/;"	f	class:TeRasterParams
boundingBoxResolution	kernel/TeRasterParams.cpp	/^TeRasterParams::boundingBoxResolution (double x1, double y1, double x2, double y2, $/;"	f	class:TeRasterParams
boundingBox_	kernel/TeCoverageParams.h	/^    TeBox boundingBox_;             \/\/!< Bounding box for all elements of a coverage$/;"	m	class:TeCoverageParams
boundingRect	drivers/GL/glcore.h	/^    __GLregionRect boundingRect;$/;"	m	struct:__GLdrawableRegionRec
boundingRect	drivers/GL/internal/glcore.h	/^    __GLregionRect boundingRect;$/;"	m	struct:__GLdrawableRegionRec
box	functions/TeCellAlgorithms.cpp	/^	TeBox box;$/;"	m	struct:procDist	file:
box	kernel/TeAbstractTheme.h	/^	virtual TeBox& box()$/;"	f	class:TeAbstractTheme
box	kernel/TeCoverageDecoder.h	/^    TeBox box; \/\/!< The minimum box enclosing all elements of the block$/;"	m	struct:TeCoverageBlock
box	kernel/TeCoverageDecoderCacheLRU.h	/^    TeBox box; \/\/!< Box to be checked for intersection with blocks$/;"	m	struct:TeBoxIntersectionPredicate
box	kernel/TeGeometry.h	/^	TeBox& box ()$/;"	f	class:TeGeometry
box	kernel/TeGeometry.h	/^	const TeBox& box () const $/;"	f	class:TeGeometry
box	kernel/TeLayer.h	/^	virtual TeBox&	box()$/;"	f	class:TeLayer
box	kernel/TeMultiGeometry.h	/^	TeBox box()$/;"	f	class:TeMultiGeometry
box	kernel/TeQuerierParams.cpp	/^TeQuerierParams::box()$/;"	f	class:TeQuerierParams
box	kernel/TeQuerierParams.h	/^	virtual void box(TeBox& b) { box_ = b; }$/;"	f	class:TeQuerierParams
box	kernel/TeRasterParams.h	/^	const TeBox& box() const$/;"	f	class:TeRasterParams
box	kernel/TeTin.h	/^	TeBox box()$/;"	f	class:TeTin
box	kernel/TeView.h	/^	virtual TeBox box( bool onlyVisible )$/;"	f	class:TeView
box	kernel/TeViewNode.cpp	/^TeViewTree::box(bool onlyVisible, TeProjection* destProjection)$/;"	f	class:TeViewTree
boxAvg	functions/TeInterpolation.h	/^		double boxAvg(const TeBox& box)$/;"	f	class:TeInterpolationAlgorithms
boxDistWeightAvg	functions/TeInterpolation.h	/^		double boxDistWeightAvg(const kdKey& key, const TeBox& box, const int& powValue)$/;"	f	class:TeInterpolationAlgorithms
boxLinesColumns	kernel/TeRasterParams.cpp	/^TeRasterParams::boxLinesColumns (double x1, double y1, double x2, double y2, $/;"	f	class:TeRasterParams
boxResolution	kernel/TeRasterParams.cpp	/^TeRasterParams::boxResolution (double x1, double y1, double x2, double y2, $/;"	f	class:TeRasterParams
boxRest	kernel/TeQuerierParams.h	/^	virtual TeBox boxRest() { return boxRest_; } $/;"	f	class:TeQuerierParams
boxRest_	kernel/TeAbstractTheme.h	/^	TeBox				boxRest_;		\/\/box which defines the spatial restriction $/;"	m	class:TeAbstractTheme
boxRest_	kernel/TeQuerierParams.h	/^	TeBox					boxRest_;			\/\/!< A bounding box used by spatial restriction $/;"	m	class:TeQuerierParams
boxRestriction	kernel/TeAbstractTheme.h	/^	virtual TeBox boxRestriction() { return boxRest_;}$/;"	f	class:TeAbstractTheme
boxRestriction	kernel/TeAbstractTheme.h	/^	virtual void boxRestriction(TeBox& b) {boxRest_ = b;}$/;"	f	class:TeAbstractTheme
box_	kernel/TeBaseSTInstanceSet.h	/^	TeBox					box_;$/;"	m	class:TeBaseSTInstanceSet
box_	kernel/TeGeoDataDriver.h	/^	TeBox			box_; \/\/!< The bounding box of the dataSet$/;"	m	class:TeGeoDataDriver
box_	kernel/TeGeometry.h	/^	TeBox	box_;		\/\/!<  The bounding box of the geometry$/;"	m	class:TeGeometry
box_	kernel/TeLayer.h	/^	TeBox		box_;					\/\/!< layer bounding box$/;"	m	class:TeLayer
box_	kernel/TeQuerierParams.h	/^	TeBox					box_;			\/\/!< minimal bounding box that contains all geometries returned by this querier $/;"	m	class:TeQuerierParams
box_	kernel/TeRasterParams.h	/^	TeBox	box_;			\/\/!< raster box in center of pixel coordinates$/;"	m	class:TeRasterParams
box_	kernel/TeRepresentation.h	/^	TeBox	box_;			\/\/!< representation bounding box$/;"	m	struct:TeRepresentation
brConvertExtTables	drivers/Firebird/ibpp/core/ibpp.h	/^		brNonTransportable = 0x1000, brConvertExtTables = 0x2000,$/;"	e	enum:IBPP::BRF
brDeactivateIdx	drivers/Firebird/ibpp/core/ibpp.h	/^		brReplace = 0x10000, brDeactivateIdx = 0x20000,$/;"	e	enum:IBPP::BRF
brIgnoreChecksums	drivers/Firebird/ibpp/core/ibpp.h	/^		brIgnoreChecksums = 0x100, brIgnoreLimbo = 0x200,$/;"	e	enum:IBPP::BRF
brIgnoreLimbo	drivers/Firebird/ibpp/core/ibpp.h	/^		brIgnoreChecksums = 0x100, brIgnoreLimbo = 0x200,$/;"	e	enum:IBPP::BRF
brMetadataOnly	drivers/Firebird/ibpp/core/ibpp.h	/^		brMetadataOnly = 0x400, brNoGarbageCollect = 0x800,$/;"	e	enum:IBPP::BRF
brNoGarbageCollect	drivers/Firebird/ibpp/core/ibpp.h	/^		brMetadataOnly = 0x400, brNoGarbageCollect = 0x800,$/;"	e	enum:IBPP::BRF
brNoShadow	drivers/Firebird/ibpp/core/ibpp.h	/^		brNoShadow = 0x40000, brNoValidity = 0x80000,$/;"	e	enum:IBPP::BRF
brNoValidity	drivers/Firebird/ibpp/core/ibpp.h	/^		brNoShadow = 0x40000, brNoValidity = 0x80000,$/;"	e	enum:IBPP::BRF
brNonTransportable	drivers/Firebird/ibpp/core/ibpp.h	/^		brNonTransportable = 0x1000, brConvertExtTables = 0x2000,$/;"	e	enum:IBPP::BRF
brPerTableCommit	drivers/Firebird/ibpp/core/ibpp.h	/^		brPerTableCommit = 0x100000, brUseAllSpace = 0x200000$/;"	e	enum:IBPP::BRF
brReplace	drivers/Firebird/ibpp/core/ibpp.h	/^		brReplace = 0x10000, brDeactivateIdx = 0x20000,$/;"	e	enum:IBPP::BRF
brUseAllSpace	drivers/Firebird/ibpp/core/ibpp.h	/^		brPerTableCommit = 0x100000, brUseAllSpace = 0x200000$/;"	e	enum:IBPP::BRF
brVerbose	drivers/Firebird/ibpp/core/ibpp.h	/^		brVerbose = 0x1,$/;"	e	enum:IBPP::BRF
br_stl	kernel/Gra_algo.h	/^namespace br_stl {$/;"	n
br_stl	kernel/checkvec.h	/^namespace br_stl$/;"	n
br_stl	kernel/dynpq.h	/^namespace br_stl$/;"	n
br_stl	kernel/gra_util.h	/^namespace br_stl {$/;"	n
br_stl	kernel/graph.h	/^namespace br_stl$/;"	n
br_stl	kernel/showseq.h	/^namespace br_stl {$/;"	n
branchBuf_	kernel/TeRTree.h	/^			TeRTreeBranch branchBuf_[MAXNODES + 1];	\/\/!< Auxiliary branch buffer.$/;"	m	struct:TeSAM::TeRTree::TePartitionVars
branch_	kernel/TeRTree.h	/^		TeRTreeBranch branch_[MAXNODES];	\/\/!< Branch.$/;"	m	class:TeSAM::TeRTreeNode
breakLineSet	kernel/TeNetwork.cpp	/^TeGraphNetwork:: breakLineSet (TeNode& node, int line)$/;"	f	class:TeGraphNetwork
breakTriangleSecondDeriv	kernel/TeTin.cpp	/^TeTin::breakTriangleSecondDeriv()$/;"	f	class:TeTin
breakVertexClosestPoints	kernel/TeTin.cpp	/^TeTin::breakVertexClosestPoints(long v, std::vector<long>& rclstVert, std::vector<long>& lclstVert)$/;"	f	class:TeTin
breakVertexFirstDeriv	kernel/TeTin.cpp	/^TeTin::breakVertexFirstDeriv()$/;"	f	class:TeTin
breakVertexSecondDeriv	kernel/TeTin.cpp	/^TeTin::breakVertexSecondDeriv()$/;"	f	class:TeTin
breaklineTol_	kernel/TeTin.h	/^	double				breaklineTol_;	\/\/! Breaklines tolerance$/;"	m	class:TeTin
breakline_	kernel/TeTin.h	/^	bool				breakline_;$/;"	m	class:TeTin
brightness_	drivers/qt/TeQtColorBar.h	/^	bool	brightness_;$/;"	m	class:TeQtColorBar
brushStyleMap_	drivers/qt/TeQtCanvas.h	/^	map<TePolyBasicType, Qt::BrushStyle> brushStyleMap_;$/;"	m	class:TeQtCanvas
brushStyleMap_	drivers/qt/TeQtGraph.h	/^	map<TePolyBasicType, Qt::BrushStyle> brushStyleMap_;$/;"	m	class:TeQtGraphPlot
brushStyleMap_	drivers/qt/TeQtLegendSource.h	/^    map<TePolyBasicType, Qt::BrushStyle> brushStyleMap_;$/;"	m	class:TeQtLegendSource
brushStyleMap_	drivers/qt/TeQtViewsListView.h	/^	map<TePolyBasicType, Qt::BrushStyle>	brushStyleMap_;$/;"	m	class:TeQtViewsListView
bstr_blob	drivers/Firebird/ibpp/core/ibase.h	/^	isc_blob_handle	bstr_blob;		\/* Blob handle *\/$/;"	m	struct:bstream
bstr_buffer	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR *			bstr_buffer;	\/* Address of buffer *\/$/;"	m	struct:bstream
bstr_cnt	drivers/Firebird/ibpp/core/ibase.h	/^	short			bstr_cnt;		\/* Characters in buffer *\/$/;"	m	struct:bstream
bstr_length	drivers/Firebird/ibpp/core/ibase.h	/^	short			bstr_length;	\/* Length of buffer *\/$/;"	m	struct:bstream
bstr_mode	drivers/Firebird/ibpp/core/ibase.h	/^	char			bstr_mode;		\/* (mode) ? OUTPUT : INPUT *\/$/;"	m	struct:bstream
bstr_ptr	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR *			bstr_ptr;		\/* Next character *\/$/;"	m	struct:bstream
bstream	drivers/Firebird/ibpp/core/ibase.h	/^typedef struct bstream$/;"	s
btreeClearHasContent	drivers/SQLite/sqlite3/sqlite3.c	/^static void btreeClearHasContent(BtShared *pBt){$/;"	f	file:
btreeCreateTable	drivers/SQLite/sqlite3/sqlite3.c	/^static int btreeCreateTable(Btree *p, int *piTable, int createTabFlags){$/;"	f	file:
btreeCursor	drivers/SQLite/sqlite3/sqlite3.c	/^static int btreeCursor($/;"	f	file:
btreeDropTable	drivers/SQLite/sqlite3/sqlite3.c	/^static int btreeDropTable(Btree *p, Pgno iTable, int *piMoved){$/;"	f	file:
btreeEndTransaction	drivers/SQLite/sqlite3/sqlite3.c	/^static void btreeEndTransaction(Btree *p){$/;"	f	file:
btreeGetHasContent	drivers/SQLite/sqlite3/sqlite3.c	/^static int btreeGetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreeGetPage	drivers/SQLite/sqlite3/sqlite3.c	/^static int btreeGetPage($/;"	f	file:
btreeInitPage	drivers/SQLite/sqlite3/sqlite3.c	/^static int btreeInitPage(MemPage *pPage){$/;"	f	file:
btreeIntegrity	drivers/SQLite/sqlite3/sqlite3.c	47763;"	d	file:
btreeInvokeBusyHandler	drivers/SQLite/sqlite3/sqlite3.c	/^static int btreeInvokeBusyHandler(void *pArg){$/;"	f	file:
btreeMask	drivers/SQLite/sqlite3/sqlite3.c	/^  yDbMask btreeMask;      \/* Bitmask of db->aDb[] entries referenced *\/$/;"	m	struct:Vdbe	file:
btreeMoveto	drivers/SQLite/sqlite3/sqlite3.c	/^static int btreeMoveto($/;"	f	file:
btreePageFromDbPage	drivers/SQLite/sqlite3/sqlite3.c	/^static MemPage *btreePageFromDbPage(DbPage *pDbPage, Pgno pgno, BtShared *pBt){$/;"	f	file:
btreePageLookup	drivers/SQLite/sqlite3/sqlite3.c	/^static MemPage *btreePageLookup(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreePagecount	drivers/SQLite/sqlite3/sqlite3.c	/^static Pgno btreePagecount(BtShared *pBt){$/;"	f	file:
btreeParseCell	drivers/SQLite/sqlite3/sqlite3.c	/^static void btreeParseCell($/;"	f	file:
btreeParseCellPtr	drivers/SQLite/sqlite3/sqlite3.c	/^static void btreeParseCellPtr($/;"	f	file:
btreeRestoreCursorPosition	drivers/SQLite/sqlite3/sqlite3.c	/^static int btreeRestoreCursorPosition(BtCursor *pCur){$/;"	f	file:
btreeSetHasContent	drivers/SQLite/sqlite3/sqlite3.c	/^static int btreeSetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
bucketSize_	kernel/TeKdTree.h	/^		unsigned int bucketSize_;$/;"	m	class:TeSAM::TeAdaptativeKdTree
buffer	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::buffer(const string& actGeomTable, TeGeomRep \/* actRep *\/, TeKeys& actIds, TePolygonSet& bufferSet, double dist)$/;"	f	class:TeOracleSpatial
buffer	drivers/libjpeg/jmemdstsrc.h	/^	unsigned char* buffer;$/;"	m	struct:__anon37
buffer	kernel/TeDatabase.cpp	/^TeDatabase::buffer(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIds, TePolygonSet& bufferSet, double dist)$/;"	f	class:TeDatabase
buffer2TeRing	drivers/Firebird/TeFirebird.cpp	/^void buffer2TeRing(const char* buffer, const int& numCoords, TeLinearRing& line)$/;"	f
bufferBlobSize_	drivers/MySQL/TeMySQL.h	/^long	bufferBlobSize_; \/\/ size of the data already allocated$/;"	m	class:TeMySQL
bufferBlob_	drivers/MySQL/TeMySQL.h	/^char*   bufferBlob_;	 \/\/ internal buffer used to write blob data$/;"	m	class:TeMySQL
bufferCols_	image_processing/TePDIRasterRUBuffer.hpp	/^      unsigned int bufferCols_;$/;"	m	class:TePDIRasterRUBuffer
bufferLines_	image_processing/TePDIRasterRUBuffer.hpp	/^      unsigned int bufferLines_;$/;"	m	class:TePDIRasterRUBuffer
bufferPI	kernel/TeBufferRegion.cpp	/^const double bufferPI       = 3.14159265358979323846;$/;"	m	namespace:TeBUFFERREGION	file:
bufferPreallocated	drivers/libjpeg/jmemdstsrc.h	/^  int bufferPreallocated;			\/* boolean indicating whether buffer was previously allocated *\/$/;"	m	struct:__anon36
bufferPtr_	image_processing/TePDIRasterRUBuffer.hpp	/^      double** bufferPtr_;$/;"	m	class:TePDIRasterRUBuffer
bufferSize	drivers/GL/glxint.h	/^    int bufferSize;$/;"	m	struct:__GLXvisualConfigRec
bufferSizeChanged	drivers/libjpeg/jmemdstsrc.h	/^  int bufferSizeChanged;			\/* boolean indicating whether buffer was changed inside the routine*\/ $/;"	m	struct:__anon36
buffer_mask	drivers/GL/glx.h	/^    unsigned int buffer_mask;	\/* mask indicating which buffers are affected *\/$/;"	m	struct:__anon176
buffer_nzttBufferBlock	drivers/Oracle/OCI/include/nzt.h	/^   ub1 *buffer_nzttBufferBlock;     \/* Pointer to buffer *\/$/;"	m	struct:nzttBufferBlock
buffer_size	drivers/GL/directfbgl.h	/^     int        buffer_size;$/;"	m	struct:__anon175
buffers_	drivers/Oracle/TeOCICursor.h	/^	vector<void *>			buffers_;	\/\/!< buffer to store simple data type (varchar, number, date, etc)$/;"	m	class:TeOCICursor
buflen_nzttBufferBlock	drivers/Oracle/OCI/include/nzt.h	/^   ub4 buflen_nzttBufferBlock;   \/* Total length of buffer *\/$/;"	m	struct:nzttBufferBlock
bufsize	drivers/libjpeg/jmemdstsrc.h	/^	unsigned int   bufsize;$/;"	m	struct:__anon37
build	drivers/DXF/TeDXFDriverFactory.cpp	/^TeGeoDataDriver * TeDXFDriverFactory::build(TeGDriverParams * params) $/;"	f	class:TeDXFDriverFactory
build	drivers/DXF/TeDXFDriverFactory.cpp	/^TeGeoDataDriver* TeDXFDriverFactory::build() $/;"	f	class:TeDXFDriverFactory
build	drivers/Firebird/TeFirebird.h	/^    TeDatabase* build( const TeDatabaseFactoryParams& arg )$/;"	f	class:TeFirebirdFactory
build	drivers/MrSID/TeDecoderMrSID.h	/^	TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeDecoderMrSIDFactory
build	drivers/MySQL/TeMySQL.h	/^  TeDatabase* build( const TeDatabaseFactoryParams& arg )$/;"	f	class:TeMySQLFactory
build	drivers/Oracle/TeOCIOracle.h	/^    TeDatabase* build( const TeDatabaseFactoryParams& arg )$/;"	f	class:TeOCIOracleFactory
build	drivers/Oracle/TeOracleSpatial.h	/^    TeDatabase* build( const TeDatabaseFactoryParams& arg )$/;"	f	class:TeOracleSpatialFactory
build	drivers/PAMDecoder/TeDecoderPAM.h	/^  virtual TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeDecoderPAMFactory
build	drivers/PostgreSQL/TePostGIS.h	/^    TeDatabase* build( const TeDatabaseFactoryParams& arg )$/;"	f	class:TePostGISFactory
build	drivers/PostgreSQL/TePostgreSQL.h	/^    TeDatabase* build( const TeDatabaseFactoryParams& arg )$/;"	f	class:TePostgreSQLFactory
build	drivers/SQLite/TeSQLite.h	/^    TeDatabase* build( const TeDatabaseFactoryParams& arg )$/;"	f	class:TeSQLiteFactory
build	drivers/ado/TeAdoDB.h	/^    TeDatabase* build( const TeDatabaseFactoryParams& arg )$/;"	f	class:TeAdoFactory
build	drivers/ado/TeAdoFireBird.h	/^    TeDatabase* build( const TeDatabaseFactoryParams& arg )$/;"	f	class:TeFireBirdFactory
build	drivers/ado/TeAdoOracle.h	/^    TeDatabase* build( const TeDatabaseFactoryParams& arg )$/;"	f	class:TeOracleFactory
build	drivers/ado/TeAdoSqlServer.h	/^    TeDatabase* build( const TeDatabaseFactoryParams& arg )$/;"	f	class:TeSqlServerFactory
build	drivers/ado/TeAdoSqlServerSpatial.h	/^    TeDatabase* build( const TeDatabaseFactoryParams& arg )$/;"	f	class:TeSqlServerSpatialFactory
build	drivers/gdal/TeGDALDecoder.h	/^	TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeGDALDecoderFactory
build	drivers/gdal/TeOGRDriverFactory.cpp	/^TeGeoDataDriver * TeOGRDriverFactory::build(TeGDriverParams * params) $/;"	f	class:TeOGRDriverFactory
build	drivers/gdal/TeOGRDriverFactory.cpp	/^TeGeoDataDriver* TeOGRDriverFactory::build() $/;"	f	class:TeOGRDriverFactory
build	drivers/qt/TeDecoderQtImage.h	/^	virtual TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeDecoderQtImageFactory
build	drivers/shapelib/TeQuerierSHP.h	/^	virtual TeQuerierImpl* build (const TeQuerierParams& arg)$/;"	f	class:TeQuerierSHPFactory
build	drivers/shapelib/TeSHPDriverFactory.cpp	/^TeGeoDataDriver * TeSHPDriverFactory::build() $/;"	f	class:TeSHPDriverFactory
build	drivers/shapelib/TeSHPDriverFactory.cpp	/^TeGeoDataDriver * TeSHPDriverFactory::build(TeGDriverParams * params) $/;"	f	class:TeSHPDriverFactory
build	image_processing/TePDIArithmeticFactory.cpp	/^TePDIAlgorithm* TePDIArithmeticFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIArithmeticFactory
build	image_processing/TePDIBDFilterFactory.cpp	/^TePDIAlgorithm* TePDIBDFilterFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIBDFilterFactory
build	image_processing/TePDIColorTransformFactory.cpp	/^TePDIAlgorithm* TePDIColorTransformFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIColorTransformFactory
build	image_processing/TePDIContrastFactory.cpp	/^TePDIAlgorithm* TePDIContrastFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIContrastFactory
build	image_processing/TePDIEMClasFactory.cpp	/^TePDIAlgorithm* TePDIEMClasFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIEMClasFactory
build	image_processing/TePDIIsosegClasFactory.cpp	/^TePDIAlgorithm* TePDIIsosegClasFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIIsosegClasFactory
build	image_processing/TePDIKMeansClasFactory.cpp	/^TePDIAlgorithm* TePDIKMeansClasFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIKMeansClasFactory
build	image_processing/TePDILinearFilterFactory.cpp	/^TePDIAlgorithm* TePDILinearFilterFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDILinearFilterFactory
build	image_processing/TePDIMixModelFactory.cpp	/^TePDIAlgorithm* TePDIMixModelFactory::build (const TePDIParameters& arg)$/;"	f	class:TePDIMixModelFactory
build	image_processing/TePDIMorfFilterFactory.cpp	/^TePDIAlgorithm* TePDIMorfFilterFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIMorfFilterFactory
build	image_processing/TePDIParaSegBaatzStrategyFactory.cpp	/^TePDIParaSegStrategy* TePDIParaSegBaatzStrategyFactory::build( $/;"	f	class:TePDIParaSegBaatzStrategyFactory
build	image_processing/TePDIParaSegRegGrowStrategyFactory.cpp	/^TePDIParaSegStrategy* TePDIParaSegRegGrowStrategyFactory::build( $/;"	f	class:TePDIParaSegRegGrowStrategyFactory
build	image_processing/TePDIPrincipalComponentsFactory.cpp	/^TePDIAlgorithm* TePDIPrincipalComponentsFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIPrincipalComponentsFactory
build	image_processing/TePDIPrincoMixModelSF.cpp	/^TePDIMixModelStrategy* TePDIPrincoMixModelSF::build ( const TePDIParameters& )$/;"	f	class:TePDIPrincoMixModelSF
build	image_processing/TePDIRadarFrostFilterFactory.cpp	/^TePDIAlgorithm* TePDIRadarFrostFilterFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIRadarFrostFilterFactory
build	image_processing/TePDIRadarKuanFilterFactory.cpp	/^TePDIAlgorithm* TePDIRadarKuanFilterFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIRadarKuanFilterFactory
build	image_processing/TePDIRadarLeeFilterFactory.cpp	/^TePDIAlgorithm* TePDIRadarLeeFilterFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIRadarLeeFilterFactory
build	image_processing/TePDIRaster2VectorFactory.cpp	/^TePDIAlgorithm* TePDIRaster2VectorFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIRaster2VectorFactory
build	image_processing/TePDIRegGrowSegFactory.cpp	/^TePDIAlgorithm* TePDIRegGrowSegFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIRegGrowSegFactory
build	image_processing/TePDIRegisterFactory.cpp	/^TePDIAlgorithm* TePDIRegisterFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDIRegisterFactory
build	image_processing/TePDISensorSimulatorFactory.cpp	/^TePDIAlgorithm* TePDISensorSimulatorFactory::build ( const TePDIParameters& arg )$/;"	f	class:TePDISensorSimulatorFactory
build	kernel/Te2ndDegPolynomialGTFactory.cpp	/^TeGeometricTransformation* Te2ndDegPolynomialGTFactory::build ( $/;"	f	class:Te2ndDegPolynomialGTFactory
build	kernel/Te3rdDegPolynomialGTFactory.cpp	/^TeGeometricTransformation* Te3rdDegPolynomialGTFactory::build ( $/;"	f	class:Te3rdDegPolynomialGTFactory
build	kernel/TeAbstractFactory.h	/^    virtual PRODUCT* build(PARAMS* \/*arg*\/)$/;"	f	class:TeAbstractFactory
build	kernel/TeAbstractFactory.h	/^   virtual PRODUCT* build()$/;"	f	class:TeAbstractFactory
build	kernel/TeAffineGTFactory.cpp	/^TeGeometricTransformation* TeAffineGTFactory::build ( $/;"	f	class:TeAffineGTFactory
build	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::build(TeGroupingAttr& groupAttr, bool loadGeometries, int slide)$/;"	f	class:TeBaseSTInstanceSet
build	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::build(bool loadGeometries, bool loadAllAttributes, vector<string> attrNames, int slide)$/;"	f	class:TeBaseSTInstanceSet
build	kernel/TeConsoleErrorMessage.cpp	/^	virtual TeErrorMessage* build()$/;"	f	class:TeConsoleErrorMessagePrototype	file:
build	kernel/TeConsoleErrorMessage.h	/^	virtual TeErrorMessage* build()$/;"	f	class:TeConsoleErrorMessagePrototype
build	kernel/TeDecoderASCIIGrid.h	/^	TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeDecoderASCIIGridFactory
build	kernel/TeDecoderDatabase.h	/^	virtual TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeDecoderDatabaseFactory
build	kernel/TeDecoderFile.h	/^	virtual TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeDecoderFileFactory
build	kernel/TeDecoderJPEG.h	/^	TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeDecoderJPEGFactory
build	kernel/TeDecoderMemory.h	/^	TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeDecoderMemoryFactory
build	kernel/TeDecoderMemoryMap.h	/^	virtual TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeDecoderMemoryMapFactory
build	kernel/TeDecoderSPR.h	/^	TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeDecoderSPRFactory
build	kernel/TeDecoderSmartMem.h	/^  virtual TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeDecoderSmartMemFactory
build	kernel/TeDecoderTIFF.h	/^	TeDecoder* build (const TeRasterParams& arg)$/;"	f	class:TeDecoderTIFFFactory
build	kernel/TeExternalTheme.h	/^	TeViewNode* build()$/;"	f	class:TeExternalThemeFactory
build	kernel/TeExternalTheme.h	/^	TeViewNode* build(TeViewNodeParams* params)$/;"	f	class:TeExternalThemeFactory
build	kernel/TeFileTheme.h	/^	TeViewNode* build()$/;"	f	class:TeFileThemeFactory
build	kernel/TeFileTheme.h	/^	TeViewNode* build(TeViewNodeParams* params)$/;"	f	class:TeFileThemeFactory
build	kernel/TeKdTree.h	/^		void build(vector<pair<kdKey, kdDataItem> >& dataSet)$/;"	f	class:TeSAM::TeAdaptativeKdTree
build	kernel/TeKdTree.h	/^KdTreeNode* TeAdaptativeKdTree<KdTreeNode>::build(vector<pair<kdKey, kdDataItem> >& dataSet, double averageValue, const TeBox& mbr)$/;"	f	class:TeSAM::TeAdaptativeKdTree
build	kernel/TeProjectiveGTFactory.cpp	/^TeGeometricTransformation* TeProjectiveGTFactory::build ( $/;"	f	class:TeProjectiveGTFactory
build	kernel/TeQuerierDBStr1.h	/^	virtual TeQuerierImpl* build (const TeQuerierParams& arg)$/;"	f	class:TeQuerierDBStr1Factory
build	kernel/TeQuerierDBStr2.h	/^	virtual TeQuerierImpl* build (const TeQuerierParams& arg)$/;"	f	class:TeQuerierDBStr2Factory
build	kernel/TeQuerierDBStr3.h	/^	virtual TeQuerierImpl* build (const TeQuerierParams& arg)$/;"	f	class:TeQuerierDBStr3Factory
build	kernel/TeSFSTheme.h	/^	TeViewNode* build()$/;"	f	class:TeSFSThemeFactory
build	kernel/TeSFSTheme.h	/^	TeViewNode* build(TeViewNodeParams* params)$/;"	f	class:TeSFSThemeFactory
build	kernel/TeTheme.h	/^	TeViewNode* build()$/;"	f	class:TeThemeFactory
build	kernel/TeTheme.h	/^	TeViewNode* build(TeViewNodeParams* params)$/;"	f	class:TeThemeFactory
build	kernel/TeViewNode.h	/^	TeViewTree* build(TeViewNodeParams* params)$/;"	f	class:TeViewTreeFactory
build	kernel/TeVisual.h	/^		virtual TeVisual* build ()$/;"	f	class:TeVisualFactory
build	stat/TeMSVFactory.h	/^	virtual TeMSV* build (const TeMSVParams& params){return new TeCorrelogram(params);}$/;"	f	class:TeCorrelogram_Factory
build	stat/TeMSVFactory.h	/^	virtual TeMSV* build (const TeMSVParams& params){return new TeCovariance(params);}$/;"	f	class:TeCovariance_Factory
build	stat/TeMSVFactory.h	/^	virtual TeMSV* build (const TeMSVParams& params){return new TeSemimadogram(params);}$/;"	f	class:TeSemimadogram_Factory
build	stat/TeMSVFactory.h	/^	virtual TeMSV* build(const TeMSVParams& params){return new TeSemivariogram(params);}$/;"	f	class:TeSemivariogram_Factory
build	stat/TeSemivarModelFactory.h	/^	virtual TeSemivarModel* build(const TeSemivarModelParams& params){return new TeEsfericSemivarModel(params);}$/;"	f	class:TeEsfericSemivar_Factory
build	stat/TeSemivarModelFactory.h	/^	virtual TeSemivarModel* build(const TeSemivarModelParams& params){return new TeExponentialSemivarModel(params);}$/;"	f	class:TeExponentialSemivar_Factory
build	stat/TeSemivarModelFactory.h	/^	virtual TeSemivarModel* build(const TeSemivarModelParams& params){return new TeGaussianSemivarModel(params);}$/;"	f	class:TeGaussianSemivar_Factory
buildCollection	kernel/TeTheme.cpp	/^TeTheme::buildCollection(std::string objectId, const bool& sincronize)$/;"	f	class:TeTheme
buildDetailedBBox	image_processing/TePDIUtils.cpp	/^  bool buildDetailedBBox( TeRaster& raster, TePolygon& box )$/;"	f	namespace:TePDIUtils
buildDetailedBBox	image_processing/TePDIUtils.cpp	/^  bool buildDetailedBBox( const TePDITypes::TePDIRasterPtrType& raster,$/;"	f	namespace:TePDIUtils
buildDetailedBox	image_processing/TePDIUtils.cpp	/^  bool buildDetailedBox( TeRaster& raster, TePolygon& box )$/;"	f	namespace:TePDIUtils
buildDetailedBox	image_processing/TePDIUtils.cpp	/^  bool buildDetailedBox( const TePDITypes::TePDIRasterPtrType& raster,$/;"	f	namespace:TePDIUtils
buildErrorMessage	drivers/Firebird/ibpp/core/exception.cpp	/^void ExceptionBase::buildErrorMessage(const char* message)$/;"	f	class:ExceptionBase
buildFrameIntervals	kernel/TeTemporalSeries.cpp	/^TeTemporalSeries::buildFrameIntervals()$/;"	f	class:TeTemporalSeries
buildGrouping	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme::buildGrouping(const TeGrouping& g, vector<TeSlice>& slices)$/;"	f	class:TeAbstractTheme
buildGrouping	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::buildGrouping(const TeGrouping& g, TeChronon chr, vector<map<string, string> >& mapObjValVec)$/;"	f	class:TeExternalTheme
buildGrouping	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::buildGrouping(const TeGrouping& g, TeSelectedObjects \/* selectedObjects *\/,$/;"	f	class:TeExternalTheme
buildGrouping	kernel/TeFileTheme.cpp	/^bool TeFileTheme::buildGrouping(const TeGrouping& , TeChronon , vector<map<string, string> >& )$/;"	f	class:TeFileTheme
buildGrouping	kernel/TeFileTheme.cpp	/^bool TeFileTheme::buildGrouping(const TeGrouping& , TeSelectedObjects , vector<double>* )$/;"	f	class:TeFileTheme
buildGrouping	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::buildGrouping(const TeGrouping& g, TeChronon chr, vector<map<string, string> >& mapObjValVec)$/;"	f	class:TeSFSTheme
buildGrouping	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::buildGrouping(const TeGrouping& g, TeSelectedObjects selectedObjects, vector<double>* dValuesVec)$/;"	f	class:TeSFSTheme
buildGrouping	kernel/TeTheme.cpp	/^TeTheme::buildGrouping(TeDatabase* db, const TeGrouping& g, TeChronon chr, vector<map<string, string> >& mapObjValVec)$/;"	f	class:TeTheme
buildGrouping	kernel/TeTheme.cpp	/^TeTheme::buildGrouping(TeDatabase* db, const TeGrouping& g, TeSelectedObjects selectedObjects, vector<double>* dValuesVec)$/;"	f	class:TeTheme
buildGrouping	kernel/TeTheme.cpp	/^TeTheme::buildGrouping(const TeGrouping& g, TeChronon chr, vector<map<string, string> >& mapObjValVec)$/;"	f	class:TeTheme
buildGrouping	kernel/TeTheme.cpp	/^TeTheme::buildGrouping(const TeGrouping& g, TeSelectedObjects selectedObjects,$/;"	f	class:TeTheme
buildImpl	kernel/TeSTElementSet.cpp	/^TeSTElementSet::buildImpl(TeQuerier* querier, const int& slide)$/;"	f	class:TeSTElementSet
buildImpl	kernel/TeSTEvent.cpp	/^TeSTEventSet::buildImpl(TeQuerier* querier, const int& slide)$/;"	f	class:TeSTEventSet
buildKdTree	kernel/TeSTEvent.cpp	/^bool TeSTEventSet::buildKdTree(const int& n)$/;"	f	class:TeSTEventSet
buildMosaicName	drivers/qt/TeQtCanvas.cpp	/^string buildMosaicName (int x, int y, int delta)$/;"	f
buildOptimized	kernel/TeKdTree.h	/^		KdTreeNode* buildOptimized(vector<pair<kdKey, kdDataItem> >& dataSet, const unsigned int& first, const unsigned int& last)$/;"	f	class:TeSAM::TeKdTree
buildOptimized	kernel/TeKdTree.h	/^		void buildOptimized(vector<pair<kdKey, kdDataItem> >& dataSet)$/;"	f	class:TeSAM::TeKdTree
buildRaster	drivers/qt/TeQtCanvas.cpp	/^bool TeQtCanvas::buildRaster ()$/;"	f	class:TeQtCanvas
busy	drivers/SQLite/sqlite3/sqlite3.c	/^    u8 busy;                    \/* TRUE if currently initializing *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
busyHandler	drivers/SQLite/sqlite3/sqlite3.c	/^  BusyHandler busyHandler;      \/* Busy callback *\/$/;"	m	struct:sqlite3	file:
busyTimeout	drivers/SQLite/sqlite3/sqlite3.c	/^  int busyTimeout;              \/* Busy handler timeout, in msec *\/$/;"	m	struct:sqlite3	file:
busy_handler	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
busy_handler	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines
busy_timeout	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines	file:
busy_timeout	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines
bvalue_	drivers/ado/TeAdoDB.h	/^	_bstr_t					bvalue_;$/;"	m	class:TeAdoPortal
byteWidth	drivers/GL/glcore.h	/^    GLint byteWidth;$/;"	m	struct:__GLdrawableBufferRec
byteWidth	drivers/GL/internal/glcore.h	/^    GLint byteWidth;$/;"	m	struct:__GLdrawableBufferRec
bytespertile_	kernel/TeDecoderTIFF.h	/^	unsigned long	bytespertile_;	\/\/ number of bytes per tile$/;"	m	class:TeDecoderTIFF
c	kernel/dynpq.h	/^		vector<randomAccessIterator> c;  \/\/ heap of iterators $/;"	m	class:br_stl::dynamic_priority_queue
cType	drivers/SQLite/sqlite3/sqlite3.c	/^static const char cType[] = {$/;"	v	file:
c_	kernel/TeFragmentation.cpp	/^	TeCoord2D c_;	\/\/ cordenada de referencia$/;"	m	struct:sortDist	file:
c_	kernel/TeProxMatrixWeightsStrategy.h	/^	double						c_;$/;"	m	struct:TeProxMatrixWeightsParams
c_ptr	drivers/PostgreSQL/TePGInterface.h	/^		PGconn* c_ptr(void) { return pg_connection_; }$/;"	f	class:TePGConnection
cacheCtr	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 cacheCtr;           \/* VdbeCursor row cache generation counter *\/$/;"	m	struct:Vdbe	file:
cacheEntryClear	drivers/SQLite/sqlite3/sqlite3.c	/^static void cacheEntryClear(Parse *pParse, struct yColCache *p){$/;"	f	file:
cacheStatus	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 cacheStatus;      \/* Cache is valid if this matches Vdbe.cacheCtr *\/$/;"	m	struct:VdbeCursor	file:
cache_	kernel/TeCoverageDecoderCacheLRU.h	/^    std::list<TeCoverageBlock<T> > cache_; \/\/!< List of cached blocks$/;"	m	class:TeCoverageDecoderCacheLRU
cache_size	drivers/SQLite/sqlite3/sqlite3.c	/^  int cache_size;      \/* Number of pages to use in the cache *\/$/;"	m	struct:Schema	file:
cachedRowid	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 cachedRowid; \/* Next rowid cache.  0 means not valid *\/$/;"	m	struct:BtCursor	file:
calcBestBlockSize	image_processing/TePDIParallelSegmenter.cpp	/^bool TePDIParallelSegmenter::calcBestBlockSize( $/;"	f	class:TePDIParallelSegmenter
calcCCorrelationMtx	image_processing/TePDIMMIOMatching.cpp	/^void TePDIMMIOMatching::calcCCorrelationMtx( void * paramsPtr )$/;"	f	class:TePDIMMIOMatching
calcClassRefData	image_processing/TePDISAMClassifier.cpp	/^bool TePDISAMClassifier::calcClassRefData( const SpectralSamplesVectorT& $/;"	f	class:TePDISAMClassifier
calcEqParams	image_processing/TePDIGeoMosaic.cpp	/^bool TePDIGeoMosaic::calcEqParams( $/;"	f	class:TePDIGeoMosaic
calcEqParams	image_processing/TePDITPMosaic.cpp	/^bool TePDITPMosaic::calcEqParams( $/;"	f	class:TePDITPMosaic
calcStats	image_processing/TePDIGeoMosaic.cpp	/^bool TePDIGeoMosaic::calcStats( const TePDITypes::TePDIRasterPtrType& raster,$/;"	f	class:TePDIGeoMosaic
calcStats	image_processing/TePDITPMosaic.cpp	/^bool TePDITPMosaic::calcStats( const TePDITypes::TePDIRasterPtrType& raster,$/;"	f	class:TePDITPMosaic
calcTriangleSecondDeriv	kernel/TeTin.cpp	/^TeTin::calcTriangleSecondDeriv(long v, std::list<long> triangles, TeTinVertexSet& fderiv)$/;"	f	class:TeTin
calcVertexFirstDeriv	kernel/TeTin.cpp	/^TeTin::calcVertexFirstDeriv(long v, std::vector<long> clstVertex, TeTinVertex& deriv)$/;"	f	class:TeTin
calcVertexSecondDeriv	kernel/TeTin.cpp	/^TeTin::calcVertexSecondDeriv(long v, std::vector<long> clstVertex, TeTinVertex& deriv)$/;"	f	class:TeTin
calcZvalueAkima	kernel/TeTin.cpp	/^TeTin::calcZvalueAkima(long t, TeTinVertex& v1, TeTinVertex& v2)$/;"	f	class:TeTin
calc_bounding_box	image_processing/TePDIBaatz.cpp	/^void calc_bounding_box(struct segment_neighbor *curr_neighbor, $/;"	f
calc_color_stats	image_processing/TePDIBaatz.cpp	/^float calc_color_stats (struct segment_neighbor *curr_neighbor, $/;"	f
calc_perimeter	image_processing/TePDIBaatz.cpp	/^void calc_perimeter(struct segment_neighbor *curr_neighbor, $/;"	f
calc_perimeter_optimized	image_processing/TePDIBaatz.cpp	/^void calc_perimeter_optimized(struct segment_neighbor *curr_neighbor, $/;"	f
calc_spatial_stats	image_processing/TePDIBaatz.cpp	/^float calc_spatial_stats(struct segment_neighbor *curr_neighbor, $/;"	f
calculate	stat/TeMSVFactory.cpp	/^TeCorrelogram :: calculate ()$/;"	f	class:TeCorrelogram
calculate	stat/TeMSVFactory.cpp	/^TeCovariance :: calculate ()$/;"	f	class:TeCovariance
calculate	stat/TeMSVFactory.cpp	/^TeSemimadogram :: calculate ()$/;"	f	class:TeSemimadogram
calculate	stat/TeMSVFactory.cpp	/^TeSemivariogram :: calculate ()$/;"	f	class:TeSemivariogram
calculate	stat/TeSemivarModelFactory.cpp	/^TeEsfericSemivarModel :: calculate (TeMatrix& g)$/;"	f	class:TeEsfericSemivarModel
calculate	stat/TeSemivarModelFactory.cpp	/^TeExponentialSemivarModel :: calculate (TeMatrix& g)$/;"	f	class:TeExponentialSemivarModel
calculate	stat/TeSemivarModelFactory.cpp	/^TeGaussianSemivarModel :: calculate (TeMatrix& g)$/;"	f	class:TeGaussianSemivarModel
calculateArea	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::calculateArea(const string& actGeomTable, TeGeomRep \/* actRep *\/, TeKeys& actIdsIn, double &area)$/;"	f	class:TeOracleSpatial
calculateArea	kernel/TeDatabase.cpp	/^TeDatabase::calculateArea(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIdsIn, double &area)$/;"	f	class:TeDatabase
calculateDistance	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::calculateDistance(const string& actGeomTable, TeGeomRep \/* actRep *\/, TeKeys& Ids, double& distance)$/;"	f	class:TeOracleSpatial
calculateDistance	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::calculateDistance(const string& actGeomTable, TeGeomRep \/* actRep *\/, const string& objId1, const string& visGeomTable, TeGeomRep \/* visRep *\/, const string& objId2, double& distance)$/;"	f	class:TeOracleSpatial
calculateDistance	kernel/TeDatabase.cpp	/^TeDatabase::calculateDistance(const string& \/* actGeomTable *\/, TeGeomRep \/*actRep *\/, const string& \/* objId1 *\/, const string& \/* visGeomTable *\/, TeGeomRep \/* visRep *\/, const string& \/* objId2 *\/, double& \/* distance *\/)$/;"	f	class:TeDatabase
calculateDistance	kernel/TeDatabase.cpp	/^TeDatabase::calculateDistance(const string& actGeomTable, TeGeomRep actRep, TeKeys& Ids, double& distance)$/;"	f	class:TeDatabase
calculateGradient	kernel/TeTin.cpp	/^TeTin::calculateGradient(TeRaster*& grid, char gradtype, char slopetype)$/;"	f	class:TeTin
calculateLabelPosition	drivers/qt/TeApplicationUtils.cpp	/^template<> TeCoord2D calculateLabelPosition(const TeLine2D& geomSet)$/;"	f
calculateLabelPosition	drivers/qt/TeApplicationUtils.cpp	/^template<> TeCoord2D calculateLabelPosition(const TePolygonSet& geomSet)$/;"	f
calculateLabelPosition	drivers/qt/TeApplicationUtils.h	/^TeCoord2D calculateLabelPosition(const T1& geomSet)$/;"	f
calculateLength	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::calculateLength(const string& actGeomTable, TeGeomRep \/* actRep *\/, TeKeys& actIdsIn, double &length)$/;"	f	class:TeOracleSpatial
calculateLength	kernel/TeDatabase.cpp	/^TeDatabase::calculateLength(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIdsIn , double& length )$/;"	f	class:TeDatabase
calculateProfile	kernel/TeProfile1.cpp	/^TeLine2D TeProfile1::calculateProfile()$/;"	f	class:TeProfile1
calculate_distance_	kernel/TeProxMatrixConstructionStrategy.h	/^	bool						calculate_distance_;$/;"	m	struct:TeProxMatrixConstructionParams
callCollNeeded	drivers/SQLite/sqlite3/sqlite3.c	/^static void callCollNeeded(sqlite3 *db, int enc, const char *zName){$/;"	f	file:
callFinaliser	drivers/SQLite/sqlite3/sqlite3.c	/^static void callFinaliser(sqlite3 *db, int offset){$/;"	f	file:
callback	drivers/SQLite/sqlite3/shell.c	/^static int callback(void *pArg, int nArg, char **azArg, char **azCol){$/;"	f	file:
callback_data	drivers/SQLite/sqlite3/shell.c	/^struct callback_data {$/;"	s	file:
callback_function	drivers/Oracle/OCI/include/ociap.h	/^  OCICallbackFailover callback_function;$/;"	m	struct:__anon81
callback_function	drivers/Oracle/OCI/include/ocikp.h	/^  OCICallbackFailover callback_function;$/;"	m	struct:__anon91
callback_function	drivers/Oracle/ociap.h	/^  OCICallbackFailover callback_function;$/;"	m	struct:__anon77
calloc	drivers/GL/glcore.h	/^    void *(*calloc)(__GLcontext *gc, size_t numElem, size_t elemSize);$/;"	m	struct:__GLimportsRec
calloc	drivers/GL/glcore.h	/^    void *(*calloc)(size_t numElem, size_t elemSize);$/;"	m	struct:__GLdrawablePrivateRec
calloc	drivers/GL/internal/glcore.h	/^    void *(*calloc)(__GLcontext *gc, size_t numElem, size_t elemSize);$/;"	m	struct:__GLimportsRec
calloc	drivers/GL/internal/glcore.h	/^    void *(*calloc)(size_t numElem, size_t elemSize);$/;"	m	struct:__GLdrawablePrivateRec
cancel	drivers/qt/TeQtProgress.h	/^	 void cancel() $/;"	f	class:TeQtProgress
cancel	kernel/TeStdIOProgress.cpp	/^void TeStdIOProgress::cancel()$/;"	f	class:TeStdIOProgress
cancelRename	drivers/qt/TeQtCheckListItem.h	/^	void cancelRename(int col)$/;"	f	class:TeQtCheckListItem
canvas	drivers/qt/TeQtAnimaThread.h	/^	void canvas(TeQtCanvas* c) {canvas_ = c;}$/;"	f	class:TeQtAnimaThread
canvas	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::canvas()$/;"	f	class:TeQtTextEdit
canvasAndDataProjectionEqual	drivers/qt/TeQtCanvas.h	/^	bool canvasAndDataProjectionEqual() {return canvasAndDataProjectionEqual_;};$/;"	f	class:TeQtCanvas
canvasAndDataProjectionEqual_	drivers/qt/TeQtCanvas.h	/^	bool	canvasAndDataProjectionEqual_;$/;"	m	class:TeQtCanvas
canvasLegHeight	drivers/qt/TeAppTheme.h	/^	double canvasLegHeight()$/;"	f	class:TeAppTheme
canvasLegHeight	drivers/qt/TeAppTheme.h	/^	void canvasLegHeight(double h)$/;"	f	class:TeAppTheme
canvasLegHeight_	drivers/qt/TeAppTheme.h	/^	double			canvasLegHeight_;		\/\/legend height$/;"	m	class:TeAppTheme
canvasLegUpperLeft	drivers/qt/TeAppTheme.h	/^	TeCoord2D canvasLegUpperLeft()$/;"	f	class:TeAppTheme
canvasLegUpperLeft	drivers/qt/TeAppTheme.h	/^	void canvasLegUpperLeft(TeCoord2D c)$/;"	f	class:TeAppTheme
canvasLegUpperLeft_	drivers/qt/TeAppTheme.h	/^	TeCoord2D		canvasLegUpperLeft_;	\/\/legend�s upper left point  $/;"	m	class:TeAppTheme
canvasLegWidth	drivers/qt/TeAppTheme.h	/^	double canvasLegWidth()$/;"	f	class:TeAppTheme
canvasLegWidth	drivers/qt/TeAppTheme.h	/^	void canvasLegWidth(double w)$/;"	f	class:TeAppTheme
canvasLegWidth_	drivers/qt/TeAppTheme.h	/^	double			canvasLegWidth_;		\/\/legend width$/;"	m	class:TeAppTheme
canvasProjection_	drivers/qt/TeQtCanvas.h	/^	TeProjection*	canvasProjection_;$/;"	m	class:TeQtCanvas
canvas_	drivers/qt/TeQtAnimaThread.h	/^	TeQtCanvas*	canvas_;$/;"	m	class:TeQtAnimaThread
canvas_	drivers/qt/TeQtTextEdit.h	/^	TeQtCanvas*			canvas_;$/;"	m	class:TeQtTextEdit
capacity_	kernel/TeCoverageDecoderCacheLRU.h	/^    unsigned int capacity_; \/\/!< Cache capacity$/;"	m	class:TeCoverageDecoderCacheLRU
captionStr_	kernel/TeStdIOProgress.h	/^	string captionStr_;$/;"	m	class:TeStdIOProgress
cda_def	drivers/Oracle/OCI/include/ocidfn.h	/^struct cda_def {$/;"	s
cda_head	drivers/Oracle/OCI/include/ocidfn.h	/^struct cda_head {$/;"	s
cdateFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void cdateFunc($/;"	f	file:
cdemodp0_ORACLE	drivers/Oracle/OCI/include/cdemodp0.h	31;"	d
cell	drivers/qt/TeQtGridSource.cpp	/^QVariant TeQtGridSource::cell(int row, int col)$/;"	f	class:TeQtGridSource
cell	drivers/qt/TeQtLegendSource.cpp	/^QVariant TeQtLegendSource::cell(int row, int col)$/;"	f	class:TeQtLegendSource
cellArea	drivers/SQLite/sqlite3/sqlite3.c	/^static float cellArea(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellContains	drivers/SQLite/sqlite3/sqlite3.c	/^static int cellContains(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
cellDist	functions/TeCellAlgorithms.cpp	/^struct cellDist$/;"	s	file:
cellGrowth	drivers/SQLite/sqlite3/sqlite3.c	/^static float cellGrowth(Rtree *pRtree, RtreeCell *p, RtreeCell *pCell){$/;"	f	file:
cellMargin	drivers/SQLite/sqlite3/sqlite3.c	/^static float cellMargin(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 cellOffset;      \/* Index in aData of first cell pointer *\/$/;"	m	struct:MemPage	file:
cellOverlap	drivers/SQLite/sqlite3/sqlite3.c	/^static float cellOverlap($/;"	f	file:
cellOverlapEnlargement	drivers/SQLite/sqlite3/sqlite3.c	/^static float cellOverlapEnlargement($/;"	f	file:
cellSize	drivers/SQLite/sqlite3/sqlite3.c	/^static u16 cellSize(MemPage *pPage, int iCell){$/;"	f	file:
cellSizePtr	drivers/SQLite/sqlite3/sqlite3.c	/^static u16 cellSizePtr(MemPage *pPage, u8 *pCell){$/;"	f	file:
cellStack	image_processing/TePDIRegGrowSeg.hpp	/^      CellStack cellStack;$/;"	m	class:TePDIRegGrowSeg
cellUnion	drivers/SQLite/sqlite3/sqlite3.c	/^static void cellUnion(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
cellWidget	drivers/qt/TeQtBigTable.cpp	/^QWidget* TeQtBigTable::cellWidget(int row, int col) const$/;"	f	class:TeQtBigTable
cells_	kernel/TeMultiGeometry.h	/^	TeCellSet			cells_;$/;"	m	class:TeMultiGeometry
center	kernel/TeBox.h	/^	TeCoord2D center() const$/;"	f	struct:TeBox
centroid	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::centroid(const string&  actGeomTable , TeGeomRep \/* actRep *\/, TePointSet& centroidSet, TeKeys actIds, const string& \/* actCollTable *\/)$/;"	f	class:TeOracleSpatial
centroid	kernel/TeDatabase.cpp	/^TeDatabase::centroid(const string&  actGeomTable , TeGeomRep actRep, TePointSet& centroidSet, TeKeys actIds, const string& actCollTable)$/;"	f	class:TeDatabase
centroid	kernel/TeSTInstance.cpp	/^TeSTInstance::centroid(TeCoord2D& centroid, TeGeomRep geomRep)$/;"	f	class:TeSTInstance
centroid	stat/TeStatDataStructures.h	/^	bool centroid(TeCoord2D& loc)$/;"	f	class:TeGridElement
centroidLayer_	functions/TeAddressLocator.h	/^	TeLayer* centroidLayer_;		\/\/!< Polygon or point layer to extract centroid from$/;"	m	struct:TeCentroidAddressMetadata
centroidName_	functions/TeAddressLocator.h	/^	string centroidName_;			\/\/!< This field may be the neighborhood name or zip code name$/;"	m	struct:TeCentroidAddressMetadata
chain	drivers/SQLite/sqlite3/sqlite3.c	/^    Fts3HashElem *chain;     \/* Pointer to first entry with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht	file:
chain	drivers/SQLite/sqlite3/sqlite3.c	/^    HashElem *chain;           \/* Pointer to first entry with this hash *\/$/;"	m	struct:Hash::_ht	file:
change	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::change()$/;"	f	class:TeQtMultiTextEdit
change	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::change(QPoint p, bool apxAngle)$/;"	f	class:TeQtMultiTextEdit
change	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::change()$/;"	f	class:TeQtTextEdit
change	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::change(QPoint p, bool apxAngle)$/;"	f	class:TeQtTextEdit
changeAllBrightness	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::changeAllBrightness()$/;"	f	class:TeQtColorBar
changeAllSaturation	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::changeAllSaturation()$/;"	f	class:TeQtColorBar
changeAttrList	functions/TeGeoProcessingFunctions.cpp	/^inline bool changeAttrList(TeAttributeList& attrList)$/;"	f
changeBrightness	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::changeBrightness()$/;"	f	class:TeQtColorBar
changeCntOn	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 changeCntOn;         \/* True to update the change-counter *\/$/;"	m	struct:Vdbe	file:
changeColor	drivers/qt/TeQtChartItem.cpp	/^void TeQtChartItem::changeColor(TeColor color)$/;"	f	class:TeQtChartItem
changeColorSlot	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::changeColorSlot()$/;"	f	class:TeQtColorBar
changeCountDone	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 changeCountDone;         \/* Set after incrementing the change-counter *\/$/;"	m	struct:Pager	file:
changeDistance	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::changeDistance()$/;"	f	class:TeQtColorBar
changeFunction	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::changeFunction(string function)$/;"	f	class:TeQtGLWidget
changeHue	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::changeHue()$/;"	f	class:TeQtColorBar
changeInputObjects	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::changeInputObjects(int v)$/;"	f	class:TeQtGLWidget
changeKeyAt	kernel/dynpq.h	/^	void dynamic_priority_queue<key_type>::changeKeyAt($/;"	f	class:br_stl::dynamic_priority_queue
changeObjectStatus	drivers/qt/TeApplicationUtils.cpp	/^void changeObjectStatus(ObjectInfo& info, string& uniqueId, string mode, int pointed)$/;"	f
changePortalQuery	drivers/qt/TeQtGridSource.cpp	/^bool TeQtGridSource::changePortalQuery(const string& orderBy)$/;"	f	class:TeQtGridSource
changeQuality	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::changeQuality(int v)$/;"	f	class:TeQtGLWidget
changeSaturation	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::changeSaturation()$/;"	f	class:TeQtColorBar
changeSpecialChars_	functions/TeAddressLocator.h	/^		bool changeSpecialChars_;					\/\/!< If true should replace special characters$/;"	m	class:TeAddressLocator
changeTempStorage	drivers/SQLite/sqlite3/sqlite3.c	/^static int changeTempStorage(Parse *pParse, const char *zStorageType){$/;"	f	file:
changeVec_	drivers/qt/TeQtColorBar.h	/^	vector<int> changeVec_;$/;"	m	class:TeQtColorBar
changeVisual	drivers/qt/TeQtLegendItem.cpp	/^void TeQtLegendItem::changeVisual(TeLegendEntry *legendEntry)$/;"	f	class:TeQtLegendItem
change_	drivers/qt/TeQtColorBar.h	/^	bool	change_;$/;"	m	class:TeQtColorBar
change_target_buffer_size	drivers/libjpeg/jmemdst.c	/^void change_target_buffer_size(j_compress_ptr cinfo, unsigned int new_size)$/;"	f
changes	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
changes	drivers/SQLite/sqlite3/sqlite3.c	/^static void changes($/;"	f	file:
changes	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
channel	drivers/GL/glxext.h	/^    int     channel;$/;"	m	struct:__anon95
channelsVec_	image_processing/TePDIBatchGeoMosaic.hpp	/^          std::vector< unsigned int > channelsVec_;  $/;"	m	class:TePDIBatchGeoMosaic::RastersListNodeT
charMap	drivers/SQLite/sqlite3/sqlite3.c	109389;"	d	file:
charMap	drivers/SQLite/sqlite3/sqlite3.c	109392;"	d	file:
charset	drivers/SQLite/sqlite3/sqlite3.c	/^  etByte charset;          \/* Offset into aDigits[] of the digits string *\/$/;"	m	struct:et_info	file:
charsetForm	drivers/Oracle/OCI/include/occiData.h	/^    CharSetForm charsetForm;$/;"	m	class:oracle::occi::Clob
charsetId	drivers/Oracle/OCI/include/occiData.h	/^    ub2 charsetId;$/;"	m	class:oracle::occi::Clob
chartAttributes_	drivers/qt/TeAppTheme.h	/^	vector<string>	chartAttributes_;$/;"	m	class:TeAppTheme
chartColors_	drivers/qt/TeAppTheme.h	/^	vector<TeColor> chartColors_;	$/;"	m	class:TeAppTheme
chartFunction	drivers/qt/TeAppTheme.h	/^	string chartFunction() { return chartFunction_; }$/;"	f	class:TeAppTheme
chartFunction	drivers/qt/TeAppTheme.h	/^	void chartFunction(string s) { chartFunction_ = s; }$/;"	f	class:TeAppTheme
chartFunction_	drivers/qt/TeAppTheme.h	/^	string			  chartFunction_;$/;"	m	class:TeAppTheme
chartMaxVal	drivers/qt/TeAppTheme.h	/^	double chartMaxVal() { return chartMaxVal_; }$/;"	f	class:TeAppTheme
chartMaxVal	drivers/qt/TeAppTheme.h	/^	void chartMaxVal(double n) { chartMaxVal_ = n; }$/;"	f	class:TeAppTheme
chartMaxVal_	drivers/qt/TeAppTheme.h	/^	double			  chartMaxVal_;$/;"	m	class:TeAppTheme
chartMinVal	drivers/qt/TeAppTheme.h	/^	double chartMinVal() { return chartMinVal_; }$/;"	f	class:TeAppTheme
chartMinVal	drivers/qt/TeAppTheme.h	/^	void chartMinVal(double n) { chartMinVal_ = n; }$/;"	f	class:TeAppTheme
chartMinVal_	drivers/qt/TeAppTheme.h	/^	double			  chartMinVal_;$/;"	m	class:TeAppTheme
chartObjects	drivers/qt/TeAppTheme.h	/^	TeSelectedObjects chartObjects() { return chartObjects_; };$/;"	f	class:TeAppTheme
chartObjects	drivers/qt/TeAppTheme.h	/^	void chartObjects(TeSelectedObjects n) { chartObjects_ = n; };$/;"	f	class:TeAppTheme
chartObjects_	drivers/qt/TeAppTheme.h	/^	TeSelectedObjects chartObjects_;$/;"	m	class:TeAppTheme
chartPoint_	drivers/qt/TeAppTheme.h	/^	TeCoord2D	chartPoint_;$/;"	m	class:TeAppTheme
chartSelected_	drivers/qt/TeAppTheme.h	/^	string		chartSelected_;$/;"	m	class:TeAppTheme
chartType	drivers/qt/TeAppTheme.h	/^	TeChartType	chartType() {return chartType_;}$/;"	f	class:TeAppTheme
chartType	drivers/qt/TeAppTheme.h	/^	void chartType(TeChartType n) { chartType_ = n; }$/;"	f	class:TeAppTheme
chartType_	drivers/qt/TeAppTheme.h	/^	TeChartType		  chartType_;$/;"	m	class:TeAppTheme
check	kernel/graph.h	/^	void Graph<VertexType,EdgeType>::check(std::ostream& os)$/;"	f	class:br_stl::Graph
checkActiveVdbeCnt	drivers/SQLite/sqlite3/sqlite3.c	/^static void checkActiveVdbeCnt(sqlite3 *db){$/;"	f	file:
checkActiveVdbeCnt	drivers/SQLite/sqlite3/sqlite3.c	60153;"	d	file:
checkAppendMsg	drivers/SQLite/sqlite3/sqlite3.c	/^static void checkAppendMsg($/;"	f	file:
checkColumnOverlap	drivers/SQLite/sqlite3/sqlite3.c	/^static int checkColumnOverlap(IdList *pIdList, ExprList *pEList){$/;"	f	file:
checkEdges	kernel/TeTin.cpp	/^TeTin::checkEdges(long t)$/;"	f	class:TeTin
checkError	drivers/Oracle/TeOCIConnect.cpp	/^bool TeOCIConnection::checkError(OCIError* errhp_, int status) $/;"	f	class:TeOCIConnection
checkError	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::checkError(sword status)$/;"	f	class:TeOCICursor
checkForMultiColumnSelectError	drivers/SQLite/sqlite3/sqlite3.c	/^static int checkForMultiColumnSelectError($/;"	f	file:
checkInternalParameters	dtm/TeDTMAlgorithm.cpp	/^bool TeDTMAlgorithm::checkInternalParameters() const$/;"	f	class:TeDTMAlgorithm
checkItemStateChanged	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::checkItemStateChanged(QCheckListItem *checkListItem, bool visible)$/;"	f	class:TeQtViewsListView
checkItemStateChanged_	drivers/qt/TeQtViewsListView.h	/^	bool				checkItemStateChanged_;$/;"	m	class:TeQtViewsListView
checkList	drivers/SQLite/sqlite3/sqlite3.c	/^static void checkList($/;"	f	file:
checkListProperties	drivers/SQLite/sqlite3/sqlite3.c	/^static void checkListProperties(sqlite3 *db){$/;"	f	file:
checkListProperties	drivers/SQLite/sqlite3/sqlite3.c	113566;"	d	file:
checkMaximaPoints	image_processing/TePDIOFMatching.cpp	/^bool TePDIOFMatching::checkMaximaPoints( $/;"	f	class:TePDIOFMatching
checkPage	drivers/SQLite/sqlite3/sqlite3.c	/^static void checkPage(PgHdr *pPg){$/;"	f	file:
checkPtrmap	drivers/SQLite/sqlite3/sqlite3.c	/^static void checkPtrmap($/;"	f	file:
checkRef	drivers/SQLite/sqlite3/sqlite3.c	/^static int checkRef(IntegrityCk *pCheck, Pgno iPage, char *zContext){$/;"	f	file:
checkSavepointCount	drivers/SQLite/sqlite3/sqlite3.c	/^static int checkSavepointCount(sqlite3 *db){$/;"	f	file:
checkSchema	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 checkSchema;      \/* Causes schema cookie check after an error *\/$/;"	m	struct:Parse	file:
checkTPs	image_processing/TePDICorrelationMatching.cpp	/^bool TePDICorrelationMatching::checkTPs( $/;"	f	class:TePDICorrelationMatching
checkTPs	image_processing/TePDIMIMatching.cpp	/^bool TePDIMIMatching::checkTPs( $/;"	f	class:TePDIMIMatching
checkTPs	image_processing/TePDIOFMatching.cpp	/^bool TePDIOFMatching::checkTPs( $/;"	f	class:TePDIOFMatching
checkTopology	kernel/TeTin.cpp	/^TeTin::checkTopology()$/;"	f	class:TeTin
checkTreePage	drivers/SQLite/sqlite3/sqlite3.c	/^static int checkTreePage($/;"	f	file:
checkedVector	kernel/checkvec.h	/^		checkedVector() {$/;"	f	class:br_stl::checkedVector
checkedVector	kernel/checkvec.h	/^		checkedVector(size_type n, const T& value = T())$/;"	f	class:br_stl::checkedVector
checkedVector	kernel/checkvec.h	/^	class checkedVector : public std::vector<T>$/;"	c	namespace:br_stl
checkmap	kernel/TeDecoderTIFF.cpp	/^static int checkmap(int n, unsigned short *r, unsigned short *g, unsigned short *b,long val)$/;"	f	file:
childPtrSize	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 childPtrSize;     \/* 0 if leaf==1.  4 if leaf==0 *\/$/;"	m	struct:MemPage	file:
child_	kernel/TeRTree.h	/^				TeRTreeNode* child_;		\/\/!< Child node pointer.$/;"	m	union:TeSAM::TeRTreeNode::TeRTreeBranch::__anon34
chk	drivers/Oracle/OCI/include/ocidfn.h	/^    ub1           chk;$/;"	m	struct:cda_def
chk	drivers/Oracle/OCI/include/ocidfn.h	/^    ub1           chk;$/;"	m	struct:cda_head
chooseBestPixelType	image_processing/TePDIUtils.cpp	/^  TeDataType chooseBestPixelType( TePDITypes::TePDIRasterVectorType& rasters )$/;"	f	namespace:TePDIUtils
chooseLeaf	kernel/TeRTree.h	/^bool TeRTree<DATATYPE, MAXNODES, MINNODES>::chooseLeaf(const TeBox& rect, const DATATYPE& data, TeRTreeNodeType* node, TeRTreeNodeType** newNode, int level)$/;"	f	class:TeSAM::TeRTree
chr_	kernel/TeQuerierParams.h	/^	TeChronon				chr_;		\/\/!< chronon used to generate time frames $/;"	m	class:TeQuerierParams
chronon	kernel/TeQuerierParams.h	/^	virtual TeChronon chronon()	{ return chr_; }$/;"	f	class:TeQuerierParams
chronon	kernel/TeTime.cpp	/^TeTime::chronon (TeChronon c)$/;"	f	class:TeTime
chronon	kernel/TeTime.h	/^	TeChronon chronon() const {return chronon_;}$/;"	f	class:TeTime
chronon_	kernel/TeTemporalSeries.h	/^  	TeChronon			chronon_;		\/\/! Chronon used to generated the series$/;"	m	class:TeTSParams
chronon_	kernel/TeTime.h	/^	TeChronon	chronon_;$/;"	m	class:TeTime
ckBase	drivers/SQLite/sqlite3/sqlite3.c	/^  int ckBase;          \/* Base register of data during check constraints *\/$/;"	m	struct:Parse	file:
ckptLock	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 ckptLock;               \/* True if holding a checkpoint lock *\/$/;"	m	struct:Wal	file:
ckptSyncFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 ckptSyncFlags;           \/* SYNC_NORMAL or SYNC_FULL for checkpoint *\/$/;"	m	struct:Pager	file:
cksumInit	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 cksumInit;              \/* Quasi-random value added to every checksum *\/$/;"	m	struct:Pager	file:
classId_	image_processing/TePDISAMClassifier.hpp	/^          unsigned int classId_;$/;"	m	class:TePDISAMClassifier::ClassReferenceData
classId_	image_processing/TePDISAMClassifier.hpp	/^          unsigned int classId_;$/;"	m	class:TePDISAMClassifier::ClassSpectralSamples
class_count	image_processing/TePDIKMeansClas.hpp	/^    int class_count;$/;"	m	class:TePDIKMeansClas
classesMap	kernel/TeComputeAttributeStrategies.h	/^			map<string, string> classesMap;$/;"	m	class:TeCategoryMajorityStrategy
classesMap_	kernel/TeComputeAttributeStrategies.h	/^			map<string, string> classesMap_;$/;"	m	class:TeMajorityCategoryStrategy
classesMap_	kernel/TeComputeAttributeStrategies.h	/^		map<string, string> classesMap_;$/;"	m	class:TeCategoryPercentageStrategy
classify	kernel/TeRTree.h	/^void TeRTree<DATATYPE, MAXNODES, MINNODES>::classify(int i, int group, TePartitionVars& p) const$/;"	f	class:TeSAM::TeRTree
classifyPixels	image_processing/TePDIKMeansClas.cpp	/^bool TePDIKMeansClas::classifyPixels( int l1, int l2, int c1, int c2)$/;"	f	class:TePDIKMeansClas
classifySamples	image_processing/TePDIKMeansClas.cpp	/^void TePDIKMeansClas::classifySamples()$/;"	f	class:TePDIKMeansClas
cleanAddressesFound	functions/TeAddressLocator.cpp	/^void TeAddressLocator::cleanAddressesFound(const string& locName, vector<TeAddressDescription>& addressesFound, const bool& disabletype, const bool& disabletitle, const bool& disablepreposition)$/;"	f	class:TeAddressLocator
cleanIntersections	kernel/TeFragmentation.cpp	/^inline void cleanIntersections(TeINTERSECTOR2::TeVectorBoundaryIP& ips, const TeCoord2D& refCoord)$/;"	f
cleanLegend	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::cleanLegend()$/;"	f	class:TeAbstractTheme
clear	drivers/Firebird/ibpp/core/ibpp.h	/^		void clear()$/;"	f	class:IBPP::Ptr
clear	drivers/Firebird/ibpp/core/user.cpp	/^void IBPP::User::clear()$/;"	f	class:IBPP::User
clear	drivers/MrSID/TeDecoderMrSID.cpp	/^TeDecoderMrSID::clear()$/;"	f	class:TeDecoderMrSID
clear	drivers/Oracle/OCI/include/occiObjects.h	/^void Ref<T>::clear ()$/;"	f	class:oracle::occi::Ref
clear	drivers/gdal/TeGDALDecoder.cpp	/^bool TeGDALDecoder::clear()$/;"	f	class:TeGDALDecoder
clear	drivers/qt/TeDecoderQtImage.cpp	/^TeDecoderQtImage::clear()$/;"	f	class:TeDecoderQtImage
clear	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::clear()$/;"	f	class:TeQtCanvas
clear	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::clear(TeBox box)$/;"	f	class:TeQtCanvas
clear	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::clear()$/;"	f	class:TeQtGrid
clear	drivers/qt/TeQtTextEdit.h	/^	void clear() {textVec_.clear(); geomIdSet_.clear();}$/;"	f	class:TeQtMultiTextEdit
clear	drivers/spl/PluginsParametersContainer.h	/^void PluginsParametersContainer< PluginsParametersContainerKeyT >::clear()$/;"	f	class:PluginsParametersContainer
clear	image_processing/TePDICluster.cpp	/^void TePDICluster::clear()$/;"	f	class:TePDICluster
clear	image_processing/TePDIHaralick.cpp	/^void TePDIHaralick::clear()$/;"	f	class:TePDIHaralick
clear	image_processing/TePDIHistogram.cpp	/^void TePDIHistogram::clear()$/;"	f	class:TePDIHistogram
clear	image_processing/TePDIInterpolator.cpp	/^void TePDIInterpolator::clear()$/;"	f	class:TePDIInterpolator
clear	image_processing/TePDIJointHistogram.cpp	/^void TePDIJointHistogram::clear()$/;"	f	class:TePDIJointHistogram
clear	image_processing/TePDIMatrix.hpp	/^  void TePDIMatrix< ElementType >::clear()$/;"	f	class:TePDIMatrix
clear	image_processing/TePDIParaSegSegmentsBlock.cpp	/^void TePDIParaSegSegmentsBlock::clear()$/;"	f	class:TePDIParaSegSegmentsBlock
clear	image_processing/TePDIRaster2Vector.cpp	/^void TePDIRaster2Vector::clear()$/;"	f	class:TePDIRaster2Vector
clear	image_processing/TePDIRaster2Vector.hpp	/^      void clear()$/;"	f	class:TePDIRaster2VectorPolStruct
clear	image_processing/TePDIRasterRUBuffer.cpp	/^void TePDIRasterRUBuffer::clear()$/;"	f	class:TePDIRasterRUBuffer
clear	image_processing/TePDIStatistic.cpp	/^void TePDIStatistic::clear()$/;"	f	class:TePDIStatistic
clear	image_processing/TePDITileIndexer.hpp	/^    void clear()$/;"	f	class:TePDITileIndexer
clear	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::clear()$/;"	f	class:TeBaseSTInstance
clear	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::clear()$/;"	f	class:TeBaseSTInstanceSet
clear	kernel/TeComposite.h	/^	void clear ()$/;"	f	class:TeComposite
clear	kernel/TeConnectionPool.cpp	/^void TeConnectionPool::clear()$/;"	f	class:TeConnectionPool
clear	kernel/TeCoverage.h	/^    virtual void clear()$/;"	f	class:TeCoverage
clear	kernel/TeCoverageDecoder.h	/^    virtual void clear()$/;"	f	class:TeCoverageDecoder
clear	kernel/TeCoverageDecoderCacheLRU.h	/^    virtual void clear()$/;"	f	class:TeCoverageDecoderCacheLRU
clear	kernel/TeDBConnectionsPool.cpp	/^void TeDBConnectionsPool::clear()$/;"	f	class:TeDBConnectionsPool
clear	kernel/TeDatabase.cpp	/^TeDatabase::clear()$/;"	f	class:TeDatabase
clear	kernel/TeDecoderASCIIGrid.cpp	/^TeDecoderASCIIGrid::clear()$/;"	f	class:TeDecoderASCIIGrid
clear	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::clear()$/;"	f	class:TeDecoderDatabase
clear	kernel/TeDecoderFile.cpp	/^TeDecoderFile::clear()$/;"	f	class:TeDecoderFile
clear	kernel/TeDecoderJPEG.cpp	/^TeDecoderJPEG::clear()$/;"	f	class:TeDecoderJPEG
clear	kernel/TeDecoderMemory.cpp	/^TeDecoderMemory::clear()$/;"	f	class:TeDecoderMemory
clear	kernel/TeDecoderMemoryMap.cpp	/^TeDecoderMemoryMap::clear()$/;"	f	class:TeDecoderMemoryMap
clear	kernel/TeDecoderSPR.cpp	/^TeDecoderSPR::clear()$/;"	f	class:TeDecoderSPR
clear	kernel/TeDecoderSmartMem.cpp	/^bool TeDecoderSmartMem::clear()$/;"	f	class:TeDecoderSmartMem
clear	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::clear()$/;"	f	class:TeDecoderTIFF
clear	kernel/TeDecoderVirtualMemory.cpp	/^TeDecoderVirtualMemory::clear()$/;"	f	class:TeDecoderVirtualMemory
clear	kernel/TeDecoderVirtualMemory.cpp	/^TeMemoryPage::clear()$/;"	f	class:TeMemoryPage
clear	kernel/TeGeometry.h	/^	void clear () { return; }$/;"	f	class:TeGeometryNone
clear	kernel/TeGeometry.h	/^	void clear ()$/;"	f	class:TeGeomComposite
clear	kernel/TeKdTree.h	/^		void clear(void)$/;"	f	class:TeSAM::TeBasicKdTree
clear	kernel/TeLegendEntry.cpp	/^TeLegendEntry::clear()$/;"	f	class:TeLegendEntry
clear	kernel/TeMetaModelCache.cpp	/^void TeMetaModelCache::clear()$/;"	f	class:TeMetaModelCache
clear	kernel/TeMultiContainer.h	/^void TeMultiContainer< TeMultiContainerKeyT >::clear()$/;"	f	class:TeMultiContainer
clear	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::clear()$/;"	f	class:TeMultiGeometry
clear	kernel/TeQuerier.cpp	/^TeQuerier::clear()$/;"	f	class:TeQuerier
clear	kernel/TeQuerierDB.cpp	/^TeQuerierDB::clear()$/;"	f	class:TeQuerierDB
clear	kernel/TeQuerierImpl.h	/^	virtual void clear() { return; }$/;"	f	class:TeQuerierImpl
clear	kernel/TeQuerierParams.cpp	/^TeQuerierParams::clear()$/;"	f	class:TeQuerierParams
clear	kernel/TeRTree.h	/^		void clear(void)$/;"	f	class:TeSAM::TeRTree
clear	kernel/TeRaster.cpp	/^void TeRaster::clear()$/;"	f	class:TeRaster
clear	kernel/TeRasterMemManager.cpp	/^void TeRasterMemManager::clear()$/;"	f	class:TeRasterMemManager
clear	kernel/TeSTEvent.cpp	/^TeSTEvent::clear()$/;"	f	class:TeSTEvent
clear	kernel/TeSTEvent.cpp	/^void TeSTEventSet::clear()$/;"	f	class:TeSTEventSet
clear	kernel/TeSTInstance.cpp	/^TeSTInstance::clear() $/;"	f	class:TeSTInstance
clear	kernel/TeSparseMatrix.h	/^   void clear()$/;"	f	class:TeSparseMatrix
clear	kernel/TeTable.cpp	/^void TeTable::clear ()$/;"	f	class:TeTable
clear	kernel/TeTin.h	/^	void clear()$/;"	f	class:TeTin
clear	kernel/TeViewNode.cpp	/^TeViewTree::clear()$/;"	f	class:TeViewTree
clear	kernel/TeVisual.cpp	/^TeBaseVisualParams::clear()$/;"	f	class:TeBaseVisualParams
clear	kernel/TeVisual.cpp	/^TeVisual::clear()$/;"	f	class:TeVisual
clearAll	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::clearAll()$/;"	f	class:TeQtCanvas
clearAll	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::clearAll(TeBox box)$/;"	f	class:TeQtCanvas
clearAllSharedCacheTableLocks	drivers/SQLite/sqlite3/sqlite3.c	/^static void clearAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
clearAllSharedCacheTableLocks	drivers/SQLite/sqlite3/sqlite3.c	48168;"	d	file:
clearAttList	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::clearAttList()$/;"	f	class:TeExternalTheme
clearAttList	kernel/TeTheme.h	/^	virtual void clearAttList() {sqlAttList_.clear();}$/;"	f	class:TeTheme
clearAttTableVector	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::clearAttTableVector() $/;"	f	class:TeExternalTheme
clearAttTableVector	kernel/TeTheme.h	/^	virtual void clearAttTableVector() $/;"	f	class:TeTheme
clearAwaitingJobs	kernel/TeThreadJobsManager.cpp	/^void TeThreadJobsManager::clearAwaitingJobs()$/;"	f	class:TeThreadJobsManager
clearBlockSelection	drivers/MrSID/TeDecoderMrSID.cpp	/^TeDecoderMrSID::clearBlockSelection()$/;"	f	class:TeDecoderMrSID
clearBlockSelection	kernel/TeDecoder.cpp	/^void TeDecoder::clearBlockSelection()$/;"	f	class:TeDecoder
clearBlockSelection	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::clearBlockSelection() $/;"	f	class:TeDecoderDatabase
clearBlockSelection	kernel/TeRaster.cpp	/^void TeRaster::clearBlockSelection()$/;"	f	class:TeRaster
clearCell	drivers/SQLite/sqlite3/sqlite3.c	/^static int clearCell(MemPage *pPage, unsigned char *pCell){$/;"	f	file:
clearCell	drivers/qt/TeQtBigTable.h	/^	void clearCell(int, int) {}$/;"	f	class:TeQtBigTable
clearCellWidget	drivers/qt/TeQtBigTable.h	/^	void clearCellWidget(int, int) {}$/;"	f	class:TeQtBigTable
clearColorBar	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::clearColorBar()$/;"	f	class:TeQtColorBar
clearData	kernel/TeFileTheme.cpp	/^void TeFileTheme::clearData()$/;"	f	class:TeFileTheme
clearDatabasePage	drivers/SQLite/sqlite3/sqlite3.c	/^static int clearDatabasePage($/;"	f	file:
clearImplementation	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::clearImplementation ()$/;"	f	class:TeGeneralizedProxMatrix
clearInstances	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::clearInstances()$/;"	f	class:TeBaseSTInstanceSet
clearItemStatus	kernel/TeAbstractTheme.h	/^	virtual void clearItemStatus()$/;"	f	class:TeAbstractTheme
clearNumAttList	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::clearNumAttList()$/;"	f	class:TeExternalTheme
clearNumAttList	kernel/TeTheme.h	/^	virtual void clearNumAttList() {sqlNumAttList_.clear();}$/;"	f	class:TeTheme
clearObjStatus	kernel/TeAbstractTheme.h	/^	virtual void clearObjStatus()$/;"	f	class:TeAbstractTheme
clearObjectSet	kernel/TeAbstractTheme.h	/^	virtual void clearObjectSet()$/;"	f	class:TeAbstractTheme
clearPixels	image_processing/TePDIMixModelComponent.cpp	/^void TePDIMixModelComponent::clearPixels()$/;"	f	class:TePDIMixModelComponent
clearPortal	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::clearPortal()$/;"	f	class:TeQtGrid
clearPortal	drivers/qt/TeQtGridSource.cpp	/^void TeQtGridSource::clearPortal()$/;"	f	class:TeQtGridSource
clearRGBMap	kernel/TeRasterTransform.h	/^	void clearRGBMap()$/;"	f	class:TeRasterTransform
clearRaster	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::clearRaster()$/;"	f	class:TeQtCanvas
clearSelect	drivers/SQLite/sqlite3/sqlite3.c	/^static void clearSelect(sqlite3 *db, Select *p){$/;"	f	file:
clearTempHistBuffers	image_processing/TePDIJointHistogram.cpp	/^void TePDIJointHistogram::clearTempHistBuffers()$/;"	f	class:TePDIJointHistogram
clearVectors	kernel/TeQuerierDB.cpp	/^TeQuerierDB::clearVectors()$/;"	f	class:TeQuerierDB
clearViews	kernel/TeProject.cpp	/^TeProject::clearViews()$/;"	f	class:TeProject
clearYMD_HMS_TZ	drivers/SQLite/sqlite3/sqlite3.c	/^static void clearYMD_HMS_TZ(DateTime *p){$/;"	f	file:
clear_bindings	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
clear_bindings	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
clicked	drivers/qt/TeQtDatabasesListView.cpp	/^void TeQtDatabasesListView::clicked(QListViewItem *item)$/;"	f	class:TeQtDatabasesListView
clicked	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::clicked(QListViewItem *item)$/;"	f	class:TeQtViewsListView
clobExt	drivers/Oracle/OCI/include/occiData.h	/^    void *clobExt;$/;"	m	class:oracle::occi::Clob
clone	drivers/spl/PluginsParametersContainer.h	/^      TeSharedPtr< PPCNodeInterface > clone() const$/;"	f	class:PPCNode
clone	kernel/TeExternalTheme.cpp	/^TeViewNode* TeExternalTheme::clone()$/;"	f	class:TeExternalTheme
clone	kernel/TeFileTheme.cpp	/^TeViewNode* TeFileTheme::clone()$/;"	f	class:TeFileTheme
clone	kernel/TeFunctionCallThreadJob.cpp	/^TeThreadJob* TeFunctionCallThreadJob::clone() const$/;"	f	class:TeFunctionCallThreadJob
clone	kernel/TeMultiContainer.h	/^      TeMCNodeInterface< TeMultiContainerKeyT >* clone() const$/;"	f	class:TeMCNode
clone	kernel/TePrototype.h	/^TePrototype<T>::clone ()$/;"	f	class:TePrototype
clone	kernel/TeTheme.cpp	/^TeViewNode* TeTheme::clone()$/;"	f	class:TeTheme
clone	kernel/TeViewNode.h	/^	virtual TeViewNode* clone() $/;"	f	class:TeViewNode
close	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::close()$/;"	f	class:TeFirebird
close	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::close()$/;"	f	class:TeMySQL
close	drivers/Oracle/TeOCICursor.cpp	/^void TeOCICursor::close()$/;"	f	class:TeOCICursor
close	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::close() $/;"	f	class:TeOCIOracle
close	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGConnection::close(void)$/;"	f	class:TePGConnection
close	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::close(void)$/;"	f	class:TePGRecordset
close	drivers/PostgreSQL/TePostgreSQL.cpp	/^void TePostgreSQL::close(void)$/;"	f	class:TePostgreSQL
close	drivers/SQLite/TeSQLite.cpp	/^void TeSQLite::close()$/;"	f	class:TeSQLite
close	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
close	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
close	drivers/ado/TeAdoDB.cpp	/^TeAdo::close()$/;"	f	class:TeAdo
close	drivers/shapelib/TeDriverSHPDBF.cpp	/^void TeShapefileDriver::close()$/;"	f	class:TeShapefileDriver
closeAllCursors	drivers/SQLite/sqlite3/sqlite3.c	/^static void closeAllCursors(Vdbe *p){$/;"	f	file:
closeEvent	drivers/qt/ui/animation.ui.h	/^void Animation::closeEvent( QCloseEvent * )$/;"	f	class:Animation
closePendingFds	drivers/SQLite/sqlite3/sqlite3.c	/^static void closePendingFds(unixFile *pFile){$/;"	f	file:
closeUnixFile	drivers/SQLite/sqlite3/sqlite3.c	/^static int closeUnixFile(sqlite3_file *id){$/;"	f	file:
clusterSerialized	kernel/TeCoverageImport.h	/^clusterSerialized(std::vector<SerializedPair<T> >& srcGroup, std::vector<std::vector<SerializedPair<T> > >& clusters)$/;"	f
clusters	image_processing/TePDIIsosegClas.hpp	/^    vector<TePDICluster> clusters;$/;"	m	class:TePDIIsosegClas
clusters	image_processing/TePDIKMeansClas.hpp	/^    vector<TePDICluster*> clusters;$/;"	m	class:TePDIKMeansClas
cmetadata_	functions/TeAddressLocator.h	/^		TeCentroidAddressMetadata cmetadata_;		\/\/!< Centroid metadata$/;"	m	class:TeAddressLocator
cmin	image_processing/TePDIRegGrowSeg.hpp	/^        TePDIRGSCell    *cmin[MAXCLOSECELLS];$/;"	m	class:CloserCells
cnt	drivers/SQLite/sqlite3/shell.c	/^  int cnt;               \/* Number of records displayed so far *\/$/;"	m	struct:callback_data	file:
cnt	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 cnt;          \/* Number of elements summed *\/$/;"	m	struct:SumCtx	file:
cnt	drivers/SQLite/sqlite3/sqlite3.c	/^  int cnt;                 \/* Number of times this instruction was executed *\/$/;"	m	struct:VdbeOp	file:
cnt	drivers/SQLite/sqlite3/sqlite3.c	/^  int cnt;    \/* Number of entries without a matching leave *\/$/;"	m	struct:sqlite3_debug_mutex	file:
coOcurrences_	image_processing/TePDIHaralick.hpp	/^          unsigned int coOcurrences_;                  $/;"	m	class:TePDIHaralick::GLCMMatrixCacheNodeT
code	kernel/TeException.cpp	/^TeException::code () const$/;"	f	class:TeException
codeAllEqualityTerms	drivers/SQLite/sqlite3/sqlite3.c	/^static int codeAllEqualityTerms($/;"	f	file:
codeApplyAffinity	drivers/SQLite/sqlite3/sqlite3.c	/^static void codeApplyAffinity(Parse *pParse, int base, int n, char *zAff){$/;"	f	file:
codeAttach	drivers/SQLite/sqlite3/sqlite3.c	/^static void codeAttach($/;"	f	file:
codeCompare	drivers/SQLite/sqlite3/sqlite3.c	/^static int codeCompare($/;"	f	file:
codeDistinct	drivers/SQLite/sqlite3/sqlite3.c	/^static void codeDistinct($/;"	f	file:
codeEqualityTerm	drivers/SQLite/sqlite3/sqlite3.c	/^static int codeEqualityTerm($/;"	f	file:
codeInteger	drivers/SQLite/sqlite3/sqlite3.c	/^static void codeInteger(Parse *pParse, Expr *pExpr, int negFlag, int iMem){$/;"	f	file:
codeOffset	drivers/SQLite/sqlite3/sqlite3.c	/^static void codeOffset($/;"	f	file:
codeOneLoopStart	drivers/SQLite/sqlite3/sqlite3.c	/^static Bitmask codeOneLoopStart($/;"	f	file:
codeReal	drivers/SQLite/sqlite3/sqlite3.c	/^static void codeReal(Vdbe *v, const char *z, int negateFlag, int iMem){$/;"	f	file:
codeRowTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^static TriggerPrg *codeRowTrigger($/;"	f	file:
codeTableLocks	drivers/SQLite/sqlite3/sqlite3.c	/^static void codeTableLocks(Parse *pParse){$/;"	f	file:
codeTableLocks	drivers/SQLite/sqlite3/sqlite3.c	79554;"	d	file:
codeTriggerProgram	drivers/SQLite/sqlite3/sqlite3.c	/^static int codeTriggerProgram($/;"	f	file:
code_	drivers/GTM/TeGTM.h	/^	char* code_;\/\/code deve ser char[10]$/;"	m	class:TeGTMHeader
codifyId	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::codifyId(int col, int lin, int band, int res, int subb)$/;"	f	class:TeDecoderDatabase
codifyId	kernel/TeDecoderDatabase.cpp	/^string TeDecoderDatabase::codifyId(const TeBlockIndex& idx, int res, int subb)$/;"	f	class:TeDecoderDatabase
colAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId colAttrId[COL_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
colAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType colAttrType[COL_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
colBlobName_	drivers/Oracle/TeOCICursor.h	/^	vector<string>		colBlobName_; \/\/!< name of the BLOB columns only$/;"	m	class:TeOCICursor
colCurrent_	kernel/TeRaster.h	/^			int linCurrent_, colCurrent_;$/;"	m	class:TeRaster::iterator
colMax_	kernel/TeRaster.h	/^			double				colMin_, colMax_;$/;"	m	class:TeRaster::iteratorPoly
colMin_	kernel/TeRaster.h	/^			double				colMin_, colMax_;$/;"	m	class:TeRaster::iteratorPoly
colName	drivers/Oracle/TeOCICursor.cpp	/^string TeOCICursor::colName (int colnumber) $/;"	f	class:TeOCICursor
colName_	drivers/Oracle/TeOCICursor.h	/^	vector<string>		colName_;	\/\/!< name of the columns$/;"	m	class:TeOCICursor
colNamesSet	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 colNamesSet;      \/* TRUE after OP_ColumnName has been issued to pVdbe *\/$/;"	m	struct:Parse	file:
colScale	drivers/Oracle/TeOCICursor.cpp	/^int TeOCICursor::colScale (int colnumber) $/;"	f	class:TeOCICursor
colScale_	drivers/Oracle/TeOCICursor.h	/^	vector<int>			colScale_;  \/\/!< scale of the columns$/;"	m	class:TeOCICursor
colSize	drivers/Oracle/TeOCICursor.cpp	/^int TeOCICursor::colSize (int colnumber) $/;"	f	class:TeOCICursor
colSize_	drivers/Oracle/TeOCICursor.h	/^	vector<int>			colSize_;	\/\/!< size of the columns$/;"	m	class:TeOCICursor
colToEdit_	drivers/qt/TeQtGrid.h	/^	int						colToEdit_;$/;"	m	class:TeQtGrid
colType	drivers/Oracle/TeOCICursor.cpp	/^int TeOCICursor::colType (int colnumber)   $/;"	f	class:TeOCICursor
colType_	drivers/Oracle/TeOCICursor.h	/^	vector<int>			colType_;	\/\/!< type of the columns$/;"	m	class:TeOCICursor
colUsed	drivers/SQLite/sqlite3/sqlite3.c	/^    Bitmask colUsed;  \/* Bit N (1<<N) set if column N of pTab is used *\/$/;"	m	struct:SrcList::SrcList_item	file:
colWidth	drivers/SQLite/sqlite3/shell.c	/^  int colWidth[100];     \/* Requested width of each column when in column mode*\/$/;"	m	struct:callback_data	file:
colWidth	drivers/SQLite/sqlite3/shell.c	/^  int colWidth[100];$/;"	m	struct:previous_mode_data	file:
col_	kernel/TeDecoderVirtualMemory.h	/^	int col_;$/;"	m	class:TeBlockIndex
col_	stat/TeStatDataStructures.h	/^	int col_;$/;"	m	class:TeGridElement
col_pctx	drivers/Oracle/OCI/include/cdemodp0.h	/^  ub4   col_pctx;                            \/* which column in column array *\/$/;"	m	struct:pctx
collAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId collAttrId[COLL_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
collAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType collAttrType[COLL_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
collationMatch	drivers/SQLite/sqlite3/sqlite3.c	/^static int collationMatch(const char *zColl, Index *pIndex){$/;"	f	file:
collation_needed	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines	file:
collation_needed	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines
collation_needed16	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines	file:
collation_needed16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines
collectionAuxTable	kernel/TeTheme.h	/^	virtual string collectionAuxTable() { return collectionAuxTable_; }$/;"	f	class:TeTheme
collectionAuxTable	kernel/TeTheme.h	/^	virtual void collectionAuxTable(string name) { collectionAuxTable_ = name; }$/;"	f	class:TeTheme
collectionAuxTable_	kernel/TeTheme.h	/^	string		collectionAuxTable_;$/;"	m	class:TeTheme
collectionTable	kernel/TeTheme.h	/^	virtual string	collectionTable() { return collectionTable_; }$/;"	f	class:TeTheme
collectionTable	kernel/TeTheme.h	/^	virtual void collectionTable(const string& s) { collectionTable_ = s; }$/;"	f	class:TeTheme
collectionTable_	kernel/TeTheme.h	/^	string		collectionTable_;$/;"	m	class:TeTheme
color	drivers/qt/TeQtChartItem.h	/^	TeColor color()$/;"	f	class:TeQtChartItem
color	kernel/TeGraph.cpp	/^	char color[4];$/;"	m	struct:Opt	file:
color	kernel/TeLegendEntry.cpp	/^TeLegendEntry::color( TeColor& color )$/;"	f	class:TeLegendEntry
color	kernel/TeVisual.h	/^	virtual TeColor& color() $/;"	f	class:TeVisual
color	kernel/TeVisual.h	/^	virtual void color(const TeColor& color) $/;"	f	class:TeVisual
color	utils/TeColorUtils.h	/^	void color(const TeColor& c){cor_ = c; rgb2Hsv(cor_, h_, s_, v_);}$/;"	f	struct:ColorBar
colorEdit_	drivers/qt/TeQtColorBar.h	/^	ColorBar* colorEdit_;$/;"	m	class:TeQtColorBar
colorIndexMode	drivers/GL/glcore.h	/^    GLboolean colorIndexMode;$/;"	m	struct:__GLcontextModesRec
colorIndexMode	drivers/GL/glxint.h	/^    GLboolean colorIndexMode;$/;"	m	struct:__GLXFBConfigRec
colorIndexMode	drivers/GL/internal/glcore.h	/^    GLboolean colorIndexMode;$/;"	m	struct:__GLcontextModesRec
colorMap_	drivers/qt/TeQtColorBar.h	/^	map<int, vector<TeColor> > colorMap_;$/;"	m	class:TeQtColorBar
colorVector_	kernel/TePieBar.h	/^	vector<TeColor> colorVector_;$/;"	m	class:TePieBar
color_	drivers/GTM/TeGTM.h	/^	long color_;$/;"	m	class:TeGTMLayers
color_	drivers/GTM/TeGTM.h	/^	long height_, color_, weight_, backcolor_;$/;"	m	class:TeGTMWaypointsStyles
color_	drivers/qt/TeQtChartItem.h	/^	TeColor color_;$/;"	m	class:TeQtChartItem
color_	drivers/qt/TeQtGrid.h	/^	QColor color_;$/;"	m	class:TeQtGridItem
color_	kernel/TeRedBlackTree.h	/^			TeRBNodeColor color_;$/;"	m	class:TeREDBLACK::TeRedBlackNode
color_	kernel/TeVisual.h	/^	TeColor		color_;				$/;"	m	class:TeBaseVisualParams
color_sum	image_processing/TePDIBaatz.hpp	/^  float color_sum[NUM_BANDS];$/;"	m	struct:segment
color_sum	image_processing/TePDIBaatz.hpp	/^  float color_sum[NUM_BANDS];$/;"	m	struct:segment_neighbor
column	functions/TeCellAlgorithms.cpp	/^	int column;$/;"	m	struct:procDist	file:
column	kernel/TeDecoderVirtualMemory.h	/^	int column()  const$/;"	f	class:TeBlockIndex
column	kernel/TeGeometry.h	/^	int	column () const$/;"	f	class:TeCell
column	kernel/TeGeometry.h	/^	void column (int column) $/;"	f	class:TeCell
column	kernel/TeSparseMatrix.h	/^    IndexType row, column;$/;"	m	class:MatrixElement
columnDragEnabled_	drivers/qt/TeQtGrid.h	/^	bool					columnDragEnabled_;$/;"	m	class:TeQtGrid
columnExist	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::columnExist(const string& table, const string&  column ,TeAttribute& \/*attr*\/)$/;"	f	class:TeFirebird
columnExist	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::columnExist(const string& table, const string&  column ,TeAttribute& attr)$/;"	f	class:TeMySQL
columnExist	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::columnExist(const string& table, const string& column, TeAttribute& attr)$/;"	f	class:TeOCIOracle
columnExist	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::columnExist(const string& table, const string& column, TeAttribute& attr)$/;"	f	class:TePostgreSQL
columnExist	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::columnExist(const string& table, const string& column, TeAttribute& attr)$/;"	f	class:TeSQLite
columnExist	drivers/ado/TeAdoDB.cpp	/^TeAdo::columnExist(const string& table, const string& column, TeAttribute& attr)$/;"	f	class:TeAdo
columnExist	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::columnExist(const string& table, const string& column, TeAttribute& attr)$/;"	f	class:TeFireBird
columnExist	drivers/ado/TeAdoOracle.cpp	/^TeOracle::columnExist(const string& table, const string& column, TeAttribute& attr)$/;"	f	class:TeOracle
columnExist	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::columnExist(const string& table, const string& column, TeAttribute& attr)$/;"	f	class:TeSqlServer
columnExist	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::columnExist(const string& table, const string& column, TeAttribute& attr)$/;"	f	class:TeSqlServerSpatial
columnIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static int columnIndex(Table *pTab, const char *zCol){$/;"	f	file:
columnMallocFailure	drivers/SQLite/sqlite3/sqlite3.c	/^static void columnMallocFailure(sqlite3_stmt *pStmt)$/;"	f	file:
columnMem	drivers/SQLite/sqlite3/sqlite3.c	/^static Mem *columnMem(sqlite3_stmt *pStmt, int i){$/;"	f	file:
columnName	drivers/SQLite/sqlite3/sqlite3.c	/^static const void *columnName($/;"	f	file:
columnType	drivers/SQLite/sqlite3/sqlite3.c	/^static const char *columnType($/;"	f	file:
columnWidthChanged	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::columnWidthChanged(int col)$/;"	f	class:TeQtGrid
column_	kernel/TeGeometry.h	/^	int column_;	\/\/!< the column number of this cell	$/;"	m	class:TeCell
column_blob	drivers/SQLite/sqlite3/sqlite3.c	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_blob	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_bytes	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_bytes	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_bytes16	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_bytes16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_count	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
column_count	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
column_database_name	drivers/SQLite/sqlite3/sqlite3.c	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_database_name	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_database_name16	drivers/SQLite/sqlite3/sqlite3.c	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_database_name16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_decltype	drivers/SQLite/sqlite3/sqlite3.c	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines	file:
column_decltype	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines
column_decltype16	drivers/SQLite/sqlite3/sqlite3.c	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_decltype16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_double	drivers/SQLite/sqlite3/sqlite3.c	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_double	drivers/SQLite/sqlite3/sqlite3ext.h	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_int	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_int	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_int64	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_int64	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_name	drivers/SQLite/sqlite3/sqlite3.c	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_name	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_name16	drivers/SQLite/sqlite3/sqlite3.c	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_name16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_origin_name	drivers/SQLite/sqlite3/sqlite3.c	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_origin_name	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_origin_name16	drivers/SQLite/sqlite3/sqlite3.c	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_origin_name16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_table_name	drivers/SQLite/sqlite3/sqlite3.c	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_table_name	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_table_name16	drivers/SQLite/sqlite3/sqlite3.c	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_table_name16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_text	drivers/SQLite/sqlite3/sqlite3.c	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_text	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_text16	drivers/SQLite/sqlite3/sqlite3.c	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_text16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_type	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_type	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_value	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_value	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
columns	image_processing/TePDIFilterMask.cpp	/^unsigned int TePDIFilterMask::columns() const$/;"	f	class:TePDIFilterMask
columns	kernel/TeSparseMatrix.h	/^    size_type rows, columns;$/;"	m	class:TeSparseMatrix
combinationType_	stat/TeKernelParams.h	/^	TeKernelCombinationType	combinationType_;$/;"	m	struct:TeKernelParams
combineRect	kernel/TeRTree.h	/^TeBox TeRTree<DATATYPE, MAXNODES, MINNODES>::combineRect(const TeBox& rectA, const TeBox& rectB) const$/;"	f	class:TeSAM::TeRTree
comment_nzttIdentity	drivers/Oracle/OCI/include/nzt.h	/^   text *comment_nzttIdentity;                 \/* Comment  *\/$/;"	m	struct:nzttIdentity
commentlen_nzttIdentity	drivers/Oracle/OCI/include/nzt.h	/^   ub4 commentlen_nzttIdentity;             \/* Length of comment *\/$/;"	m	struct:nzttIdentity
comments_	drivers/GTM/TeGTM.h	/^	char *name_map_, *comments_, *blob_;\/\/blob -> usado para guardar a imagem em si$/;"	m	class:TeGTMInformationImages
commitTransaction	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::commitTransaction()$/;"	f	class:TeFirebird
commitTransaction	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::commitTransaction()$/;"	f	class:TeMySQL
commitTransaction	drivers/Oracle/TeOCIOracle.cpp	/^bool TeOCIOracle::commitTransaction()$/;"	f	class:TeOCIOracle
commitTransaction	drivers/PostgreSQL/TePGInterface.cpp	/^bool TePGConnection::commitTransaction(void)$/;"	f	class:TePGConnection
commitTransaction	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::commitTransaction()$/;"	f	class:TePostgreSQL
commitTransaction	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::commitTransaction()$/;"	f	class:TeSQLite
commitTransaction	drivers/ado/TeAdoDB.cpp	/^bool TeAdo::commitTransaction()$/;"	f	class:TeAdo
commitTransaction	kernel/TeDatabase.cpp	/^TeDatabase::commitTransaction()$/;"	f	class:TeDatabase
commit_hook	drivers/SQLite/sqlite3/sqlite3.c	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
commit_hook	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
commonAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId commonAttrId[COMMON_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
commonAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType commonAttrType[COMMON_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
comp	kernel/dynpq.h	/^		IterGreater<randomAccessIterator> comp; \/\/ comparison object$/;"	m	class:br_stl::dynamic_priority_queue
compare	drivers/qt/TeQtCheckListItem.cpp	/^int TeQtCheckListItem::compare (QListViewItem *i, int col, bool ascending) const$/;"	f	class:TeQtCheckListItem
compare	drivers/qt/TeQtDatabaseItem.h	/^	int compare(QListViewItem * i, int col, bool ascending) const$/;"	f	class:TeQtDatabaseItem
compare	drivers/qt/TeQtLayerItem.h	/^	int compare(QListViewItem * i, int col, bool ascending) const$/;"	f	class:TeQtLayerItem
compare	drivers/qt/TeQtViewItem.h	/^	int compare(QListViewItem * i, int col, bool ascending) const$/;"	f	class:TeQtViewItem
compare2pow63	drivers/SQLite/sqlite3/sqlite3.c	/^static int compare2pow63(const char *zNum, int incr){$/;"	f	file:
compareGeometryPoints	image_processing/TePDIUtils.cpp	/^  bool compareGeometryPoints( const TeLinearRing& geom1, $/;"	f	namespace:TePDIUtils
compareGeometryPoints	image_processing/TePDIUtils.hpp	/^    bool compareGeometryPoints( const Geometry& geom1, const Geometry& geom2 )$/;"	f	namespace:TePDIUtils
compareInfo	drivers/SQLite/sqlite3/sqlite3.c	/^struct compareInfo {$/;"	s	file:
compare_dissimilarity	stat/TeTreeMinimum.cpp	/^compare_dissimilarity(const TeMSTGraphLink &graph_link1, const TeMSTGraphLink &graph_link2)$/;"	f
comparisonAffinity	drivers/SQLite/sqlite3/sqlite3.c	/^static char comparisonAffinity(Expr *pExpr){$/;"	f	file:
compileoption_get	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *(*compileoption_get)(int);$/;"	m	struct:sqlite3_api_routines	file:
compileoption_get	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const char *(*compileoption_get)(int);$/;"	m	struct:sqlite3_api_routines
compileoption_used	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*compileoption_used)(const char*);$/;"	m	struct:sqlite3_api_routines	file:
compileoption_used	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*compileoption_used)(const char*);$/;"	m	struct:sqlite3_api_routines
compileoptiongetFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void compileoptiongetFunc($/;"	f	file:
compileoptionusedFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void compileoptionusedFunc($/;"	f	file:
complete	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines	file:
complete	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines
complete16	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines	file:
complete16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines
components	image_processing/TePDIHants.cpp	/^  double *tmpvdouble, *tmpvdouble2, *filter, *components;$/;"	v
components	image_processing/TePDIMixModelComponentList.hpp	/^		map<unsigned, TePDIMixModelComponent> components;$/;"	m	class:TePDIMixModelComponentList
components_	kernel/TeComposite.h	/^	vector<T>	components_; \/\/!< a vector of components$/;"	m	class:TeComposite
composeRaster	image_processing/TePDIUtils.cpp	/^  bool composeRaster( $/;"	f	namespace:TePDIUtils
compositeWidgetClass	drivers/GL/vms_x_fix.h	585;"	d
compression_	kernel/TeRasterParams.h	/^	vector<TeRasterCompressionMode>	compression_;	\/\/!< compression type $/;"	m	class:TeRasterParams
compute	kernel/TeComputeAttributeStrategies.cpp	/^string TeAverageWeighByAreaStrategy::compute (TeBox box)  $/;"	f	class:TeAverageWeighByAreaStrategy
compute	kernel/TeComputeAttributeStrategies.cpp	/^string TeCategoryMajorityStrategy::compute (TeBox box)  $/;"	f	class:TeCategoryMajorityStrategy
compute	kernel/TeComputeAttributeStrategies.cpp	/^string TeCountLineObjectsStrategy::compute(TeBox box)$/;"	f	class:TeCountLineObjectsStrategy
compute	kernel/TeComputeAttributeStrategies.cpp	/^string TeCountObjectsStrategy::compute(TeBox box)$/;"	f	class:TeCountObjectsStrategy
compute	kernel/TeComputeAttributeStrategies.cpp	/^string TeCountPolygonalObjectsStrategy::compute(TeBox box)$/;"	f	class:TeCountPolygonalObjectsStrategy
compute	kernel/TeComputeAttributeStrategies.cpp	/^string TeLineLengthStrategy::compute (TeBox box)$/;"	f	class:TeLineLengthStrategy
compute	kernel/TeComputeAttributeStrategies.cpp	/^string TeMinimumDistancePolygonsStrategy::compute (TeBox box)$/;"	f	class:TeMinimumDistancePolygonsStrategy
compute	kernel/TeComputeAttributeStrategies.cpp	/^string TeMinimumDistanceStrategy::compute (TeBox box)$/;"	f	class:TeMinimumDistanceStrategy
compute	kernel/TeComputeAttributeStrategies.cpp	/^string TeSumWeighByAreaStrategy::compute (TeBox box)$/;"	f	class:TeSumWeighByAreaStrategy
compute	kernel/TeComputeAttributeStrategies.cpp	/^string TeTotalAreaPercentageStrategy::compute (TeBox box)$/;"	f	class:TeTotalAreaPercentageStrategy
compute	kernel/TeComputeAttributeStrategies.h	/^		virtual  vector<TeProperty> compute (Iterator \/*first*\/, Iterator \/*last*\/, const string& \/*columnName*\/)$/;"	f	class:TeComputeAttrStrategy
compute	kernel/TeComputeAttributeStrategies.h	/^		virtual  vector<TeProperty> compute (Iterator first, Iterator last, const string& columnName)$/;"	f	class:TeAverageStrategy
compute	kernel/TeComputeAttributeStrategies.h	/^		virtual  vector<TeProperty> compute (Iterator first, Iterator last, const string& columnName)$/;"	f	class:TeCategoryPercentageStrategy
compute	kernel/TeComputeAttributeStrategies.h	/^		virtual  vector<TeProperty> compute (Iterator first, Iterator last, const string& columnName)$/;"	f	class:TeMajorityStrategy
compute	kernel/TeComputeAttributeStrategies.h	/^		virtual  vector<TeProperty> compute (Iterator first, Iterator last, const string& columnName)$/;"	f	class:TeMinimumStrategy
compute	kernel/TeComputeAttributeStrategies.h	/^		virtual  vector<TeProperty> compute (Iterator first, Iterator last, const string& columnName)$/;"	f	class:TePresenceStrategy
compute	kernel/TeComputeAttributeStrategies.h	/^		virtual  vector<TeProperty> compute (Iterator first, Iterator last, const string& columnName)$/;"	f	class:TeSTDevStrategy
compute	kernel/TeComputeAttributeStrategies.h	/^		virtual  vector<TeProperty> compute (Iterator first, Iterator last, const string& columnName)$/;"	f	class:TeSumStrategy
compute	kernel/TeComputeAttributeStrategies.h	/^		virtual vector<TeProperty> compute (Iterator first, Iterator last, const string& columnName)$/;"	f	class:TeMajorityCategoryStrategy
compute	kernel/TeComputeAttributeStrategies.h	/^		virtual vector<TeProperty> compute (Iterator first, Iterator last, const string& columnName)$/;"	f	class:TeMaximumStrategy
computeHMS	drivers/SQLite/sqlite3/sqlite3.c	/^static void computeHMS(DateTime *p){$/;"	f	file:
computeJD	drivers/SQLite/sqlite3/sqlite3.c	/^static void computeJD(DateTime *p){$/;"	f	file:
computeLimitRegisters	drivers/SQLite/sqlite3/sqlite3.c	/^static void computeLimitRegisters(Parse *pParse, Select *p, int iBreak){$/;"	f	file:
computeParameters	kernel/Te2ndDegPolynomialGT.cpp	/^bool Te2ndDegPolynomialGT::computeParameters( TeGTParams& params ) const$/;"	f	class:Te2ndDegPolynomialGT
computeParameters	kernel/Te3rdDegPolynomialGT.cpp	/^bool Te3rdDegPolynomialGT::computeParameters( TeGTParams& params ) const$/;"	f	class:Te3rdDegPolynomialGT
computeParameters	kernel/TeAffineGT.cpp	/^bool TeAffineGT::computeParameters( TeGTParams& params ) const$/;"	f	class:TeAffineGT
computeParameters	kernel/TeProjectiveGT.cpp	/^bool TeProjectiveGT::computeParameters( TeGTParams& params ) const$/;"	f	class:TeProjectiveGT
computeType1_	stat/TeKernelParams.h	/^	TeKernelComputeType		computeType1_;$/;"	m	struct:TeKernelParams
computeType2_	stat/TeKernelParams.h	/^	TeKernelComputeType		computeType2_;$/;"	m	struct:TeKernelParams
computeYMD	drivers/SQLite/sqlite3/sqlite3.c	/^static void computeYMD(DateTime *p){$/;"	f	file:
computeYMD_HMS	drivers/SQLite/sqlite3/sqlite3.c	/^static void computeYMD_HMS(DateTime *p){$/;"	f	file:
compute_raster_mean	image_processing/TePDIGeneralizedIHSFusion.cpp	/^double compute_raster_mean(TePDITypes::TePDIRasterPtrType input_raster)$/;"	f
compute_raster_variance	image_processing/TePDIGeneralizedIHSFusion.cpp	/^double compute_raster_variance(TePDITypes::TePDIRasterPtrType input_raster, double mean)$/;"	f
con_	drivers/PostgreSQL/TePostgreSQL.h	/^		TePGConnection *con_;$/;"	m	class:TePostgreSQLPortal
conc_matrix_cache_	image_processing/TePDIHaralick.hpp	/^      GLCMMatrixCacheT conc_matrix_cache_;$/;"	m	class:TePDIHaralick
concatTableName	drivers/qt/TeAppTheme.cpp	/^void TeAppTheme::concatTableName(string& attr)$/;"	f	class:TeAppTheme
concatValues	drivers/Firebird/TeFirebird.cpp	/^string TeFirebird::concatValues(vector<string>& values, const string& unionString)$/;"	f	class:TeFirebird
concatValues	drivers/MySQL/TeMySQL.cpp	/^string TeMySQL::concatValues(vector<string>& values, const string& unionString)$/;"	f	class:TeMySQL
concatValues	drivers/Oracle/TeOCIOracle.cpp	/^string TeOCIOracle::concatValues(vector<string>& values, const string& unionString)$/;"	f	class:TeOCIOracle
concatValues	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::concatValues(vector<string>& values, const string& unionString)$/;"	f	class:TePostgreSQL
concatValues	drivers/SQLite/TeSQLite.cpp	/^string TeSQLite::concatValues(vector<string>& values, const string& unionString)$/;"	f	class:TeSQLite
concatValues	drivers/ado/TeAdoDB.cpp	/^string TeAdo::concatValues(vector<string>& values, const string& unionString)$/;"	f	class:TeAdo
conchFile	drivers/SQLite/sqlite3/sqlite3.c	/^  unixFile *conchFile;         \/* Open conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchFilePath	drivers/SQLite/sqlite3/sqlite3.c	/^  char *conchFilePath;         \/* Name of the conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchHeld	drivers/SQLite/sqlite3/sqlite3.c	/^  int conchHeld;               \/* 1 if the conch is held, -1 if lockless *\/$/;"	m	struct:proxyLockingContext	file:
condition_var_	kernel/TeThreadSignal.h	/^        pthread_cond_t condition_var_;$/;"	m	class:TeThreadSignal
cone_	drivers/qt/TeQtGLWidget.h	/^	GLuint cone_;$/;"	m	class:TeQtGLWidget
conn	drivers/Oracle/OCI/include/occiAQ.h	/^     const ConnectionImpl *conn; $/;"	m	class:oracle::occi::aq::Listener
conn	drivers/Oracle/TeOCICursor.h	/^	TeOCIConnection*	conn()		{ return connection_; }$/;"	f	class:TeOCICursor
conn_	drivers/PostgreSQL/TePGInterface.h	/^		TePGConnection* conn_;$/;"	m	class:TePGRecordset
connect	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::connect (const string& host, const string& user, const string& password, const string& database, int port)$/;"	f	class:TeFirebird
connect	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::connect (const string& host, const string& user, const string& password, const string& database, int port)$/;"	f	class:TeMySQL
connect	drivers/Oracle/TeOCIConnect.cpp	/^bool TeOCIConnection::connect(const char* dblink, const char* username, const char* password, const bool& useSDO) $/;"	f	class:TeOCIConnection
connect	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::connect(const string& host, const string& user, const string& password, const string& database, int port)$/;"	f	class:TeOCIOracle
connect	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::connect(const string& host, const string& user, const string& password, const string& database, int port)$/;"	f	class:TeOracleSpatial
connect	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::connect(const string& host, const string& user, const string& password, const string& database, int port)$/;"	f	class:TePostGIS
connect	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::connect(const string& host, const string& user, const string& password, const string& database, int port)$/;"	f	class:TePostgreSQL
connect	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::connect(pg_conn* conn)$/;"	f	class:TePostgreSQL
connect	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::connect(const string& host, const string& user, const string& password, const string& database, int port)$/;"	f	class:TeSQLite
connect	drivers/ado/TeAdoDB.cpp	/^TeAdo::connect (const string& fullDatabaseName)$/;"	f	class:TeAdo
connect	drivers/ado/TeAdoDB.cpp	/^TeAdo::connect (const string& host, const string& user, const string& password, const string& database, int \/* port *\/)$/;"	f	class:TeAdo
connect	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::connect (const string& host, const string& user, const string& password, const string& database, int port)$/;"	f	class:TeFireBird
connect	drivers/ado/TeAdoOracle.cpp	/^TeOracle::connect (const string& host, const string& user, const string& password, const string& database, int \/* port *\/)$/;"	f	class:TeOracle
connect	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::connect (const string& host, const string& user, const string& password, const string& database, int \/* port *\/)$/;"	f	class:TeSqlServer
connect	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::connect (const string& host, const string& user, const string& password, const string& database, int \/* port *\/)$/;"	f	class:TeSqlServerSpatial
connect	kernel/TeCommunicator.h	/^  bool TeCommunicator< DataType >::connect( $/;"	f	class:TeCommunicator
connect	kernel/TeDatabase.h	/^	virtual bool connect (const string&  = "") { return false; };$/;"	f	class:TeDatabase
connectNeighbors	kernel/gra_util.h	/^void connectNeighbors(Graph<Place, EdgeType>& G) {$/;"	f	namespace:br_stl
connectObjects	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::connectObjects (const string& object_id1, const string& object_id2)$/;"	f	class:TeGeneralizedProxMatrix
connectObjects	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::connectObjects (const string& object_id1, const string& object_id2, const TeProxMatrixAttributes& attr)$/;"	f	class:TeGeneralizedProxMatrix
connectObjects	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::connectObjects (const string& object_id1, const string& object_id2, const TeProxMatrixAttributes& attr)$/;"	f	class:TeProxMatrixGraphBreymann
connectVertices	kernel/graph.h	/^	void Graph<VertexType,EdgeType>::connectVertices($/;"	f	class:br_stl::Graph
connectedId	kernel/TeView.h	/^	virtual int connectedId() {return connectedId_;}$/;"	f	class:TeView
connectedId	kernel/TeView.h	/^	virtual void connectedId(int id) {connectedId_ = id;}$/;"	f	class:TeView
connectedId_	kernel/TeView.h	/^	int				connectedId_; \/\/ connected view$/;"	m	class:TeView
connected_	drivers/Oracle/TeOCIConnect.h	/^	bool	     connected_;		\/\/!< indicates if there is a connection opened or not$/;"	m	class:TeOCIConnection
connection	drivers/ado/TeAdoDB.cpp	/^TeAdo::connection (ADODB::_ConnectionPtr conn)$/;"	f	class:TeAdo
connectionString	drivers/ado/TeAdoDB.h	/^	string connectionString() { return connectionString_; }$/;"	f	class:TeAdo
connectionString_	drivers/ado/TeAdoDB.h	/^	string connectionString_;$/;"	m	class:TeAdo
connection_	drivers/Oracle/TeOCICursor.h	/^	TeOCIConnection*	connection_;		\/\/!< A pointer to a opened connection$/;"	m	class:TeOCICursor
connection_	drivers/Oracle/TeOCIOracle.h	/^	TeOCIConnection*	connection_;	\/\/!< pointer to a opened connection to ORACLE database server  $/;"	m	class:TeOCIOracle
connection_	drivers/ado/TeAdoDB.h	/^	ADODB::_ConnectionPtr	connection_;$/;"	m	class:TeAdoPortal
connection_	drivers/ado/TeAdoDB.h	/^	ADODB::_ConnectionPtr connection_;$/;"	m	class:TeAdo
connectionsSeq_	kernel/TeConnectionPool.h	/^    unsigned int connectionsSeq_; 	         \/\/!< Sequence to generate connection id$/;"	m	class:TeConnectionPool
connections_	kernel/TeCommunicator.h	/^      mutable ContainerT connections_;$/;"	m	class:TeCommunicator
connp	drivers/Oracle/OCI/include/occiData.h	/^    const ConnectionImpl *connp; $/;"	m	class:oracle::occi::Bfile
connp	drivers/Oracle/OCI/include/occiData.h	/^    const ConnectionImpl *connp; $/;"	m	class:oracle::occi::Blob
connp	drivers/Oracle/OCI/include/occiData.h	/^    const ConnectionImpl *connp; $/;"	m	class:oracle::occi::Clob
consoleInstance	kernel/TeConsoleErrorMessage.cpp	/^}consoleInstance;$/;"	v	typeref:class:TeConsoleErrorMessagePrototype
consoleInstance	kernel/TeConsoleErrorMessage.h	/^static TeConsoleErrorMessagePrototype consoleInstance;$/;"	v
const_iterator	image_processing/TePDIHistogram.hpp	/^      typedef TePDIHMapSpec::const_iterator const_iterator;      $/;"	t	class:TePDIHistogram
const_iterator	image_processing/TePDIJointHistogram.hpp	/^      typedef ConteinerT::const_iterator const_iterator;$/;"	t	class:TePDIJointHistogram
const_iterator	kernel/TeComposite.h	/^	typedef typename vector<T>::const_iterator const_iterator;$/;"	t	class:TeComposite
const_iterator	kernel/TeNeighbours.h	/^	typedef neigh_vector::const_iterator const_iterator;$/;"	t	class:TeNeighbours
const_iterator	kernel/TeSparseMatrix.h	/^   typedef typename ContainerType::const_iterator const_iterator;$/;"	t	class:TeSparseMatrix
const_iterator	kernel/graph.h	/^		typedef typename GraphType::const_iterator const_iterator;$/;"	t	class:br_stl::Graph
const_pointer	drivers/spl/PluginsParametersContainer.h	/^      typedef const TeSharedPtr< PluginsParametersContainer< PluginsParametersContainerKeyT > > const_pointer;$/;"	t	class:PluginsParametersContainer
const_pointer	image_processing/TePDIAlgorithm.hpp	/^      typedef const TeSharedPtr< TePDIAlgorithm > const_pointer;$/;"	t	class:TePDIAlgorithm
const_pointer	image_processing/TePDIAlgorithmFactory.hpp	/^      typedef const TeSharedPtr< TePDIAlgorithmFactory > const_pointer;$/;"	t	class:TePDIAlgorithmFactory
const_pointer	image_processing/TePDIBufferedFilter.hpp	/^      typedef const TeSharedPtr< TePDIBufferedFilter > const_pointer;$/;"	t	class:TePDIBufferedFilter
const_pointer	image_processing/TePDIEMClas.hpp	/^      typedef const TeSharedPtr< TePDIEMClas > const_pointer;$/;"	t	class:TePDIEMClas
const_pointer	image_processing/TePDIFilterMask.hpp	/^      typedef const TeSharedPtr< TePDIFilterMask > const_pointer;$/;"	t	class:TePDIFilterMask
const_pointer	image_processing/TePDIFusionIndexes.hpp	/^      typedef const TeSharedPtr< TePDIFusionIndexes > const_pointer;$/;"	t	class:TePDIFusionIndexes
const_pointer	image_processing/TePDIGeneralizedIHSFusion.hpp	/^      typedef const TeSharedPtr< TePDIGeneralizedIHSFusion > const_pointer;$/;"	t	class:TePDIGeneralizedIHSFusion
const_pointer	image_processing/TePDIHistogram.hpp	/^      typedef const TeSharedPtr< TePDIHistogram > const_pointer;$/;"	t	class:TePDIHistogram
const_pointer	image_processing/TePDIInterpolator.hpp	/^      typedef const TeSharedPtr< TePDIInterpolator > const_pointer;$/;"	t	class:TePDIInterpolator
const_pointer	image_processing/TePDIIsosegClas.hpp	/^    typedef const TeSharedPtr< TePDIIsosegClas > const_pointer;$/;"	t	class:TePDIIsosegClas
const_pointer	image_processing/TePDIKMeansClas.hpp	/^    typedef const TeSharedPtr< TePDIKMeansClas > const_pointer;$/;"	t	class:TePDIKMeansClas
const_pointer	image_processing/TePDILevelRemap.hpp	/^      typedef const TeSharedPtr< TePDILevelRemap > const_pointer;$/;"	t	class:TePDILevelRemap
const_pointer	image_processing/TePDILinearFilter.hpp	/^      typedef const TeSharedPtr< TePDILinearFilter > const_pointer;$/;"	t	class:TePDILinearFilter
const_pointer	image_processing/TePDIMixModelStrategy.hpp	/^      typedef const TeSharedPtr< TePDIMixModelStrategy > const_pointer;  $/;"	t	class:TePDIMixModelStrategy
const_pointer	image_processing/TePDIParameters.hpp	/^      typedef const TeSharedPtr< TePDIParameters > const_pointer;$/;"	t	class:TePDIParameters
const_pointer	image_processing/TePDIPrincoMixModelStrategy.hpp	/^ 		typedef const TeSharedPtr< TePDIPrincoMixModelStrategy > const_pointer;$/;"	t	class:TePDIPrincoMixModelStrategy
const_pointer	image_processing/TePDIRadarFilter.hpp	/^      typedef const TeSharedPtr< TePDIRadarFilter > const_pointer;$/;"	t	class:TePDIRadarFilter
const_pointer	image_processing/TePDIRadarFrostFilter.hpp	/^      typedef const TeSharedPtr< TePDIRadarFrostFilter > const_pointer;$/;"	t	class:TePDIRadarFrostFilter
const_pointer	image_processing/TePDIRadarGammaFilter.hpp	/^      typedef const TeSharedPtr< TePDIRadarGammaFilter > const_pointer;$/;"	t	class:TePDIRadarGammaFilter
const_pointer	image_processing/TePDIRadarKuanFilter.hpp	/^      typedef const TeSharedPtr< TePDIRadarKuanFilter > const_pointer;$/;"	t	class:TePDIRadarKuanFilter
const_pointer	image_processing/TePDIRadarLeeFilter.hpp	/^      typedef const TeSharedPtr< TePDIRadarLeeFilter > const_pointer;$/;"	t	class:TePDIRadarLeeFilter
const_pointer	image_processing/TePDIRaster2Vector.hpp	/^    typedef const TeSharedPtr< TePDIRaster2Vector > const_pointer;$/;"	t	class:TePDIRaster2Vector
const_pointer	image_processing/TePDIRgbPalette.hpp	/^      typedef const TeSharedPtr< TePDIRgbPalette > const_pointer;$/;"	t	class:TePDIRgbPalette
const_pointer	image_processing/TePDIRgbPaletteNode.hpp	/^      typedef const TeSharedPtr< TePDIRgbPaletteNode > const_pointer;$/;"	t	class:TePDIRgbPaletteNode
const_pointer	image_processing/TePDISensorSimulator.hpp	/^      typedef const TeSharedPtr< TePDISensorSimulator> const_pointer;$/;"	t	class:TePDISensorSimulator
const_pointer	image_processing/TePDIStatistic.hpp	/^      typedef const TeSharedPtr< TePDIStatistic > const_pointer;    $/;"	t	class:TePDIStatistic
const_pointer	image_processing/TePDIStrategy.hpp	/^      typedef const TeSharedPtr< TePDIStrategy > const_pointer;$/;"	t	class:TePDIStrategy
const_pointer	image_processing/TePDIStrategyFactory.hpp	/^      typedef const TeSharedPtr< TePDIStrategyFactory > const_pointer;$/;"	t	class:TePDIStrategyFactory
const_pointer	kernel/TeMappedMemory.h	/^      typedef const TeSharedPtr< TeMappedMemory > const_pointer;    $/;"	t	class:TeMappedMemory
const_pointer	kernel/TeMultiContainer.h	/^      typedef const TeSharedPtr< TeMultiContainer< TeMultiContainerKeyT > > const_pointer;$/;"	t	class:TeMultiContainer
const_reference	kernel/checkvec.h	/^		typedef typename checkedVector::const_reference const_reference;$/;"	t	class:br_stl::checkedVector
constructAutomaticIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static void constructAutomaticIndex($/;"	f	file:
constructMatrix	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::constructMatrix ()$/;"	f	class:TeGeneralizedProxMatrix
constructionParams	kernel/TeProxMatrixConstructionStrategy.h	/^	TeProxMatrixConstructionParams& constructionParams() { return params_; }$/;"	f	class:TeProxMatrixConstructionStrategy
consts	drivers/Firebird/ibpp/core/_ibpp.h	/^struct consts	\/\/ See _ibpp.cpp for initializations of these constants$/;"	s	namespace:ibpp_internals
containerPolygons_	image_processing/TePDIRaster2Vector.hpp	/^      vector<TePDIRaster2VectorPolStruct>  containerPolygons_;    $/;"	m	class:TePDIRaster2Vector
container_instance_	kernel/TeMultiContainer.h	/^      IntContainerT container_instance_;    $/;"	m	class:TeMultiContainer
contentsContextMenuEvent	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::contentsContextMenuEvent( QContextMenuEvent* e)$/;"	f	class:TeQtCanvas
contentsDragMoveEvent	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::contentsDragMoveEvent(QDragMoveEvent *e)$/;"	f	class:TeQtViewsListView
contentsDropEvent	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::contentsDropEvent(QDropEvent *e)$/;"	f	class:TeQtViewsListView
contentsMouseDoubleClickEvent	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::contentsMouseDoubleClickEvent ( QMouseEvent* e)$/;"	f	class:TeQtCanvas
contentsMouseMoveEvent	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::contentsMouseMoveEvent ( QMouseEvent* e)$/;"	f	class:TeQtCanvas
contentsMouseMoveEvent	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::contentsMouseMoveEvent(QMouseEvent* e)$/;"	f	class:TeQtViewsListView
contentsMousePressEvent	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::contentsMousePressEvent( QMouseEvent* e)$/;"	f	class:TeQtCanvas
contentsMousePressEvent	drivers/qt/TeQtDatabasesListView.cpp	/^void TeQtDatabasesListView::contentsMousePressEvent(QMouseEvent *e)$/;"	f	class:TeQtDatabasesListView
contentsMousePressEvent	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::contentsMousePressEvent(QMouseEvent *e)$/;"	f	class:TeQtViewsListView
contentsMouseReleaseEvent	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::contentsMouseReleaseEvent( QMouseEvent* e)$/;"	f	class:TeQtCanvas
contentsMouseReleaseEvent	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::contentsMouseReleaseEvent(QMouseEvent *e)$/;"	f	class:TeQtViewsListView
contextMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *contextMalloc(sqlite3_context *context, i64 nByte){$/;"	f	file:
contextMenuRequested	drivers/qt/TeQtDatabasesListView.cpp	/^void TeQtDatabasesListView::contextMenuRequested(QListViewItem *item, const QPoint&, int)$/;"	f	class:TeQtDatabasesListView
contextMenuRequested	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::contextMenuRequested(QListViewItem *item, const QPoint&, int)$/;"	f	class:TeQtViewsListView
context_db_handle	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
context_db_handle	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
continuePrompt	drivers/SQLite/sqlite3/shell.c	/^static char continuePrompt[20]; \/* Continuation prompt. default: "   ...> " *\/$/;"	v	file:
contourColor	kernel/TeVisual.h	/^	virtual TeColor& contourColor() $/;"	f	class:TeVisual
contourColor	kernel/TeVisual.h	/^	virtual void contourColor(const TeColor& color) $/;"	f	class:TeVisual
contourColor_	kernel/TeVisual.h	/^	TeColor		contourColor_;			$/;"	m	class:TeBaseVisualParams
contourStyle	kernel/TeVisual.h	/^	virtual int	contourStyle() $/;"	f	class:TeVisual
contourStyle	kernel/TeVisual.h	/^	virtual void contourStyle(int s) $/;"	f	class:TeVisual
contourSymbId_	kernel/TeVisual.h	/^	int			contourSymbId_;			$/;"	m	class:TeBaseVisualParams
contourTransparency	kernel/TeVisual.h	/^	virtual int	contourTransparency() $/;"	f	class:TeVisual
contourTransparency	kernel/TeVisual.h	/^	virtual void contourTransparency(int t) $/;"	f	class:TeVisual
contourTransparency_	kernel/TeVisual.h	/^	int			contourTransparency_;	$/;"	m	class:TeBaseVisualParams
contourWidth	kernel/TeVisual.h	/^	virtual int	contourWidth()  $/;"	f	class:TeVisual
contourWidth	kernel/TeVisual.h	/^	virtual void contourWidth(int w) $/;"	f	class:TeVisual
contourWidth_	kernel/TeVisual.h	/^	int			contourWidth_;			$/;"	m	class:TeBaseVisualParams
contrastB_	kernel/TeRasterTransform.h	/^	double contrastR_, contrastG_, contrastB_;$/;"	m	class:TeRasterTransform
contrastG_	kernel/TeRasterTransform.h	/^	double contrastR_, contrastG_, contrastB_;$/;"	m	class:TeRasterTransform
contrastM_	kernel/TeRasterTransform.h	/^	double contrastM_;$/;"	m	class:TeRasterTransform
contrastR_	kernel/TeRasterTransform.h	/^	double contrastR_, contrastG_, contrastB_;$/;"	m	class:TeRasterTransform
contribuicao_	stat/TeSemivarModelFactory.h	/^	double		contribuicao_;$/;"	m	struct:TeSemivarModelParams
conv_buf_	image_processing/TePDIBufferedFilter.hpp	/^      double** conv_buf_;$/;"	m	class:TePDIBufferedFilter
conv_buf_columns_	image_processing/TePDIBufferedFilter.hpp	/^      unsigned int conv_buf_columns_;$/;"	m	class:TePDIBufferedFilter
conv_buf_estatistics	image_processing/TePDIBufferedFilter.cpp	/^void TePDIBufferedFilter::conv_buf_estatistics( unsigned int start_line,$/;"	f	class:TePDIBufferedFilter
conv_buf_lines_	image_processing/TePDIBufferedFilter.hpp	/^      unsigned int conv_buf_lines_;$/;"	m	class:TePDIBufferedFilter
conv_buf_roolup	image_processing/TePDIBufferedFilter.cpp	/^void TePDIBufferedFilter::conv_buf_roolup( unsigned int count )$/;"	f	class:TePDIBufferedFilter
convert2MultiBand	image_processing/TePDIUtils.cpp	/^  bool convert2MultiBand( const TePDITypes::TePDIRasterPtrType& in_raster,$/;"	f	namespace:TePDIUtils
convertBlob2Char	drivers/Firebird/TeFirebird.cpp	/^void convertBlob2Char(const IBPP::Blob& blob, char*& buffer, int& size)$/;"	f
convertChar2Blob	drivers/Firebird/TeFirebird.cpp	/^void convertChar2Blob(char* buffer, const int& size, IBPP::Blob& blob)$/;"	f
convertColumnNameToUpper	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::convertColumnNameToUpper()$/;"	f	class:TeAddressLocator
convertCpPathToUtf8	drivers/SQLite/sqlite3/sqlite3.c	/^char *convertCpPathToUtf8( const char *in ){$/;"	f
convertUtf8Filename	drivers/SQLite/sqlite3/sqlite3.c	/^static void *convertUtf8Filename(const char *zFilename){$/;"	f	file:
convertUtf8PathToCp	drivers/SQLite/sqlite3/sqlite3.c	/^static char *convertUtf8PathToCp( const char *in ){$/;"	f	file:
convert_pixel_id	image_processing/TePDIBaatz.cpp	/^void convert_pixel_id(unsigned long int pixel_id, $/;"	f
convexHull	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::convexHull(const string& actGeomTable, TeGeomRep \/* actRep *\/, TeKeys& actIds, TePolygonSet& convexHullSet)$/;"	f	class:TeOracleSpatial
convexHull	kernel/TeDatabase.cpp	/^TeDatabase::convexHull(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIds, TePolygonSet& convexHullSet)$/;"	f	class:TeDatabase
convexize	kernel/TeTin.cpp	/^TeTin::convexize ()$/;"	f	class:TeTin
cookieGoto	drivers/SQLite/sqlite3/sqlite3.c	/^  int cookieGoto;      \/* Address of OP_Goto to cookie verifier subroutine *\/$/;"	m	struct:Parse	file:
cookieMask	drivers/SQLite/sqlite3/sqlite3.c	/^  yDbMask cookieMask;  \/* Bitmask of schema verified databases *\/$/;"	m	struct:Parse	file:
cookieValue	drivers/SQLite/sqlite3/sqlite3.c	/^  int cookieValue[SQLITE_MAX_ATTACHED+2];  \/* Values of cookies to verify *\/$/;"	m	struct:Parse	file:
coord2Index	kernel/TeDecoder.cpp	/^TeCoord2D TeDecoder::coord2Index (const TeCoord2D &pt)$/;"	f	class:TeDecoder
coord2Index	kernel/TeRaster.h	/^inline TeCoord2D TeRaster::coord2Index(TeCoord2D pt)$/;"	f	class:TeRaster
coord2Index	kernel/TeRasterParams.cpp	/^TeRasterParams::coord2Index (const TeCoord2D& pt) const$/;"	f	class:TeRasterParams
coord_	kernel/TeOverlayUtils.cpp	/^	TeCoord2D				coord_;$/;"	m	struct:TeSIP	file:
coords_	kernel/TeIntersector.h	/^	vector<TeCoord2D> coords_;		\/\/!< Points of intersection ocurried along these two segments (red and blue).$/;"	m	struct:TeINTERSECTOR2::TeBoundaryIP
copy	kernel/TeRasterRemap.cpp	/^bool TeRasterRemap::copy ()$/;"	f	class:TeRasterRemap
copy	kernel/TeVisual.h	/^	virtual TeVisual* copy()$/;"	f	class:TeVisual
copyAppThemeContents	drivers/qt/TeQtLegendSource.cpp	/^void TeQtLegendSource::copyAppThemeContents(const TeAppTheme& appTheme)$/;"	f	class:TeQtLegendSource
copyBreaklines	kernel/TeTin.cpp	/^TeTin::copyBreaklines(TeLineSet& breaklines)$/;"	f	class:TeTin
copyContext	drivers/GL/glcore.h	/^    GLboolean (*copyContext)(__GLcontext *dst, const __GLcontext *src, GLuint mask);$/;"	m	struct:__GLexportsRec
copyContext	drivers/GL/internal/glcore.h	/^    GLboolean (*copyContext)(__GLcontext *dst, const __GLcontext *src, GLuint mask);$/;"	m	struct:__GLexportsRec
copyElements	kernel/TeGeometry.cpp	/^TeLineSet::copyElements ( const TeLineSet& other )$/;"	f	class:TeLineSet
copyElements	kernel/TeGeometry.cpp	/^TePolygon::copyElements ( const TePolygon& other )$/;"	f	class:TePolygon
copyElements	kernel/TeGeometry.cpp	/^TePolygonSet::copyElements ( const TePolygonSet& other )$/;"	f	class:TePolygonSet
copyElements	kernel/TeGeometry.h	/^	void copyElements ( const TeGeomComposite& other )$/;"	f	class:TeGeomComposite
copyKey	drivers/SQLite/sqlite3/sqlite3.c	/^  char copyKey;           \/* True if copy of key made on insert *\/$/;"	m	struct:Fts3Hash	file:
copyNodeContent	drivers/SQLite/sqlite3/sqlite3.c	/^static void copyNodeContent(MemPage *pFrom, MemPage *pTo, int *pRC){$/;"	f	file:
copyPanArea	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPanArea(int x, int y)$/;"	f	class:TeQtCanvas
copyPayload	drivers/SQLite/sqlite3/sqlite3.c	/^static int copyPayload($/;"	f	file:
copyPixmap0To	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap0To(QPaintDevice* dev)$/;"	f	class:TeQtCanvas
copyPixmap0ToPixmap1	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap0ToPixmap1()$/;"	f	class:TeQtCanvas
copyPixmap0ToPixmap1	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap0ToPixmap1(int ulx, int uly, int w, int h)$/;"	f	class:TeQtCanvas
copyPixmap0ToPrinter	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap0ToPrinter()$/;"	f	class:TeQtCanvas
copyPixmap0ToWindow	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap0ToWindow()$/;"	f	class:TeQtCanvas
copyPixmap0ToWindow	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap0ToWindow(int ulx, int uly, int w, int h)$/;"	f	class:TeQtCanvas
copyPixmap1ToPixmap0	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap1ToPixmap0()$/;"	f	class:TeQtCanvas
copyPixmap1ToPixmap0	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap1ToPixmap0(int ulx, int uly, int w, int h)$/;"	f	class:TeQtCanvas
copyPixmap1ToPixmap2	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap1ToPixmap2()$/;"	f	class:TeQtCanvas
copyPixmap1ToPixmap2	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap1ToPixmap2(int ulx, int uly, int w, int h)$/;"	f	class:TeQtCanvas
copyPixmap1ToWindow	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap1ToWindow()$/;"	f	class:TeQtCanvas
copyPixmap2ToPixmap1	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap2ToPixmap1()$/;"	f	class:TeQtCanvas
copyPixmap2ToPixmap1	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmap2ToPixmap1(int ulx, int uly, int w, int h)$/;"	f	class:TeQtCanvas
copyPixmapToPrinter	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::copyPixmapToPrinter()$/;"	f	class:TeQtGraphPlot
copyPixmapToWindow	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmapToWindow()$/;"	f	class:TeQtCanvas
copyPixmapToWindow	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::copyPixmapToWindow(QPixmap* p, int ulx, int uly, int w, int h)$/;"	f	class:TeQtCanvas
copyPixmapToWindow	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::copyPixmapToWindow ()$/;"	f	class:TeQtGraphPlot
copyPixmapToWindow	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::copyPixmapToWindow(int ulx, int uly, int w, int h)$/;"	f	class:TeQtGraphPlot
copyRemoteCollection	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::copyRemoteCollection(std::map<int, int>& mapIdLegend)$/;"	f	class:TeExternalTheme
copyTo	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme* TeAbstractTheme::copyTo(TeDatabase* outputDatabase, TeView* view, const std::string& renameTo, const int& orderIndex)$/;"	f	class:TeAbstractTheme
copy_stemmer	drivers/SQLite/sqlite3/sqlite3.c	/^static void copy_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
copyfrom	drivers/Firebird/ibpp/core/user.cpp	/^void IBPP::User::copyfrom(const IBPP::User& r)$/;"	f	class:IBPP::User
cor_	utils/TeColorUtils.h	/^	TeColor cor_;$/;"	m	struct:ColorBar
corhp	drivers/Oracle/OCI/include/occiObjects.h	/^  OCIComplexObject *corhp;$/;"	m	class:oracle::occi::RefImpl
coriml_	drivers/GTM/TeGTM.h	/^	unsigned char wli_, vwt_, gradnum_, wptnum_, usernum_, coriml_, ndatum_;$/;"	m	class:TeGTMHeader
corrWindowsWidth_	image_processing/TePDIMMIOMatching.hpp	/^        unsigned int corrWindowsWidth_;$/;"	m	struct:TePDIMMIOMatching::GenerateCorrelationFeaturesParams
correctScrolling	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::correctScrolling (QPoint &p)$/;"	f	class:TeQtCanvas
correlation_coefficient_index	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::correlation_coefficient_index(TePDITypes::TePDIRasterPtrType original_raster, int original_band, TePDITypes::TePDIRasterPtrType fused_raster, int fused_band, TeSharedPtr<double> cc)$/;"	f	class:TePDIFusionIndexes
corruptSchema	drivers/SQLite/sqlite3/sqlite3.c	/^static void corruptSchema($/;"	f	file:
count	drivers/GL/glx.h	/^    int count;			\/* if nonzero, at least this many more *\/$/;"	m	struct:__anon176
count	drivers/GL/glxext.h	/^    int count;		  \/* if nonzero, at least this many more *\/$/;"	m	struct:__anon93
count	drivers/SQLite/sqlite3/sqlite3.c	/^    int count;                 \/* Number of entries with this hash *\/$/;"	m	struct:Hash::_ht	file:
count	drivers/SQLite/sqlite3/sqlite3.c	/^    int count;               \/* Number of entries with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht	file:
count	drivers/SQLite/sqlite3/sqlite3.c	/^  int count;              \/* Number of entries in this table *\/$/;"	m	struct:Fts3Hash	file:
count	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned int count;       \/* Number of entries in this table *\/$/;"	m	struct:Hash	file:
count	kernel/TeLegendEntry.h	/^	int count() $/;"	f	class:TeLegendEntry
count	kernel/TeLegendEntry.h	/^	void count(int n) $/;"	f	class:TeLegendEntry
countFinalize	drivers/SQLite/sqlite3/sqlite3.c	/^static void countFinalize(sqlite3_context *context){$/;"	f	file:
countNumGeometries	functions/TeGeoProcessingFunctions.cpp	/^inline int countNumGeometries(TeTheme* theme, TeSelectedObjects selOb)$/;"	f
countObj	drivers/qt/TeAppTheme.h	/^	bool countObj()$/;"	f	class:TeAppTheme
countObj	drivers/qt/TeAppTheme.h	/^	void countObj(bool countobj)$/;"	f	class:TeAppTheme
countStep	drivers/SQLite/sqlite3/sqlite3.c	/^static void countStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
countWriteCursors	drivers/SQLite/sqlite3/sqlite3.c	/^static int countWriteCursors(BtShared *pBt){$/;"	f	file:
count_	kernel/TeRTree.h	/^			int count_[2];					\/\/!< Number of entries in each new page.$/;"	m	struct:TeSAM::TeRTree::TePartitionVars
count_	kernel/TeRTree.h	/^		int count_;			\/\/!< Count.$/;"	m	class:TeSAM::TeRTreeNode
count_	kernel/TeSlice.h	/^	int			count_;			\/\/! number of objects container in the interval$/;"	m	class:TeSlice
count_obj_	drivers/qt/TeAppTheme.h	/^	bool			count_obj_;$/;"	m	class:TeAppTheme
counter_	kernel/TeSharedPtr.h	/^      mutable unsigned long int volatile* counter_;$/;"	m	class:TeSharedPtr
counter_lock_instance_ptr_	kernel/TeSharedPtr.h	/^      mutable TeMutex* counter_lock_instance_ptr_;      $/;"	m	class:TeSharedPtr
covar	image_processing/TePDICluster.hpp	/^    TeMatrix covar;$/;"	m	class:TePDICluster
covariance	image_processing/TePDIRegion.hpp	/^    TeMatrix covariance;$/;"	m	class:TePDIRegion
coverSplit_	kernel/TeRTree.h	/^			TeBox coverSplit_;						\/\/!< Auxiliary box covering branchBuf.$/;"	m	struct:TeSAM::TeRTree::TePartitionVars
cover_	kernel/TeRTree.h	/^			TeBox cover_[2];				\/\/!< Auxiliary box of each new page.$/;"	m	struct:TeSAM::TeRTree::TePartitionVars
coverageId_	kernel/TeCoverageParams.h	/^    std::string coverageId_;        \/\/!< Coverage identifier$/;"	m	class:TeCoverageParams
coverageTable_	kernel/TeCoverageParams.h	/^    std::string coverageTable_;     \/\/!< Coverage table name$/;"	m	class:TeCoverageParams
covered	drivers/SQLite/sqlite3/sqlite3.c	/^  u64 covered;                    \/* Mask of query phrases covered *\/$/;"	m	struct:SnippetFragment	file:
create	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::create()$/;"	f	class:TeDecoderDatabase
create	kernel/TeDecoderFile.cpp	/^TeDecoderFile::create()$/;"	f	class:TeDecoderFile
createAddressMetadataTable	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::createAddressMetadataTable(void)$/;"	f	class:TeAddressLocator
createAppThemeTable	drivers/qt/TeApplicationUtils.cpp	/^bool createAppThemeTable(TeDatabase* db, bool integrity, const string& tableName)$/;"	f
createArcGeometry	kernel/TeDatabase.cpp	/^bool TeDatabase::createArcGeometry(const string& table, const int& epsgCode)$/;"	f	class:TeDatabase
createAttrTable	kernel/TeTin.cpp	/^TeTin::createAttrTable(TeTable& attrTable, TeDatabase* db, TeLayer* layer)$/;"	f	class:TeTin
createAttributeTable	drivers/GTM/TeGTM.cpp	/^bool TeGTM::createAttributeTable(TeLayer* layer, TeAttributeList attList, std::string attrTableName, std::string objectIdAtt, $/;"	f	class:TeGTM
createAttributeTable	drivers/gdal/TeOGRDriver.cpp	/^bool TeOGRDriver::createAttributeTable(TeTable &table)$/;"	f	class:TeOGRDriver
createAttributeTable	kernel/TeGeoDataDriver.h	/^	virtual bool createAttributeTable(TeTable& table) { return false; }$/;"	f	class:TeGeoDataDriver
createAttributeTable	kernel/TeLayer.cpp	/^TeLayer::createAttributeTable(TeTable& table)$/;"	f	class:TeLayer
createAutoIncrement	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::createAutoIncrement(const std::string& table, const std::string& column)$/;"	f	class:TeFirebird
createAutoIncrementTrigger	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::createAutoIncrementTrigger(const string &tableName, const string &fieldName)$/;"	f	class:TeOCIOracle
createAutoIncrementTrigger	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::createAutoIncrementTrigger(const string &tableName, const string &fieldName)$/;"	f	class:TeFireBird
createAutoIncrementTrigger	drivers/ado/TeAdoOracle.cpp	/^TeOracle::createAutoIncrementTrigger(const string &tableName, const string &fieldName)$/;"	f	class:TeOracle
createCellGeometry	kernel/TeDatabase.cpp	/^bool TeDatabase::createCellGeometry (const string& table, const int& epsgCode)$/;"	f	class:TeDatabase
createChartParamsTable	drivers/qt/TeApplicationUtils.cpp	/^bool createChartParamsTable(TeDatabase* db, bool integrity)$/;"	f
createCollation	drivers/SQLite/sqlite3/sqlite3.c	/^static int createCollation($/;"	f	file:
createCollectionAuxTable	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::createCollectionAuxTable()$/;"	f	class:TeExternalTheme
createCollectionAuxTable	kernel/TeTheme.cpp	/^TeTheme::createCollectionAuxTable()$/;"	f	class:TeTheme
createCollectionAuxTable	kernel/TeTheme.cpp	/^TeTheme::createCollectionAuxTable(TeDatabase* db)$/;"	f	class:TeTheme
createCollectionTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createCollectionTable(const string& tableName)$/;"	f	class:TeDatabase
createConceptualModel	kernel/TeDatabase.cpp	/^TeDatabase::createConceptualModel(bool withIntegrity, bool newDatabase, bool \/* createIndex *\/)$/;"	f	class:TeDatabase
createContext	drivers/GL/dri_interface.h	/^    GLboolean (* createContext)( __DRInativeDisplay *dpy, int screenNum,$/;"	m	struct:__DRIinterfaceMethodsRec
createContext	drivers/GL/internal/dri_interface.h	/^    GLboolean (* createContext)( __DRInativeDisplay *dpy, int screenNum,$/;"	m	struct:__DRIinterfaceMethodsRec
createContextModes	drivers/GL/dri_interface.h	/^    __GLcontextModes * (*createContextModes)(unsigned count,$/;"	m	struct:__DRIinterfaceMethodsRec
createContextModes	drivers/GL/internal/dri_interface.h	/^    __GLcontextModes * (*createContextModes)(unsigned count,$/;"	m	struct:__DRIinterfaceMethodsRec
createCopy	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::createCopy ()$/;"	f	class:TeProxMatrixGraphBreymann
createCoverageLayerTable	kernel/TeCoverageImportUtils.cpp	/^createCoverageLayerTable(TeLayer* layer, std::string& tableName)$/;"	f
createCoverageMetadataTable	kernel/TeCoverageImportUtils.cpp	/^createCoverageMetadataTable(TeLayer* layer, std::string& metadataTableName)$/;"	f
createCoverageTable	kernel/TeCoverageImportUtils.cpp	/^createCoverageTable(TeLayer* layer, std::string& tableName)$/;"	f
createDBConnectionTable	kernel/TeDBConnectionsPool.cpp	/^void TeDBConnectionsPool::createDBConnectionTable(TeDatabase* db)$/;"	f	class:TeDBConnectionsPool
createDatabaseTable	kernel/TeDatabase.cpp	/^TeDatabase::createDatabaseTable()$/;"	f	class:TeDatabase
createDatumTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createDatumTable()$/;"	f	class:TeDatabase
createDefaultInterpolator	kernel/TeCoverage.h	/^    TeCoverageInterpolator<T>* createDefaultInterpolator()$/;"	f	class:TeCoverage
createDelaunay	kernel/TeTin.cpp	/^TeTin::createDelaunay()$/;"	f	class:TeTin
createDescIndex	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::createDescIndex(const string& tableName, const string& indexName, const string& columnsName)$/;"	f	class:TeFirebird
createDrawable	drivers/GL/dri_interface.h	/^    GLboolean (*createDrawable)( __DRInativeDisplay * ndpy, int screen,$/;"	m	struct:__DRIinterfaceMethodsRec
createDrawable	drivers/GL/internal/dri_interface.h	/^    GLboolean (*createDrawable)( __DRInativeDisplay * ndpy, int screen,$/;"	m	struct:__DRIinterfaceMethodsRec
createEditor	drivers/qt/TeQtBigTable.cpp	/^QWidget* TeQtBigTable::createEditor(int row, int col, bool initFromCell) const$/;"	f	class:TeQtBigTable
createEllipse	kernel/TePolygonSetProperties.cpp	/^TePolygon TePolygonSetProperties::createEllipse( vector<double> A )$/;"	f	class:TePolygonSetProperties
createExternalThemeTable	kernel/TeExternalTheme.cpp	/^int TeExternalTheme::createExternalThemeTable(TeDatabase* sourceDB)$/;"	f	class:TeExternalTheme
createFile	drivers/SQLite/sqlite3/sqlite3.c	/^static int createFile(JournalFile *p){$/;"	f	file:
createFileThemeTable	kernel/TeFileTheme.cpp	/^bool TeFileTheme::createFileThemeTable(TeDatabase* db)$/;"	f	class:TeFileTheme
createGPMMetadataTable	drivers/qt/TeApplicationUtils.cpp	/^bool createGPMMetadataTable(TeDatabase* db, const bool& integrity)$/;"	f
createGeneratorTrigger	drivers/Firebird/TeFirebird.cpp	/^void createGeneratorTrigger(TeFirebird* db)$/;"	f
createGroupingTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createGroupingTable()$/;"	f	class:TeDatabase
createImgMatrix	image_processing/TePDIMMIOMatching.cpp	/^void TePDIMMIOMatching::createImgMatrix( TeDataType dataType, $/;"	f	class:TePDIMMIOMatching
createIndex	kernel/TeDatabase.cpp	/^TeDatabase::createIndex(const string& tableName, const string& indexName, const string& columnsName)$/;"	f	class:TeDatabase
createInitialTriangles	kernel/TeTin.cpp	/^TeTin::createInitialTriangles(TeBox &box)$/;"	f	class:TeTin
createIsolinesTriangulation	kernel/TeTin.cpp	/^TeTin::createIsolinesTriangulation()$/;"	f	class:TeTin
createKernelMetadataTable	drivers/qt/TeApplicationUtils.cpp	/^bool createKernelMetadataTable(TeDatabase* db)$/;"	f
createLSBPalette	image_processing/TePDIRgbPaletteFunctions.cpp	/^  TePDIRgbPalette::pointer createLSBPalette( unsigned int levels )$/;"	f	namespace:TePDIRgbPaletteFunctions
createLUTTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createLUTTable(const string& name)$/;"	f	class:TeDatabase
createLayer	drivers/gdal/TeOGRDriver.cpp	/^bool TeOGRDriver::createLayer(TeLayer* layer, const int& rep)$/;"	f	class:TeOGRDriver
createLayer	kernel/TeGeoDataDriver.h	/^	virtual bool createLayer(TeLayer* layer, const int& rep) { return false; }$/;"	f	class:TeGeoDataDriver
createLayerMediaTable	drivers/qt/TeApplicationUtils.cpp	/^bool createLayerMediaTable(TeDatabase* db, int layerId, const string& tname)$/;"	f
createLayerTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createLayerTable ()$/;"	f	class:TeDatabase
createLayerTableTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createLayerTableTable()$/;"	f	class:TeDatabase
createLegendMapId	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::createLegendMapId(std::map<int, int>& mapIdLegend)$/;"	f	class:TeExternalTheme
createLegendTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createLegendTable ()$/;"	f	class:TeDatabase
createLineGeometry	kernel/TeDatabase.cpp	/^bool TeDatabase::createLineGeometry(const string& tableName, const int& epsgCode) $/;"	f	class:TeDatabase
createMPfile	kernel/gra_util.h	/^void createMPfile(char * Filename,$/;"	f	namespace:br_stl
createMask	drivers/SQLite/sqlite3/sqlite3.c	/^static void createMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f	file:
createMediaTable	drivers/qt/TeApplicationUtils.cpp	/^bool createMediaTable(TeDatabase* db, const string& tname)$/;"	f
createModule	drivers/SQLite/sqlite3/sqlite3.c	/^static int createModule($/;"	f	file:
createNeighbourhoodTable	drivers/qt/TeApplicationUtils.cpp	/^bool createNeighbourhoodTable(TeDatabase* db, const string& tableName)$/;"	f
createNewConnection	kernel/TeConnectionPool.cpp	/^void TeConnectionPool::createNewConnection() {$/;"	f	class:TeConnectionPool
createNewContext	drivers/GL/dri_interface.h	/^    void * (*createNewContext)(__DRInativeDisplay *dpy, const __GLcontextModes *modes,$/;"	m	struct:__DRIscreenRec
createNewContext	drivers/GL/internal/dri_interface.h	/^    void * (*createNewContext)(__DRInativeDisplay *dpy, const __GLcontextModes *modes,$/;"	m	struct:__DRIscreenRec
createNewCoverageLayer	kernel/TeCoverageImportUtils.cpp	/^TeLayer* createNewCoverageLayer(TeDatabase* database, const std::string& layerName, TeProjection* projection)$/;"	f
createNewDiskFile	image_processing/TePDIMatrix.hpp	/^  bool TePDIMatrix< ElementType >::createNewDiskFile( unsigned long int size,$/;"	f	class:TePDIMatrix
createNewDiskFile	kernel/TeMappedMemory.cpp	/^bool TeMappedMemory::createNewDiskFile( const std::string& filename,$/;"	f	class:TeMappedMemory
createNewDiskFile	kernel/TeRasterMemManager.cpp	/^bool TeRasterMemManager::createNewDiskFile( unsigned long int size,$/;"	f	class:TeRasterMemManager
createNewDrawable	drivers/GL/dri_interface.h	/^    void *(*createNewDrawable)(__DRInativeDisplay *dpy, const __GLcontextModes *modes,$/;"	m	struct:__DRIscreenRec
createNewDrawable	drivers/GL/internal/dri_interface.h	/^    void *(*createNewDrawable)(__DRInativeDisplay *dpy, const __GLcontextModes *modes,$/;"	m	struct:__DRIscreenRec
createNodeGeometry	kernel/TeDatabase.cpp	/^bool TeDatabase::createNodeGeometry(const string& table, const int& epsgCode)$/;"	f	class:TeDatabase
createPixmap	drivers/qt/TeQtLegendItem.cpp	/^QPixmap TeQtLegendItem::createPixmap()$/;"	f	class:TeQtLegendItem
createPixmap	drivers/qt/TeQtLegendSource.cpp	/^QPixmap TeQtLegendSource::createPixmap(int row)$/;"	f	class:TeQtLegendSource
createPointGeometry	kernel/TeDatabase.cpp	/^bool TeDatabase::createPointGeometry(const string& table, const int& epsgCode)$/;"	f	class:TeDatabase
createPointSet	kernel/TeTin.cpp	/^TeTin::createPointSet(TePointSet& ps, TeTable& atttable, TeLayer* layer, TeDatabase* db)$/;"	f	class:TeTin
createPolygon	kernel/TeTin.cpp	/^TeTin::createPolygon(TePolygonSet ps, TeTable& attTable, int t, TeCoord2D& pt0,$/;"	f	class:TeTin
createPolygon	kernel/TeTin.cpp	/^TeTin::createPolygon(TePolygonSet ps, TeTable& attTable, int t, TeTinVertex vert0,$/;"	f	class:TeTin
createPolygonGeometry	kernel/TeDatabase.cpp	/^bool TeDatabase::createPolygonGeometry(const string& tableName, const int& epsgCode)$/;"	f	class:TeDatabase
createProjectTable	kernel/TeDatabase.cpp	/^TeDatabase::createProjectTable()$/;"	f	class:TeDatabase
createProjectViewTable	kernel/TeDatabase.cpp	/^TeDatabase::createProjectViewTable()$/;"	f	class:TeDatabase
createProjectionTable	kernel/TeDatabase.cpp	/^TeDatabase::createProjectionTable ()$/;"	f	class:TeDatabase
createRasterGeometry	kernel/TeDatabase.cpp	/^bool TeDatabase::createRasterGeometry(const string& tableName)$/;"	f	class:TeDatabase
createRasterMetadataTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createRasterMetadataTable(const string& tableName)$/;"	f	class:TeDatabase
createRasterTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createRasterTable(const string& tableName)$/;"	f	class:TeDatabase
createRasterVisual	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::createRasterVisual(TeRaster* rst)$/;"	f	class:TeAbstractTheme
createRasterVisual	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::createRasterVisual(TeRaster* rst)$/;"	f	class:TeExternalTheme
createRasterVisual	kernel/TeTheme.cpp	/^void TeTheme::createRasterVisual(TeRaster* rst)$/;"	f	class:TeTheme
createRelation	drivers/Firebird/TeFirebird.h	/^	bool createRelation (const string& \/* relName *\/, const string& \/* table *\/, const string& \/* fieldName *\/,$/;"	f	class:TeFirebird
createRelation	drivers/MySQL/TeMySQL.h	/^	bool createRelation (const string& \/* relName *\/, const string& \/* table *\/, const string& \/* fieldName *\/,$/;"	f	class:TeMySQL
createRelation	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::createRelation (const string& name, const string& table, const string& fieldName, const string& relatedTable, const string& relatedField, bool cascadeDeletion)$/;"	f	class:TeOCIOracle
createRelation	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::createRelation(const string& relName, const string& table, const string& fieldName, const string& relatedTable, const string& relatedField, bool cascadeDeletion)$/;"	f	class:TePostgreSQL
createRelation	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::createRelation(const string& relName, const string& table, const string& fieldName, const string& relatedTable, const string& relatedField, bool cascadeDeletion)$/;"	f	class:TeSQLite
createRelation	drivers/ado/TeAdoDB.cpp	/^TeAdo::createRelation (const string& relationName, $/;"	f	class:TeAdo
createRelation	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::createRelation (const string& name, const string& table, const string& fieldName, const string& relatedTable, const string& relatedField, bool cascadeDeletion)$/;"	f	class:TeFireBird
createRelation	drivers/ado/TeAdoOracle.cpp	/^TeOracle::createRelation (const string& name, const string& table, const string& fieldName, const string& relatedTable, const string& relatedField, bool cascadeDeletion)$/;"	f	class:TeOracle
createRelation	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::createRelation (const string& name, const string& table, const string& fieldName, const string& relatedTable, const string& relatedField, bool cascadeDeletion)$/;"	f	class:TeSqlServer
createRepresentationTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createRepresentationTable ()$/;"	f	class:TeDatabase
createSFSThemeTable	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::createSFSThemeTable(TeDatabase* sourceDB)$/;"	f	class:TeSFSTheme
createSRSTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createSRSTable()$/;"	f	class:TeDatabase
createSampleSet	kernel/TeTin.cpp	/^TeTin::createSampleSet(TeSampleSet& sample)$/;"	f	class:TeTin
createSegsBlkFromLImg	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^bool TePDIParaSegRegGrowStrategy::createSegsBlkFromLImg( $/;"	f	class:TePDIParaSegRegGrowStrategy
createSequence	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::createSequence(const string &tableName)$/;"	f	class:TeOCIOracle
createSequence	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::createSequence(const string &tableName)$/;"	f	class:TeFireBird
createSequence	drivers/ado/TeAdoOracle.cpp	/^TeOracle::createSequence(const string &tableName)$/;"	f	class:TeOracle
createSmallerAngleTriangulation	kernel/TeTin.cpp	/^TeTin::createSmallerAngleTriangulation()$/;"	f	class:TeTin
createSpatialIndex	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::createSpatialIndex(const string& table, const string& columns, TeSpatialIndexType \/*type*\/, short \/*level*\/, short \/*tile*\/)$/;"	f	class:TeFirebird
createSpatialIndex	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::createSpatialIndex(const string &table, const string &column,TeSpatialIndexType type, short level, short tile)$/;"	f	class:TeOracleSpatial
createSpatialIndex	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::createSpatialIndex(const string& table, const string& column, TeSpatialIndexType \/*type*\/, short \/*level*\/, short \/*tile*\/)$/;"	f	class:TePostGIS
createSpatialIndex	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::createSpatialIndex(const string& table, const string& column, TeSpatialIndexType \/* type *\/, short \/* level *\/, short \/* tile *\/)$/;"	f	class:TePostgreSQL
createSpatialIndex	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::createSpatialIndex(const string& table, const string& columns, TeSpatialIndexType \/*type*\/, short \/*level*\/, short \/*tile*\/)$/;"	f	class:TeSqlServerSpatial
createSpatialIndex	kernel/TeDatabase.cpp	/^TeDatabase::createSpatialIndex(const string& table, const string& columns, TeSpatialIndexType \/*type*\/, short \/*level*\/, short \/*tile*\/)$/;"	f	class:TeDatabase
createTIN	kernel/TeTin.cpp	/^TeTin::createTIN(TeLayer* inputLayer_ptr)$/;"	f	class:TeTin
createTIN	kernel/TeTin.cpp	/^TeTin::createTIN(TeLayer* inputLayer_ptr, TePolygonSet &ps)$/;"	f	class:TeTin
createTIN	kernel/TeTin.cpp	/^TeTin::createTIN(TeSampleSet& sampleSet, TeContourLineSet& contourSet)$/;"	f	class:TeTin
createTable	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::createTable(const string& table, TeAttributeList &attr)$/;"	f	class:TeFirebird
createTable	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::createTable(const string& table, TeAttributeList &attr)$/;"	f	class:TeMySQL
createTable	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::createTable(const string& table, TeAttributeList &attr)$/;"	f	class:TeOCIOracle
createTable	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::createTable(const string& table, TeAttributeList &attr)$/;"	f	class:TeOracleSpatial
createTable	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::createTable(const string& table, TeAttributeList &attr)$/;"	f	class:TePostGIS
createTable	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::createTable(const string& table, TeAttributeList &attr)$/;"	f	class:TePostgreSQL
createTable	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::createTable(const string& table, TeAttributeList &attr)$/;"	f	class:TeSQLite
createTable	drivers/ado/TeAdoDB.cpp	/^TeAdo::createTable(const string& table, TeAttributeList &attr)$/;"	f	class:TeAdo
createTable	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::createTable(const string& table, TeAttributeList &attr)$/;"	f	class:TeFireBird
createTable	drivers/ado/TeAdoOracle.cpp	/^TeOracle::createTable(const string& table, TeAttributeList &attr)$/;"	f	class:TeOracle
createTable	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::createTable(const string& table, TeAttributeList &attr)$/;"	f	class:TeSqlServer
createTable	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::createTable(const string& table, TeAttributeList &attr)$/;"	f	class:TeSqlServerSpatial
createTableStmt	drivers/SQLite/sqlite3/sqlite3.c	/^static char *createTableStmt(sqlite3 *db, Table *p){$/;"	f	file:
createTablesRelationTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createTablesRelationTable()$/;"	f	class:TeDatabase
createTeLayerMetadata	drivers/qt/TeApplicationUtils.cpp	/^int createTeLayerMetadata(TeDatabase* db)$/;"	f
createTeTableMetadata	drivers/qt/TeApplicationUtils.cpp	/^int createTeTableMetadata(TeDatabase* db)$/;"	f
createTeXfile	kernel/gra_util.h	/^void createTeXfile(const char * Filename,$/;"	f	namespace:br_stl
createTextGeometry	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::createTextGeometry(const string& table)$/;"	f	class:TeSqlServerSpatial
createTextGeometry	kernel/TeDatabase.cpp	/^bool TeDatabase::createTextGeometry(const string& table, const int& epsgCode)$/;"	f	class:TeDatabase
createThemeTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createThemeTable ()$/;"	f	class:TeDatabase
createThemeTablesTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createThemeTablesTable()$/;"	f	class:TeDatabase
createViewTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createViewTable ()$/;"	f	class:TeDatabase
createVisualRasterTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createVisualRasterTable()$/;"	f	class:TeDatabase
createVisualTable	kernel/TeDatabase.cpp	/^bool TeDatabase::createVisualTable()$/;"	f	class:TeDatabase
create_Avg3x3	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_Avg3x3( bool no_norm )$/;"	f	class:TePDIFilterMask
create_Avg5x5	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_Avg5x5( bool no_norm )$/;"	f	class:TePDIFilterMask
create_Avg7x7	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_Avg7x7( bool no_norm )$/;"	f	class:TePDIFilterMask
create_Dummy	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_Dummy()$/;"	f	class:TePDIFilterMask
create_E	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_E()$/;"	f	class:TePDIFilterMask
create_MorfD	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_MorfD()$/;"	f	class:TePDIFilterMask
create_MorfE	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_MorfE()$/;"	f	class:TePDIFilterMask
create_MorfM	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_MorfM()$/;"	f	class:TePDIFilterMask
create_MorfMPlus	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_MorfMPlus()$/;"	f	class:TePDIFilterMask
create_MorfMX	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_MorfMX()$/;"	f	class:TePDIFilterMask
create_MorfM_	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_MorfM_()$/;"	f	class:TePDIFilterMask
create_MorfMtot	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_MorfMtot()$/;"	f	class:TePDIFilterMask
create_N	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_N()$/;"	f	class:TePDIFilterMask
create_NDHigh	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_NDHigh()$/;"	f	class:TePDIFilterMask
create_NDLow	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_NDLow()$/;"	f	class:TePDIFilterMask
create_NDMed	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_NDMed()$/;"	f	class:TePDIFilterMask
create_NE	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_NE()$/;"	f	class:TePDIFilterMask
create_NW	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_NW()$/;"	f	class:TePDIFilterMask
create_S	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_S()$/;"	f	class:TePDIFilterMask
create_SE	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_SE()$/;"	f	class:TePDIFilterMask
create_SW	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_SW()$/;"	f	class:TePDIFilterMask
create_TMEnh	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_TMEnh( bool no_norm )$/;"	f	class:TePDIFilterMask
create_W	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::pointer TePDIFilterMask::create_W()$/;"	f	class:TePDIFilterMask
create_collation	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_collation	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation16	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_collation16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation_v2	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_collation_v2	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_function	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function16	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_function16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function_v2	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*create_function_v2)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_function_v2	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*create_function_v2)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_module	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines	file:
create_module	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines
create_module_v2	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_module_v2	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,$/;"	m	struct:sqlite3_api_routines
create_vertex_set	kernel/gra_util.h	/^void create_vertex_set(Graph<Place, EdgeType>& G,$/;"	f	namespace:br_stl
creationTime_	kernel/TeAbstractTheme.h	/^	TeTime creationTime_;$/;"	m	class:TeAbstractTheme
csize	kernel/dynpq.h	/^		index_type csize;                       \/\/ current heap size$/;"	m	class:br_stl::dynamic_priority_queue
csr	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3MultiSegReader csr;        \/* Must be right after "base" *\/$/;"	m	struct:Fts3auxCursor	file:
csrarc	drivers/Oracle/OCI/include/ocidef.h	/^   ub2     csrarc;                        \/* actual untranslated return code *\/$/;"	m	struct:csrdef
csrchk	drivers/Oracle/OCI/include/ocidef.h	/^   ub1     csrchk;                      \/* check byte = CSRCHECK - in cursor *\/$/;"	m	struct:csrdef
csrcn	drivers/Oracle/OCI/include/ocidef.h	/^   word    csrcn;                                           \/* cursor number *\/$/;"	m	struct:csrdef
csrdef	drivers/Oracle/OCI/include/ocidef.h	/^struct csrdef$/;"	s
csrdef	drivers/Oracle/OCI/include/ocidef.h	/^typedef struct csrdef csrdef;$/;"	t	typeref:struct:csrdef
csrfba	drivers/Oracle/OCI/include/ocidef.h	132;"	d
csrfbi	drivers/Oracle/OCI/include/ocidef.h	112;"	d
csrfbn	drivers/Oracle/OCI/include/ocidef.h	126;"	d
csrfbps	drivers/Oracle/OCI/include/ocidef.h	133;"	d
csrfbr	drivers/Oracle/OCI/include/ocidef.h	121;"	d
csrfbx	drivers/Oracle/OCI/include/ocidef.h	122;"	d
csrfc	drivers/Oracle/OCI/include/ocidef.h	/^   ub1     csrfc;                                           \/* function code *\/$/;"	m	struct:csrdef
csrfca	drivers/Oracle/OCI/include/ocidef.h	127;"	d
csrfcl	drivers/Oracle/OCI/include/ocidef.h	117;"	d
csrfdb	drivers/Oracle/OCI/include/ocidef.h	113;"	d
csrfdi	drivers/Oracle/OCI/include/ocidef.h	114;"	d
csrfdp	drivers/Oracle/OCI/include/ocidef.h	131;"	d
csrfdps	drivers/Oracle/OCI/include/ocidef.h	134;"	d
csrfds	drivers/Oracle/OCI/include/ocidef.h	118;"	d
csrfef	drivers/Oracle/OCI/include/ocidef.h	129;"	d
csrfex	drivers/Oracle/OCI/include/ocidef.h	111;"	d
csrffe	drivers/Oracle/OCI/include/ocidef.h	115;"	d
csrfgpi	drivers/Oracle/OCI/include/ocidef.h	135;"	d
csrflg	drivers/Oracle/OCI/include/ocidef.h	/^   ub1     csrflg;                                           \/* error action *\/$/;"	m	struct:csrdef
csrfln	drivers/Oracle/OCI/include/ocidef.h	130;"	d
csrfnm	drivers/Oracle/OCI/include/ocidef.h	119;"	d
csrfop	drivers/Oracle/OCI/include/ocidef.h	116;"	d
csrfp3	drivers/Oracle/OCI/include/ocidef.h	120;"	d
csrfpa	drivers/Oracle/OCI/include/ocidef.h	110;"	d
csrfre	drivers/Oracle/OCI/include/ocidef.h	125;"	d
csrfsd	drivers/Oracle/OCI/include/ocidef.h	128;"	d
csrfso	drivers/Oracle/OCI/include/ocidef.h	124;"	d
csrfspi	drivers/Oracle/OCI/include/ocidef.h	136;"	d
csrft	drivers/Oracle/OCI/include/ocidef.h	/^   ub2     csrft;                                           \/* function type *\/$/;"	m	struct:csrdef
csrhst	drivers/Oracle/OCI/include/ocidef.h	/^   struct hstdef *csrhst;                              \/* pointer to the hst *\/$/;"	m	struct:csrdef	typeref:struct:csrdef::hstdef
csrlfl	drivers/Oracle/OCI/include/ocidef.h	/^   ub1     csrlfl;                     \/* lda flag to indicate type of login *\/$/;"	m	struct:csrdef
csrose	drivers/Oracle/OCI/include/ocidef.h	/^   word    csrose;                                \/* os dependent error code *\/$/;"	m	struct:csrdef
csrpeo	drivers/Oracle/OCI/include/ocidef.h	/^   ub2     csrpeo;                                     \/* parse error offset *\/$/;"	m	struct:csrdef
csrrc	drivers/Oracle/OCI/include/ocidef.h	/^   b2      csrrc;                \/* return code: v2 codes, v4 codes negative *\/$/;"	m	struct:csrdef
csrrid	drivers/Oracle/OCI/include/ocidef.h	/^   riddef  csrrid;                                        \/* rowid structure *\/$/;"	m	struct:csrdef
csrrpc	drivers/Oracle/OCI/include/ocidef.h	/^   ub4     csrrpc;                                   \/* rows processed count *\/$/;"	m	struct:csrdef
csrwrn	drivers/Oracle/OCI/include/ocidef.h	/^   ub1     csrwrn;                                          \/* warning flags *\/$/;"	m	struct:csrdef
ctimeFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void ctimeFunc($/;"	f	file:
ctimestampFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void ctimestampFunc($/;"	f	file:
ctl_bpb	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR*					ctl_bpb;				\/* Address of blob parameter block *\/$/;"	m	struct:isc_blob_ctl
ctl_bpb_length	drivers/Firebird/ibpp/core/ibase.h	/^	unsigned short			ctl_bpb_length;			\/* Length of blob parameter  block *\/$/;"	m	struct:isc_blob_ctl
ctl_buffer	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_UCHAR*			ctl_buffer;				\/* Address of segment buffer *\/$/;"	m	struct:isc_blob_ctl
ctl_buffer_length	drivers/Firebird/ibpp/core/ibase.h	/^	unsigned short			ctl_buffer_length;		\/* Length of buffer *\/$/;"	m	struct:isc_blob_ctl
ctl_data	drivers/Firebird/ibpp/core/ibase.h	/^	long					ctl_data[8];			\/* Application specific data *\/$/;"	m	struct:isc_blob_ctl
ctl_from_sub_type	drivers/Firebird/ibpp/core/ibase.h	/^	short					ctl_from_sub_type;		\/* Source type *\/$/;"	m	struct:isc_blob_ctl
ctl_max_segment	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_LONG				ctl_max_segment;		\/* Length of longest segment *\/$/;"	m	struct:isc_blob_ctl
ctl_number_segments	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_LONG				ctl_number_segments;	\/* Total number of segments *\/$/;"	m	struct:isc_blob_ctl
ctl_segment_length	drivers/Firebird/ibpp/core/ibase.h	/^	unsigned short			ctl_segment_length;		\/* Length of current segment *\/$/;"	m	struct:isc_blob_ctl
ctl_source	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_STATUS	(* ctl_source)();	\/* Source filter *\/$/;"	m	struct:isc_blob_ctl
ctl_source_handle	drivers/Firebird/ibpp/core/ibase.h	/^	struct isc_blob_ctl*	ctl_source_handle;	\/* Argument to pass to source filter *\/$/;"	m	struct:isc_blob_ctl	typeref:struct:isc_blob_ctl::isc_blob_ctl
ctl_status	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_STATUS*				ctl_status;				\/* Address of status vector *\/$/;"	m	struct:isc_blob_ctl
ctl_to_sub_type	drivers/Firebird/ibpp/core/ibase.h	/^	short					ctl_to_sub_type;		\/* Target type *\/$/;"	m	struct:isc_blob_ctl
ctl_total_length	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_LONG				ctl_total_length;		\/* Total length of blob *\/$/;"	m	struct:isc_blob_ctl
ctrlFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char ctrlFlags;            \/* Behavioral bits.  UNIXFILE_* flags *\/$/;"	m	struct:unixFile	file:
curEntity	drivers/shapelib/TeQuerierSHP.h	/^	int			curEntity;		\/\/!< current entity index used to traverse all entities of the shape file$/;"	m	class:TeQuerierSHP
curItRaster_	stat/TeStatDataStructures.h	/^		TeRaster::iterator  curItRaster_; \/\/guarda iterador que pode ser de poligono ou nao$/;"	m	class:TeKernelGridSupport::iterator
curItRaster_	stat/TeStatDataStructures.h	/^    TeRaster::iteratorPoly curItRaster_; \/\/guarda iterador que pode ser de poligono ou nao$/;"	m	class:TeKernelGridSupport::iteratorPoly
curProg_	kernel/TeStdIOProgress.h	/^	int curProg_;$/;"	m	class:TeStdIOProgress
curRow_	drivers/Oracle/TeOCIOracle.h	/^	long			curRow_;	\/\/!< current row index in the record set$/;"	m	class:TeOCIOraclePortal
curRow_	drivers/PostgreSQL/TePostgreSQL.h	/^		long curRow_;		$/;"	m	class:TePostgreSQLPortal
curRow_	drivers/ado/TeAdoDB.h	/^	long					curRow_;$/;"	m	class:TeAdoPortal
currRow_	drivers/Firebird/TeFirebird.h	/^	int currRow_;$/;"	m	class:TeFirebirdPortal
curr_message_	image_processing/TePDIPIManagerGlobalSettings.hpp	/^      std::string curr_message_;          $/;"	m	class:TePDIPIManagerGlobalSettings
curr_prop_step_	image_processing/TePDIPIManagerGlobalSettings.hpp	/^      volatile unsigned long int curr_prop_step_;    $/;"	m	class:TePDIPIManagerGlobalSettings
curr_size_	kernel/TeMappedMemory.h	/^      unsigned long int curr_size_;$/;"	m	class:TeMappedMemory
curr_step_	image_processing/TePDIPIManager.hpp	/^      unsigned long int curr_step_;$/;"	m	class:TePDIPIManager
curr_step_	image_processing/TePDIPIManagerGlobalSettings.hpp	/^      volatile unsigned long int curr_step_;$/;"	m	class:TePDIPIManagerGlobalSettings
currentBox_	kernel/TeView.h	/^	TeBox			currentBox_; \/\/ current box$/;"	m	class:TeView
currentColumn	kernel/TeRaster.h	/^inline int TeRaster::iterator::currentColumn()$/;"	f	class:TeRaster::iterator
currentCount	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 currentCount;   \/* Current number of distinct checkouts *\/$/;"	m	struct:Mem5Global	file:
currentDatabaseItem	drivers/qt/TeQtDatabasesListView.h	/^	TeQtDatabaseItem* currentDatabaseItem() $/;"	f	class:TeQtDatabasesListView
currentDatabaseItem_	drivers/qt/TeQtDatabasesListView.h	/^	TeQtDatabaseItem	*currentDatabaseItem_;$/;"	m	class:TeQtDatabasesListView
currentDepth	kernel/TeViewTreeIterator.h	/^inline int TeViewTreeIterator::currentDepth()$/;"	f	class:TeViewTreeIterator
currentDepth	kernel/TeViewTreeIterator.h	/^inline int TeViewTreeRevIterator::currentDepth()$/;"	f	class:TeViewTreeRevIterator
currentIndex_	drivers/gdal/TeOGRDataSet.h	/^	int				currentIndex_; \/\/!< The current index of the ogrLayer$/;"	m	class:TeOGRDataSet
currentInstance_	drivers/gdal/TeOGRDataSet.h	/^	TeSTInstance	currentInstance_; \/\/!, The current read ogr feature$/;"	m	class:TeOGRDataSet
currentLayerItem	drivers/qt/TeQtDatabasesListView.h	/^	TeQtLayerItem* currentLayerItem() $/;"	f	class:TeQtDatabasesListView
currentLayerItem_	drivers/qt/TeQtDatabasesListView.h	/^	TeQtLayerItem		*currentLayerItem_;$/;"	m	class:TeQtDatabasesListView
currentLine	kernel/TeRaster.h	/^inline int TeRaster::iterator::currentLine()$/;"	f	class:TeRaster::iterator
currentNode	kernel/TeViewTreeIterator.h	/^inline TeViewNode* TeViewTreeIterator::currentNode()$/;"	f	class:TeViewTreeIterator
currentNode	kernel/TeViewTreeIterator.h	/^inline TeViewNode* TeViewTreeRevIterator::currentNode()$/;"	f	class:TeViewTreeRevIterator
currentOut	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 currentOut;     \/* Current checkout, including internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
currentPluginName_	drivers/spl/PluginParameters.h	/^	  std::string currentPluginName_;$/;"	m	class:PluginParameters
currentRow	drivers/Oracle/TeOCICursor.h	/^	int	currentRow() { return row_Cur_; }$/;"	f	class:TeOCICursor
currentThemeItem	drivers/qt/TeQtViewsListView.h	/^	TeQtThemeItem* currentThemeItem() $/;"	f	class:TeQtViewsListView
currentThemeItem_	drivers/qt/TeQtViewsListView.h	/^	TeQtThemeItem		*currentThemeItem_;$/;"	m	class:TeQtViewsListView
currentTheme_	kernel/TeView.h	/^	int				currentTheme_; \/\/ current theme id$/;"	m	class:TeView
currentTimeFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void currentTimeFunc($/;"	f	file:
currentUser_	drivers/spl/PluginParameters.h	/^	  std::string currentUser_;$/;"	m	class:PluginParameters
currentViewIndex_	kernel/TeProject.h	/^	int currentViewIndex_;$/;"	m	class:TeProject
currentViewItem	drivers/qt/TeQtViewsListView.h	/^	TeQtViewItem* currentViewItem() $/;"	f	class:TeQtViewsListView
currentViewItem_	drivers/qt/TeQtViewsListView.h	/^	TeQtViewItem		*currentViewItem_;$/;"	m	class:TeQtViewsListView
current_	drivers/qt/TeQtTextEdit.h	/^	int					 current_;$/;"	m	class:TeQtMultiTextEdit
current_database_ptr_	drivers/spl/PluginParameters.h	/^      TeDatabase* current_database_ptr_;$/;"	m	class:PluginParameters
current_layer_ptr_	drivers/spl/PluginParameters.h	/^      TeLayer* current_layer_ptr_;      $/;"	m	class:PluginParameters
current_theme_ptr_	drivers/spl/PluginParameters.h	/^      TeAppTheme* current_theme_ptr_;$/;"	m	class:PluginParameters
current_view_ptr_	drivers/spl/PluginParameters.h	/^      TeView* current_view_ptr_;$/;"	m	class:PluginParameters
cursor	drivers/qwt/TeQwtPlot.h	/^	TeQwtPlotPicker* cursor() {return cursor_;}$/;"	f	class:TeQwtPlot
cursorDataType_	drivers/PostgreSQL/TePGInterface.h	/^		TeCursorDataType cursorDataType_;$/;"	m	class:TePGRecordset
cursorDeclared_	drivers/PostgreSQL/TePGInterface.h	/^		bool cursorDeclared_;$/;"	m	class:TePGRecordset
cursorHoldsMutex	drivers/SQLite/sqlite3/sqlite3.c	/^static int cursorHoldsMutex(BtCursor *p){$/;"	f	file:
cursorLocation_	drivers/PostgreSQL/TePGInterface.h	/^		TeCursorLocation cursorLocation_;$/;"	m	class:TePGRecordset
cursorMode	drivers/qwt/TeQwtPlot.h	/^	void cursorMode(int m) {cursor_->mode(m);}$/;"	f	class:TeQwtPlot
cursorMode_	drivers/qt/TeQtCanvas.h	/^	CursorMode cursorMode_;$/;"	m	class:TeQtCanvas
cursorType_	drivers/PostgreSQL/TePGInterface.h	/^		TeCursorType cursorType_;$/;"	m	class:TePGRecordset
cursor_	drivers/Oracle/TeOCIOracle.h	/^	TeOCICursor		*cursor_;	\/\/!< pointer to a record set  $/;"	m	class:TeOCIOraclePortal
cursor_	drivers/qwt/TeQwtPlot.h	/^	TeQwtPlotPicker* cursor_;$/;"	m	class:TeQwtPlot
curve	kernel/TeGraph.cpp	/^    TeColor curve[CURVES_LIMIT]; \/* color of plot curves       *\/$/;"	m	struct:Grc	file:
curve	kernel/TeGraph.h	/^	char curve[CURVES_MAX][LABEL_MAX+1];$/;"	m	struct:__anon27
customNewed_	drivers/Oracle/OCI/include/occiObjects.h	/^        ub2 customNewed_;$/;"	m	class:oracle::occi::PObject
cycles	drivers/SQLite/sqlite3/sqlite3.c	/^  u64 cycles;              \/* Total time spent executing this instruction *\/$/;"	m	struct:VdbeOp	file:
d2dms	drivers/qt/TeQtCanvas.cpp	/^int d2dms(double v)$/;"	f
dValuesVec_	drivers/qt/TeQtLegendSource.h	/^    vector<double> dValuesVec_;$/;"	m	class:TeQtLegendSource
data	drivers/Oracle/OCI/include/occiData.h	/^  OCINumber data;$/;"	m	class:oracle::occi::Number
data	drivers/SQLite/sqlite3/sqlite3.c	/^  void *data;                  \/* Data associated with this element *\/$/;"	m	struct:HashElem	file:
data	drivers/SQLite/sqlite3/sqlite3.c	/^  void *data;                \/* Data associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
data	kernel/TeCoverageImport.h	/^    unsigned char* data;$/;"	m	struct:SerializedPair
data	kernel/TeDecoderMemory.cpp	/^TeDecoderMemory::data(int band)$/;"	f	class:TeDecoderMemory
dataBuffer_	kernel/TeDecoderTIFF.h	/^	unsigned char** dataBuffer_;	\/\/ buffer to hold decoded data$/;"	m	class:TeDecoderTIFF
dataDriver_	kernel/TeFileTheme.h	/^	TeGeoDataDriver*	dataDriver_;	\/\/ a pointer to decoder to get an specific data$/;"	m	class:TeFileTheme
dataInitPos_	kernel/TeDecoderFile.h	/^	unsigned long	dataInitPos_;$/;"	m	class:TeDecoderFile
dataInitPos_	kernel/TeDecoderMemoryMap.h	/^	long	dataInitPos_;$/;"	m	class:TeDecoderMemoryMap
dataPolygonRaProj_	image_processing/TePDIBatchGeoMosaic.hpp	/^          TePolygon dataPolygonRaProj_;          $/;"	m	class:TePDIBatchGeoMosaic::RastersListNodeT
dataPolygonRefProj_	image_processing/TePDIBatchGeoMosaic.hpp	/^          TePolygon dataPolygonRefProj_;$/;"	m	class:TePDIBatchGeoMosaic::RastersListNodeT
dataProjection_	drivers/qt/TeQtCanvas.h	/^	TeProjection*	dataProjection_;$/;"	m	class:TeQtCanvas
dataProjection_	kernel/TeGeoDataDriver.h	/^	TeProjection*	dataProjection_; \/\/!< The projection associated to the data$/;"	m	class:TeGeoDataDriver
dataSet	kernel/TeComputeAttributeStrategies.h	/^		vector<pair<TeCoord2D, TePoint> > dataSet;$/;"	m	class:TeMinimumDistanceStrategy
dataSet_	kernel/TeSTGeoDataDriver.h	/^	TeSTElementSet* dataSet_;$/;"	m	class:TeSTGeoDataDriver
dataSet_	kernel/TeSTGeoDataSet.h	/^	TeSTElementSet*		dataSet_;$/;"	m	class:TeSTGeoDataSet
dataSource_	drivers/qt/TeQtBigTable.h	/^	TeQtDataSource *dataSource_;$/;"	m	class:TeQtBigTable
dataType_	kernel/TeDecoderVirtualMemory.h	/^	TeDataType dataType_;	\/\/<! Pixel data type$/;"	m	class:TeMemoryPage
dataType_	kernel/TeRasterParams.h	/^	vector<TeDataType> 		dataType_;	\/\/!< computational size of elements$/;"	m	class:TeRasterParams
data_	drivers/Firebird/TeFirebird.h	/^	std::string data_,$/;"	m	class:TeFirebirdPortal
data_	drivers/PostgreSQL/TePGInterface.h	/^		string data_;$/;"	m	class:TePGRecordset
data_	kernel/TeDecoderVirtualMemory.h	/^	void*   data_;			\/\/<! Pointer to the data in memory$/;"	m	class:TeMemoryPage
data_	kernel/TeKdTree.h	/^		NodeData data_;$/;"	m	class:TeSAM::TeAdaptativeKdTreeNode
data_	kernel/TeKdTree.h	/^		NodeData data_;$/;"	m	class:TeSAM::TeKdTreeNode
data_	kernel/TeRTree.h	/^				DATATYPE data_;				\/\/!< Data Id or Ptr.$/;"	m	union:TeSAM::TeRTreeNode::TeRTreeBranch::__anon34
data_	kernel/TeRedBlackTree.h	/^			T data_;$/;"	m	class:TeREDBLACK::TeRedBlackNode
data_TeCHAR_	kernel/TeDecoderMemory.h	/^	char* data_TeCHAR_;  $/;"	m	class:TeDecoderMemory
data_TeCHAR_	kernel/TeDecoderTIFF.h	/^	char** data_TeCHAR_;  $/;"	m	class:TeDecoderTIFF
data_TeDOUBLE_	kernel/TeDecoderMemory.h	/^	double* data_TeDOUBLE_;  $/;"	m	class:TeDecoderMemory
data_TeDOUBLE_	kernel/TeDecoderTIFF.h	/^	double** data_TeDOUBLE_;  $/;"	m	class:TeDecoderTIFF
data_TeFLOAT_	kernel/TeDecoderMemory.h	/^	float* data_TeFLOAT_;$/;"	m	class:TeDecoderMemory
data_TeFLOAT_	kernel/TeDecoderTIFF.h	/^	float** data_TeFLOAT_;$/;"	m	class:TeDecoderTIFF
data_TeINTEGER_	kernel/TeDecoderMemory.h	/^	int* data_TeINTEGER_;  $/;"	m	class:TeDecoderMemory
data_TeINTEGER_	kernel/TeDecoderTIFF.h	/^	int** data_TeINTEGER_;  $/;"	m	class:TeDecoderTIFF
data_TeLONG_	kernel/TeDecoderMemory.h	/^	long* data_TeLONG_;  $/;"	m	class:TeDecoderMemory
data_TeLONG_	kernel/TeDecoderTIFF.h	/^	long** data_TeLONG_;  $/;"	m	class:TeDecoderTIFF
data_TeSHORT_	kernel/TeDecoderMemory.h	/^	short* data_TeSHORT_;  $/;"	m	class:TeDecoderMemory
data_TeSHORT_	kernel/TeDecoderTIFF.h	/^	short** data_TeSHORT_;  $/;"	m	class:TeDecoderTIFF
data_TeUNSIGNEDCHAR_	kernel/TeDecoderMemory.h	/^	unsigned char* data_TeUNSIGNEDCHAR_;  $/;"	m	class:TeDecoderMemory
data_TeUNSIGNEDCHAR_	kernel/TeDecoderTIFF.h	/^	unsigned char** data_TeUNSIGNEDCHAR_;  $/;"	m	class:TeDecoderTIFF
data_TeUNSIGNEDLONG_	kernel/TeDecoderMemory.h	/^	unsigned long* data_TeUNSIGNEDLONG_;  $/;"	m	class:TeDecoderMemory
data_TeUNSIGNEDLONG_	kernel/TeDecoderTIFF.h	/^	unsigned long** data_TeUNSIGNEDLONG_;  $/;"	m	class:TeDecoderTIFF
data_TeUNSIGNEDSHORT_	kernel/TeDecoderMemory.h	/^	unsigned short* data_TeUNSIGNEDSHORT_;  $/;"	m	class:TeDecoderMemory
data_TeUNSIGNEDSHORT_	kernel/TeDecoderTIFF.h	/^	unsigned short** data_TeUNSIGNEDSHORT_;  $/;"	m	class:TeDecoderTIFF
data_count	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
data_count	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
database	kernel/TeLayer.h	/^	virtual TeDatabase* const database() $/;"	f	class:TeLayer
databaseAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId databaseAttrId[DATABASE_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
databaseAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType databaseAttrType[DATABASE_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
databaseName	kernel/TeDatabase.h	/^	string	databaseName () $/;"	f	class:TeDatabase
database_	kernel/TeConnection.h	/^	std::string	database_;				\/\/!< Database name$/;"	m	class:TeConnection
database_	kernel/TeCoverageParams.h	/^    TeDatabase* database_;          \/\/!< Pointer to the TerraLib database$/;"	m	class:TeCoverageParams
database_	kernel/TeDatabase.h	/^        std::string				database_;				\/\/!< database name$/;"	m	class:TeDatabase
database_	kernel/TeDatabaseFactoryParams.h	/^      std::string database_;	\/\/!< Database name.$/;"	m	class:TeDatabaseFactoryParams
database_	kernel/TeRasterParams.h	/^	TeDatabase*	database_;	\/\/!< pointer to a TerraLib database where the raster is stored$/;"	m	class:TeRasterParams
database_	kernel/yyTemporal.cpp	/^TeDatabase* database_;$/;"	v
databases_	kernel/TeConnectionPool.h	/^    std::map<unsigned int, TeDatabase*> databases_;     \/\/!< A map of database connections.$/;"	m	class:TeConnectionPool
date	drivers/Oracle/OCI/include/occiData.h	/^  OCIDate date;$/;"	m	class:oracle::occi::Date
dateChronon_	kernel/TeAttribute.h	/^	TeChronon			dateChronon_;		\/\/!< date chronon$/;"	m	struct:TeAttribute
dateExt	drivers/Oracle/OCI/include/occiData.h	/^  void *dateExt;$/;"	m	class:oracle::occi::Date
dateFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void dateFunc($/;"	f	file:
dateIsNull	drivers/Oracle/OCI/include/occiData.h	/^  bool dateIsNull;$/;"	m	class:oracle::occi::Date
dateSeparator_	kernel/TeAttribute.h	/^	string				dateSeparator_;		\/\/!< date separator$/;"	m	struct:TeAttribute
dateTimeFormat_	kernel/TeAttribute.h	/^	string				dateTimeFormat_;	\/\/!< format for date and time values$/;"	m	struct:TeAttribute
date_	kernel/TeRasterParams.h	/^	TeTime			date_; \/\/!< The date of the raster$/;"	m	class:TeRasterParams
datetimeFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void datetimeFunc($/;"	f	file:
datum	kernel/TeProjection.h	/^	TeDatum datum()$/;"	f	class:TeProjection
datum	kernel/TeProjection.h	/^	TeDatum datum;       \/\/!< spheroid$/;"	m	struct:TeProjectionParams
datum	kernel/TeProjection.h	/^  inline const TeDatum& datum() const { return GPdatum; }	$/;"	f	class:TeProjection
datumList	kernel/TeDatum.cpp	/^const char* datumList [] = $/;"	v
day	kernel/TeTime.h	/^	int day() const {return ts_.tm_mday;} $/;"	f	class:TeTime
db	drivers/SQLite/sqlite3/shell.c	/^  sqlite3 *db;           \/* The database *\/$/;"	m	struct:callback_data	file:
db	drivers/SQLite/sqlite3/shell.c	/^static sqlite3 *db = 0;$/;"	v	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;                    \/* The database connection *\/$/;"	m	struct:Fts3Table	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;                   \/* The database connection *\/$/;"	m	struct:RowSet	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;                \/* Host database connection *\/$/;"	m	struct:Rtree	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;              \/* Database connection associated with this table *\/$/;"	m	struct:VTable	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;            \/* The associated database *\/$/;"	m	struct:Incrblob	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;            \/* The database connection that owns this statement *\/$/;"	m	struct:Vdbe	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;          \/* Database connection currently using this Btree *\/$/;"	m	struct:BtShared	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;         \/* Optional database for lookaside.  Can be NULL *\/$/;"	m	struct:StrAccum	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;         \/* The main database structure *\/$/;"	m	struct:Parse	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;        \/* The associated database connection *\/$/;"	m	struct:Mem	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;        \/* The database being initialized *\/$/;"	m	struct:__anon47	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;        \/* The database connection *\/$/;"	m	struct:KeyInfo	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;       \/* The database connection holding this btree *\/$/;"	m	struct:Btree	file:
db	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *db;$/;"	m	struct:analysisInfo	file:
db	kernel/TeBlockLoader.h	/^    TeDatabase* db;$/;"	m	struct:__anon30
dbFileSize	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno dbFileSize;            \/* Number of pages in the database file *\/$/;"	m	struct:Pager	file:
dbFileVers	drivers/SQLite/sqlite3/sqlite3.c	/^  char dbFileVers[16];        \/* Changes whenever database file changes *\/$/;"	m	struct:Pager	file:
dbHintSize	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno dbHintSize;            \/* Value passed to FCNTL_SIZE_HINT call *\/$/;"	m	struct:Pager	file:
dbOrigSize	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno dbOrigSize;            \/* dbSize before the current transaction *\/$/;"	m	struct:Pager	file:
dbPath	drivers/SQLite/sqlite3/sqlite3.c	/^  char *dbPath;                \/* Name of the open file *\/$/;"	m	struct:proxyLockingContext	file:
dbPath	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *dbPath;             \/* Name of the open file *\/$/;"	m	struct:afpLockingContext	file:
dbSize	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno dbSize;                \/* Number of pages in the database *\/$/;"	m	struct:Pager	file:
dbUpdate	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char dbUpdate;        \/* True if any part of database file changed *\/$/;"	m	struct:unixFile	file:
db_	drivers/qt/TeQtCanvas.h	/^	TeDatabase*	db_;$/;"	m	class:TeQtCanvas
db_	drivers/qt/TeQtDatabaseItem.h	/^	TeDatabase	*db_;$/;"	m	class:TeQtDatabaseItem
db_	drivers/qt/TeQtGLWidget.h	/^	TeDatabase* db_;$/;"	m	class:TeQtGLWidget
db_	drivers/qt/TeQtGrid.h	/^	TeDatabase				*db_;$/;"	m	class:TeQtGrid
db_	drivers/qt/TeQtLegendSource.h	/^	TeDatabase* db_;$/;"	m	class:TeQtLegendSource
db_	drivers/qt/TeQtTable.h	/^	TeDatabase			*db_;$/;"	m	class:TeQtTable
db_	functions/TeAddressLocator.h	/^		TeDatabase* db_;							\/\/!< Database connection$/;"	m	class:TeAddressLocator
db_	kernel/TeDatabase.h	/^	TeDatabase*		db_;			\/\/!< the database associated to this portal$/;"	m	class:TeDatabasePortal
db_	kernel/TeDecoderDatabase.h	/^	TeDatabase			*db_;$/;"	m	class:TeDecoderDatabase
db_	kernel/TeLayer.h	/^	TeDatabase*	db_;					\/\/!< database connection to this layer$/;"	m	class:TeLayer
db_	kernel/TePieBar.h	/^	TeDatabase		*db_;$/;"	m	class:TePieBar
db_	kernel/TeProject.h	/^	TeDatabase* db_;$/;"	m	class:TeProject
db_config	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*db_config)(sqlite3*,int,...);$/;"	m	struct:sqlite3_api_routines	file:
db_config	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*db_config)(sqlite3*,int,...);$/;"	m	struct:sqlite3_api_routines
db_handle	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
db_handle	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
db_info_types	drivers/Firebird/ibpp/core/ibase.h	/^enum db_info_types$/;"	g
db_mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *(*db_mutex)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
db_mutex	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite3_mutex *(*db_mutex)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_status	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*db_status)(sqlite3*,int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines	file:
db_status	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*db_status)(sqlite3*,int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines
dba_password	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR *dba_password;			\/* the dba password *\/$/;"	m	struct:__anon65
dba_user_name	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR *dba_user_name;		\/* the dba user name *\/$/;"	m	struct:__anon65
dbfFileName_	drivers/shapelib/TeDriverSHPDBF.h	/^	std::string dbfFileName_;$/;"	m	class:TeShapefileDriver
dblProperties_	stat/TeStatDataStructures.h	/^	vector<double> dblProperties_;$/;"	m	class:TeSTStatInstance
dbmsName	kernel/TeDatabase.h	/^	string	dbmsName () $/;"	f	class:TeDatabase
dbmsName_	kernel/TeConnection.h	/^	std::string	dbmsName_;				\/\/!< DBMS name$/;"	m	class:TeConnection
dbmsName_	kernel/TeDatabase.h	/^        std::string				dbmsName_;				\/\/!< DBMS name (Ado, MySQL, Postgres, OracleSpatial)$/;"	m	class:TeDatabase
dbms_name_	kernel/TeDatabaseFactoryParams.h	/^      std::string dbms_name_;	\/\/!< DBMS name (like PostgreSQL, PostGIS, MySQL and others).$/;"	m	class:TeDatabaseFactoryParams
dbname	drivers/PostgreSQL/TePGInterface.h	/^        const char* dbname(void) const { return PQdb(pg_connection_); }$/;"	f	class:TePGConnection
debugModeCheck	kernel/TeAgnostic.cpp	/^  bool debugModeCheck()$/;"	f	namespace:TeAgnostic
debugMutexAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3_mutex *debugMutexAlloc(int id){$/;"	f	file:
debugMutexEnd	drivers/SQLite/sqlite3/sqlite3.c	/^static int debugMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexEnter	drivers/SQLite/sqlite3/sqlite3.c	/^static void debugMutexEnter(sqlite3_mutex *pX){$/;"	f	file:
debugMutexFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void debugMutexFree(sqlite3_mutex *pX){$/;"	f	file:
debugMutexHeld	drivers/SQLite/sqlite3/sqlite3.c	/^static int debugMutexHeld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int debugMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexLeave	drivers/SQLite/sqlite3/sqlite3.c	/^static void debugMutexLeave(sqlite3_mutex *pX){$/;"	f	file:
debugMutexNotheld	drivers/SQLite/sqlite3/sqlite3.c	/^static int debugMutexNotheld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexTry	drivers/SQLite/sqlite3/sqlite3.c	/^static int debugMutexTry(sqlite3_mutex *pX){$/;"	f	file:
decName	image_processing/TePDIParaSegStrategyFactoryParams.cpp	/^std::string TePDIParaSegStrategyFactoryParams::decName() const$/;"	f	class:TePDIParaSegStrategyFactoryParams
decName	image_processing/TePDIParameters.cpp	/^std::string TePDIParameters::decName() const$/;"	f	class:TePDIParameters
decName	kernel/TeDatabaseFactoryParams.cpp	/^std::string TeDatabaseFactoryParams::decName() const$/;"	f	class:TeDatabaseFactoryParams
decName	kernel/TeGTParams.cpp	/^std::string TeGTParams::decName() const$/;"	f	class:TeGTParams
decName	kernel/TeQuerierParams.h	/^	virtual string decName() const { return strategy_; }$/;"	f	class:TeQuerierParams
decName	kernel/TeRasterParams.h	/^	const string& decName() const $/;"	f	class:TeRasterParams
decName	stat/TeMSVFactory.h	/^	virtual string decName() const { return ""; }$/;"	f	struct:TeMSVParams
decName	stat/TeSemivarModelFactory.h	/^	virtual string decName() const { return ""; }$/;"	f	struct:TeSemivarModelParams
decimals_	kernel/TeAttribute.h	/^	int				decimals_;	\/\/!< number of decimal digits$/;"	m	struct:TeAttributeRep
declareVtab	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 declareVtab;            \/* True if inside sqlite3_declare_vtab() *\/$/;"	m	struct:Parse	file:
declare_vtab	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
declare_vtab	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
decodeCoord	utils/TeWKBGeometryDecoder.cpp	/^void decodeCoord(const char*& wkb, TeCoord2D& point, const char& byteOrder, unsigned int& readBytes)$/;"	f
decodeCoverageBlock	kernel/TeCoverageDecoderDatabase.h	/^    TeCoverageBlock<T> decodeCoverageBlock(unsigned char*& data, const long dataSize, std::vector<TeCoverageDimension>& dimensions)$/;"	f	class:TeCoverageDecoderDatabase
decodeDate	drivers/Firebird/ibpp/core/time.cpp	/^void decodeDate(IBPP::Date& dt, const ISC_DATE& isc_dt)$/;"	f	namespace:ibpp_internals
decodeFlags	drivers/SQLite/sqlite3/sqlite3.c	/^static int decodeFlags(MemPage *pPage, int flagByte){$/;"	f	file:
decodeGeomValuePair	kernel/TeCoverageDecoderDatabase.h	/^TeCoverageDecoderDatabase<TeLine2D>::decodeGeomValuePair(unsigned char*& data, std::vector<TeCoverageDimension>& dimensions)$/;"	f	class:TeCoverageDecoderDatabase
decodeGeomValuePair	kernel/TeCoverageDecoderDatabase.h	/^TeCoverageDecoderDatabase<TePoint>::decodeGeomValuePair(unsigned char*& data, std::vector<TeCoverageDimension>& dimensions)$/;"	f	class:TeCoverageDecoderDatabase
decodeGeomValuePair	kernel/TeCoverageDecoderDatabase.h	/^TeCoverageDecoderDatabase<TePolygon>::decodeGeomValuePair(unsigned char*& data, std::vector<TeCoverageDimension>& dimensions)$/;"	f	class:TeCoverageDecoderDatabase
decodeLayer	kernel/TeCoverageImport.h	/^decodeLayer(TeLayer* srcLayer, const std::vector<std::string>& columns, std::vector<SerializedPair<TeLine2D> >& serializedVector, std::vector<TeCoverageDimension>& dimensions)$/;"	f
decodeLayer	kernel/TeCoverageImport.h	/^decodeLayer(TeLayer* srcLayer, const std::vector<std::string>& columns, std::vector<SerializedPair<TePoint> >& serializedVector, std::vector<TeCoverageDimension>& dimensions)$/;"	f
decodeLayer	kernel/TeCoverageImport.h	/^decodeLayer(TeLayer* srcLayer, const std::vector<std::string>& columns, std::vector<SerializedPair<TePolygon> >& serializedVector, std::vector<TeCoverageDimension>& dimensions)$/;"	f
decodeLine	utils/TeWKBGeometryDecoder.cpp	/^void TeWKBGeometryDecoder::decodeLine(const char*& wkbLine, TeLine2D& line, unsigned int& readBytes)$/;"	f	class:TeWKBGeometryDecoder
decodeLine	utils/TeWKTGeometryDecoder.cpp	/^void TeWKTGeometryDecoder::decodeLine(const string& wktLine, TeLine2D& line)$/;"	f	class:TeWKTGeometryDecoder
decodeLineSet	utils/TeWKBGeometryDecoder.cpp	/^void TeWKBGeometryDecoder::decodeLineSet(const char*& wkbMultiLine, TeLineSet& lset, unsigned int& readBytes)$/;"	f	class:TeWKBGeometryDecoder
decodePoint	utils/TeWKBGeometryDecoder.cpp	/^void TeWKBGeometryDecoder::decodePoint(const char*& wkbPoint, TeCoord2D& point, unsigned int& readBytes)$/;"	f	class:TeWKBGeometryDecoder
decodePoint	utils/TeWKTGeometryDecoder.cpp	/^void TeWKTGeometryDecoder::decodePoint(const string& wktPoint, TeCoord2D& point)$/;"	f	class:TeWKTGeometryDecoder
decodePointSet	utils/TeWKBGeometryDecoder.cpp	/^void TeWKBGeometryDecoder::decodePointSet(const char*& wkbMultiPoint, TePointSet& ptset, unsigned int& readBytes)$/;"	f	class:TeWKBGeometryDecoder
decodePolygon	utils/TeWKBGeometryDecoder.cpp	/^void TeWKBGeometryDecoder::decodePolygon(const char*& wkbPoly, TePolygon& poly, unsigned int& readBytes)$/;"	f	class:TeWKBGeometryDecoder
decodePolygon	utils/TeWKTGeometryDecoder.cpp	/^void TeWKTGeometryDecoder::decodePolygon(const string& wktPoly, TePolygon& poly)$/;"	f	class:TeWKTGeometryDecoder
decodePolygonSet	utils/TeWKBGeometryDecoder.cpp	/^void TeWKBGeometryDecoder::decodePolygonSet(const char*& wkbMultiPolygon, TePolygonSet& pset, unsigned int& readBytes)$/;"	f	class:TeWKBGeometryDecoder
decodeRing	utils/TeWKBGeometryDecoder.cpp	/^void decodeRing(const char*& wkb, TeLine2D& line, const char& byteOrder, const int& lineSize, unsigned int& readBytes)$/;"	f
decodeTime	drivers/Firebird/ibpp/core/time.cpp	/^void decodeTime(IBPP::Time& tm, const ISC_TIME& isc_tm)$/;"	f	namespace:ibpp_internals
decodeTimestamp	drivers/Firebird/ibpp/core/time.cpp	/^void decodeTimestamp(IBPP::Timestamp& ts, const ISC_TIMESTAMP& isc_ts)$/;"	f	namespace:ibpp_internals
decoder	kernel/TeRaster.h	/^inline TeDecoder* TeRaster::decoder()$/;"	f	class:TeRaster
decoderCoordinate	functions/TeImportCSV.cpp	/^bool decoderCoordinate( const std::string &value, double &retValue )$/;"	f
decoderIdentifier_	kernel/TeRasterParams.h	/^	string	decoderIdentifier_;	\/\/!< decoder associated to his raster$/;"	m	class:TeRasterParams
decoderParams_	kernel/TeRasterParams.h	/^	std::vector< DecoderParamT > decoderParams_; \/\/!< Decoder parameters (This parameter is specific for each decoder, please consult each TeDecoder inherited class for reference).$/;"	m	class:TeRasterParams
decoder_	kernel/TeCoverage.h	/^    TeCoverageDecoder<T>* decoder_; \/\/!< provides access to the coverage data$/;"	m	class:TeCoverage
decoder_	kernel/TeCoverageDecoderCacheLRU.h	/^    TeCoverageDecoder<T>* decoder_; \/\/!< Support coverage decoder$/;"	m	class:TeCoverageDecoderCacheLRU
decoder_	kernel/TeCoverageInterpolator.h	/^    TeCoverageDecoder<T>* decoder_; \/\/!< The coverage decoder.$/;"	m	class:TeCoverageInterpolator
decoder_	kernel/TeRaster.h	/^	TeDecoder		*decoder_;	\/\/!< pointer to a decoder of values$/;"	m	class:TeRaster
decodifyDescription	kernel/TeProjection.cpp	/^bool decodifyDescription(const string& projDescription, TeProjectionParams& pars)$/;"	f
decodifyId	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::decodifyId(const string& id, int& col,int& lin, int& band, int& res, int& subb)$/;"	f	class:TeDecoderDatabase
decompose	kernel/TeAffineGT.cpp	/^bool TeAffineGT::decompose( const TeMatrix& inputMtx, double& translationX, $/;"	f	class:TeAffineGT
decomposeRaster	image_processing/TePDIUtils.cpp	/^  bool decomposeRaster( TeRaster& inputRaster,$/;"	f	namespace:TePDIUtils
defValue_	kernel/TeDecoderVirtualMemory.h	/^	double   defValue_;		\/\/<! Default value (fo initially fill the page)$/;"	m	class:TeMemoryPage
defaultColor_	drivers/qt/TeQtGLWidget.h	/^	QColor defaultColor_;$/;"	m	class:TeQtGLWidget
defaultLegend	kernel/TeAbstractTheme.h	/^	virtual TeLegendEntry& defaultLegend () $/;"	f	class:TeAbstractTheme
defaultLegend	kernel/TeAbstractTheme.h	/^	virtual void defaultLegend (TeLegendEntry& leg) $/;"	f	class:TeAbstractTheme
defaultLegend_	kernel/TeAbstractTheme.h	/^	TeLegendEntry		defaultLegend_;					\/\/group(-3) $/;"	m	class:TeAbstractTheme
defaultValue	kernel/TeComputeAttributeStrategies.h	/^		TeProperty  defaultValue () { return defaultValue_; }$/;"	f	class:TeComputeAttrStrategy
defaultValue_	kernel/TeAttribute.h	/^	string			defaultValue_;	\/\/!< default value (without "'")$/;"	m	struct:TeAttributeRep
defaultValue_	kernel/TeComputeAttributeStrategies.h	/^		TeProperty	defaultValue_;$/;"	m	class:TeComputeAttrStrategy
default_pp_	drivers/spl/PluginsManager.h	/^      PluginParameters default_pp_;$/;"	m	class:PluginsManager
deferredMoveto	drivers/SQLite/sqlite3/sqlite3.c	/^  Bool deferredMoveto;  \/* A call to sqlite3BtreeMoveto() is needed *\/$/;"	m	struct:VdbeCursor	file:
defineAkimaCoeficients	kernel/TeTin.cpp	/^TeTin::defineAkimaCoeficients(long t, TeTinVertexSet vertSet, double* coef)$/;"	f	class:TeTin
defineAkimaCoeficients	kernel/TeTin.cpp	/^TeTin::defineAkimaCoeficients(long t, double* coef)$/;"	f	class:TeTin
defineByPos	drivers/Oracle/TeOCICursor.cpp	/^void TeOCICursor::defineByPos(int pos, void* value, int size, void* indicator, $/;"	f	class:TeOCICursor
defineIntegrity	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::defineIntegrity(void)$/;"	f	class:TeMySQL
defineIntegrity	kernel/TeDatabase.cpp	/^TeDatabase::defineIntegrity(void)$/;"	f	class:TeDatabase
defineInterEdge	kernel/TeTin.cpp	/^TeTin::defineInterEdge(TeContourLine*& ptline, TeTinVertex fpt, TeTinVertex spt)$/;"	f	class:TeTin
defineInterLinesColumns	kernel/TeTin.cpp	/^TeTin::defineInterLinesColumns(TeRaster* raster, TeTinTriangle t, int& fline, int& lline, int& fcol, int& lcol)$/;"	f	class:TeTin
defineInterTriangle	kernel/TeTin.cpp	/^TeTin::defineInterTriangle(TeContourLine*& ptline, TeTinVertex* vert)$/;"	f	class:TeTin
defines_	drivers/Oracle/TeOCICursor.h	/^	vector<OCIDefine *>		defines_;		\/\/!< OCIDefine objects to link buffers in client side and the statement handle$/;"	m	class:TeOCICursor
defragmentPage	drivers/SQLite/sqlite3/sqlite3.c	/^static int defragmentPage(MemPage *pPage){$/;"	f	file:
deleteAddressMetadata	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::deleteAddressMetadata(const int& tableId)$/;"	f	class:TeAddressLocator
deleteAppTheme	drivers/qt/TeApplicationUtils.cpp	/^bool deleteAppTheme (TeDatabase* db, TeAbstractTheme* theme, const string& tableName)$/;"	f
deleteCell	drivers/SQLite/sqlite3/sqlite3.c	/^static int deleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell, int iHeight){$/;"	f	file:
deleteChartParams	drivers/qt/TeApplicationUtils.cpp	/^bool deleteChartParams (TeDatabase* db, TeAppTheme* theme)$/;"	f
deleteColumn	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::deleteColumn (const string& table, const string& colName)$/;"	f	class:TeFirebird
deleteColumn	drivers/ado/TeAdoDB.cpp	/^TeAdo::deleteColumn (const string& table, const string& colName)$/;"	f	class:TeAdo
deleteColumn	drivers/ado/TeAdoSqlServer.cpp	/^bool TeSqlServer::deleteColumn (const string& table, const string& colName)$/;"	f	class:TeSqlServer
deleteColumn	kernel/TeDatabase.cpp	/^TeDatabase::deleteColumn (const string& table, const string& colName)$/;"	f	class:TeDatabase
deleteConnection	kernel/TeConnectionPool.cpp	/^void TeConnectionPool::deleteConnection(unsigned int& id) {$/;"	f	class:TeConnectionPool
deleteExternalDBConnection	kernel/TeDBConnectionsPool.cpp	/^void TeDBConnectionsPool::deleteExternalDBConnection(TeDatabase* mainDb, const int& externalDbId)$/;"	f	class:TeDBConnectionsPool
deleteGLObject	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::deleteGLObject()$/;"	f	class:TeQtGLWidget
deleteGPMTable	drivers/qt/TeApplicationUtils.cpp	/^bool deleteGPMTable(TeDatabase* db, const int& themeId, const int& gpmId)$/;"	f
deleteGrouping	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::deleteGrouping()$/;"	f	class:TeExternalTheme
deleteGrouping	kernel/TeFileTheme.cpp	/^bool TeFileTheme::deleteGrouping()$/;"	f	class:TeFileTheme
deleteGrouping	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::deleteGrouping()$/;"	f	class:TeSFSTheme
deleteGrouping	kernel/TeTheme.cpp	/^TeTheme::deleteGrouping()$/;"	f	class:TeTheme
deleteIndex	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::deleteIndex(const string& tableName, const string& indexName)$/;"	f	class:TeMySQL
deleteIndex	kernel/TeDatabase.cpp	/^TeDatabase::deleteIndex(const string& , const string& indexName)$/;"	f	class:TeDatabase
deleteLayer	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::deleteLayer(int layerId)$/;"	f	class:TeOCIOracle
deleteLayer	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::deleteLayer(int layerId)$/;"	f	class:TeFireBird
deleteLayer	drivers/ado/TeAdoOracle.cpp	/^TeOracle::deleteLayer(int layerId)$/;"	f	class:TeOracle
deleteLayer	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::deleteLayer(int layerId)$/;"	f	class:TeSqlServer
deleteLayer	kernel/TeDatabase.cpp	/^TeDatabase::deleteLayer(int layerId)$/;"	f	class:TeDatabase
deleteLayerTable	kernel/TeDatabase.cpp	/^TeDatabase::deleteLayerTable (int layerId, TeAttrTableType ttype)$/;"	f	class:TeDatabase
deleteLegend	kernel/TeDatabase.cpp	/^TeDatabase::deleteLegend(int themeId)$/;"	f	class:TeDatabase
deleteMetadata	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::deleteMetadata(const string &table, const string &column)$/;"	f	class:TeOracleSpatial
deletePointedLines	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::deletePointedLines()$/;"	f	class:TeQtGrid
deletePointedObjects	drivers/qt/TeApplicationUtils.cpp	/^string deletePointedObjects(TeTheme* theme, TeBox& box)$/;"	f
deletePortal	drivers/qt/TeQtTable.cpp	/^void TeQtTable::deletePortal()$/;"	f	class:TeQtTable
deleteProject	kernel/TeDatabase.cpp	/^TeDatabase::deleteProject(int projectId)$/;"	f	class:TeDatabase
deleteProjectViewRel	kernel/TeDatabase.cpp	/^TeDatabase::deleteProjectViewRel(int projectId, int viewId)$/;"	f	class:TeDatabase
deleteProjection	kernel/TeDatabase.cpp	/^bool TeDatabase::deleteProjection(const unsigned int& projId)$/;"	f	class:TeDatabase
deleteRelation	kernel/TeDatabase.cpp	/^TeDatabase::deleteRelation(const string& name, const string& table)$/;"	f	class:TeDatabase
deleteSpatialIndex	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::deleteSpatialIndex(const string &table)$/;"	f	class:TeOracleSpatial
deleteTable	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::deleteTable (const string& table)$/;"	f	class:TeOCIOracle
deleteTable	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::deleteTable(const string& table)$/;"	f	class:TePostgreSQL
deleteTable	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::deleteTable (const string& table)$/;"	f	class:TeFireBird
deleteTable	drivers/ado/TeAdoOracle.cpp	/^TeOracle::deleteTable (const string& table)$/;"	f	class:TeOracle
deleteTable	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::deleteTable (const string& table)$/;"	f	class:TeSqlServer
deleteTable	kernel/TeDatabase.cpp	/^TeDatabase::deleteTable (const string& table)$/;"	f	class:TeDatabase
deleteTextVisual	drivers/qt/TeApplicationUtils.cpp	/^bool deleteTextVisual(TeLayer* layer)$/;"	f
deleteTheme	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::deleteTheme(int themeId)$/;"	f	class:TeSqlServer
deleteTheme	kernel/TeDatabase.cpp	/^TeDatabase::deleteTheme(int themeId)$/;"	f	class:TeDatabase
deleteThemeGroup	kernel/TeDatabase.cpp	/^TeDatabase::deleteThemeGroup(int themeId)$/;"	f	class:TeDatabase
deleteView	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::deleteView (int viewId)$/;"	f	class:TeSqlServer
deleteView	kernel/TeDatabase.cpp	/^TeDatabase::deleteView (int viewId)$/;"	f	class:TeDatabase
deleteView	kernel/TeProject.cpp	/^TeProject::deleteView(int viewId, const bool& removeFromDatabase)$/;"	f	class:TeProject
deleteWeightsMatrix	image_processing/TePDIFilterMask.cpp	/^void TePDIFilterMask::deleteWeightsMatrix( double** matrix,$/;"	f	class:TePDIFilterMask
delim	drivers/SQLite/sqlite3/sqlite3.c	/^  char delim[128];             \/* flag ASCII delimiters *\/$/;"	m	struct:simple_tokenizer	file:
deltaU_	kernel/TeGTParams.h	/^      double deltaU_;$/;"	m	class:TeGTParams
deltaV_	kernel/TeGTParams.h	/^      double deltaV_;   $/;"	m	class:TeGTParams
deltaX_	kernel/TeGTParams.h	/^      double deltaX_;$/;"	m	class:TeGTParams
deltaY_	kernel/TeGTParams.h	/^      double deltaY_;$/;"	m	class:TeGTParams
delta_	image_processing/TePDIRegGrowSeg.hpp	/^        float           delta_;$/;"	m	class:TePDIRGSCell
depth	drivers/GL/glcore.h	/^    GLint width, height, depth;$/;"	m	struct:__GLdrawableBufferRec
depth	drivers/GL/internal/glcore.h	/^    GLint width, height, depth;$/;"	m	struct:__GLdrawableBufferRec
depthBits	drivers/GL/glcore.h	/^    GLint depthBits;$/;"	m	struct:__GLcontextModesRec
depthBits	drivers/GL/glxint.h	/^    GLint depthBits;$/;"	m	struct:__GLXFBConfigRec
depthBits	drivers/GL/internal/glcore.h	/^    GLint depthBits;$/;"	m	struct:__GLcontextModesRec
depthBuffer	drivers/GL/glcore.h	/^    __GLdrawableBuffer depthBuffer;$/;"	m	struct:__GLdrawablePrivateRec
depthBuffer	drivers/GL/internal/glcore.h	/^    __GLdrawableBuffer depthBuffer;$/;"	m	struct:__GLdrawablePrivateRec
depthSize	drivers/GL/glxint.h	/^    int depthSize;$/;"	m	struct:__GLXvisualConfigRec
depth_size	drivers/GL/directfbgl.h	/^     int        depth_size;$/;"	m	struct:__anon175
desc	drivers/Oracle/OCI/include/occiAQ.h	/^     dvoid *desc;$/;"	m	class:oracle::occi::aq::NotifyResult
desc	drivers/SQLite/sqlite3/sqlite3.c	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	file:
desc	drivers/SQLite/sqlite3/sqlite3.h	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
descendToCell	drivers/SQLite/sqlite3/sqlite3.c	/^static int descendToCell($/;"	f	file:
descendants	kernel/TeKdTree.h	/^		unsigned int descendants(void) const$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
descendants	kernel/TeKdTree.h	/^		unsigned int descendants(void) const$/;"	f	class:TeSAM::TeKdTreeNode
describe	kernel/TeProjection.cpp	/^TeProjection::describe ()$/;"	f	class:TeProjection
description	kernel/TeProject.h	/^	virtual string description() $/;"	f	class:TeProject
description_	kernel/TeProject.h	/^	string description_; $/;"	m	class:TeProject
description_	kernel/TeRepresentation.h	/^	std::string	description_;	\/\/!< representation description$/;"	m	struct:TeRepresentation
descriptorList	drivers/Oracle/OCI/include/occiObjects.h	/^  OCCI_STD_NAMESPACE::list<void *> descriptorList;$/;"	m	class:oracle::occi::RefImpl
deserializeGeometry	drivers/SQLite/sqlite3/sqlite3.c	/^static int deserializeGeometry(sqlite3_value *pValue, RtreeConstraint *pCons){$/;"	f	file:
destHeight	drivers/GL/glxext.h	/^    int destXOrigin, destYOrigin, destWidth, destHeight;$/;"	m	struct:__anon96
destWidth	drivers/GL/glxext.h	/^    int destXOrigin, destYOrigin, destWidth, destHeight;$/;"	m	struct:__anon96
destXOrigin	drivers/GL/glxext.h	/^    int destXOrigin, destYOrigin, destWidth, destHeight;$/;"	m	struct:__anon96
destYOrigin	drivers/GL/glxext.h	/^    int destXOrigin, destYOrigin, destWidth, destHeight;$/;"	m	struct:__anon96
dest_address_kusmem	drivers/Oracle/OCI/include/kusapi.h	/^    ub1 *dest_address_kusmem;   \/* User-allocated destination for SGA data *\/$/;"	m	struct:kusmem
destroy	drivers/Oracle/OCI/include/occiObjects.h	/^void Ref<T>::destroy()$/;"	f	class:oracle::occi::Ref
destroyContext	drivers/GL/dri_interface.h	/^    GLboolean (* destroyContext)( __DRInativeDisplay *dpy, int screenNum,$/;"	m	struct:__DRIinterfaceMethodsRec
destroyContext	drivers/GL/dri_interface.h	/^    void (*destroyContext)(__DRInativeDisplay *dpy, int scrn, void *contextPrivate);$/;"	m	struct:__DRIcontextRec
destroyContext	drivers/GL/glcore.h	/^    GLboolean (*destroyContext)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
destroyContext	drivers/GL/internal/dri_interface.h	/^    GLboolean (* destroyContext)( __DRInativeDisplay *dpy, int screenNum,$/;"	m	struct:__DRIinterfaceMethodsRec
destroyContext	drivers/GL/internal/dri_interface.h	/^    void (*destroyContext)(__DRInativeDisplay *dpy, int scrn, void *contextPrivate);$/;"	m	struct:__DRIcontextRec
destroyContext	drivers/GL/internal/glcore.h	/^    GLboolean (*destroyContext)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
destroyContextModes	drivers/GL/dri_interface.h	/^    void (*destroyContextModes)( __GLcontextModes * modes );$/;"	m	struct:__DRIinterfaceMethodsRec
destroyContextModes	drivers/GL/internal/dri_interface.h	/^    void (*destroyContextModes)( __GLcontextModes * modes );$/;"	m	struct:__DRIinterfaceMethodsRec
destroyDrawable	drivers/GL/dri_interface.h	/^    GLboolean (*destroyDrawable)( __DRInativeDisplay * ndpy, int screen,$/;"	m	struct:__DRIinterfaceMethodsRec
destroyDrawable	drivers/GL/dri_interface.h	/^    void (*destroyDrawable)(__DRInativeDisplay *dpy, void *drawablePrivate);$/;"	m	struct:__DRIdrawableRec
destroyDrawable	drivers/GL/internal/dri_interface.h	/^    GLboolean (*destroyDrawable)( __DRInativeDisplay * ndpy, int screen,$/;"	m	struct:__DRIinterfaceMethodsRec
destroyDrawable	drivers/GL/internal/dri_interface.h	/^    void (*destroyDrawable)(__DRInativeDisplay *dpy, void *drawablePrivate);$/;"	m	struct:__DRIdrawableRec
destroyRootPage	drivers/SQLite/sqlite3/sqlite3.c	/^static void destroyRootPage(Parse *pParse, int iTable, int iDb){$/;"	f	file:
destroyScreen	drivers/GL/dri_interface.h	/^    void (*destroyScreen)(__DRInativeDisplay *dpy, int scrn, void *screenPrivate);$/;"	m	struct:__DRIscreenRec
destroyScreen	drivers/GL/internal/dri_interface.h	/^    void (*destroyScreen)(__DRInativeDisplay *dpy, int scrn, void *screenPrivate);$/;"	m	struct:__DRIscreenRec
destroyTable	drivers/SQLite/sqlite3/sqlite3.c	/^static void destroyTable(Parse *pParse, Table *pTab){$/;"	f	file:
detach	kernel/TeCounted.h	/^	void detach ()$/;"	f	class:TeCounted
detachFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void detachFunc($/;"	f	file:
detectEdge	image_processing/TePDIRaster2Vector.cpp	/^bool TePDIRaster2Vector::detectEdge(long i, long j, TeLine2D &line )$/;"	f	class:TePDIRaster2Vector
dev	drivers/SQLite/sqlite3/sqlite3.c	/^  dev_t dev;                  \/* Device number *\/$/;"	m	struct:unixFileId	file:
dev_priv	drivers/GL/dri_interface.h	/^    void *dev_priv;         \/**< Pointer to the driver's dev-priv structure. *\/$/;"	m	struct:__DRIframebufferRec
dev_priv	drivers/GL/internal/dri_interface.h	/^    void *dev_priv;         \/**< Pointer to the driver's dev-priv structure. *\/$/;"	m	struct:__DRIframebufferRec
dev_priv_size	drivers/GL/dri_interface.h	/^    int dev_priv_size;      \/**< Size of the driver's dev-priv structure. *\/$/;"	m	struct:__DRIframebufferRec
dev_priv_size	drivers/GL/internal/dri_interface.h	/^    int dev_priv_size;      \/**< Size of the driver's dev-priv structure. *\/$/;"	m	struct:__DRIframebufferRec
dfltLockMode	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 dfltLockMode;              \/* Default locking-mode for attached dbs *\/$/;"	m	struct:sqlite3	file:
diameter_	kernel/TePieBar.h	/^	double			diameter_;$/;"	m	class:TePieBar
dictionary_	functions/TeAddressLocator.h	/^		TeGeocoderDictionary dictionary_;			\/\/!< Use a geocoder dictionary$/;"	m	class:TeAddressLocator
difference_type	kernel/checkvec.h	/^		typedef typename checkedVector::difference_type difference_type;$/;"	t	class:br_stl::checkedVector
digits	kernel/TeGraph.cpp	/^	char digits[3];$/;"	m	struct:Opt	file:
dimensionAttr_	kernel/TePieBar.h	/^	string			dimensionAttr_;$/;"	m	class:TePieBar
dimension_	kernel/TeStatistics.h	/^	int					dimension_;$/;"	m	struct:TeStatisticsDimension
dimension_id	kernel/TeCoverageParams.h	/^    int dimension_id;   \/\/!< Dimension identifier$/;"	m	struct:TeCoverageDimension
dimensions_	kernel/TeCoverageParams.h	/^    std::vector<TeCoverageDimension> dimensions_;   \/\/!< Dimensions information$/;"	m	class:TeCoverageParams
dirVariance_	image_processing/TePDIMMIOMatching.hpp	/^        double dirVariance_;$/;"	m	struct:TePDIMMIOMatching::MaximasListNodeT
dir_	drivers/qt/TeQtAnimaThread.h	/^	QDir		dir_;$/;"	m	class:TeQtAnimaThread
directMap	kernel/Te2ndDegPolynomialGT.cpp	/^void Te2ndDegPolynomialGT::directMap( const TeGTParams& params, const TeCoord2D& pt1, $/;"	f	class:Te2ndDegPolynomialGT
directMap	kernel/Te3rdDegPolynomialGT.cpp	/^void Te3rdDegPolynomialGT::directMap( const TeGTParams& params, const TeCoord2D& pt1, $/;"	f	class:Te3rdDegPolynomialGT
directMap	kernel/TeAffineGT.cpp	/^void TeAffineGT::directMap( const TeGTParams& params, const TeCoord2D& pt1, $/;"	f	class:TeAffineGT
directMap	kernel/TeGeometricTransformation.h	/^      inline void directMap( const TeCoord2D& pt1, TeCoord2D& pt2 ) const$/;"	f	class:TeGeometricTransformation
directMap	kernel/TeProjectiveGT.cpp	/^void TeProjectiveGT::directMap( const TeGTParams& params, const TeCoord2D& pt1, $/;"	f	class:TeProjectiveGT
directMode	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 directMode;          \/* Direct rendering mode means take data directly$/;"	m	struct:AggInfo	file:
direct_parameters_	kernel/TeGTParams.h	/^      TeMatrix direct_parameters_;$/;"	m	class:TeGTParams
directed	kernel/graph.h	/^		bool directed;$/;"	m	class:br_stl::Graph
direction_	image_processing/TePDIHaralick.hpp	/^      DirectionT direction_;$/;"	m	class:TePDIHaralick
directions_	image_processing/TePDIRaster2Vector.hpp	/^      TeCoord2D directions_[8];  $/;"	m	class:TePDIRaster2Vector
directoryPushButton_clicked	drivers/qt/ui/animation.ui.h	/^void Animation::directoryPushButton_clicked()$/;"	f	class:Animation
disableTerm	drivers/SQLite/sqlite3/sqlite3.c	/^static void disableTerm(WhereLevel *pLevel, WhereTerm *pTerm){$/;"	f	file:
disableTriggers	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 disableTriggers;  \/* True to disable triggers *\/$/;"	m	struct:Parse	file:
disable_simulated_io_errors	drivers/SQLite/sqlite3/sqlite3.c	/^void disable_simulated_io_errors(void){$/;"	f
disable_simulated_io_errors	drivers/SQLite/sqlite3/sqlite3.c	40889;"	d	file:
disable_simulated_io_errors	drivers/SQLite/sqlite3/sqlite3.c	8810;"	d	file:
disallow	drivers/SQLite/sqlite3/sqlite3.c	/^  int disallow; \/* Do not allow memory allocation *\/$/;"	m	struct:__anon50	file:
disconBranch	kernel/TeRTree.h	/^void TeRTree<DATATYPE, MAXNODES, MINNODES>::disconBranch(TeRTreeNodeType* n, int i)$/;"	f	class:TeSAM::TeRTree
disconnect	drivers/Oracle/TeOCIConnect.cpp	/^void TeOCIConnection::disconnect()  $/;"	f	class:TeOCIConnection
disconnect	kernel/TeCommunicator.h	/^  void TeCommunicator< DataType >::disconnect( $/;"	f	class:TeCommunicator
disconnect	kernel/TeCommunicator.h	/^  void TeCommunicator< DataType >::disconnect()$/;"	f	class:TeCommunicator
disconnectObjects	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::disconnectObjects (const string& object_id1, const string& object_id2)$/;"	f	class:TeGeneralizedProxMatrix
disconnectObjects	kernel/TeProxMatrixImplementation.h	/^	virtual bool disconnectObjects (const string& , const string& ) { return false; }$/;"	f	class:TeProxMatrixImplementation
discriminator_	kernel/TeKdTree.h	/^		char discriminator_;$/;"	m	class:TeSAM::TeAdaptativeKdTreeNode
diskLinesVec_	image_processing/TePDIMatrix.hpp	/^      DiskLinesInfoNode* diskLinesVec_;      $/;"	m	class:TePDIMatrix
diskTilesDataVec_	kernel/TeRasterMemManager.h	/^      DiskTileDataVecT diskTilesDataVec_;$/;"	m	class:TeRasterMemManager
disk_file_name_	kernel/TeMappedMemory.h	/^      std::string disk_file_name_;$/;"	m	class:TeMappedMemory
dispatchExec	drivers/GL/glcore.h	/^    struct __GLdispatchStateRec* (*dispatchExec)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec	typeref:struct:__GLexportsRec::dispatchExec
dispatchExec	drivers/GL/internal/glcore.h	/^    struct __GLdispatchStateRec* (*dispatchExec)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec	typeref:struct:__GLexportsRec::dispatchExec
display	drivers/GL/glx.h	/^    Display *display;		\/* display the event was read from *\/$/;"	m	struct:__anon176
display	drivers/GL/glxext.h	/^    Display *display;		  \/* display the event was read from *\/$/;"	m	struct:__anon93
displayP4	drivers/SQLite/sqlite3/sqlite3.c	/^static char *displayP4(Op *pOp, char *zTemp, int nTemp){$/;"	f	file:
display_stats	drivers/SQLite/sqlite3/shell.c	/^static int display_stats($/;"	f	file:
dist	image_processing/TePDICluster.cpp	/^double  TePDICluster::dist( vector<double> pixValue )const$/;"	f	class:TePDICluster
distWeightAvgNearestNeighbor	functions/TeInterpolation.h	/^		double distWeightAvgNearestNeighbor(const kdKey& key, const unsigned int& numberOfNeighbors, const int& powValue)$/;"	f	class:TeInterpolationAlgorithms
dist_ratio_	kernel/TeProxMatrixWeightsStrategy.h	/^	double						dist_ratio_;$/;"	m	struct:TeProxMatrixWeightsParams
distance	functions/TeCellAlgorithms.cpp	/^	double distance;$/;"	m	struct:cellDist	file:
distanceToGeom	kernel/TeCoverageInterpolatorNN.h	/^    double distanceToGeom(const TeCoord2D& position, TeLine2D line)$/;"	f	class:TeCoverageInterpolatorNN
distanceToGeom	kernel/TeCoverageInterpolatorNN.h	/^    double distanceToGeom(const TeCoord2D& position, TePoint point)$/;"	f	class:TeCoverageInterpolatorNN
distanceToGeom	kernel/TeCoverageInterpolatorNN.h	/^    double distanceToGeom(const TeCoord2D& position, TePolygon poly)$/;"	f	class:TeCoverageInterpolatorNN
distance_	drivers/qt/TeQtColorBar.h	/^	bool	distance_;$/;"	m	class:TeQtColorBar
distance_	utils/TeColorUtils.h	/^	double	distance_;$/;"	m	struct:ColorBar
distances	kernel/TeProfile1.h	/^	vector<double> distances,altitudes;$/;"	m	class:TeProfile1
dither_matrix_conversion	image_processing/TePDIBaatz.cpp	/^unsigned long int dither_matrix_conversion(int num_bits, $/;"	f
dither_matrix_dimension	image_processing/TePDIBaatz.cpp	/^unsigned long int dither_matrix_dimension(long int nrows,$/;"	f
dmap_error_	kernel/TeGeometricTransformation.h	/^          double dmap_error_;$/;"	m	class:TeGeometricTransformation::ExcTPDataNode
dmap_error_	kernel/TeGeometricTransformation.h	/^          double dmap_error_;$/;"	m	class:TeGeometricTransformation::TPDataNode
dmin	image_processing/TePDIRegGrowSeg.hpp	/^        float   dmin[MAXCLOSECELLS];$/;"	m	class:CloserCells
dms2d	drivers/qt/TeQtCanvas.cpp	/^double dms2d (int vs)$/;"	f
dn_nzttIdentity	drivers/Oracle/OCI/include/nzt.h	/^   text *dn_nzttIdentity;                      \/* Alias *\/$/;"	m	struct:nzttIdentity
dn_nzttIdentityDesc	drivers/Oracle/OCI/include/nzt.h	/^   text *dn_nzttIdentityDesc;             \/* Alias *\/$/;"	m	struct:nzttIdentityDesc
dnlen_nzttIdentity	drivers/Oracle/OCI/include/nzt.h	/^   ub4 dnlen_nzttIdentity;                  \/* Length of alias *\/$/;"	m	struct:nzttIdentity
dnlen_nzttIdentityDesc	drivers/Oracle/OCI/include/nzt.h	/^   ub4 dnlen_nzttIdentityDesc;         \/* Length of alias *\/$/;"	m	struct:nzttIdentityDesc
doNotSpill	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 doNotSpill;              \/* Do not spill the cache when non-zero *\/$/;"	m	struct:Pager	file:
doNotSyncSpill	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 doNotSyncSpill;          \/* Do not do a spill that requires jrnl sync *\/$/;"	m	struct:Pager	file:
doNotUseWAL	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 doNotUseWAL;       \/* If true, do not open write-ahead-log file *\/$/;"	m	struct:BtShared	file:
doRefresh_	drivers/qt/TeQtGrid.h	/^	bool					doRefresh_;$/;"	m	class:TeQtGrid
doRepaint_	drivers/qt/TeQtGrid.h	/^	bool					doRepaint_;$/;"	m	class:TeQtGrid
doRepaint_	drivers/qt/TeQtTable.h	/^	bool				doRepaint_;$/;"	m	class:TeQtTable
doSqlite3Free	drivers/SQLite/sqlite3/sqlite3.c	/^static void doSqlite3Free(void *p){$/;"	f	file:
doWalCallbacks	drivers/SQLite/sqlite3/sqlite3.c	/^static int doWalCallbacks(sqlite3 *db){$/;"	f	file:
do_meta_command	drivers/SQLite/sqlite3/shell.c	/^static int do_meta_command(char *zLine, struct callback_data *p){$/;"	f	file:
doclist	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Doclist doclist;$/;"	m	struct:Fts3Phrase	file:
done	drivers/SQLite/sqlite3/sqlite3.c	/^    u8 done;               \/* A flag to indicate when processing is finished *\/$/;"	m	struct:ExprList::ExprList_item	file:
done	functions/TeCellAlgorithms.cpp	/^	bool done;$/;"	m	struct:cellDist	file:
dontSelect	kernel/TeCoverageDecoderCacheLRU.h	/^    std::set<int>& dontSelect; \/\/ IDs of blocks that must not be included$/;"	m	struct:TeBoxIntersectionPredicate
dont_load_ids	kernel/TeBlockLoader.h	/^    std::set<int> dont_load_ids;$/;"	m	struct:__anon30
dotlockCheckReservedLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int dotlockCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
dotlockClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int dotlockClose(sqlite3_file *id) {$/;"	f	file:
dotlockLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int dotlockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
dotlockUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^static int dotlockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
double	drivers/SQLite/sqlite3/sqlite3.c	7273;"	d	file:
double	drivers/SQLite/sqlite3/sqlite3.c	7614;"	d	file:
double	drivers/SQLite/sqlite3/sqlite3.c	805;"	d	file:
double	drivers/SQLite/sqlite3/sqlite3.h	263;"	d
double	drivers/SQLite/sqlite3/sqlite3.h	6731;"	d
double2fftwcomplex	image_processing/TePDIHants.cpp	/^  void double2fftwcomplex(int n, double* in, fftw_complex* out) {$/;"	f
doubleBuffer	drivers/GL/glxint.h	/^    Bool doubleBuffer;$/;"	m	struct:__GLXvisualConfigRec
doubleBufferMode	drivers/GL/glcore.h	/^    GLuint doubleBufferMode;$/;"	m	struct:__GLcontextModesRec
doubleBufferMode	drivers/GL/glxint.h	/^    GLboolean doubleBufferMode;$/;"	m	struct:__GLXFBConfigRec
doubleBufferMode	drivers/GL/internal/glcore.h	/^    GLuint doubleBufferMode;$/;"	m	struct:__GLcontextModesRec
doubleBufferPI	kernel/TeBufferRegion.cpp	/^const double doubleBufferPI = 6.28318530717958647692;$/;"	m	namespace:TeBUFFERREGION	file:
doubleConsonant	drivers/SQLite/sqlite3/sqlite3.c	/^static int doubleConsonant(const char *z){$/;"	f	file:
doubleToInt64	drivers/SQLite/sqlite3/sqlite3.c	/^static i64 doubleToInt64(double r){$/;"	f	file:
doubleVect	kernel/TeCentroid.cpp	/^typedef vector<double> doubleVect;$/;"	t	file:
double_buffer	drivers/GL/directfbgl.h	/^     DFBBoolean double_buffer;$/;"	m	struct:__anon175
double_buffer_	image_processing/TePDIMorfFilter.hpp	/^      double* double_buffer_;$/;"	m	class:TePDIMorfFilter
doublesMatrix2Tiff	image_processing/TePDIMMIOMatching.cpp	/^void TePDIMMIOMatching::doublesMatrix2Tiff( $/;"	f	class:TePDIMMIOMatching
down_	drivers/qt/TeQtCanvas.h	/^	bool	down_;$/;"	m	class:TeQtCanvas
downgradeAllSharedCacheTableLocks	drivers/SQLite/sqlite3/sqlite3.c	/^static void downgradeAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
downgradeAllSharedCacheTableLocks	drivers/SQLite/sqlite3/sqlite3.c	48169;"	d	file:
dragLineReleased_	drivers/qt/TeQtGrid.h	/^	long					dragLineReleased_;$/;"	m	class:TeQtGrid
drag_	drivers/qt/TeQtViewsListView.h	/^	bool				drag_;$/;"	m	class:TeQtViewsListView
draw	kernel/TeViewNode.cpp	/^TeViewTree::draw ()$/;"	f	class:TeViewTree
draw	kernel/TeViewNode.h	/^	virtual void draw() {}$/;"	f	class:TeViewNode
draw2DPixmaps	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::draw2DPixmaps()$/;"	f	class:TeQtGLWidget
drawArc	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::drawArc (int xc, int yc, int w, int h, double a1, double a2, TeColor c)$/;"	f	class:TeQtGraphPlot
drawAxis	drivers/qt/TeQtGLWidget.h	/^	void drawAxis(bool b) {drawAxis_ = b; updateGL();}$/;"	f	class:TeQtGLWidget
drawAxis_	drivers/qt/TeQtGLWidget.h	/^	bool drawAxis_;$/;"	m	class:TeQtGLWidget
drawColorBar	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::drawColorBar()$/;"	f	class:TeQtColorBar
drawContents	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::drawContents (QPainter *qp, int clipx, int clipy, int clipw, int cliph)$/;"	f	class:TeQtGrid
drawContents	drivers/qt/TeQtTable.cpp	/^void TeQtTable::drawContents (QPainter *qp, int clipx, int clipy, int clipw, int cliph)$/;"	f	class:TeQtTable
drawCurve	drivers/qwt/TeQwtPlotCurve.cpp	/^void TeQwtPlotCurve::drawCurve(QPainter *p, int style,$/;"	f	class:TeQwtPlotCurve
drawLegend	kernel/TeGraph.cpp	/^TeGraphPlot :: drawLegend(void)$/;"	f	class:TeGraphPlot
drawLine	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::drawLine (int sx, int sy, int dx, int dy)$/;"	f	class:TeQtGraphPlot
drawLineRep	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::drawLineRep (QPoint p, TeVisual& v)$/;"	f	class:TeQtCanvas
drawLineRep	drivers/qt/TeQtLegendItem.cpp	/^void TeQtLegendItem::drawLineRep(int offset, QPixmap *pixmap)$/;"	f	class:TeQtLegendItem
drawLineRep	drivers/qt/TeQtLegendSource.cpp	/^void TeQtLegendSource::drawLineRep(int offset, int row, QPixmap *pixmap)$/;"	f	class:TeQtLegendSource
drawMoranText	kernel/TeGraph.cpp	/^void TeGraphPlot::drawMoranText (double dx1, double dy1, double dx2, double dy2)$/;"	f	class:TeGraphPlot
drawPointRep	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::drawPointRep (QPoint pp, TeVisual& v)$/;"	f	class:TeQtCanvas
drawPointRep	drivers/qt/TeQtLegendItem.cpp	/^void TeQtLegendItem::drawPointRep( int pw, int ph, int offset, QPixmap *pixmap)$/;"	f	class:TeQtLegendItem
drawPointRep	drivers/qt/TeQtLegendSource.cpp	/^void TeQtLegendSource::drawPointRep(int pw, int ph, int offset, int row, QPixmap *pixmap)$/;"	f	class:TeQtLegendSource
drawPolygonRep	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::drawPolygonRep (QPoint p, int w, int h, TeVisual& v)$/;"	f	class:TeQtCanvas
drawPolygonRep	drivers/qt/TeQtLegendItem.cpp	/^void TeQtLegendItem::drawPolygonRep(int w, int h, int offset, QPixmap *pixmap)$/;"	f	class:TeQtLegendItem
drawPolygonRep	drivers/qt/TeQtLegendSource.cpp	/^void TeQtLegendSource::drawPolygonRep(int w, int h, int offset, int row, QPixmap *pixmap)$/;"	f	class:TeQtLegendSource
drawRectangle	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::drawRectangle (int x, int y, int dx, int dy)$/;"	f	class:TeQtGraphPlot
drawSelecteds	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::drawSelecteds()$/;"	f	class:TeQtGLWidget
drawSelecteds_	drivers/qt/TeQtGLWidget.h	/^	bool drawSelecteds_;$/;"	m	class:TeQtGLWidget
drawText	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::drawText (int x, int y, char* t, double angle)$/;"	f	class:TeQtGraphPlot
draw_plot	kernel/TeGraph.cpp	/^TeGraphPlot :: draw_plot(void)$/;"	f	class:TeGraphPlot
draw_symbol	kernel/TeGraph.cpp	/^TeGraphPlot :: draw_symbol(int x, int y,int symbol, int w, int h)$/;"	f	class:TeGraphPlot
draw_symbol_legend	kernel/TeGraph.cpp	/^void TeGraphPlot :: draw_symbol_legend(int x, int y, int symbol, int w, int h)$/;"	f	class:TeGraphPlot
draw_symbols	kernel/TeGraph.cpp	/^TeGraphPlot :: draw_symbols(int curve)$/;"	f	class:TeGraphPlot
draw_type	drivers/GL/glx.h	/^    int draw_type;		\/* GLX_WINDOW or GLX_PBUFFER *\/$/;"	m	struct:__anon176
draw_type	drivers/GL/glxext.h	/^    int draw_type;		  \/* GLX_WINDOW_SGIX or GLX_PBUFFER_SGIX *\/$/;"	m	struct:__anon93
drawable	drivers/GL/glx.h	/^    GLXDrawable drawable;	\/* XID of Drawable *\/$/;"	m	struct:__anon176
drawable	drivers/GL/glxext.h	/^    GLXDrawable drawable;	  \/* i.d. of Drawable *\/$/;"	m	struct:__anon93
drawableType	drivers/GL/glcore.h	/^    GLint drawableType;$/;"	m	struct:__GLcontextModesRec
drawableType	drivers/GL/glxint.h	/^    int drawableType;$/;"	m	struct:__GLXFBConfigRec
drawableType	drivers/GL/internal/glcore.h	/^    GLint drawableType;$/;"	m	struct:__GLcontextModesRec
dropCell	drivers/SQLite/sqlite3/sqlite3.c	/^static void dropCell(MemPage *pPage, int idx, int sz, int *pRC){$/;"	f	file:
dropDBView	kernel/TeDatabase.cpp	/^TeDatabase::dropDBView(const string& dbViewName)$/;"	f	class:TeDatabase
dropDatabase	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::dropDatabase(const std::string &databaseName) $/;"	f	class:TeMySQL
dropDatabase	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::dropDatabase(const std::string &databaseName)$/;"	f	class:TePostgreSQL
dropDatabase	drivers/ado/TeAdoSqlServer.cpp	/^bool TeSqlServer::dropDatabase(const std::string & databaseName)$/;"	f	class:TeSqlServer
dropDatabase	kernel/TeDatabase.h	/^	virtual bool dropDatabase(const std::string & \/*databaseName*\/) { return false;} $/;"	f	class:TeDatabase
dsDenyAttach	drivers/Firebird/ibpp/core/ibpp.h	/^	enum DSM {dsForce, dsDenyTrans, dsDenyAttach};$/;"	e	enum:IBPP::DSM
dsDenyTrans	drivers/Firebird/ibpp/core/ibpp.h	/^	enum DSM {dsForce, dsDenyTrans, dsDenyAttach};$/;"	e	enum:IBPP::DSM
dsForce	drivers/Firebird/ibpp/core/ibpp.h	/^	enum DSM {dsForce, dsDenyTrans, dsDenyAttach};$/;"	e	enum:IBPP::DSM
dsc_address	drivers/Firebird/ibpp/core/ibase.h	/^    ISC_UCHAR	*dsc_address;$/;"	m	struct:paramdsc
dsc_dtype	drivers/Firebird/ibpp/core/ibase.h	/^    ISC_UCHAR	dsc_dtype;$/;"	m	struct:paramdsc
dsc_flags	drivers/Firebird/ibpp/core/ibase.h	/^    ISC_USHORT		dsc_flags;$/;"	m	struct:paramdsc
dsc_length	drivers/Firebird/ibpp/core/ibase.h	/^    ISC_USHORT		dsc_length;$/;"	m	struct:paramdsc
dsc_scale	drivers/Firebird/ibpp/core/ibase.h	/^    signed char		dsc_scale;$/;"	m	struct:paramdsc
dsc_sub_type	drivers/Firebird/ibpp/core/ibase.h	/^    short		dsc_sub_type;$/;"	m	struct:paramdsc
dscales	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	const double consts::dscales[19] = {$/;"	m	class:ibpp_internals::consts	file:
dscales	drivers/Firebird/ibpp/core/_ibpp.h	/^	static const double dscales[19];$/;"	m	struct:ibpp_internals::consts
dschp_	drivers/Oracle/TeOCICursor.h	/^	OCIDescribe*		dschp_;				\/\/!< OCI environment describe handle - describes objects$/;"	m	class:TeOCICursor
dspl_	drivers/GTM/TeGTM.h	/^	unsigned char dspl_, border_, italic_, underline_, strikeout_, alignment_;$/;"	m	class:TeGTMWaypointsStyles
dspl_	drivers/GTM/TeGTM.h	/^	unsigned char dspl_, tnum_;$/;"	m	class:TeGTMRoutes
dspl_	drivers/GTM/TeGTM.h	/^	unsigned char dspl_;$/;"	m	class:TeGTMWaypoints
dt2time	drivers/PostgreSQL/TePGInterface.cpp	/^inline  void dt2time(te_int64 jd, int *hour, int *min, int *sec, te_fsec_t *fsec)$/;"	f
dtoi	drivers/Firebird/ibpp/core/date.cpp	/^bool IBPP::dtoi (int date, int *y, int *m, int *d)$/;"	f	class:IBPP
dtype_array	drivers/Firebird/ibpp/core/ibase.h	312;"	d
dtype_blob	drivers/Firebird/ibpp/core/ibase.h	311;"	d
dtype_byte	drivers/Firebird/ibpp/core/ibase.h	301;"	d
dtype_cstring	drivers/Firebird/ibpp/core/ibase.h	297;"	d
dtype_d_float	drivers/Firebird/ibpp/core/ibase.h	307;"	d
dtype_double	drivers/Firebird/ibpp/core/ibase.h	306;"	d
dtype_int64	drivers/Firebird/ibpp/core/ibase.h	313;"	d
dtype_long	drivers/Firebird/ibpp/core/ibase.h	303;"	d
dtype_packed	drivers/Firebird/ibpp/core/ibase.h	300;"	d
dtype_quad	drivers/Firebird/ibpp/core/ibase.h	304;"	d
dtype_real	drivers/Firebird/ibpp/core/ibase.h	305;"	d
dtype_short	drivers/Firebird/ibpp/core/ibase.h	302;"	d
dtype_sql_date	drivers/Firebird/ibpp/core/ibase.h	308;"	d
dtype_sql_time	drivers/Firebird/ibpp/core/ibase.h	309;"	d
dtype_text	drivers/Firebird/ibpp/core/ibase.h	296;"	d
dtype_timestamp	drivers/Firebird/ibpp/core/ibase.h	310;"	d
dtype_unknown	drivers/Firebird/ibpp/core/ibase.h	295;"	d
dtype_varying	drivers/Firebird/ibpp/core/ibase.h	298;"	d
dummy	kernel/TeComputeAttributeStrategies.h	/^		double dummy;$/;"	m	class:TeAverageStrategy
dummy	kernel/TeComputeAttributeStrategies.h	/^		double dummy;$/;"	m	class:TeMaximumStrategy
dummy	kernel/TeComputeAttributeStrategies.h	/^		double dummy;$/;"	m	class:TeMinimumStrategy
dummy	kernel/TeComputeAttributeStrategies.h	/^		double dummy;$/;"	m	class:TeSTDevStrategy
dummy	kernel/TeComputeAttributeStrategies.h	/^		double dummy;$/;"	m	class:TeSumStrategy
dummy	kernel/TeComputeAttributeStrategies.h	/^		string dummy;$/;"	m	class:TeCategoryPercentageStrategy
dummy	kernel/TeComputeAttributeStrategies.h	/^		string dummy;$/;"	m	class:TeMajorityStrategy
dummyFill	kernel/TeDecoderSmartMem.cpp	/^void TeDecoderSmartMem::dummyFill()$/;"	f	class:TeDecoderSmartMem
dummyValue_	image_processing/TePDIBlender.hpp	/^      double dummyValue_;          $/;"	m	class:TePDIBlender
dummyValue_	image_processing/TePDICorrelationMatching.hpp	/^          double dummyValue_;             $/;"	m	class:TePDICorrelationMatching::CorrThread
dummy_	kernel/TeRasterParams.h	/^	vector<double>	dummy_;			\/\/!< no data value$/;"	m	class:TeRasterParams
dummy_value_	image_processing/TePDIInterpolator.hpp	/^      double dummy_value_;       $/;"	m	class:TePDIInterpolator
dummy_value_	image_processing/TePDIRaster2Vector.hpp	/^      double dummy_value_;$/;"	m	class:TePDIRaster2Vector
dump_callback	drivers/SQLite/sqlite3/shell.c	/^static int dump_callback(void *pArg, int nArg, char **azArg, char **azCol){$/;"	f	file:
dup8bytes	drivers/SQLite/sqlite3/sqlite3.c	/^static char *dup8bytes(Vdbe *v, const char *in){$/;"	f	file:
dupNeighTriangle	kernel/TeTin.cpp	/^TeTin::dupNeighTriangle(long tv, long an0, long v, std::set<long>& triangles)$/;"	f	class:TeTin
dupedExprNodeSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int dupedExprNodeSize(Expr *p, int flags){$/;"	f	file:
dupedExprSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int dupedExprSize(Expr *p, int flags){$/;"	f	file:
dupedExprStructSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int dupedExprStructSize(Expr *p, int flags){$/;"	f	file:
duplicateTriangle	kernel/TeTin.cpp	/^TeTin::duplicateTriangle(long t, long n, long v, std::set<long>& triangles)$/;"	f	class:TeTin
during	kernel/TeTimeInterval.cpp	/^TeTimeInterval :: during (TeTime& time)$/;"	f	class:TeTimeInterval
dvoid	drivers/Oracle/OCI/include/oratypes.h	262;"	d
dxI_	kernel/TeRasterParams.h	/^	double dxI_;	\/\/!< X offset due to increase of one line position		       $/;"	m	class:TeRasterParams
dxJ_	kernel/TeRasterParams.h	/^	double dxJ_;	\/\/!< X offset due to increase of one column position		       $/;"	m	class:TeRasterParams
dx_	drivers/GTM/TeGTM.h	/^	short ngrid_, ndatum_, dx_, dy_, dz_;$/;"	m	class:TeGTMGridDatum
dx_	kernel/TeDatum.h	/^	double	dx_,		\/\/!< TeDatum shift along x axis (m)$/;"	m	class:TeDatum
dx_	kernel/TeGridIndex.h	/^		double dx_;			\/\/!< grid resolution in x axis.$/;"	m	class:TeSAM::TeGridIndex
dyI_	kernel/TeRasterParams.h	/^	double dyI_;	\/\/!< Y offset due to increase of one line position		       $/;"	m	class:TeRasterParams
dyJ_	kernel/TeRasterParams.h	/^	double dyJ_;	\/\/!< Y offset due to increase of one column position		       $/;"	m	class:TeRasterParams
dy_	drivers/GTM/TeGTM.h	/^	short ngrid_, ndatum_, dx_, dy_, dz_;$/;"	m	class:TeGTMGridDatum
dy_	image_processing/TePDITileIndexer.hpp	/^    double dy_;$/;"	m	class:TePDITileIndexer
dy_	kernel/TeDatum.h	/^			dy_,		\/\/!< TeDatum shift along y axis (m)$/;"	m	class:TeDatum
dy_	kernel/TeGridIndex.h	/^		double dy_;			\/\/!< grid resolution in y axis.$/;"	m	class:TeSAM::TeGridIndex
dynamic_priority_queue	kernel/dynpq.h	/^	class dynamic_priority_queue$/;"	c	namespace:br_stl
dynamic_priority_queue	kernel/dynpq.h	/^	dynamic_priority_queue<key_type>::dynamic_priority_queue($/;"	f	class:br_stl::dynamic_priority_queue
dz_	drivers/GTM/TeGTM.h	/^	short ngrid_, ndatum_, dx_, dy_, dz_;$/;"	m	class:TeGTMGridDatum
dz_	kernel/TeDatum.h	/^			dz_;		\/\/!< TeDatum shift along z axis (m) $/;"	m	class:TeDatum
e2Vec	image_processing/TePDICluster.hpp	/^    vector<double> e2Vec;$/;"	m	class:TePDICluster
eCoordType	drivers/SQLite/sqlite3/sqlite3.c	/^  int eCoordType;$/;"	m	struct:Rtree	file:
eDest	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 eDest;         \/* How to dispose of the results *\/$/;"	m	struct:SelectDest	file:
eDistinct	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 eDistinct;$/;"	m	struct:WhereInfo	file:
eEvalmode	drivers/SQLite/sqlite3/sqlite3.c	/^  int eEvalmode;                  \/* An FTS3_EVAL_XX constant *\/$/;"	m	struct:Fts3Cursor	file:
eFileLock	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char eFileLock;            \/* The type of lock held on this fd *\/$/;"	m	struct:unixFile	file:
eFileLock	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char eFileLock;        \/* One of SHARED_LOCK, RESERVED_LOCK etc. *\/$/;"	m	struct:unixInodeInfo	file:
eLock	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 eLock;                   \/* Current lock held on database file *\/$/;"	m	struct:Pager	file:
eLock	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 eLock;             \/* READ_LOCK or WRITE_LOCK *\/$/;"	m	struct:BtLock	file:
eORThreadEntry	kernel/TeGeometricTransformation.cpp	/^bool TeGeometricTransformation::eORThreadEntry( $/;"	f	class:TeGeometricTransformation
eOperator	drivers/SQLite/sqlite3/sqlite3.c	/^  Token eOperator;  \/* "like" or "glob" or "regexp" *\/$/;"	m	struct:LikeOp	file:
eOperator	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 eOperator;          \/* A WO_xx value describing <op> *\/$/;"	m	struct:WhereTerm	file:
eOrconf	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 eOrconf;          \/* Default ON CONFLICT policy for trigger steps *\/$/;"	m	struct:Parse	file:
eSearch	drivers/SQLite/sqlite3/sqlite3.c	/^  i16 eSearch;                    \/* Search strategy (see below) *\/$/;"	m	struct:Fts3Cursor	file:
eState	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 eState;                  \/* Pager state (OPEN, READER, WRITER_LOCKED..) *\/$/;"	m	struct:Pager	file:
eState	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 eState;                \/* One of the CURSOR_XXX constants (see below) *\/$/;"	m	struct:BtCursor	file:
eTriggerOp	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 eTriggerOp;       \/* TK_UPDATE, TK_INSERT or TK_DELETE *\/$/;"	m	struct:Parse	file:
eType	drivers/SQLite/sqlite3/sqlite3.c	/^  int eType;                 \/* One of the FTSQUERY_XXX values defined below *\/$/;"	m	struct:Fts3Expr	file:
eType	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 eType;                           \/* Allocation type code *\/$/;"	m	struct:MemBlockHdr	file:
eType	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 eType;         \/* SQLITE_NULL, SQLITE_INTEGER ... etc. *\/$/;"	m	struct:IndexSample	file:
eVec	image_processing/TePDICluster.hpp	/^    vector<double> eVec;$/;"	m	class:TePDICluster
eb1	drivers/Oracle/OCI/include/oratypes.h	/^typedef          char     eb1;$/;"	t
eb1	drivers/Oracle/OCI/include/oratypes.h	131;"	d
eb2	drivers/Oracle/OCI/include/oratypes.h	/^typedef          short    eb2;               $/;"	t
eb2	drivers/Oracle/OCI/include/oratypes.h	132;"	d
eb4	drivers/Oracle/OCI/include/oratypes.h	/^typedef          int      eb4;               $/;"	t
eb4	drivers/Oracle/OCI/include/oratypes.h	133;"	d
eb4	drivers/Oracle/OCI/include/oratypes.h	74;"	d
ebcdicToAscii	drivers/SQLite/sqlite3/sqlite3.c	/^const unsigned char ebcdicToAscii[] = {$/;"	v
echoOn	drivers/SQLite/sqlite3/shell.c	/^  int echoOn;            \/* True to echo input commands *\/$/;"	m	struct:callback_data	file:
edge	kernel/TeTin.h	/^	TeTinEdge& edge (long i)$/;"	f	class:TeTin
edgeAt	kernel/TeTin.h	/^	long edgeAt (short num)$/;"	f	class:TeTinTriangle
edgeBegin	kernel/TeTin.h	/^	TeTinEdgeIterator edgeBegin()$/;"	f	class:TeTin
edgeEnd	kernel/TeTin.h	/^	TeTinEdgeIterator edgeEnd()$/;"	f	class:TeTin
edgeOppVertex	kernel/TeTin.cpp	/^TeTin::edgeOppVertex(TeTinTriangle& t, long v)$/;"	f	class:TeTin
edgeOppVertex	kernel/TeTin.h	/^	long edgeOppVertex(long triangle, long vertex)$/;"	f	class:TeTin
edgeSet_	kernel/TeTin.h	/^	TeTinEdgeSet		edgeSet_;		\/\/! Triangulation edges vector$/;"	m	class:TeTin
edgeWithVertexDiffFromEdge	kernel/TeTin.cpp	/^TeTin::edgeWithVertexDiffFromEdge(long t, long v, long e)$/;"	f	class:TeTin
edges	kernel/TeTin.h	/^	void edges (long& first, long& second, long& third)$/;"	f	class:TeTinTriangle
edgesInterBySegment	kernel/TeTin.cpp	/^TeTin::edgesInterBySegment( TeCoord2D& pf, TeCoord2D& pn, std::list<long> &aiset, std::list<long> &viset )$/;"	f	class:TeTin
edit	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::edit()$/;"	f	class:TeQtMultiTextEdit
edit	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::edit()$/;"	f	class:TeQtTextEdit
edit	kernel/TeGraph.cpp	/^	unsigned char edit;         \/* color of edit window *\/$/;"	m	struct:Txtc	file:
editNextColumn	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::editNextColumn()$/;"	f	class:TeQtGrid
editNextRow	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::editNextRow()$/;"	f	class:TeQtGrid
editRep	drivers/qt/TeAppTheme.h	/^	TeGeomRep editRep() {return editRep_;}$/;"	f	class:TeAppTheme
editRep	drivers/qt/TeAppTheme.h	/^	void editRep(TeGeomRep r) {editRep_ = r;}$/;"	f	class:TeAppTheme
editRep_	drivers/qt/TeAppTheme.h	/^	TeGeomRep		editRep_;$/;"	m	class:TeAppTheme
edit_	drivers/qt/TeQtTextEdit.h	/^	bool				edit_;$/;"	m	class:TeQtTextEdit
edit_answer	kernel/TeGraph.cpp	/^	unsigned char edit_answer;  \/* color of answer bar in edit window *\/$/;"	m	struct:Txtc	file:
edit_bar	kernel/TeGraph.cpp	/^	unsigned char edit_bar;     \/* color of selection bar in edit window *\/$/;"	m	struct:Txtc	file:
edit_heading	kernel/TeGraph.cpp	/^	unsigned char edit_heading; \/* color of X\/Y values heading in edit window *\/$/;"	m	struct:Txtc	file:
edit_index	kernel/TeGraph.cpp	/^	unsigned char edit_index;   \/* color of index values in edit window *\/$/;"	m	struct:Txtc	file:
editing_	drivers/qt/TeQtGrid.h	/^	bool					editing_;$/;"	m	class:TeQtGrid
editionTime_	kernel/TeLayer.h	/^	TeTime		editionTime_;			\/\/!< Stores the last time that the layer was edited. $/;"	m	class:TeLayer
editor_	drivers/qt/TeQtBigTable.h	/^	mutable QLineEdit *editor_;$/;"	m	class:TeQtBigTable
efeitopepita_	stat/TeSemivarModelFactory.h	/^	double		efeitopepita_;$/;"	m	struct:TeSemivarModelParams
elem	kernel/TeComposite.h	/^	T&	elem ()$/;"	f	class:TeSingle
elem	kernel/TeGeometry.h	/^	T& elem ()$/;"	f	class:TeGeomSingle
elem	kernel/TeGeometry.h	/^	const T& elem () const$/;"	f	class:TeGeomSingle
elemSet	kernel/TeBaseSTInstanceSet.h	/^			TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>* elemSet()$/;"	f	class:TeBaseSTInstanceSet::propertyIterator
elemType	kernel/TeCoverage.h	/^    TeGeomRep elemType()$/;"	f	class:TeCoverage
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeARCS; }$/;"	f	class:TeArc
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeARCS; }$/;"	f	class:TeArcSet
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeCELLS; }$/;"	f	class:TeCell
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeCELLS; }$/;"	f	class:TeCellSet
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeGEOMETRYNONE; }$/;"	f	class:TeGeometryNone
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeLINES; }$/;"	f	class:TeLine2D
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeLINES; }$/;"	f	class:TeLineSet
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeNODES; }$/;"	f	class:TeNode
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeNODES; }$/;"	f	class:TeNodeSet
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TePOINTS; }$/;"	f	class:TePoint
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TePOINTS; }$/;"	f	class:TePointSet
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TePOLYGONS; }$/;"	f	class:TePolygon
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TePOLYGONS; }$/;"	f	class:TePolygonSet
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeSAMPLES; }$/;"	f	class:TeContourLineSet
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeSAMPLES; }$/;"	f	class:TeSample
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeSAMPLES; }$/;"	f	class:TeSampleSet
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeTEXT; }$/;"	f	class:TeText
elemType	kernel/TeGeometry.h	/^	TeGeomRep elemType() const { return TeTEXT; }$/;"	f	class:TeTextSet
elemType	kernel/TeGeometry.h	/^	virtual TeGeomRep elemType() const $/;"	f	class:TeGeometry
elemType	kernel/TeRaster.h	/^inline TeGeomRep TeRaster::elemType() $/;"	f	class:TeRaster
elemType	kernel/TeTin.h	/^	TeGeomRep elemType() { return TeSAMPLES; }$/;"	f	class:TeTin
elemType	kernel/TeTin.h	/^	TeGeomRep elemType() { return TeSAMPLES; }$/;"	f	class:TeTinEdge
elemType	kernel/TeTin.h	/^	TeGeomRep elemType() { return TeSAMPLES; }$/;"	f	class:TeTinEdgeSet
elemType	kernel/TeTin.h	/^	TeGeomRep elemType() { return TeSAMPLES; }$/;"	f	class:TeTinTriangle
elemType	kernel/TeTin.h	/^	TeGeomRep elemType() { return TeSAMPLES; }$/;"	f	class:TeTinTriangleSet
elemType	kernel/TeTin.h	/^	TeGeomRep elemType() { return TeSAMPLES; }$/;"	f	class:TeTinVertex
elemType	kernel/TeTin.h	/^	TeGeomRep elemType() { return TeSAMPLES; }$/;"	f	class:TeTinVertexSet
elem_	kernel/TeComposite.h	/^	T	elem_;	\/\/!< the single element$/;"	m	class:TeSingle
elem_	kernel/TeGeometry.h	/^	T	elem_;$/;"	m	class:TeGeomSingle
elem_	stat/TeStatDataStructures.h	/^		TeGridElement elem_;$/;"	m	class:TeKernelGridSupport::iterator
elem_	stat/TeStatDataStructures.h	/^		TeGridElement elem_;$/;"	m	class:TeKernelGridSupport::iteratorPoly
elementSize	drivers/GL/glcore.h	/^    GLuint elementSize;$/;"	m	struct:__GLdrawableBufferRec
elementSize	drivers/GL/internal/glcore.h	/^    GLuint elementSize;$/;"	m	struct:__GLdrawableBufferRec
elementSize	kernel/TeRasterParams.cpp	/^int TeRasterParams::elementSize(int band)$/;"	f	class:TeRasterParams
elementSizeLog2	drivers/GL/glcore.h	/^    GLuint elementSizeLog2;$/;"	m	struct:__GLdrawableBufferRec
elementSizeLog2	drivers/GL/internal/glcore.h	/^    GLuint elementSizeLog2;$/;"	m	struct:__GLdrawableBufferRec
ellipsoidList	kernel/TeDatum.cpp	/^const char* ellipsoidList [] = $/;"	v
emission_reception_enabled_	kernel/TeCommunicator.h	/^      bool emission_reception_enabled_;$/;"	m	class:TeCommunicator
emitSignal	kernel/TeThreadSignal.cpp	/^void TeThreadSignal::emitSignal()$/;"	f	class:TeThreadSignal
empty	kernel/TeComposite.h	/^	bool empty() const$/;"	f	class:TeComposite
empty	kernel/TeGeometry.h	/^	bool empty () const$/;"	f	class:TeGeomComposite
empty	kernel/TeMultiGeometry.h	/^	bool empty()  $/;"	f	class:TeMultiGeometry
empty	kernel/dynpq.h	/^		bool empty() const { return csize == 0;}$/;"	f	class:br_stl::dynamic_priority_queue
enableTimer	drivers/SQLite/sqlite3/shell.c	/^static int enableTimer = 0;$/;"	v	file:
enableVisibility_	kernel/TeAbstractTheme.h	/^	int	enableVisibility_;$/;"	m	class:TeAbstractTheme
enable_multi_thread_	kernel/TeGTParams.h	/^      bool enable_multi_thread_;     $/;"	m	class:TeGTParams
enable_shared_cache	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines	file:
enable_shared_cache	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines
enable_simulated_io_errors	drivers/SQLite/sqlite3/sqlite3.c	/^void enable_simulated_io_errors(void){$/;"	f
enable_simulated_io_errors	drivers/SQLite/sqlite3/sqlite3.c	40890;"	d	file:
enable_simulated_io_errors	drivers/SQLite/sqlite3/sqlite3.c	8811;"	d	file:
enabled_	image_processing/TePDIPIManager.hpp	/^      bool enabled_;    $/;"	m	class:TePDIPIManager
enc	drivers/SQLite/sqlite3/sqlite3.c	/^  u8  enc;            \/* SQLITE_UTF8, SQLITE_UTF16BE, SQLITE_UTF16LE *\/$/;"	m	struct:Mem	file:
enc	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 enc;               \/* Text encoding handled by xCmp() *\/$/;"	m	struct:CollSeq	file:
enc	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 enc;              \/* Text encoding used by this database *\/$/;"	m	struct:Schema	file:
enc	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 enc;             \/* Text encoding - one of the SQLITE_UTF* values *\/$/;"	m	struct:KeyInfo	file:
encodeDate	drivers/Firebird/ibpp/core/time.cpp	/^void encodeDate(ISC_DATE& isc_dt, const IBPP::Date& dt)$/;"	f	namespace:ibpp_internals
encodeLine	utils/TeWKBGeometryDecoder.cpp	/^void TeWKBGeometryDecoder::encodeLine(const TeLine2D& line, char*& wkbLine, unsigned int& size)$/;"	f	class:TeWKBGeometryDecoder
encodeLine	utils/TeWKTGeometryDecoder.cpp	/^void TeWKTGeometryDecoder::encodeLine(const TeLine2D& line, string& wktLine)$/;"	f	class:TeWKTGeometryDecoder
encodePoint	utils/TeWKBGeometryDecoder.cpp	/^void TeWKBGeometryDecoder::encodePoint(const TeCoord2D& point, char*& wkbPoint, unsigned int& size)$/;"	f	class:TeWKBGeometryDecoder
encodePoint	utils/TeWKTGeometryDecoder.cpp	/^void TeWKTGeometryDecoder::encodePoint(const TeCoord2D& point, string& wktPoint)$/;"	f	class:TeWKTGeometryDecoder
encodePolygon	utils/TeWKBGeometryDecoder.cpp	/^void TeWKBGeometryDecoder::encodePolygon(const TePolygon& polygon, char*& wkbPoly, unsigned int& size)$/;"	f	class:TeWKBGeometryDecoder
encodePolygon	utils/TeWKTGeometryDecoder.cpp	/^void TeWKTGeometryDecoder::encodePolygon(const TePolygon& polygon, string& wktPoly)$/;"	f	class:TeWKTGeometryDecoder
encodeRing	utils/TeWKBGeometryDecoder.cpp	/^void encodeRing(const TeLine2D& line, char*& wkbLine, unsigned int& size)$/;"	f
encodeTime	drivers/Firebird/ibpp/core/time.cpp	/^void encodeTime(ISC_TIME& isc_tm, const IBPP::Time& tm)$/;"	f	namespace:ibpp_internals
encodeTimestamp	drivers/Firebird/ibpp/core/time.cpp	/^void encodeTimestamp(ISC_TIMESTAMP& isc_ts, const IBPP::Timestamp& ts)$/;"	f	namespace:ibpp_internals
end	drivers/Firebird/ibpp/core/_ibpp.h	/^	It end()	{ return mIt + 1 + static_cast<int>(*mIt) + 4; }$/;"	f	struct:ibpp_internals::EventBufferIterator
end	functions/TeCellAlgorithms.cpp	/^TeBoxRasterIterator::end()$/;"	f	class:TeBoxRasterIterator
end	functions/TeRasterIteratorSet.h	/^	iterator end()	 { int i = _endSet.size()-1; return i >= 0 ? iterator(this, i, _endSet.at(i)) : iterator(); }$/;"	f	class:RasterIteratorSet
end	image_processing/TePDIJointHistogram.cpp	/^TePDIJointHistogram::const_iterator TePDIJointHistogram::end() const$/;"	f	class:TePDIJointHistogram
end	kernel/TeBaseSTInstanceSet.h	/^	propertyIterator end(const int& attIndex)$/;"	f	class:TeBaseSTInstanceSet
end	kernel/TeBaseSTInstanceSet.h	/^	propertyIterator end(const string& attName)$/;"	f	class:TeBaseSTInstanceSet
end	kernel/TeBaseSTInstanceSet.h	/^	virtual iterator end()$/;"	f	class:TeBaseSTInstanceSet
end	kernel/TeComposite.h	/^    iterator end(void)$/;"	f	class:TeComposite
end	kernel/TeCoverage.h	/^    typename TeCoverage<T>::iterator end($/;"	f	class:TeCoverage
end	kernel/TeGeometry.h	/^	typename TeComposite<T>::iterator const end() const$/;"	f	class:TeGeomComposite::TeComposite
end	kernel/TeGeometry.h	/^	typename TeComposite<T>::iterator end()$/;"	f	class:TeGeomComposite
end	kernel/TeNeighbours.h	/^    iterator end()       { return _neigh.end();}$/;"	f	class:TeNeighbours
end	kernel/TeRaster.cpp	/^TeRaster::iterator TeRaster::end() $/;"	f	class:TeRaster
end	kernel/TeRaster.cpp	/^TeRaster::iteratorPoly TeRaster::end(const TePolygon& poly, TeStrategicIterator st, int band) $/;"	f	class:TeRaster
end	kernel/TeRaster.h	/^inline bool TeRaster::iteratorPoly::end()$/;"	f	class:TeRaster::iteratorPoly
end	kernel/TeRedBlackTree.h	/^			iterator end(void)$/;"	f	class:TeREDBLACK::TeRBTree
end	kernel/TeSparseMatrix.h	/^   const_iterator end()   const { return C.end();}$/;"	f	class:TeSparseMatrix
end	kernel/TeSparseMatrix.h	/^   iterator end()               { return C.end();}$/;"	f	class:TeSparseMatrix
end	kernel/graph.h	/^		iterator end()       { return C.end();}$/;"	f	class:br_stl::Graph
end	stat/TeStatDataStructures.h	/^	iterator end()$/;"	f	class:TeKernelGridSupport
end	stat/TeStatDataStructures.h	/^	iteratorPoly end(TePolygon poly)$/;"	f	class:TeKernelGridSupport
end	stat/TeStatDataStructures.h	/^    iterator end() {$/;"	f	class:TeSTStatInstanceSet
end	stat/TeStatDataStructures.h	/^  iterator end()$/;"	f	class:TePointTInstanceSet
end	stat/TeStatDataStructures.h	/^  iterator end(const TeCoord2D& \/* center *\/, const double& \/* radius *\/)$/;"	f	class:TePointTInstanceSet
endDispatchOverride	drivers/GL/glcore.h	/^    void (*endDispatchOverride)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
endDispatchOverride	drivers/GL/internal/glcore.h	/^    void (*endDispatchOverride)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
endEdit	drivers/qt/TeQtBigTable.cpp	/^void TeQtBigTable::endEdit(int row, int col, bool \/* accept *\/, bool replace)$/;"	f	class:TeQtBigTable
endEdit	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::endEdit(int row, int col, bool accept, bool replace)$/;"	f	class:TeQtGrid
endEdit	drivers/qt/TeQtTable.h	/^	virtual void endEdit(int row, int col, bool accept, bool replace)$/;"	f	class:TeQtTable
endEdit	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::endEdit()$/;"	f	class:TeQtMultiTextEdit
endEdit	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::endEdit()$/;"	f	class:TeQtTextEdit
endEntity	drivers/DXF/tedxfvisitor.cpp	/^void TeDXFVisitor::endEntity() $/;"	f	class:TeDXFVisitor
endPrinting	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::endPrinting()$/;"	f	class:TeQtCanvas
endSession	kernel/TeErrorLog.cpp	/^TeErrorLog::endSession ()$/;"	f	class:TeErrorLog
endTimer	drivers/SQLite/sqlite3/shell.c	/^static void endTimer(void){$/;"	f	file:
end_	functions/TeCellAlgorithms.h	/^		bool end_;$/;"	m	class:TeBoxRasterIterator
end_	kernel/TeRaster.h	/^			bool				end_;$/;"	m	class:TeRaster::iteratorPoly
end_column	image_processing/TePDIKMeansClas.hpp	/^    int end_column;$/;"	m	class:TePDIKMeansClas
end_line	image_processing/TePDIKMeansClas.hpp	/^    int end_line;$/;"	m	class:TePDIKMeansClas
endpoint	drivers/SQLite/sqlite3/sqlite3.c	/^  FilePoint endpoint;             \/* Pointer to the end of the file *\/$/;"	m	struct:MemJournal	file:
ensure	kernel/TeAssertions.h	32;"	d
enterEvent	drivers/qt/TeQtProgress.h	/^	void enterEvent ( QEvent * )$/;"	f	class:TeQtProgress
enterMutex	drivers/SQLite/sqlite3/sqlite3.c	/^static void enterMutex(void){$/;"	f	file:
env	drivers/Oracle/OCI/include/occiAQ.h	/^     const EnvironmentImpl *env;$/;"	m	class:oracle::occi::aq::NotifyResult
envhp	drivers/Oracle/OCI/include/occiData.h	/^  OCIEnv *envhp;$/;"	m	class:oracle::occi::Date
envhp_	drivers/Oracle/TeOCIConnect.h	/^	OCIEnv*			envhp_;		\/\/!< environment OCI handle        $/;"	m	class:TeOCIConnection
eof	drivers/PostgreSQL/TePGInterface.h	/^		bool eof(void) const { return int_index_current_ == int_eof_; }$/;"	f	class:TePGRecordset
epsgCode	kernel/TeProjection.h	/^	int epsgCode() { return GPepsgCode; }$/;"	f	class:TeProjection
epsgCode	kernel/TeProjection.h	/^	void epsgCode(int code) { GPepsgCode = code; }$/;"	f	class:TeProjection
epsgCode_	kernel/TeAttribute.h	/^	int				epsgCode_;		\/\/!< for the spatial data types, this attribute stores the epsg number$/;"	m	struct:TeAttributeRep
epsgCode_	kernel/TeDatum.h	/^	int     epsgCode_;  $/;"	m	class:TeDatum
erase	drivers/qt/TeQtGraph.cpp	/^void TePlotWidget::erase( int order)$/;"	f	class:TePlotWidget
erase	kernel/TeComposite.h	/^	bool erase ( T& elem )$/;"	f	class:TeComposite
erase	kernel/TeComposite.h	/^	bool erase ( unsigned int i )$/;"	f	class:TeComposite
erase	kernel/TeComposite.h	/^	iterator erase(iterator it)$/;"	f	class:TeComposite
erase	kernel/TeGeometry.h	/^	bool erase ( T& object )$/;"	f	class:TeGeomComposite
erase	kernel/TeGeometry.h	/^	bool erase ( int i )$/;"	f	class:TeGeomComposite
erase	kernel/TeGeometry.h	/^	typename TeComposite<T>::iterator erase(typename TeComposite<T>::iterator it)$/;"	f	class:TeGeomComposite
erase	kernel/TeKdTree.h	/^		void erase(KdTreeNode* node)$/;"	f	class:TeSAM::TeBasicKdTree
erase	kernel/TeRTree.h	/^		void erase(TeRTreeNodeType* node)$/;"	f	class:TeSAM::TeRTree
erase	kernel/TeRedBlackTree.h	/^			void erase(iterator& it)$/;"	f	class:TeREDBLACK::TeRBTree
eraseMetadata	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::eraseMetadata(TeDatabase* db)$/;"	f	class:TeExternalTheme
eraseMetadata	kernel/TeFileTheme.cpp	/^bool TeFileTheme::eraseMetadata(TeDatabase* localDb_)$/;"	f	class:TeFileTheme
eraseMetadata	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::eraseMetadata(TeDatabase* database)$/;"	f	class:TeSFSTheme
eraseMetadata	kernel/TeTheme.h	/^	virtual bool eraseMetadata(TeDatabase* ) { return true; } $/;"	f	class:TeTheme
ergas_index	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::ergas_index(TePDITypes::TePDIRasterVectorType original_rasters, std::vector<int> original_bands, TePDITypes::TePDIRasterVectorType fused_rasters, std::vector<int> fused_bands, double low_resolution, double high_resolution, TeSharedPtr<double> ergas)$/;"	f	class:TePDIFusionIndexes
errCode	drivers/SQLite/sqlite3/sqlite3.c	/^  int errCode;                  \/* Most recent error code (SQLITE_*) *\/$/;"	m	struct:sqlite3	file:
errCode	drivers/SQLite/sqlite3/sqlite3.c	/^  int errCode;                \/* One of several kinds of errors *\/$/;"	m	struct:Pager	file:
errMask	drivers/SQLite/sqlite3/sqlite3.c	/^  int errMask;                  \/* & result codes with this before returning *\/$/;"	m	struct:sqlite3	file:
errMsg	drivers/SQLite/sqlite3/sqlite3.c	/^  StrAccum errMsg;  \/* Accumulate the error message text here *\/$/;"	m	struct:IntegrityCk	file:
errMsg_	functions/TeAddressLocator.h	/^		string errMsg_;								\/\/!< Error message description$/;"	m	class:TeAddressLocator
errNum	drivers/Oracle/OCI/include/occiObjects.h	/^   ub4 errNum;$/;"	m	struct:oracle::occi::AnyDataCtx
err_msg	drivers/PostgreSQL/TePGInterface.h	/^        const char* err_msg(void) const { return PQerrorMessage(pg_connection_); }$/;"	f	class:TePGConnection
errcode	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines	file:
errcode	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines
errhp_	drivers/Oracle/TeOCIConnect.h	/^	OCIError*		errhp_;		\/\/!< error OCI handle$/;"	m	class:TeOCIConnection
errlogFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void errlogFunc($/;"	f	file:
errmsg	drivers/SQLite/sqlite3/sqlite3.c	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
errmsg	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
errmsg16	drivers/SQLite/sqlite3/sqlite3.c	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
errmsg16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
error	kernel/TeGraph.cpp	/^	unsigned char error;        \/* color of error window *\/$/;"	m	struct:Txtc	file:
errorAction	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 errorAction;         \/* Recovery action to do in case of an error *\/$/;"	m	struct:Vdbe	file:
errorLog_	kernel/TeErrorLog.h	/^	TeErrorLogMap errorLog_;$/;"	m	class:TeErrorLog
errorMess_	drivers/Oracle/TeOCIConnect.h	/^	string       errorMess_;		\/\/!< error message returned by the ORACLE DBMS$/;"	m	class:TeOCIConnection
errorMessage	drivers/MySQL/TeMySQL.cpp	/^string TeMySQL::errorMessage ()$/;"	f	class:TeMySQL
errorMessage	drivers/MySQL/TeMySQL.cpp	/^string TeMySQLPortal::errorMessage()$/;"	f	class:TeMySQLPortal
errorMessage	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::errorMessage()$/;"	f	class:TePostgreSQL
errorMessage	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQLPortal::errorMessage()$/;"	f	class:TePostgreSQLPortal
errorMessage	drivers/SQLite/TeSQLite.cpp	/^string TeSQLite::errorMessage()$/;"	f	class:TeSQLite
errorMessage	drivers/SQLite/TeSQLite.cpp	/^string TeSQLitePortal::errorMessage()$/;"	f	class:TeSQLitePortal
errorMessage	functions/TeAddressLocator.h	/^		string errorMessage() const$/;"	f	class:TeAddressLocator
errorMessage	kernel/TeDatabase.h	/^	virtual string	errorMessage ()$/;"	f	class:TeDatabasePortal
errorMessage	kernel/TeDatabase.h	/^	virtual string errorMessage ()$/;"	f	class:TeDatabase
errorMessage	kernel/TeRaster.h	/^inline const string& TeRaster::errorMessage() const$/;"	f	class:TeRaster
errorMessage	kernel/TeTin.h	/^	string errorMessage ()$/;"	f	class:TeTin
errorMessage_	drivers/Oracle/TeOCICursor.h	/^	string				errorMessage_;		\/\/!< error message returned by the ORACLE DBMS  $/;"	m	class:TeOCICursor
errorMessage_	drivers/qt/TeQtGridSource.h	/^	mutable string errorMessage_;$/;"	m	class:TeQtGridSource
errorMessage_	drivers/qt/TeQtLegendSource.h	/^	QString errorMessage_;$/;"	m	class:TeQtLegendSource
errorMessage_	kernel/TeDatabase.h	/^	string          errorMessage_;	\/\/!< error message$/;"	m	class:TeDatabasePortal
errorMessage_	kernel/TeDatabase.h	/^        std::string				errorMessage_;			\/\/!< error message$/;"	m	class:TeDatabase
errorMessage_	kernel/TeErrorLog.h	/^	TeErrorTypeMap  errorMessage_;$/;"	m	class:TeErrorLog
errorMessage_	kernel/TeErrorMessage.cpp	/^static map<string, string> errorMessage_;$/;"	v	file:
errorMessage_	kernel/TeRasterParams.h	/^	string errorMessage_;$/;"	m	class:TeRasterParams
errorMessage_	kernel/TeTin.h	/^	std::string			errorMessage_;$/;"	m	class:TeTin
errorNum	drivers/MySQL/TeMySQL.cpp	/^int	TeMySQL::errorNum ()$/;"	f	class:TeMySQL
errorNum	drivers/MySQL/TeMySQL.cpp	/^int	TeMySQLPortal::errorNum()$/;"	f	class:TeMySQLPortal
errorNum	kernel/TeDatabase.h	/^	virtual int	errorNum ()$/;"	f	class:TeDatabase
errorNum	kernel/TeDatabase.h	/^	virtual int errorNum ()$/;"	f	class:TeDatabasePortal
errorNumber_	kernel/TeDatabase.h	/^	int					errorNumber_;			\/\/!< error number$/;"	m	class:TeDatabase
errorNumber_	kernel/TeDatabase.h	/^	int				errorNumber_;	\/\/!< error number$/;"	m	class:TeDatabasePortal
error_	stat/TeBayesFunctions.h	/^   TeGlobalBayesError error_;$/;"	m	class:TeGlobalBayesException
error_	stat/TeKernelFunctions.h	/^  TeKernelError error_;$/;"	m	class:TeKernelException
error_message_	drivers/ado/TeAdoDB.h	/^	string					error_message_;$/;"	m	class:TeAdoPortal
error_num_	drivers/ado/TeAdoDB.h	/^	long					error_num_;$/;"	m	class:TeAdoPortal
escapeBytea	drivers/PostgreSQL/TePGInterface.h	/^		static unsigned char* escapeBytea(const unsigned char *from, size_t from_length, size_t* to_length) { return PQescapeBytea(from, from_length, to_length); }$/;"	f	class:TePGConnection
escapeSequence	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::escapeSequence(const string& from)$/;"	f	class:TeFirebird
escapeSequence	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::escapeSequence(const string& from)$/;"	f	class:TeMySQL
escapeSequence	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::escapeSequence (const string& from)$/;"	f	class:TeOCIOracle
escapeSequence	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::escapeSequence(const string& from)$/;"	f	class:TePostgreSQL
escapeSequence	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQLPortal::escapeSequence(const string& from)$/;"	f	class:TePostgreSQLPortal
escapeSequence	drivers/SQLite/TeSQLite.cpp	/^string TeSQLite::escapeSequence(const string& from)$/;"	f	class:TeSQLite
escapeSequence	drivers/ado/TeAdoDB.cpp	/^TeAdo::escapeSequence(const string& from)$/;"	f	class:TeAdo
escapeString	drivers/PostgreSQL/TePGInterface.h	/^		static char* escapeString(const char* from, const size_t& fromLen, size_t& newLen)$/;"	f	class:TePGConnection
estLog	drivers/SQLite/sqlite3/sqlite3.c	/^static double estLog(double N){$/;"	f	file:
estimatedCost	drivers/SQLite/sqlite3/sqlite3.c	/^  double estimatedCost;      \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info	file:
estimatedCost	drivers/SQLite/sqlite3/sqlite3.h	/^  double estimatedCost;      \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info
etBUFSIZE	drivers/SQLite/sqlite3/sqlite3.c	19110;"	d	file:
etByte	drivers/SQLite/sqlite3/sqlite3.c	/^typedef unsigned char etByte;$/;"	t	file:
etCHARX	drivers/SQLite/sqlite3/sqlite3.c	18982;"	d	file:
etDYNSTRING	drivers/SQLite/sqlite3/sqlite3.c	18980;"	d	file:
etEXP	drivers/SQLite/sqlite3/sqlite3.c	18976;"	d	file:
etFLOAT	drivers/SQLite/sqlite3/sqlite3.c	18975;"	d	file:
etGENERIC	drivers/SQLite/sqlite3/sqlite3.c	18977;"	d	file:
etINVALID	drivers/SQLite/sqlite3/sqlite3.c	18993;"	d	file:
etORDINAL	drivers/SQLite/sqlite3/sqlite3.c	18991;"	d	file:
etPERCENT	drivers/SQLite/sqlite3/sqlite3.c	18981;"	d	file:
etPOINTER	drivers/SQLite/sqlite3/sqlite3.c	18989;"	d	file:
etRADIX	drivers/SQLite/sqlite3/sqlite3.c	18974;"	d	file:
etSIZE	drivers/SQLite/sqlite3/sqlite3.c	18978;"	d	file:
etSQLESCAPE	drivers/SQLite/sqlite3/sqlite3.c	18984;"	d	file:
etSQLESCAPE2	drivers/SQLite/sqlite3/sqlite3.c	18985;"	d	file:
etSQLESCAPE3	drivers/SQLite/sqlite3/sqlite3.c	18990;"	d	file:
etSRCLIST	drivers/SQLite/sqlite3/sqlite3.c	18988;"	d	file:
etSTRING	drivers/SQLite/sqlite3/sqlite3.c	18979;"	d	file:
etTOKEN	drivers/SQLite/sqlite3/sqlite3.c	18987;"	d	file:
et_getdigit	drivers/SQLite/sqlite3/sqlite3.c	/^static char et_getdigit(LONGDOUBLE_TYPE *val, int *cnt){$/;"	f	file:
et_info	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct et_info {   \/* Information about each format field *\/$/;"	s	file:
et_info	drivers/SQLite/sqlite3/sqlite3.c	/^} et_info;$/;"	t	typeref:struct:et_info	file:
eucBlendMethodImp	image_processing/TePDIBlender.cpp	/^void TePDIBlender::eucBlendMethodImp( const double& line, const double& col,$/;"	f	class:TePDIBlender
eucBlendMethodImp_coord1_	image_processing/TePDIBlender.hpp	/^      TeCoord2D eucBlendMethodImp_coord1_;$/;"	m	class:TePDIBlender
eucBlendMethodImp_coord2_	image_processing/TePDIBlender.hpp	/^      TeCoord2D eucBlendMethodImp_coord2_;$/;"	m	class:TePDIBlender
eucBlendMethodImp_curCoord_	image_processing/TePDIBlender.hpp	/^      TeCoord2D eucBlendMethodImp_curCoord_;$/;"	m	class:TePDIBlender
eucBlendMethodImp_currDist_	image_processing/TePDIBlender.hpp	/^      double eucBlendMethodImp_currDist_;$/;"	m	class:TePDIBlender
eucBlendMethodImp_dummyCoord_	image_processing/TePDIBlender.hpp	/^      TeCoord2D eucBlendMethodImp_dummyCoord_;$/;"	m	class:TePDIBlender
eucBlendMethodImp_iLSIdx_	image_processing/TePDIBlender.hpp	/^      unsigned int eucBlendMethodImp_iLSIdx_;$/;"	m	class:TePDIBlender
eucBlendMethodImp_minDistToR1_	image_processing/TePDIBlender.hpp	/^      double eucBlendMethodImp_minDistToR1_;$/;"	m	class:TePDIBlender
eucBlendMethodImp_minDistToR2_	image_processing/TePDIBlender.hpp	/^      double eucBlendMethodImp_minDistToR2_;$/;"	m	class:TePDIBlender
eucBlendMethodImp_value1_	image_processing/TePDIBlender.hpp	/^      double eucBlendMethodImp_value1_; $/;"	m	class:TePDIBlender
eucBlendMethodImp_value2_	image_processing/TePDIBlender.hpp	/^      double eucBlendMethodImp_value2_;$/;"	m	class:TePDIBlender
eucBlendMethodImp_weight1_	image_processing/TePDIBlender.hpp	/^      double eucBlendMethodImp_weight1_;$/;"	m	class:TePDIBlender
eucBlendMethodImp_weight2_	image_processing/TePDIBlender.hpp	/^      double eucBlendMethodImp_weight2_;$/;"	m	class:TePDIBlender
eucTreshold_	image_processing/TePDIParaSegBaatzStrategy.hpp	/^      double eucTreshold_;$/;"	m	class:TePDIParaSegBaatzStrategy
eucTreshold_	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^      double eucTreshold_;$/;"	m	class:TePDIParaSegRegGrowStrategy
evalConstExpr	drivers/SQLite/sqlite3/sqlite3.c	/^static int evalConstExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
evaluate	kernel/TeCoverage.h	/^    void evaluate(TeRaster& raster, const int rasterBand, const int coverageDimension, const TeBox& box = TeBox())$/;"	f	class:TeCoverage
evaluate	kernel/TeCoverage.h	/^    void evaluate(const TeCoord2D& location, std::vector<double>& value)$/;"	f	class:TeCoverage
evaluate	kernel/TeCoverageInterpolatorNN.h	/^    virtual void evaluate(TeRaster& raster, const int rasterBand, const int coverageDimension, const TeBox& box = TeBox())$/;"	f	class:TeCoverageInterpolatorNN
evaluate	kernel/TeCoverageInterpolatorNN.h	/^    virtual void evaluate(const TeCoord2D& position, std::vector<double>& value)$/;"	f	class:TeCoverageInterpolatorNN
eventFilter	drivers/qt/TeQtGrid.cpp	/^bool TeQtGrid::eventFilter(QObject *o, QEvent *e)$/;"	f	class:TeQtGrid
eventThemeId1_	stat/TeKernelParams.h	/^	int						eventThemeId1_;			\/\/ event theme id$/;"	m	struct:TeKernelParams
eventThemeId2_	stat/TeKernelParams.h	/^	int						eventThemeId2_;			\/\/ event theme id$/;"	m	struct:TeKernelParams
eventThemeName1_	stat/TeKernelParams.h	/^	string					eventThemeName1_;		\/\/ event theme name$/;"	m	struct:TeKernelParams
eventThemeName2_	stat/TeKernelParams.h	/^	string					eventThemeName2_;		\/\/ event theme name$/;"	m	struct:TeKernelParams
event_	kernel/TeThreadSignal.h	/^        HANDLE event_;$/;"	m	class:TeThreadSignal
event_type	drivers/GL/glx.h	/^    int event_type;		\/* GLX_DAMAGED or GLX_SAVED *\/$/;"	m	struct:__anon176
event_type	drivers/GL/glxext.h	/^    int event_type;		  \/* GLX_DAMAGED_SGIX or GLX_SAVED_SGIX *\/$/;"	m	struct:__anon93
eword	drivers/Oracle/OCI/include/oratypes.h	/^typedef          int eword;                  $/;"	t
eword	drivers/Oracle/OCI/include/oratypes.h	196;"	d
exaustiveOutRemotion	kernel/TeGeometricTransformation.cpp	/^bool TeGeometricTransformation::exaustiveOutRemotion( $/;"	f	class:TeGeometricTransformation
exchangeTriangle	kernel/TeTin.h	/^	void exchangeTriangle ( long t1, long t2 )$/;"	f	class:TeTinEdge
exchangeVertex	kernel/TeTin.h	/^	void exchangeVertex ( long v1, long v2 )$/;"	f	class:TeTinEdge
exclMask	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShm	file:
exclMask	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:winShm	file:
exclMask	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:os2ShmLink	file:
exclMask	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 exclMask;               \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShmNode	file:
exclusiveMode	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 exclusiveMode;           \/* Boolean. True if locking_mode==EXCLUSIVE *\/$/;"	m	struct:Pager	file:
exclusiveMode	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 exclusiveMode;          \/* Non-zero if connection is in exclusive mode *\/$/;"	m	struct:Wal	file:
exec	drivers/PostgreSQL/TePGInterface.h	/^        PGresult* exec(const string& str_qry) { return PQexec(pg_connection_, str_qry.c_str()); }$/;"	f	class:TePGConnection
exec	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines	file:
exec	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines
execBinaryOperator	image_processing/TePDIArithmetic.cpp	/^bool TePDIArithmetic::execBinaryOperator( const std::string& token, $/;"	f	class:TePDIArithmetic
execExecSql	drivers/SQLite/sqlite3/sqlite3.c	/^static int execExecSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
execSql	drivers/SQLite/sqlite3/sqlite3.c	/^static int execSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
execUnaryOperator	image_processing/TePDIArithmetic.cpp	/^bool TePDIArithmetic::execUnaryOperator( const std::string& , $/;"	f	class:TePDIArithmetic
exec_cmd	drivers/PostgreSQL/TePGInterface.cpp	/^int TePGConnection::exec_cmd(const string& str_qry)$/;"	f	class:TePGConnection
exec_cmd_params	drivers/PostgreSQL/TePGInterface.cpp	/^int TePGConnection::exec_cmd_params(const char *command,$/;"	f	class:TePGConnection
execute	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::execute (const string &q)$/;"	f	class:TeFirebird
execute	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::execute (const string &q)$/;"	f	class:TeMySQL
execute	drivers/Oracle/TeOCIConnect.cpp	/^bool TeOCIConnection::execute(const string& stm)$/;"	f	class:TeOCIConnection
execute	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::execute (const string &q)$/;"	f	class:TeOCIOracle
execute	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::execute(const string &sql)$/;"	f	class:TePostgreSQL
execute	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::execute(const string &sql)$/;"	f	class:TeSQLite
execute	drivers/ado/TeAdoDB.cpp	/^TeAdo::execute (const string &q)$/;"	f	class:TeAdo
execute	image_processing/TePDIParaSegBaatzStrategy.cpp	/^bool TePDIParaSegBaatzStrategy::execute( const RasterDataVecT& $/;"	f	class:TePDIParaSegBaatzStrategy
execute	image_processing/TePDIParaSegRegGrowStrategy.cpp	/^bool TePDIParaSegRegGrowStrategy::execute( const RasterDataVecT& $/;"	f	class:TePDIParaSegRegGrowStrategy
executeBLOBSTM	drivers/Oracle/TeOCIConnect.cpp	/^TeOCIConnection::executeBLOBSTM(const string& stm, unsigned char* blobValue, const int& blobLength, const string& name)$/;"	f	class:TeOCIConnection
executeJob	kernel/TeThreadJobsManager.cpp	/^TeThreadJob const* TeThreadJobsManager::executeJob( $/;"	f	class:TeThreadJobsManager
executeJobCode	kernel/TeFunctionCallThreadJob.cpp	/^void TeFunctionCallThreadJob::executeJobCode() $/;"	f	class:TeFunctionCallThreadJob
executeSDOSTM	drivers/Oracle/TeOCIConnect.cpp	/^bool TeOCIConnection::executeSDOSTM(const string& stm)  $/;"	f	class:TeOCIConnection
executeString	image_processing/TePDIArithmetic.cpp	/^bool TePDIArithmetic::executeString( const std::string& aStr, $/;"	f	class:TePDIArithmetic
existRelation	drivers/Firebird/TeFirebird.h	/^	TeDBRelationType existRelation(const string& \/* tableName *\/, const string& \/* relName *\/)$/;"	f	class:TeFirebird
existRelation	drivers/MySQL/TeMySQL.h	/^	TeDBRelationType existRelation(const string& \/* tableName *\/, const string& \/* relName *\/)$/;"	f	class:TeMySQL
existRelation	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::existRelation(const string& tableName, const string& relName)$/;"	f	class:TeOCIOracle
existRelation	drivers/PostgreSQL/TePostgreSQL.cpp	/^TeDBRelationType TePostgreSQL::existRelation(const string& \/*tableName*\/, const string& relName)$/;"	f	class:TePostgreSQL
existRelation	drivers/SQLite/TeSQLite.cpp	/^TeDBRelationType TeSQLite::existRelation(const string& tableName, const string& relName)$/;"	f	class:TeSQLite
existRelation	drivers/ado/TeAdoDB.cpp	/^TeAdo::existRelation(const string& tableName, const string& relName)$/;"	f	class:TeAdo
existRelation	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::existRelation(const string& tableName, const string& relName)$/;"	f	class:TeFireBird
existRelation	drivers/ado/TeAdoOracle.cpp	/^TeOracle::existRelation(const string& tableName, const string& relName)$/;"	f	class:TeOracle
existRelation	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::existRelation(const string& \/* tableName *\/, const string& relName)$/;"	f	class:TeSqlServer
exists	kernel/TeOverlayUtils.cpp	/^	bool exists(const unsigned int index)$/;"	f	struct:TeSIP
expandBlob	drivers/SQLite/sqlite3/sqlite3.c	57046;"	d	file:
expensive_assert	drivers/SQLite/sqlite3/sqlite3.c	35244;"	d	file:
expensive_assert	drivers/SQLite/sqlite3/sqlite3.c	35246;"	d	file:
expired	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
expired	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 expired;             \/* True if the VM needs to be recompiled *\/$/;"	m	struct:Vdbe	file:
expired	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
explain	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 explain;             \/* True if EXPLAIN present on SQL command *\/$/;"	m	struct:Vdbe	file:
explain	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 explain;          \/* True if the EXPLAIN flag is found on the query *\/$/;"	m	struct:Parse	file:
explainAppendTerm	drivers/SQLite/sqlite3/sqlite3.c	/^static void explainAppendTerm($/;"	f	file:
explainComposite	drivers/SQLite/sqlite3/sqlite3.c	/^static void explainComposite($/;"	f	file:
explainComposite	drivers/SQLite/sqlite3/sqlite3.c	93563;"	d	file:
explainIndexRange	drivers/SQLite/sqlite3/sqlite3.c	/^static char *explainIndexRange(sqlite3 *db, WhereLevel *pLevel, Table *pTab){$/;"	f	file:
explainOneScan	drivers/SQLite/sqlite3/sqlite3.c	/^static void explainOneScan($/;"	f	file:
explainOneScan	drivers/SQLite/sqlite3/sqlite3.c	104481;"	d	file:
explainPrev	drivers/SQLite/sqlite3/shell.c	/^  struct previous_mode_data explainPrev;$/;"	m	struct:callback_data	typeref:struct:callback_data::previous_mode_data	file:
explainSetInteger	drivers/SQLite/sqlite3/sqlite3.c	93521;"	d	file:
explainSetInteger	drivers/SQLite/sqlite3/sqlite3.c	93526;"	d	file:
explainSimpleCount	drivers/SQLite/sqlite3/sqlite3.c	/^static void explainSimpleCount($/;"	f	file:
explainSimpleCount	drivers/SQLite/sqlite3/sqlite3.c	96371;"	d	file:
explainTempTable	drivers/SQLite/sqlite3/sqlite3.c	/^static void explainTempTable(Parse *pParse, const char *zUsage){$/;"	f	file:
explainTempTable	drivers/SQLite/sqlite3/sqlite3.c	93525;"	d	file:
expmask	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 expmask;            \/* Binding to these vars invalidates VM *\/$/;"	m	struct:Vdbe	file:
exportGTM	drivers/GTM/TeGTM.cpp	/^void TeGTM::exportGTM(TeTheme *theme, std::string fileName, FILE* file)$/;"	f	class:TeGTM
exports	drivers/GL/glcore.h	/^    __GLexports exports;$/;"	m	struct:__GLinterfaceRec
exports	drivers/GL/internal/glcore.h	/^    __GLexports exports;$/;"	m	struct:__GLinterfaceRec
exprAnalyze	drivers/SQLite/sqlite3/sqlite3.c	/^static void exprAnalyze($/;"	f	file:
exprAnalyzeAll	drivers/SQLite/sqlite3/sqlite3.c	/^static void exprAnalyzeAll($/;"	f	file:
exprAnalyzeOrTerm	drivers/SQLite/sqlite3/sqlite3.c	/^static void exprAnalyzeOrTerm($/;"	f	file:
exprCodeBetween	drivers/SQLite/sqlite3/sqlite3.c	/^static void exprCodeBetween($/;"	f	file:
exprCommute	drivers/SQLite/sqlite3/sqlite3.c	/^static void exprCommute(Parse *pParse, Expr *pExpr){$/;"	f	file:
exprDup	drivers/SQLite/sqlite3/sqlite3.c	/^static Expr *exprDup(sqlite3 *db, Expr *p, int flags, u8 **pzBuffer){$/;"	f	file:
exprIsConst	drivers/SQLite/sqlite3/sqlite3.c	/^static int exprIsConst(Expr *p, int initFlag){$/;"	f	file:
exprListTableUsage	drivers/SQLite/sqlite3/sqlite3.c	/^static Bitmask exprListTableUsage(WhereMaskSet *pMaskSet, ExprList *pList){$/;"	f	file:
exprNodeIsConstant	drivers/SQLite/sqlite3/sqlite3.c	/^static int exprNodeIsConstant(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprSelectTableUsage	drivers/SQLite/sqlite3/sqlite3.c	/^static Bitmask exprSelectTableUsage(WhereMaskSet *pMaskSet, Select *pS){$/;"	f	file:
exprSetHeight	drivers/SQLite/sqlite3/sqlite3.c	/^static void exprSetHeight(Expr *p){$/;"	f	file:
exprSetHeight	drivers/SQLite/sqlite3/sqlite3.c	73270;"	d	file:
exprStructSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int exprStructSize(Expr *p){$/;"	f	file:
exprTableUsage	drivers/SQLite/sqlite3/sqlite3.c	/^static Bitmask exprTableUsage(WhereMaskSet *pMaskSet, Expr *p){$/;"	f	file:
exprToString	drivers/SQLite/sqlite3/sqlite3.c	/^static char *exprToString(Fts3Expr *pExpr, char *zBuf){$/;"	f	file:
exprWalkNoop	drivers/SQLite/sqlite3/sqlite3.c	/^static int exprWalkNoop(Walker *NotUsed, Expr *NotUsed2){$/;"	f	file:
extendedRange	drivers/GL/glxint.h	/^    GLboolean extendedRange;$/;"	m	struct:__GLXFBConfigRec
extended_errcode	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*extended_errcode)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
extended_errcode	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*extended_errcode)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
extended_result_codes	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines	file:
extended_result_codes	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines
externalThemeFactory	kernel/TeExternalTheme.h	/^  static TeExternalThemeFactory externalThemeFactory;$/;"	m	namespace:__anon31
externref	drivers/Oracle/OCI/include/cdemodp0.h	105;"	d
extractCloserRasterNode	image_processing/TePDIBatchGeoMosaic.cpp	/^bool TePDIBatchGeoMosaic::extractCloserRasterNode( RastersListT& rList,$/;"	f	class:TePDIBatchGeoMosaic
extractClosestRastersNodes	image_processing/TePDIBatchGeoMosaic.cpp	/^bool TePDIBatchGeoMosaic::extractClosestRastersNodes( RastersListT& rList,$/;"	f	class:TePDIBatchGeoMosaic
extractLocalMaximas	image_processing/TePDIMMIOMatching.cpp	/^bool TePDIMMIOMatching::extractLocalMaximas( $/;"	f	class:TePDIMMIOMatching
extractLocalMaximas	image_processing/TePDIMMIOMatching.cpp	/^void TePDIMMIOMatching::extractLocalMaximas( void * paramsPtr )$/;"	f	class:TePDIMMIOMatching
f	drivers/SQLite/sqlite3/sqlite3.c	/^  float f;$/;"	m	union:RtreeCoord	file:
fCol_	drivers/qt/TeQtGrid.h	/^	int						iCol_, fCol_;$/;"	m	class:TeQtGrid
fCol_	drivers/qt/TeQtTable.h	/^	int					iCol_, fCol_;$/;"	m	class:TeQtTable
fLine_	drivers/qt/TeQtGrid.h	/^	int						iLine_, fLine_;$/;"	m	class:TeQtGrid
fLine_	drivers/qt/TeQtTable.h	/^	int					iLine_, fLine_;$/;"	m	class:TeQtTable
f_	drivers/qt/TeQtCanvas.h	/^	double	f_;$/;"	m	class:TeQtCanvas
f_Samp	image_processing/TePDIKMeansClas.hpp	/^    int f_Samp;$/;"	m	class:TePDIKMeansClas
f_sexp	kernel/TeGraph.cpp	/^int f_sexp(Real x, Real_Vector terms, unsigned n)$/;"	f
f_slog	kernel/TeGraph.cpp	/^int f_slog(Real x, Real_Vector terms, unsigned n)$/;"	f
f_spoly	kernel/TeGraph.cpp	/^int f_spoly(Real x, Real_Vector terms, unsigned n)$/;"	f
f_ssin	kernel/TeGraph.cpp	/^int f_ssin(Real x, Real_Vector terms, unsigned n)$/;"	f
facename_	drivers/GTM/TeGTM.h	/^	char *facename_;$/;"	m	class:TeGTMWaypointsStyles
fact	drivers/shapelib/TeSHPDriverFactory.h	/^static TeSHPDriverFactory fact;$/;"	v
factor_	kernel/TeProxMatrixWeightsStrategy.h	/^	double						factor_;$/;"	m	struct:TeProxMatrixWeightsParams
fallbackInit	drivers/GL/glcore.h	/^    __GLbufFallbackInitFn fallbackInit;$/;"	m	struct:__GLdrawableBufferRec
fallbackInit	drivers/GL/internal/glcore.h	/^    __GLbufFallbackInitFn fallbackInit;$/;"	m	struct:__GLdrawableBufferRec
falseeast_	drivers/GTM/TeGTM.h	/^	double origin_, falseeast_, scale1_, falsenorthing_, axis_, flattening_;$/;"	m	class:TeGTMGridDatum
falsenorthing_	drivers/GTM/TeGTM.h	/^	double origin_, falseeast_, scale1_, falsenorthing_, axis_, flattening_;$/;"	m	class:TeGTMGridDatum
family	kernel/TeVisual.h	/^	virtual string family () $/;"	f	class:TeVisual
family	kernel/TeVisual.h	/^	virtual void family (string f) $/;"	f	class:TeVisual
family_	kernel/TeVisual.h	/^	string		family_;	$/;"	m	class:TeBaseVisualParams
fatal	drivers/GL/glcore.h	/^    void (*fatal)(__GLcontext *gc, char *fmt);$/;"	m	struct:__GLimportsRec
fatal	drivers/GL/internal/glcore.h	/^    void (*fatal)(__GLcontext *gc, char *fmt);$/;"	m	struct:__GLimportsRec
fbConnection_	drivers/Firebird/TeFirebirdConnection.h	/^    IBPP::Database* fbConnection_; \/\/!< Internal fb connection interface.$/;"	m	class:TeFirebirdConnection
fbconfigID	drivers/GL/glcore.h	/^    GLint fbconfigID;$/;"	m	struct:__GLcontextModesRec
fbconfigID	drivers/GL/internal/glcore.h	/^    GLint fbconfigID;$/;"	m	struct:__GLcontextModesRec
fbvertex_	kernel/TeTin.h	/^	long				fbvertex_;		\/\/! First break vertex number$/;"	m	class:TeTin
fc	drivers/Oracle/OCI/include/ocidfn.h	/^    ub1          fc;                                    \/* OCI function code *\/$/;"	m	struct:cda_def
fc	drivers/Oracle/OCI/include/ocidfn.h	/^    ub1          fc;$/;"	m	struct:cda_head
fclose	drivers/GL/glcore.h	/^    int (CAPI *fclose)(__GLcontext *gc, void *stream);$/;"	m	struct:__GLimportsRec
fclose	drivers/GL/internal/glcore.h	/^    int (CAPI *fclose)(__GLcontext *gc, void *stream);$/;"	m	struct:__GLimportsRec
fcntlSizeHint	drivers/SQLite/sqlite3/sqlite3.c	/^static int fcntlSizeHint(unixFile *pFile, i64 nByte){$/;"	f	file:
fcol_	image_processing/TePDIRegGrowSeg.hpp	/^      int fcol_;$/;"	m	class:TePDIRegGrowSeg
fd	drivers/SQLite/sqlite3/sqlite3.c	/^  int fd;                           \/* file desc to assoc this lock with *\/$/;"	m	struct:ByteRangeLockPB2	file:
fd	drivers/SQLite/sqlite3/sqlite3.c	/^  int fd;                   \/* File descriptor to close *\/$/;"	m	struct:UnixUnusedFd	file:
fd	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_file *fd;           \/* File descriptor for database *\/$/;"	m	struct:Pager	file:
fd_pctx	drivers/Oracle/OCI/include/cdemodp0.h	/^  int   fd_pctx;                 \/* open file descriptor data is coming from *\/$/;"	m	struct:pctx
fdatasync	drivers/SQLite/sqlite3/sqlite3.c	27745;"	d	file:
fds	drivers/Firebird/ibpp/core/_ibpp.h	/^enum flush_debug_stream_type {fds};$/;"	e	enum:ibpp_internals::flush_debug_stream_type
featMtxPtr_	image_processing/TePDIMMIOMatching.hpp	/^        TePDIMatrix< double >* featMtxPtr_;$/;"	m	struct:TePDIMMIOMatching::GenerateCorrelationFeaturesParams
features2Tiff	image_processing/TePDIMMIOMatching.cpp	/^void TePDIMMIOMatching::features2Tiff( $/;"	f	class:TePDIMMIOMatching
features2Tiff	image_processing/TePDIOFMatching.cpp	/^void TePDIOFMatching::features2Tiff( $/;"	f	class:TePDIOFMatching
fetch	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::fetch(int rows)$/;"	f	class:TeOCICursor
fetchGeometry	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::fetchGeometry (TePolygon& poly)$/;"	f	class:TeFirebirdPortal
fetchGeometry	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::fetchGeometry (TePolygon& poly, const unsigned int& initIndex)$/;"	f	class:TeFirebirdPortal
fetchGeometry	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::fetchGeometry(TeLine2D& line)$/;"	f	class:TeFirebirdPortal
fetchGeometry	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::fetchGeometry(TeLine2D& line, const unsigned int& initIndex)$/;"	f	class:TeFirebirdPortal
fetchGeometry	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::fetchGeometry(TeNode& n)$/;"	f	class:TeFirebirdPortal
fetchGeometry	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::fetchGeometry(TeNode& n, const unsigned int& initIndex)$/;"	f	class:TeFirebirdPortal
fetchGeometry	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::fetchGeometry(TePoint& p)$/;"	f	class:TeFirebirdPortal
fetchGeometry	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::fetchGeometry(TePoint& p, const unsigned int& initIndex)$/;"	f	class:TeFirebirdPortal
fetchGeometry	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::fetchGeometry (TePolygon& poly)$/;"	f	class:TeMySQLPortal
fetchGeometry	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::fetchGeometry (TePolygon& poly, const unsigned int& initIndex)$/;"	f	class:TeMySQLPortal
fetchGeometry	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::fetchGeometry(TeLine2D& line)$/;"	f	class:TeMySQLPortal
fetchGeometry	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::fetchGeometry(TeLine2D& line, const unsigned int& initIndex)$/;"	f	class:TeMySQLPortal
fetchGeometry	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::fetchGeometry(TeNode& n)$/;"	f	class:TeMySQLPortal
fetchGeometry	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::fetchGeometry(TeNode& n, const unsigned int& initIndex)$/;"	f	class:TeMySQLPortal
fetchGeometry	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::fetchGeometry(TePoint& p)$/;"	f	class:TeMySQLPortal
fetchGeometry	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::fetchGeometry(TePoint& p, const unsigned int& initIndex)$/;"	f	class:TeMySQLPortal
fetchGeometry	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::fetchGeometry (TeLine2D& line)$/;"	f	class:TeOCIOraclePortal
fetchGeometry	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::fetchGeometry (TeLine2D& line, const unsigned int& initIndex)$/;"	f	class:TeOCIOraclePortal
fetchGeometry	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::fetchGeometry (TePolygon& poly)$/;"	f	class:TeOCIOraclePortal
fetchGeometry	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::fetchGeometry (TePolygon& poly, const unsigned int& initIndex)$/;"	f	class:TeOCIOraclePortal
fetchGeometry	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::fetchGeometry(TeNode& n)$/;"	f	class:TeOCIOraclePortal
fetchGeometry	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::fetchGeometry(TeNode& n, const unsigned int& initIndex)$/;"	f	class:TeOCIOraclePortal
fetchGeometry	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::fetchGeometry(TePoint& p)$/;"	f	class:TeOCIOraclePortal
fetchGeometry	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::fetchGeometry(TePoint& p, const unsigned int& initIndex)$/;"	f	class:TeOCIOraclePortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry (TeCell& cell)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry (TeCell& cell, const unsigned int& initIndex)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry (TeLine2D& line)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry (TeLine2D& line, const unsigned int& initIndex)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry (TeLineSet& lineSet)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry (TePolygon& poly)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry (TePolygon& poly, const unsigned int&)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry (TePolygonSet& polySet)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry(TeNode& n)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry(TeNode& n, const unsigned int& initIndex)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry(TePoint& p)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry(TePoint& p, const unsigned int& initIndex)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::fetchGeometry(TePointSet& pointSet)$/;"	f	class:TeOracleSpatialPortal
fetchGeometry	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGISPortal::fetchGeometry(TeCell& cell)$/;"	f	class:TePostGISPortal
fetchGeometry	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGISPortal::fetchGeometry(TeCell& cell, const unsigned int& initIndex)$/;"	f	class:TePostGISPortal
fetchGeometry	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGISPortal::fetchGeometry(TeLine2D& line)$/;"	f	class:TePostGISPortal
fetchGeometry	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGISPortal::fetchGeometry(TeLine2D& line, const unsigned int& initIndex)$/;"	f	class:TePostGISPortal
fetchGeometry	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGISPortal::fetchGeometry(TeNode& n)$/;"	f	class:TePostGISPortal
fetchGeometry	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGISPortal::fetchGeometry(TeNode& n, const unsigned int& initIndex)$/;"	f	class:TePostGISPortal
fetchGeometry	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGISPortal::fetchGeometry(TePoint& p)$/;"	f	class:TePostGISPortal
fetchGeometry	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGISPortal::fetchGeometry(TePoint& p, const unsigned int& initIndex)$/;"	f	class:TePostGISPortal
fetchGeometry	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGISPortal::fetchGeometry(TePolygon& pol)$/;"	f	class:TePostGISPortal
fetchGeometry	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGISPortal::fetchGeometry(TePolygon& pol, const unsigned int& initIndex)$/;"	f	class:TePostGISPortal
fetchGeometry	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::fetchGeometry(TeCell& cell)$/;"	f	class:TePostgreSQLPortal
fetchGeometry	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::fetchGeometry(TeCell& cell, const unsigned int& initIndex)$/;"	f	class:TePostgreSQLPortal
fetchGeometry	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::fetchGeometry(TeLine2D& line)$/;"	f	class:TePostgreSQLPortal
fetchGeometry	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::fetchGeometry(TeLine2D& line, const unsigned int& initIndex )$/;"	f	class:TePostgreSQLPortal
fetchGeometry	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::fetchGeometry(TeNode& n)$/;"	f	class:TePostgreSQLPortal
fetchGeometry	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::fetchGeometry(TeNode& n, const unsigned int& initIndex)$/;"	f	class:TePostgreSQLPortal
fetchGeometry	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::fetchGeometry(TePoint& p)$/;"	f	class:TePostgreSQLPortal
fetchGeometry	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::fetchGeometry(TePoint& p, const unsigned int& initIndex)$/;"	f	class:TePostgreSQLPortal
fetchGeometry	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::fetchGeometry(TePolygon& pol)$/;"	f	class:TePostgreSQLPortal
fetchGeometry	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::fetchGeometry(TePolygon& pol, const unsigned int& initIndex)$/;"	f	class:TePostgreSQLPortal
fetchGeometry	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::fetchGeometry(TeLine2D& geom)$/;"	f	class:TeSQLitePortal
fetchGeometry	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::fetchGeometry(TeLine2D& geom, const unsigned int& initIndex)$/;"	f	class:TeSQLitePortal
fetchGeometry	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::fetchGeometry(TeNode& geom)$/;"	f	class:TeSQLitePortal
fetchGeometry	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::fetchGeometry(TeNode& geom, const unsigned int& initIndex)$/;"	f	class:TeSQLitePortal
fetchGeometry	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::fetchGeometry(TePoint& geom)$/;"	f	class:TeSQLitePortal
fetchGeometry	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::fetchGeometry(TePoint& geom, const unsigned int& initIndex)$/;"	f	class:TeSQLitePortal
fetchGeometry	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::fetchGeometry(TePolygon& geom)$/;"	f	class:TeSQLitePortal
fetchGeometry	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::fetchGeometry(TePolygon& geom, const unsigned int& initIndex)$/;"	f	class:TeSQLitePortal
fetchGeometry	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::fetchGeometry (TeNode& n)$/;"	f	class:TeAdoPortal
fetchGeometry	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::fetchGeometry (TeNode& n, const unsigned int& initIndex)$/;"	f	class:TeAdoPortal
fetchGeometry	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::fetchGeometry(TeLine2D& line)$/;"	f	class:TeAdoPortal
fetchGeometry	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::fetchGeometry(TeLine2D& line, const unsigned int& initIndex)$/;"	f	class:TeAdoPortal
fetchGeometry	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::fetchGeometry(TePoint& p)$/;"	f	class:TeAdoPortal
fetchGeometry	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::fetchGeometry(TePoint& p, const unsigned int& initIndex)$/;"	f	class:TeAdoPortal
fetchGeometry	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::fetchGeometry(TePolygon& pol)$/;"	f	class:TeAdoPortal
fetchGeometry	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::fetchGeometry(TePolygon& pol, const unsigned int& initIndex)$/;"	f	class:TeAdoPortal
fetchGeometry	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatialPortal::fetchGeometry(TeLine2D& line)$/;"	f	class:TeSqlServerSpatialPortal
fetchGeometry	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatialPortal::fetchGeometry(TePoint& p)$/;"	f	class:TeSqlServerSpatialPortal
fetchGeometry	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatialPortal::fetchGeometry(TePoint& p, const unsigned int& initIndex)$/;"	f	class:TeSqlServerSpatialPortal
fetchGeometry	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatialPortal::fetchGeometry(TePolygon& pol)$/;"	f	class:TeSqlServerSpatialPortal
fetchGeometry	kernel/TeDatabase.cpp	/^TeDatabasePortal::fetchGeometry (TeArc& arc)$/;"	f	class:TeDatabasePortal
fetchGeometry	kernel/TeDatabase.cpp	/^TeDatabasePortal::fetchGeometry (TeArc& arc, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
fetchGeometry	kernel/TeDatabase.cpp	/^TeDatabasePortal::fetchGeometry (TeCell& cell)$/;"	f	class:TeDatabasePortal
fetchGeometry	kernel/TeDatabase.cpp	/^TeDatabasePortal::fetchGeometry (TeCell& cell, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
fetchGeometry	kernel/TeDatabase.cpp	/^TeDatabasePortal::fetchGeometry (TeLine2D& geom, const unsigned int&)$/;"	f	class:TeDatabasePortal
fetchGeometry	kernel/TeDatabase.cpp	/^TeDatabasePortal::fetchGeometry (TeNode& geom, const unsigned int&)$/;"	f	class:TeDatabasePortal
fetchGeometry	kernel/TeDatabase.cpp	/^TeDatabasePortal::fetchGeometry (TePoint& geom, const unsigned int&)$/;"	f	class:TeDatabasePortal
fetchGeometry	kernel/TeDatabase.cpp	/^TeDatabasePortal::fetchGeometry (TePolygon& geom, const unsigned int&)$/;"	f	class:TeDatabasePortal
fetchGeometry	kernel/TeDatabase.cpp	/^TeDatabasePortal::fetchGeometry (TeText& t)$/;"	f	class:TeDatabasePortal
fetchGeometry	kernel/TeDatabase.cpp	/^TeDatabasePortal::fetchGeometry (TeText& t, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
fetchInstance	drivers/shapelib/TeQuerierSHP.cpp	/^TeQuerierSHP::fetchInstance(TeSTInstance& stoi ) $/;"	f	class:TeQuerierSHP
fetchInstance	kernel/TeQuerier.cpp	/^TeQuerier::fetchInstance(TeSTInstance&  sto)$/;"	f	class:TeQuerier
fetchInstance	kernel/TeQuerierDBStr1.cpp	/^TeQuerierDBStr1::fetchInstance(TeSTInstance&  sto)  $/;"	f	class:TeQuerierDBStr1
fetchInstance	kernel/TeQuerierDBStr2.cpp	/^TeQuerierDBStr2::fetchInstance(TeSTInstance&  sto) $/;"	f	class:TeQuerierDBStr2
fetchInstance	kernel/TeQuerierDBStr3.cpp	/^TeQuerierDBStr3::fetchInstance(TeSTInstance&  sto)$/;"	f	class:TeQuerierDBStr3
fetchNext	kernel/TeBlockLoader.cpp	/^TeBlockLoader::fetchNext()$/;"	f	class:TeBlockLoader
fetchPayload	drivers/SQLite/sqlite3/sqlite3.c	/^static const unsigned char *fetchPayload($/;"	f	file:
fetchRasterBlock	kernel/TeRaster.cpp	/^bool TeRaster::fetchRasterBlock(TeDecoderMemory* memDec)$/;"	f	class:TeRaster
fetchRow	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::fetchRow ()$/;"	f	class:TeFirebirdPortal
fetchRow	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::fetchRow (int i)$/;"	f	class:TeFirebirdPortal
fetchRow	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQLPortal::fetchRow ()$/;"	f	class:TeMySQLPortal
fetchRow	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQLPortal::fetchRow (int i)$/;"	f	class:TeMySQLPortal
fetchRow	drivers/Oracle/TeOCIOracle.cpp	/^bool TeOCIOraclePortal ::fetchRow (int i)$/;"	f	class:TeOCIOraclePortal
fetchRow	drivers/Oracle/TeOCIOracle.cpp	/^bool TeOCIOraclePortal::fetchRow () $/;"	f	class:TeOCIOraclePortal
fetchRow	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::fetchRow()$/;"	f	class:TePostgreSQLPortal
fetchRow	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::fetchRow(int i)$/;"	f	class:TePostgreSQLPortal
fetchRow	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::fetchRow()$/;"	f	class:TeSQLitePortal
fetchRow	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::fetchRow(int i)$/;"	f	class:TeSQLitePortal
fetchRow	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::fetchRow ()$/;"	f	class:TeAdoPortal
fetchRow	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::fetchRow (int i)$/;"	f	class:TeAdoPortal
fftwcomplex2double	image_processing/TePDIHants.cpp	/^  void fftwcomplex2double(int n, fftw_complex* in, double* out) {$/;"	f
fftwcomplex2double2	image_processing/TePDIHants.cpp	/^  void fftwcomplex2double2(int n, fftw_complex* in, double* out) {$/;"	f
fieldName	drivers/PostgreSQL/TePGInterface.h	/^		char *fieldName(const int& field_num) const { return PQfname(pg_recordset_, field_num); }$/;"	f	class:TePGRecordset
fieldNum	drivers/PostgreSQL/TePGInterface.h	/^        int fieldNum(const string& field_name) const$/;"	f	class:TePGRecordset
fieldSize	drivers/PostgreSQL/TePGInterface.cpp	/^int TePGRecordset::fieldSize(const int& field_num)$/;"	f	class:TePGRecordset
fieldSize	drivers/PostgreSQL/TePGInterface.h	/^        int fieldSize(const string& field_name) { return fieldSize(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
fieldSizeFractionaryPart	drivers/PostgreSQL/TePGInterface.cpp	/^int TePGRecordset::fieldSizeFractionaryPart(const int& field_num)$/;"	f	class:TePGRecordset
fieldSizeFractionaryPart	drivers/PostgreSQL/TePGInterface.h	/^        int fieldSizeFractionaryPart(const string& field_name) {  return fieldSizeFractionaryPart(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
fieldType	drivers/PostgreSQL/TePGInterface.h	/^		Oid fieldType(const int& field_num) const { return PQftype(pg_recordset_, field_num); }$/;"	f	class:TePGRecordset
fieldType	drivers/PostgreSQL/TePGInterface.h	/^        Oid fieldType(const string& field_name) const { return fieldType(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
fieldType_	functions/TeAddressLocator.h	/^	TeCentroidFieldType fieldType_;	\/\/!< Field type$/;"	m	struct:TeCentroidAddressMetadata
fieldValue_	drivers/Oracle/TeOCICursor.h	/^	string					fieldValue_;	\/\/!< temporary variable $/;"	m	class:TeOCICursor
fileId	drivers/SQLite/sqlite3/sqlite3.c	/^  struct unixFileId fileId;       \/* The lookup key *\/$/;"	m	struct:unixInodeInfo	typeref:struct:unixInodeInfo::unixFileId	file:
fileList_	drivers/qt/TeQtAnimaThread.h	/^	QStringList	fileList_;$/;"	m	class:TeQtAnimaThread
fileName	drivers/MrSID/TeMrSID.h	/^	std::string fileName() const$/;"	f	class:TeMrSIDReader
fileName	drivers/shapelib/TeQuerierSHP.h	/^		string fileName () { return params_->fileName(); }$/;"	f	class:TeQuerierSHP
fileName	kernel/TeQuerierParams.h	/^	virtual string fileName() { return fileName_; }$/;"	f	class:TeQuerierParams
fileName_	drivers/DXF/TeDXFDriver.h	/^    string fileName_; \/\/!< Complete file name, including teh complete path and its extension.    $/;"	m	class:TeDXFDriver
fileName_	drivers/MrSID/TeMrSID.h	/^	std::string						fileName_;$/;"	m	class:TeMrSIDReader
fileName_	drivers/gdal/TeOGRDriver.h	/^	std::string fileName_;  \/\/!< Complete access path.$/;"	m	class:TeOGRDriver
fileName_	image_processing/TePDIMatrix.hpp	/^          char* fileName_;$/;"	m	class:TePDIMatrix::OpenDiskFilesInfoNode
fileName_	kernel/TeCoverageParams.h	/^    std::string fileName_;          \/\/!< Name of a coverage source file$/;"	m	class:TeCoverageParams
fileName_	kernel/TeFileTheme.h	/^	std::string			fileName_;		\/\/ location of the file	$/;"	m	class:TeFileTheme
fileName_	kernel/TeGDriverFactory.h	/^    string fileName_;			 \/\/!< Complete name of the file.$/;"	m	struct:TeGDriverParams
fileName_	kernel/TeQuerierParams.h	/^	string					fileName_;		\/\/!< source file name (.shp, etc)$/;"	m	class:TeQuerierParams
fileName_	kernel/TeRasterParams.h	/^	string	fileName_;		\/\/!< name of a raster file$/;"	m	class:TeRasterParams
fileName_	kernel/TeStdFile.h	/^	string fileName_;$/;"	m	class:TeStdFile
fileOff_	image_processing/TePDIMatrix.hpp	/^          unsigned int fileOff_;$/;"	m	class:TePDIMatrix::DiskLinesInfoNode
fileOff_	kernel/TeRasterMemManager.h	/^          unsigned long int fileOff_;$/;"	m	class:TeRasterMemManager::DiskTileData
filePtr_	image_processing/TePDIMatrix.hpp	/^          FILE* filePtr_;$/;"	m	class:TePDIMatrix::DiskLinesInfoNode
filePtr_	image_processing/TePDIMatrix.hpp	/^          FILE* filePtr_;$/;"	m	class:TePDIMatrix::OpenDiskFilesInfoNode
filePtr_	kernel/TeRasterMemManager.h	/^          FILE* filePtr_;$/;"	m	class:TeRasterMemManager::DiskTileData
filePtr_	kernel/TeTempFilesRemover.h	/^        FILE* filePtr_;$/;"	m	struct:TeTempFilesRemover::ListNode
fileThemeFactory	kernel/TeFileTheme.h	/^  static TeFileThemeFactory fileThemeFactory;$/;"	m	namespace:__anon28
fileType_	kernel/TeGDriverFactory.h	/^    string fileType_;			 \/\/!< Defines the type of file to be used. It identifies the factory of TeGeodataDriver objects.$/;"	m	struct:TeGDriverParams
file_	drivers/GTM/TeGTM.h	/^	FILE* file_;$/;"	m	class:TeGTM
file_	kernel/TeStdFile.h	/^	FILE *file_;$/;"	m	class:TeStdFile
file_control	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines	file:
file_control	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines
file_format	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 file_format;      \/* Schema format version for this file *\/$/;"	m	struct:Schema	file:
filemask	kernel/TeGraph.cpp	/^	char filemask[MASK_SIZE];$/;"	m	struct:Opt	file:
filep	drivers/Oracle/OCI/include/occiData.h	/^    OCIBFileLocator *filep; $/;"	m	class:oracle::occi::Bfile
filesNamesList_	kernel/TeTempFilesRemover.h	/^      std::list< ListNode > filesNamesList_;$/;"	m	class:TeTempFilesRemover
fill	drivers/GL/glcore.h	/^    void (*fill)(__GLdrawableBuffer *buf, __GLdrawablePrivate *glPriv,$/;"	m	struct:__GLdrawableBufferRec
fill	drivers/GL/internal/glcore.h	/^    void (*fill)(__GLdrawableBuffer *buf, __GLdrawablePrivate *glPriv,$/;"	m	struct:__GLdrawableBufferRec
fillAddress	functions/TeAddressLocator.cpp	/^void TeAddressLocator::fillAddress(TeAddress& add, const TeGeocodeTableMetadata& tableMetadata, TeDatabasePortal* p)$/;"	f	class:TeAddressLocator
fillAddressDescription	functions/TeAddressLocator.cpp	/^void TeAddressLocator::fillAddressDescription(TeAddressDescription& descript, TeDatabasePortal* p)$/;"	f	class:TeAddressLocator
fillAddressMetadata	functions/TeAddressLocator.cpp	/^void TeAddressLocator::fillAddressMetadata(TeAddressMetadata& metadata, TeDatabasePortal* p)$/;"	f	class:TeAddressLocator
fillAddressesDescription	functions/TeAddressLocator.cpp	/^void TeAddressLocator::fillAddressesDescription(vector<TeAddressDescription>& addresses, TeDatabasePortal* p)$/;"	f	class:TeAddressLocator
fillArc	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::fillArc (int xc, int yc, int w, int h, double a1, double a2, TeColor c)$/;"	f	class:TeQtGraphPlot
fillColumnCombo	drivers/qt/TeGUIUtils.cpp	/^bool fillColumnCombo(TeAttrDataType aType,$/;"	f
fillColumnCombo	drivers/qt/TeGUIUtils.cpp	/^bool fillColumnCombo(vector<TeAttrDataType> &aTypeVec, TeTheme* theme,  QComboBox *cColumnCombo, bool clear)$/;"	f
fillColumnCombo	drivers/qt/TeGUIUtils.cpp	/^bool fillColumnCombo(vector<TeAttrDataType> &aTypeVec,$/;"	f
fillCoverageMetadataTable	kernel/TeCoverageImportUtils.cpp	/^fillCoverageMetadataTable(TeLayer* layer, std::string& metadataTableName, const std::string& coverageId, std::vector<TeCoverageDimension>& dimensions)$/;"	f
fillGeomSTO	kernel/TeQuerierDBStr1.cpp	/^TeQuerierDBStr1::fillGeomSTO(TeSTInstance& sto, unsigned int index)$/;"	f	class:TeQuerierDBStr1
fillInCell	drivers/SQLite/sqlite3/sqlite3.c	/^static int fillInCell($/;"	f	file:
fillInUnixFile	drivers/SQLite/sqlite3/sqlite3.c	/^static int fillInUnixFile($/;"	f	file:
fillLayerCombo	drivers/qt/TeGUIUtils.cpp	/^bool fillLayerCombo(TeDatabase* db, TeGeomRep rep, QComboBox *lColumnCombo, const string& current, bool clear)$/;"	f
fillNNVector	functions/TeInterpolation.h	/^		void fillNNVector(vector<kdDataItem>& report, const unsigned int& numberOfNeighbors) const$/;"	f	class:TeInterpolationAlgorithms
fillRaster	kernel/TeRaster.cpp	/^TeRaster::fillRaster(TeRaster* dstRaster, TeRasterTransform* transf, bool bestRes)$/;"	f	class:TeRaster
fillRectangle	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::fillRectangle (int x, int y, int dx, int dy)$/;"	f	class:TeQtGraphPlot
fillResultIdsVector	kernel/TeSpatialOperations.cpp	/^fillResultIdsVector(TeGeometry *geom, TeDatabasePortal *portal, TeGeomRep portalRep, int relate, TeKeys& resultIds)$/;"	f
fillSTO	kernel/TeQuerierDBStr2.cpp	/^TeQuerierDBStr2::fillSTO(TeSTInstance& sto)  $/;"	f	class:TeQuerierDBStr2
fillSTO	kernel/TeQuerierDBStr3.cpp	/^TeQuerierDBStr3::fillSTO(TeSTInstance& sto)  $/;"	f	class:TeQuerierDBStr3
fillSTOGrouped	kernel/TeQuerierDBStr1.cpp	/^TeQuerierDBStr1::fillSTOGrouped(TeSTInstance& sto, bool fetchInstance)$/;"	f	class:TeQuerierDBStr1
fillSTONoGrouped	kernel/TeQuerierDBStr1.cpp	/^TeQuerierDBStr1::fillSTONoGrouped(TeSTInstance& sto)$/;"	f	class:TeQuerierDBStr1
fillSelectedGeomVector	kernel/TeSpatialOperations.cpp	/^fillSelectedGeomVector(TeGeomRep actRep, TeSelectedGeom& vetGeom, TeDatabasePortal *portal, TeProjection* projAct=0, TeProjection* projVis=0)$/;"	f
fillTableCombo	drivers/qt/TeGUIUtils.cpp	/^bool fillTableCombo(TeView* view,$/;"	f
fillThemeCombo	drivers/qt/TeGUIUtils.cpp	/^bool fillThemeCombo( TeView* view, QComboBox* cBox, string selName, bool clear)$/;"	f
fillThemeCombo	drivers/qt/TeGUIUtils.cpp	/^bool fillThemeCombo(TeGeomRep tg, TeView* view, QComboBox* cBox, string selName, bool clear)$/;"	f
fillThemeCombo	drivers/qt/TeGUIUtils.cpp	/^bool fillThemeCombo(vector<TeGeomRep>& tg, TeView* view, QComboBox* cBox, string selName, bool clear)$/;"	f
filledSerie_	kernel/TeQuerierImpl.h	/^	bool							filledSerie_;	\/\/! this flag indicates if the temporal serie was filled $/;"	m	class:TeQuerierImpl
filter	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3SegFilter filter;$/;"	m	struct:Fts3auxCursor	file:
filter	image_processing/TePDIHants.cpp	/^  double *tmpvdouble, *tmpvdouble2, *filter, *components;$/;"	v
filter	kernel/TeGeoDataDriver.cpp	/^TeGeoDataSet* TeGeoDataDriver::filter(const TeBox& box)$/;"	f	class:TeGeoDataDriver
filter	kernel/TeGeoDataDriver.cpp	/^TeGeoDataSet* TeGeoDataDriver::filter(const TeBox& box, const std::string& attrRestriction)$/;"	f	class:TeGeoDataDriver
filter	kernel/TeGeoDataDriver.cpp	/^TeGeoDataSet* TeGeoDataDriver::filter(const std::string& attrRestriction)$/;"	f	class:TeGeoDataDriver
filterBank	image_processing/TePDIWaveletAtrous.cpp	/^bool TePDIWaveletAtrous::filterBank(FilterType filtertype,TeMatrix &filter)$/;"	f	class:TePDIWaveletAtrous
filterBank	image_processing/TePDIWaveletAtrous.cpp	/^bool TePDIWaveletAtrous::filterBank(string filterFile,TeMatrix &filter)$/;"	f	class:TePDIWaveletAtrous
filterImpl	drivers/gdal/TeOGRDriver.cpp	/^TeGeoDataSet* TeOGRDriver::filterImpl(const TeBox& box, const std::string& attrRestriction)$/;"	f	class:TeOGRDriver
filterImpl	kernel/TeSTGeoDataDriver.cpp	/^TeGeoDataSet* TeSTGeoDataDriver::filterImpl(const TeBox& box, const std::string& attrRestriction)$/;"	f	class:TeSTGeoDataDriver
finalLeftNumber_	functions/TeAddressLocator.h	/^	int finalLeftNumber_;			\/\/!< The final location left number$/;"	m	struct:TeAddressDescription
finalLeftNumber_	functions/TeAddressLocator.h	/^	string finalLeftNumber_;		\/\/!< The field name with the final location left number$/;"	m	struct:TeAddressMetadata
finalRightNumber_	functions/TeAddressLocator.h	/^	int finalRightNumber_;			\/\/!< The final location right number$/;"	m	struct:TeAddressDescription
finalRightNumber_	functions/TeAddressLocator.h	/^	string finalRightNumber_;		\/\/!< The field name with the final location right number$/;"	m	struct:TeAddressMetadata
finalize	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
finalize	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
finalizeAggFunctions	drivers/SQLite/sqlite3/sqlite3.c	/^static void finalizeAggFunctions(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
find	kernel/TeViewNode.cpp	/^TeViewTree::find (int id) $/;"	f	class:TeViewTree
find	kernel/TeViewNode.cpp	/^TeViewTree::find( std::string name, bool caseS) $/;"	f	class:TeViewTree
findAddress	functions/TeAddressLocator.cpp	/^int TeAddressLocator::findAddress(const TeAddress& address, vector<TeAddressDescription>& addressesFound, const bool& doExaustiveSearch)$/;"	f	class:TeAddressLocator
findBestDecimLevel	image_processing/TePDIGarguetFusion.cpp	/^bool TePDIGarguetFusion::findBestDecimLevel( $/;"	f	class:TePDIGarguetFusion
findBestDecimLevels	image_processing/TePDIVenturaFusion.cpp	/^bool TePDIVenturaFusion::findBestDecimLevels( $/;"	f	class:TePDIVenturaFusion
findBtree	drivers/SQLite/sqlite3/sqlite3.c	/^static Btree *findBtree(sqlite3 *pErrorDb, sqlite3 *pDb, const char *zDb){$/;"	f	file:
findByCentroid	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::findByCentroid(const TeAddress& addressToFind, vector<TeAddressDescription>& addressesFound)$/;"	f	class:TeAddressLocator
findCell	drivers/SQLite/sqlite3/sqlite3.c	48939;"	d	file:
findCellv2	drivers/SQLite/sqlite3/sqlite3.c	48941;"	d	file:
findCollSeqEntry	drivers/SQLite/sqlite3/sqlite3.c	/^static CollSeq *findCollSeqEntry($/;"	f	file:
findCoordinate	functions/TeAddressLocator.cpp	/^void TeAddressLocator::findCoordinate(const TeAddress& add, TeAddressDescription& desc)$/;"	f	class:TeAddressLocator
findCoordinates	functions/TeAddressLocator.cpp	/^void TeAddressLocator::findCoordinates(const TeAddress& add, vector<TeAddressDescription>& addresses)$/;"	f	class:TeAddressLocator
findCreateFileMode	drivers/SQLite/sqlite3/sqlite3.c	/^static int findCreateFileMode($/;"	f	file:
findDatum	kernel/TeDatum.cpp	/^bool findDatum(double semiMajor, double flatenning, TeDatum& datum)$/;"	f
findEdge	kernel/TeTin.cpp	/^TeTin::findEdge(long v1, long v2)$/;"	f	class:TeTin
findEigenVectors	kernel/TePolygonSetProperties.cpp	/^bool TePolygonSetProperties::findEigenVectors( TeMatrix input_matrix, double e_vec[] )$/;"	f	class:TePolygonSetProperties
findElementGivenHash	drivers/SQLite/sqlite3/sqlite3.c	/^static HashElem *findElementGivenHash($/;"	f	file:
findExact	functions/TeAddressLocator.cpp	/^int TeAddressLocator::findExact(const TeAddress& address, const string& fullName, const bool& withNumber, vector<TeAddressDescription>& addressesFound)$/;"	f	class:TeAddressLocator
findGeocodingTables	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::findGeocodingTables(vector<pair<int, string> >& tableNames)$/;"	f	class:TeAddressLocator
findIndexCol	drivers/SQLite/sqlite3/sqlite3.c	/^static int findIndexCol($/;"	f	file:
findInodeInfo	drivers/SQLite/sqlite3/sqlite3.c	/^static int findInodeInfo($/;"	f	file:
findInterPoints	kernel/TeTin.cpp	/^TeTin::findInterPoints(TeCoord2D& pf, TeCoord2D& pn, TeTinVertexSet& pts)$/;"	f	class:TeTin
findLeafNode	drivers/SQLite/sqlite3/sqlite3.c	/^static int findLeafNode(Rtree *pRtree, i64 iRowid, RtreeNode **ppLeaf){$/;"	f	file:
findNewLine	kernel/TeAsciiFile.cpp	/^TeAsciiFile::findNewLine ()$/;"	f	class:TeAsciiFile
findNextHostParameter	drivers/SQLite/sqlite3/sqlite3.c	/^static int findNextHostParameter(const char *zSql, int *pnToken){$/;"	f	file:
findNode	utils/TeDatabaseUtils.cpp	/^TeViewNode* findNode(const std::set<TeViewNode*>& orphanNodes, const int nodeId)$/;"	f
findOverflowCell	drivers/SQLite/sqlite3/sqlite3.c	/^static u8 *findOverflowCell(MemPage *pPage, int iCell){$/;"	f	file:
findPattern	functions/TeAddressLocator.cpp	/^int TeAddressLocator::findPattern(const TeAddress& address, const string& fullName, const bool& withNumber, vector<TeAddressDescription>& addressesFound, const bool& disabletype, const bool& disabletitle, const bool& disablepreposition)$/;"	f	class:TeAddressLocator
findReusableFd	drivers/SQLite/sqlite3/sqlite3.c	/^static UnixUnusedFd *findReusableFd(const char *zPath, int flags){$/;"	f	file:
findSimilarAddress	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::findSimilarAddress(const TeAddress& address, const string& fullName, TeAddressDescription& descript)$/;"	f	class:TeAddressLocator
findTable	drivers/qt/TeQtGrid.cpp	/^TeTable& TeQtGrid::findTable(int col) \/\/ grid column$/;"	f	class:TeQtGrid
findTable	drivers/qt/TeQtGrid.cpp	/^TeTable& TeQtGrid::findTable(string  colName)$/;"	f	class:TeQtGrid
findTableMetadata	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::findTableMetadata(TeGeocodeTableMetadata& tableMetadata)$/;"	f	class:TeAddressLocator
findTerm	drivers/SQLite/sqlite3/sqlite3.c	/^static WhereTerm *findTerm($/;"	f	file:
findWithDictionary	functions/TeAddressLocator.cpp	/^int TeAddressLocator::findWithDictionary(const TeAddress& address, const string& fullName, const bool& withNumber, vector<TeAddressDescription>& addressesFound)$/;"	f	class:TeAddressLocator
findWithoutAllName	functions/TeAddressLocator.cpp	/^int TeAddressLocator::findWithoutAllName(const TeAddress& address, const string& fullName, vector<TeAddressDescription>& addressesFound, const bool& disabletype, const bool& disabletitle, const bool& disablepreposition)$/;"	f	class:TeAddressLocator
find_home_dir	drivers/SQLite/sqlite3/shell.c	/^static char *find_home_dir(void){$/;"	f	file:
find_intersect	kernel/TeGraph.cpp	/^void TeGraphPlot :: find_intersect(Real x_in, Real y_in,$/;"	f	class:TeGraphPlot
find_neighbor_pixels	image_processing/TePDIBaatz.cpp	/^void find_neighbor_pixels(unsigned long int pixel_id, $/;"	f
find_neighbors	image_processing/TePDIBaatz.cpp	/^struct segment_neighbor* find_neighbors(struct segment *curr_segment, $/;"	f
find_unused_by_dither	image_processing/TePDIBaatz.cpp	/^struct segment* find_unused_by_dither(struct segment **segments_ptr_vector, $/;"	f
finder_type	drivers/SQLite/sqlite3/sqlite3.c	/^typedef const sqlite3_io_methods *(*finder_type)(const char*,unixFile*);$/;"	t	file:
firebird_	drivers/Firebird/TeFirebird.h	/^	IBPP::Database firebird_;$/;"	m	class:TeFirebird
firebird_	drivers/Firebird/TeFirebird.h	/^	IBPP::Database firebird_;$/;"	m	class:TeFirebirdPortal
firebird_ref_	drivers/Firebird/TeFirebird.h	/^	IBPP::Database firebird_ref_;$/;"	m	class:TeFirebird
first	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3HashElem *first;    \/* The first element of the array *\/$/;"	m	struct:Fts3Hash	file:
first	drivers/SQLite/sqlite3/sqlite3.c	/^  HashElem *first;          \/* The first element of the array *\/$/;"	m	struct:Hash	file:
first	kernel/TeGeometry.h	/^	T& first() const$/;"	f	class:TeGeomComposite
first	kernel/TeViewTreeIterator.h	/^inline void TeViewTreeIterator::first()$/;"	f	class:TeViewTreeIterator
first	kernel/TeViewTreeIterator.h	/^inline void TeViewTreeRevIterator::first()$/;"	f	class:TeViewTreeRevIterator
first	kernel/dynpq.h	/^		randomAccessIterator first;             \/\/ beginning of the external vector$/;"	m	class:br_stl::dynamic_priority_queue
firstFetch	drivers/PostgreSQL/TePGInterface.h	/^		bool firstFetch;		\/\/ Mario$/;"	m	class:TePGRecordset
firstLeaf	kernel/TeViewTreeIterator.h	/^inline void TeViewTreeIterator::firstLeaf()$/;"	f	class:TeViewTreeIterator
firstLeaf	kernel/TeViewTreeIterator.h	/^inline void TeViewTreeRevIterator::firstLeaf()$/;"	f	class:TeViewTreeRevIterator
first_name	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR *first_name;			\/* the user's first name *\/$/;"	m	struct:__anon65
firstname	drivers/Firebird/ibpp/core/ibpp.h	/^		std::string firstname;$/;"	m	class:IBPP::User
fitEllipse	kernel/TePolygonSetProperties.cpp	/^vector<double> TePolygonSetProperties::fitEllipse( vector<TeCoord2D> xyPositions )$/;"	f	class:TePolygonSetProperties
fitMousePosition	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::fitMousePosition(QPoint p)$/;"	f	class:TeQtColorBar
fit_histogram	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::fit_histogram(TePDITypes::TePDIRasterPtrType original_raster, int original_band, TePDITypes::TePDIRasterPtrType pan_raster, int pan_band, TePDITypes::TePDIRasterPtrType temp_raster)$/;"	f	class:TePDIFusionIndexes
fixBoundingBox	drivers/SQLite/sqlite3/sqlite3.c	/^static int fixBoundingBox(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
fixLeafParent	drivers/SQLite/sqlite3/sqlite3.c	/^static int fixLeafParent(Rtree *pRtree, RtreeNode *pLeaf){$/;"	f	file:
fixedSize	kernel/TeVisual.h	/^	virtual bool fixedSize () $/;"	f	class:TeVisual
fixedSize	kernel/TeVisual.h	/^	virtual void fixedSize (bool i) $/;"	f	class:TeVisual
fixedSize_	kernel/TeVisual.h	/^	bool		fixedSize_;			$/;"	m	class:TeBaseVisualParams
fkActionTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^static Trigger *fkActionTrigger($/;"	f	file:
fkLookupParent	drivers/SQLite/sqlite3/sqlite3.c	/^static void fkLookupParent($/;"	f	file:
fkScanChildren	drivers/SQLite/sqlite3/sqlite3.c	/^static void fkScanChildren($/;"	f	file:
fkTriggerDelete	drivers/SQLite/sqlite3/sqlite3.c	/^static void fkTriggerDelete(sqlite3 *dbMem, Trigger *p){$/;"	f	file:
fkeyHash	drivers/SQLite/sqlite3/sqlite3.c	/^  Hash fkeyHash;       \/* All foreign keys by referenced table name *\/$/;"	m	struct:Schema	file:
flagPortal_	kernel/TeQuerierDB.h	/^	bool						flagPortal_;	 $/;"	m	class:TeQuerierDB
flagPragma	drivers/SQLite/sqlite3/sqlite3.c	/^static int flagPragma(Parse *pParse, const char *zLeft, const char *zRight){$/;"	f	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  etByte flags;            \/* One or more of FLAG_ constants below *\/$/;"	m	struct:et_info	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  int flags;                      \/* xOpen flags *\/$/;"	m	struct:JournalFile	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  int flags;                    \/* Miscellaneous flags. See below *\/$/;"	m	struct:sqlite3	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  int flags;                \/* Flags provided to os2Open() *\/$/;"	m	struct:os2File	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  int flags;                \/* Flags this file descriptor was opened with *\/$/;"	m	struct:UnixUnusedFd	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  int flags;              \/* Copy of "flags" passed to sqlite3_blob_open() *\/$/;"	m	struct:Incrblob	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  int flags;$/;"	m	struct:Fts3SegFilter	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 flags;                     \/* PGHDR flags defined below *\/$/;"	m	struct:PgHdr	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 flags;             \/* Various flags.  EP_* See below *\/$/;"	m	struct:Expr	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 flags;           \/* Flags associated with this schema *\/$/;"	m	struct:Schema	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 flags;          \/* Boolean settings.  UNPACKED_... below *\/$/;"	m	struct:UnpackedRecord	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 flags;          \/* Some combination of MEM_Null, MEM_Str, MEM_Dyn, etc. *\/$/;"	m	struct:Mem	file:
flags	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 flags;            \/* Some combination of SQLITE_FUNC_* *\/$/;"	m	struct:FuncDef	file:
flags2	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 flags2;             \/* Second set of flags.  EP2_... *\/$/;"	m	struct:Expr	file:
flags_	drivers/Oracle/OCI/include/occiObjects.h	/^        ub2 flags_;$/;"	m	class:oracle::occi::PObject
flags_nzttBufferBlock	drivers/Oracle/OCI/include/nzt.h	/^   uword flags_nzttBufferBlock;     \/* Flags *\/$/;"	m	struct:nzttBufferBlock
flattenSubquery	drivers/SQLite/sqlite3/sqlite3.c	/^static int flattenSubquery($/;"	f	file:
flattening	kernel/TeDatum.h	/^	double flattening() const$/;"	f	class:TeDatum
flattening	kernel/TeDatum.h	/^	void flattening(const double flt) $/;"	f	class:TeDatum
flattening_	drivers/GTM/TeGTM.h	/^	double origin_, falseeast_, scale1_, falsenorthing_, axis_, flattening_;$/;"	m	class:TeGTMGridDatum
flin_	image_processing/TePDIRegGrowSeg.hpp	/^      int flin_;$/;"	m	class:TePDIRegGrowSeg
float	drivers/SQLite/sqlite3/sqlite3.c	7615;"	d	file:
floatMode	drivers/GL/glcore.h	/^    GLboolean floatMode;$/;"	m	struct:__GLcontextModesRec
floatMode	drivers/GL/internal/glcore.h	/^    GLboolean floatMode;$/;"	m	struct:__GLcontextModesRec
floatSwap	drivers/SQLite/sqlite3/sqlite3.c	/^static u64 floatSwap(u64 in){$/;"	f	file:
flockCheckReservedLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int flockCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
flockClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int flockClose(sqlite3_file *id) {$/;"	f	file:
flockLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int flockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
flockUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^static int flockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
flt	kernel/TeDatum.cpp	/^	double flt;$/;"	m	struct:SphParam	file:
flt_	kernel/TeDatum.h	/^			flt_;		\/\/!< Earth flattening $/;"	m	class:TeDatum
flushBlock	image_processing/TePDIParallelSegmenter.cpp	/^bool TePDIParallelSegmenter::flushBlock( TePDIParaSegSegmentsBlock& currBlock,$/;"	f	class:TePDIParallelSegmenter
flush_debug_stream_type	drivers/Firebird/ibpp/core/_ibpp.h	/^enum flush_debug_stream_type {fds};$/;"	g	namespace:ibpp_internals
fmtinfo	drivers/SQLite/sqlite3/sqlite3.c	/^static const et_info fmtinfo[] = {$/;"	v	file:
fmttype	drivers/SQLite/sqlite3/sqlite3.c	/^  char fmttype;            \/* The format field code letter *\/$/;"	m	struct:et_info	file:
fnm_pctx	drivers/Oracle/OCI/include/cdemodp0.h	/^  char *fnm_pctx;                                \/* filename for data source *\/$/;"	m	struct:pctx
fo_ctx	drivers/Oracle/OCI/include/ociap.h	/^  dvoid *fo_ctx;$/;"	m	struct:__anon81
fo_ctx	drivers/Oracle/OCI/include/ocikp.h	/^  dvoid *fo_ctx;$/;"	m	struct:__anon91
fo_ctx	drivers/Oracle/ociap.h	/^  dvoid *fo_ctx;$/;"	m	struct:__anon77
fontSizeComboBox_activated	drivers/qt/ui/help.ui.h	/^void Help::fontSizeComboBox_activated( const QString& \/* size *\/ )$/;"	f	class:Help
fopen	drivers/GL/glcore.h	/^    void *(CAPI *fopen)(__GLcontext *gc, const char *path, const char *mode);$/;"	m	struct:__GLimportsRec
fopen	drivers/GL/internal/glcore.h	/^    void *(CAPI *fopen)(__GLcontext *gc, const char *path, const char *mode);$/;"	m	struct:__GLimportsRec
for	drivers/Firebird/ibpp/core/_ibpp.h	80;"	d
forceCurrent	drivers/GL/glcore.h	/^    GLboolean (*forceCurrent)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
forceCurrent	drivers/GL/internal/glcore.h	/^    GLboolean (*forceCurrent)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
format	kernel/TeGraph.cpp	/^	char format[7];$/;"	m	struct:Opt	file:
forward	drivers/qt/ui/help.ui.h	/^void Help::forward()$/;"	f	class:Help
forward	drivers/qwt/TeQwtPlotZoomer.cpp	/^void TeQwtPlotZoomer::forward()$/;"	f	class:TeQwtPlotZoomer
fprintf	drivers/GL/glcore.h	/^    int (CAPI *fprintf)(__GLcontext *gc, void *stream, const char *fmt, ...);$/;"	m	struct:__GLimportsRec
fprintf	drivers/GL/internal/glcore.h	/^    int (CAPI *fprintf)(__GLcontext *gc, void *stream, const char *fmt, ...);$/;"	m	struct:__GLimportsRec
fractions	image_processing/TePDIWiSpeRFusion.cpp	/^bool TePDIWiSpeRFusion::fractions(TeMatrix &p_multi_pan, string satellite, int &pan_index)$/;"	f	class:TePDIWiSpeRFusion
frame	drivers/qt/TeQtAnimaThread.h	/^	int frame() {return frame_;}$/;"	f	class:TeQtAnimaThread
frame	drivers/qt/TeQtAnimaThread.h	/^	void frame(int n) {frame_ = n;}$/;"	f	class:TeQtAnimaThread
frameTracking	drivers/GL/dri_interface.h	/^    int (*frameTracking)(__DRInativeDisplay *dpy, void *drawablePrivate, GLboolean enable);$/;"	m	struct:__DRIdrawableRec
frameTracking	drivers/GL/internal/dri_interface.h	/^    int (*frameTracking)(__DRInativeDisplay *dpy, void *drawablePrivate, GLboolean enable);$/;"	m	struct:__DRIdrawableRec
frame_	drivers/qt/TeQtAnimaThread.h	/^	int			frame_;$/;"	m	class:TeQtAnimaThread
frames	drivers/qt/TeQtAnimaThread.h	/^	int frames() {return frames_;}$/;"	f	class:TeQtAnimaThread
frames	drivers/qt/TeQtAnimaThread.h	/^	void frames(int n) {frames_ = n;}$/;"	f	class:TeQtAnimaThread
frames_	drivers/qt/TeQtAnimaThread.h	/^	int			frames_;$/;"	m	class:TeQtAnimaThread
frb_info_att_charset	drivers/Firebird/ibpp/core/ibase.h	/^        frb_info_att_charset = 101,$/;"	e	enum:db_info_types
free	drivers/GL/glcore.h	/^    void (*free)(__GLcontext *gc, void *addr);$/;"	m	struct:__GLimportsRec
free	drivers/GL/glcore.h	/^    void (*free)(__GLdrawableBuffer *buf, __GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawableBufferRec
free	drivers/GL/glcore.h	/^    void (*free)(void *addr);$/;"	m	struct:__GLdrawablePrivateRec
free	drivers/GL/internal/glcore.h	/^    void (*free)(__GLcontext *gc, void *addr);$/;"	m	struct:__GLimportsRec
free	drivers/GL/internal/glcore.h	/^    void (*free)(__GLdrawableBuffer *buf, __GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawableBufferRec
free	drivers/GL/internal/glcore.h	/^    void (*free)(void *addr);$/;"	m	struct:__GLdrawablePrivateRec
free	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines	file:
free	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines
freeConns_	kernel/TeConnectionPool.h	/^    std::set<unsigned int> freeConns_;       \/\/!< Informs which connections are free.$/;"	m	class:TeConnectionPool
freeCursorConstraints	drivers/SQLite/sqlite3/sqlite3.c	/^static void freeCursorConstraints(RtreeCursor *pCsr){$/;"	f	file:
freeCursorNumbers_	drivers/PostgreSQL/TePGInterface.cpp	/^std::set<int> TePGRecordset::freeCursorNumbers_;$/;"	m	class:TePGRecordset	file:
freeCursorNumbers_	drivers/PostgreSQL/TePGInterface.h	/^		static set<int> freeCursorNumbers_;$/;"	m	class:TePGRecordset
freeEphemeralFunction	drivers/SQLite/sqlite3/sqlite3.c	/^static void freeEphemeralFunction(sqlite3 *db, FuncDef *pDef){$/;"	f	file:
freeGlobals	image_processing/TePDIHants.cpp	/^  void freeGlobals() {$/;"	f
freeIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static void freeIndex(sqlite3 *db, Index *p){$/;"	f	file:
freeMem	drivers/PostgreSQL/TePGInterface.h	/^		static void freeMem(void* ptr) 	{ PQfreemem(ptr); }$/;"	f	class:TePGConnection
freeMemory	drivers/GL/dri_interface.h	/^    void (*freeMemory)(__DRInativeDisplay *dpy, int scrn, GLvoid *pointer);$/;"	m	struct:__DRIscreenRec
freeMemory	drivers/GL/internal/dri_interface.h	/^    void (*freeMemory)(__DRInativeDisplay *dpy, int scrn, GLvoid *pointer);$/;"	m	struct:__DRIscreenRec
freeP4	drivers/SQLite/sqlite3/sqlite3.c	/^static void freeP4(sqlite3 *db, int p4type, void *p4){$/;"	f	file:
freePage	drivers/SQLite/sqlite3/sqlite3.c	/^static void freePage(MemPage *pPage, int *pRC){$/;"	f	file:
freePage2	drivers/SQLite/sqlite3/sqlite3.c	/^static int freePage2(BtShared *pBt, MemPage *pMemPage, Pgno iPage){$/;"	f	file:
freePortal	drivers/qt/TeQtTable.cpp	/^void TeQtTable::freePortal()$/;"	f	class:TeQtTable
freePrivate	drivers/GL/glcore.h	/^    void (*freePrivate)(__GLdrawableBuffer *buf, __GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawableBufferRec
freePrivate	drivers/GL/glcore.h	/^    void (*freePrivate)(__GLdrawablePrivate *);$/;"	m	struct:__GLdrawablePrivateRec
freePrivate	drivers/GL/internal/glcore.h	/^    void (*freePrivate)(__GLdrawableBuffer *buf, __GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawableBufferRec
freePrivate	drivers/GL/internal/glcore.h	/^    void (*freePrivate)(__GLdrawablePrivate *);$/;"	m	struct:__GLdrawablePrivateRec
freeRecordSet	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::freeRecordSet()$/;"	f	class:TePGRecordset
freeResult	drivers/Firebird/TeFirebird.cpp	/^void TeFirebirdPortal::freeResult ()$/;"	f	class:TeFirebirdPortal
freeResult	drivers/MySQL/TeMySQL.cpp	/^void TeMySQLPortal::freeResult ()$/;"	f	class:TeMySQLPortal
freeResult	drivers/Oracle/TeOCICursor.cpp	/^void TeOCICursor::freeResult()$/;"	f	class:TeOCICursor
freeResult	drivers/Oracle/TeOCIOracle.cpp	/^void TeOCIOraclePortal::freeResult () $/;"	f	class:TeOCIOraclePortal
freeResult	drivers/PostgreSQL/TePostgreSQL.cpp	/^void TePostgreSQLPortal::freeResult()$/;"	f	class:TePostgreSQLPortal
freeResult	drivers/SQLite/TeSQLite.cpp	/^void TeSQLitePortal::freeResult()$/;"	f	class:TeSQLitePortal
freeResult	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::freeResult ()$/;"	f	class:TeAdoPortal
freeSpace	drivers/SQLite/sqlite3/sqlite3.c	/^static int freeSpace(MemPage *pPage, int start, int size){$/;"	f	file:
freeTempSpace	drivers/SQLite/sqlite3/sqlite3.c	/^static void freeTempSpace(BtShared *pBt){$/;"	f	file:
freeTickets_	kernel/TeConnectionPool.h	/^    std::set<unsigned int> freeTickets_;     \/\/!< Informs which tickets numbers are free.$/;"	m	class:TeConnectionPool
freeUconvObjects	drivers/SQLite/sqlite3/sqlite3.c	/^static void freeUconvObjects( void ){$/;"	f	file:
free_neighbor_list	image_processing/TePDIBaatz.cpp	/^void free_neighbor_list(struct segment_neighbor **first_neighbor)$/;"	f
free_segment_list	image_processing/TePDIBaatz.cpp	/^void free_segment_list(struct segment **initial_segment, $/;"	f
free_table	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines	file:
free_table	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines
freqs	image_processing/TePDIHants.cpp	/^  int *freqs;$/;"	v
from	kernel/TeLegendEntry.h	/^	string from()$/;"	f	class:TeLegendEntry
from	kernel/TeLegendEntry.h	/^	void from(string& s)$/;"	f	class:TeLegendEntry
from	kernel/TeTin.h	/^	long from () $/;"	f	class:TeTinEdge
fromClause_	kernel/TeQuerierDBStr1.h	/^	string						fromClause_;   \/\/store the sql clause(from and where) to return the number of instances$/;"	m	class:TeQuerierDBStr1
fromClause_	kernel/TeQuerierDBStr3.h	/^	string						fromClause_;   \/\/store the sql clause(from and where) to return the number of instances$/;"	m	class:TeQuerierDBStr3
fromId	kernel/TeGeometry.h	/^	int fromId () const$/;"	f	class:TeArc
fromId	kernel/TeGeometry.h	/^	void fromId (int i) $/;"	f	class:TeArc
fromNode	kernel/TeGeometry.h	/^	TeNode& fromNode () $/;"	f	class:TeArc
from_	kernel/TeGeometry.h	/^	TeNode	from_, to_;$/;"	m	class:TeArc
from_	kernel/TeSlice.h	/^	string		from_;			\/\/! interval lower value $/;"	m	class:TeSlice
from_	kernel/TeTin.h	/^	long	from_, to_;$/;"	m	class:TeTinEdge
frontBuffer	drivers/GL/glcore.h	/^    __GLdrawableBuffer frontBuffer;$/;"	m	struct:__GLdrawablePrivateRec
frontBuffer	drivers/GL/internal/glcore.h	/^    __GLdrawableBuffer frontBuffer;$/;"	m	struct:__GLdrawablePrivateRec
frontLighting_	drivers/qt/TeQtGLWidget.h	/^	bool frontLighting_;$/;"	m	class:TeQtGLWidget
fsFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned fsFlags;                   \/* cached details from statfs() *\/$/;"	m	struct:unixFile	file:
ft	drivers/Oracle/OCI/include/ocidfn.h	/^    ub2          ft;                                    \/* SQL function type *\/$/;"	m	struct:cda_def
ft	drivers/Oracle/OCI/include/ocidfn.h	/^    ub2          ft;$/;"	m	struct:cda_head
ftKernelBegin	drivers/SQLite/sqlite3/shell.c	/^static FILETIME ftKernelBegin;$/;"	v	file:
ftUserBegin	drivers/SQLite/sqlite3/shell.c	/^static FILETIME ftUserBegin;$/;"	v	file:
ftam_	drivers/qt/TeQtColorBar.h	/^	int		ftam_;$/;"	m	class:TeQtColorBar
ftos	kernel/TeGraph.cpp	/^void ftos(Real f, int digits_left, int digits_right, int exp_flag, char *s)$/;"	f
fts3AllocateSegdirIdx	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3AllocateSegdirIdx($/;"	f	file:
fts3Appendf	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3Appendf($/;"	f	file:
fts3BeginMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3BestIndexMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts3BestSnippet	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3BestSnippet($/;"	f	file:
fts3BinCompare	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3BinCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3BinHash	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3BinHash(const void *pKey, int nKey){$/;"	f	file:
fts3CloseMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3ColumnFilter	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3ColumnFilter($/;"	f	file:
fts3ColumnMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ColumnMethod($/;"	f	file:
fts3ColumnlistCopy	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3ColumnlistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3ColumnlistCount	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ColumnlistCount(char **ppCollist){$/;"	f	file:
fts3CommitMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3CompareElemByTerm	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3CompareElemByTerm(const void *lhs, const void *rhs){$/;"	f	file:
fts3ConnectMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ConnectMethod($/;"	f	file:
fts3ContentColumns	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ContentColumns($/;"	f	file:
fts3CreateMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3CreateMethod($/;"	f	file:
fts3CreateTables	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3CreateTables(Fts3Table *p){$/;"	f	file:
fts3CursorSeek	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3CursorSeek(sqlite3_context *pContext, Fts3Cursor *pCsr){$/;"	f	file:
fts3CursorSeekStmt	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3CursorSeekStmt(Fts3Cursor *pCsr, sqlite3_stmt **ppStmt){$/;"	f	file:
fts3DatabasePageSize	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3DatabasePageSize(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DbExec	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3DbExec($/;"	f	file:
fts3DeclareVtab	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3DeclareVtab(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DecodeIntArray	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3DecodeIntArray($/;"	f	file:
fts3DeleteAll	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3DeleteAll(Fts3Table *p, int bContent){$/;"	f	file:
fts3DeleteByRowid	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3DeleteByRowid($/;"	f	file:
fts3DeleteSegdir	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3DeleteSegdir($/;"	f	file:
fts3DeleteTerms	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3DeleteTerms( $/;"	f	file:
fts3DestroyMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DisconnectMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DoOptimize	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3DoOptimize(Fts3Table *p, int bReturnDone){$/;"	f	file:
fts3DoRebuild	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3DoRebuild(Fts3Table *p){$/;"	f	file:
fts3DoclistCountDocids	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3DoclistCountDocids(char *aList, int nList){$/;"	f	file:
fts3DoclistOrMerge	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3DoclistOrMerge($/;"	f	file:
fts3DoclistPhraseMerge	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3DoclistPhraseMerge($/;"	f	file:
fts3EncodeIntArray	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3EncodeIntArray($/;"	f	file:
fts3EofMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3EvalAllocateReaders	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3EvalAllocateReaders($/;"	f	file:
fts3EvalAverageDocsize	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalAverageDocsize(Fts3Cursor *pCsr, int *pnPage){$/;"	f	file:
fts3EvalDeferredPhrase	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalDeferredPhrase(Fts3Cursor *pCsr, Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalGatherStats	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalGatherStats($/;"	f	file:
fts3EvalInvalidatePoslist	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3EvalInvalidatePoslist(Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalNearTest	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalNearTest(Fts3Expr *pExpr, int *pRc){$/;"	f	file:
fts3EvalNearTrim	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalNearTrim($/;"	f	file:
fts3EvalNext	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalNext(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalNextRow	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3EvalNextRow($/;"	f	file:
fts3EvalPhraseLoad	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalPhraseLoad($/;"	f	file:
fts3EvalPhraseMergeToken	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3EvalPhraseMergeToken($/;"	f	file:
fts3EvalPhraseNext	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalPhraseNext($/;"	f	file:
fts3EvalPhraseStart	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalPhraseStart(Fts3Cursor *pCsr, int bOptOk, Fts3Phrase *p){$/;"	f	file:
fts3EvalRestart	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3EvalRestart($/;"	f	file:
fts3EvalSelectDeferred	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalSelectDeferred($/;"	f	file:
fts3EvalStart	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalStart(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalStartReaders	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3EvalStartReaders($/;"	f	file:
fts3EvalTestDeferredAndNear	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalTestDeferredAndNear(Fts3Cursor *pCsr, int *pRc){$/;"	f	file:
fts3EvalTestExpr	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3EvalTestExpr($/;"	f	file:
fts3EvalTokenCosts	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3EvalTokenCosts($/;"	f	file:
fts3EvalUpdateCounts	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3EvalUpdateCounts(Fts3Expr *pExpr){$/;"	f	file:
fts3ExprGlobalHitsCb	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ExprGlobalHitsCb($/;"	f	file:
fts3ExprIterate	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ExprIterate($/;"	f	file:
fts3ExprIterate2	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ExprIterate2($/;"	f	file:
fts3ExprLoadDoclists	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ExprLoadDoclists($/;"	f	file:
fts3ExprLoadDoclistsCb	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ExprLoadDoclistsCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprLocalHitsCb	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ExprLocalHitsCb($/;"	f	file:
fts3ExprParse	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ExprParse($/;"	f	file:
fts3ExprPhraseCount	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ExprPhraseCount(Fts3Expr *pExpr){$/;"	f	file:
fts3ExprPhraseCountCb	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ExprPhraseCountCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprTermOffsetInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ExprTermOffsetInit(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprTest	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3ExprTest($/;"	f	file:
fts3FilterMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3FilterMethod($/;"	f	file:
fts3FindElementByHash	drivers/SQLite/sqlite3/sqlite3.c	/^static Fts3HashElem *fts3FindElementByHash($/;"	f	file:
fts3FindFunctionMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3FindFunctionMethod($/;"	f	file:
fts3FunctionArg	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3FunctionArg($/;"	f	file:
fts3GetDeltaPosition	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3GetDeltaPosition(char **pp, int *piPos){$/;"	f	file:
fts3GetDeltaVarint	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3GetDeltaVarint(char **pp, sqlite3_int64 *pVal){$/;"	f	file:
fts3GetDeltaVarint3	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3GetDeltaVarint3($/;"	f	file:
fts3GetMatchinfo	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3GetMatchinfo($/;"	f	file:
fts3GetReverseVarint	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3GetReverseVarint($/;"	f	file:
fts3GobbleInt	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3GobbleInt(const char **pp, int *pnOut){$/;"	f	file:
fts3HashClear	drivers/SQLite/sqlite3/sqlite3.c	114401;"	d	file:
fts3HashCount	drivers/SQLite/sqlite3/sqlite3.c	114425;"	d	file:
fts3HashData	drivers/SQLite/sqlite3/sqlite3.c	114418;"	d	file:
fts3HashFind	drivers/SQLite/sqlite3/sqlite3.c	114400;"	d	file:
fts3HashFindElem	drivers/SQLite/sqlite3/sqlite3.c	114402;"	d	file:
fts3HashFirst	drivers/SQLite/sqlite3/sqlite3.c	114416;"	d	file:
fts3HashFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3HashFree(void *p){$/;"	f	file:
fts3HashInit	drivers/SQLite/sqlite3/sqlite3.c	114398;"	d	file:
fts3HashInsert	drivers/SQLite/sqlite3/sqlite3.c	114399;"	d	file:
fts3HashInsertElement	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3HashInsertElement($/;"	f	file:
fts3HashKey	drivers/SQLite/sqlite3/sqlite3.c	114419;"	d	file:
fts3HashKeysize	drivers/SQLite/sqlite3/sqlite3.c	114420;"	d	file:
fts3HashMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *fts3HashMalloc(int n){$/;"	f	file:
fts3HashNext	drivers/SQLite/sqlite3/sqlite3.c	114417;"	d	file:
fts3InitVtab	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3InitVtab($/;"	f	file:
fts3InsertData	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3InsertData($/;"	f	file:
fts3InsertDocsize	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3InsertDocsize($/;"	f	file:
fts3InsertTerms	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3InsertTerms(Fts3Table *p, sqlite3_value **apVal, u32 *aSz){$/;"	f	file:
fts3IsEmpty	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3IsEmpty(Fts3Table *p, sqlite3_value *pRowid, int *pisEmpty){$/;"	f	file:
fts3IsSpecialColumn	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3IsSpecialColumn($/;"	f	file:
fts3LcsIteratorAdvance	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3LcsIteratorAdvance(LcsIterator *pIter){$/;"	f	file:
fts3MallocZero	drivers/SQLite/sqlite3/sqlite3.c	/^static void *fts3MallocZero(int nByte){$/;"	f	file:
fts3MatchinfoCheck	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3MatchinfoCheck($/;"	f	file:
fts3MatchinfoFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3MatchinfoFunc($/;"	f	file:
fts3MatchinfoLcs	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3MatchinfoLcs(Fts3Cursor *pCsr, MatchInfo *pInfo){$/;"	f	file:
fts3MatchinfoLcsCb	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3MatchinfoLcsCb($/;"	f	file:
fts3MatchinfoSelectDoctotal	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3MatchinfoSelectDoctotal($/;"	f	file:
fts3MatchinfoSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3MatchinfoSize(MatchInfo *pInfo, char cArg){$/;"	f	file:
fts3MatchinfoValues	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3MatchinfoValues($/;"	f	file:
fts3Module	drivers/SQLite/sqlite3/sqlite3.c	/^static const sqlite3_module fts3Module = {$/;"	v	file:
fts3MsrBufferData	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3MsrBufferData($/;"	f	file:
fts3NextMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3NodeAddTerm	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3NodeAddTerm($/;"	f	file:
fts3NodeFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3NodeFree(SegmentNode *pTree){$/;"	f	file:
fts3NodeWrite	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3NodeWrite($/;"	f	file:
fts3OffsetsFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3OffsetsFunc($/;"	f	file:
fts3OpenMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3OptimizeFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3OptimizeFunc($/;"	f	file:
fts3PendingListAppend	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3PendingListAppend($/;"	f	file:
fts3PendingListAppendVarint	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3PendingListAppendVarint($/;"	f	file:
fts3PendingListDelete	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3PendingListDelete(PendingList *pList){$/;"	f	file:
fts3PendingTermsAdd	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3PendingTermsAdd($/;"	f	file:
fts3PendingTermsAddOne	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3PendingTermsAddOne($/;"	f	file:
fts3PendingTermsDocid	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3PendingTermsDocid(Fts3Table *p, sqlite_int64 iDocid){$/;"	f	file:
fts3PoslistCopy	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3PoslistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3PoslistMerge	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3PoslistMerge($/;"	f	file:
fts3PoslistNearMerge	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3PoslistNearMerge($/;"	f	file:
fts3PoslistPhraseMerge	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3PoslistPhraseMerge($/;"	f	file:
fts3PrefixCompress	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3PrefixCompress($/;"	f	file:
fts3PrefixParameter	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3PrefixParameter($/;"	f	file:
fts3PutColNumber	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3PutColNumber(char **pp, int iCol){$/;"	f	file:
fts3PutDeltaVarint	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3PutDeltaVarint($/;"	f	file:
fts3PutDeltaVarint3	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3PutDeltaVarint3($/;"	f	file:
fts3QuoteId	drivers/SQLite/sqlite3/sqlite3.c	/^static char *fts3QuoteId(char const *zInput){$/;"	f	file:
fts3ReadExprList	drivers/SQLite/sqlite3/sqlite3.c	/^static char *fts3ReadExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3ReadNextPos	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3ReadNextPos($/;"	f	file:
fts3ReallocOrFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void *fts3ReallocOrFree(void *pOrig, int nNew){$/;"	f	file:
fts3Rehash	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3Rehash(Fts3Hash *pH, int new_size){$/;"	f	file:
fts3ReleaseMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3RemoveElementByHash	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3RemoveElementByHash($/;"	f	file:
fts3RenameMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3RenameMethod($/;"	f	file:
fts3ReversePoslist	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3ReversePoslist(char *pStart, char **ppPoslist){$/;"	f	file:
fts3RollbackMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3RollbackToMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3RowidMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts3SavepointMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3ScanInteriorNode	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3ScanInteriorNode($/;"	f	file:
fts3SegReaderCmp	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderCursor	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderCursor($/;"	f	file:
fts3SegReaderCursorAddZero	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderCursorAddZero($/;"	f	file:
fts3SegReaderCursorAppend	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderCursorAppend($/;"	f	file:
fts3SegReaderCursorFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3SegReaderCursorFree(Fts3MultiSegReader *pSegcsr){$/;"	f	file:
fts3SegReaderDoclistCmp	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderDoclistCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderDoclistCmpRev	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderDoclistCmpRev(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderFirstDocid	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderFirstDocid(Fts3Table *pTab, Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderIncrRead	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderIncrRead(Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderIsPending	drivers/SQLite/sqlite3/sqlite3.c	123075;"	d	file:
fts3SegReaderIsRootOnly	drivers/SQLite/sqlite3/sqlite3.c	123076;"	d	file:
fts3SegReaderNext	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderNext($/;"	f	file:
fts3SegReaderNextDocid	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderNextDocid($/;"	f	file:
fts3SegReaderRequire	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderRequire(Fts3SegReader *pReader, char *pFrom, int nByte){$/;"	f	file:
fts3SegReaderSort	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3SegReaderSort($/;"	f	file:
fts3SegReaderStart	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderStart($/;"	f	file:
fts3SegReaderTermCmp	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegReaderTermCmp($/;"	f	file:
fts3SegWriterAdd	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegWriterAdd($/;"	f	file:
fts3SegWriterFlush	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegWriterFlush($/;"	f	file:
fts3SegWriterFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3SegWriterFree(SegmentWriter *pWriter){$/;"	f	file:
fts3SegmentMaxLevel	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegmentMaxLevel(Fts3Table *p, int iIndex, int *pnMax){$/;"	f	file:
fts3SegmentMerge	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SegmentMerge(Fts3Table *p, int iIndex, int iLevel){$/;"	f	file:
fts3SelectDocsize	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SelectDocsize($/;"	f	file:
fts3SelectLeaf	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SelectLeaf($/;"	f	file:
fts3SnippetAdvance	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3SnippetAdvance(char **ppIter, int *piIter, int iNext){$/;"	f	file:
fts3SnippetDetails	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3SnippetDetails($/;"	f	file:
fts3SnippetFindPositions	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SnippetFindPositions(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3SnippetFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3SnippetFunc($/;"	f	file:
fts3SnippetNextCandidate	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SnippetNextCandidate(SnippetIter *pIter){$/;"	f	file:
fts3SnippetShift	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SnippetShift($/;"	f	file:
fts3SnippetText	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SnippetText($/;"	f	file:
fts3SpecialInsert	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SpecialInsert(Fts3Table *p, sqlite3_value *pVal){$/;"	f	file:
fts3SqlExec	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3SqlExec($/;"	f	file:
fts3SqlStmt	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SqlStmt($/;"	f	file:
fts3StrCompare	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3StrCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3StrHash	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3StrHash(const void *pKey, int nKey){$/;"	f	file:
fts3StringAppend	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3StringAppend($/;"	f	file:
fts3SyncMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3TermSegReaderCursor	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3TermSegReaderCursor($/;"	f	file:
fts3TermSelect	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3TermSelect($/;"	f	file:
fts3TermSelectFinishMerge	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3TermSelectFinishMerge(Fts3Table *p, TermSelect *pTS){$/;"	f	file:
fts3TermSelectMerge	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3TermSelectMerge($/;"	f	file:
fts3TreeFinishNode	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3TreeFinishNode($/;"	f	file:
fts3UpdateDocTotals	drivers/SQLite/sqlite3/sqlite3.c	/^static void fts3UpdateDocTotals($/;"	f	file:
fts3UpdateMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3UpdateMethod($/;"	f	file:
fts3WriteExprList	drivers/SQLite/sqlite3/sqlite3.c	/^static char *fts3WriteExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3WriteSegdir	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3WriteSegdir($/;"	f	file:
fts3WriteSegment	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3WriteSegment($/;"	f	file:
fts3_isalnum	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3_isalnum(int x){$/;"	f	file:
fts3auxBestIndexMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3auxBestIndexMethod($/;"	f	file:
fts3auxCloseMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3auxCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxColumnMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3auxColumnMethod($/;"	f	file:
fts3auxConnectMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3auxConnectMethod($/;"	f	file:
fts3auxDisconnectMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3auxDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3auxEofMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3auxEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxFilterMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3auxFilterMethod($/;"	f	file:
fts3auxGrowStatArray	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3auxGrowStatArray(Fts3auxCursor *pCsr, int nSize){$/;"	f	file:
fts3auxNextMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3auxNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxOpenMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3auxOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3auxRowidMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3auxRowidMethod($/;"	f	file:
fts3isspace	drivers/SQLite/sqlite3/sqlite3.c	/^static int fts3isspace(char c){$/;"	f	file:
ftsCompareFunction	drivers/SQLite/sqlite3/sqlite3.c	/^static int (*ftsCompareFunction(int keyClass))(const void*,int,const void*,int){$/;"	f	file:
ftsHashFunction	drivers/SQLite/sqlite3/sqlite3.c	/^static int (*ftsHashFunction(int keyClass))(const void*,int){$/;"	f	file:
fullFileName_	kernel/TeTempFilesRemover.h	/^        std::string fullFileName_;$/;"	m	struct:TeTempFilesRemover::ListNode
fullSync	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 fullSync;                \/* Do extra syncs of the journal for robustness *\/$/;"	m	struct:Pager	file:
full_fsync	drivers/SQLite/sqlite3/sqlite3.c	/^static int full_fsync(int fd, int fullSync, int dataOnly){$/;"	f	file:
funcprocAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId funcprocAttrId[FUNCPROC_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
funcprocAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType funcprocAttrType[FUNCPROC_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
functionDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^static void functionDestroy(sqlite3 *db, FuncDef *p){$/;"	f	file:
functionSearch	drivers/SQLite/sqlite3/sqlite3.c	/^static FuncDef *functionSearch($/;"	f	file:
function_	drivers/qt/TeQtGLWidget.h	/^	string function_;$/;"	m	class:TeQtGLWidget
fxMesaContext	drivers/GL/fxmesa.h	/^typedef struct tfxMesaContext *fxMesaContext;$/;"	t	typeref:struct:tfxMesaContext
g_elapsed	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite_uint64 g_elapsed;$/;"	v	file:
g_start	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite_uint64 g_start;$/;"	v	file:
gain_	kernel/TeRasterTransform.h	/^	double gain_, offset_;$/;"	m	class:TeRasterTransform
gaussElimination	kernel/TeTin.cpp	/^TeTin::gaussElimination(int nvars, int neqs, double** matrix)$/;"	f	class:TeTin
gaussianSmoothing	image_processing/TePDIOFMatching.cpp	/^bool TePDIOFMatching::gaussianSmoothing( $/;"	f	class:TePDIOFMatching
gds	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	GDS gds;	\/\/ Global unique GDS instance$/;"	m	namespace:ibpp_internals	file:
gds_quad_high	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_LONG gds_quad_high;$/;"	m	struct:GDS_QUAD_t
gds_quad_low	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_ULONG gds_quad_low;$/;"	m	struct:GDS_QUAD_t
gen_state	utils/mtrand.cpp	/^void MTRand_int32::gen_state() { \/\/ generate new state vector$/;"	f	class:MTRand_int32
generateAttributeRest_	kernel/TeAbstractTheme.h	/^	string		generateAttributeRest_;$/;"	m	class:TeAbstractTheme
generateColorBarMap	utils/TeColorUtils.cpp	/^void generateColorBarMap(vector<ColorBar>& inputColorVec, int ncores, map<int, vector<TeColor> >& colorMap)$/;"	f
generateColorMap	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::generateColorMap()$/;"	f	class:TeQtColorBar
generateColumnNames	drivers/SQLite/sqlite3/sqlite3.c	/^static void generateColumnNames($/;"	f	file:
generateColumnTypes	drivers/SQLite/sqlite3/sqlite3.c	/^static void generateColumnTypes($/;"	f	file:
generateContour	kernel/TeTin.cpp	/^TeTin::generateContour(double contour, TeContourLine*& ptline)$/;"	f	class:TeTin
generateCorrWindows	image_processing/TePDIOFMatching.cpp	/^bool TePDIOFMatching::generateCorrWindows( $/;"	f	class:TePDIOFMatching
generateCorrelationFeatures	image_processing/TePDIMMIOMatching.cpp	/^void TePDIMMIOMatching::generateCorrelationFeatures( void * paramsPtr )$/;"	f	class:TePDIMMIOMatching
generateCountLegends	drivers/qt/TeApplicationUtils.cpp	/^bool generateCountLegends(TeAppTheme* appTheme, string table, string field)$/;"	f
generateDelaunay	kernel/TeTin.cpp	/^TeTin::generateDelaunay(long nt, long ntbase, long& contr)$/;"	f	class:TeTin
generateDownsampledImage_	image_processing/TePDIMMIOMatching.hpp	/^          bool generateDownsampledImage_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
generateFeatures	image_processing/TePDIOFMatching.cpp	/^bool TePDIOFMatching::generateFeatures( $/;"	f	class:TePDIOFMatching
generateInClauses	kernel/TeDatabase.h	/^generateInClauses(const Iterator& begin, const Iterator& end, TeDatabase* db, bool addPlicae=true)$/;"	f
generateItemsInClauseVec	utils/TeDatabaseUtils.cpp	/^generateItemsInClauseVec(TeTheme* theme, string& where)$/;"	f
generateItemsInClauses	utils/TeDatabaseUtils.h	/^generateItemsInClauses(Iterator& begin, Iterator& end, TeTheme* theme)$/;"	f
generateLSSurface	image_processing/TePDIOFMatching.cpp	/^bool TePDIOFMatching::generateLSSurface( $/;"	f	class:TePDIOFMatching
generateLUT	kernel/TeRasterTransform.cpp	/^TeRasterTransform::generateLUT(TeLegendEntryVector& legs, unsigned int nentries, TeColor& backColor)$/;"	f	class:TeRasterTransform
generateLabelPositions	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::generateLabelPositions (TeTheme *theme, const std::string& objectId)$/;"	f	class:TeFirebird
generateLabelPositions	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::generateLabelPositions (TeTheme *theme, const std::string& objectId)$/;"	f	class:TeMySQL
generateLabelPositions	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::generateLabelPositions (TeTheme *theme, const std::string& objectId)$/;"	f	class:TeOCIOracle
generateLabelPositions	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::generateLabelPositions	(TeTheme *theme, const std::string& objectId)$/;"	f	class:TeOracleSpatial
generateLabelPositions	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::generateLabelPositions(TeTheme *theme, const std::string& objectId)$/;"	f	class:TePostGIS
generateLabelPositions	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::generateLabelPositions(TeTheme *theme, const std::string& objectId)$/;"	f	class:TePostgreSQL
generateLabelPositions	drivers/SQLite/TeSQLite.cpp	/^TeSQLite::generateLabelPositions(TeTheme *theme, const std::string& objectId)$/;"	f	class:TeSQLite
generateLabelPositions	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::generateLabelPositions (TeTheme *theme)$/;"	f	class:TeFireBird
generateLabelPositions	drivers/ado/TeAdoOracle.cpp	/^TeOracle::generateLabelPositions (TeTheme *theme, const std::string& objectId )$/;"	f	class:TeOracle
generateLabelPositions	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::generateLabelPositions (TeTheme *theme, const std::string& objectId )$/;"	f	class:TeSqlServer
generateLabelPositions	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::generateLabelPositions (TeTheme *theme, const std::string& objectId )$/;"	f	class:TeSqlServerSpatial
generateLabelPositions	kernel/TeDatabase.cpp	/^TeDatabase::generateLabelPositions(TeTheme *theme, const std::string& objectId)$/;"	f	class:TeDatabase
generateLabelPositions	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::generateLabelPositions(const std::string& \/* objectId *\/)$/;"	f	class:TeExternalTheme
generateLabelPositions	kernel/TeTheme.cpp	/^TeTheme::generateLabelPositions(const std::string& objectId)$/;"	f	class:TeTheme
generateLablesForPolygonal	drivers/Firebird/TeFirebird.cpp	/^bool generateLablesForPolygonal(IBPP::Database db, TeTheme* theme, const TeGeomRep& geomType, $/;"	f
generateLegends	drivers/qt/TeQtLegendSource.cpp	/^bool TeQtLegendSource::generateLegends(const TeGrouping& groupingParams, double minValue, double maxValue)$/;"	f	class:TeQtLegendSource
generateMaximasRaster	image_processing/TePDIMMIOMatching.cpp	/^bool TePDIMMIOMatching::generateMaximasRaster( $/;"	f	class:TePDIMMIOMatching
generateOutputSubroutine	drivers/SQLite/sqlite3/sqlite3.c	/^static int generateOutputSubroutine($/;"	f	file:
generateSortTail	drivers/SQLite/sqlite3/sqlite3.c	/^static void generateSortTail($/;"	f	file:
generateSpatialRest_	kernel/TeAbstractTheme.h	/^	string		generateSpatialRest_; \/\/future use$/;"	m	class:TeAbstractTheme
generateTemporalRest_	kernel/TeAbstractTheme.h	/^	string		generateTemporalRest_;$/;"	m	class:TeAbstractTheme
generateTextUsingCentroid	drivers/qt/TeApplicationUtils.cpp	/^bool generateTextUsingCentroid(TeTheme* theme, const std::string& objectId)$/;"	f
generateUpsampledImage_	image_processing/TePDIMMIOMatching.hpp	/^          bool generateUpsampledImage_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
generatedLayerId_	stat/TeKernelParams.h	/^	int						generatedLayerId_;		\/\/ id of the generated layer (when it�s raster) $/;"	m	struct:TeKernelParams
generatedLayerName_	stat/TeKernelParams.h	/^	string					generatedLayerName_;	\/\/ name of the generated layer (when it�s raster)$/;"	m	struct:TeKernelParams
genericName_nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^   ub1 *genericName_nzttPersona;              \/* user-friendly persona name  *\/$/;"	m	struct:nzttPersona
genericNamelen_nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^   ub4  genericNamelen_nzttPersona;           \/* persona-name length *\/$/;"	m	struct:nzttPersona
geom	kernel/TeCoverageDecoder.h	/^    T geom; \/\/!< A generic geometry$/;"	m	struct:TeGeomValuePair
geom	kernel/TeCoverageImport.h	/^    T geom;$/;"	m	struct:SerializedPair
geomCallback	drivers/SQLite/sqlite3/sqlite3.c	/^static void geomCallback(sqlite3_context *ctx, int nArg, sqlite3_value **aArg){$/;"	f	file:
geomDifference	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::geomDifference(const string& actGeomTable, TeGeomRep \/* actRep *\/, const string& objId1, const string& objId2, TeGeometryVect& geomVect)$/;"	f	class:TeOracleSpatial
geomDifference	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::geomDifference(const string& actGeomTable, TeGeomRep \/* actRep *\/, const string& objId1, const string& visGeomTable, TeGeomRep \/* visRep *\/, const string& objId2, TeGeometryVect& geomVect)$/;"	f	class:TeOracleSpatial
geomDifference	kernel/TeDatabase.cpp	/^TeDatabase::geomDifference(const string& \/* actGeomTable *\/, TeGeomRep \/* actRep *\/, const string& \/* objId1 *\/, const string& \/* visGeomTable *\/, TeGeomRep \/* visRep *\/, const string& \/* objId2 *\/, TeGeometryVect& \/* geomVect *\/)$/;"	f	class:TeDatabase
geomDifference	kernel/TeDatabase.cpp	/^TeDatabase::geomDifference(const string& actGeomTable, TeGeomRep actRep, const string& objId1, const string& objId2, TeGeometryVect& geomVect)$/;"	f	class:TeDatabase
geomId	kernel/TeGeometry.h	/^	int geomId() const$/;"	f	class:TeGeometry
geomId	kernel/TeGeometry.h	/^	void geomId( int id )$/;"	f	class:TeGeometry
geomIdSet_	drivers/qt/TeQtTextEdit.h	/^	set<int>			 geomIdSet_;$/;"	m	class:TeQtMultiTextEdit
geomId_	kernel/TeGeometry.h	/^	int		geomId_;	\/\/!<  The unique geometry identification$/;"	m	class:TeGeometry
geomId_	kernel/TeQuerierDBStr1.h	/^	int							geomId_;$/;"	m	class:TeQuerierDBStr1
geomIndex1_	kernel/TeQuerierDB.h	/^	vector<int>				geomIndex1_;$/;"	m	class:TeQuerierDB
geomIndex2_	kernel/TeQuerierDB.h	/^	vector<int>				geomIndex2_;$/;"	m	class:TeQuerierDB
geomIntersection	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::geomIntersection(const string& actGeomTable, TeGeomRep \/* actRep *\/, TeKeys& actIds, TeGeometryVect& geomVect)$/;"	f	class:TeOracleSpatial
geomIntersection	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::geomIntersection(const string& actGeomTable, TeGeomRep \/* actRep *\/, const string& objId1, const string& visGeomTable, TeGeomRep \/* visRep *\/, const string& objId2, TeGeometryVect& geomVect)$/;"	f	class:TeOracleSpatial
geomIntersection	kernel/TeDatabase.cpp	/^TeDatabase::geomIntersection(const string& \/* actGeomTable *\/, TeGeomRep \/* actRep *\/, const string& \/* objId1 *\/, const string& \/* visGeomTable *\/, TeGeomRep \/* visRep *\/, const string& \/* objId2 *\/, TeGeometryVect& \/* geomVect *\/)$/;"	f	class:TeDatabase
geomIntersection	kernel/TeDatabase.cpp	/^TeDatabase::geomIntersection(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIds, TeGeometryVect& geomVect)$/;"	f	class:TeDatabase
geomRep	kernel/TeLayer.cpp	/^TeLayer::geomRep()$/;"	f	class:TeLayer
geomRep2_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeGeomRep	geomRep2_;$/;"	m	class:TeProxMatrixChooseOneTopologyStrategy
geomRep2_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeGeomRep	geomRep2_;$/;"	m	class:TeProxMatrixKeepInBothTopologyStrategy
geomRep2_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeGeomRep	geomRep2_;$/;"	m	class:TeProxMatrixLocalTopologyStrategy
geomRepRest	kernel/TeQuerierParams.h	/^	virtual TeGeomRep  geomRepRest() { return geomRepRest_; }$/;"	f	class:TeQuerierParams
geomRepRest_	kernel/TeAbstractTheme.h	/^	TeGeomRep			geomRepRest_;	\/\/geometry representation of the theme which will be $/;"	m	class:TeAbstractTheme
geomRepRest_	kernel/TeQuerierParams.h	/^	TeGeomRep				geomRepRest_;		\/\/!< geometric representation of the theme that will be considered by spatial restriction  $/;"	m	class:TeQuerierParams
geomRepRestriction	kernel/TeAbstractTheme.h	/^	virtual TeGeomRep geomRepRestriction() { return geomRepRest_; }$/;"	f	class:TeAbstractTheme
geomRepRestriction	kernel/TeAbstractTheme.h	/^	virtual void geomRepRestriction (TeGeomRep& rep) { geomRepRest_ = rep; }$/;"	f	class:TeAbstractTheme
geomRep_	kernel/TeRepresentation.h	/^	TeGeomRep geomRep_;		\/\/!< representation type ($/;"	m	struct:TeRepresentation
geomRep_	kernel/TeVisual.h	/^	TeGeomRep   geomRep_;				$/;"	m	class:TeBaseVisualParams
geomRepr_	kernel/TeQuerierDB.h	/^	vector<TeRepresentation>	geomRepr_;	$/;"	m	class:TeQuerierDB
geomRest	kernel/TeQuerierParams.h	/^	virtual TeGeometry* geomRest() { return geomRest_; }$/;"	f	class:TeQuerierParams
geomRest_	kernel/TeAbstractTheme.h	/^	TeGeometry*			geomRest_;		\/\/geometry which defines the spatial restriction $/;"	m	class:TeAbstractTheme
geomRest_	kernel/TeQuerierParams.h	/^	TeGeometry*				geomRest_;			\/\/!< A geometry pointer used by spatial restriction $/;"	m	class:TeQuerierParams
geomRestriction	kernel/TeAbstractTheme.h	/^	virtual TeGeometry* geomRestriction() { return geomRest_;}$/;"	f	class:TeAbstractTheme
geomRestriction	kernel/TeAbstractTheme.h	/^	virtual void geomRestriction(TeGeometry* g) {geomRest_ = g;}$/;"	f	class:TeAbstractTheme
geomUnion	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::geomUnion(const string& actGeomTable, TeGeomRep \/* actRep *\/, TeKeys& actIds, TeGeometryVect& geomVect)$/;"	f	class:TeOracleSpatial
geomUnion	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::geomUnion(const string& actGeomTable, TeGeomRep \/* actRep *\/, const string& objId1, const string& visGeomTable, TeGeomRep \/* visRep *\/, const string& objId2, TeGeometryVect& geomVect)$/;"	f	class:TeOracleSpatial
geomUnion	kernel/TeDatabase.cpp	/^TeDatabase::geomUnion(const string&  actGeomTable, TeGeomRep actRep, TeKeys& actIds, TeGeometryVect& geomVect)$/;"	f	class:TeDatabase
geomUnion	kernel/TeDatabase.cpp	/^TeDatabase::geomUnion(const string& \/* actGeomTable *\/, TeGeomRep \/* actRep *\/, const string& \/* objId1 *\/, const string& \/* visGeomTable *\/, TeGeomRep \/* visRep *\/, const string& \/* objId2 *\/, TeGeometryVect& \/* geomVect *\/)$/;"	f	class:TeDatabase
geomXOr	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::geomXOr(const string& actGeomTable, TeGeomRep \/* actRep *\/, const string& objId1, const string& objId2, TeGeometryVect& geomVect)$/;"	f	class:TeOracleSpatial
geomXOr	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::geomXOr(const string& actGeomTable, TeGeomRep \/* actRep *\/, const string& objId1, const string& visGeomTable, TeGeomRep \/* visRep *\/, const string& objId2, TeGeometryVect& geomVect)$/;"	f	class:TeOracleSpatial
geomXOr	kernel/TeDatabase.cpp	/^TeDatabase::geomXOr(const string& \/* actGeomTable *\/, TeGeomRep \/* actRep *\/, const string& \/* objId1 *\/, const string& \/* objId2 *\/, TeGeometryVect& \/* geomVect *\/)$/;"	f	class:TeDatabase
geomXOr	kernel/TeDatabase.cpp	/^TeDatabase::geomXOr(const string& \/* actGeomTable *\/, TeGeomRep \/* actRep *\/, const string& \/* objId1 *\/, const string& \/* visGeomTable *\/, TeGeomRep \/* visRep *\/, const string& \/* objId2 *\/, TeGeometryVect& \/* geomVect *\/)$/;"	f	class:TeDatabase
geom_it	kernel/TeCoverage.h	/^        typedef typename std::vector<TeGeomValuePair<T> >::iterator geom_it;$/;"	t	class:TeCoverage::iterator
geom_rep1_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeGeomRep				geom_rep1_;$/;"	m	struct:TeProxMatrixConstructionParams
geom_rep2_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeGeomRep				geom_rep2_;$/;"	m	struct:TeProxMatrixConstructionParams
geometries	kernel/TeBaseSTInstance.h	/^	virtual GeometryType& geometries() $/;"	f	class:TeBaseSTInstance
geometries_	kernel/TeBaseSTInstance.h	/^	GeometryType			geometries_;	$/;"	m	class:TeBaseSTInstance
geometryRep	kernel/TeQuerierDB.cpp	/^TeQuerierDB::geometryRep() $/;"	f	class:TeQuerierDB
get	image_processing/TePDIFilterMask.cpp	/^double TePDIFilterMask::get( unsigned int line, unsigned int column ) const$/;"	f	class:TePDIFilterMask
get	kernel/TeView.h	/^	virtual TeTheme* get(string themeName)$/;"	f	class:TeView
get	kernel/TeView.h	/^	virtual TeViewNode* get(int i)$/;"	f	class:TeView
get2byte	drivers/SQLite/sqlite3/sqlite3.c	47801;"	d	file:
get2byteNotZero	drivers/SQLite/sqlite3/sqlite3.c	48122;"	d	file:
get4byte	drivers/SQLite/sqlite3/sqlite3.c	47803;"	d	file:
getAddressLocatorLayerTables	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::getAddressLocatorLayerTables(vector<pair<int, string> >& tableNameVec, const int& layerId)$/;"	f	class:TeAddressLocator
getAddressLocatorLayers	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::getAddressLocatorLayers(vector<pair<int, string> >& layerNameVec)$/;"	f	class:TeAddressLocator
getAddressLocatorMetadata	functions/TeAddressLocator.h	/^		TeAddressMetadata getAddressLocatorMetadata() const$/;"	f	class:TeAddressLocator
getAddressTablePortal	functions/TeAddressLocator.cpp	/^TeDatabasePortal* TeAddressLocator::getAddressTablePortal(TeGeocodeTableMetadata& tableMetadata, int& numRows)$/;"	f	class:TeAddressLocator
getAlignment	drivers/GTM/TeGTM.h	/^	unsigned char getAlignment(){return alignment_;};$/;"	f	class:TeGTMWaypointsStyles
getAllAddressMetadataLayer	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::getAllAddressMetadataLayer(const int& layerId, vector<TeAddressMetadata>& addVec)$/;"	f	class:TeAddressLocator
getAllAddressMetadataTheme	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::getAllAddressMetadataTheme(const int& themeId, vector<TeAddressMetadata>& addVec)$/;"	f	class:TeAddressLocator
getAndInitPage	drivers/SQLite/sqlite3/sqlite3.c	/^static int getAndInitPage($/;"	f	file:
getAppTheme	drivers/qt/TeQtLegendSource.h	/^	TeAppTheme& getAppTheme() { return appTheme_; }$/;"	f	class:TeQtLegendSource
getAppTheme	drivers/qt/TeQtThemeItem.h	/^	TeAppTheme* getAppTheme()$/;"	f	class:TeQtThemeItem
getArea	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::getArea()$/;"	f	class:TeBaseSTInstance
getArrow	drivers/qt/TeQtCanvas.cpp	/^QPointArray	TeQtCanvas::getArrow(QPoint ptBegin, QPoint ptEnd, double size)$/;"	f	class:TeQtCanvas
getAssimetryMatrix	image_processing/TePDIStatistic.cpp	/^TeMatrix TePDIStatistic::getAssimetryMatrix( unsigned int pol_index )$/;"	f	class:TePDIStatistic
getAttTables	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::getAttTables(TeAttrTableVector& attrs, TeAttrTableType attType)$/;"	f	class:TeExternalTheme
getAttTables	kernel/TeTheme.cpp	/^TeTheme::getAttTables(TeAttrTableVector& attrs, TeAttrTableType attType)$/;"	f	class:TeTheme
getAttrList	kernel/TeBaseSTInstance.h	/^	const TeAttributeList*	getAttrList()$/;"	f	class:TeBaseSTInstance
getAttrList	kernel/TeQuerier.cpp	/^TeQuerier::getAttrList()$/;"	f	class:TeQuerier
getAttrList	kernel/TeQuerierImpl.h	/^	TeAttributeList getAttrList() { return (*attrList_); }$/;"	f	class:TeQuerierImpl
getAttrTable	kernel/TeDatabase.cpp	/^TeDatabasePortal::getAttrTable(TeTable& table, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
getAttrTables	kernel/TeDatabase.cpp	/^TeDatabase::getAttrTables(TeAttrTableVector& atts, TeAttrTableType attType)$/;"	f	class:TeDatabase
getAttrTables	kernel/TeLayer.cpp	/^TeLayer::getAttrTables(TeAttrTableVector& atts, TeAttrTableType attType)$/;"	f	class:TeLayer
getAttrTablesByName	kernel/TeLayer.cpp	/^TeLayer::getAttrTablesByName(const string& attrTableName, TeTable& table, TeAttrTableType attType)$/;"	f	class:TeLayer
getAttrTablesByName	kernel/TeLayer.cpp	/^TeLayer::getAttrTablesByName(vector<string> &tableNames, TeAttrTableVector& atts, TeAttrTableType attType)$/;"	f	class:TeLayer
getAttribute	drivers/gdal/TeOGRDataSet.cpp	/^bool TeOGRDataSet::getAttribute(const int& index, const int& col, std::string& value)$/;"	f	class:TeOGRDataSet
getAttribute	kernel/TeDatabase.cpp	/^TeAttribute TeDatabasePortal::getAttribute (const string& s)$/;"	f	class:TeDatabasePortal
getAttribute	kernel/TeDatabase.cpp	/^TeAttribute TeDatabasePortal::getAttribute (int i)$/;"	f	class:TeDatabasePortal
getAttribute	kernel/TeExternalTheme.cpp	/^string TeExternalTheme::getAttribute(unsigned int index)$/;"	f	class:TeExternalTheme
getAttribute	kernel/TeSTGeoDataSet.cpp	/^bool TeSTGeoDataSet::getAttribute(const int& index, const int& col, std::string& value)$/;"	f	class:TeSTGeoDataSet
getAttribute	kernel/TeTheme.cpp	/^TeTheme::getAttribute(unsigned int pos)$/;"	f	class:TeTheme
getAttributeIndex	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getAttributeIndex(const string& attrName) $/;"	f	class:TeBaseSTInstanceSet
getAttributeList	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::getAttributeList(const string& tableName,TeAttributeList& attList)$/;"	f	class:TeFirebird
getAttributeList	drivers/Oracle/TeOCIOracle.cpp	/^bool TeOCIOracle::getAttributeList(const string& tableName,TeAttributeList& attList)$/;"	f	class:TeOCIOracle
getAttributeList	drivers/PostgreSQL/TePostgreSQL.cpp	/^TePostgreSQL::getAttributeList(const string& tableName, TeAttributeList& attList)$/;"	f	class:TePostgreSQL
getAttributeList	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::getAttributeList(const string& tableName,TeAttributeList& attList)$/;"	f	class:TeSQLite
getAttributeList	drivers/ado/TeAdoDB.cpp	/^TeAdo::getAttributeList(const string& tableName,TeAttributeList& attList)$/;"	f	class:TeAdo
getAttributeList	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::getAttributeList(const string& tableName,TeAttributeList& attList)$/;"	f	class:TeFireBird
getAttributeList	drivers/ado/TeAdoOracle.cpp	/^TeOracle::getAttributeList(const string& tableName,TeAttributeList& attList)$/;"	f	class:TeOracle
getAttributeList	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::getAttributeList(const string& tableName,TeAttributeList& attList)$/;"	f	class:TeSqlServer
getAttributeList	kernel/TeBaseSTInstanceSet.h	/^	virtual TeAttributeList& getAttributeList()$/;"	f	class:TeBaseSTInstanceSet
getAttributeList	kernel/TeDatabase.cpp	/^TeDatabase::getAttributeList(const string& tableName,TeAttributeList& attList)$/;"	f	class:TeDatabase
getAttributeList	kernel/TeDatabase.h	/^	TeAttributeList& getAttributeList()	$/;"	f	class:TeDatabasePortal
getAttributeList	kernel/TeSFSTheme.cpp	/^void TeSFSTheme::getAttributeList(TeAttributeList& attrList)$/;"	f	class:TeSFSTheme
getAttributeValue	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getAttributeValue (const string& object_id, const int& i, string& val, TimeType& time, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getAttributeValue	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getAttributeValue (const string& object_id, const int& i, string& val, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getAttributeValue	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getAttributeValue (const string& object_id, const string& attr_name,  string& val, TimeType& time, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getAttributeValue	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getAttributeValue (const string& object_id, const string& attr_name,  string& val, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getAttributes	drivers/gdal/TeOGRDataSet.cpp	/^bool TeOGRDataSet::getAttributes(const int& index, std::vector<std::string>& vecAtributes)$/;"	f	class:TeOGRDataSet
getAttributes	kernel/TeSTGeoDataSet.cpp	/^bool TeSTGeoDataSet::getAttributes(const int& index, std::vector<std::string>& vecAtributes) $/;"	f	class:TeSTGeoDataSet
getAttributesList	kernel/TeGeoDataDriver.cpp	/^TeAttributeList& TeGeoDataDriver::getAttributesList() $/;"	f	class:TeGeoDataDriver
getAutoLinkName	drivers/gdal/TeOGRExportImportFunctions.cpp	/^TeAttribute getAutoLinkName(const TeAttributeList& attList)$/;"	f
getAutoNumberSQL	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::getAutoNumberSQL(const string& table)$/;"	f	class:TePostgreSQL
getAutoVacuum	drivers/SQLite/sqlite3/sqlite3.c	/^static int getAutoVacuum(const char *z){$/;"	f	file:
getAverage	kernel/TeGridIndex.h	/^TL_DLL inline void getAverage(const TeLine2D& l, double& dx, double& dy)$/;"	f	namespace:TeSAM
getAwaitingJobsNumber	kernel/TeThreadJobsManager.cpp	/^unsigned long int TeThreadJobsManager::getAwaitingJobsNumber()$/;"	f	class:TeThreadJobsManager
getAxis	drivers/GTM/TeGTM.h	/^	double getAxis(){return axis_;};$/;"	f	class:TeGTMGridDatum
getBackcolor	drivers/GTM/TeGTM.h	/^	long getBackcolor(){return backcolor_;};$/;"	f	class:TeGTMWaypointsStyles
getBackground	drivers/GTM/TeGTM.h	/^	bool getBackground(){return background_;};$/;"	f	class:TeGTMWaypointsStyles
getBand	image_processing/TePDIMixModelSpectralBand.cpp	/^unsigned int TePDIMixModelSpectralBand::getBand()$/;"	f	class:TePDIMixModelSpectralBand
getBandMinMaxValues	image_processing/TePDIUtils.cpp	/^  void getBandMinMaxValues( const TePDITypes::TePDIRasterPtrType& raster, $/;"	f	namespace:TePDIUtils
getBaseLut	image_processing/TePDIContrast.cpp	/^bool TePDIContrast::getBaseLut( TePDITypes::TePDILutType& lut,$/;"	f	class:TePDIContrast
getBcolor	drivers/GTM/TeGTM.h	/^	long getBcolor(){return bcolor_;};$/;"	f	class:TeGTMHeader
getBestResolutionLevel	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::getBestResolutionLevel(unsigned int w, unsigned int h, $/;"	f	class:TeMrSIDReader
getBlob	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getBlob (const string& s, unsigned char* &data, long& size) $/;"	f	class:TeFirebirdPortal
getBlob	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebirdPortal::getBlob(const int& column, unsigned char* &data, unsigned long& size)$/;"	f	class:TeFirebirdPortal
getBlob	drivers/GTM/TeGTM.h	/^	char* getBlob(){return blob_;};$/;"	f	class:TeGTMInformationImages
getBlob	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::getBlob (const string& s, unsigned char* &data, long& size)$/;"	f	class:TeMySQLPortal
getBlob	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::getBlob(const string& s, unsigned char* &data, long& size)$/;"	f	class:TeOCIOraclePortal
getBlob	drivers/PostgreSQL/TePGInterface.cpp	/^int TePGConnection::getBlob(const Oid& blobId, char *&buff)$/;"	f	class:TePGConnection
getBlob	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::getBlob(const string& s, unsigned char*& data, long& size)$/;"	f	class:TePostgreSQLPortal
getBlob	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::getBlob(const string& s, unsigned char* &data, long& size)$/;"	f	class:TeSQLitePortal
getBlob	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getBlob (const string& s, unsigned char* &data, long& size)$/;"	f	class:TeAdoPortal
getBlob	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getBlob (int i, unsigned char* &data, long& size)$/;"	f	class:TeAdoPortal
getBlobSize	drivers/Oracle/TeOCICursor.cpp	/^TeOCICursor::getBlobSize(const string& blobCol)$/;"	f	class:TeOCICursor
getBool	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getBool (const string& s)$/;"	f	class:TeFirebirdPortal
getBool	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getBool (int i)$/;"	f	class:TeFirebirdPortal
getBool	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::getBool (const string& s)$/;"	f	class:TeMySQLPortal
getBool	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::getBool (int i)$/;"	f	class:TeMySQLPortal
getBool	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::getBool (const string& s)$/;"	f	class:TeOCIOraclePortal
getBool	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::getBool(int i)$/;"	f	class:TeOCIOraclePortal
getBool	drivers/PostgreSQL/TePGInterface.h	/^		bool getBool(const int& field_num) const$/;"	f	class:TePGRecordset
getBool	drivers/PostgreSQL/TePGInterface.h	/^		bool getBool(const string& field_name) const { return getBool(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
getBool	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::getBool(const string& s)$/;"	f	class:TePostgreSQLPortal
getBool	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::getBool(int i)$/;"	f	class:TePostgreSQLPortal
getBool	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::getBool(const string& s)$/;"	f	class:TeSQLitePortal
getBool	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::getBool(int i)$/;"	f	class:TeSQLitePortal
getBool	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getBool (int i)$/;"	f	class:TeAdoPortal
getBool	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getBool(const string& s)$/;"	f	class:TeAdoPortal
getBool	kernel/TeBlockLoader.cpp	/^TeBlockLoader::getBool(const std::string& name)$/;"	f	class:TeBlockLoader
getBorder	drivers/GTM/TeGTM.h	/^	unsigned char getBorder(){return border_;};$/;"	f	class:TeGTMWaypointsStyles
getBorderCoordinates	kernel/TePolygonSetProperties.cpp	/^vector<TeCoord2D> TePolygonSetProperties::getBorderCoordinates( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getBoundingBox	drivers/MrSID/TeMrSID.cpp	/^void TeMrSIDReader::getBoundingBox(double& xmin, double& ymin, double& xmax, double& ymax)$/;"	f	class:TeMrSIDReader
getBoundingBox	kernel/TeCoverageParams.h	/^    TeBox getBoundingBox() const$/;"	f	class:TeCoverageParams
getBox	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getBox()$/;"	f	class:TeBaseSTInstanceSet
getBox	kernel/TeGeoDataDriver.cpp	/^TeBox TeGeoDataDriver::getBox() $/;"	f	class:TeGeoDataDriver
getBox	kernel/TeKdTree.h	/^		const TeBox& getBox(void) const$/;"	f	class:TeSAM::TeBasicKdTree
getBox	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::getBox()$/;"	f	class:TeMultiGeometry
getBox	kernel/TeQuerier.cpp	/^TeQuerier::getBox()$/;"	f	class:TeQuerier
getBox	kernel/TeRTree.h	/^		const TeBox& getBox(void) const$/;"	f	class:TeSAM::TeRTree
getBranches	kernel/TeRTree.h	/^void TeRTree<DATATYPE, MAXNODES, MINNODES>::getBranches(TeRTreeNodeType* n, TeRTreeBranch* b, TePartitionVars& p) const$/;"	f	class:TeSAM::TeRTree
getBrushStyleMap	drivers/qt/TeQtViewsListView.h	/^	map<TePolyBasicType, Qt::BrushStyle>& getBrushStyleMap() {return brushStyleMap_;}$/;"	f	class:TeQtViewsListView
getBucketSize	kernel/TeKdTree.h	/^		const unsigned int& getBucketSize(void) const$/;"	f	class:TeSAM::TeAdaptativeKdTree
getBufferPtr	image_processing/TePDIRasterRUBuffer.cpp	/^double** TePDIRasterRUBuffer::getBufferPtr()$/;"	f	class:TePDIRasterRUBuffer
getByteALine2D	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::getByteALine2D(const int& field_num, TeLine2D& l) const$/;"	f	class:TePGRecordset
getByteALine2D	drivers/PostgreSQL/TePGInterface.h	/^		void getByteALine2D(const string& field_name, TeLine2D& l) const { getByteALine2D(fieldNum(field_name), l); }$/;"	f	class:TePGRecordset
getByteArray	drivers/PostgreSQL/TePostgreSQL.cpp	/^unsigned char* getByteArray(const TeLine2D& l)$/;"	f
getBytea	drivers/PostgreSQL/TePGInterface.cpp	/^int TePGRecordset::getBytea(const int& field_num, char*& buff) const$/;"	f	class:TePGRecordset
getBytea	drivers/PostgreSQL/TePGInterface.h	/^		int getBytea(const string& field_name, char*& buff) const { return getBytea(fieldNum(field_name), buff); }$/;"	f	class:TePGRecordset
getCMMatrix	image_processing/TePDIStatistic.cpp	/^TeMatrix TePDIStatistic::getCMMatrix( unsigned int pol_index )$/;"	f	class:TePDIStatistic
getCSVColumns	kernel/TeDatabaseIndex.cpp	/^std::string TeDatabaseIndex::getCSVColumns()$/;"	f	class:TeDatabaseIndex
getCacheNTiles	kernel/TeDecoderVirtualMemory.cpp	/^int TeDecoderVirtualMemory::getCacheNTiles()$/;"	f	class:TeDecoderVirtualMemory
getCacheSize	kernel/TeDecoderVirtualMemory.cpp	/^int TeDecoderVirtualMemory::getCacheSize()$/;"	f	class:TeDecoderVirtualMemory
getCellInfo	drivers/SQLite/sqlite3/sqlite3.c	/^  static void getCellInfo(BtCursor *pCur){$/;"	f	file:
getCellInfo	drivers/SQLite/sqlite3/sqlite3.c	51713;"	d	file:
getCells	kernel/TeLayer.cpp	/^TeLayer::getCells(TeCellSet &cs, const string& whereClause)$/;"	f	class:TeLayer
getCells	kernel/TeMultiGeometry.h	/^	TeCellSet&  getCells() $/;"	f	class:TeMultiGeometry
getCells	kernel/TeSTInstance.cpp	/^TeSTInstance::getCells()$/;"	f	class:TeSTInstance
getCentroid	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::getCentroid()$/;"	f	class:TeBaseSTInstance
getChildren	drivers/qt/TeQtCheckListItem.cpp	/^vector<QListViewItem*> TeQtCheckListItem::getChildren()$/;"	f	class:TeQtCheckListItem
getClientEncoding	drivers/MySQL/TeMySQL.cpp	/^std::string TeMySQL::getClientEncoding()$/;"	f	class:TeMySQL
getClientEncoding	drivers/PostgreSQL/TePGInterface.cpp	/^std::string TePGConnection::getClientEncoding()$/;"	f	class:TePGConnection
getClientEncoding	drivers/PostgreSQL/TePostgreSQL.cpp	/^std::string TePostgreSQL::getClientEncoding()$/;"	f	class:TePostgreSQL
getClientEncoding	kernel/TeDatabase.h	/^   virtual std::string getClientEncoding()$/;"	f	class:TeDatabase
getCode	drivers/GTM/TeGTM.h	/^	char* getCode(){return code_;};$/;"	f	class:TeGTMHeader
getColor	drivers/GTM/TeGTM.h	/^	long getColor(){return color_;};$/;"	f	class:TeGTMLayers
getColor	drivers/GTM/TeGTM.h	/^	long getColor(){return color_;};$/;"	f	class:TeGTMWaypointsStyles
getColor	kernel/TeDatabase.cpp	/^TeDatabasePortal::getColor ()$/;"	f	class:TeDatabasePortal
getColorBarVector	utils/TeColorUtils.cpp	/^vector<ColorBar>  getColorBarVector(string& groupingColors, const bool& first)$/;"	f
getColorIndiceToChange	drivers/qt/TeQtColorBar.cpp	/^int TeQtColorBar::getColorIndiceToChange()$/;"	f	class:TeQtColorBar
getColorModel	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::ColorModel TeMrSIDReader::getColorModel()$/;"	f	class:TeMrSIDReader
getColorNameVector	drivers/qt/TeQtLegendSource.cpp	/^void TeQtLegendSource::getColorNameVector(string& groupingColors, vector<string>& colorNameVec)$/;"	f	class:TeQtLegendSource
getColors	utils/TeColorUtils.cpp	/^bool getColors(std::vector<std::string>& ramps, int nc, std::vector<TeColor> &colors)$/;"	f
getColors	utils/TeColorUtils.cpp	/^string getColors(vector<ColorBar>& aVec, vector<ColorBar>& bVec, int groupingMode)$/;"	f
getColors	utils/TeColorUtils.cpp	/^vector<TeColor> getColors(TeColor cfrom, TeColor cto, int nc)$/;"	f
getColors	utils/TeColorUtils.cpp	/^vector<TeColor> getColors(vector<ColorBar>& iVec, int ncores)$/;"	f
getColumn	drivers/qt/TeQtGrid.h	/^	int	getColumn(int col) {return gridToPortalColVector_[col];}$/;"	f	class:TeQtGrid
getColumnIndex	drivers/SQLite/TeSQLite.cpp	/^int TeSQLitePortal::getColumnIndex(const string& s)$/;"	f	class:TeSQLitePortal
getColumnIndex	kernel/TeDatabase.cpp	/^TeDatabasePortal::getColumnIndex (const string& s)$/;"	f	class:TeDatabasePortal
getColumnName	kernel/TeDatabase.cpp	/^TeDatabasePortal::getColumnName (int i)$/;"	f	class:TeDatabasePortal
getColumns	kernel/TeDatabaseIndex.cpp	/^std::vector<std::string> TeDatabaseIndex::getColumns()$/;"	f	class:TeDatabaseIndex
getComments	drivers/GTM/TeGTM.h	/^	char* getComments(){return comments_;};$/;"	f	class:TeGTMInformationImages
getComponentSize	image_processing/TePDIMixModelComponentList.cpp	/^int TePDIMixModelComponentList::getComponentSize(unsigned cn)$/;"	f	class:TePDIMixModelComponentList
getConcatFieldsExpression	drivers/Firebird/TeFirebird.cpp	/^string TeFirebird::getConcatFieldsExpression(const vector<string>& fNamesVec)$/;"	f	class:TeFirebird
getConcatFieldsExpression	drivers/MySQL/TeMySQL.cpp	/^string TeMySQL::getConcatFieldsExpression(const vector<string>& fNamesVec)$/;"	f	class:TeMySQL
getConcatFieldsExpression	kernel/TeDatabase.cpp	/^string TeDatabase::getConcatFieldsExpression(const vector<string>& fNamesVec)$/;"	f	class:TeDatabase
getConnection	drivers/Firebird/TeFirebird.cpp	/^TeConnection* TeFirebird::getConnection()$/;"	f	class:TeFirebird
getConnection	drivers/Oracle/OCI/include/occiObjects.h	/^const Connection* Ref<T>::getConnection () const$/;"	f	class:oracle::occi::Ref
getConnection	drivers/PostgreSQL/TePostgreSQL.cpp	/^TeConnection* TePostgreSQL::getConnection()$/;"	f	class:TePostgreSQL
getConnection	kernel/TeConnectionPool.cpp	/^TeConnection* TeConnectionPool::getConnection()$/;"	f	class:TeConnectionPool
getConnection	kernel/TeDatabase.cpp	/^TeConnection* TeDatabase::getConnection()$/;"	f	class:TeDatabase
getConnectionAttributes	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::getConnectionAttributes (const string& object_id1, string& object_id2, TeProxMatrixAttributes& attr)$/;"	f	class:TeGeneralizedProxMatrix
getConnectionAttributes	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::getConnectionAttributes (const string& object_id1, const string&object_id2, TeProxMatrixAttributes& attr)$/;"	f	class:TeProxMatrixGraphBreymann
getConnectionInfo	kernel/TeDBConnectionsPool.cpp	/^bool TeDBConnectionsPool::getConnectionInfo(TeDatabase* mainDb, const int& connId, $/;"	f	class:TeDBConnectionsPool
getConnectionsIdVector	kernel/TeDBConnectionsPool.cpp	/^std::vector<int> TeDBConnectionsPool::getConnectionsIdVector()$/;"	f	class:TeDBConnectionsPool
getConstructionParams	kernel/TeGeneralizedProxMatrix.h	/^	TeProxMatrixConstructionParams* getConstructionParams() $/;"	f	class:TeGeneralizedProxMatrix
getContrastB	kernel/TeRasterTransform.h	/^	double getContrastB()$/;"	f	class:TeRasterTransform
getContrastG	kernel/TeRasterTransform.h	/^	double getContrastG()$/;"	f	class:TeRasterTransform
getContrastM	kernel/TeRasterTransform.h	/^	double getContrastM()$/;"	f	class:TeRasterTransform
getContrastR	kernel/TeRasterTransform.h	/^	double getContrastR()$/;"	f	class:TeRasterTransform
getCoord	utils/TeWKTGeometryDecoder.cpp	/^TeCoord2D getCoord(const string& pt)$/;"	f
getCoordinates	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::getCoordinates(int i, TeCoord2D& coord)$/;"	f	class:TeOCICursor
getCoordinates	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::getCoordinates(vector<TeCoord2D>& result)$/;"	f	class:TeOCICursor
getCoordinates	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::getCoordinates(int i,TeCoord2D& coord)$/;"	f	class:TeOracleSpatialPortal
getCor	drivers/Oracle/OCI/include/occiObjects.h	/^OCIComplexObject * Ref<T>::getCor() const$/;"	f	class:oracle::occi::Ref
getCorMatrix	image_processing/TePDIStatistic.cpp	/^TeMatrix TePDIStatistic::getCorMatrix( unsigned int pol_index )$/;"	f	class:TePDIStatistic
getCoriml	drivers/GTM/TeGTM.h	/^	unsigned char getCoriml(){return coriml_;};$/;"	f	class:TeGTMHeader
getCorrelation	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getCorrelation( unsigned int raster1_index,  $/;"	f	class:TePDIStatistic
getCovMatrix	image_processing/TePDIStatistic.cpp	/^TeMatrix TePDIStatistic::getCovMatrix( unsigned int pol_index )$/;"	f	class:TePDIStatistic
getCovariance	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getCovariance( unsigned int raster1_index,  $/;"	f	class:TePDIStatistic
getCoverageId	kernel/TeCoverageParams.h	/^    std::string getCoverageId() const$/;"	f	class:TeCoverageParams
getCoverageTable	kernel/TeCoverageParams.h	/^    std::string getCoverageTable() const$/;"	f	class:TeCoverageParams
getCreationTime	kernel/TeAbstractTheme.cpp	/^TeTime TeAbstractTheme::getCreationTime() const$/;"	f	class:TeAbstractTheme
getCubeCoordinate	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::getCubeCoordinate(double& x1, double& y1, double& z1, double& x2, double& y2, double& z2)$/;"	f	class:TeQtGLWidget
getCurrentBox	kernel/TeView.h	/^	virtual TeBox& getCurrentBox () { return currentBox_; }$/;"	f	class:TeView
getCurrentDatabasePtr	drivers/spl/PluginParameters.cpp	/^TeDatabase* PluginParameters::getCurrentDatabasePtr() const$/;"	f	class:PluginParameters
getCurrentDatabasePtrFPT	drivers/spl/PluginParameters.h	/^      typedef TeDatabase* (*getCurrentDatabasePtrFPT)( $/;"	t	class:PluginParameters
getCurrentDatabasePtrFP_	drivers/spl/PluginParameters.h	/^      getCurrentDatabasePtrFPT getCurrentDatabasePtrFP_;$/;"	m	class:PluginParameters
getCurrentLayerPtr	drivers/spl/PluginParameters.cpp	/^TeLayer* PluginParameters::getCurrentLayerPtr() const$/;"	f	class:PluginParameters
getCurrentLayerPtrFPT	drivers/spl/PluginParameters.h	/^      typedef TeLayer* (*getCurrentLayerPtrFPT)( $/;"	t	class:PluginParameters
getCurrentLayerPtrFP_	drivers/spl/PluginParameters.h	/^      getCurrentLayerPtrFPT getCurrentLayerPtrFP_;$/;"	m	class:PluginParameters
getCurrentTheme	kernel/TeView.h	/^	virtual int getCurrentTheme () { return currentTheme_; }$/;"	f	class:TeView
getCurrentThemeAppPtr	drivers/spl/PluginParameters.cpp	/^TeAppTheme* PluginParameters::getCurrentThemeAppPtr() const$/;"	f	class:PluginParameters
getCurrentThemeAppPtrFPT	drivers/spl/PluginParameters.h	/^      typedef TeAppTheme* (*getCurrentThemeAppPtrFPT)( $/;"	t	class:PluginParameters
getCurrentThemeAppPtrFP_	drivers/spl/PluginParameters.h	/^      getCurrentThemeAppPtrFPT getCurrentThemeAppPtrFP_;$/;"	m	class:PluginParameters
getCurrentUserPtr	drivers/spl/PluginParameters.cpp	/^std::string PluginParameters::getCurrentUserPtr() const$/;"	f	class:PluginParameters
getCurrentUserPtrFPT	drivers/spl/PluginParameters.h	/^	  typedef std::string (*getCurrentUserPtrFPT)( $/;"	t	class:PluginParameters::std
getCurrentUserPtrFP_	drivers/spl/PluginParameters.h	/^      getCurrentUserPtrFPT getCurrentUserPtrFP_;$/;"	m	class:PluginParameters
getCurrentViewId	kernel/TeProject.cpp	/^TeProject::getCurrentViewId()$/;"	f	class:TeProject
getCurrentViewIndex	kernel/TeProject.h	/^	virtual int getCurrentViewIndex()$/;"	f	class:TeProject
getCurrentViewPtr	drivers/spl/PluginParameters.cpp	/^TeView* PluginParameters::getCurrentViewPtr() const$/;"	f	class:PluginParameters
getCurrentViewPtrFPT	drivers/spl/PluginParameters.h	/^      typedef TeView* (*getCurrentViewPtrFPT)( $/;"	t	class:PluginParameters
getCurrentViewPtrFP_	drivers/spl/PluginParameters.h	/^      getCurrentViewPtrFPT getCurrentViewPtrFP_;$/;"	m	class:PluginParameters
getCursor	drivers/Oracle/TeOCIOracle.h	/^	TeOCICursor* getCursor() { return cursor_; }$/;"	f	class:TeOCIOraclePortal
getCursorBox	drivers/qt/TeQtCanvas.h	/^	TeBox getCursorBox (){ return TeBox (xul_,ylr_,xlr_,yul_); }$/;"	f	class:TeQtCanvas
getCursorMode	drivers/qt/TeQtCanvas.h	/^	CursorMode getCursorMode() { return cursorMode_;}$/;"	f	class:TeQtCanvas
getDBMS	kernel/TeConnection.cpp	/^std::string	TeConnection::getDBMS() const$/;"	f	class:TeConnection
getDMapRMSE	kernel/TeGeometricTransformation.cpp	/^double TeGeometricTransformation::getDMapRMSE(  $/;"	f	class:TeGeometricTransformation
getDMapRMSE	kernel/TeGeometricTransformation.h	/^      inline double getDMapRMSE() const$/;"	f	class:TeGeometricTransformation
getData	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getData (const string& s)$/;"	f	class:TeFirebirdPortal
getData	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getData (int i)$/;"	f	class:TeFirebirdPortal
getData	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::getData (const string& s)$/;"	f	class:TeMySQLPortal
getData	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::getData (int i)$/;"	f	class:TeMySQLPortal
getData	drivers/Oracle/TeOCIOracle.cpp	/^char* TeOCIOraclePortal::getData (const string &s)$/;"	f	class:TeOCIOraclePortal
getData	drivers/Oracle/TeOCIOracle.cpp	/^char* TeOCIOraclePortal::getData (int i) $/;"	f	class:TeOCIOraclePortal
getData	drivers/PostgreSQL/TePGInterface.cpp	/^char* TePGRecordset::getData(const int& field_num)$/;"	f	class:TePGRecordset
getData	drivers/PostgreSQL/TePGInterface.h	/^		char* getData(const string& field_name) { return getData(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
getData	drivers/PostgreSQL/TePostgreSQL.cpp	/^char* TePostgreSQLPortal::getData(const string& s)$/;"	f	class:TePostgreSQLPortal
getData	drivers/PostgreSQL/TePostgreSQL.cpp	/^char* TePostgreSQLPortal::getData(int i)$/;"	f	class:TePostgreSQLPortal
getData	drivers/SQLite/TeSQLite.cpp	/^char* TeSQLitePortal::getData(const string& s)$/;"	f	class:TeSQLitePortal
getData	drivers/SQLite/TeSQLite.cpp	/^char* TeSQLitePortal::getData(int i)$/;"	f	class:TeSQLitePortal
getData	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getData (const string& s)$/;"	f	class:TeAdoPortal
getData	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getData (int i)$/;"	f	class:TeAdoPortal
getData	kernel/TeBlockLoader.cpp	/^TeBlockLoader::getData(const std::string& name)$/;"	f	class:TeBlockLoader
getData	kernel/TeGeoDataDriver.cpp	/^TeGeoDataSet* TeGeoDataDriver::getData()$/;"	f	class:TeGeoDataDriver
getData	kernel/TeKdTree.h	/^		NodeData& getData(void)$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
getData	kernel/TeKdTree.h	/^		NodeData& getData(void)$/;"	f	class:TeSAM::TeKdTreeNode
getDataDriver	kernel/TeFileTheme.cpp	/^TeGeoDataDriver* TeFileTheme::getDataDriver()$/;"	f	class:TeFileTheme
getDataImpl	drivers/gdal/TeOGRDriver.cpp	/^TeGeoDataSet* TeOGRDriver::getDataImpl()$/;"	f	class:TeOGRDriver
getDataImpl	kernel/TeSTGeoDataDriver.cpp	/^TeGeoDataSet* TeSTGeoDataDriver::getDataImpl()$/;"	f	class:TeSTGeoDataDriver
getDataProjection	kernel/TeGeoDataDriver.cpp	/^TeProjection* TeGeoDataDriver::getDataProjection()$/;"	f	class:TeGeoDataDriver
getDataSource	drivers/qt/TeQtBigTable.h	/^	TeQtDataSource* getDataSource() { return dataSource_; }$/;"	f	class:TeQtBigTable
getDataWorld	drivers/qt/TeQtCanvas.cpp	/^TeBox TeQtCanvas::getDataWorld()$/;"	f	class:TeQtCanvas
getDatabase	drivers/qt/TeQtDatabaseItem.h	/^	TeDatabase*	getDatabase()$/;"	f	class:TeQtDatabaseItem
getDatabase	kernel/TeCoverageParams.h	/^    TeDatabase* getDatabase() const$/;"	f	class:TeCoverageParams
getDatabase	kernel/TeDBConnectionsPool.cpp	/^TeDatabase* TeDBConnectionsPool::getDatabase(const int& dbIdx)$/;"	f	class:TeDBConnectionsPool
getDatabase	kernel/TeDBConnectionsPool.cpp	/^TeDatabase* TeDBConnectionsPool::getDatabase(std::string& dbmsName, $/;"	f	class:TeDBConnectionsPool
getDatabase	kernel/TeDatabase.h	/^	TeDatabase* getDatabase()$/;"	f	class:TeDatabasePortal
getDatabase	kernel/TeProject.h	/^	virtual TeDatabase* getDatabase()$/;"	f	class:TeProject
getDatabaseDescription	kernel/TeDatabase.cpp	/^TeDatabase::getDatabaseDescription()$/;"	f	class:TeDatabase
getDatabaseIdx	kernel/TeDBConnectionsPool.cpp	/^int TeDBConnectionsPool::getDatabaseIdx(TeDatabase* db)$/;"	f	class:TeDBConnectionsPool
getDatabaseItemVec	drivers/qt/TeQtDatabasesListView.cpp	/^vector<TeQtDatabaseItem*>  TeQtDatabasesListView::getDatabaseItemVec()$/;"	f	class:TeQtDatabasesListView
getDatabaseName	kernel/TeConnection.cpp	/^std::string TeConnection::getDatabaseName() const$/;"	f	class:TeConnection
getDate	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getDate (const string& s)$/;"	f	class:TeFirebirdPortal
getDate	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getDate (int i)$/;"	f	class:TeFirebirdPortal
getDate	drivers/GTM/TeGTM.cpp	/^std::string TeGTM::getDate(long date)$/;"	f	class:TeGTM
getDate	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::getDate (const string& s)$/;"	f	class:TeMySQLPortal
getDate	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::getDate (int i)$/;"	f	class:TeMySQLPortal
getDate	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::getDate (const string& s) $/;"	f	class:TeOCIOraclePortal
getDate	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::getDate (int i) $/;"	f	class:TeOCIOraclePortal
getDate	drivers/PostgreSQL/TePGInterface.cpp	/^string TePGRecordset::getDate(const int& field_num) const$/;"	f	class:TePGRecordset
getDate	drivers/PostgreSQL/TePGInterface.h	/^		string getDate(const string& field_name) const { return getDate(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
getDate	drivers/PostgreSQL/TePostgreSQL.cpp	/^TeTime TePostgreSQLPortal::getDate(const string& s)$/;"	f	class:TePostgreSQLPortal
getDate	drivers/PostgreSQL/TePostgreSQL.cpp	/^TeTime TePostgreSQLPortal::getDate(int i)$/;"	f	class:TePostgreSQLPortal
getDate	drivers/SQLite/TeSQLite.cpp	/^TeTime TeSQLitePortal::getDate(const string& s)$/;"	f	class:TeSQLitePortal
getDate	drivers/SQLite/TeSQLite.cpp	/^TeTime TeSQLitePortal::getDate(int i)$/;"	f	class:TeSQLitePortal
getDate	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getDate (const string& name)$/;"	f	class:TeAdoPortal
getDate	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getDate (int i)$/;"	f	class:TeAdoPortal
getDate	drivers/ado/TeAdoFireBird.cpp	/^TeFireBirdPortal::getDate (const string& name)$/;"	f	class:TeFireBirdPortal
getDate	drivers/ado/TeAdoFireBird.cpp	/^TeFireBirdPortal::getDate (int i)$/;"	f	class:TeFireBirdPortal
getDate	drivers/ado/TeAdoOracle.cpp	/^TeOraclePortal::getDate (const string& name)$/;"	f	class:TeOraclePortal
getDate	drivers/ado/TeAdoOracle.cpp	/^TeOraclePortal::getDate (int i)$/;"	f	class:TeOraclePortal
getDate	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServerPortal::getDate (const string& name)$/;"	f	class:TeSqlServerPortal
getDate	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServerPortal::getDate (int i)$/;"	f	class:TeSqlServerPortal
getDate	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatialPortal::getDate (const string& name)$/;"	f	class:TeSqlServerSpatialPortal
getDate	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatialPortal::getDate (int i)$/;"	f	class:TeSqlServerSpatialPortal
getDate	kernel/TeBlockLoader.cpp	/^TeBlockLoader::getDate(const std::string& name)$/;"	f	class:TeBlockLoader
getDate	kernel/TeTime.cpp	/^TeTime::getDate() const$/;"	f	class:TeTime
getDateAsString	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getDateAsString(const string& s)$/;"	f	class:TeFirebirdPortal
getDateAsString	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getDateAsString(int i)$/;"	f	class:TeFirebirdPortal
getDateAsString	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::getDateAsString(const string& s)$/;"	f	class:TeMySQLPortal
getDateAsString	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::getDateAsString(int i)$/;"	f	class:TeMySQLPortal
getDateAsString	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::getDateAsString(const string& s)$/;"	f	class:TeOCIOraclePortal
getDateAsString	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::getDateAsString(int i)$/;"	f	class:TeOCIOraclePortal
getDateAsString	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQLPortal::getDateAsString(const string& s)$/;"	f	class:TePostgreSQLPortal
getDateAsString	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQLPortal::getDateAsString(int i)$/;"	f	class:TePostgreSQLPortal
getDateAsString	drivers/SQLite/TeSQLite.cpp	/^string TeSQLitePortal::getDateAsString(const string& s)$/;"	f	class:TeSQLitePortal
getDateAsString	drivers/SQLite/TeSQLite.cpp	/^string TeSQLitePortal::getDateAsString(int i)$/;"	f	class:TeSQLitePortal
getDateAsString	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getDateAsString(const string& s)$/;"	f	class:TeAdoPortal
getDateAsString	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getDateAsString(int i)$/;"	f	class:TeAdoPortal
getDateAsString	drivers/ado/TeAdoFireBird.cpp	/^TeFireBirdPortal::getDateAsString(const string& s)$/;"	f	class:TeFireBirdPortal
getDateAsString	drivers/ado/TeAdoFireBird.cpp	/^TeFireBirdPortal::getDateAsString(int i)$/;"	f	class:TeFireBirdPortal
getDateAsString	drivers/ado/TeAdoOracle.cpp	/^TeOraclePortal::getDateAsString(const string& s)$/;"	f	class:TeOraclePortal
getDateAsString	drivers/ado/TeAdoOracle.cpp	/^TeOraclePortal::getDateAsString(int i)$/;"	f	class:TeOraclePortal
getDateAsString	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServerPortal::getDateAsString(const string& s)$/;"	f	class:TeSqlServerPortal
getDateAsString	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServerPortal::getDateAsString(int i)$/;"	f	class:TeSqlServerPortal
getDateAsString	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatialPortal::getDateAsString(const string& s)$/;"	f	class:TeSqlServerSpatialPortal
getDateAsString	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatialPortal::getDateAsString(int i)$/;"	f	class:TeSqlServerSpatialPortal
getDateAsString	kernel/TeBlockLoader.cpp	/^TeBlockLoader::getDateAsString(const std::string& name)$/;"	f	class:TeBlockLoader
getDateFromDaysInYears	kernel/TeTime.cpp	/^void TeTime::getDateFromDaysInYears( int days )$/;"	f	class:TeTime
getDateTime	kernel/TeTime.cpp	/^TeTime::getDateTime (const std::string& mask, const std::string& dateS, const std::string& timeS, const std::string& indPM, const std::string& indAM) const$/;"	f	class:TeTime
getDatum	drivers/GTM/TeGTM.cpp	/^TeDatum TeGTM::getDatum()$/;"	f	class:TeGTM
getDatum	kernel/TeDatabase.cpp	/^void TeDatabasePortal::getDatum(TeDatum& datum, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
getDatumMap	kernel/TeDatum.cpp	/^TeDatumMap& TeDatumFactory::getDatumMap()$/;"	f	class:TeDatumFactory
getDaysInYears	kernel/TeTime.cpp	/^int TeTime::getDaysInYears()$/;"	f	class:TeTime
getDbKey	kernel/TeDBConnectionsPool.cpp	/^std::string TeDBConnectionsPool::getDbKey(const TeDatabaseFactoryParams& dbParams) const$/;"	f	class:TeDBConnectionsPool
getDecoder	kernel/TeCoverageInterpolator.h	/^    virtual TeCoverageDecoder<T>* getDecoder() const$/;"	f	class:TeCoverageInterpolator
getDescription	kernel/TeGeoFileInfo.cpp	/^const std::string& TeGeoFileInfo::getDescription() const$/;"	f	class:TeGeoFileInfo
getDestBand	kernel/TeRasterTransform.h	/^	short getDestBand()$/;"	f	class:TeRasterTransform
getDigits	drivers/SQLite/sqlite3/sqlite3.c	/^static int getDigits(const char *zDate, ...){$/;"	f	file:
getDimArraySize	drivers/Oracle/TeOCICursor.cpp	/^int TeOCICursor::getDimArraySize()$/;"	f	class:TeOCICursor
getDimArraySize	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::getDimArraySize()$/;"	f	class:TeOracleSpatialPortal
getDimElement	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::getDimElement(int i,int &elem)$/;"	f	class:TeOCICursor
getDimElement	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::getDimElement(int i,int &elem)$/;"	f	class:TeOracleSpatialPortal
getDimensions	drivers/MrSID/TeMrSID.h	/^inline void TeMrSIDReader::getDimensions(unsigned int& w, unsigned int& h)$/;"	f	class:TeMrSIDReader
getDimensions	kernel/TeCoverageParams.h	/^    std::vector<TeCoverageDimension> getDimensions() const$/;"	f	class:TeCoverageParams
getDirectMappingError	kernel/TeGeometricTransformation.cpp	/^double TeGeometricTransformation::getDirectMappingError(  $/;"	f	class:TeGeometricTransformation
getDirectMappingError	kernel/TeGeometricTransformation.cpp	/^double TeGeometricTransformation::getDirectMappingError( $/;"	f	class:TeGeometricTransformation
getDirectMappingError	kernel/TeGeometricTransformation.h	/^      inline double getDirectMappingError( const TeCoordPair& tie_point ) const$/;"	f	class:TeGeometricTransformation
getDirectMappingError	kernel/TeGeometricTransformation.h	/^      inline double getDirectMappingError() const$/;"	f	class:TeGeometricTransformation
getDiscriminator	kernel/TeKdTree.h	/^		const char& getDiscriminator(void) const$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
getDouble	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getDouble (const string& s)$/;"	f	class:TeFirebirdPortal
getDouble	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getDouble (int i)$/;"	f	class:TeFirebirdPortal
getDouble	drivers/MySQL/TeMySQL.cpp	/^double TeMySQLPortal::getDouble (const string& s)$/;"	f	class:TeMySQLPortal
getDouble	drivers/MySQL/TeMySQL.cpp	/^double TeMySQLPortal::getDouble (int i)$/;"	f	class:TeMySQLPortal
getDouble	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::getDouble (const string& s)$/;"	f	class:TeOCIOraclePortal
getDouble	drivers/Oracle/TeOCIOracle.cpp	/^double TeOCIOraclePortal ::getDouble (int i) $/;"	f	class:TeOCIOraclePortal
getDouble	drivers/PostgreSQL/TePGInterface.h	/^		double getDouble(const int& field_num) const$/;"	f	class:TePGRecordset
getDouble	drivers/PostgreSQL/TePGInterface.h	/^		double getDouble(const string& field_name) const { return getDouble(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
getDouble	drivers/PostgreSQL/TePostgreSQL.cpp	/^double TePostgreSQLPortal::getDouble(const string& s)$/;"	f	class:TePostgreSQLPortal
getDouble	drivers/PostgreSQL/TePostgreSQL.cpp	/^double TePostgreSQLPortal::getDouble(int i)$/;"	f	class:TePostgreSQLPortal
getDouble	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getDouble (const string& s)$/;"	f	class:TeAdoPortal
getDouble	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getDouble (int i)$/;"	f	class:TeAdoPortal
getDouble	kernel/TeBlockLoader.cpp	/^TeBlockLoader::getDouble(const std::string& name)$/;"	f	class:TeBlockLoader
getDouble	kernel/TeDatabase.cpp	/^TeDatabasePortal::getDouble (const string& s)$/;"	f	class:TeDatabasePortal
getDouble	kernel/TeDatabase.cpp	/^TeDatabasePortal::getDouble (int i)$/;"	f	class:TeDatabasePortal
getDoubleProperty	stat/TeStatDataStructures.h	/^	bool getDoubleProperty(int idx, double& value) $/;"	f	class:TeGridElement
getDoubleProperty	stat/TeStatDataStructures.h	/^    bool getDoubleProperty(unsigned int idx, double& value) $/;"	f	class:TeSTStatInstance
getDrawable	drivers/GL/dri_interface.h	/^    __DRIdrawable *(*getDrawable)(__DRInativeDisplay *dpy, __DRIid draw,$/;"	m	struct:__DRIscreenRec
getDrawable	drivers/GL/internal/dri_interface.h	/^    __DRIdrawable *(*getDrawable)(__DRInativeDisplay *dpy, __DRIid draw,$/;"	m	struct:__DRIscreenRec
getDrawableInfo	drivers/GL/dri_interface.h	/^    GLboolean (* getDrawableInfo) ( __DRInativeDisplay *dpy, int scrn,$/;"	m	struct:__DRIinterfaceMethodsRec
getDrawableInfo	drivers/GL/internal/dri_interface.h	/^    GLboolean (* getDrawableInfo) ( __DRInativeDisplay *dpy, int scrn,$/;"	m	struct:__DRIinterfaceMethodsRec
getDrawablePrivate	drivers/GL/glcore.h	/^    __GLdrawablePrivate *(*getDrawablePrivate)(__GLcontext *gc);$/;"	m	struct:__GLimportsRec
getDrawablePrivate	drivers/GL/internal/glcore.h	/^    __GLdrawablePrivate *(*getDrawablePrivate)(__GLcontext *gc);$/;"	m	struct:__GLimportsRec
getDrawableSize	drivers/GL/glcore.h	/^    void (*getDrawableSize)(__GLdrawablePrivate *glPriv, $/;"	m	struct:__GLdrawablePrivateRec
getDrawableSize	drivers/GL/internal/glcore.h	/^    void (*getDrawableSize)(__GLdrawablePrivate *glPriv, $/;"	m	struct:__GLdrawablePrivateRec
getDriversNames	drivers/gdal/TeOGRDriver.cpp	/^void TeOGRDriver::getDriversNames(std::vector<std::string>& dnames)$/;"	f	class:TeOGRDriver
getDspl	drivers/GTM/TeGTM.h	/^	unsigned char getDspl(){return dspl_;};$/;"	f	class:TeGTMRoutes
getDspl	drivers/GTM/TeGTM.h	/^	unsigned char getDspl(){return dspl_;};$/;"	f	class:TeGTMWaypoints
getDspl	drivers/GTM/TeGTM.h	/^	unsigned char getDspl(){return dspl_;};$/;"	f	class:TeGTMWaypointsStyles
getDx	drivers/GTM/TeGTM.h	/^	short getDx(){return dx_;};$/;"	f	class:TeGTMGridDatum
getDy	drivers/GTM/TeGTM.h	/^	short getDy(){return dy_;};$/;"	f	class:TeGTMGridDatum
getDz	drivers/GTM/TeGTM.h	/^	short getDz(){return dz_;};$/;"	f	class:TeGTMGridDatum
getEditionTime	kernel/TeLayer.cpp	/^TeTime TeLayer::getEditionTime() const$/;"	f	class:TeLayer
getElement	drivers/MrSID/TeDecoderMrSID.h	/^	bool getElement(int \/*col*\/, int \/*lin*\/, double& \/*val*\/, int \/*band=0*\/)$/;"	f	class:TeDecoderMrSID
getElement	drivers/qt/TeDecoderQtImage.cpp	/^TeDecoderQtImage::getElement (int col, int lin, double &val,int band)$/;"	f	class:TeDecoderQtImage
getElement	kernel/TeDecoderASCIIGrid.cpp	/^TeDecoderASCIIGrid::getElement (int col,int lin, double& val,int band)$/;"	f	class:TeDecoderASCIIGrid
getElement	kernel/TeDecoderJPEG.cpp	/^TeDecoderJPEG::getElement (int col,int lin, double& val,int band)$/;"	f	class:TeDecoderJPEG
getElement	kernel/TeDecoderMemory.cpp	/^TeDecoderMemory::getElement (int col,int lin, double& val,int band)$/;"	f	class:TeDecoderMemory
getElement	kernel/TeDecoderMemoryMap.cpp	/^TeDecoderMemoryMap::getElement (int col,int lin, double& val,int band)$/;"	f	class:TeDecoderMemoryMap
getElement	kernel/TeDecoderSmartMem.h	/^  inline bool getElement (int col,int lin, double &val,int band=0)$/;"	f	class:TeDecoderSmartMem
getElement	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::getElement(int col,int lin, double &val,int band)$/;"	f	class:TeDecoderTIFF
getElement	kernel/TeDecoderVirtualMemory.cpp	/^TeDecoderVirtualMemory::getElement(int col,int lin, double &val,int band)$/;"	f	class:TeDecoderVirtualMemory
getElement	kernel/TeRaster.cpp	/^bool TeRaster::getElement (int col, int lin, double& val,int band) $/;"	f	class:TeRaster
getElement_TeBIT	kernel/TeDecoderSmartMem.h	/^  inline void getElement_TeBIT( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
getElement_TeCHAR	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::getElement_TeCHAR(const long& pos, double& val)$/;"	f	class:TeDecoderMemory
getElement_TeCHAR	kernel/TeDecoderSmartMem.h	/^  inline void getElement_TeCHAR( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
getElement_TeCHAR	kernel/TeDecoderTIFF.cpp	/^inline void TeDecoderTIFF::getElement_TeCHAR(const long& plane, const long& pos, double& val)$/;"	f	class:TeDecoderTIFF
getElement_TeDOUBLE	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::getElement_TeDOUBLE(const long& pos, double& val)$/;"	f	class:TeDecoderMemory
getElement_TeDOUBLE	kernel/TeDecoderSmartMem.h	/^  inline void getElement_TeDOUBLE( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
getElement_TeDOUBLE	kernel/TeDecoderTIFF.cpp	/^inline void TeDecoderTIFF::getElement_TeDOUBLE(const long& plane, const long& pos, double& val)$/;"	f	class:TeDecoderTIFF
getElement_TeFLOAT	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::getElement_TeFLOAT(const long& pos, double& val)$/;"	f	class:TeDecoderMemory
getElement_TeFLOAT	kernel/TeDecoderSmartMem.h	/^  inline void getElement_TeFLOAT( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
getElement_TeFLOAT	kernel/TeDecoderTIFF.cpp	/^inline void TeDecoderTIFF::getElement_TeFLOAT(const long& plane, const long& pos, double& val)$/;"	f	class:TeDecoderTIFF
getElement_TeINTEGER	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::getElement_TeINTEGER(const long& pos, double& val)$/;"	f	class:TeDecoderMemory
getElement_TeINTEGER	kernel/TeDecoderSmartMem.h	/^  inline void getElement_TeINTEGER( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
getElement_TeINTEGER	kernel/TeDecoderTIFF.cpp	/^inline void TeDecoderTIFF::getElement_TeINTEGER(const long& plane, const long& pos, double& val)$/;"	f	class:TeDecoderTIFF
getElement_TeLONG	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::getElement_TeLONG(const long& pos,double& val)$/;"	f	class:TeDecoderMemory
getElement_TeLONG	kernel/TeDecoderSmartMem.h	/^  inline void getElement_TeLONG( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
getElement_TeLONG	kernel/TeDecoderTIFF.cpp	/^inline void TeDecoderTIFF::getElement_TeLONG(const long& plane, const long& pos,double& val)$/;"	f	class:TeDecoderTIFF
getElement_TeSHORT	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::getElement_TeSHORT(const long& pos, double& val)$/;"	f	class:TeDecoderMemory
getElement_TeSHORT	kernel/TeDecoderSmartMem.h	/^  inline void getElement_TeSHORT( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
getElement_TeSHORT	kernel/TeDecoderTIFF.cpp	/^inline void TeDecoderTIFF::getElement_TeSHORT(const long& plane, const long& pos, double& val)$/;"	f	class:TeDecoderTIFF
getElement_TeUNSIGNEDCHAR	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::getElement_TeUNSIGNEDCHAR(const long& pos, double& val)$/;"	f	class:TeDecoderMemory
getElement_TeUNSIGNEDCHAR	kernel/TeDecoderSmartMem.h	/^  inline void getElement_TeUNSIGNEDCHAR( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
getElement_TeUNSIGNEDCHAR	kernel/TeDecoderTIFF.cpp	/^inline void TeDecoderTIFF::getElement_TeUNSIGNEDCHAR(const long& plane, const long& pos, double& val)$/;"	f	class:TeDecoderTIFF
getElement_TeUNSIGNEDLONG	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::getElement_TeUNSIGNEDLONG(const long& pos, double& val)$/;"	f	class:TeDecoderMemory
getElement_TeUNSIGNEDLONG	kernel/TeDecoderSmartMem.h	/^  inline void getElement_TeUNSIGNEDLONG( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
getElement_TeUNSIGNEDLONG	kernel/TeDecoderTIFF.cpp	/^inline void TeDecoderTIFF::getElement_TeUNSIGNEDLONG(const long& plane, const long& pos, double& val)$/;"	f	class:TeDecoderTIFF
getElement_TeUNSIGNEDSHORT	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::getElement_TeUNSIGNEDSHORT(const long& pos, double& val)$/;"	f	class:TeDecoderMemory
getElement_TeUNSIGNEDSHORT	kernel/TeDecoderSmartMem.h	/^  inline void getElement_TeUNSIGNEDSHORT( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
getElement_TeUNSIGNEDSHORT	kernel/TeDecoderTIFF.cpp	/^inline void TeDecoderTIFF::getElement_TeUNSIGNEDSHORT(const long& plane, const long& pos, double& val)$/;"	f	class:TeDecoderTIFF
getEncodingList	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::getEncodingList(const std::string& host, const std::string& user, const std::string& password, const int& port, std::vector<std::string>& vecEncodingList)$/;"	f	class:TeMySQL
getEncodingList	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::getEncodingList(std::vector<std::string>& vecEncodingList)$/;"	f	class:TeMySQL
getEncodingList	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::getEncodingList(const std::string& host, const std::string& user, const std::string& password, const int& port, std::vector<std::string>& vecEncodingList)$/;"	f	class:TePostGIS
getEncodingList	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::getEncodingList(const std::string& host, const std::string& user, const std::string& password, const int& port, std::vector<std::string>& vecEncodingList)$/;"	f	class:TePostgreSQL
getEncodingList	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::getEncodingList(std::vector<std::string>& vecEncodingList)$/;"	f	class:TePostgreSQL
getEncodingList	kernel/TeDatabase.h	/^   virtual bool getEncodingList(const std::string& \/*host*\/, const std::string& \/*user*\/, const std::string& \/*password*\/, const int& \/*port*\/, std::vector<std::string>& \/*vecEncodingList*\/)$/;"	f	class:TeDatabase
getEncodingList	kernel/TeDatabase.h	/^   virtual bool getEncodingList(std::vector<std::string>& \/*vecEncodingList*\/)$/;"	f	class:TeDatabase
getEntropy	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getEntropy( unsigned int raster_index,$/;"	f	class:TePDIStatistic
getErrorCode	stat/TeBayesFunctions.h	/^  TeGlobalBayesError getErrorCode() {$/;"	f	class:TeGlobalBayesException
getErrorCode	stat/TeKernelFunctions.h	/^  TeKernelError getErrorCode() {$/;"	f	class:TeKernelException
getErrorMessage	drivers/Oracle/TeOCIConnect.h	/^	string getErrorMessage() { return errorMess_; }$/;"	f	class:TeOCIConnection
getErrorMessage	drivers/Oracle/TeOCICursor.h	/^	string	getErrorMessage() { return errorMessage_;}$/;"	f	class:TeOCICursor
getErrorMessage	drivers/qt/TeQtGridSource.h	/^	string getErrorMessage() const { return errorMessage_; }$/;"	f	class:TeQtGridSource
getExtension	drivers/gdal/TeGDALDecoder.cpp	/^const std::string& TeGDALDriverInfo::getExtension() const$/;"	f	class:TeGDALDriverInfo
getExtension	kernel/TeGeoFileInfo.cpp	/^const std::string& TeGeoFileInfo::getExtension() const$/;"	f	class:TeGeoFileInfo
getFBConnection	drivers/Firebird/TeFirebirdConnection.cpp	/^IBPP::Database* TeFirebirdConnection::getFBConnection() const$/;"	f	class:TeFirebirdConnection
getFacename	drivers/GTM/TeGTM.h	/^	char* getFacename(){return facename_;};$/;"	f	class:TeGTMWaypointsStyles
getFalseeast	drivers/GTM/TeGTM.h	/^	double getFalseeast(){return falseeast_;};$/;"	f	class:TeGTMGridDatum
getFalsenorthing	drivers/GTM/TeGTM.h	/^	double getFalsenorthing(){return falsenorthing_;};$/;"	f	class:TeGTMGridDatum
getFieldCount	drivers/PostgreSQL/TePGInterface.h	/^		int getFieldCount(void) const	{ return PQnfields(pg_recordset_); }$/;"	f	class:TePGRecordset
getFieldValue	drivers/Oracle/TeOCICursor.cpp	/^char* TeOCICursor::getFieldValue(int i)  \/\/inicia em 1$/;"	f	class:TeOCICursor
getFileName	drivers/DXF/TeDXFDriver.cpp	/^std::string TeDXFDriver::getFileName() $/;"	f	class:TeDXFDriver
getFileName	drivers/gdal/TeOGRDriver.cpp	/^std::string TeOGRDriver::getFileName() $/;"	f	class:TeOGRDriver
getFileName	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeShapefileDriver::getFileName()$/;"	f	class:TeShapefileDriver
getFileName	kernel/TeCoverageParams.h	/^    std::string getFileName() const$/;"	f	class:TeCoverageParams
getFileName	kernel/TeFileTheme.cpp	/^std::string TeFileTheme::getFileName()$/;"	f	class:TeFileTheme
getFileName	kernel/TeMappedMemory.cpp	/^std::string TeMappedMemory::getFileName() const$/;"	f	class:TeMappedMemory
getFilter	drivers/gdal/TeGDALDecoder.cpp	/^std::string TeGDALDriverInfo::getFilter() const$/;"	f	class:TeGDALDriverInfo
getFilter	kernel/TeGeoFileInfo.cpp	/^std::string TeGeoFileInfo::getFilter() const$/;"	f	class:TeGeoFileInfo
getFinalDate	kernel/TeTimeInterval.h	/^	std::string getFinalDate(void)		{return t2_.getDate();}$/;"	f	class:TeTimeInterval
getFinalDateTime	kernel/TeSTInstance.h	/^	virtual string getFinalDateTime(const string& mask="YYYYsMMsDDsHHsmmsSS") $/;"	f	class:TeSTInstance
getFinalDateTime	kernel/TeTimeInterval.h	/^	std::string getFinalDateTime (const std::string& mask="YYYYsMMsDDsHHsmmsSS", const std::string& dateS="\/", const std::string& timeS=":", const std::string& indPM="PM", const std::string& indAM="AM") {return t2_.getDateTime(mask, dateS, timeS, indPM, indAM);}$/;"	f	class:TeTimeInterval
getFinalTime	kernel/TeTimeInterval.h	/^	std::string getFinalTime()			{return t2_.getTime();}$/;"	f	class:TeTimeInterval
getFirstIndex	kernel/TeOverlayUtils.cpp	/^	unsigned int getFirstIndex()$/;"	f	struct:TeSIP
getFlattening	drivers/GTM/TeGTM.h	/^	double getFlattening(){return flattening_;};$/;"	f	class:TeGTMGridDatum
getFreeConnection	kernel/TeConnectionPool.cpp	/^TeConnection* TeConnectionPool::getFreeConnection()$/;"	f	class:TeConnectionPool
getFreeCursor	drivers/PostgreSQL/TePGInterface.h	/^		static int getFreeCursor()$/;"	f	class:TePGRecordset
getFreqProjection	image_processing/TePDIBatchGeoMosaic.cpp	/^TeProjection* TePDIBatchGeoMosaic::getFreqProjection( $/;"	f	class:TePDIBatchGeoMosaic
getFreqSum	image_processing/TePDIJointHistogram.cpp	/^unsigned long int TePDIJointHistogram::getFreqSum() const$/;"	f	class:TePDIJointHistogram
getFullName	drivers/gdal/TeGDALDecoder.cpp	/^const std::string& TeGDALDriverInfo::getFullName() const$/;"	f	class:TeGDALDriverInfo
getGDALDriverName	drivers/gdal/TeGDALDecoder.cpp	/^std::string TeGDALDecoder::getGDALDriverName(const std::string& extension)$/;"	f	class:TeGDALDecoder
getGDALDrivers	drivers/gdal/TeGDALDecoder.cpp	/^const std::vector<TeGDALDriverInfo>& TeGDALDecoder::getGDALDrivers()$/;"	f	class:TeGDALDecoder
getGLCMContrast	image_processing/TePDIHaralick.cpp	/^bool TePDIHaralick::getGLCMContrast( unsigned int band, unsigned int pol_index,$/;"	f	class:TePDIHaralick
getGLCMCorrelation	image_processing/TePDIHaralick.cpp	/^bool TePDIHaralick::getGLCMCorrelation( unsigned int band, $/;"	f	class:TePDIHaralick
getGLCMDissimilarity	image_processing/TePDIHaralick.cpp	/^bool TePDIHaralick::getGLCMDissimilarity( unsigned int band, $/;"	f	class:TePDIHaralick
getGLCMEnergy	image_processing/TePDIHaralick.cpp	/^bool TePDIHaralick::getGLCMEnergy( unsigned int band, unsigned int pol_index,$/;"	f	class:TePDIHaralick
getGLCMEntropy	image_processing/TePDIHaralick.cpp	/^bool TePDIHaralick::getGLCMEntropy( unsigned int band, unsigned int pol_index,$/;"	f	class:TePDIHaralick
getGLCMHomogeneity	image_processing/TePDIHaralick.cpp	/^bool TePDIHaralick::getGLCMHomogeneity( unsigned int band, unsigned int pol_index,$/;"	f	class:TePDIHaralick
getGLCMMatrixNodePtr	image_processing/TePDIHaralick.cpp	/^TePDIHaralick::GLCMMatrixCacheNodeT const* TePDIHaralick::getGLCMMatrixNodePtr( $/;"	f	class:TePDIHaralick::TePDIHaralick
getGLCMMean	image_processing/TePDIHaralick.cpp	/^bool TePDIHaralick::getGLCMMean( unsigned int band, unsigned int pol_index,$/;"	f	class:TePDIHaralick
getGLCMQuiSquare	image_processing/TePDIHaralick.cpp	/^bool TePDIHaralick::getGLCMQuiSquare( unsigned int band, unsigned int pol_index,$/;"	f	class:TePDIHaralick
getGLCMStdDev	image_processing/TePDIHaralick.cpp	/^bool TePDIHaralick::getGLCMStdDev( unsigned int band, $/;"	f	class:TePDIHaralick
getGain	kernel/TeRasterTransform.h	/^	double getGain() const$/;"	f	class:TeRasterTransform
getGeoTIFF	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::getGeoTIFF()$/;"	f	class:TeDecoderTIFF
getGeometries	kernel/TeBaseSTInstance.h	/^	virtual GeometryType& getGeometries() $/;"	f	class:TeBaseSTInstance
getGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::getGeometry (TeGeometry** geom, bool& result)$/;"	f	class:TeOracleSpatialPortal
getGeometry	drivers/gdal/TeOGRDataSet.cpp	/^bool TeOGRDataSet::getGeometry(const int& index, TeLineSet& ls)$/;"	f	class:TeOGRDataSet
getGeometry	drivers/gdal/TeOGRDataSet.cpp	/^bool TeOGRDataSet::getGeometry(const int& index, TePointSet& ps)$/;"	f	class:TeOGRDataSet
getGeometry	drivers/gdal/TeOGRDataSet.cpp	/^bool TeOGRDataSet::getGeometry(const int& index, TePolygonSet& ps)$/;"	f	class:TeOGRDataSet
getGeometry	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getGeometry(const string& object_id, GeometryType& geom, TimeType& time, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getGeometry	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getGeometry(const string& object_id, GeometryType& geom, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::getGeometry(TeCellSet& result) const$/;"	f	class:TeMultiGeometry
getGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::getGeometry(TeLineSet& result) const$/;"	f	class:TeMultiGeometry
getGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::getGeometry(TePointSet& result) const$/;"	f	class:TeMultiGeometry
getGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::getGeometry(TePolygonSet& result) const$/;"	f	class:TeMultiGeometry
getGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::getGeometry(TeTextSet& result) const$/;"	f	class:TeMultiGeometry
getGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::getGeometry(vector<TeGeometry*>& result)  $/;"	f	class:TeMultiGeometry
getGeometry	kernel/TeSTElementSet.cpp	/^TeSTElementSet::getGeometry(const string& object_id, TeCellSet& geomSet, TeTimeInterval time)$/;"	f	class:TeSTElementSet
getGeometry	kernel/TeSTElementSet.cpp	/^TeSTElementSet::getGeometry(const string& object_id, TeLineSet& geomSet, TeTimeInterval time)$/;"	f	class:TeSTElementSet
getGeometry	kernel/TeSTElementSet.cpp	/^TeSTElementSet::getGeometry(const string& object_id, TePointSet& geomSet, TeTimeInterval time)$/;"	f	class:TeSTElementSet
getGeometry	kernel/TeSTElementSet.cpp	/^TeSTElementSet::getGeometry(const string& object_id, TePolygonSet& geomSet, TeTimeInterval time)$/;"	f	class:TeSTElementSet
getGeometry	kernel/TeSTElementSet.cpp	/^TeSTElementSet::getGeometry(const string& object_id, TeTextSet& geomSet, TeTimeInterval time)$/;"	f	class:TeSTElementSet
getGeometry	kernel/TeSTEvent.h	/^	void getGeometry(TePoint& result)$/;"	f	class:TeSTEvent
getGeometry	kernel/TeSTGeoDataSet.cpp	/^bool TeSTGeoDataSet::getGeometry(const int& index, TeLineSet& ls)$/;"	f	class:TeSTGeoDataSet
getGeometry	kernel/TeSTGeoDataSet.cpp	/^bool TeSTGeoDataSet::getGeometry(const int& index, TePointSet& ps)$/;"	f	class:TeSTGeoDataSet
getGeometry	kernel/TeSTGeoDataSet.cpp	/^bool TeSTGeoDataSet::getGeometry(const int& index, TePolygonSet& ps)$/;"	f	class:TeSTGeoDataSet
getGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::getGeometry(TeCellSet& result)$/;"	f	class:TeSTInstance
getGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::getGeometry(TeLineSet& result)$/;"	f	class:TeSTInstance
getGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::getGeometry(TeMultiGeometry& result)$/;"	f	class:TeSTInstance
getGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::getGeometry(TePointSet& result)$/;"	f	class:TeSTInstance
getGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::getGeometry(TePolygonSet& result)$/;"	f	class:TeSTInstance
getGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::getGeometry(TeTextSet& result)$/;"	f	class:TeSTInstance
getGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::getGeometry(vector<TeGeometry*>& result)$/;"	f	class:TeSTInstance
getGeometryType	drivers/Oracle/TeOCICursor.cpp	/^TeOCICursor::getGeometryType()$/;"	f	class:TeOCICursor
getGeometryType	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::getGeometryType(TeSDOGType& gType)$/;"	f	class:TeOracleSpatialPortal
getGheight	drivers/GTM/TeGTM.h	/^	float getGheight(){return gheight_;};$/;"	f	class:TeGTMInformationImages
getGposx	drivers/GTM/TeGTM.h	/^	float getGposx(){return gposx_;};$/;"	f	class:TeGTMInformationImages
getGposy	drivers/GTM/TeGTM.h	/^	float getGposy(){return gposy_;};$/;"	f	class:TeGTMInformationImages
getGradcolor	drivers/GTM/TeGTM.h	/^	long getGradcolor(){return gradcolor_;};$/;"	f	class:TeGTMHeader
getGradfont	drivers/GTM/TeGTM.h	/^	char* getGradfont(){return gradfont_;};$/;"	f	class:TeGTMHeader
getGradnum	drivers/GTM/TeGTM.h	/^	unsigned char getGradnum(){return gradnum_;};$/;"	f	class:TeGTMHeader
getGrid	kernel/TeGridIndex.h	/^		gridType& getGrid()$/;"	f	class:TeSAM::TeGridIndex
getGridStatus	kernel/TeExternalTheme.cpp	/^TeExternalTheme::getGridStatus(const int uniqueId, const std::string \/* objectId *\/)$/;"	f	class:TeExternalTheme
getGrouping	kernel/TeDatabase.cpp	/^TeDatabasePortal::getGrouping(TeGrouping& group, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
getGwidth	drivers/GTM/TeGTM.h	/^	float getGwidth(){return gwidth_;};$/;"	f	class:TeGTMInformationImages
getHRect	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::getHRect()$/;"	f	class:TeQtTextEdit
getHeight	drivers/GTM/TeGTM.h	/^	long getHeight(){return height_;};$/;"	f	class:TeGTMWaypointsStyles
getHeight	drivers/MrSID/TeMrSID.cpp	/^unsigned int TeMrSIDReader::getHeight()$/;"	f	class:TeMrSIDReader
getHeight	drivers/qt/TeQtGraph.cpp	/^int	TeQtGraphPlot::getHeight ()$/;"	f	class:TeQtGraphPlot
getHistogram	image_processing/TePDIContrast.cpp	/^bool TePDIContrast::getHistogram( TePDIHistogram::pointer& hist,$/;"	f	class:TePDIContrast
getHistogram	image_processing/TePDIStatistic.cpp	/^const TePDIHistogram& TePDIStatistic::getHistogram( $/;"	f	class:TePDIStatistic
getHost	kernel/TeConnection.cpp	/^std::string TeConnection::getHost() const$/;"	f	class:TeConnection
getIBPPFirebird	drivers/Firebird/TeFirebird.cpp	/^IBPP::Database TeFirebird::getIBPPFirebird()$/;"	f	class:TeFirebird
getID	kernel/TeBlockLoader.cpp	/^TeBlockLoader::getID()$/;"	f	class:TeBlockLoader
getIMapRMSE	kernel/TeGeometricTransformation.cpp	/^double TeGeometricTransformation::getIMapRMSE(  $/;"	f	class:TeGeometricTransformation
getIMapRMSE	kernel/TeGeometricTransformation.h	/^      inline double getIMapRMSE() const$/;"	f	class:TeGeometricTransformation
getIco	drivers/GTM/TeGTM.h	/^	short getIco(){return ico_;};$/;"	f	class:TeGTMRoutes
getIco	drivers/GTM/TeGTM.h	/^	short getIco(){return ico_;};$/;"	f	class:TeGTMWaypoints
getIconnum	drivers/GTM/TeGTM.h	/^	float getIconnum(){return iconnum_;};$/;"	f	class:TeGTMHeader
getId	drivers/gdal/TeGDALDecoder.cpp	/^const std::string& TeGDALDriverInfo::getId() const$/;"	f	class:TeGDALDriverInfo
getId	kernel/TeConnection.cpp	/^unsigned int TeConnection::getId() const$/;"	f	class:TeConnection
getId	kernel/TeGeoFileInfo.cpp	/^const std::string& TeGeoFileInfo::getId() const$/;"	f	class:TeGeoFileInfo
getIdentity	kernel/TeMatrix.cpp	/^bool TeMatrix::getIdentity( TeMatrix& identity, unsigned int width )$/;"	f	class:TeMatrix
getImage	drivers/qt/TeDecoderQtImage.h	/^	QImage*	getImage () { return image_; }$/;"	f	class:TeDecoderQtImage
getImageBuffer	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::getImageBuffer(unsigned int width, unsigned int height, $/;"	f	class:TeMrSIDReader
getImagelen	drivers/GTM/TeGTM.h	/^	long getImagelen(){return imagelen_;};$/;"	f	class:TeGTMInformationImages
getImplementation	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::getImplementation (const TeGPMImplementation& type)$/;"	f	class:TeGeneralizedProxMatrix
getIndex	drivers/GTM/TeGTM.h	/^	short getIndex(){return index_;};$/;"	f	class:TeGTMLayers
getIndex	kernel/TeGridIndex.h	/^		void getIndex(const TeCoord2D& c1, const TeCoord2D& c2, int& col1, int& line1, int& col2, int& line2)$/;"	f	class:TeSAM::TeGridIndex
getIndexName	kernel/TeDatabaseIndex.cpp	/^std::string TeDatabaseIndex::getIndexName()$/;"	f	class:TeDatabaseIndex
getIndexesFromTable	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::getIndexesFromTable(const string& tableName, std::vector<TeDatabaseIndex>& vecIndexes)$/;"	f	class:TeFirebird
getIndexesFromTable	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::getIndexesFromTable(const string& tableName, std::vector<TeDatabaseIndex>& vecIndexes)$/;"	f	class:TeMySQL
getIndexesFromTable	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::getIndexesFromTable(const string& tableName, std::vector<TeDatabaseIndex>& vecIndexes)$/;"	f	class:TeOCIOracle
getIndexesFromTable	drivers/PostgreSQL/TePostgreSQL.cpp	/^TePostgreSQL::getIndexesFromTable(const string& tableName, std::vector<TeDatabaseIndex>& vecIndexes)$/;"	f	class:TePostgreSQL
getIndexesFromTable	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::getIndexesFromTable(const string& tableName, std::vector<TeDatabaseIndex>& vecIndexes)$/;"	f	class:TeSQLite
getIndexesFromTable	kernel/TeDatabase.cpp	/^TeDatabase::getIndexesFromTable(const string& , std::vector<TeDatabaseIndex>& )$/;"	f	class:TeDatabase
getInfoBlob2TemporaryFile	drivers/qt/TeApplicationUtils.cpp	/^string getInfoBlob2TemporaryFile(TeDatabase* db, int layerId, const string& tableName, string& type)$/;"	f
getInitialDate	kernel/TeTimeInterval.h	/^	std::string getInitialDate(void)		{return t1_.getDate();}$/;"	f	class:TeTimeInterval
getInitialDateTime	kernel/TeSTInstance.h	/^	virtual string getInitialDateTime(const string& mask="YYYYsMMsDDsHHsmmsSS") $/;"	f	class:TeSTInstance
getInitialDateTime	kernel/TeTimeInterval.h	/^	std::string getInitialDateTime (const std::string& mask="YYYYsMMsDDsHHsmmsSS", const std::string& dateS="\/", const std::string& timeS=":", const std::string& indPM="PM", const std::string& indAM="AM") {return t1_.getDateTime(mask, dateS, timeS, indPM, indAM);}$/;"	f	class:TeTimeInterval
getInitialTime	kernel/TeTimeInterval.h	/^	std::string getInitialTime()			{return t1_.getTime();}$/;"	f	class:TeTimeInterval
getInputColorVec	drivers/qt/TeQtColorBar.h	/^	vector<ColorBar>	getInputColorVec() {return inputColorVec_;}$/;"	f	class:TeQtColorBar
getInsertRasterBlock	drivers/PostgreSQL/TePostgreSQL.cpp	/^void TePostgreSQL::getInsertRasterBlock(const string& table, const string& blockId, const TeCoord2D& ll, const TeCoord2D& ur, const int& band, const unsigned int& res, const unsigned int& subband, char* buf, const unsigned long& size, string& sql)$/;"	f	class:TePostgreSQL
getInt	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getInt (const string& s)$/;"	f	class:TeFirebirdPortal
getInt	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getInt (int i)$/;"	f	class:TeFirebirdPortal
getInt	drivers/MySQL/TeMySQL.cpp	/^int TeMySQLPortal::getInt (const string& s)$/;"	f	class:TeMySQLPortal
getInt	drivers/MySQL/TeMySQL.cpp	/^int TeMySQLPortal::getInt (int i)$/;"	f	class:TeMySQLPortal
getInt	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::getInt (const string& s)$/;"	f	class:TeOCIOraclePortal
getInt	drivers/Oracle/TeOCIOracle.cpp	/^int TeOCIOraclePortal::getInt (int i) $/;"	f	class:TeOCIOraclePortal
getInt	drivers/PostgreSQL/TePGInterface.h	/^		int getInt(const int& field_num) const$/;"	f	class:TePGRecordset
getInt	drivers/PostgreSQL/TePGInterface.h	/^		int getInt(const string& field_name) const { return getInt(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
getInt	drivers/PostgreSQL/TePostgreSQL.cpp	/^int TePostgreSQLPortal::getInt(const string& s)$/;"	f	class:TePostgreSQLPortal
getInt	drivers/PostgreSQL/TePostgreSQL.cpp	/^int TePostgreSQLPortal::getInt(int i)$/;"	f	class:TePostgreSQLPortal
getInt	drivers/SQLite/TeSQLite.cpp	/^int TeSQLitePortal::getInt(const string& s)$/;"	f	class:TeSQLitePortal
getInt	drivers/SQLite/TeSQLite.cpp	/^int TeSQLitePortal::getInt(int i)$/;"	f	class:TeSQLitePortal
getInt	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getInt (int i)$/;"	f	class:TeAdoPortal
getInt	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getInt(const string& s)$/;"	f	class:TeAdoPortal
getInt	kernel/TeBlockLoader.cpp	/^TeBlockLoader::getInt(const std::string& name)$/;"	f	class:TeBlockLoader
getInt	kernel/TeDatabase.cpp	/^TeDatabasePortal::getInt (const string& s)$/;"	f	class:TeDatabasePortal
getInt	kernel/TeDatabase.cpp	/^TeDatabasePortal::getInt (int i)$/;"	f	class:TeDatabasePortal
getInt8	drivers/PostgreSQL/TePGInterface.cpp	/^int TePGRecordset::getInt8(const int& field_num) const$/;"	f	class:TePGRecordset
getInt8	drivers/PostgreSQL/TePGInterface.h	/^		int getInt8(const string& field_name) const { return getInt8(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
getIntFromStmt	drivers/SQLite/sqlite3/sqlite3.c	/^static int getIntFromStmt(sqlite3 *db, const char *zSql, int *piVal){$/;"	f	file:
getInvalidPluginsList	drivers/spl/PluginsManager.cpp	/^void PluginsManager::getInvalidPluginsList( $/;"	f	class:PluginsManager
getInverseJHist	image_processing/TePDIJointHistogram.cpp	/^void TePDIJointHistogram::getInverseJHist( TePDIJointHistogram& external )$/;"	f	class:TePDIJointHistogram
getInverseMappingError	kernel/TeGeometricTransformation.cpp	/^double TeGeometricTransformation::getInverseMappingError(  $/;"	f	class:TeGeometricTransformation
getInverseMappingError	kernel/TeGeometricTransformation.cpp	/^double TeGeometricTransformation::getInverseMappingError( $/;"	f	class:TeGeometricTransformation
getInverseMappingError	kernel/TeGeometricTransformation.h	/^      inline double getInverseMappingError( const TeCoordPair& tie_point ) const$/;"	f	class:TeGeometricTransformation
getInverseMappingError	kernel/TeGeometricTransformation.h	/^      inline double getInverseMappingError() const$/;"	f	class:TeGeometricTransformation
getItalic	drivers/GTM/TeGTM.h	/^	unsigned char getItalic(){return italic_;};$/;"	f	class:TeGTMWaypointsStyles
getItemStatusMap	kernel/TeAbstractTheme.h	/^	virtual map<string, int>& getItemStatusMap()$/;"	f	class:TeAbstractTheme
getItemVector	kernel/TeFileTheme.cpp	/^std::vector<std::string> TeFileTheme::getItemVector(TeSelectedObjects )$/;"	f	class:TeFileTheme
getItemVector	kernel/TeFileTheme.cpp	/^std::vector<std::string> TeFileTheme::getItemVector(const set<string>& )$/;"	f	class:TeFileTheme
getItemVector	kernel/TeSFSTheme.cpp	/^vector<string> TeSFSTheme::getItemVector(TeSelectedObjects selectedObjects)$/;"	f	class:TeSFSTheme
getItemVector	kernel/TeSFSTheme.cpp	/^vector<string> TeSFSTheme::getItemVector(const set<string>& oidSet)$/;"	f	class:TeSFSTheme
getItemVector	kernel/TeTheme.cpp	/^vector<string> TeTheme::getItemVector(TeSelectedObjects selectedObjects)$/;"	f	class:TeTheme
getItemVector	kernel/TeTheme.cpp	/^vector<string> TeTheme::getItemVector(const set<string>& oidSet)$/;"	f	class:TeTheme
getItems	functions/TeThemeFunctions.cpp	/^vector<string> getItems(TeTheme* theme, int sel)$/;"	f
getItems	functions/TeThemeFunctions.cpp	/^vector<string> getItems(TeTheme* theme, vector<string>& objects)$/;"	f
getItemsToggled	drivers/qt/TeQtGridSource.cpp	/^vector<string> TeQtGridSource::getItemsToggled(int begin, int end)$/;"	f	class:TeQtGridSource
getJobFinishedSignal	kernel/TeThreadJobsManager.cpp	/^TeThreadSignal& TeThreadJobsManager::getJobFinishedSignal()$/;"	f	class:TeThreadJobsManager
getJobStatus	kernel/TeThreadJobsManager.cpp	/^TeThreadJobsManager::JobStatus TeThreadJobsManager::getJobStatus( $/;"	f	class:TeThreadJobsManager
getJointHistogram	image_processing/TePDIStatistic.cpp	/^const TePDIJointHistogram& TePDIStatistic::getJointHistogram( $/;"	f	class:TePDIStatistic
getKey	kernel/TeKdTree.h	/^		const NodeKey& getKey(void) const$/;"	f	class:TeSAM::TeKdTreeNode
getKey	kernel/TeKdTree.h	/^		const double& getKey(void) const$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
getKurtosisMatrix	image_processing/TePDIStatistic.cpp	/^TeMatrix TePDIStatistic::getKurtosisMatrix( unsigned int pol_index )$/;"	f	class:TePDIStatistic
getLabel	image_processing/TePDIMixModelSpectralBand.cpp	/^string TePDIMixModelSpectralBand::getLabel()$/;"	f	class:TePDIMixModelSpectralBand
getLabelcolor	drivers/GTM/TeGTM.h	/^	long getLabelcolor(){return labelcolor_;};$/;"	f	class:TeGTMHeader
getLabelsize	drivers/GTM/TeGTM.h	/^	short getLabelsize(){return labelsize_;};$/;"	f	class:TeGTMHeader
getLastErrorMsg	drivers/SQLite/sqlite3/sqlite3.c	/^static int getLastErrorMsg(int nBuf, char *zBuf){$/;"	f	file:
getLastErrorStr	kernel/TeMappedMemory.cpp	/^std::string TeMappedMemory::getLastErrorStr()$/;"	f	class:TeMappedMemory
getLastGeneratedAutoNumber	drivers/Firebird/TeFirebird.cpp	/^int TeFirebird::getLastGeneratedAutoNumber(const std::string& table)$/;"	f	class:TeFirebird
getLastGeomId	drivers/ado/TeAdoSqlServer.cpp	/^int getLastGeomId ( TeSqlServer* db, const string& table )$/;"	f
getLastGeomId	drivers/ado/TeAdoSqlServerSpatial.cpp	/^int getLastGeomId ( TeSqlServerSpatial* db, const string& table )$/;"	f
getLastIndex	kernel/TeOverlayUtils.cpp	/^	unsigned int getLastIndex()$/;"	f	struct:TeSIP
getLastInsertedSerial	drivers/SQLite/TeSQLite.cpp	/^int TeSQLite::getLastInsertedSerial()$/;"	f	class:TeSQLite
getLatitude	drivers/GTM/TeGTM.h	/^	double getLatitude(){return latitude_;};$/;"	f	class:TeGTMRoutes
getLatitude	drivers/GTM/TeGTM.h	/^	double getLatitude(){return latitude_;};$/;"	f	class:TeGTMTrackLogs
getLatitude	drivers/GTM/TeGTM.h	/^	double getLatitude(){return latitude_;};$/;"	f	class:TeGTMWaypoints
getLayer	drivers/qt/TeQtLayerItem.h	/^	TeLayer* getLayer() {return layer_;}$/;"	f	class:TeQtLayerItem
getLayer	kernel/TeBaseSTInstanceSet.h	/^	virtual TeLayer* getLayer()$/;"	f	class:TeBaseSTInstanceSet
getLayer	kernel/TeDatabase.cpp	/^TeDatabasePortal::getLayer(TeLayer& layer, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
getLayerId	kernel/TeCoverageParams.h	/^    int getLayerId() const$/;"	f	class:TeCoverageParams
getLayerNames	drivers/GTM/TeGTM.cpp	/^std::string TeGTM::getLayerNames(std::string fileName)$/;"	f	class:TeGTM
getLayers	drivers/DXF/tedxfvisitor.cpp	/^const vector<TeDXFLayer *> & TeDXFVisitor::getLayers() const $/;"	f	class:TeDXFVisitor
getLayers	drivers/GTM/TeGTM.h	/^	float getLayers(){return layers_;};$/;"	f	class:TeGTMHeader
getLeft	kernel/TeKdTree.h	/^		TeAdaptativeKdTreeNode* getLeft(void) const$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
getLeft	kernel/TeKdTree.h	/^		TeKdTreeNode* getLeft(void) const$/;"	f	class:TeSAM::TeKdTreeNode
getLegend	kernel/TeDatabase.cpp	/^TeDatabasePortal::getLegend ()$/;"	f	class:TeDatabasePortal
getLegend	kernel/TeDatabase.cpp	/^TeDatabasePortal::getLegend (TeLegendEntry& leg, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
getLegendItem	drivers/qt/TeQtThemeItem.cpp	/^TeQtCheckListItem* TeQtThemeItem::getLegendItem(TeLegendEntry* leg)$/;"	f	class:TeQtThemeItem
getLegendRect	drivers/qt/TeQtCanvas.cpp	/^QRect TeQtCanvas::getLegendRect (QPoint p, const QPixmap* pix, string tx)$/;"	f	class:TeQtCanvas
getLegendTitleAlias	drivers/qt/TeAppTheme.cpp	/^string TeAppTheme::getLegendTitleAlias()$/;"	f	class:TeAppTheme
getLegends	drivers/qt/TeQtThemeItem.cpp	/^void TeQtThemeItem::getLegends(vector<const QPixmap*>& pixmapVector, vector<string>& labelVector, string& title)$/;"	f	class:TeQtThemeItem
getLine	utils/TeWKTGeometryDecoder.cpp	/^TeLine2D getLine(const string& line)$/;"	f
getLineCosts	kernel/TeNetwork.h	/^	map<string, double>	getLineCosts () {return line_cost_;}$/;"	f	class:TeGraphNetwork
getLineSet	kernel/TeNetwork.h	/^	TeLineSet getLineSet () { return line_set_;}$/;"	f	class:TeGraphNetwork
getLineSet	kernel/TeNetwork.h	/^	TeLineSet getLineSet () { return line_set_;}$/;"	f	class:TeNetwork
getLinearRing	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getLinearRing (int &\/*ni*\/)$/;"	f	class:TeFirebirdPortal
getLinearRing	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::getLinearRing (int &ni)$/;"	f	class:TeMySQLPortal
getLinearRing	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::getLinearRing (TeLine2D& line)$/;"	f	class:TeOCIOraclePortal
getLinearRing	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::getLinearRing (TeLine2D& line, const unsigned int& initIndex)$/;"	f	class:TeOCIOraclePortal
getLinearRing	drivers/PostgreSQL/TePostgreSQL.cpp	/^TeLinearRing TePostgreSQLPortal::getLinearRing(int& numberOfHoles)$/;"	f	class:TePostgreSQLPortal
getLinearRing	drivers/PostgreSQL/TePostgreSQL.cpp	/^TeLinearRing TePostgreSQLPortal::getLinearRing(int& numberOfHoles, const unsigned int& initIndex)$/;"	f	class:TePostgreSQLPortal
getLinearRing	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getLinearRing()$/;"	f	class:TeAdoPortal
getLines	drivers/DXF/tedxflayer.cpp	/^const TeLineSet TeDXFLayer::getLines() const $/;"	f	class:TeDXFLayer
getLines	kernel/TeGridIndex.h	/^		void getLines(TeLineSet& lset)$/;"	f	class:TeSAM::TeGridIndex
getLines	kernel/TeLayer.cpp	/^TeLayer::getLines(TeLineSet &ls, const string& whereClause)$/;"	f	class:TeLayer
getLines	kernel/TeMultiGeometry.h	/^	TeLineSet&  getLines() $/;"	f	class:TeMultiGeometry
getLines	kernel/TeSTInstance.cpp	/^TeSTInstance::getLines()$/;"	f	class:TeSTInstance
getLines	kernel/TeTin.cpp	/^TeTin::getLines(TeLineSet &lineSet)$/;"	f	class:TeTin
getLocalCollectionTable	drivers/qt/TeAppTheme.cpp	/^TeAppTheme::getLocalCollectionTable()$/;"	f	class:TeAppTheme
getLocalDatabase	drivers/qt/TeAppTheme.cpp	/^TeAppTheme::getLocalDatabase()$/;"	f	class:TeAppTheme
getLocalDatabase	kernel/TeFileTheme.cpp	/^TeDatabase* TeFileTheme::getLocalDatabase()$/;"	f	class:TeFileTheme
getLocalDatabase	kernel/TeSFSTheme.cpp	/^TeDatabase* TeSFSTheme::getLocalDatabase()$/;"	f	class:TeSFSTheme
getLock	drivers/GTM/TeGTM.h	/^	unsigned char getLock(){return lock_;};$/;"	f	class:TeGTMLayers
getLockingMode	drivers/SQLite/sqlite3/sqlite3.c	/^static int getLockingMode(const char *z){$/;"	f	file:
getLongitude	drivers/GTM/TeGTM.h	/^	double getLongitude(){return longitude_;};$/;"	f	class:TeGTMRoutes
getLongitude	drivers/GTM/TeGTM.h	/^	double getLongitude(){return longitude_;};$/;"	f	class:TeGTMTrackLogs
getLongitude	drivers/GTM/TeGTM.h	/^	double getLongitude(){return longitude_;};$/;"	f	class:TeGTMWaypoints
getLowerLimit	image_processing/TePDIMixModelSpectralBand.cpp	/^double TePDIMixModelSpectralBand::getLowerLimit()$/;"	f	class:TePDIMixModelSpectralBand
getLutSize	kernel/TeRasterTransform.h	/^	int getLutSize()$/;"	f	class:TeRasterTransform
getLutTableName	kernel/TeRasterTransform.h	/^	std::string getLutTableName()$/;"	f	class:TeRasterTransform
getMBRGeom	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::getMBRGeom(string tableGeom, string object_id, TeBox& box, string colGeom)$/;"	f	class:TeOracleSpatial
getMBRGeom	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::getMBRGeom(string tableGeom, string object_id, TeBox& box, string colGeom)$/;"	f	class:TePostGIS
getMBRGeom	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::getMBRGeom(string tableGeom, string object_id, TeBox& box, string colGeom)$/;"	f	class:TePostgreSQL
getMBRGeom	kernel/TeDatabase.cpp	/^TeDatabase::getMBRGeom(string tableGeom, string object_id, TeBox& box, string \/* colGeom *\/)$/;"	f	class:TeDatabase
getMBRSelectedObjects	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::getMBRSelectedObjects(string \/* geomTable *\/,string colGeom, string fromClause, string whereClause, string \/* afterWhereClause *\/, TeGeomRep \/* repType *\/,TeBox &bout, const double& tol)$/;"	f	class:TeOracleSpatial
getMBRSelectedObjects	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::getMBRSelectedObjects(string geomTable, string colGeom, string fromClause, string whereClause, string afterWhereClause, TeGeomRep repType, TeBox& bout, const double& tol)$/;"	f	class:TePostGIS
getMBRSelectedObjects	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::getMBRSelectedObjects(string geomTable, string colGeom, string fromClause, string whereClause, string afterWhereClause, TeGeomRep repType, TeBox& bout, const double& tol)$/;"	f	class:TePostgreSQL
getMBRSelectedObjects	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::getMBRSelectedObjects(string \/* geomTable *\/,string \/* colGeom *\/, string fromClause, string whereClause, string afterWhereClause, TeGeomRep repType,TeBox &bout, const double& tol)$/;"	f	class:TeSqlServerSpatial
getMBRSelectedObjects	kernel/TeDatabase.cpp	/^TeDatabase::getMBRSelectedObjects(string \/* geomTable *\/,string \/* colGeom *\/, string fromClause, string whereClause, string afterWhereClause, TeGeomRep repType,TeBox &bout, const double& tol)$/;"	f	class:TeDatabase
getMSC	drivers/GL/dri_interface.h	/^    int (*getMSC)( void *screenPrivate, int64_t *msc );$/;"	m	struct:__DRIscreenRec
getMSC	drivers/GL/internal/dri_interface.h	/^    int (*getMSC)( void *screenPrivate, int64_t *msc );$/;"	m	struct:__DRIscreenRec
getMSCRate	drivers/GL/dri_interface.h	/^    GLboolean (*getMSCRate)(__DRInativeDisplay * dpy, __DRIid drawable,$/;"	m	struct:__DRIinterfaceMethodsRec
getMSCRate	drivers/GL/internal/dri_interface.h	/^    GLboolean (*getMSCRate)(__DRInativeDisplay * dpy, __DRIid drawable,$/;"	m	struct:__DRIinterfaceMethodsRec
getMap	drivers/GTM/TeGTM.h	/^	bool getMap(){return map_;};$/;"	f	class:TeGTMHeader
getMapNeighbours	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::getMapNeighbours (const string& object_id, int slice) $/;"	f	class:TeGeneralizedProxMatrix
getMask	drivers/SQLite/sqlite3/sqlite3.c	/^static Bitmask getMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f	file:
getMax	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getMax( unsigned int raster_index,$/;"	f	class:TePDIStatistic
getMax	kernel/TePolygonSetProperties.cpp	/^double getMax( vector<TeCoord2D> xyPositions, char coord )$/;"	f
getMaxIntersectionArea	functions/TeGeoProcessingFunctions.cpp	/^inline string getMaxIntersectionArea(map<string, double>& polMap)$/;"	f
getMaxSimulJobs	kernel/TeThreadJobsManager.cpp	/^unsigned long int TeThreadJobsManager::getMaxSimulJobs() const$/;"	f	class:TeThreadJobsManager
getMaxTime	kernel/TeBaseSTInstanceSet.h	/^	virtual TimeType getMaxTime()$/;"	f	class:TeBaseSTInstanceSet
getMaxTmpFileSize	image_processing/TePDIMatrix.hpp	/^  unsigned long int TePDIMatrix< ElementType >::getMaxTmpFileSize() const$/;"	f	class:TePDIMatrix
getMaxValue	drivers/SQLite/TeSQLite.cpp	/^int getMaxValue(TeDatabase* database, const std::string& tableName, const std::string& intColumnName)$/;"	f
getMaxValues	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::getMaxValues(std::vector<double>& maxvalues)$/;"	f	class:TeMrSIDReader
getMaximaPoints	image_processing/TePDIOFMatching.cpp	/^bool TePDIOFMatching::getMaximaPoints( $/;"	f	class:TePDIOFMatching
getMaxlat	drivers/GTM/TeGTM.h	/^	float getMaxlat(){return maxlat_;};$/;"	f	class:TeGTMHeader
getMaxlon	drivers/GTM/TeGTM.h	/^	float getMaxlon(){return maxlon_;};$/;"	f	class:TeGTMHeader
getMean	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getMean( unsigned int raster_index, $/;"	f	class:TePDIStatistic
getMean	kernel/TePolygonSetProperties.cpp	/^double getMean( vector<TeCoord2D> xyPositions, char coord )$/;"	f
getMeanMatrix	image_processing/TePDIStatistic.cpp	/^TeMatrix TePDIStatistic::getMeanMatrix( unsigned int pol_index )$/;"	f	class:TePDIStatistic
getMemPolicy	image_processing/TePDIMatrix.hpp	/^  typename TePDIMatrix< ElementType >::MemoryPolicy TePDIMatrix< ElementType >::getMemPolicy() const$/;"	f	class:TePDIMatrix
getMemUsageFactor	image_processing/TePDIParaSegBaatzStrategy.hpp	/^      double getMemUsageFactor() const { return 1.5; };$/;"	f	class:TePDIParaSegBaatzStrategy
getMemUsageFactor	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^      double getMemUsageFactor() const { return 1.0; };$/;"	f	class:TePDIParaSegRegGrowStrategy
getMessage	drivers/qt/TeQtProgress.h	/^	string getMessage()$/;"	f	class:TeQtProgress
getMessage	kernel/TeProgressBase.h	/^	virtual string getMessage() { return ""; }$/;"	f	class:TeProgressBase
getMessage	kernel/TeStdIOProgress.cpp	/^string TeStdIOProgress::getMessage() $/;"	f	class:TeStdIOProgress
getMetamap	drivers/GTM/TeGTM.h	/^	unsigned char getMetamap(){return metamapa_;};$/;"	f	class:TeGTMInformationImages
getMetax	drivers/GTM/TeGTM.h	/^	float getMetax(){return metax_;};$/;"	f	class:TeGTMInformationImages
getMetay	drivers/GTM/TeGTM.h	/^	float getMetay(){return metay_;};$/;"	f	class:TeGTMInformationImages
getMiddleLine	drivers/qt/TeApplicationUtils.cpp	/^bool getMiddleLine(TeLine2D line, TeCoord2D &p)$/;"	f
getMin	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getMin( unsigned int raster_index,$/;"	f	class:TePDIStatistic
getMin	kernel/TePolygonSetProperties.cpp	/^double getMin( vector<TeCoord2D> xyPositions, char coord )$/;"	f
getMinRequiredTiePoints	kernel/Te2ndDegPolynomialGT.cpp	/^unsigned int Te2ndDegPolynomialGT::getMinRequiredTiePoints() const$/;"	f	class:Te2ndDegPolynomialGT
getMinRequiredTiePoints	kernel/Te3rdDegPolynomialGT.cpp	/^unsigned int Te3rdDegPolynomialGT::getMinRequiredTiePoints() const$/;"	f	class:Te3rdDegPolynomialGT
getMinRequiredTiePoints	kernel/TeAffineGT.cpp	/^unsigned int TeAffineGT::getMinRequiredTiePoints() const$/;"	f	class:TeAffineGT
getMinRequiredTiePoints	kernel/TeProjectiveGT.cpp	/^unsigned int TeProjectiveGT::getMinRequiredTiePoints() const$/;"	f	class:TeProjectiveGT
getMinTime	kernel/TeBaseSTInstanceSet.h	/^	virtual TimeType getMinTime()$/;"	f	class:TeBaseSTInstanceSet
getMinValues	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::getMinValues(std::vector<double>& minvalues)$/;"	f	class:TeMrSIDReader
getMinlat	drivers/GTM/TeGTM.h	/^	float getMinlat(){return minlat_;};$/;"	f	class:TeGTMHeader
getMinlon	drivers/GTM/TeGTM.h	/^	float getMinlon(){return minlon_;};$/;"	f	class:TeGTMHeader
getMode	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getMode( unsigned int raster_index,$/;"	f	class:TePDIStatistic
getMonth	kernel/TeTime.cpp	/^int getMonth(const std::string& month)$/;"	f
getMonth	kernel/TeTime.cpp	/^std::string getMonth(int i)$/;"	f
getMySQL	drivers/MySQL/TeMySQL.h	/^	st_mysql*	getMySQL () $/;"	f	class:TeMySQL
getNCols	image_processing/TePDIMtxDoubleAdpt.hpp	/^      inline unsigned int getNCols() const$/;"	f	class:TePDIMtxDoubleAdpt
getNLines	image_processing/TePDIMtxDoubleAdpt.hpp	/^      inline unsigned int getNLines() const$/;"	f	class:TePDIMtxDoubleAdpt
getN_maps	drivers/GTM/TeGTM.h	/^	long getN_maps(){return n_maps_;};$/;"	f	class:TeGTMHeader
getN_tk	drivers/GTM/TeGTM.h	/^	long getN_tk(){return n_tk_;};$/;"	f	class:TeGTMHeader
getName	drivers/DXF/tedxflayer.cpp	/^const string TeDXFLayer::getName() const $/;"	f	class:TeDXFLayer
getName	drivers/GTM/TeGTM.h	/^	char* getName(){return name_;};$/;"	f	class:TeGTMLayers
getName	drivers/GTM/TeGTM.h	/^	char* getName(){return name_;};$/;"	f	class:TeGTMUserIcons
getName	drivers/GTM/TeGTM.h	/^	char* getName(){return name_;};$/;"	f	class:TeGTMWaypoints
getNameSequence	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::getNameSequence(const string &tableName)$/;"	f	class:TeOCIOracle
getNameSequence	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::getNameSequence(const string &tableName)$/;"	f	class:TeFireBird
getNameSequence	drivers/ado/TeAdoOracle.cpp	/^TeOracle::getNameSequence(const string &tableName)$/;"	f	class:TeOracle
getNameTrigger	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::getNameTrigger(const string &tableName)$/;"	f	class:TeOCIOracle
getNameTrigger	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::getNameTrigger(const string &tableName)$/;"	f	class:TeFireBird
getNameTrigger	drivers/ado/TeAdoOracle.cpp	/^TeOracle::getNameTrigger(const string &tableName)$/;"	f	class:TeOracle
getNameTrigger	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::getNameTrigger(const string &tableName)$/;"	f	class:TeSqlServer
getName_map	drivers/GTM/TeGTM.h	/^	char* getName_map(){return name_map_;};$/;"	f	class:TeGTMInformationImages
getNavigationParameters	drivers/MrSID/TeMrSID.cpp	/^void TeMrSIDReader::getNavigationParameters(std::vector<double>& nwf)$/;"	f	class:TeMrSIDReader
getNavigationParameters	kernel/TeRasterParams.cpp	/^TeRasterParams::getNavigationParameters(vector<double>& nwf)$/;"	f	class:TeRasterParams
getNdatum	drivers/GTM/TeGTM.h	/^	short getNdatum(){return ndatum_;};$/;"	f	class:TeGTMGridDatum
getNdatum	drivers/GTM/TeGTM.h	/^	unsigned char getNdatum(){return ndatum_;};$/;"	f	class:TeGTMHeader
getNeighbours	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>:: getNeighbours (const string& object_id, int slice) $/;"	f	class:TeGeneralizedProxMatrix
getNeighbours	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::getNeighbours (const string& object_id, TeNeighbours& neigh)$/;"	f	class:TeProxMatrixGraphBreymann
getNeighbours	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::getNeighbours (int i, string& object_id, TeNeighbours& neigh)$/;"	f	class:TeProxMatrixGraphBreymann
getNeighboursNeighbours	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::getNeighboursNeighbours (const string& object_id, TeNeighbours& neigh, int max_order )$/;"	f	class:TeProxMatrixGraphBreymann
getNeighboursNeighbours	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::getNeighboursNeighbours (const string& object_id, TeNeighbours& neigh, int max_order, int current_order)$/;"	f	class:TeProxMatrixGraphBreymann
getNewLayerName	kernel/TeDatabase.cpp	/^string TeDatabase::getNewLayerName(const string& n)$/;"	f	class:TeDatabase
getNewObjectId	kernel/TeLayer.cpp	/^TeLayer::getNewObjectId()$/;"	f	class:TeLayer
getNewSegment	kernel/TeRaster.cpp	/^TeRaster::iteratorPoly::getNewSegment(int linCurr)$/;"	f	class:TeRaster::iteratorPoly
getNewTableName	kernel/TeDatabase.cpp	/^string TeDatabase::getNewTableName(const string& n)$/;"	f	class:TeDatabase
getNewThemeName	kernel/TeDatabase.cpp	/^string TeDatabase::getNewThemeName(const string& n)$/;"	f	class:TeDatabase
getNewdatum	drivers/GTM/TeGTM.h	/^	char* getNewdatum(){return newdatum_;};$/;"	f	class:TeGTMHeader
getNextGridRowPointed	drivers/qt/TeQtGridSource.cpp	/^int TeQtGridSource::getNextGridRowPointed(int gridRow)$/;"	f	class:TeQtGridSource
getNextGridRowQueried	drivers/qt/TeQtGridSource.cpp	/^int TeQtGridSource::getNextGridRowQueried(int gridRow)$/;"	f	class:TeQtGridSource
getNextNode	drivers/SQLite/sqlite3/sqlite3.c	/^static int getNextNode($/;"	f	file:
getNextObject	drivers/qt/TeApplicationUtils.cpp	/^bool getNextObject(TeDatabasePortal* portal, TePolygonSet& polys, TePolygon& nextPoly)$/;"	f
getNextString	drivers/SQLite/sqlite3/sqlite3.c	/^static int getNextString($/;"	f	file:
getNextToken	drivers/SQLite/sqlite3/sqlite3.c	/^static int getNextToken($/;"	f	file:
getNgrid	drivers/GTM/TeGTM.h	/^	short getNgrid(){return ngrid_;};$/;"	f	class:TeGTMGridDatum
getNoDataPixel	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::getNoDataPixel(std::vector<double>& nodata)$/;"	f	class:TeMrSIDReader
getNode	kernel/TeNetwork.cpp	/^TeGraphNetwork::getNode (int i, TeNode& node)$/;"	f	class:TeGraphNetwork
getNode	kernel/TeNetwork.cpp	/^TeNetwork::getNode (int i, TeNode& node)$/;"	f	class:TeNetwork
getNode	kernel/TeRedBlackTree.h	/^					Node_i* getNode(void) const$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
getNodeSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int getNodeSize($/;"	f	file:
getNrtes	drivers/GTM/TeGTM.h	/^	long getNrtes(){return nrtes_;};$/;"	f	class:TeGTMHeader
getNtracks	drivers/GTM/TeGTM.h	/^	long getNtracks(){return ntrcks_;};$/;"	f	class:TeGTMHeader
getNumCols	kernel/TeGridIndex.h	/^		int getNumCols() const$/;"	f	class:TeSAM::TeGridIndex
getNumElements	kernel/TeCoverageParams.h	/^    int getNumElements() const$/;"	f	class:TeCoverageParams
getNumLayerObjects	kernel/TeAbstractTheme.h	/^	virtual int getNumLayerObjects()$/;"	f	class:TeAbstractTheme
getNumLevels	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::getNumLevels()$/;"	f	class:TeMrSIDReader
getNumLines	kernel/TeGridIndex.h	/^		int getNumLines() const$/;"	f	class:TeSAM::TeGridIndex
getNumTimeFrames	kernel/TeQuerier.cpp	/^TeQuerier::getNumTimeFrames()$/;"	f	class:TeQuerier
getNumTimeFrames	kernel/TeQuerierImpl.cpp	/^TeQuerierImpl::getNumTimeFrames()$/;"	f	class:TeQuerierImpl
getNumber	drivers/GTM/TeGTM.h	/^	unsigned char getNumber(){return number_;};$/;"	f	class:TeGTMUserIcons
getNumberOfObjects	kernel/TeFileTheme.cpp	/^unsigned int TeFileTheme::getNumberOfObjects()$/;"	f	class:TeFileTheme
getNumberOfObjects	kernel/TeSFSTheme.cpp	/^unsigned int TeSFSTheme::getNumberOfObjects()$/;"	f	class:TeSFSTheme
getNumberOfObjects	kernel/TeTheme.cpp	/^TeTheme::getNumberOfObjects()$/;"	f	class:TeTheme
getNumberOrdinates	drivers/Oracle/TeOCICursor.cpp	/^int TeOCICursor::getNumberOrdinates()$/;"	f	class:TeOCICursor
getNwpts	drivers/GTM/TeGTM.h	/^	long getNwpts(){return nwpts_;};$/;"	f	class:TeGTMHeader
getNwptstyles	drivers/GTM/TeGTM.h	/^	long getNwptstyles(){return nwptstyles_;};$/;"	f	class:TeGTMHeader
getOID	drivers/PostgreSQL/TePGInterface.h	/^        Oid getOID(void) const { return last_oid_; }$/;"	f	class:TePGConnection
getObjLegendMap	kernel/TeAbstractTheme.h	/^	virtual map<string, int>& getObjLegendMap() $/;"	f	class:TeAbstractTheme
getObjOwnLegendMap	kernel/TeAbstractTheme.h	/^	virtual map<string, int>& getObjOwnLegendMap() $/;"	f	class:TeAbstractTheme
getObjPtr	drivers/spl/PluginsParametersContainer.h	/^      TeSharedPtr< ObjectT > getObjPtr() const$/;"	f	class:PPCNode
getObjPtr	kernel/TeMultiContainer.h	/^      ObjectT* getObjPtr() const$/;"	f	class:TeMCNode
getObjStatusMap	kernel/TeAbstractTheme.h	/^	virtual map<string, int>& getObjStatusMap()$/;"	f	class:TeAbstractTheme
getObjTypeInfo	kernel/TeMultiContainer.h	/^      const std::string& getObjTypeInfo() const$/;"	f	class:TeMCNode
getObjVoidPtr	kernel/TeMultiContainer.h	/^      void* getObjVoidPtr() const$/;"	f	class:TeMCNode
getObject	drivers/qt/TeQtGrid.cpp	/^string TeQtGrid::getObject(int row)$/;"	f	class:TeQtGrid
getObject2ItemsMap	utils/TeDatabaseUtils.cpp	/^map<string, vector<string> > getObject2ItemsMap(TeTheme* theme, vector<string>& itens)$/;"	f
getObjectId	drivers/qt/TeQtGridSource.cpp	/^string TeQtGridSource::getObjectId(int gridRow)$/;"	f	class:TeQtGridSource
getObjectId	kernel/TeBaseSTInstance.h	/^	virtual string getObjectId () $/;"	f	class:TeBaseSTInstance
getObjectStatus	kernel/TeExternalTheme.cpp	/^TeExternalTheme::getObjectStatus(const std::string objectId)$/;"	f	class:TeExternalTheme
getObjects	functions/TeThemeFunctions.cpp	/^vector<string> getObjects(TeTheme* theme, int sel)$/;"	f
getObjects	functions/TeThemeFunctions.cpp	/^vector<string> getObjects(TeTheme* theme, vector<string>& itens)$/;"	f
getObjects	kernel/TeFileTheme.cpp	/^std::set<std::string> TeFileTheme::getObjects(TeSelectedObjects )$/;"	f	class:TeFileTheme
getObjects	kernel/TeFileTheme.cpp	/^std::set<std::string> TeFileTheme::getObjects(const vector<string>& )$/;"	f	class:TeFileTheme
getObjects	kernel/TeSFSTheme.cpp	/^set<string> TeSFSTheme::getObjects(TeSelectedObjects selectedObjects)$/;"	f	class:TeSFSTheme
getObjects	kernel/TeSFSTheme.cpp	/^set<string> TeSFSTheme::getObjects(const vector<string>& itemVec)$/;"	f	class:TeSFSTheme
getObjects	kernel/TeTheme.cpp	/^set<string> TeTheme::getObjects(TeSelectedObjects selectedObjects)$/;"	f	class:TeTheme
getObjects	kernel/TeTheme.cpp	/^set<string> TeTheme::getObjects(const vector<string>& itemVec)$/;"	f	class:TeTheme
getOffset	kernel/TeRasterTransform.h	/^	double getOffset() const$/;"	f	class:TeRasterTransform
getOnlyGeometry	utils/TeWKTGeometryDecoder.cpp	/^string getOnlyGeometry(const string& wkt)$/;"	f
getOracleSpatialRelation	drivers/Oracle/TeOracleSpatial.cpp	/^getOracleSpatialRelation(int relation)$/;"	f
getOrder	kernel/TeTable.h	/^	int getOrder() { return order_;}$/;"	f	class:TeTable
getOrderBy	drivers/qt/TeQtGridSource.h	/^	string& getOrderBy()$/;"	f	class:TeQtGridSource
getOrigin	drivers/GTM/TeGTM.h	/^	double getOrigin(){return origin_;};$/;"	f	class:TeGTMGridDatum
getOrigin	drivers/MrSID/TeMrSID.h	/^inline void TeMrSIDReader::getOrigin(double& x, double& y)$/;"	f	class:TeMrSIDReader
getOverflowPage	drivers/SQLite/sqlite3/sqlite3.c	/^static int getOverflowPage($/;"	f	file:
getPGBox	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::getPGBox(const int& field_num, TeBox& b) const$/;"	f	class:TePGRecordset
getPGBox	drivers/PostgreSQL/TePGInterface.h	/^		void getPGBox(const string& field_name, TeBox& b) const { getPGBox(fieldNum(field_name), b); }$/;"	f	class:TePGRecordset
getPGConnection	drivers/PostgreSQL/TePostgreSQLConnection.cpp	/^TePGConnection* TePostgreSQLConnection::getPGConnection() const$/;"	f	class:TePostgreSQLConnection
getPGISGeomColl	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::getPGISGeomColl(const int& field_num, TeMultiGeometry& m) const$/;"	f	class:TePGRecordset
getPGISGeomColl	drivers/PostgreSQL/TePGInterface.h	/^		void getPGISGeomColl(const string& field_name, TeMultiGeometry& m) const { getPGISGeomColl(fieldNum(field_name), m); }$/;"	f	class:TePGRecordset
getPGISLine	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::getPGISLine(const int& field_num, TeLine2D& l) const$/;"	f	class:TePGRecordset
getPGISLine	drivers/PostgreSQL/TePGInterface.h	/^		void getPGISLine(const string& field_name, TeLine2D& l) const { getPGISLine(fieldNum(field_name), l); }$/;"	f	class:TePGRecordset
getPGISMultiLine	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::getPGISMultiLine(const int& field_num, TeLineSet& ls) const$/;"	f	class:TePGRecordset
getPGISMultiLine	drivers/PostgreSQL/TePGInterface.h	/^		void getPGISMultiLine(const string& field_name, TeLineSet& ls) const { getPGISMultiLine(fieldNum(field_name), ls); }$/;"	f	class:TePGRecordset
getPGISMultiPoint	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::getPGISMultiPoint(const int& field_num, TePointSet& ps) const$/;"	f	class:TePGRecordset
getPGISMultiPoint	drivers/PostgreSQL/TePGInterface.h	/^		void getPGISMultiPoint(const string& field_name, TePointSet& ps) const { getPGISMultiPoint(fieldNum(field_name), ps); }$/;"	f	class:TePGRecordset
getPGISMultiPolygon	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::getPGISMultiPolygon(const int& field_num, TePolygonSet& ps) const$/;"	f	class:TePGRecordset
getPGISMultiPolygon	drivers/PostgreSQL/TePGInterface.h	/^		void getPGISMultiPolygon(const string& field_name, TePolygonSet& ps) const { getPGISMultiPolygon(fieldNum(field_name), ps); }$/;"	f	class:TePGRecordset
getPGISPoint	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::getPGISPoint(const int& field_num, TePoint& p) const$/;"	f	class:TePGRecordset
getPGISPoint	drivers/PostgreSQL/TePGInterface.h	/^		void getPGISPoint(const string& field_name, TePoint& p) const { getPGISPoint(fieldNum(field_name), p); }$/;"	f	class:TePGRecordset
getPGISPolygon	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::getPGISPolygon(const int& field_num, TePolygon& p) const$/;"	f	class:TePGRecordset
getPGISPolygon	drivers/PostgreSQL/TePGInterface.h	/^		void getPGISPolygon(const string& field_name, TePolygon& p) const { getPGISPolygon(fieldNum(field_name), p); }$/;"	f	class:TePGRecordset
getPGLine2D	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::getPGLine2D(const int& field_num, TeLine2D& l) const$/;"	f	class:TePGRecordset
getPGLine2D	drivers/PostgreSQL/TePGInterface.h	/^		void getPGLine2D(const string& field_name, TeLine2D& l) const { getPGLine2D(fieldNum(field_name), l); }$/;"	f	class:TePGRecordset
getPainter	drivers/qt/TeQtCanvas.h	/^	QPainter* getPainter () {return &painter_;}$/;"	f	class:TeQtCanvas
getParameters	dtm/TeDTMAlgorithm.cpp	/^const TeDTMParameters& TeDTMAlgorithm::getParameters() const$/;"	f	class:TeDTMAlgorithm
getParameters	kernel/TeCoverage.h	/^    TeCoverageParams& getParameters()$/;"	f	class:TeCoverage
getParameters	kernel/TeCoverageDecoder.h	/^    virtual TeCoverageParams& getParameters()$/;"	f	class:TeCoverageDecoder
getParameters	kernel/TeGeometricTransformation.cpp	/^const TeGTParams& TeGeometricTransformation::getParameters() const$/;"	f	class:TeGeometricTransformation
getParameters	kernel/TeGeometricTransformation.cpp	/^void TeGeometricTransformation::getParameters( TeGTParams& params ) const$/;"	f	class:TeGeometricTransformation
getParams	drivers/qt/TeQtCanvas.h	/^	TeRasterParams& getParams()$/;"	f	class:TeQtCanvas
getPassword	kernel/TeConnection.cpp	/^std::string TeConnection::getPassword() const$/;"	f	class:TeConnection
getPenStyleMap	drivers/qt/TeQtViewsListView.h	/^	map<TeLnBasicType, Qt::PenStyle>& getPenStyleMap() {return penStyleMap_;}$/;"	f	class:TeQtViewsListView
getPercentile	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getPercentile( double sample_index, $/;"	f	class:TePDIStatistic
getPersistenceType	kernel/TeCoverageParams.h	/^    TeCoveragePersistenceType getPersistenceType() const$/;"	f	class:TeCoverageParams
getPieBarAlias	drivers/qt/TeAppTheme.cpp	/^string TeAppTheme::	getPieBarAlias(string atr)$/;"	f	class:TeAppTheme
getPinv	kernel/TeMatrix.cpp	/^bool TeMatrix::getPinv( TeMatrix& pinv ) const$/;"	f	class:TeMatrix
getPixel	image_processing/TePDIMixModelComponent.cpp	/^double TePDIMixModelComponent::getPixel(unsigned int bn)$/;"	f	class:TePDIMixModelComponent
getPixel	image_processing/TePDIMixModelComponentList.cpp	/^double TePDIMixModelComponentList::getPixel(unsigned int cn, unsigned int bn)$/;"	f	class:TePDIMixModelComponentList
getPixmap	drivers/qt/TeQtGraph.h	/^	QPixmap* getPixmap() {return pixmap_;}$/;"	f	class:TeQtGraphPlot
getPixmap0	drivers/qt/TeQtCanvas.h	/^	QPixmap* getPixmap0 () {return pixmap0_; }$/;"	f	class:TeQtCanvas
getPixmap1	drivers/qt/TeQtCanvas.h	/^	QPixmap* getPixmap1 () {return pixmap1_; }$/;"	f	class:TeQtCanvas
getPixmap2	drivers/qt/TeQtCanvas.h	/^	QPixmap* getPixmap2 () {return pixmap2_; }$/;"	f	class:TeQtCanvas
getPointXYZ	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::getPointXYZ (double& x,double& y)$/;"	f	class:TeOracleSpatialPortal
getPointer	kernel/TeMappedMemory.cpp	/^void* TeMappedMemory::getPointer() const$/;"	f	class:TeMappedMemory
getPoints	drivers/DXF/tedxflayer.cpp	/^const TePointSet TeDXFLayer::getPoints() const $/;"	f	class:TeDXFLayer
getPoints	kernel/TeLayer.cpp	/^TeLayer::getPoints(TePointSet &ps, const string& whereClause)$/;"	f	class:TeLayer
getPoints	kernel/TeMultiGeometry.h	/^	TePointSet&  getPoints() $/;"	f	class:TeMultiGeometry
getPoints	kernel/TeSTInstance.cpp	/^TeSTInstance::getPoints()$/;"	f	class:TeSTInstance
getPol	image_processing/TePDITileIndexer.hpp	/^    const TePolygon& getPol() const$/;"	f	class:TePDITileIndexer
getPolygonAngle	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonAngle( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonArea	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonArea( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonBoxArea	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonBoxArea( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonCircle	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonCircle( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonCompacity	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonCompacity( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonContiguity	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonContiguity( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonDensity	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonDensity( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonEllipticFit	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonEllipticFit( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonFractalDimension	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonFractalDimension( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonGyrationRadius	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonGyrationRadius( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonLength	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonLength( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonPerimeter	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonPerimeter( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonPerimeterAreaRatio	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonPerimeterAreaRatio( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonRadius	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonRadius( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonRectangularFit	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonRectangularFit( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonShapeIndex	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonShapeIndex( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygonWidth	kernel/TePolygonSetProperties.cpp	/^double TePolygonSetProperties::getPolygonWidth( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getPolygons	drivers/DXF/tedxflayer.cpp	/^const TePolygonSet TeDXFLayer::getPolygons() const $/;"	f	class:TeDXFLayer
getPolygons	kernel/TeLayer.cpp	/^TeLayer::getPolygons(TePolygonSet &ps, const string& whereClause)$/;"	f	class:TeLayer
getPolygons	kernel/TeMultiGeometry.h	/^	TePolygonSet&  getPolygons() $/;"	f	class:TeMultiGeometry
getPolygons	kernel/TeSTInstance.cpp	/^TeSTInstance::getPolygons()$/;"	f	class:TeSTInstance
getPopupMenu	drivers/qt/TeQtDatabasesListView.h	/^	QPopupMenu* getPopupMenu()$/;"	f	class:TeQtDatabasesListView
getPopupMenu	drivers/qt/TeQtViewsListView.h	/^	QPopupMenu* getPopupMenu()$/;"	f	class:TeQtViewsListView
getPortNumber	kernel/TeConnection.cpp	/^int	TeConnection::getPortNumber() const$/;"	f	class:TeConnection
getPortal	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::getPortal ()$/;"	f	class:TeFirebird
getPortal	drivers/MySQL/TeMySQL.cpp	/^TeDatabasePortal* TeMySQL::getPortal ()$/;"	f	class:TeMySQL
getPortal	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::getPortal ()$/;"	f	class:TeOCIOracle
getPortal	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::getPortal ()$/;"	f	class:TeOracleSpatial
getPortal	drivers/PostgreSQL/TePostGIS.cpp	/^TeDatabasePortal* TePostGIS::getPortal()$/;"	f	class:TePostGIS
getPortal	drivers/PostgreSQL/TePostgreSQL.cpp	/^TeDatabasePortal* TePostgreSQL::getPortal()$/;"	f	class:TePostgreSQL
getPortal	drivers/SQLite/TeSQLite.cpp	/^TeDatabasePortal* TeSQLite::getPortal()$/;"	f	class:TeSQLite
getPortal	drivers/ado/TeAdoDB.cpp	/^TeAdo::getPortal ()$/;"	f	class:TeAdo
getPortal	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::getPortal ()$/;"	f	class:TeFireBird
getPortal	drivers/ado/TeAdoOracle.cpp	/^TeOracle::getPortal ()$/;"	f	class:TeOracle
getPortal	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::getPortal ()$/;"	f	class:TeSqlServer
getPortal	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::getPortal ()$/;"	f	class:TeSqlServerSpatial
getPortal	drivers/qt/TeQtGrid.h	/^	TeDatabasePortal* getPortal()$/;"	f	class:TeQtGrid
getPortal	drivers/qt/TeQtTable.h	/^	TeDatabasePortal* getPortal() {return portal_;}$/;"	f	class:TeQtTable
getPortalInfo	drivers/qt/TeQtGridSource.cpp	/^QString TeQtGridSource::getPortalInfo(int gridCol)$/;"	f	class:TeQtGridSource
getPosition	kernel/graph.h	/^	int Graph<VertexType,EdgeType>::getPosition(const VertexType& e) $/;"	f	class:br_stl::Graph
getPrevGridRowPointed	drivers/qt/TeQtGridSource.cpp	/^int TeQtGridSource::getPrevGridRowPointed(int gridRow)$/;"	f	class:TeQtGridSource
getPrevGridRowQueried	drivers/qt/TeQtGridSource.cpp	/^int TeQtGridSource::getPrevGridRowQueried(int gridRow)$/;"	f	class:TeQtGridSource
getPriority	kernel/TeThread.cpp	/^TeThreadPriority TeThread::getPriority() const$/;"	f	class:TeThread
getProcAddress	drivers/GL/dri_interface.h	/^    __DRIfuncPtr (*getProcAddress)( const char * proc_name );$/;"	m	struct:__DRIinterfaceMethodsRec
getProcAddress	drivers/GL/internal/dri_interface.h	/^    __DRIfuncPtr (*getProcAddress)( const char * proc_name );$/;"	m	struct:__DRIinterfaceMethodsRec
getProcessTimesAddr	drivers/SQLite/sqlite3/shell.c	/^static GETPROCTIMES getProcessTimesAddr = NULL;$/;"	v	file:
getProduct	kernel/TeMatrix.cpp	/^bool TeMatrix::getProduct( const TeMatrix& matrix1, const TeMatrix& matrix2,$/;"	f	class:TeMatrix
getProductId	kernel/TeGDriverFactory.cpp	/^string TeGDriverParams::getProductId() const $/;"	f	class:TeGDriverParams
getProductId	kernel/TeViewNode.h	/^	int getProductId() { return nodeType_; }$/;"	f	class:TeViewNodeParams
getProductId	kernel/TeViewNode.h	/^	virtual int getProductId() const$/;"	f	class:TeViewNode
getProductId	kernel/TeVisual.h	/^	string getProductId() { return visualType_; }$/;"	f	class:TeBaseVisualParams
getProgressSteps	image_processing/TePDIHistogram.cpp	/^unsigned long int TePDIHistogram::getProgressSteps( $/;"	f	class:TePDIHistogram
getProgressSteps	image_processing/TePDIJointHistogram.cpp	/^unsigned long int TePDIJointHistogram::getProgressSteps( $/;"	f	class:TePDIJointHistogram
getProj4Description	kernel/TeDatum.cpp	/^string TeDatum::getProj4Description()$/;"	f	class:TeDatum
getProjection	drivers/GTM/TeGTM.cpp	/^TeProjection* TeGTM::getProjection()$/;"	f	class:TeGTM
getProjection	kernel/TeCoverageParams.h	/^    TeProjection* getProjection() const$/;"	f	class:TeCoverageParams
getProjection	kernel/TeDatabase.cpp	/^TeDatabasePortal::getProjection(TeProjection** proj, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
getProjectionFromGeomTable	kernel/TeSpatialOperations.cpp	/^getProjectionFromGeomTable(const string& geomTable, TeDatabase* db)$/;"	f
getProperties	kernel/TeBaseSTInstance.h	/^	virtual vector<string>& getProperties()$/;"	f	class:TeBaseSTInstance
getProperties	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getProperties (const string& object_id, vector<string>& values, TimeType& time, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getProperties	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getProperties (const string& object_id, vector<string>& values, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getProperties	kernel/TeNeighbours.cpp	/^TeProxMatrixAttributes::getProperties ()$/;"	f	class:TeProxMatrixAttributes
getProperty	functions/TeCellAlgorithms.cpp	/^TeBoxRasterIterator::getProperty(TeProperty& prop) $/;"	f	class:TeBoxRasterIterator
getProperty	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::getProperty (TeProperty& prop, string name)$/;"	f	class:TeBaseSTInstance
getProperty	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::getProperty (TeProperty& prop, unsigned int i)$/;"	f	class:TeBaseSTInstance
getProperty	kernel/TeBaseSTInstanceSet.h	/^			bool getProperty(TeProperty& prop)$/;"	f	class:TeBaseSTInstanceSet::propertyIterator
getProperty	kernel/TeRaster.cpp	/^TeRaster::iteratorPoly::getProperty(TeProperty& prop) $/;"	f	class:TeRaster::iteratorPoly
getPropertyValue	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::getPropertyValue (const string& name, string& val)$/;"	f	class:TeBaseSTInstance
getPropertyValue	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::getPropertyValue (string& val, const int& i)$/;"	f	class:TeBaseSTInstance
getPropertyValue	stat/TeStatDataStructures.h	/^	bool getPropertyValue(const string& \/* name *\/, string& value) $/;"	f	class:TeGridElement
getPropertyVector	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::getPropertyVector()$/;"	f	class:TeBaseSTInstance
getPropertyVector	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::getPropertyVector(TePropertyVector& propVec)$/;"	f	class:TeBaseSTInstance
getPropertyVector	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getPropertyVector (const string& object_id, $/;"	f	class:TeBaseSTInstanceSet
getPropertyVector	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getPropertyVector (const string& object_id, TePropertyVector& propVec, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getProxResolutionLevel	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::getProxResolutionLevel(unsigned int w, unsigned int h, $/;"	f	class:TeMrSIDReader
getPt1ConvexHullArea	kernel/TeGeometricTransformation.cpp	/^double TeGeometricTransformation::getPt1ConvexHullArea( $/;"	f	class:TeGeometricTransformation
getQueryPortal	kernel/TeSFSTheme.cpp	/^TeDatabasePortal* TeSFSTheme::getQueryPortal(const TeBox& box, int& spatialColumnIndex, TeGeomRep& geomRep)$/;"	f	class:TeSFSTheme
getRGBMap	kernel/TeRasterTransform.h	/^	map<TeRGBChannels,short>& getRGBMap()$/;"	f	class:TeRasterTransform
getRUsedChannels	image_processing/TePDIBatchGeoMosaic.cpp	/^bool TePDIBatchGeoMosaic::getRUsedChannels( $/;"	f	class:TePDIBatchGeoMosaic
getRaster1Hist	image_processing/TePDIJointHistogram.cpp	/^const TePDIHistogram& TePDIJointHistogram::getRaster1Hist() const$/;"	f	class:TePDIJointHistogram
getRaster2Hist	image_processing/TePDIJointHistogram.cpp	/^const TePDIHistogram& TePDIJointHistogram::getRaster2Hist() const$/;"	f	class:TePDIJointHistogram
getRasterBlock	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::getRasterBlock(unsigned long& size, unsigned char* ptData)$/;"	f	class:TeFirebirdPortal
getRasterBlock	drivers/MySQL/TeMySQL.cpp	/^        TeMySQLPortal::getRasterBlock(unsigned long& size, unsigned char* ptData)$/;"	f	class:TeMySQLPortal
getRasterBlock	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::getRasterBlock(unsigned long& size, unsigned char* ptData)$/;"	f	class:TeOCIOraclePortal
getRasterBlock	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::getRasterBlock(unsigned long& size, unsigned char* ptData)$/;"	f	class:TePostgreSQLPortal
getRasterBlock	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::getRasterBlock(unsigned long& size, unsigned char* ptData)$/;"	f	class:TeSQLitePortal
getRasterBlock	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::getRasterBlock(unsigned long& size, unsigned char* ptData)$/;"	f	class:TeAdoPortal
getRasterBlock	drivers/gdal/TeGDALDecoder.cpp	/^bool TeGDALDecoder::getRasterBlock(const TeBlockIndex& index, void* buf)$/;"	f	class:TeGDALDecoder
getRasterBlock	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::getRasterBlock(const string& index, void *block)$/;"	f	class:TeDecoderDatabase
getRasterBlock	kernel/TeDecoderDatabase.cpp	/^bool TeDecoderDatabase::getRasterBlock(const TeBlockIndex& index, void *block)$/;"	f	class:TeDecoderDatabase
getRasterBlock	kernel/TeDecoderFile.cpp	/^TeDecoderFile::getRasterBlock(const TeBlockIndex& index, void *buf)$/;"	f	class:TeDecoderFile
getRasterFile	kernel/TeFileTheme.cpp	/^TeRaster* TeFileTheme::getRasterFile()$/;"	f	class:TeFileTheme
getRasterGeometries	kernel/TeLayer.cpp	/^TeLayer::getRasterGeometries(vector<string>& objectIds, unsigned int tilingType, const TeBox& box)$/;"	f	class:TeLayer
getRasterInPolygon	kernel/TePolygonSetProperties.cpp	/^TeRaster* TePolygonSetProperties::getRasterInPolygon( unsigned int polIndex )$/;"	f	class:TePolygonSetProperties
getRasterTable	kernel/TeDatabase.cpp	/^TeDatabase::getRasterTable(int layerId, const string& objectId)$/;"	f	class:TeDatabase
getRasterVisual	kernel/TeDatabase.cpp	/^TeDatabasePortal::getRasterVisual(TeRasterVisual& vis, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
getReadLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int getReadLock( os2File *pFile ){$/;"	f	file:
getReadLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int getReadLock(winFile *pFile){$/;"	f	file:
getReadablePrivate	drivers/GL/glcore.h	/^    __GLdrawablePrivate *(*getReadablePrivate)(__GLcontext *gc);$/;"	m	struct:__GLimportsRec
getReadablePrivate	drivers/GL/internal/glcore.h	/^    __GLdrawablePrivate *(*getReadablePrivate)(__GLcontext *gc);$/;"	m	struct:__GLimportsRec
getRealIndex	kernel/TeSTGeoDataSet.cpp	/^int TeSTGeoDataSet::getRealIndex(const int& index)$/;"	f	class:TeSTGeoDataSet
getRect	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::getRect()$/;"	f	class:TeQtMultiTextEdit
getRect	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::getRect()$/;"	f	class:TeQtTextEdit
getRect	drivers/qwt/TeQwtPlotPicker.h	/^	QRect& getRect() {return rect_;}$/;"	f	class:TeQwtPlotPicker
getRectangular	drivers/GTM/TeGTM.h	/^	bool getRectangular(){return rectangular_;};$/;"	f	class:TeGTMHeader
getRef	drivers/Oracle/OCI/include/occiObjects.h	/^OCIRef* Ref<T>::getRef() const$/;"	f	class:oracle::occi::Ref
getRefCount	kernel/TeSharedPtr.h	/^  unsigned long int TeSharedPtr< T >::getRefCount() const$/;"	f	class:TeSharedPtr
getRemoteTheme	kernel/TeExternalTheme.cpp	/^TeExternalTheme::getRemoteTheme() const$/;"	f	class:TeExternalTheme
getRemoteThemeInfo	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::getRemoteThemeInfo(int& remoteThemeId, int& databaseId)$/;"	f	class:TeExternalTheme
getRemoteThemeInfo	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::getRemoteThemeInfo(int& databaseId, std::string& tableName, std::string& columnName, int& geomRep, int& projId)$/;"	f	class:TeSFSTheme
getRemoteThemeName	kernel/TeExternalTheme.cpp	/^TeExternalTheme::getRemoteThemeName()$/;"	f	class:TeExternalTheme
getReplaceSpecialChars	functions/TeAddressLocator.h	/^		bool getReplaceSpecialChars(void) const$/;"	f	class:TeAddressLocator
getRepresentation	kernel/TeDatabase.cpp	/^TeDatabasePortal::getRepresentation(TeRepresentation& rep, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
getRepresentation	kernel/TeGeoDataDriver.cpp	/^int TeGeoDataDriver::getRepresentation() $/;"	f	class:TeGeoDataDriver
getRepresentation	kernel/TeLayer.cpp	/^TeLayer::getRepresentation(TeGeomRep repType, TeRepresPointerVector& result)$/;"	f	class:TeLayer
getRepresentation	kernel/TeLayer.cpp	/^TeLayer::getRepresentation(TeGeomRep repType, const string& tName)$/;"	f	class:TeLayer
getReserva1	drivers/GTM/TeGTM.h	/^	unsigned char getReserva1(){return reserva1_;};$/;"	f	class:TeGTMLayers
getReserva2	drivers/GTM/TeGTM.h	/^	short getReserva2(){return reserva2_;};$/;"	f	class:TeGTMLayers
getResolution	drivers/MrSID/TeMrSID.h	/^inline void TeMrSIDReader::getResolution(double& rx, double& ry)$/;"	f	class:TeMrSIDReader
getReturnValue	image_processing/TePDICorrelationMatching.hpp	/^          inline bool getReturnValue() const$/;"	f	class:TePDICorrelationMatching::CorrThread
getReturnValue	image_processing/TePDISAMClassifier.hpp	/^          inline bool getReturnValue() const$/;"	f	class:TePDISAMClassifier::SegThread
getReturnValue	kernel/TeThreadFunctor.cpp	/^bool TeThreadFunctor::getReturnValue() const$/;"	f	class:TeThreadFunctor
getRight	kernel/TeKdTree.h	/^		TeAdaptativeKdTreeNode* getRight(void) const$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
getRight	kernel/TeKdTree.h	/^		TeKdTreeNode* getRight(void) const$/;"	f	class:TeSAM::TeKdTreeNode
getRname	drivers/GTM/TeGTM.h	/^	char* getRname(){return rname_;};$/;"	f	class:TeGTMRoutes
getRowTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^static TriggerPrg *getRowTrigger($/;"	f	file:
getRunningJobsNumber	kernel/TeThreadJobsManager.cpp	/^unsigned long int TeThreadJobsManager::getRunningJobsNumber()$/;"	f	class:TeThreadJobsManager
getSBC	drivers/GL/dri_interface.h	/^    int (*getSBC)(__DRInativeDisplay *dpy, void *drawablePrivate, int64_t *sbc );$/;"	m	struct:__DRIdrawableRec
getSBC	drivers/GL/internal/dri_interface.h	/^    int (*getSBC)(__DRInativeDisplay *dpy, void *drawablePrivate, int64_t *sbc );$/;"	m	struct:__DRIdrawableRec
getSQLAutoNumber	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::getSQLAutoNumber(const string& table)$/;"	f	class:TeOCIOracle
getSQLAutoNumber	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::getSQLAutoNumber(const string& table)$/;"	f	class:TeFireBird
getSQLAutoNumber	drivers/ado/TeAdoOracle.cpp	/^TeOracle::getSQLAutoNumber(const string& table)$/;"	f	class:TeOracle
getSQLAutoNumber	kernel/TeDatabase.cpp	/^TeDatabase::getSQLAutoNumber(const string& \/* table *\/)$/;"	f	class:TeDatabase
getSQLBoxSelect	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::getSQLBoxSelect (const string& tableName, TeGeomRep rep)$/;"	f	class:TeOracleSpatial
getSQLBoxSelect	drivers/PostgreSQL/TePostGIS.cpp	/^string TePostGIS::getSQLBoxSelect (const string& tableName, TeGeomRep rep)$/;"	f	class:TePostGIS
getSQLBoxSelect	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::getSQLBoxSelect(const string& tableName, TeGeomRep rep)$/;"	f	class:TePostgreSQL
getSQLBoxSelect	kernel/TeDatabase.cpp	/^TeDatabase::getSQLBoxSelect (const string& tableName, TeGeomRep \/* rep *\/)$/;"	f	class:TeDatabase
getSQLBoxWhere	drivers/Firebird/TeFirebird.cpp	/^string TeFirebird::getSQLBoxWhere(const TeBox& box, const TeGeomRep rep, const std::string& tableName, const std::string& columnName)$/;"	f	class:TeFirebird
getSQLBoxWhere	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::getSQLBoxWhere (const TeBox& box, const TeGeomRep rep, const std::string& tableName)$/;"	f	class:TeOracleSpatial
getSQLBoxWhere	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::getSQLBoxWhere (const string& table1, const string& table2, TeGeomRep rep2, TeGeomRep rep1)$/;"	f	class:TeOracleSpatial
getSQLBoxWhere	drivers/Oracle/TeOracleSpatial.cpp	/^string TeOracleSpatial::getSQLBoxWhere(const TeBox& box, const TeGeomRep rep, const std::string& tableName, const std::string& columnName)$/;"	f	class:TeOracleSpatial
getSQLBoxWhere	drivers/PostgreSQL/TePostGIS.cpp	/^string TePostGIS::getSQLBoxWhere(const TeBox& box, const TeGeomRep rep, const std::string& tableName)$/;"	f	class:TePostGIS
getSQLBoxWhere	drivers/PostgreSQL/TePostGIS.cpp	/^string TePostGIS::getSQLBoxWhere(const string& table1, const string& table2, TeGeomRep rep2, TeGeomRep rep1)$/;"	f	class:TePostGIS
getSQLBoxWhere	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::getSQLBoxWhere(const TeBox& box, const TeGeomRep rep, const std::string& tableName)$/;"	f	class:TePostgreSQL
getSQLBoxWhere	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::getSQLBoxWhere(const string& table1, const string& table2, TeGeomRep rep2, TeGeomRep rep1)$/;"	f	class:TePostgreSQL
getSQLBoxWhere	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::getSQLBoxWhere(const TeBox& box, const TeGeomRep rep, const std::string& )$/;"	f	class:TeSqlServerSpatial
getSQLBoxWhere	kernel/TeDatabase.cpp	/^TeDatabase::getSQLBoxWhere (const string& table1, const string& table2, TeGeomRep rep2, TeGeomRep \/* rep1 *\/)$/;"	f	class:TeDatabase
getSQLBoxWhere	kernel/TeDatabase.cpp	/^string TeDatabase::getSQLBoxWhere(const TeBox& box, const TeGeomRep rep, const std::string& tableName)$/;"	f	class:TeDatabase
getSQLBoxWhere	kernel/TeDatabase.cpp	/^string TeDatabase::getSQLBoxWhere(const TeBox& box, const TeGeomRep rep, const std::string& tableName, const std::string& columnName)$/;"	f	class:TeDatabase
getSQLOrderBy	drivers/Oracle/TeOracleSpatial.cpp	/^std::string TeOracleSpatial::getSQLOrderBy(const TeGeomRep& rep) const$/;"	f	class:TeOracleSpatial
getSQLOrderBy	drivers/PostgreSQL/TePostGIS.cpp	/^std::string TePostGIS::getSQLOrderBy(const TeGeomRep& rep) const$/;"	f	class:TePostGIS
getSQLOrderBy	drivers/SQLite/TeSQLite.cpp	/^std::string TeSQLite::getSQLOrderBy(const TeGeomRep& rep) const$/;"	f	class:TeSQLite
getSQLOrderBy	drivers/ado/TeAdoSqlServerSpatial.cpp	/^std::string TeSqlServerSpatial::getSQLOrderBy(const TeGeomRep& rep) const$/;"	f	class:TeSqlServerSpatial
getSQLOrderBy	kernel/TeDatabase.cpp	/^std::string TeDatabase::getSQLOrderBy(const TeGeomRep& rep) const$/;"	f	class:TeDatabase
getSQLStatistics	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::getSQLStatistics (TeGroupingAttr& attrs)$/;"	f	class:TeOCIOracle
getSQLStatistics	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::getSQLStatistics(TeGroupingAttr& attrs)$/;"	f	class:TePostgreSQL
getSQLStatistics	kernel/TeDatabase.cpp	/^TeDatabase::getSQLStatistics (TeGroupingAttr& attrs)$/;"	f	class:TeDatabase
getSQLTemporalFunction	kernel/TeDatabase.cpp	/^TeDatabase::getSQLTemporalFunction (TeChronon chr, const string& colName)$/;"	f	class:TeDatabase
getSQLTemporalWhere	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::getSQLTemporalWhere(int time1, int time2, TeChronon chr, TeTemporalRelation rel, $/;"	f	class:TeFirebird
getSQLTemporalWhere	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::getSQLTemporalWhere(int time1, int time2, TeChronon chr, TeTemporalRelation rel,$/;"	f	class:TeMySQL
getSQLTemporalWhere	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::getSQLTemporalWhere(TeTimeInterval& timeInterval, TeTemporalRelation timeOperator, const string& initialTime, const string& finalTime)$/;"	f	class:TePostgreSQL
getSQLTemporalWhere	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::getSQLTemporalWhere(int time1, int time2, TeChronon chr, TeTemporalRelation rel, const string& initialTime, const string& finalTime)$/;"	f	class:TePostgreSQL
getSQLTemporalWhere	drivers/ado/TeAdoDB.cpp	/^TeAdo::getSQLTemporalWhere(int time1, int time2, TeChronon chr, TeTemporalRelation rel, $/;"	f	class:TeAdo
getSQLTemporalWhere	kernel/TeDatabase.cpp	/^TeDatabase::getSQLTemporalWhere (TeTimeInterval& timeInterval, TeTemporalRelation timeOperator, const string& initialTime, const string& finalTime)$/;"	f	class:TeDatabase
getSQLTemporalWhere	kernel/TeDatabase.cpp	/^TeDatabase::getSQLTemporalWhere (const string& temporalRest)$/;"	f	class:TeDatabase
getSQLTemporalWhere	kernel/TeDatabase.cpp	/^TeDatabase::getSQLTemporalWhere(int time1, int time2, TeChronon chr, TeTemporalRelation rel, $/;"	f	class:TeDatabase
getSQLTime	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::getSQLTime(const TeTime& time) const$/;"	f	class:TeFirebird
getSQLTime	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::getSQLTime(const TeTime& time) const$/;"	f	class:TeMySQL
getSQLTime	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::getSQLTime(const TeTime& time) const$/;"	f	class:TeOCIOracle
getSQLTime	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::getSQLTime(const TeTime& time) const$/;"	f	class:TePostgreSQL
getSQLTime	drivers/SQLite/TeSQLite.cpp	/^string TeSQLite::getSQLTime(const TeTime& time) const$/;"	f	class:TeSQLite
getSQLTime	drivers/ado/TeAdoDB.cpp	/^TeAdo::getSQLTime(const TeTime& time) const$/;"	f	class:TeAdo
getSQLTime	drivers/ado/TeAdoOracle.cpp	/^TeOracle::getSQLTime(const TeTime& time) const$/;"	f	class:TeOracle
getSQLTime	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::getSQLTime(const TeTime& time) const$/;"	f	class:TeSqlServer
getSQLTime	kernel/TeDatabase.h	/^	virtual string getSQLTime(const TeTime& \/* time *\/) const { return ""; };$/;"	f	class:TeDatabase
getSQLToLoadBlobLength	drivers/Oracle/TeOCICursor.cpp	/^string getSQLToLoadBlobLength(const string& sql, const vector<string>& blobNames)$/;"	f
getSTENeighbours	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::getSTENeighbours(const string& object_id)$/;"	f	class:TeGeneralizedProxMatrix
getSTInstance	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getSTInstance(const string& objectId, TimeType& time, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getSTInstance	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getSTInstance(const string& objectId, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getSTInstance	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getSTInstance(const unsigned int& index)$/;"	f	class:TeBaseSTInstanceSet
getSTInstances	kernel/TeBaseSTInstanceSet.h	/^	virtual vector<InstanceType>& getSTInstances()$/;"	f	class:TeBaseSTInstanceSet
getSTInstances	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getSTInstances(vector<InstanceType* >& set, TimeType& time, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getSTInstances	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getSTInstances(vector<InstanceType* >& set, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getSTInstances	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getSTInstances(vector<InstanceType* >& set, const string& objectId, TimeType& time, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getSTInstances	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::getSTInstances(vector<InstanceType* >& set, const string& objectId, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
getSVD	kernel/TeMatrix.cpp	/^bool TeMatrix::getSVD( TeMatrix& UMtx, TeMatrix& DMtx, TeMatrix& VMtx ) const$/;"	f	class:TeMatrix
getSafetyLevel	drivers/SQLite/sqlite3/sqlite3.c	/^static u8 getSafetyLevel(const char *z){$/;"	f	file:
getScale1	drivers/GTM/TeGTM.h	/^	double getScale1(){return scale1_;};$/;"	f	class:TeGTMGridDatum
getScale1	drivers/GTM/TeGTM.h	/^	float getScale1(){return scale1_;};$/;"	f	class:TeGTMWaypointsStyles
getScanLine	image_processing/TePDIMatrix.hpp	/^  ElementType* TePDIMatrix< ElementType >::getScanLine( const unsigned int& line ) const$/;"	f	class:TePDIMatrix
getScanLine	kernel/TeDecoderSmartMem.h	/^  inline void* getScanLine( const int& lin, const int& band )$/;"	f	class:TeDecoderSmartMem
getScreen	drivers/GL/dri_interface.h	/^    __DRIscreen *(*getScreen)(__DRInativeDisplay *dpy, int screenNum);$/;"	m	struct:__DRIinterfaceMethodsRec
getScreen	drivers/GL/internal/dri_interface.h	/^    __DRIscreen *(*getScreen)(__DRInativeDisplay *dpy, int screenNum);$/;"	m	struct:__DRIinterfaceMethodsRec
getSectorSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int getSectorSize($/;"	f	file:
getSelectedAreaData	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::getSelectedAreaData(unsigned char*& data)$/;"	f	class:TeMrSIDReader
getSelectedAreaHeight	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::getSelectedAreaHeight()$/;"	f	class:TeMrSIDReader
getSelectedAreaWidth	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::getSelectedAreaWidth()$/;"	f	class:TeMrSIDReader
getSelectedColumns	drivers/qt/TeQtGrid.cpp	/^vector<int> TeQtGrid::getSelectedColumns()$/;"	f	class:TeQtGrid
getSelectedRasterBlock	drivers/MrSID/TeDecoderMrSID.cpp	/^bool TeDecoderMrSID::getSelectedRasterBlock(TeDecoderMemory* memDec) $/;"	f	class:TeDecoderMrSID
getSelectedRasterBlock	kernel/TeDecoder.cpp	/^bool TeDecoder::getSelectedRasterBlock(TeDecoderMemory* \/* memDec *\/) $/;"	f	class:TeDecoder
getSelectedRasterBlock	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::getSelectedRasterBlock(TeDecoderMemory* memDec) $/;"	f	class:TeDecoderDatabase
getSensor	image_processing/TePDIMixModelSpectralBand.cpp	/^unsigned int TePDIMixModelSpectralBand::getSensor()$/;"	f	class:TePDIMixModelSpectralBand
getSequenceValue	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::getSequenceValue(const std::string &seqName)$/;"	f	class:TeFireBird
getSize	drivers/GTM/TeGTM.h	/^	long getSize(){return size_;};$/;"	f	class:TeGTMUserIcons
getSize	image_processing/TePDIMixModelComponent.cpp	/^unsigned TePDIMixModelComponent::getSize()$/;"	f	class:TePDIMixModelComponent
getSize	image_processing/TePDIMixModelComponentList.cpp	/^unsigned int TePDIMixModelComponentList::getSize()$/;"	f	class:TePDIMixModelComponentList
getSize	image_processing/TePDIMixModelSpectralBandList.cpp	/^unsigned int TePDIMixModelSpectralBandList::getSize()$/;"	f	class:TePDIMixModelSpectralBandList
getSlice	kernel/TeBaseSTInstance.h	/^	virtual int getSlice()$/;"	f	class:TeBaseSTInstance
getSlices	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme::getSlices()$/;"	f	class:TeAbstractTheme
getSlicingParams	kernel/TeGeneralizedProxMatrix.h	/^	TeProxMatrixSlicingParams* getSlicingParams() $/;"	f	class:TeGeneralizedProxMatrix
getSourceDatabase	kernel/TeExternalTheme.cpp	/^TeDatabase* TeExternalTheme::getSourceDatabase()$/;"	f	class:TeExternalTheme
getSourceTheme	drivers/qt/TeAppTheme.cpp	/^TeAppTheme::getSourceTheme()$/;"	f	class:TeAppTheme
getSpatialData	kernel/TeBlockLoader.cpp	/^TeBlockLoader::getSpatialData(unsigned char* &data, long& size)$/;"	f	class:TeBlockLoader
getSpatialIdxColumn	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::getSpatialIdxColumn(TeGeomRep rep)$/;"	f	class:TeOracleSpatial
getSpatialIdxColumn	drivers/PostgreSQL/TePostGIS.cpp	/^string TePostGIS::getSpatialIdxColumn(TeGeomRep rep)$/;"	f	class:TePostGIS
getSpatialIdxColumn	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::getSpatialIdxColumn(TeGeomRep rep)$/;"	f	class:TePostgreSQL
getSpatialIdxColumn	kernel/TeDatabase.cpp	/^string TeDatabase::getSpatialIdxColumn(TeGeomRep rep)$/;"	f	class:TeDatabase
getSpatialReferenceId	drivers/Oracle/TeOCICursor.cpp	/^TeOCICursor::getSpatialReferenceId()$/;"	f	class:TeOCICursor
getSpatialReferenceId	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::getSpatialReferenceId()$/;"	f	class:TeOracleSpatialPortal
getSpectralBand	image_processing/TePDIMixModelSpectralBandList.cpp	/^TePDIMixModelSpectralBand TePDIMixModelSpectralBandList::getSpectralBand(unsigned int b)$/;"	f	class:TePDIMixModelSpectralBandList
getSpectralBandLabel	image_processing/TePDIMixModelSpectralBandList.cpp	/^string TePDIMixModelSpectralBandList::getSpectralBandLabel(unsigned int b)$/;"	f	class:TePDIMixModelSpectralBandList
getSrcBand	kernel/TeRasterTransform.h	/^	short getSrcBand()$/;"	f	class:TeRasterTransform
getStatisticFromString	drivers/qt/TeApplicationUtils.cpp	/^TeStatisticType getStatisticFromString(const string& s)$/;"	f
getStatus	kernel/TeThread.cpp	/^TeThreadStatus TeThread::getStatus() const$/;"	f	class:TeThread
getStdDev	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getStdDev( unsigned int raster_index,$/;"	f	class:TePDIStatistic
getStdDevMatrix	image_processing/TePDIStatistic.cpp	/^TeMatrix TePDIStatistic::getStdDevMatrix( unsigned int pol_index )$/;"	f	class:TePDIStatistic
getStrikeout	drivers/GTM/TeGTM.h	/^	unsigned char getStrikeout(){return strikeout_;};$/;"	f	class:TeGTMWaypointsStyles
getStringFromStatistic	functions/TeGeoProcessingFunctions.cpp	/^inline string getStringFromStatistic(TeStatisticType sType)$/;"	f
getStringIds	kernel/TeSpatialOperations.cpp	/^getStringIds(TeKeys& IdsIn)$/;"	f
getSum	image_processing/TePDIFilterMask.cpp	/^double TePDIFilterMask::getSum()$/;"	f	class:TePDIFilterMask
getSum	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getSum( unsigned int raster_index,$/;"	f	class:TePDIStatistic
getSum3	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getSum3( unsigned int raster_index, $/;"	f	class:TePDIStatistic
getSum4	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getSum4( unsigned int raster_index, $/;"	f	class:TePDIStatistic
getSumPB1B2	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getSumPB1B2( unsigned int raster1_index,$/;"	f	class:TePDIStatistic
getSupportedFilesFilter	drivers/gdal/TeGDALDecoder.cpp	/^std::string TeGDALDecoder::getSupportedFilesFilter()$/;"	f	class:TeGDALDecoder
getT1	kernel/TeTimeInterval.h	/^	TeTime& getT1 (void) {return t1_;}$/;"	f	class:TeTimeInterval
getT2	kernel/TeTimeInterval.h	/^	TeTime& getT2 (void) {return t2_;}$/;"	f	class:TeTimeInterval
getTS	kernel/TeQuerier.cpp	/^TeQuerier::getTS(TeTemporalSeries& ts)$/;"	f	class:TeQuerier
getTS	kernel/TeQuerierImpl.cpp	/^TeQuerierImpl::getTS(TeTemporalSeries& ts)$/;"	f	class:TeQuerierImpl
getTSEntry	kernel/TeQuerier.cpp	/^TeQuerier::getTSEntry(TeTSEntry& tsEntry, int frame)$/;"	f	class:TeQuerier
getTSEntry	kernel/TeQuerierImpl.cpp	/^TeQuerierImpl::getTSEntry(TeTSEntry& tsEntry, int frame)$/;"	f	class:TeQuerierImpl
getTSEntry	kernel/TeTemporalSeries.cpp	/^TeTemporalSeries::getTSEntry(TeTSEntry& ts, unsigned int frame)$/;"	f	class:TeTemporalSeries
getTSParams	kernel/TeQuerier.cpp	/^TeQuerier::getTSParams() $/;"	f	class:TeQuerier
getTSParams	kernel/TeQuerierImpl.cpp	/^TeQuerierImpl::getTSParams() $/;"	f	class:TeQuerierImpl
getTable	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::getTable(TeTable& table, const string tableName)$/;"	f	class:TeExternalTheme
getTable	kernel/TeTheme.cpp	/^TeTheme::getTable(TeTable& table, const string tableName)$/;"	f	class:TeTheme
getTableIndexFromField	drivers/qt/TeAppTheme.cpp	/^unsigned int TeAppTheme::getTableIndexFromField(string fieldName)$/;"	f	class:TeAppTheme
getTableName	kernel/TeDatabase.cpp	/^string TeDatabase::getTableName(int tableId)$/;"	f	class:TeDatabase
getTableName	kernel/TeExternalTheme.cpp	/^string TeExternalTheme::getTableName(const string& attrName)$/;"	f	class:TeExternalTheme
getTableName	kernel/TeTheme.cpp	/^TeTheme::getTableName(const string& attrName)$/;"	f	class:TeTheme
getTalt	drivers/GTM/TeGTM.h	/^	float getTalt(){return talt_;};$/;"	f	class:TeGTMTrackLogs
getTcolor	drivers/GTM/TeGTM.h	/^	long getTcolor(){return tcolor_;};$/;"	f	class:TeGTMTrackLogStyles
getTdate	drivers/GTM/TeGTM.h	/^	long getTdate(){return tdate_;};$/;"	f	class:TeGTMRoutes
getTdate	drivers/GTM/TeGTM.h	/^	long getTdate(){return tdate_;};$/;"	f	class:TeGTMTrackLogs
getTempStore	drivers/SQLite/sqlite3/sqlite3.c	/^static int getTempStore(const char *z){$/;"	f	file:
getTempname	drivers/SQLite/sqlite3/sqlite3.c	/^static int getTempname(int nBuf, char *zBuf ){$/;"	f	file:
getTempname	drivers/SQLite/sqlite3/sqlite3.c	/^static int getTempname(int nBuf, char *zBuf){$/;"	f	file:
getTemporalTable	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::getTemporalTable(TeTable& table)$/;"	f	class:TeExternalTheme
getTemporalTable	kernel/TeTheme.cpp	/^TeTheme::getTemporalTable(TeTable& table)$/;"	f	class:TeTheme
getText	kernel/TeLayer.cpp	/^TeLayer::getText(TeTextSet &ts, const string& whereClause)$/;"	f	class:TeLayer
getTextIndex	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::getTextIndex(QPoint p)$/;"	f	class:TeQtMultiTextEdit
getTextVisual	drivers/qt/TeAppTheme.cpp	/^TeVisual TeAppTheme::getTextVisual(const TeText &text)$/;"	f	class:TeAppTheme
getTexts	kernel/TeMultiGeometry.h	/^	TeTextSet&  getTexts() $/;"	f	class:TeMultiGeometry
getTexts	kernel/TeSTInstance.cpp	/^TeSTInstance::getTexts()$/;"	f	class:TeSTInstance
getTheme	drivers/qt/TeAppTheme.h	/^	TeAbstractTheme* getTheme() $/;"	f	class:TeAppTheme
getTheme	drivers/qt/TeQtGrid.h	/^	TeAppTheme* getTheme() $/;"	f	class:TeQtGrid
getTheme	drivers/qt/TeQtGridSource.h	/^	TeAppTheme* getTheme() const { return theme_; }$/;"	f	class:TeQtGridSource
getTheme	kernel/TeBaseSTInstanceSet.h	/^	virtual TeTheme* getTheme()$/;"	f	class:TeBaseSTInstanceSet
getTheme	kernel/TeDatabase.cpp	/^TeDatabasePortal::getTheme(TeAbstractTheme& theme, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
getThemeBox	kernel/TeAbstractTheme.h	/^	virtual TeBox& getThemeBox()$/;"	f	class:TeAbstractTheme
getThemeBox	kernel/TeDatabase.cpp	/^TeDatabase::getThemeBox(TeTheme* theme)$/;"	f	class:TeDatabase
getThemeItem	drivers/qt/TeQtViewsListView.cpp	/^TeQtThemeItem* TeQtViewsListView::getThemeItem(TeAppTheme* appTheme)$/;"	f	class:TeQtViewsListView
getThemeItem	drivers/qt/TeQtViewsListView.cpp	/^TeQtThemeItem* TeQtViewsListView::getThemeItem(int themeId)$/;"	f	class:TeQtViewsListView
getThemeItemVec	drivers/qt/TeQtViewItem.cpp	/^vector<TeQtThemeItem*> TeQtViewItem::getThemeItemVec()$/;"	f	class:TeQtViewItem
getThemeItemVec	drivers/qt/TeQtViewsListView.cpp	/^vector<TeQtThemeItem*> TeQtViewsListView::getThemeItemVec()$/;"	f	class:TeQtViewsListView
getThemeProjection	kernel/TeExternalTheme.cpp	/^TeExternalTheme::getThemeProjection()$/;"	f	class:TeExternalTheme
getThemeProjection	kernel/TeFileTheme.cpp	/^TeProjection* TeFileTheme::getThemeProjection()$/;"	f	class:TeFileTheme
getThemeProjection	kernel/TeSFSTheme.cpp	/^TeProjection* TeSFSTheme::getThemeProjection()$/;"	f	class:TeSFSTheme
getThemeProjection	kernel/TeTheme.cpp	/^TeTheme::getThemeProjection()$/;"	f	class:TeTheme
getTicket	kernel/TeConnectionPool.cpp	/^unsigned int TeConnectionPool::getTicket()$/;"	f	class:TeConnectionPool
getTile	image_processing/TePDITileIndexer.hpp	/^    void getTile( const double& y, TeTileSegIndex** index ) const$/;"	f	class:TePDITileIndexer
getTileIndex	image_processing/TePDITileIndexer.hpp	/^    void getTileIndex(const TeCoord2D& c1, const TeCoord2D& c2, $/;"	f	class:TePDITileIndexer
getTileIndex	image_processing/TePDITileIndexer.hpp	/^    void getTileIndex(const double& y, unsigned int& tileIndex) const$/;"	f	class:TePDITileIndexer
getTilePointer	kernel/TeRasterMemManager.cpp	/^void* TeRasterMemManager::getTilePointer( const unsigned int& band, $/;"	f	class:TeRasterMemManager
getTilePointer_reqTileIdx_	kernel/TeRasterMemManager.h	/^      unsigned int getTilePointer_reqTileIdx_;$/;"	m	class:TeRasterMemManager
getTilePointer_swapTileIdx_	kernel/TeRasterMemManager.h	/^      unsigned int getTilePointer_swapTileIdx_;$/;"	m	class:TeRasterMemManager
getTilePointer_tilePtr_	kernel/TeRasterMemManager.h	/^      TilePtrT getTilePointer_tilePtr_;$/;"	m	class:TeRasterMemManager
getTilesNumber	image_processing/TePDITileIndexer.hpp	/^    unsigned int getTilesNumber()$/;"	f	class:TePDITileIndexer
getTime	drivers/PostgreSQL/TePGInterface.cpp	/^string TePGRecordset::getTime(const int& field_num)$/;"	f	class:TePGRecordset
getTime	drivers/PostgreSQL/TePGInterface.h	/^		string getTime(const string& field_name) { return getTime(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
getTime	kernel/TeBaseSTInstance.h	/^	virtual TimeType getTime() $/;"	f	class:TeBaseSTInstance
getTime	kernel/TeTime.cpp	/^TeTime::getTime() const$/;"	f	class:TeTime
getTimeStamp	drivers/PostgreSQL/TePGInterface.cpp	/^string TePGRecordset::getTimeStamp(const int& field_num)$/;"	f	class:TePGRecordset
getTimeStamp	drivers/PostgreSQL/TePGInterface.h	/^		string getTimeStamp(const string& field_name) { return getTimeStamp(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
getTlabel	drivers/GTM/TeGTM.h	/^	unsigned char getTlabel(){return tlabel_;};$/;"	f	class:TeGTMTrackLogStyles
getTlayer	drivers/GTM/TeGTM.h	/^	short getTlayer(){return tlayer_;};$/;"	f	class:TeGTMTrackLogStyles
getTname	drivers/GTM/TeGTM.h	/^	char* getTname(){return tname_;};$/;"	f	class:TeGTMTrackLogStyles
getTnum	drivers/GTM/TeGTM.h	/^	unsigned char getTnum(){return tnum_;};$/;"	f	class:TeGTMInformationImages
getTnum	drivers/GTM/TeGTM.h	/^	unsigned char getTnum(){return tnum_;};$/;"	f	class:TeGTMRoutes
getTnum	drivers/GTM/TeGTM.h	/^	unsigned char getTnum(){return tnum_;};$/;"	f	class:TeGTMTrackLogs
getTokensStrs	image_processing/TePDIArithmetic.cpp	/^void TePDIArithmetic::getTokensStrs( const std::string& inputStr, $/;"	f	class:TePDIArithmetic
getTotalCount	image_processing/TePDIHistogram.cpp	/^unsigned int TePDIHistogram::getTotalCount() const$/;"	f	class:TePDIHistogram
getTrace	kernel/TeMatrix.cpp	/^double TeMatrix::getTrace() const$/;"	f	class:TeMatrix
getTransfFunction	kernel/TeRasterTransform.cpp	/^TeRasterTransform::TeRasterTransfFunctions TeRasterTransform::getTransfFunction()$/;"	f	class:TeRasterTransform
getTransparency	drivers/qt/TeDecoderQtImage.h	/^	unsigned int getTransparency()$/;"	f	class:TeDecoderQtImage
getTransparency	kernel/TeRasterTransform.h	/^	unsigned int getTransparency()$/;"	f	class:TeRasterTransform
getTruegrid	drivers/GTM/TeGTM.h	/^	bool getTruegrid(){return truegrid_;};$/;"	f	class:TeGTMHeader
getTscale	drivers/GTM/TeGTM.h	/^	float getTscale(){return tscale_;};$/;"	f	class:TeGTMTrackLogStyles
getTtype	drivers/GTM/TeGTM.h	/^	unsigned char getTtype(){return ttype_;};$/;"	f	class:TeGTMTrackLogStyles
getType	drivers/qt/TeQtCheckListItem.h	/^	ItemType getType() {return type_;}$/;"	f	class:TeQtCheckListItem
getUST	drivers/GL/dri_interface.h	/^    int (*getUST)(int64_t * ust);$/;"	m	struct:__DRIinterfaceMethodsRec
getUST	drivers/GL/internal/dri_interface.h	/^    int (*getUST)(int64_t * ust);$/;"	m	struct:__DRIinterfaceMethodsRec
getUniqueId	drivers/qt/TeQtGridSource.cpp	/^string TeQtGridSource::getUniqueId(int gridRow)$/;"	f	class:TeQtGridSource
getUniqueId	kernel/TeBaseSTInstance.h	/^	virtual vector<string>& getUniqueId() $/;"	f	class:TeBaseSTInstance
getUniqueId	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::getUniqueId(const int& i) $/;"	f	class:TeBaseSTInstance
getUpdateRasterBlock	drivers/PostgreSQL/TePostgreSQL.cpp	/^void TePostgreSQL::getUpdateRasterBlock(const string& table, const string& blockId, const TeCoord2D& ll, const TeCoord2D& ur, const int& band, const unsigned int& res, const unsigned int& subband, char* buf, const unsigned long& size, string& sql)$/;"	f	class:TePostgreSQL
getUpperLimit	image_processing/TePDIMixModelSpectralBand.cpp	/^double TePDIMixModelSpectralBand::getUpperLimit()$/;"	f	class:TePDIMixModelSpectralBand
getUser	kernel/TeConnection.cpp	/^std::string	TeConnection::getUser() const$/;"	f	class:TeConnection
getUsercolor	drivers/GTM/TeGTM.h	/^	long getUsercolor(){return usercolor_;};$/;"	f	class:TeGTMHeader
getUserfont	drivers/GTM/TeGTM.h	/^	char* getUserfont(){return userfont_;};$/;"	f	class:TeGTMHeader
getUseritalic	drivers/GTM/TeGTM.h	/^	bool getUseritalic(){return useritalic_;};$/;"	f	class:TeGTMHeader
getUsernegrit	drivers/GTM/TeGTM.h	/^	bool getUsernegrit(){return usernegrit_;};$/;"	f	class:TeGTMHeader
getUsernum	drivers/GTM/TeGTM.h	/^	unsigned char getUsernum(){return usernum_;};$/;"	f	class:TeGTMHeader
getUsersublin	drivers/GTM/TeGTM.h	/^	bool getUsersublin(){return usersublin_;};$/;"	f	class:TeGTMHeader
getUsertachado	drivers/GTM/TeGTM.h	/^	bool getUsertachado(){return usertachado_;};$/;"	f	class:TeGTMHeader
getVal	kernel/TeDecoderVirtualMemory.cpp	/^TeMemoryPage::getVal(int col,int lin, int nCols)$/;"	f	class:TeMemoryPage
getValidPluginsList	drivers/spl/PluginsManager.cpp	/^void PluginsManager::getValidPluginsList( $/;"	f	class:PluginsManager
getValue	image_processing/TePDIMtxDoubleAdpt.hpp	/^      inline void getValue( const unsigned int& lin, $/;"	f	class:TePDIMtxDoubleAdpt
getValue	kernel/TeDecoderSmartMem.h	/^  inline void getValue( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
getValueSequence	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::getValueSequence(const string& table)$/;"	f	class:TeOCIOracle
getValues	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::getValues()$/;"	f	class:TeQtGLWidget
getVarCoefMatrix	image_processing/TePDIStatistic.cpp	/^TeMatrix TePDIStatistic::getVarCoefMatrix( unsigned int pol_index )$/;"	f	class:TePDIStatistic
getVarMatrix	image_processing/TePDIStatistic.cpp	/^TeMatrix TePDIStatistic::getVarMatrix( unsigned int pol_index )$/;"	f	class:TePDIStatistic
getVariance	image_processing/TePDICluster.cpp	/^double TePDICluster::getVariance( int ind )const$/;"	f	class:TePDICluster
getVariance	image_processing/TePDIStatistic.cpp	/^double TePDIStatistic::getVariance( unsigned int raster_index,$/;"	f	class:TePDIStatistic
getVarint	drivers/SQLite/sqlite3/sqlite3.c	11626;"	d	file:
getVarint32	drivers/SQLite/sqlite3/sqlite3.c	11624;"	d	file:
getVector	drivers/Oracle/OCI/include/occiControl.h	/^void getVector( ResultSet *rs, unsigned int index, $/;"	f	namespace:oracle::occi
getVector	drivers/Oracle/OCI/include/occiControl.h	/^void getVector( ResultSet *rs, unsigned int index, OCCI_STD_NAMESPACE::vector<T$/;"	f	namespace:oracle::occi
getVector	drivers/Oracle/OCI/include/occiControl.h	/^void getVector( ResultSet *rs, unsigned int index,OCCI_STD_NAMESPACE::vector<T>$/;"	f	namespace:oracle::occi
getVector	drivers/Oracle/OCI/include/occiControl.h	/^void getVector( Statement *stmt, unsigned int index, $/;"	f	namespace:oracle::occi
getVector	drivers/Oracle/OCI/include/occiControl.h	/^void getVector( Statement *stmt, unsigned int index,$/;"	f	namespace:oracle::occi
getVector	drivers/Oracle/OCI/include/occiObjects.h	/^ void getVector(const AnyData &any, OCCI_STD_NAMESPACE::vector<T*> &vect,$/;"	f	namespace:oracle::occi
getVector	drivers/Oracle/OCI/include/occiObjects.h	/^ void getVector(const AnyData &any, OCCI_STD_NAMESPACE::vector<T> &vect,$/;"	f	namespace:oracle::occi
getVector	drivers/Oracle/OCI/include/occiObjects.h	/^ void getVector(const AnyData &any,OCCI_STD_NAMESPACE::vector< Ref<T> > &vect) $/;"	f	namespace:oracle::occi
getVectorOfRefs	drivers/Oracle/OCI/include/occiControl.h	/^void getVectorOfRefs( ResultSet *rs, unsigned int index, $/;"	f	namespace:oracle::occi
getVectorOfRefs	drivers/Oracle/OCI/include/occiControl.h	/^void getVectorOfRefs( Statement *stmt, unsigned int index, $/;"	f	namespace:oracle::occi
getVectorOfRefs	drivers/Oracle/OCI/include/occiObjects.h	/^ void getVectorOfRefs(const AnyData &any,$/;"	f	namespace:oracle::occi
getVersion	drivers/GTM/TeGTM.h	/^	short getVersion(){return version_;};$/;"	f	class:TeGTMHeader
getVersion	drivers/spl/PluginParameters.h	/^      static std::string getVersion()$/;"	f	class:PluginParameters
getView	drivers/GTM/TeGTM.h	/^	unsigned char getView(){return view_;};$/;"	f	class:TeGTMLayers
getView	drivers/qt/TeQtViewItem.h	/^	TeView*	getView() {return view_;}$/;"	f	class:TeQtViewItem
getView	kernel/TeDatabase.cpp	/^TeDatabasePortal::getView(TeView& view, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
getViewId	kernel/TeProject.cpp	/^TeProject::getViewId(int index)$/;"	f	class:TeProject
getViewItem	drivers/qt/TeQtViewsListView.cpp	/^TeQtViewItem* TeQtViewsListView::getViewItem(TeQtThemeItem *themeItem)$/;"	f	class:TeQtViewsListView
getViewItem	drivers/qt/TeQtViewsListView.cpp	/^TeQtViewItem* TeQtViewsListView::getViewItem(TeView *view)$/;"	f	class:TeQtViewsListView
getViewItemVec	drivers/qt/TeQtViewsListView.cpp	/^vector<TeQtViewItem*> TeQtViewsListView::getViewItemVec()$/;"	f	class:TeQtViewsListView
getViewNameVector	kernel/TeProject.cpp	/^TeProject::getViewNameVector()$/;"	f	class:TeProject
getViewNodeParams	kernel/TeDatabase.cpp	/^TeDatabasePortal::getViewNodeParams (TeViewNodeParams& params, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
getViewTree	kernel/TeDatabase.cpp	/^TeDatabasePortal::getViewTree ()$/;"	f	class:TeDatabasePortal
getViewVector	kernel/TeProject.h	/^	const TeViewVector& getViewVector() const$/;"	f	class:TeProject
getVisColumn	drivers/qt/TeQtGrid.cpp	/^bool TeQtGrid::getVisColumn(int col)$/;"	f	class:TeQtGrid
getVisible	drivers/DXF/tedxflayer.cpp	/^const bool TeDXFLayer::getVisible() const $/;"	f	class:TeDXFLayer
getVisual	drivers/qt/TeApplicationUtils.cpp	/^void getVisual(TeAppTheme* appTheme, TeGeomRep geomRep,$/;"	f
getVisual	drivers/qt/TePlotTheme.h	/^TeVisual getVisual(Portal* portal, TeAppTheme* appTheme, TeGeomRep GEOMREP, int resPos, int groPos, int ownPos)$/;"	f
getVisual	kernel/TeDatabase.cpp	/^TeDatabasePortal::getVisual(TeVisual* vis)$/;"	f	class:TeDatabasePortal
getVisual	kernel/TeDatabase.cpp	/^TeDatabasePortal::getVisual(TeVisual* vis, TeGeomRep& rep, const unsigned int& initIndex)$/;"	f	class:TeDatabasePortal
getVisualMap	kernel/TeLegendEntry.h	/^	TeGeomRepVisualMap& getVisualMap()$/;"	f	class:TeLegendEntry
getVisualRemote	drivers/qt/TePlotTheme.h	/^TeVisual getVisualRemote(Portal* \/* portal *\/, TeAppTheme* appTheme, TeGeomRep GEOMREP, string objId)$/;"	f
getVwt	drivers/GTM/TeGTM.h	/^	unsigned char getVwt(){return vwt_;};$/;"	f	class:TeGTMHeader
getWKBGeomColl	drivers/PostgreSQL/TePGInterface.cpp	/^void TePGRecordset::getWKBGeomColl(char* v, TeMultiGeometry &mg) const$/;"	f	class:TePGRecordset
getWKBHeader	drivers/PostgreSQL/TePGInterface.cpp	/^char* TePGRecordset::getWKBHeader(char* v, unsigned char &byteOrder, unsigned int &wkbType, unsigned int &numGeometries, int& srid) const$/;"	f	class:TePGRecordset
getWKBHeader	utils/TeWKBGeometryDecoder.cpp	/^void getWKBHeader(const char*& wkb, char& byteOrder, unsigned int& wkbType, unsigned int& numGeometries)$/;"	f
getWKBLine	drivers/PostgreSQL/TePGInterface.cpp	/^char* TePGRecordset::getWKBLine(char* v, TeLine2D& l) const$/;"	f	class:TePGRecordset
getWKBLinearRing	drivers/PostgreSQL/TePGInterface.cpp	/^char* TePGRecordset::getWKBLinearRing(char* v, int byteOrder, TeLine2D &line) const$/;"	f	class:TePGRecordset
getWKBMultiLine	drivers/PostgreSQL/TePGInterface.cpp	/^char* TePGRecordset::getWKBMultiLine(char* v, TeLineSet &ls) const$/;"	f	class:TePGRecordset
getWKBMultiPoint	drivers/PostgreSQL/TePGInterface.cpp	/^char* TePGRecordset::getWKBMultiPoint(char* v, TePointSet &ps) const$/;"	f	class:TePGRecordset
getWKBMultiPolygon	drivers/PostgreSQL/TePGInterface.cpp	/^char* TePGRecordset::getWKBMultiPolygon(char* v, TePolygonSet &ps) const$/;"	f	class:TePGRecordset
getWKBPoint	drivers/PostgreSQL/TePGInterface.cpp	/^char* TePGRecordset::getWKBPoint(char* v, TePoint& p) const$/;"	f	class:TePGRecordset
getWKBPolygon	drivers/PostgreSQL/TePGInterface.cpp	/^char* TePGRecordset::getWKBPolygon(char* v, TePolygon& p) const$/;"	f	class:TePGRecordset
getWKTDatumNameForGEOGCS	kernel/TeDatum.cpp	/^std::string TeDatum::getWKTDatumNameForGEOGCS()$/;"	f	class:TeDatum
getWKTDescription	kernel/TeDatum.cpp	/^string TeDatum::getWKTDescription()$/;"	f	class:TeDatum
getWKTLine	utils/TeWKTGeometryDecoder.cpp	/^string getWKTLine(const TeLine2D& line)$/;"	f
getWKTPoint	utils/TeWKTGeometryDecoder.cpp	/^string getWKTPoint(const TeCoord2D& pt)$/;"	f
getWalt	drivers/GTM/TeGTM.h	/^	float getWalt(){return walt_;};$/;"	f	class:TeGTMRoutes
getWalt	drivers/GTM/TeGTM.h	/^	float getWalt(){return walt_;};$/;"	f	class:TeGTMWaypoints
getWcomment	drivers/GTM/TeGTM.h	/^	char* getWcomment(){return wcomment_;};$/;"	f	class:TeGTMRoutes
getWdate	drivers/GTM/TeGTM.h	/^	long getWdate(){return wdate_;};$/;"	f	class:TeGTMWaypoints
getWeight	drivers/GTM/TeGTM.h	/^	long getWeight(){return weight_;};$/;"	f	class:TeGTMWaypointsStyles
getWeightsMatrix	image_processing/TePDIFilterMask.cpp	/^double** TePDIFilterMask::getWeightsMatrix() const$/;"	f	class:TePDIFilterMask
getWeightsParams	kernel/TeGeneralizedProxMatrix.h	/^	TeProxMatrixWeightsParams* getWeightsParams() $/;"	f	class:TeGeneralizedProxMatrix
getWhereBox	drivers/qt/TePlotTheme.h	/^string getWhereBox(Portal *plot, TeAppTheme *appTheme, Canvas *canvas, TeGeomRep rep, TeBox bbox = TeBox())$/;"	f
getWidth	drivers/MrSID/TeMrSID.cpp	/^unsigned int TeMrSIDReader::getWidth()$/;"	f	class:TeMrSIDReader
getWidth	drivers/qt/TeQtGraph.cpp	/^int TeQtGraphPlot::getWidth ()$/;"	f	class:TeQtGraphPlot
getWithinGeometry	kernel/TeComputeAttributeStrategies.cpp	/^TeQuerier* TeComputeSpatialStrategy::getWithinGeometry(TeBox box, string attribute)$/;"	f	class:TeComputeSpatialStrategy
getWlayer	drivers/GTM/TeGTM.h	/^	short getWlayer(){return wlayer_;};$/;"	f	class:TeGTMRoutes
getWlayer	drivers/GTM/TeGTM.h	/^	short getWlayer(){return wlayer_;};$/;"	f	class:TeGTMWaypoints
getWli	drivers/GTM/TeGTM.h	/^	unsigned char getWli(){return wli_;};$/;"	f	class:TeGTMHeader
getWname	drivers/GTM/TeGTM.h	/^	char* getWname(){return wname_;};$/;"	f	class:TeGTMRoutes
getWname	drivers/GTM/TeGTM.h	/^	char* getWname(){return wname_;};$/;"	f	class:TeGTMWaypoints
getWorld	drivers/MrSID/TeMrSID.cpp	/^void TeMrSIDReader::getWorld(double& x0, double& y0, double& x1, double& y1)$/;"	f	class:TeMrSIDReader
getWorld	drivers/qt/TeQtCanvas.h	/^	TeBox getWorld() {return wc_ ;}$/;"	f	class:TeQtCanvas
getWorstResolutionLevel	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::getWorstResolutionLevel(unsigned int w, unsigned int h, $/;"	f	class:TeMrSIDReader
getWptnum	drivers/GTM/TeGTM.h	/^	unsigned char getWptnum(){return wptnum_;};$/;"	f	class:TeGTMHeader
getWrot	drivers/GTM/TeGTM.h	/^	short getWrot(){return wrot_;};$/;"	f	class:TeGTMRoutes
getWrot	drivers/GTM/TeGTM.h	/^	short getWrot(){return wrot_;};$/;"	f	class:TeGTMWaypoints
getXYZcoord	drivers/Oracle/TeOCICursor.cpp	/^TeOCICursor::getXYZcoord(double& x, double& y)$/;"	f	class:TeOCICursor
get_autocommit	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
get_autocommit	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
get_auxdata	drivers/SQLite/sqlite3/sqlite3.c	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
get_auxdata	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
get_count	drivers/Firebird/ibpp/core/_ibpp.h	/^	uint32_t get_count() const$/;"	f	struct:ibpp_internals::EventBufferIterator
get_font_size	kernel/TeGraph.cpp	/^TeGraphPlot :: get_font_size(int font_number, int *w, int *h)$/;"	f	class:TeGraphPlot
get_name	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::string get_name() const$/;"	f	struct:ibpp_internals::EventBufferIterator
get_plot_fonts	kernel/TeGraph.cpp	/^TeGraphPlot :: get_plot_fonts()$/;"	f	class:TeGraphPlot
get_table	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines	file:
get_table	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines
getb	drivers/Firebird/ibpp/core/ibase.h	219;"	d
getelement_ptr_	kernel/TeDecoderMemory.h	/^	GetEleFunctPtrT getelement_ptr_;$/;"	m	class:TeDecoderMemory
getelement_ptr_	kernel/TeDecoderTIFF.h	/^	GetEleFunctPtrT getelement_ptr_;$/;"	m	class:TeDecoderTIFF
getelement_ptrs_vec_	kernel/TeDecoderSmartMem.h	/^  GetEleFunctPtrT* getelement_ptrs_vec_;$/;"	m	class:TeDecoderSmartMem
getenv	drivers/GL/glcore.h	/^    char *(CAPI *getenv)(__GLcontext *gc, const char *var);$/;"	m	struct:__GLimportsRec
getenv	drivers/GL/internal/glcore.h	/^    char *(CAPI *getenv)(__GLcontext *gc, const char *var);$/;"	m	struct:__GLimportsRec
getlabelFont	drivers/GTM/TeGTM.h	/^	char* getlabelFont(){return labelfont_;};$/;"	f	class:TeGTMHeader
getunderline	drivers/GTM/TeGTM.h	/^	unsigned char getunderline(){return underline_;};$/;"	f	class:TeGTMWaypointsStyles
ggi_mesa_context_t	drivers/GL/ggimesa.h	/^typedef struct ggi_mesa_context *ggi_mesa_context_t;$/;"	t	typeref:struct:ggi_mesa_context
gheight_	drivers/GTM/TeGTM.h	/^	float gposx_, gposy_, gwidth_, gheight_, metax_, metay_;$/;"	m	class:TeGTMInformationImages
gid	drivers/Firebird/ibpp/core/ibase.h	/^	int gid;					\/* the user's group id *\/$/;"	m	struct:__anon65
gistBoxOps_	drivers/PostgreSQL/TePostgreSQL.h	/^                std::string gistBoxOps_;$/;"	m	class:TePostgreSQL
glAccum	drivers/GL/gl_mangle.h	36;"	d
glActiveStencilFaceEXT	drivers/GL/gl_mangle.h	37;"	d
glActiveTexture	drivers/GL/gl_mangle.h	39;"	d
glActiveTextureARB	drivers/GL/gl_mangle.h	38;"	d
glAlphaFragmentOp1ATI	drivers/GL/gl_mangle.h	40;"	d
glAlphaFragmentOp2ATI	drivers/GL/gl_mangle.h	41;"	d
glAlphaFragmentOp3ATI	drivers/GL/gl_mangle.h	42;"	d
glAlphaFunc	drivers/GL/gl_mangle.h	43;"	d
glApplyTextureEXT	drivers/GL/gl_mangle.h	44;"	d
glAreProgramsResidentNV	drivers/GL/gl_mangle.h	45;"	d
glAreTexturesResident	drivers/GL/gl_mangle.h	47;"	d
glAreTexturesResidentEXT	drivers/GL/gl_mangle.h	46;"	d
glArrayElement	drivers/GL/gl_mangle.h	49;"	d
glArrayElementEXT	drivers/GL/gl_mangle.h	48;"	d
glArrayObjectATI	drivers/GL/gl_mangle.h	50;"	d
glAsyncMarkerSGIX	drivers/GL/gl_mangle.h	51;"	d
glAttachObjectARB	drivers/GL/gl_mangle.h	52;"	d
glAttachShader	drivers/GL/gl_mangle.h	53;"	d
glBegin	drivers/GL/gl_mangle.h	55;"	d
glBeginFragmentShaderATI	drivers/GL/gl_mangle.h	54;"	d
glBeginOcclusionQueryNV	drivers/GL/gl_mangle.h	56;"	d
glBeginQuery	drivers/GL/gl_mangle.h	58;"	d
glBeginQueryARB	drivers/GL/gl_mangle.h	57;"	d
glBeginVertexShaderEXT	drivers/GL/gl_mangle.h	59;"	d
glBindAttribLocation	drivers/GL/gl_mangle.h	61;"	d
glBindAttribLocationARB	drivers/GL/gl_mangle.h	60;"	d
glBindBuffer	drivers/GL/gl_mangle.h	63;"	d
glBindBufferARB	drivers/GL/gl_mangle.h	62;"	d
glBindFragmentShaderATI	drivers/GL/gl_mangle.h	64;"	d
glBindFramebufferEXT	drivers/GL/gl_mangle.h	65;"	d
glBindLightParameterEXT	drivers/GL/gl_mangle.h	66;"	d
glBindMaterialParameterEXT	drivers/GL/gl_mangle.h	67;"	d
glBindParameterEXT	drivers/GL/gl_mangle.h	68;"	d
glBindProgramARB	drivers/GL/gl_mangle.h	69;"	d
glBindProgramNV	drivers/GL/gl_mangle.h	70;"	d
glBindRenderbufferEXT	drivers/GL/gl_mangle.h	71;"	d
glBindTexGenParameterEXT	drivers/GL/gl_mangle.h	72;"	d
glBindTexture	drivers/GL/gl_mangle.h	74;"	d
glBindTextureEXT	drivers/GL/gl_mangle.h	73;"	d
glBindTextureUnitParameterEXT	drivers/GL/gl_mangle.h	75;"	d
glBindVertexArrayAPPLE	drivers/GL/gl_mangle.h	76;"	d
glBindVertexShaderEXT	drivers/GL/gl_mangle.h	77;"	d
glBinormal3bEXT	drivers/GL/gl_mangle.h	78;"	d
glBinormal3bvEXT	drivers/GL/gl_mangle.h	79;"	d
glBinormal3dEXT	drivers/GL/gl_mangle.h	80;"	d
glBinormal3dvEXT	drivers/GL/gl_mangle.h	81;"	d
glBinormal3fEXT	drivers/GL/gl_mangle.h	82;"	d
glBinormal3fvEXT	drivers/GL/gl_mangle.h	83;"	d
glBinormal3iEXT	drivers/GL/gl_mangle.h	84;"	d
glBinormal3ivEXT	drivers/GL/gl_mangle.h	85;"	d
glBinormal3sEXT	drivers/GL/gl_mangle.h	86;"	d
glBinormal3svEXT	drivers/GL/gl_mangle.h	87;"	d
glBinormalPointerEXT	drivers/GL/gl_mangle.h	88;"	d
glBitmap	drivers/GL/gl_mangle.h	89;"	d
glBlendColor	drivers/GL/gl_mangle.h	91;"	d
glBlendColorEXT	drivers/GL/gl_mangle.h	90;"	d
glBlendEquation	drivers/GL/gl_mangle.h	93;"	d
glBlendEquationEXT	drivers/GL/gl_mangle.h	92;"	d
glBlendEquationSeparate	drivers/GL/gl_mangle.h	96;"	d
glBlendEquationSeparateATI	drivers/GL/gl_mangle.h	94;"	d
glBlendEquationSeparateEXT	drivers/GL/gl_mangle.h	95;"	d
glBlendFunc	drivers/GL/gl_mangle.h	97;"	d
glBlendFuncSeparate	drivers/GL/gl_mangle.h	100;"	d
glBlendFuncSeparateEXT	drivers/GL/gl_mangle.h	98;"	d
glBlendFuncSeparateINGR	drivers/GL/gl_mangle.h	99;"	d
glBufferData	drivers/GL/gl_mangle.h	102;"	d
glBufferDataARB	drivers/GL/gl_mangle.h	101;"	d
glBufferSubData	drivers/GL/gl_mangle.h	104;"	d
glBufferSubDataARB	drivers/GL/gl_mangle.h	103;"	d
glCallList	drivers/GL/gl_mangle.h	105;"	d
glCallLists	drivers/GL/gl_mangle.h	106;"	d
glCheckFramebufferStatusEXT	drivers/GL/gl_mangle.h	107;"	d
glClampColorARB	drivers/GL/gl_mangle.h	108;"	d
glClear	drivers/GL/gl_mangle.h	113;"	d
glClearAccum	drivers/GL/gl_mangle.h	109;"	d
glClearColor	drivers/GL/gl_mangle.h	110;"	d
glClearDepth	drivers/GL/gl_mangle.h	111;"	d
glClearIndex	drivers/GL/gl_mangle.h	112;"	d
glClearStencil	drivers/GL/gl_mangle.h	114;"	d
glClientActiveTexture	drivers/GL/gl_mangle.h	116;"	d
glClientActiveTextureARB	drivers/GL/gl_mangle.h	115;"	d
glClientActiveVertexStreamATI	drivers/GL/gl_mangle.h	117;"	d
glClipPlane	drivers/GL/gl_mangle.h	118;"	d
glColor3b	drivers/GL/gl_mangle.h	119;"	d
glColor3bv	drivers/GL/gl_mangle.h	120;"	d
glColor3d	drivers/GL/gl_mangle.h	121;"	d
glColor3dv	drivers/GL/gl_mangle.h	122;"	d
glColor3f	drivers/GL/gl_mangle.h	123;"	d
glColor3fVertex3fSUN	drivers/GL/gl_mangle.h	124;"	d
glColor3fVertex3fvSUN	drivers/GL/gl_mangle.h	125;"	d
glColor3fv	drivers/GL/gl_mangle.h	126;"	d
glColor3hNV	drivers/GL/gl_mangle.h	127;"	d
glColor3hvNV	drivers/GL/gl_mangle.h	128;"	d
glColor3i	drivers/GL/gl_mangle.h	129;"	d
glColor3iv	drivers/GL/gl_mangle.h	130;"	d
glColor3s	drivers/GL/gl_mangle.h	131;"	d
glColor3sv	drivers/GL/gl_mangle.h	132;"	d
glColor3ub	drivers/GL/gl_mangle.h	133;"	d
glColor3ubv	drivers/GL/gl_mangle.h	134;"	d
glColor3ui	drivers/GL/gl_mangle.h	135;"	d
glColor3uiv	drivers/GL/gl_mangle.h	136;"	d
glColor3us	drivers/GL/gl_mangle.h	137;"	d
glColor3usv	drivers/GL/gl_mangle.h	138;"	d
glColor4b	drivers/GL/gl_mangle.h	139;"	d
glColor4bv	drivers/GL/gl_mangle.h	140;"	d
glColor4d	drivers/GL/gl_mangle.h	141;"	d
glColor4dv	drivers/GL/gl_mangle.h	142;"	d
glColor4f	drivers/GL/gl_mangle.h	143;"	d
glColor4fNormal3fVertex3fSUN	drivers/GL/gl_mangle.h	144;"	d
glColor4fNormal3fVertex3fvSUN	drivers/GL/gl_mangle.h	145;"	d
glColor4fv	drivers/GL/gl_mangle.h	146;"	d
glColor4hNV	drivers/GL/gl_mangle.h	147;"	d
glColor4hvNV	drivers/GL/gl_mangle.h	148;"	d
glColor4i	drivers/GL/gl_mangle.h	149;"	d
glColor4iv	drivers/GL/gl_mangle.h	150;"	d
glColor4s	drivers/GL/gl_mangle.h	151;"	d
glColor4sv	drivers/GL/gl_mangle.h	152;"	d
glColor4ub	drivers/GL/gl_mangle.h	153;"	d
glColor4ubVertex2fSUN	drivers/GL/gl_mangle.h	154;"	d
glColor4ubVertex2fvSUN	drivers/GL/gl_mangle.h	155;"	d
glColor4ubVertex3fSUN	drivers/GL/gl_mangle.h	156;"	d
glColor4ubVertex3fvSUN	drivers/GL/gl_mangle.h	157;"	d
glColor4ubv	drivers/GL/gl_mangle.h	158;"	d
glColor4ui	drivers/GL/gl_mangle.h	159;"	d
glColor4uiv	drivers/GL/gl_mangle.h	160;"	d
glColor4us	drivers/GL/gl_mangle.h	161;"	d
glColor4usv	drivers/GL/gl_mangle.h	162;"	d
glColorFragmentOp1ATI	drivers/GL/gl_mangle.h	163;"	d
glColorFragmentOp2ATI	drivers/GL/gl_mangle.h	164;"	d
glColorFragmentOp3ATI	drivers/GL/gl_mangle.h	165;"	d
glColorMask	drivers/GL/gl_mangle.h	166;"	d
glColorMaterial	drivers/GL/gl_mangle.h	167;"	d
glColorPointer	drivers/GL/gl_mangle.h	170;"	d
glColorPointerEXT	drivers/GL/gl_mangle.h	168;"	d
glColorPointerListIBM	drivers/GL/gl_mangle.h	169;"	d
glColorPointervINTEL	drivers/GL/gl_mangle.h	171;"	d
glColorSubTable	drivers/GL/gl_mangle.h	173;"	d
glColorSubTableEXT	drivers/GL/gl_mangle.h	172;"	d
glColorTable	drivers/GL/gl_mangle.h	175;"	d
glColorTableEXT	drivers/GL/gl_mangle.h	174;"	d
glColorTableParameterfv	drivers/GL/gl_mangle.h	176;"	d
glColorTableParameterfvSGI	drivers/GL/gl_mangle.h	177;"	d
glColorTableParameteriv	drivers/GL/gl_mangle.h	178;"	d
glColorTableParameterivSGI	drivers/GL/gl_mangle.h	179;"	d
glColorTableSGI	drivers/GL/gl_mangle.h	180;"	d
glCombinerInputNV	drivers/GL/gl_mangle.h	181;"	d
glCombinerOutputNV	drivers/GL/gl_mangle.h	182;"	d
glCombinerParameterfNV	drivers/GL/gl_mangle.h	183;"	d
glCombinerParameterfvNV	drivers/GL/gl_mangle.h	184;"	d
glCombinerParameteriNV	drivers/GL/gl_mangle.h	185;"	d
glCombinerParameterivNV	drivers/GL/gl_mangle.h	186;"	d
glCombinerStageParameterfvNV	drivers/GL/gl_mangle.h	187;"	d
glCompileShader	drivers/GL/gl_mangle.h	189;"	d
glCompileShaderARB	drivers/GL/gl_mangle.h	188;"	d
glCompressedTexImage1D	drivers/GL/gl_mangle.h	191;"	d
glCompressedTexImage1DARB	drivers/GL/gl_mangle.h	190;"	d
glCompressedTexImage2D	drivers/GL/gl_mangle.h	193;"	d
glCompressedTexImage2DARB	drivers/GL/gl_mangle.h	192;"	d
glCompressedTexImage3D	drivers/GL/gl_mangle.h	195;"	d
glCompressedTexImage3DARB	drivers/GL/gl_mangle.h	194;"	d
glCompressedTexSubImage1D	drivers/GL/gl_mangle.h	197;"	d
glCompressedTexSubImage1DARB	drivers/GL/gl_mangle.h	196;"	d
glCompressedTexSubImage2D	drivers/GL/gl_mangle.h	199;"	d
glCompressedTexSubImage2DARB	drivers/GL/gl_mangle.h	198;"	d
glCompressedTexSubImage3D	drivers/GL/gl_mangle.h	201;"	d
glCompressedTexSubImage3DARB	drivers/GL/gl_mangle.h	200;"	d
glConvolutionFilter1D	drivers/GL/gl_mangle.h	203;"	d
glConvolutionFilter1DEXT	drivers/GL/gl_mangle.h	202;"	d
glConvolutionFilter2D	drivers/GL/gl_mangle.h	205;"	d
glConvolutionFilter2DEXT	drivers/GL/gl_mangle.h	204;"	d
glConvolutionParameterf	drivers/GL/gl_mangle.h	207;"	d
glConvolutionParameterfEXT	drivers/GL/gl_mangle.h	206;"	d
glConvolutionParameterfv	drivers/GL/gl_mangle.h	209;"	d
glConvolutionParameterfvEXT	drivers/GL/gl_mangle.h	208;"	d
glConvolutionParameteri	drivers/GL/gl_mangle.h	211;"	d
glConvolutionParameteriEXT	drivers/GL/gl_mangle.h	210;"	d
glConvolutionParameteriv	drivers/GL/gl_mangle.h	213;"	d
glConvolutionParameterivEXT	drivers/GL/gl_mangle.h	212;"	d
glCopyColorSubTable	drivers/GL/gl_mangle.h	215;"	d
glCopyColorSubTableEXT	drivers/GL/gl_mangle.h	214;"	d
glCopyColorTable	drivers/GL/gl_mangle.h	216;"	d
glCopyColorTableSGI	drivers/GL/gl_mangle.h	217;"	d
glCopyConvolutionFilter1D	drivers/GL/gl_mangle.h	219;"	d
glCopyConvolutionFilter1DEXT	drivers/GL/gl_mangle.h	218;"	d
glCopyConvolutionFilter2D	drivers/GL/gl_mangle.h	221;"	d
glCopyConvolutionFilter2DEXT	drivers/GL/gl_mangle.h	220;"	d
glCopyPixels	drivers/GL/gl_mangle.h	222;"	d
glCopyTexImage1D	drivers/GL/gl_mangle.h	224;"	d
glCopyTexImage1DEXT	drivers/GL/gl_mangle.h	223;"	d
glCopyTexImage2D	drivers/GL/gl_mangle.h	226;"	d
glCopyTexImage2DEXT	drivers/GL/gl_mangle.h	225;"	d
glCopyTexSubImage1D	drivers/GL/gl_mangle.h	228;"	d
glCopyTexSubImage1DEXT	drivers/GL/gl_mangle.h	227;"	d
glCopyTexSubImage2D	drivers/GL/gl_mangle.h	230;"	d
glCopyTexSubImage2DEXT	drivers/GL/gl_mangle.h	229;"	d
glCopyTexSubImage3D	drivers/GL/gl_mangle.h	232;"	d
glCopyTexSubImage3DEXT	drivers/GL/gl_mangle.h	231;"	d
glCreateProgram	drivers/GL/gl_mangle.h	233;"	d
glCreateProgramObjectARB	drivers/GL/gl_mangle.h	234;"	d
glCreateShader	drivers/GL/gl_mangle.h	235;"	d
glCreateShaderObjectARB	drivers/GL/gl_mangle.h	236;"	d
glCullFace	drivers/GL/gl_mangle.h	237;"	d
glCullParameterdvEXT	drivers/GL/gl_mangle.h	238;"	d
glCullParameterfvEXT	drivers/GL/gl_mangle.h	239;"	d
glCurrentPaletteMatrixARB	drivers/GL/gl_mangle.h	240;"	d
glDeformSGIX	drivers/GL/gl_mangle.h	243;"	d
glDeformationMap3dSGIX	drivers/GL/gl_mangle.h	241;"	d
glDeformationMap3fSGIX	drivers/GL/gl_mangle.h	242;"	d
glDeleteAsyncMarkersSGIX	drivers/GL/gl_mangle.h	244;"	d
glDeleteBuffers	drivers/GL/gl_mangle.h	246;"	d
glDeleteBuffersARB	drivers/GL/gl_mangle.h	245;"	d
glDeleteFencesAPPLE	drivers/GL/gl_mangle.h	247;"	d
glDeleteFencesNV	drivers/GL/gl_mangle.h	248;"	d
glDeleteFragmentShaderATI	drivers/GL/gl_mangle.h	249;"	d
glDeleteFramebuffersEXT	drivers/GL/gl_mangle.h	250;"	d
glDeleteLists	drivers/GL/gl_mangle.h	251;"	d
glDeleteObjectARB	drivers/GL/gl_mangle.h	252;"	d
glDeleteOcclusionQueriesNV	drivers/GL/gl_mangle.h	253;"	d
glDeleteProgram	drivers/GL/gl_mangle.h	254;"	d
glDeleteProgramsARB	drivers/GL/gl_mangle.h	255;"	d
glDeleteProgramsNV	drivers/GL/gl_mangle.h	256;"	d
glDeleteQueries	drivers/GL/gl_mangle.h	258;"	d
glDeleteQueriesARB	drivers/GL/gl_mangle.h	257;"	d
glDeleteRenderbuffersEXT	drivers/GL/gl_mangle.h	259;"	d
glDeleteShader	drivers/GL/gl_mangle.h	260;"	d
glDeleteTextures	drivers/GL/gl_mangle.h	262;"	d
glDeleteTexturesEXT	drivers/GL/gl_mangle.h	261;"	d
glDeleteVertexArraysAPPLE	drivers/GL/gl_mangle.h	263;"	d
glDeleteVertexShaderEXT	drivers/GL/gl_mangle.h	264;"	d
glDepthBoundsEXT	drivers/GL/gl_mangle.h	265;"	d
glDepthFunc	drivers/GL/gl_mangle.h	266;"	d
glDepthMask	drivers/GL/gl_mangle.h	267;"	d
glDepthRange	drivers/GL/gl_mangle.h	268;"	d
glDetachObjectARB	drivers/GL/gl_mangle.h	269;"	d
glDetachShader	drivers/GL/gl_mangle.h	270;"	d
glDetailTexFuncSGIS	drivers/GL/gl_mangle.h	271;"	d
glDisable	drivers/GL/gl_mangle.h	273;"	d
glDisableClientState	drivers/GL/gl_mangle.h	272;"	d
glDisableTraceMESA	drivers/GL/gl_mangle.h	274;"	d
glDisableVariantClientStateEXT	drivers/GL/gl_mangle.h	275;"	d
glDisableVertexAttribArray	drivers/GL/gl_mangle.h	277;"	d
glDisableVertexAttribArrayARB	drivers/GL/gl_mangle.h	276;"	d
glDrawArrays	drivers/GL/gl_mangle.h	279;"	d
glDrawArraysEXT	drivers/GL/gl_mangle.h	278;"	d
glDrawBuffer	drivers/GL/gl_mangle.h	280;"	d
glDrawBuffers	drivers/GL/gl_mangle.h	283;"	d
glDrawBuffersARB	drivers/GL/gl_mangle.h	281;"	d
glDrawBuffersATI	drivers/GL/gl_mangle.h	282;"	d
glDrawElementArrayAPPLE	drivers/GL/gl_mangle.h	284;"	d
glDrawElementArrayATI	drivers/GL/gl_mangle.h	285;"	d
glDrawElements	drivers/GL/gl_mangle.h	286;"	d
glDrawMeshArraysSUN	drivers/GL/gl_mangle.h	287;"	d
glDrawPixels	drivers/GL/gl_mangle.h	288;"	d
glDrawRangeElementArrayAPPLE	drivers/GL/gl_mangle.h	289;"	d
glDrawRangeElementArrayATI	drivers/GL/gl_mangle.h	290;"	d
glDrawRangeElements	drivers/GL/gl_mangle.h	292;"	d
glDrawRangeElementsEXT	drivers/GL/gl_mangle.h	291;"	d
glEdgeFlag	drivers/GL/gl_mangle.h	293;"	d
glEdgeFlagPointer	drivers/GL/gl_mangle.h	296;"	d
glEdgeFlagPointerEXT	drivers/GL/gl_mangle.h	294;"	d
glEdgeFlagPointerListIBM	drivers/GL/gl_mangle.h	295;"	d
glEdgeFlagv	drivers/GL/gl_mangle.h	297;"	d
glElementPointerAPPLE	drivers/GL/gl_mangle.h	298;"	d
glElementPointerATI	drivers/GL/gl_mangle.h	299;"	d
glEnable	drivers/GL/gl_mangle.h	301;"	d
glEnableClientState	drivers/GL/gl_mangle.h	300;"	d
glEnableTraceMESA	drivers/GL/gl_mangle.h	302;"	d
glEnableVariantClientStateEXT	drivers/GL/gl_mangle.h	303;"	d
glEnableVertexAttribArray	drivers/GL/gl_mangle.h	305;"	d
glEnableVertexAttribArrayARB	drivers/GL/gl_mangle.h	304;"	d
glEnd	drivers/GL/gl_mangle.h	308;"	d
glEndFragmentShaderATI	drivers/GL/gl_mangle.h	306;"	d
glEndList	drivers/GL/gl_mangle.h	307;"	d
glEndOcclusionQueryNV	drivers/GL/gl_mangle.h	309;"	d
glEndQuery	drivers/GL/gl_mangle.h	311;"	d
glEndQueryARB	drivers/GL/gl_mangle.h	310;"	d
glEndTraceMESA	drivers/GL/gl_mangle.h	312;"	d
glEndVertexShaderEXT	drivers/GL/gl_mangle.h	313;"	d
glEvalCoord1d	drivers/GL/gl_mangle.h	314;"	d
glEvalCoord1dv	drivers/GL/gl_mangle.h	315;"	d
glEvalCoord1f	drivers/GL/gl_mangle.h	316;"	d
glEvalCoord1fv	drivers/GL/gl_mangle.h	317;"	d
glEvalCoord2d	drivers/GL/gl_mangle.h	318;"	d
glEvalCoord2dv	drivers/GL/gl_mangle.h	319;"	d
glEvalCoord2f	drivers/GL/gl_mangle.h	320;"	d
glEvalCoord2fv	drivers/GL/gl_mangle.h	321;"	d
glEvalMapsNV	drivers/GL/gl_mangle.h	322;"	d
glEvalMesh1	drivers/GL/gl_mangle.h	323;"	d
glEvalMesh2	drivers/GL/gl_mangle.h	324;"	d
glEvalPoint1	drivers/GL/gl_mangle.h	325;"	d
glEvalPoint2	drivers/GL/gl_mangle.h	326;"	d
glExecuteProgramNV	drivers/GL/gl_mangle.h	327;"	d
glExtractComponentEXT	drivers/GL/gl_mangle.h	328;"	d
glFeedbackBuffer	drivers/GL/gl_mangle.h	329;"	d
glFinalCombinerInputNV	drivers/GL/gl_mangle.h	330;"	d
glFinish	drivers/GL/gl_mangle.h	334;"	d
glFinishAsyncSGIX	drivers/GL/gl_mangle.h	331;"	d
glFinishFenceAPPLE	drivers/GL/gl_mangle.h	332;"	d
glFinishFenceNV	drivers/GL/gl_mangle.h	333;"	d
glFinishObjectAPPLE	drivers/GL/gl_mangle.h	335;"	d
glFinishTextureSUNX	drivers/GL/gl_mangle.h	336;"	d
glFlush	drivers/GL/gl_mangle.h	337;"	d
glFlushPixelDataRangeNV	drivers/GL/gl_mangle.h	338;"	d
glFlushRasterSGIX	drivers/GL/gl_mangle.h	339;"	d
glFlushVertexArrayRangeAPPLE	drivers/GL/gl_mangle.h	340;"	d
glFlushVertexArrayRangeNV	drivers/GL/gl_mangle.h	341;"	d
glFogCoordPointer	drivers/GL/gl_mangle.h	354;"	d
glFogCoordPointerEXT	drivers/GL/gl_mangle.h	352;"	d
glFogCoordPointerListIBM	drivers/GL/gl_mangle.h	353;"	d
glFogCoordd	drivers/GL/gl_mangle.h	343;"	d
glFogCoorddEXT	drivers/GL/gl_mangle.h	342;"	d
glFogCoorddv	drivers/GL/gl_mangle.h	345;"	d
glFogCoorddvEXT	drivers/GL/gl_mangle.h	344;"	d
glFogCoordf	drivers/GL/gl_mangle.h	347;"	d
glFogCoordfEXT	drivers/GL/gl_mangle.h	346;"	d
glFogCoordfv	drivers/GL/gl_mangle.h	349;"	d
glFogCoordfvEXT	drivers/GL/gl_mangle.h	348;"	d
glFogCoordhNV	drivers/GL/gl_mangle.h	350;"	d
glFogCoordhvNV	drivers/GL/gl_mangle.h	351;"	d
glFogFuncSGIS	drivers/GL/gl_mangle.h	356;"	d
glFogf	drivers/GL/gl_mangle.h	355;"	d
glFogfv	drivers/GL/gl_mangle.h	357;"	d
glFogi	drivers/GL/gl_mangle.h	358;"	d
glFogiv	drivers/GL/gl_mangle.h	359;"	d
glFragmentColorMaterialSGIX	drivers/GL/gl_mangle.h	360;"	d
glFragmentLightModelfSGIX	drivers/GL/gl_mangle.h	365;"	d
glFragmentLightModelfvSGIX	drivers/GL/gl_mangle.h	366;"	d
glFragmentLightModeliSGIX	drivers/GL/gl_mangle.h	367;"	d
glFragmentLightModelivSGIX	drivers/GL/gl_mangle.h	368;"	d
glFragmentLightfSGIX	drivers/GL/gl_mangle.h	361;"	d
glFragmentLightfvSGIX	drivers/GL/gl_mangle.h	362;"	d
glFragmentLightiSGIX	drivers/GL/gl_mangle.h	363;"	d
glFragmentLightivSGIX	drivers/GL/gl_mangle.h	364;"	d
glFragmentMaterialfSGIX	drivers/GL/gl_mangle.h	369;"	d
glFragmentMaterialfvSGIX	drivers/GL/gl_mangle.h	370;"	d
glFragmentMaterialiSGIX	drivers/GL/gl_mangle.h	371;"	d
glFragmentMaterialivSGIX	drivers/GL/gl_mangle.h	372;"	d
glFrameZoomSGIX	drivers/GL/gl_mangle.h	377;"	d
glFramebufferRenderbufferEXT	drivers/GL/gl_mangle.h	373;"	d
glFramebufferTexture1DEXT	drivers/GL/gl_mangle.h	374;"	d
glFramebufferTexture2DEXT	drivers/GL/gl_mangle.h	375;"	d
glFramebufferTexture3DEXT	drivers/GL/gl_mangle.h	376;"	d
glFreeObjectBufferATI	drivers/GL/gl_mangle.h	378;"	d
glFrontFace	drivers/GL/gl_mangle.h	379;"	d
glFrustum	drivers/GL/gl_mangle.h	380;"	d
glGenAsyncMarkersSGIX	drivers/GL/gl_mangle.h	381;"	d
glGenBuffers	drivers/GL/gl_mangle.h	383;"	d
glGenBuffersARB	drivers/GL/gl_mangle.h	382;"	d
glGenFencesAPPLE	drivers/GL/gl_mangle.h	385;"	d
glGenFencesNV	drivers/GL/gl_mangle.h	386;"	d
glGenFragmentShadersATI	drivers/GL/gl_mangle.h	387;"	d
glGenFramebuffersEXT	drivers/GL/gl_mangle.h	388;"	d
glGenLists	drivers/GL/gl_mangle.h	389;"	d
glGenOcclusionQueriesNV	drivers/GL/gl_mangle.h	390;"	d
glGenProgramsARB	drivers/GL/gl_mangle.h	391;"	d
glGenProgramsNV	drivers/GL/gl_mangle.h	392;"	d
glGenQueries	drivers/GL/gl_mangle.h	394;"	d
glGenQueriesARB	drivers/GL/gl_mangle.h	393;"	d
glGenRenderbuffersEXT	drivers/GL/gl_mangle.h	395;"	d
glGenSymbolsEXT	drivers/GL/gl_mangle.h	396;"	d
glGenTextures	drivers/GL/gl_mangle.h	398;"	d
glGenTexturesEXT	drivers/GL/gl_mangle.h	397;"	d
glGenVertexArraysAPPLE	drivers/GL/gl_mangle.h	399;"	d
glGenVertexShadersEXT	drivers/GL/gl_mangle.h	400;"	d
glGenerateMipmapEXT	drivers/GL/gl_mangle.h	384;"	d
glGetActiveAttrib	drivers/GL/gl_mangle.h	402;"	d
glGetActiveAttribARB	drivers/GL/gl_mangle.h	401;"	d
glGetActiveUniform	drivers/GL/gl_mangle.h	404;"	d
glGetActiveUniformARB	drivers/GL/gl_mangle.h	403;"	d
glGetArrayObjectfvATI	drivers/GL/gl_mangle.h	405;"	d
glGetArrayObjectivATI	drivers/GL/gl_mangle.h	406;"	d
glGetAttachedObjectsARB	drivers/GL/gl_mangle.h	407;"	d
glGetAttachedShaders	drivers/GL/gl_mangle.h	408;"	d
glGetAttribLocation	drivers/GL/gl_mangle.h	410;"	d
glGetAttribLocationARB	drivers/GL/gl_mangle.h	409;"	d
glGetBooleanv	drivers/GL/gl_mangle.h	411;"	d
glGetBufferParameteriv	drivers/GL/gl_mangle.h	413;"	d
glGetBufferParameterivARB	drivers/GL/gl_mangle.h	412;"	d
glGetBufferPointerv	drivers/GL/gl_mangle.h	415;"	d
glGetBufferPointervARB	drivers/GL/gl_mangle.h	414;"	d
glGetBufferSubData	drivers/GL/gl_mangle.h	417;"	d
glGetBufferSubDataARB	drivers/GL/gl_mangle.h	416;"	d
glGetClipPlane	drivers/GL/gl_mangle.h	418;"	d
glGetColorTable	drivers/GL/gl_mangle.h	420;"	d
glGetColorTableEXT	drivers/GL/gl_mangle.h	419;"	d
glGetColorTableParameterfv	drivers/GL/gl_mangle.h	422;"	d
glGetColorTableParameterfvEXT	drivers/GL/gl_mangle.h	421;"	d
glGetColorTableParameterfvSGI	drivers/GL/gl_mangle.h	423;"	d
glGetColorTableParameteriv	drivers/GL/gl_mangle.h	425;"	d
glGetColorTableParameterivEXT	drivers/GL/gl_mangle.h	424;"	d
glGetColorTableParameterivSGI	drivers/GL/gl_mangle.h	426;"	d
glGetColorTableSGI	drivers/GL/gl_mangle.h	427;"	d
glGetCombinerInputParameterfvNV	drivers/GL/gl_mangle.h	428;"	d
glGetCombinerInputParameterivNV	drivers/GL/gl_mangle.h	429;"	d
glGetCombinerOutputParameterfvNV	drivers/GL/gl_mangle.h	430;"	d
glGetCombinerOutputParameterivNV	drivers/GL/gl_mangle.h	431;"	d
glGetCombinerStageParameterfvNV	drivers/GL/gl_mangle.h	432;"	d
glGetCompressedTexImage	drivers/GL/gl_mangle.h	434;"	d
glGetCompressedTexImageARB	drivers/GL/gl_mangle.h	433;"	d
glGetConvolutionFilter	drivers/GL/gl_mangle.h	436;"	d
glGetConvolutionFilterEXT	drivers/GL/gl_mangle.h	435;"	d
glGetConvolutionParameterfv	drivers/GL/gl_mangle.h	438;"	d
glGetConvolutionParameterfvEXT	drivers/GL/gl_mangle.h	437;"	d
glGetConvolutionParameteriv	drivers/GL/gl_mangle.h	440;"	d
glGetConvolutionParameterivEXT	drivers/GL/gl_mangle.h	439;"	d
glGetDetailTexFuncSGIS	drivers/GL/gl_mangle.h	441;"	d
glGetDoublev	drivers/GL/gl_mangle.h	442;"	d
glGetError	drivers/GL/gl_mangle.h	443;"	d
glGetFenceivNV	drivers/GL/gl_mangle.h	444;"	d
glGetFinalCombinerInputParameterfvNV	drivers/GL/gl_mangle.h	445;"	d
glGetFinalCombinerInputParameterivNV	drivers/GL/gl_mangle.h	446;"	d
glGetFloatv	drivers/GL/gl_mangle.h	447;"	d
glGetFogFuncSGIS	drivers/GL/gl_mangle.h	448;"	d
glGetFragmentLightfvSGIX	drivers/GL/gl_mangle.h	449;"	d
glGetFragmentLightivSGIX	drivers/GL/gl_mangle.h	450;"	d
glGetFragmentMaterialfvSGIX	drivers/GL/gl_mangle.h	451;"	d
glGetFragmentMaterialivSGIX	drivers/GL/gl_mangle.h	452;"	d
glGetFramebufferAttachmentParameterivEXT	drivers/GL/gl_mangle.h	453;"	d
glGetHandleARB	drivers/GL/gl_mangle.h	454;"	d
glGetHistogram	drivers/GL/gl_mangle.h	456;"	d
glGetHistogramEXT	drivers/GL/gl_mangle.h	455;"	d
glGetHistogramParameterfv	drivers/GL/gl_mangle.h	458;"	d
glGetHistogramParameterfvEXT	drivers/GL/gl_mangle.h	457;"	d
glGetHistogramParameteriv	drivers/GL/gl_mangle.h	460;"	d
glGetHistogramParameterivEXT	drivers/GL/gl_mangle.h	459;"	d
glGetImageTransformParameterfvHP	drivers/GL/gl_mangle.h	461;"	d
glGetImageTransformParameterivHP	drivers/GL/gl_mangle.h	462;"	d
glGetInfoLogARB	drivers/GL/gl_mangle.h	463;"	d
glGetInstrumentsSGIX	drivers/GL/gl_mangle.h	464;"	d
glGetIntegerv	drivers/GL/gl_mangle.h	465;"	d
glGetInvariantBooleanvEXT	drivers/GL/gl_mangle.h	466;"	d
glGetInvariantFloatvEXT	drivers/GL/gl_mangle.h	467;"	d
glGetInvariantIntegervEXT	drivers/GL/gl_mangle.h	468;"	d
glGetLightfv	drivers/GL/gl_mangle.h	469;"	d
glGetLightiv	drivers/GL/gl_mangle.h	470;"	d
glGetListParameterfvSGIX	drivers/GL/gl_mangle.h	471;"	d
glGetListParameterivSGIX	drivers/GL/gl_mangle.h	472;"	d
glGetLocalConstantBooleanvEXT	drivers/GL/gl_mangle.h	473;"	d
glGetLocalConstantFloatvEXT	drivers/GL/gl_mangle.h	474;"	d
glGetLocalConstantIntegervEXT	drivers/GL/gl_mangle.h	475;"	d
glGetMapAttribParameterfvNV	drivers/GL/gl_mangle.h	476;"	d
glGetMapAttribParameterivNV	drivers/GL/gl_mangle.h	477;"	d
glGetMapControlPointsNV	drivers/GL/gl_mangle.h	478;"	d
glGetMapParameterfvNV	drivers/GL/gl_mangle.h	482;"	d
glGetMapParameterivNV	drivers/GL/gl_mangle.h	483;"	d
glGetMapdv	drivers/GL/gl_mangle.h	479;"	d
glGetMapfv	drivers/GL/gl_mangle.h	480;"	d
glGetMapiv	drivers/GL/gl_mangle.h	481;"	d
glGetMaterialfv	drivers/GL/gl_mangle.h	484;"	d
glGetMaterialiv	drivers/GL/gl_mangle.h	485;"	d
glGetMinmax	drivers/GL/gl_mangle.h	487;"	d
glGetMinmaxEXT	drivers/GL/gl_mangle.h	486;"	d
glGetMinmaxParameterfv	drivers/GL/gl_mangle.h	489;"	d
glGetMinmaxParameterfvEXT	drivers/GL/gl_mangle.h	488;"	d
glGetMinmaxParameteriv	drivers/GL/gl_mangle.h	491;"	d
glGetMinmaxParameterivEXT	drivers/GL/gl_mangle.h	490;"	d
glGetObjectBufferfvATI	drivers/GL/gl_mangle.h	492;"	d
glGetObjectBufferivATI	drivers/GL/gl_mangle.h	493;"	d
glGetObjectParameterfvARB	drivers/GL/gl_mangle.h	494;"	d
glGetObjectParameterivARB	drivers/GL/gl_mangle.h	495;"	d
glGetOcclusionQueryivNV	drivers/GL/gl_mangle.h	496;"	d
glGetOcclusionQueryuivNV	drivers/GL/gl_mangle.h	497;"	d
glGetPixelMapfv	drivers/GL/gl_mangle.h	498;"	d
glGetPixelMapuiv	drivers/GL/gl_mangle.h	499;"	d
glGetPixelMapusv	drivers/GL/gl_mangle.h	500;"	d
glGetPixelTexGenParameterfvSGIS	drivers/GL/gl_mangle.h	501;"	d
glGetPixelTexGenParameterivSGIS	drivers/GL/gl_mangle.h	502;"	d
glGetPointerv	drivers/GL/gl_mangle.h	504;"	d
glGetPointervEXT	drivers/GL/gl_mangle.h	503;"	d
glGetPolygonStipple	drivers/GL/gl_mangle.h	505;"	d
glGetProgramEnvParameterdvARB	drivers/GL/gl_mangle.h	506;"	d
glGetProgramEnvParameterfvARB	drivers/GL/gl_mangle.h	507;"	d
glGetProgramInfoLog	drivers/GL/gl_mangle.h	508;"	d
glGetProgramLocalParameterdvARB	drivers/GL/gl_mangle.h	512;"	d
glGetProgramLocalParameterfvARB	drivers/GL/gl_mangle.h	513;"	d
glGetProgramNamedParameterdvNV	drivers/GL/gl_mangle.h	514;"	d
glGetProgramNamedParameterfvNV	drivers/GL/gl_mangle.h	515;"	d
glGetProgramParameterdvNV	drivers/GL/gl_mangle.h	516;"	d
glGetProgramParameterfvNV	drivers/GL/gl_mangle.h	517;"	d
glGetProgramRegisterfvMESA	drivers/GL/gl_mangle.h	518;"	d
glGetProgramStringARB	drivers/GL/gl_mangle.h	519;"	d
glGetProgramStringNV	drivers/GL/gl_mangle.h	520;"	d
glGetProgramiv	drivers/GL/gl_mangle.h	510;"	d
glGetProgramivARB	drivers/GL/gl_mangle.h	509;"	d
glGetProgramivNV	drivers/GL/gl_mangle.h	511;"	d
glGetQueryObjecti64vEXT	drivers/GL/gl_mangle.h	523;"	d
glGetQueryObjectiv	drivers/GL/gl_mangle.h	525;"	d
glGetQueryObjectivARB	drivers/GL/gl_mangle.h	524;"	d
glGetQueryObjectui64vEXT	drivers/GL/gl_mangle.h	526;"	d
glGetQueryObjectuiv	drivers/GL/gl_mangle.h	528;"	d
glGetQueryObjectuivARB	drivers/GL/gl_mangle.h	527;"	d
glGetQueryiv	drivers/GL/gl_mangle.h	522;"	d
glGetQueryivARB	drivers/GL/gl_mangle.h	521;"	d
glGetRenderbufferParameterivEXT	drivers/GL/gl_mangle.h	529;"	d
glGetSeparableFilter	drivers/GL/gl_mangle.h	531;"	d
glGetSeparableFilterEXT	drivers/GL/gl_mangle.h	530;"	d
glGetShaderInfoLog	drivers/GL/gl_mangle.h	532;"	d
glGetShaderSource	drivers/GL/gl_mangle.h	535;"	d
glGetShaderSourceARB	drivers/GL/gl_mangle.h	534;"	d
glGetShaderiv	drivers/GL/gl_mangle.h	533;"	d
glGetSharpenTexFuncSGIS	drivers/GL/gl_mangle.h	536;"	d
glGetString	drivers/GL/gl_mangle.h	537;"	d
glGetTexBumpParameterfvATI	drivers/GL/gl_mangle.h	538;"	d
glGetTexBumpParameterivATI	drivers/GL/gl_mangle.h	539;"	d
glGetTexEnvfv	drivers/GL/gl_mangle.h	540;"	d
glGetTexEnviv	drivers/GL/gl_mangle.h	541;"	d
glGetTexFilterFuncSGIS	drivers/GL/gl_mangle.h	542;"	d
glGetTexGendv	drivers/GL/gl_mangle.h	543;"	d
glGetTexGenfv	drivers/GL/gl_mangle.h	544;"	d
glGetTexGeniv	drivers/GL/gl_mangle.h	545;"	d
glGetTexImage	drivers/GL/gl_mangle.h	546;"	d
glGetTexLevelParameterfv	drivers/GL/gl_mangle.h	547;"	d
glGetTexLevelParameteriv	drivers/GL/gl_mangle.h	548;"	d
glGetTexParameterfv	drivers/GL/gl_mangle.h	549;"	d
glGetTexParameteriv	drivers/GL/gl_mangle.h	550;"	d
glGetTrackMatrixivNV	drivers/GL/gl_mangle.h	551;"	d
glGetUniformLocation	drivers/GL/gl_mangle.h	557;"	d
glGetUniformLocationARB	drivers/GL/gl_mangle.h	556;"	d
glGetUniformfv	drivers/GL/gl_mangle.h	553;"	d
glGetUniformfvARB	drivers/GL/gl_mangle.h	552;"	d
glGetUniformiv	drivers/GL/gl_mangle.h	555;"	d
glGetUniformivARB	drivers/GL/gl_mangle.h	554;"	d
glGetVariantArrayObjectfvATI	drivers/GL/gl_mangle.h	558;"	d
glGetVariantArrayObjectivATI	drivers/GL/gl_mangle.h	559;"	d
glGetVariantBooleanvEXT	drivers/GL/gl_mangle.h	560;"	d
glGetVariantFloatvEXT	drivers/GL/gl_mangle.h	561;"	d
glGetVariantIntegervEXT	drivers/GL/gl_mangle.h	562;"	d
glGetVariantPointervEXT	drivers/GL/gl_mangle.h	563;"	d
glGetVertexAttribArrayObjectfvATI	drivers/GL/gl_mangle.h	564;"	d
glGetVertexAttribArrayObjectivATI	drivers/GL/gl_mangle.h	565;"	d
glGetVertexAttribPointerv	drivers/GL/gl_mangle.h	576;"	d
glGetVertexAttribPointervARB	drivers/GL/gl_mangle.h	575;"	d
glGetVertexAttribPointervNV	drivers/GL/gl_mangle.h	577;"	d
glGetVertexAttribdv	drivers/GL/gl_mangle.h	567;"	d
glGetVertexAttribdvARB	drivers/GL/gl_mangle.h	566;"	d
glGetVertexAttribdvNV	drivers/GL/gl_mangle.h	568;"	d
glGetVertexAttribfv	drivers/GL/gl_mangle.h	570;"	d
glGetVertexAttribfvARB	drivers/GL/gl_mangle.h	569;"	d
glGetVertexAttribfvNV	drivers/GL/gl_mangle.h	571;"	d
glGetVertexAttribiv	drivers/GL/gl_mangle.h	573;"	d
glGetVertexAttribivARB	drivers/GL/gl_mangle.h	572;"	d
glGetVertexAttribivNV	drivers/GL/gl_mangle.h	574;"	d
glGlobalAlphaFactorbSUN	drivers/GL/gl_mangle.h	578;"	d
glGlobalAlphaFactordSUN	drivers/GL/gl_mangle.h	579;"	d
glGlobalAlphaFactorfSUN	drivers/GL/gl_mangle.h	580;"	d
glGlobalAlphaFactoriSUN	drivers/GL/gl_mangle.h	581;"	d
glGlobalAlphaFactorsSUN	drivers/GL/gl_mangle.h	582;"	d
glGlobalAlphaFactorubSUN	drivers/GL/gl_mangle.h	583;"	d
glGlobalAlphaFactoruiSUN	drivers/GL/gl_mangle.h	584;"	d
glGlobalAlphaFactorusSUN	drivers/GL/gl_mangle.h	585;"	d
glHint	drivers/GL/gl_mangle.h	586;"	d
glHintPGI	drivers/GL/gl_mangle.h	587;"	d
glHistogram	drivers/GL/gl_mangle.h	589;"	d
glHistogramEXT	drivers/GL/gl_mangle.h	588;"	d
glIglooInterfaceSGIX	drivers/GL/gl_mangle.h	590;"	d
glImageTransformParameterfHP	drivers/GL/gl_mangle.h	591;"	d
glImageTransformParameterfvHP	drivers/GL/gl_mangle.h	592;"	d
glImageTransformParameteriHP	drivers/GL/gl_mangle.h	593;"	d
glImageTransformParameterivHP	drivers/GL/gl_mangle.h	594;"	d
glIndexFuncEXT	drivers/GL/gl_mangle.h	598;"	d
glIndexMask	drivers/GL/gl_mangle.h	602;"	d
glIndexMaterialEXT	drivers/GL/gl_mangle.h	603;"	d
glIndexPointer	drivers/GL/gl_mangle.h	606;"	d
glIndexPointerEXT	drivers/GL/gl_mangle.h	604;"	d
glIndexPointerListIBM	drivers/GL/gl_mangle.h	605;"	d
glIndexd	drivers/GL/gl_mangle.h	595;"	d
glIndexdv	drivers/GL/gl_mangle.h	596;"	d
glIndexf	drivers/GL/gl_mangle.h	597;"	d
glIndexfv	drivers/GL/gl_mangle.h	599;"	d
glIndexi	drivers/GL/gl_mangle.h	600;"	d
glIndexiv	drivers/GL/gl_mangle.h	601;"	d
glIndexs	drivers/GL/gl_mangle.h	607;"	d
glIndexsv	drivers/GL/gl_mangle.h	608;"	d
glIndexub	drivers/GL/gl_mangle.h	609;"	d
glIndexubv	drivers/GL/gl_mangle.h	610;"	d
glInitNames	drivers/GL/gl_mangle.h	611;"	d
glInsertComponentEXT	drivers/GL/gl_mangle.h	612;"	d
glInstrumentsBufferSGIX	drivers/GL/gl_mangle.h	613;"	d
glInterleavedArrays	drivers/GL/gl_mangle.h	614;"	d
glIsAsyncMarkerSGIX	drivers/GL/gl_mangle.h	615;"	d
glIsBuffer	drivers/GL/gl_mangle.h	617;"	d
glIsBufferARB	drivers/GL/gl_mangle.h	616;"	d
glIsEnabled	drivers/GL/gl_mangle.h	618;"	d
glIsFenceAPPLE	drivers/GL/gl_mangle.h	619;"	d
glIsFenceNV	drivers/GL/gl_mangle.h	620;"	d
glIsFramebufferEXT	drivers/GL/gl_mangle.h	621;"	d
glIsList	drivers/GL/gl_mangle.h	622;"	d
glIsObjectBufferATI	drivers/GL/gl_mangle.h	623;"	d
glIsOcclusionQueryNV	drivers/GL/gl_mangle.h	624;"	d
glIsProgram	drivers/GL/gl_mangle.h	626;"	d
glIsProgramARB	drivers/GL/gl_mangle.h	625;"	d
glIsProgramNV	drivers/GL/gl_mangle.h	627;"	d
glIsQuery	drivers/GL/gl_mangle.h	629;"	d
glIsQueryARB	drivers/GL/gl_mangle.h	628;"	d
glIsRenderbufferEXT	drivers/GL/gl_mangle.h	630;"	d
glIsShader	drivers/GL/gl_mangle.h	631;"	d
glIsTexture	drivers/GL/gl_mangle.h	633;"	d
glIsTextureEXT	drivers/GL/gl_mangle.h	632;"	d
glIsVariantEnabledEXT	drivers/GL/gl_mangle.h	634;"	d
glIsVertexArrayAPPLE	drivers/GL/gl_mangle.h	635;"	d
glLightEnviSGIX	drivers/GL/gl_mangle.h	636;"	d
glLightModelf	drivers/GL/gl_mangle.h	641;"	d
glLightModelfv	drivers/GL/gl_mangle.h	642;"	d
glLightModeli	drivers/GL/gl_mangle.h	643;"	d
glLightModeliv	drivers/GL/gl_mangle.h	644;"	d
glLightf	drivers/GL/gl_mangle.h	637;"	d
glLightfv	drivers/GL/gl_mangle.h	638;"	d
glLighti	drivers/GL/gl_mangle.h	639;"	d
glLightiv	drivers/GL/gl_mangle.h	640;"	d
glLineStipple	drivers/GL/gl_mangle.h	645;"	d
glLineWidth	drivers/GL/gl_mangle.h	646;"	d
glLinkProgram	drivers/GL/gl_mangle.h	648;"	d
glLinkProgramARB	drivers/GL/gl_mangle.h	647;"	d
glListBase	drivers/GL/gl_mangle.h	649;"	d
glListParameterfSGIX	drivers/GL/gl_mangle.h	650;"	d
glListParameterfvSGIX	drivers/GL/gl_mangle.h	651;"	d
glListParameteriSGIX	drivers/GL/gl_mangle.h	652;"	d
glListParameterivSGIX	drivers/GL/gl_mangle.h	653;"	d
glLoadIdentity	drivers/GL/gl_mangle.h	655;"	d
glLoadIdentityDeformationMapSGIX	drivers/GL/gl_mangle.h	654;"	d
glLoadMatrixd	drivers/GL/gl_mangle.h	656;"	d
glLoadMatrixf	drivers/GL/gl_mangle.h	657;"	d
glLoadName	drivers/GL/gl_mangle.h	658;"	d
glLoadProgramNV	drivers/GL/gl_mangle.h	659;"	d
glLoadTransposeMatrixd	drivers/GL/gl_mangle.h	661;"	d
glLoadTransposeMatrixdARB	drivers/GL/gl_mangle.h	660;"	d
glLoadTransposeMatrixf	drivers/GL/gl_mangle.h	663;"	d
glLoadTransposeMatrixfARB	drivers/GL/gl_mangle.h	662;"	d
glLockArraysEXT	drivers/GL/gl_mangle.h	664;"	d
glLogicOp	drivers/GL/gl_mangle.h	665;"	d
glMap1d	drivers/GL/gl_mangle.h	666;"	d
glMap1f	drivers/GL/gl_mangle.h	667;"	d
glMap2d	drivers/GL/gl_mangle.h	668;"	d
glMap2f	drivers/GL/gl_mangle.h	669;"	d
glMapBuffer	drivers/GL/gl_mangle.h	671;"	d
glMapBufferARB	drivers/GL/gl_mangle.h	670;"	d
glMapControlPointsNV	drivers/GL/gl_mangle.h	672;"	d
glMapGrid1d	drivers/GL/gl_mangle.h	673;"	d
glMapGrid1f	drivers/GL/gl_mangle.h	674;"	d
glMapGrid2d	drivers/GL/gl_mangle.h	675;"	d
glMapGrid2f	drivers/GL/gl_mangle.h	676;"	d
glMapObjectBufferATI	drivers/GL/gl_mangle.h	677;"	d
glMapParameterfvNV	drivers/GL/gl_mangle.h	678;"	d
glMapParameterivNV	drivers/GL/gl_mangle.h	679;"	d
glMaterialf	drivers/GL/gl_mangle.h	680;"	d
glMaterialfv	drivers/GL/gl_mangle.h	681;"	d
glMateriali	drivers/GL/gl_mangle.h	682;"	d
glMaterialiv	drivers/GL/gl_mangle.h	683;"	d
glMatrixIndexPointerARB	drivers/GL/gl_mangle.h	684;"	d
glMatrixIndexubvARB	drivers/GL/gl_mangle.h	685;"	d
glMatrixIndexuivARB	drivers/GL/gl_mangle.h	686;"	d
glMatrixIndexusvARB	drivers/GL/gl_mangle.h	687;"	d
glMatrixMode	drivers/GL/gl_mangle.h	688;"	d
glMinmax	drivers/GL/gl_mangle.h	690;"	d
glMinmaxEXT	drivers/GL/gl_mangle.h	689;"	d
glMultMatrixd	drivers/GL/gl_mangle.h	771;"	d
glMultMatrixf	drivers/GL/gl_mangle.h	772;"	d
glMultTransposeMatrixd	drivers/GL/gl_mangle.h	774;"	d
glMultTransposeMatrixdARB	drivers/GL/gl_mangle.h	773;"	d
glMultTransposeMatrixf	drivers/GL/gl_mangle.h	776;"	d
glMultTransposeMatrixfARB	drivers/GL/gl_mangle.h	775;"	d
glMultiDrawArrays	drivers/GL/gl_mangle.h	692;"	d
glMultiDrawArraysEXT	drivers/GL/gl_mangle.h	691;"	d
glMultiDrawElementArrayAPPLE	drivers/GL/gl_mangle.h	693;"	d
glMultiDrawElements	drivers/GL/gl_mangle.h	695;"	d
glMultiDrawElementsEXT	drivers/GL/gl_mangle.h	694;"	d
glMultiDrawRangeElementArrayAPPLE	drivers/GL/gl_mangle.h	696;"	d
glMultiModeDrawArraysIBM	drivers/GL/gl_mangle.h	697;"	d
glMultiModeDrawElementsIBM	drivers/GL/gl_mangle.h	698;"	d
glMultiTexCoord1d	drivers/GL/gl_mangle.h	700;"	d
glMultiTexCoord1dARB	drivers/GL/gl_mangle.h	699;"	d
glMultiTexCoord1dv	drivers/GL/gl_mangle.h	702;"	d
glMultiTexCoord1dvARB	drivers/GL/gl_mangle.h	701;"	d
glMultiTexCoord1f	drivers/GL/gl_mangle.h	704;"	d
glMultiTexCoord1fARB	drivers/GL/gl_mangle.h	703;"	d
glMultiTexCoord1fv	drivers/GL/gl_mangle.h	706;"	d
glMultiTexCoord1fvARB	drivers/GL/gl_mangle.h	705;"	d
glMultiTexCoord1hNV	drivers/GL/gl_mangle.h	707;"	d
glMultiTexCoord1hvNV	drivers/GL/gl_mangle.h	708;"	d
glMultiTexCoord1i	drivers/GL/gl_mangle.h	710;"	d
glMultiTexCoord1iARB	drivers/GL/gl_mangle.h	709;"	d
glMultiTexCoord1iv	drivers/GL/gl_mangle.h	712;"	d
glMultiTexCoord1ivARB	drivers/GL/gl_mangle.h	711;"	d
glMultiTexCoord1s	drivers/GL/gl_mangle.h	714;"	d
glMultiTexCoord1sARB	drivers/GL/gl_mangle.h	713;"	d
glMultiTexCoord1sv	drivers/GL/gl_mangle.h	716;"	d
glMultiTexCoord1svARB	drivers/GL/gl_mangle.h	715;"	d
glMultiTexCoord2d	drivers/GL/gl_mangle.h	718;"	d
glMultiTexCoord2dARB	drivers/GL/gl_mangle.h	717;"	d
glMultiTexCoord2dv	drivers/GL/gl_mangle.h	720;"	d
glMultiTexCoord2dvARB	drivers/GL/gl_mangle.h	719;"	d
glMultiTexCoord2f	drivers/GL/gl_mangle.h	722;"	d
glMultiTexCoord2fARB	drivers/GL/gl_mangle.h	721;"	d
glMultiTexCoord2fv	drivers/GL/gl_mangle.h	724;"	d
glMultiTexCoord2fvARB	drivers/GL/gl_mangle.h	723;"	d
glMultiTexCoord2hNV	drivers/GL/gl_mangle.h	725;"	d
glMultiTexCoord2hvNV	drivers/GL/gl_mangle.h	726;"	d
glMultiTexCoord2i	drivers/GL/gl_mangle.h	728;"	d
glMultiTexCoord2iARB	drivers/GL/gl_mangle.h	727;"	d
glMultiTexCoord2iv	drivers/GL/gl_mangle.h	730;"	d
glMultiTexCoord2ivARB	drivers/GL/gl_mangle.h	729;"	d
glMultiTexCoord2s	drivers/GL/gl_mangle.h	732;"	d
glMultiTexCoord2sARB	drivers/GL/gl_mangle.h	731;"	d
glMultiTexCoord2sv	drivers/GL/gl_mangle.h	734;"	d
glMultiTexCoord2svARB	drivers/GL/gl_mangle.h	733;"	d
glMultiTexCoord3d	drivers/GL/gl_mangle.h	736;"	d
glMultiTexCoord3dARB	drivers/GL/gl_mangle.h	735;"	d
glMultiTexCoord3dv	drivers/GL/gl_mangle.h	738;"	d
glMultiTexCoord3dvARB	drivers/GL/gl_mangle.h	737;"	d
glMultiTexCoord3f	drivers/GL/gl_mangle.h	740;"	d
glMultiTexCoord3fARB	drivers/GL/gl_mangle.h	739;"	d
glMultiTexCoord3fv	drivers/GL/gl_mangle.h	742;"	d
glMultiTexCoord3fvARB	drivers/GL/gl_mangle.h	741;"	d
glMultiTexCoord3hNV	drivers/GL/gl_mangle.h	743;"	d
glMultiTexCoord3hvNV	drivers/GL/gl_mangle.h	744;"	d
glMultiTexCoord3i	drivers/GL/gl_mangle.h	746;"	d
glMultiTexCoord3iARB	drivers/GL/gl_mangle.h	745;"	d
glMultiTexCoord3iv	drivers/GL/gl_mangle.h	748;"	d
glMultiTexCoord3ivARB	drivers/GL/gl_mangle.h	747;"	d
glMultiTexCoord3s	drivers/GL/gl_mangle.h	750;"	d
glMultiTexCoord3sARB	drivers/GL/gl_mangle.h	749;"	d
glMultiTexCoord3sv	drivers/GL/gl_mangle.h	752;"	d
glMultiTexCoord3svARB	drivers/GL/gl_mangle.h	751;"	d
glMultiTexCoord4d	drivers/GL/gl_mangle.h	754;"	d
glMultiTexCoord4dARB	drivers/GL/gl_mangle.h	753;"	d
glMultiTexCoord4dv	drivers/GL/gl_mangle.h	756;"	d
glMultiTexCoord4dvARB	drivers/GL/gl_mangle.h	755;"	d
glMultiTexCoord4f	drivers/GL/gl_mangle.h	758;"	d
glMultiTexCoord4fARB	drivers/GL/gl_mangle.h	757;"	d
glMultiTexCoord4fv	drivers/GL/gl_mangle.h	760;"	d
glMultiTexCoord4fvARB	drivers/GL/gl_mangle.h	759;"	d
glMultiTexCoord4hNV	drivers/GL/gl_mangle.h	761;"	d
glMultiTexCoord4hvNV	drivers/GL/gl_mangle.h	762;"	d
glMultiTexCoord4i	drivers/GL/gl_mangle.h	764;"	d
glMultiTexCoord4iARB	drivers/GL/gl_mangle.h	763;"	d
glMultiTexCoord4iv	drivers/GL/gl_mangle.h	766;"	d
glMultiTexCoord4ivARB	drivers/GL/gl_mangle.h	765;"	d
glMultiTexCoord4s	drivers/GL/gl_mangle.h	768;"	d
glMultiTexCoord4sARB	drivers/GL/gl_mangle.h	767;"	d
glMultiTexCoord4sv	drivers/GL/gl_mangle.h	770;"	d
glMultiTexCoord4svARB	drivers/GL/gl_mangle.h	769;"	d
glNewList	drivers/GL/gl_mangle.h	777;"	d
glNewObjectBufferATI	drivers/GL/gl_mangle.h	778;"	d
glNewTraceMESA	drivers/GL/gl_mangle.h	779;"	d
glNormal3b	drivers/GL/gl_mangle.h	780;"	d
glNormal3bv	drivers/GL/gl_mangle.h	781;"	d
glNormal3d	drivers/GL/gl_mangle.h	782;"	d
glNormal3dv	drivers/GL/gl_mangle.h	783;"	d
glNormal3f	drivers/GL/gl_mangle.h	784;"	d
glNormal3fVertex3fSUN	drivers/GL/gl_mangle.h	785;"	d
glNormal3fVertex3fvSUN	drivers/GL/gl_mangle.h	786;"	d
glNormal3fv	drivers/GL/gl_mangle.h	787;"	d
glNormal3hNV	drivers/GL/gl_mangle.h	788;"	d
glNormal3hvNV	drivers/GL/gl_mangle.h	789;"	d
glNormal3i	drivers/GL/gl_mangle.h	790;"	d
glNormal3iv	drivers/GL/gl_mangle.h	791;"	d
glNormal3s	drivers/GL/gl_mangle.h	792;"	d
glNormal3sv	drivers/GL/gl_mangle.h	793;"	d
glNormalPointer	drivers/GL/gl_mangle.h	796;"	d
glNormalPointerEXT	drivers/GL/gl_mangle.h	794;"	d
glNormalPointerListIBM	drivers/GL/gl_mangle.h	795;"	d
glNormalPointervINTEL	drivers/GL/gl_mangle.h	797;"	d
glNormalStream3bATI	drivers/GL/gl_mangle.h	798;"	d
glNormalStream3bvATI	drivers/GL/gl_mangle.h	799;"	d
glNormalStream3dATI	drivers/GL/gl_mangle.h	800;"	d
glNormalStream3dvATI	drivers/GL/gl_mangle.h	801;"	d
glNormalStream3fATI	drivers/GL/gl_mangle.h	802;"	d
glNormalStream3fvATI	drivers/GL/gl_mangle.h	803;"	d
glNormalStream3iATI	drivers/GL/gl_mangle.h	804;"	d
glNormalStream3ivATI	drivers/GL/gl_mangle.h	805;"	d
glNormalStream3sATI	drivers/GL/gl_mangle.h	806;"	d
glNormalStream3svATI	drivers/GL/gl_mangle.h	807;"	d
glOrtho	drivers/GL/gl_mangle.h	808;"	d
glPNTrianglesfATI	drivers/GL/gl_mangle.h	829;"	d
glPNTrianglesiATI	drivers/GL/gl_mangle.h	830;"	d
glPassTexCoordATI	drivers/GL/gl_mangle.h	809;"	d
glPassThrough	drivers/GL/gl_mangle.h	810;"	d
glPixelDataRangeNV	drivers/GL/gl_mangle.h	811;"	d
glPixelMapfv	drivers/GL/gl_mangle.h	812;"	d
glPixelMapuiv	drivers/GL/gl_mangle.h	813;"	d
glPixelMapusv	drivers/GL/gl_mangle.h	814;"	d
glPixelStoref	drivers/GL/gl_mangle.h	815;"	d
glPixelStorei	drivers/GL/gl_mangle.h	816;"	d
glPixelTexGenParameterfSGIS	drivers/GL/gl_mangle.h	817;"	d
glPixelTexGenParameterfvSGIS	drivers/GL/gl_mangle.h	818;"	d
glPixelTexGenParameteriSGIS	drivers/GL/gl_mangle.h	819;"	d
glPixelTexGenParameterivSGIS	drivers/GL/gl_mangle.h	820;"	d
glPixelTexGenSGIX	drivers/GL/gl_mangle.h	821;"	d
glPixelTransferf	drivers/GL/gl_mangle.h	822;"	d
glPixelTransferi	drivers/GL/gl_mangle.h	823;"	d
glPixelTransformParameterfEXT	drivers/GL/gl_mangle.h	824;"	d
glPixelTransformParameterfvEXT	drivers/GL/gl_mangle.h	825;"	d
glPixelTransformParameteriEXT	drivers/GL/gl_mangle.h	826;"	d
glPixelTransformParameterivEXT	drivers/GL/gl_mangle.h	827;"	d
glPixelZoom	drivers/GL/gl_mangle.h	828;"	d
glPointParameterf	drivers/GL/gl_mangle.h	833;"	d
glPointParameterfARB	drivers/GL/gl_mangle.h	831;"	d
glPointParameterfEXT	drivers/GL/gl_mangle.h	832;"	d
glPointParameterfSGIS	drivers/GL/gl_mangle.h	834;"	d
glPointParameterfv	drivers/GL/gl_mangle.h	837;"	d
glPointParameterfvARB	drivers/GL/gl_mangle.h	835;"	d
glPointParameterfvEXT	drivers/GL/gl_mangle.h	836;"	d
glPointParameterfvSGIS	drivers/GL/gl_mangle.h	838;"	d
glPointParameteri	drivers/GL/gl_mangle.h	839;"	d
glPointParameteriNV	drivers/GL/gl_mangle.h	840;"	d
glPointParameteriv	drivers/GL/gl_mangle.h	841;"	d
glPointParameterivNV	drivers/GL/gl_mangle.h	842;"	d
glPointSize	drivers/GL/gl_mangle.h	843;"	d
glPollAsyncSGIX	drivers/GL/gl_mangle.h	844;"	d
glPollInstrumentsSGIX	drivers/GL/gl_mangle.h	845;"	d
glPolygonMode	drivers/GL/gl_mangle.h	846;"	d
glPolygonOffset	drivers/GL/gl_mangle.h	848;"	d
glPolygonOffsetEXT	drivers/GL/gl_mangle.h	847;"	d
glPolygonStipple	drivers/GL/gl_mangle.h	849;"	d
glPopAttrib	drivers/GL/gl_mangle.h	850;"	d
glPopClientAttrib	drivers/GL/gl_mangle.h	851;"	d
glPopMatrix	drivers/GL/gl_mangle.h	852;"	d
glPopName	drivers/GL/gl_mangle.h	853;"	d
glPrimitiveRestartIndexNV	drivers/GL/gl_mangle.h	854;"	d
glPrimitiveRestartNV	drivers/GL/gl_mangle.h	855;"	d
glPrioritizeTextures	drivers/GL/gl_mangle.h	857;"	d
glPrioritizeTexturesEXT	drivers/GL/gl_mangle.h	856;"	d
glProgramCallbackMESA	drivers/GL/gl_mangle.h	858;"	d
glProgramEnvParameter4dARB	drivers/GL/gl_mangle.h	859;"	d
glProgramEnvParameter4dvARB	drivers/GL/gl_mangle.h	860;"	d
glProgramEnvParameter4fARB	drivers/GL/gl_mangle.h	861;"	d
glProgramEnvParameter4fvARB	drivers/GL/gl_mangle.h	862;"	d
glProgramLocalParameter4dARB	drivers/GL/gl_mangle.h	863;"	d
glProgramLocalParameter4dvARB	drivers/GL/gl_mangle.h	864;"	d
glProgramLocalParameter4fARB	drivers/GL/gl_mangle.h	865;"	d
glProgramLocalParameter4fvARB	drivers/GL/gl_mangle.h	866;"	d
glProgramNamedParameter4dNV	drivers/GL/gl_mangle.h	867;"	d
glProgramNamedParameter4dvNV	drivers/GL/gl_mangle.h	868;"	d
glProgramNamedParameter4fNV	drivers/GL/gl_mangle.h	869;"	d
glProgramNamedParameter4fvNV	drivers/GL/gl_mangle.h	870;"	d
glProgramParameter4dNV	drivers/GL/gl_mangle.h	871;"	d
glProgramParameter4dvNV	drivers/GL/gl_mangle.h	872;"	d
glProgramParameter4fNV	drivers/GL/gl_mangle.h	873;"	d
glProgramParameter4fvNV	drivers/GL/gl_mangle.h	874;"	d
glProgramParameters4dvNV	drivers/GL/gl_mangle.h	875;"	d
glProgramParameters4fvNV	drivers/GL/gl_mangle.h	876;"	d
glProgramStringARB	drivers/GL/gl_mangle.h	877;"	d
glPushAttrib	drivers/GL/gl_mangle.h	878;"	d
glPushClientAttrib	drivers/GL/gl_mangle.h	879;"	d
glPushMatrix	drivers/GL/gl_mangle.h	880;"	d
glPushName	drivers/GL/gl_mangle.h	881;"	d
glRasterPos2d	drivers/GL/gl_mangle.h	882;"	d
glRasterPos2dv	drivers/GL/gl_mangle.h	883;"	d
glRasterPos2f	drivers/GL/gl_mangle.h	884;"	d
glRasterPos2fv	drivers/GL/gl_mangle.h	885;"	d
glRasterPos2i	drivers/GL/gl_mangle.h	886;"	d
glRasterPos2iv	drivers/GL/gl_mangle.h	887;"	d
glRasterPos2s	drivers/GL/gl_mangle.h	888;"	d
glRasterPos2sv	drivers/GL/gl_mangle.h	889;"	d
glRasterPos3d	drivers/GL/gl_mangle.h	890;"	d
glRasterPos3dv	drivers/GL/gl_mangle.h	891;"	d
glRasterPos3f	drivers/GL/gl_mangle.h	892;"	d
glRasterPos3fv	drivers/GL/gl_mangle.h	893;"	d
glRasterPos3i	drivers/GL/gl_mangle.h	894;"	d
glRasterPos3iv	drivers/GL/gl_mangle.h	895;"	d
glRasterPos3s	drivers/GL/gl_mangle.h	896;"	d
glRasterPos3sv	drivers/GL/gl_mangle.h	897;"	d
glRasterPos4d	drivers/GL/gl_mangle.h	898;"	d
glRasterPos4dv	drivers/GL/gl_mangle.h	899;"	d
glRasterPos4f	drivers/GL/gl_mangle.h	900;"	d
glRasterPos4fv	drivers/GL/gl_mangle.h	901;"	d
glRasterPos4i	drivers/GL/gl_mangle.h	902;"	d
glRasterPos4iv	drivers/GL/gl_mangle.h	903;"	d
glRasterPos4s	drivers/GL/gl_mangle.h	904;"	d
glRasterPos4sv	drivers/GL/gl_mangle.h	905;"	d
glReadBuffer	drivers/GL/gl_mangle.h	906;"	d
glReadInstrumentsSGIX	drivers/GL/gl_mangle.h	907;"	d
glReadPixels	drivers/GL/gl_mangle.h	908;"	d
glRectd	drivers/GL/gl_mangle.h	909;"	d
glRectdv	drivers/GL/gl_mangle.h	910;"	d
glRectf	drivers/GL/gl_mangle.h	911;"	d
glRectfv	drivers/GL/gl_mangle.h	912;"	d
glRecti	drivers/GL/gl_mangle.h	913;"	d
glRectiv	drivers/GL/gl_mangle.h	914;"	d
glRects	drivers/GL/gl_mangle.h	915;"	d
glRectsv	drivers/GL/gl_mangle.h	916;"	d
glReferencePlaneSGIX	drivers/GL/gl_mangle.h	917;"	d
glRenderMode	drivers/GL/gl_mangle.h	919;"	d
glRenderbufferStorageEXT	drivers/GL/gl_mangle.h	918;"	d
glReplacementCodePointerSUN	drivers/GL/gl_mangle.h	920;"	d
glReplacementCodeubSUN	drivers/GL/gl_mangle.h	921;"	d
glReplacementCodeubvSUN	drivers/GL/gl_mangle.h	922;"	d
glReplacementCodeuiColor3fVertex3fSUN	drivers/GL/gl_mangle.h	923;"	d
glReplacementCodeuiColor3fVertex3fvSUN	drivers/GL/gl_mangle.h	924;"	d
glReplacementCodeuiColor4fNormal3fVertex3fSUN	drivers/GL/gl_mangle.h	925;"	d
glReplacementCodeuiColor4fNormal3fVertex3fvSUN	drivers/GL/gl_mangle.h	926;"	d
glReplacementCodeuiColor4ubVertex3fSUN	drivers/GL/gl_mangle.h	927;"	d
glReplacementCodeuiColor4ubVertex3fvSUN	drivers/GL/gl_mangle.h	928;"	d
glReplacementCodeuiNormal3fVertex3fSUN	drivers/GL/gl_mangle.h	929;"	d
glReplacementCodeuiNormal3fVertex3fvSUN	drivers/GL/gl_mangle.h	930;"	d
glReplacementCodeuiSUN	drivers/GL/gl_mangle.h	931;"	d
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	drivers/GL/gl_mangle.h	932;"	d
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	drivers/GL/gl_mangle.h	933;"	d
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	drivers/GL/gl_mangle.h	934;"	d
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	drivers/GL/gl_mangle.h	935;"	d
glReplacementCodeuiTexCoord2fVertex3fSUN	drivers/GL/gl_mangle.h	936;"	d
glReplacementCodeuiTexCoord2fVertex3fvSUN	drivers/GL/gl_mangle.h	937;"	d
glReplacementCodeuiVertex3fSUN	drivers/GL/gl_mangle.h	938;"	d
glReplacementCodeuiVertex3fvSUN	drivers/GL/gl_mangle.h	939;"	d
glReplacementCodeuivSUN	drivers/GL/gl_mangle.h	940;"	d
glReplacementCodeusSUN	drivers/GL/gl_mangle.h	941;"	d
glReplacementCodeusvSUN	drivers/GL/gl_mangle.h	942;"	d
glRequestResidentProgramsNV	drivers/GL/gl_mangle.h	943;"	d
glResetHistogram	drivers/GL/gl_mangle.h	945;"	d
glResetHistogramEXT	drivers/GL/gl_mangle.h	944;"	d
glResetMinmax	drivers/GL/gl_mangle.h	947;"	d
glResetMinmaxEXT	drivers/GL/gl_mangle.h	946;"	d
glResizeBuffersMESA	drivers/GL/gl_mangle.h	948;"	d
glRotated	drivers/GL/gl_mangle.h	949;"	d
glRotatef	drivers/GL/gl_mangle.h	950;"	d
glSampleCoverage	drivers/GL/gl_mangle.h	952;"	d
glSampleCoverageARB	drivers/GL/gl_mangle.h	951;"	d
glSampleMapATI	drivers/GL/gl_mangle.h	953;"	d
glSampleMaskEXT	drivers/GL/gl_mangle.h	954;"	d
glSampleMaskSGIS	drivers/GL/gl_mangle.h	955;"	d
glSamplePatternEXT	drivers/GL/gl_mangle.h	956;"	d
glSamplePatternSGIS	drivers/GL/gl_mangle.h	957;"	d
glScaled	drivers/GL/gl_mangle.h	958;"	d
glScalef	drivers/GL/gl_mangle.h	959;"	d
glScissor	drivers/GL/gl_mangle.h	960;"	d
glSecondaryColor3b	drivers/GL/gl_mangle.h	962;"	d
glSecondaryColor3bEXT	drivers/GL/gl_mangle.h	961;"	d
glSecondaryColor3bv	drivers/GL/gl_mangle.h	964;"	d
glSecondaryColor3bvEXT	drivers/GL/gl_mangle.h	963;"	d
glSecondaryColor3d	drivers/GL/gl_mangle.h	966;"	d
glSecondaryColor3dEXT	drivers/GL/gl_mangle.h	965;"	d
glSecondaryColor3dv	drivers/GL/gl_mangle.h	968;"	d
glSecondaryColor3dvEXT	drivers/GL/gl_mangle.h	967;"	d
glSecondaryColor3f	drivers/GL/gl_mangle.h	970;"	d
glSecondaryColor3fEXT	drivers/GL/gl_mangle.h	969;"	d
glSecondaryColor3fv	drivers/GL/gl_mangle.h	972;"	d
glSecondaryColor3fvEXT	drivers/GL/gl_mangle.h	971;"	d
glSecondaryColor3hNV	drivers/GL/gl_mangle.h	973;"	d
glSecondaryColor3hvNV	drivers/GL/gl_mangle.h	974;"	d
glSecondaryColor3i	drivers/GL/gl_mangle.h	976;"	d
glSecondaryColor3iEXT	drivers/GL/gl_mangle.h	975;"	d
glSecondaryColor3iv	drivers/GL/gl_mangle.h	978;"	d
glSecondaryColor3ivEXT	drivers/GL/gl_mangle.h	977;"	d
glSecondaryColor3s	drivers/GL/gl_mangle.h	980;"	d
glSecondaryColor3sEXT	drivers/GL/gl_mangle.h	979;"	d
glSecondaryColor3sv	drivers/GL/gl_mangle.h	982;"	d
glSecondaryColor3svEXT	drivers/GL/gl_mangle.h	981;"	d
glSecondaryColor3ub	drivers/GL/gl_mangle.h	984;"	d
glSecondaryColor3ubEXT	drivers/GL/gl_mangle.h	983;"	d
glSecondaryColor3ubv	drivers/GL/gl_mangle.h	986;"	d
glSecondaryColor3ubvEXT	drivers/GL/gl_mangle.h	985;"	d
glSecondaryColor3ui	drivers/GL/gl_mangle.h	988;"	d
glSecondaryColor3uiEXT	drivers/GL/gl_mangle.h	987;"	d
glSecondaryColor3uiv	drivers/GL/gl_mangle.h	990;"	d
glSecondaryColor3uivEXT	drivers/GL/gl_mangle.h	989;"	d
glSecondaryColor3us	drivers/GL/gl_mangle.h	992;"	d
glSecondaryColor3usEXT	drivers/GL/gl_mangle.h	991;"	d
glSecondaryColor3usv	drivers/GL/gl_mangle.h	994;"	d
glSecondaryColor3usvEXT	drivers/GL/gl_mangle.h	993;"	d
glSecondaryColorPointer	drivers/GL/gl_mangle.h	997;"	d
glSecondaryColorPointerEXT	drivers/GL/gl_mangle.h	995;"	d
glSecondaryColorPointerListIBM	drivers/GL/gl_mangle.h	996;"	d
glSelectBuffer	drivers/GL/gl_mangle.h	998;"	d
glSeparableFilter2D	drivers/GL/gl_mangle.h	1000;"	d
glSeparableFilter2DEXT	drivers/GL/gl_mangle.h	999;"	d
glSetFenceAPPLE	drivers/GL/gl_mangle.h	1001;"	d
glSetFenceNV	drivers/GL/gl_mangle.h	1002;"	d
glSetFragmentShaderConstantATI	drivers/GL/gl_mangle.h	1003;"	d
glSetInvariantEXT	drivers/GL/gl_mangle.h	1004;"	d
glSetLocalConstantEXT	drivers/GL/gl_mangle.h	1005;"	d
glShadeModel	drivers/GL/gl_mangle.h	1006;"	d
glShaderOp1EXT	drivers/GL/gl_mangle.h	1007;"	d
glShaderOp2EXT	drivers/GL/gl_mangle.h	1008;"	d
glShaderOp3EXT	drivers/GL/gl_mangle.h	1009;"	d
glShaderSource	drivers/GL/gl_mangle.h	1011;"	d
glShaderSourceARB	drivers/GL/gl_mangle.h	1010;"	d
glSharpenTexFuncSGIS	drivers/GL/gl_mangle.h	1012;"	d
glSpriteParameterfSGIX	drivers/GL/gl_mangle.h	1013;"	d
glSpriteParameterfvSGIX	drivers/GL/gl_mangle.h	1014;"	d
glSpriteParameteriSGIX	drivers/GL/gl_mangle.h	1015;"	d
glSpriteParameterivSGIX	drivers/GL/gl_mangle.h	1016;"	d
glStartInstrumentsSGIX	drivers/GL/gl_mangle.h	1017;"	d
glStencilFunc	drivers/GL/gl_mangle.h	1018;"	d
glStencilFuncSeparate	drivers/GL/gl_mangle.h	1020;"	d
glStencilFuncSeparateATI	drivers/GL/gl_mangle.h	1019;"	d
glStencilMask	drivers/GL/gl_mangle.h	1021;"	d
glStencilMaskSeparate	drivers/GL/gl_mangle.h	1022;"	d
glStencilOp	drivers/GL/gl_mangle.h	1023;"	d
glStencilOpSeparate	drivers/GL/gl_mangle.h	1025;"	d
glStencilOpSeparateATI	drivers/GL/gl_mangle.h	1024;"	d
glStopInstrumentsSGIX	drivers/GL/gl_mangle.h	1026;"	d
glStringMarkerGREMEDY	drivers/GL/gl_mangle.h	1027;"	d
glSwizzleEXT	drivers/GL/gl_mangle.h	1028;"	d
glTagSampleBufferSGIX	drivers/GL/gl_mangle.h	1029;"	d
glTangent3bEXT	drivers/GL/gl_mangle.h	1030;"	d
glTangent3bvEXT	drivers/GL/gl_mangle.h	1031;"	d
glTangent3dEXT	drivers/GL/gl_mangle.h	1032;"	d
glTangent3dvEXT	drivers/GL/gl_mangle.h	1033;"	d
glTangent3fEXT	drivers/GL/gl_mangle.h	1034;"	d
glTangent3fvEXT	drivers/GL/gl_mangle.h	1035;"	d
glTangent3iEXT	drivers/GL/gl_mangle.h	1036;"	d
glTangent3ivEXT	drivers/GL/gl_mangle.h	1037;"	d
glTangent3sEXT	drivers/GL/gl_mangle.h	1038;"	d
glTangent3svEXT	drivers/GL/gl_mangle.h	1039;"	d
glTangentPointerEXT	drivers/GL/gl_mangle.h	1040;"	d
glTbufferMask3DFX	drivers/GL/gl_mangle.h	1041;"	d
glTestFenceAPPLE	drivers/GL/gl_mangle.h	1042;"	d
glTestFenceNV	drivers/GL/gl_mangle.h	1043;"	d
glTestObjectAPPLE	drivers/GL/gl_mangle.h	1044;"	d
glTexBumpParameterfvATI	drivers/GL/gl_mangle.h	1045;"	d
glTexBumpParameterivATI	drivers/GL/gl_mangle.h	1046;"	d
glTexCoord1d	drivers/GL/gl_mangle.h	1047;"	d
glTexCoord1dv	drivers/GL/gl_mangle.h	1048;"	d
glTexCoord1f	drivers/GL/gl_mangle.h	1049;"	d
glTexCoord1fv	drivers/GL/gl_mangle.h	1050;"	d
glTexCoord1hNV	drivers/GL/gl_mangle.h	1051;"	d
glTexCoord1hvNV	drivers/GL/gl_mangle.h	1052;"	d
glTexCoord1i	drivers/GL/gl_mangle.h	1053;"	d
glTexCoord1iv	drivers/GL/gl_mangle.h	1054;"	d
glTexCoord1s	drivers/GL/gl_mangle.h	1055;"	d
glTexCoord1sv	drivers/GL/gl_mangle.h	1056;"	d
glTexCoord2d	drivers/GL/gl_mangle.h	1057;"	d
glTexCoord2dv	drivers/GL/gl_mangle.h	1058;"	d
glTexCoord2f	drivers/GL/gl_mangle.h	1065;"	d
glTexCoord2fColor3fVertex3fSUN	drivers/GL/gl_mangle.h	1059;"	d
glTexCoord2fColor3fVertex3fvSUN	drivers/GL/gl_mangle.h	1060;"	d
glTexCoord2fColor4fNormal3fVertex3fSUN	drivers/GL/gl_mangle.h	1061;"	d
glTexCoord2fColor4fNormal3fVertex3fvSUN	drivers/GL/gl_mangle.h	1062;"	d
glTexCoord2fColor4ubVertex3fSUN	drivers/GL/gl_mangle.h	1063;"	d
glTexCoord2fColor4ubVertex3fvSUN	drivers/GL/gl_mangle.h	1064;"	d
glTexCoord2fNormal3fVertex3fSUN	drivers/GL/gl_mangle.h	1066;"	d
glTexCoord2fNormal3fVertex3fvSUN	drivers/GL/gl_mangle.h	1067;"	d
glTexCoord2fVertex3fSUN	drivers/GL/gl_mangle.h	1068;"	d
glTexCoord2fVertex3fvSUN	drivers/GL/gl_mangle.h	1069;"	d
glTexCoord2fv	drivers/GL/gl_mangle.h	1070;"	d
glTexCoord2hNV	drivers/GL/gl_mangle.h	1071;"	d
glTexCoord2hvNV	drivers/GL/gl_mangle.h	1072;"	d
glTexCoord2i	drivers/GL/gl_mangle.h	1073;"	d
glTexCoord2iv	drivers/GL/gl_mangle.h	1074;"	d
glTexCoord2s	drivers/GL/gl_mangle.h	1075;"	d
glTexCoord2sv	drivers/GL/gl_mangle.h	1076;"	d
glTexCoord3d	drivers/GL/gl_mangle.h	1077;"	d
glTexCoord3dv	drivers/GL/gl_mangle.h	1078;"	d
glTexCoord3f	drivers/GL/gl_mangle.h	1079;"	d
glTexCoord3fv	drivers/GL/gl_mangle.h	1080;"	d
glTexCoord3hNV	drivers/GL/gl_mangle.h	1081;"	d
glTexCoord3hvNV	drivers/GL/gl_mangle.h	1082;"	d
glTexCoord3i	drivers/GL/gl_mangle.h	1083;"	d
glTexCoord3iv	drivers/GL/gl_mangle.h	1084;"	d
glTexCoord3s	drivers/GL/gl_mangle.h	1085;"	d
glTexCoord3sv	drivers/GL/gl_mangle.h	1086;"	d
glTexCoord4d	drivers/GL/gl_mangle.h	1087;"	d
glTexCoord4dv	drivers/GL/gl_mangle.h	1088;"	d
glTexCoord4f	drivers/GL/gl_mangle.h	1091;"	d
glTexCoord4fColor4fNormal3fVertex4fSUN	drivers/GL/gl_mangle.h	1089;"	d
glTexCoord4fColor4fNormal3fVertex4fvSUN	drivers/GL/gl_mangle.h	1090;"	d
glTexCoord4fVertex4fSUN	drivers/GL/gl_mangle.h	1092;"	d
glTexCoord4fVertex4fvSUN	drivers/GL/gl_mangle.h	1093;"	d
glTexCoord4fv	drivers/GL/gl_mangle.h	1094;"	d
glTexCoord4hNV	drivers/GL/gl_mangle.h	1095;"	d
glTexCoord4hvNV	drivers/GL/gl_mangle.h	1096;"	d
glTexCoord4i	drivers/GL/gl_mangle.h	1097;"	d
glTexCoord4iv	drivers/GL/gl_mangle.h	1098;"	d
glTexCoord4s	drivers/GL/gl_mangle.h	1099;"	d
glTexCoord4sv	drivers/GL/gl_mangle.h	1100;"	d
glTexCoordPointer	drivers/GL/gl_mangle.h	1103;"	d
glTexCoordPointerEXT	drivers/GL/gl_mangle.h	1101;"	d
glTexCoordPointerListIBM	drivers/GL/gl_mangle.h	1102;"	d
glTexCoordPointervINTEL	drivers/GL/gl_mangle.h	1104;"	d
glTexEnvf	drivers/GL/gl_mangle.h	1105;"	d
glTexEnvfv	drivers/GL/gl_mangle.h	1106;"	d
glTexEnvi	drivers/GL/gl_mangle.h	1107;"	d
glTexEnviv	drivers/GL/gl_mangle.h	1108;"	d
glTexFilterFuncSGIS	drivers/GL/gl_mangle.h	1109;"	d
glTexGend	drivers/GL/gl_mangle.h	1110;"	d
glTexGendv	drivers/GL/gl_mangle.h	1111;"	d
glTexGenf	drivers/GL/gl_mangle.h	1112;"	d
glTexGenfv	drivers/GL/gl_mangle.h	1113;"	d
glTexGeni	drivers/GL/gl_mangle.h	1114;"	d
glTexGeniv	drivers/GL/gl_mangle.h	1115;"	d
glTexImage1D	drivers/GL/gl_mangle.h	1116;"	d
glTexImage2D	drivers/GL/gl_mangle.h	1117;"	d
glTexImage3D	drivers/GL/gl_mangle.h	1119;"	d
glTexImage3DEXT	drivers/GL/gl_mangle.h	1118;"	d
glTexImage4DSGIS	drivers/GL/gl_mangle.h	1120;"	d
glTexParameterf	drivers/GL/gl_mangle.h	1121;"	d
glTexParameterfv	drivers/GL/gl_mangle.h	1122;"	d
glTexParameteri	drivers/GL/gl_mangle.h	1123;"	d
glTexParameteriv	drivers/GL/gl_mangle.h	1124;"	d
glTexSubImage1D	drivers/GL/gl_mangle.h	1126;"	d
glTexSubImage1DEXT	drivers/GL/gl_mangle.h	1125;"	d
glTexSubImage2D	drivers/GL/gl_mangle.h	1128;"	d
glTexSubImage2DEXT	drivers/GL/gl_mangle.h	1127;"	d
glTexSubImage3D	drivers/GL/gl_mangle.h	1130;"	d
glTexSubImage3DEXT	drivers/GL/gl_mangle.h	1129;"	d
glTexSubImage4DSGIS	drivers/GL/gl_mangle.h	1131;"	d
glTextureColorMaskSGIS	drivers/GL/gl_mangle.h	1132;"	d
glTextureLightEXT	drivers/GL/gl_mangle.h	1133;"	d
glTextureMaterialEXT	drivers/GL/gl_mangle.h	1134;"	d
glTextureNormalEXT	drivers/GL/gl_mangle.h	1135;"	d
glTraceAssertAttribMESA	drivers/GL/gl_mangle.h	1136;"	d
glTraceCommentMESA	drivers/GL/gl_mangle.h	1137;"	d
glTraceListMESA	drivers/GL/gl_mangle.h	1138;"	d
glTracePointerMESA	drivers/GL/gl_mangle.h	1139;"	d
glTracePointerRangeMESA	drivers/GL/gl_mangle.h	1140;"	d
glTraceTextureMESA	drivers/GL/gl_mangle.h	1141;"	d
glTrackMatrixNV	drivers/GL/gl_mangle.h	1142;"	d
glTranslated	drivers/GL/gl_mangle.h	1143;"	d
glTranslatef	drivers/GL/gl_mangle.h	1144;"	d
glUniform1f	drivers/GL/gl_mangle.h	1146;"	d
glUniform1fARB	drivers/GL/gl_mangle.h	1145;"	d
glUniform1fv	drivers/GL/gl_mangle.h	1148;"	d
glUniform1fvARB	drivers/GL/gl_mangle.h	1147;"	d
glUniform1i	drivers/GL/gl_mangle.h	1150;"	d
glUniform1iARB	drivers/GL/gl_mangle.h	1149;"	d
glUniform1iv	drivers/GL/gl_mangle.h	1152;"	d
glUniform1ivARB	drivers/GL/gl_mangle.h	1151;"	d
glUniform2f	drivers/GL/gl_mangle.h	1154;"	d
glUniform2fARB	drivers/GL/gl_mangle.h	1153;"	d
glUniform2fv	drivers/GL/gl_mangle.h	1156;"	d
glUniform2fvARB	drivers/GL/gl_mangle.h	1155;"	d
glUniform2i	drivers/GL/gl_mangle.h	1158;"	d
glUniform2iARB	drivers/GL/gl_mangle.h	1157;"	d
glUniform2iv	drivers/GL/gl_mangle.h	1160;"	d
glUniform2ivARB	drivers/GL/gl_mangle.h	1159;"	d
glUniform3f	drivers/GL/gl_mangle.h	1162;"	d
glUniform3fARB	drivers/GL/gl_mangle.h	1161;"	d
glUniform3fv	drivers/GL/gl_mangle.h	1164;"	d
glUniform3fvARB	drivers/GL/gl_mangle.h	1163;"	d
glUniform3i	drivers/GL/gl_mangle.h	1166;"	d
glUniform3iARB	drivers/GL/gl_mangle.h	1165;"	d
glUniform3iv	drivers/GL/gl_mangle.h	1168;"	d
glUniform3ivARB	drivers/GL/gl_mangle.h	1167;"	d
glUniform4f	drivers/GL/gl_mangle.h	1170;"	d
glUniform4fARB	drivers/GL/gl_mangle.h	1169;"	d
glUniform4fv	drivers/GL/gl_mangle.h	1172;"	d
glUniform4fvARB	drivers/GL/gl_mangle.h	1171;"	d
glUniform4i	drivers/GL/gl_mangle.h	1174;"	d
glUniform4iARB	drivers/GL/gl_mangle.h	1173;"	d
glUniform4iv	drivers/GL/gl_mangle.h	1176;"	d
glUniform4ivARB	drivers/GL/gl_mangle.h	1175;"	d
glUniformMatrix2fv	drivers/GL/gl_mangle.h	1178;"	d
glUniformMatrix2fvARB	drivers/GL/gl_mangle.h	1177;"	d
glUniformMatrix3fv	drivers/GL/gl_mangle.h	1180;"	d
glUniformMatrix3fvARB	drivers/GL/gl_mangle.h	1179;"	d
glUniformMatrix4fv	drivers/GL/gl_mangle.h	1182;"	d
glUniformMatrix4fvARB	drivers/GL/gl_mangle.h	1181;"	d
glUnlockArraysEXT	drivers/GL/gl_mangle.h	1183;"	d
glUnmapBuffer	drivers/GL/gl_mangle.h	1185;"	d
glUnmapBufferARB	drivers/GL/gl_mangle.h	1184;"	d
glUnmapObjectBufferATI	drivers/GL/gl_mangle.h	1186;"	d
glUpdateObjectBufferATI	drivers/GL/gl_mangle.h	1187;"	d
glUseProgram	drivers/GL/gl_mangle.h	1188;"	d
glUseProgramObjectARB	drivers/GL/gl_mangle.h	1189;"	d
glValidateProgram	drivers/GL/gl_mangle.h	1191;"	d
glValidateProgramARB	drivers/GL/gl_mangle.h	1190;"	d
glVariantArrayObjectATI	drivers/GL/gl_mangle.h	1192;"	d
glVariantPointerEXT	drivers/GL/gl_mangle.h	1197;"	d
glVariantbvEXT	drivers/GL/gl_mangle.h	1193;"	d
glVariantdvEXT	drivers/GL/gl_mangle.h	1194;"	d
glVariantfvEXT	drivers/GL/gl_mangle.h	1195;"	d
glVariantivEXT	drivers/GL/gl_mangle.h	1196;"	d
glVariantsvEXT	drivers/GL/gl_mangle.h	1198;"	d
glVariantubvEXT	drivers/GL/gl_mangle.h	1199;"	d
glVariantuivEXT	drivers/GL/gl_mangle.h	1200;"	d
glVariantusvEXT	drivers/GL/gl_mangle.h	1201;"	d
glVertex2d	drivers/GL/gl_mangle.h	1202;"	d
glVertex2dv	drivers/GL/gl_mangle.h	1203;"	d
glVertex2f	drivers/GL/gl_mangle.h	1204;"	d
glVertex2fv	drivers/GL/gl_mangle.h	1205;"	d
glVertex2hNV	drivers/GL/gl_mangle.h	1206;"	d
glVertex2hvNV	drivers/GL/gl_mangle.h	1207;"	d
glVertex2i	drivers/GL/gl_mangle.h	1208;"	d
glVertex2iv	drivers/GL/gl_mangle.h	1209;"	d
glVertex2s	drivers/GL/gl_mangle.h	1210;"	d
glVertex2sv	drivers/GL/gl_mangle.h	1211;"	d
glVertex3d	drivers/GL/gl_mangle.h	1212;"	d
glVertex3dv	drivers/GL/gl_mangle.h	1213;"	d
glVertex3f	drivers/GL/gl_mangle.h	1214;"	d
glVertex3fv	drivers/GL/gl_mangle.h	1215;"	d
glVertex3hNV	drivers/GL/gl_mangle.h	1216;"	d
glVertex3hvNV	drivers/GL/gl_mangle.h	1217;"	d
glVertex3i	drivers/GL/gl_mangle.h	1218;"	d
glVertex3iv	drivers/GL/gl_mangle.h	1219;"	d
glVertex3s	drivers/GL/gl_mangle.h	1220;"	d
glVertex3sv	drivers/GL/gl_mangle.h	1221;"	d
glVertex4d	drivers/GL/gl_mangle.h	1222;"	d
glVertex4dv	drivers/GL/gl_mangle.h	1223;"	d
glVertex4f	drivers/GL/gl_mangle.h	1224;"	d
glVertex4fv	drivers/GL/gl_mangle.h	1225;"	d
glVertex4hNV	drivers/GL/gl_mangle.h	1226;"	d
glVertex4hvNV	drivers/GL/gl_mangle.h	1227;"	d
glVertex4i	drivers/GL/gl_mangle.h	1228;"	d
glVertex4iv	drivers/GL/gl_mangle.h	1229;"	d
glVertex4s	drivers/GL/gl_mangle.h	1230;"	d
glVertex4sv	drivers/GL/gl_mangle.h	1231;"	d
glVertexArrayParameteriAPPLE	drivers/GL/gl_mangle.h	1232;"	d
glVertexArrayRangeAPPLE	drivers/GL/gl_mangle.h	1233;"	d
glVertexArrayRangeNV	drivers/GL/gl_mangle.h	1234;"	d
glVertexAttrib1d	drivers/GL/gl_mangle.h	1236;"	d
glVertexAttrib1dARB	drivers/GL/gl_mangle.h	1235;"	d
glVertexAttrib1dNV	drivers/GL/gl_mangle.h	1237;"	d
glVertexAttrib1dv	drivers/GL/gl_mangle.h	1239;"	d
glVertexAttrib1dvARB	drivers/GL/gl_mangle.h	1238;"	d
glVertexAttrib1dvNV	drivers/GL/gl_mangle.h	1240;"	d
glVertexAttrib1f	drivers/GL/gl_mangle.h	1242;"	d
glVertexAttrib1fARB	drivers/GL/gl_mangle.h	1241;"	d
glVertexAttrib1fNV	drivers/GL/gl_mangle.h	1243;"	d
glVertexAttrib1fv	drivers/GL/gl_mangle.h	1245;"	d
glVertexAttrib1fvARB	drivers/GL/gl_mangle.h	1244;"	d
glVertexAttrib1fvNV	drivers/GL/gl_mangle.h	1246;"	d
glVertexAttrib1hNV	drivers/GL/gl_mangle.h	1247;"	d
glVertexAttrib1hvNV	drivers/GL/gl_mangle.h	1248;"	d
glVertexAttrib1s	drivers/GL/gl_mangle.h	1250;"	d
glVertexAttrib1sARB	drivers/GL/gl_mangle.h	1249;"	d
glVertexAttrib1sNV	drivers/GL/gl_mangle.h	1251;"	d
glVertexAttrib1sv	drivers/GL/gl_mangle.h	1253;"	d
glVertexAttrib1svARB	drivers/GL/gl_mangle.h	1252;"	d
glVertexAttrib1svNV	drivers/GL/gl_mangle.h	1254;"	d
glVertexAttrib2d	drivers/GL/gl_mangle.h	1256;"	d
glVertexAttrib2dARB	drivers/GL/gl_mangle.h	1255;"	d
glVertexAttrib2dNV	drivers/GL/gl_mangle.h	1257;"	d
glVertexAttrib2dv	drivers/GL/gl_mangle.h	1259;"	d
glVertexAttrib2dvARB	drivers/GL/gl_mangle.h	1258;"	d
glVertexAttrib2dvNV	drivers/GL/gl_mangle.h	1260;"	d
glVertexAttrib2f	drivers/GL/gl_mangle.h	1262;"	d
glVertexAttrib2fARB	drivers/GL/gl_mangle.h	1261;"	d
glVertexAttrib2fNV	drivers/GL/gl_mangle.h	1263;"	d
glVertexAttrib2fv	drivers/GL/gl_mangle.h	1265;"	d
glVertexAttrib2fvARB	drivers/GL/gl_mangle.h	1264;"	d
glVertexAttrib2fvNV	drivers/GL/gl_mangle.h	1266;"	d
glVertexAttrib2hNV	drivers/GL/gl_mangle.h	1267;"	d
glVertexAttrib2hvNV	drivers/GL/gl_mangle.h	1268;"	d
glVertexAttrib2s	drivers/GL/gl_mangle.h	1270;"	d
glVertexAttrib2sARB	drivers/GL/gl_mangle.h	1269;"	d
glVertexAttrib2sNV	drivers/GL/gl_mangle.h	1271;"	d
glVertexAttrib2sv	drivers/GL/gl_mangle.h	1273;"	d
glVertexAttrib2svARB	drivers/GL/gl_mangle.h	1272;"	d
glVertexAttrib2svNV	drivers/GL/gl_mangle.h	1274;"	d
glVertexAttrib3d	drivers/GL/gl_mangle.h	1276;"	d
glVertexAttrib3dARB	drivers/GL/gl_mangle.h	1275;"	d
glVertexAttrib3dNV	drivers/GL/gl_mangle.h	1277;"	d
glVertexAttrib3dv	drivers/GL/gl_mangle.h	1279;"	d
glVertexAttrib3dvARB	drivers/GL/gl_mangle.h	1278;"	d
glVertexAttrib3dvNV	drivers/GL/gl_mangle.h	1280;"	d
glVertexAttrib3f	drivers/GL/gl_mangle.h	1282;"	d
glVertexAttrib3fARB	drivers/GL/gl_mangle.h	1281;"	d
glVertexAttrib3fNV	drivers/GL/gl_mangle.h	1283;"	d
glVertexAttrib3fv	drivers/GL/gl_mangle.h	1285;"	d
glVertexAttrib3fvARB	drivers/GL/gl_mangle.h	1284;"	d
glVertexAttrib3fvNV	drivers/GL/gl_mangle.h	1286;"	d
glVertexAttrib3hNV	drivers/GL/gl_mangle.h	1287;"	d
glVertexAttrib3hvNV	drivers/GL/gl_mangle.h	1288;"	d
glVertexAttrib3s	drivers/GL/gl_mangle.h	1290;"	d
glVertexAttrib3sARB	drivers/GL/gl_mangle.h	1289;"	d
glVertexAttrib3sNV	drivers/GL/gl_mangle.h	1291;"	d
glVertexAttrib3sv	drivers/GL/gl_mangle.h	1293;"	d
glVertexAttrib3svARB	drivers/GL/gl_mangle.h	1292;"	d
glVertexAttrib3svNV	drivers/GL/gl_mangle.h	1294;"	d
glVertexAttrib4Nbv	drivers/GL/gl_mangle.h	1314;"	d
glVertexAttrib4NbvARB	drivers/GL/gl_mangle.h	1313;"	d
glVertexAttrib4Niv	drivers/GL/gl_mangle.h	1316;"	d
glVertexAttrib4NivARB	drivers/GL/gl_mangle.h	1315;"	d
glVertexAttrib4Nsv	drivers/GL/gl_mangle.h	1318;"	d
glVertexAttrib4NsvARB	drivers/GL/gl_mangle.h	1317;"	d
glVertexAttrib4Nub	drivers/GL/gl_mangle.h	1320;"	d
glVertexAttrib4NubARB	drivers/GL/gl_mangle.h	1319;"	d
glVertexAttrib4Nubv	drivers/GL/gl_mangle.h	1322;"	d
glVertexAttrib4NubvARB	drivers/GL/gl_mangle.h	1321;"	d
glVertexAttrib4Nuiv	drivers/GL/gl_mangle.h	1324;"	d
glVertexAttrib4NuivARB	drivers/GL/gl_mangle.h	1323;"	d
glVertexAttrib4Nusv	drivers/GL/gl_mangle.h	1326;"	d
glVertexAttrib4NusvARB	drivers/GL/gl_mangle.h	1325;"	d
glVertexAttrib4bv	drivers/GL/gl_mangle.h	1296;"	d
glVertexAttrib4bvARB	drivers/GL/gl_mangle.h	1295;"	d
glVertexAttrib4d	drivers/GL/gl_mangle.h	1298;"	d
glVertexAttrib4dARB	drivers/GL/gl_mangle.h	1297;"	d
glVertexAttrib4dNV	drivers/GL/gl_mangle.h	1299;"	d
glVertexAttrib4dv	drivers/GL/gl_mangle.h	1301;"	d
glVertexAttrib4dvARB	drivers/GL/gl_mangle.h	1300;"	d
glVertexAttrib4dvNV	drivers/GL/gl_mangle.h	1302;"	d
glVertexAttrib4f	drivers/GL/gl_mangle.h	1304;"	d
glVertexAttrib4fARB	drivers/GL/gl_mangle.h	1303;"	d
glVertexAttrib4fNV	drivers/GL/gl_mangle.h	1305;"	d
glVertexAttrib4fv	drivers/GL/gl_mangle.h	1307;"	d
glVertexAttrib4fvARB	drivers/GL/gl_mangle.h	1306;"	d
glVertexAttrib4fvNV	drivers/GL/gl_mangle.h	1308;"	d
glVertexAttrib4hNV	drivers/GL/gl_mangle.h	1309;"	d
glVertexAttrib4hvNV	drivers/GL/gl_mangle.h	1310;"	d
glVertexAttrib4iv	drivers/GL/gl_mangle.h	1312;"	d
glVertexAttrib4ivARB	drivers/GL/gl_mangle.h	1311;"	d
glVertexAttrib4s	drivers/GL/gl_mangle.h	1328;"	d
glVertexAttrib4sARB	drivers/GL/gl_mangle.h	1327;"	d
glVertexAttrib4sNV	drivers/GL/gl_mangle.h	1329;"	d
glVertexAttrib4sv	drivers/GL/gl_mangle.h	1331;"	d
glVertexAttrib4svARB	drivers/GL/gl_mangle.h	1330;"	d
glVertexAttrib4svNV	drivers/GL/gl_mangle.h	1332;"	d
glVertexAttrib4ubNV	drivers/GL/gl_mangle.h	1333;"	d
glVertexAttrib4ubv	drivers/GL/gl_mangle.h	1335;"	d
glVertexAttrib4ubvARB	drivers/GL/gl_mangle.h	1334;"	d
glVertexAttrib4ubvNV	drivers/GL/gl_mangle.h	1336;"	d
glVertexAttrib4uiv	drivers/GL/gl_mangle.h	1338;"	d
glVertexAttrib4uivARB	drivers/GL/gl_mangle.h	1337;"	d
glVertexAttrib4usv	drivers/GL/gl_mangle.h	1340;"	d
glVertexAttrib4usvARB	drivers/GL/gl_mangle.h	1339;"	d
glVertexAttribArrayObjectATI	drivers/GL/gl_mangle.h	1341;"	d
glVertexAttribPointer	drivers/GL/gl_mangle.h	1343;"	d
glVertexAttribPointerARB	drivers/GL/gl_mangle.h	1342;"	d
glVertexAttribPointerNV	drivers/GL/gl_mangle.h	1344;"	d
glVertexAttribs1dvNV	drivers/GL/gl_mangle.h	1345;"	d
glVertexAttribs1fvNV	drivers/GL/gl_mangle.h	1346;"	d
glVertexAttribs1hvNV	drivers/GL/gl_mangle.h	1347;"	d
glVertexAttribs1svNV	drivers/GL/gl_mangle.h	1348;"	d
glVertexAttribs2dvNV	drivers/GL/gl_mangle.h	1349;"	d
glVertexAttribs2fvNV	drivers/GL/gl_mangle.h	1350;"	d
glVertexAttribs2hvNV	drivers/GL/gl_mangle.h	1351;"	d
glVertexAttribs2svNV	drivers/GL/gl_mangle.h	1352;"	d
glVertexAttribs3dvNV	drivers/GL/gl_mangle.h	1353;"	d
glVertexAttribs3fvNV	drivers/GL/gl_mangle.h	1354;"	d
glVertexAttribs3hvNV	drivers/GL/gl_mangle.h	1355;"	d
glVertexAttribs3svNV	drivers/GL/gl_mangle.h	1356;"	d
glVertexAttribs4dvNV	drivers/GL/gl_mangle.h	1357;"	d
glVertexAttribs4fvNV	drivers/GL/gl_mangle.h	1358;"	d
glVertexAttribs4hvNV	drivers/GL/gl_mangle.h	1359;"	d
glVertexAttribs4svNV	drivers/GL/gl_mangle.h	1360;"	d
glVertexAttribs4ubvNV	drivers/GL/gl_mangle.h	1361;"	d
glVertexBlendARB	drivers/GL/gl_mangle.h	1362;"	d
glVertexBlendEnvfATI	drivers/GL/gl_mangle.h	1363;"	d
glVertexBlendEnviATI	drivers/GL/gl_mangle.h	1364;"	d
glVertexPointer	drivers/GL/gl_mangle.h	1367;"	d
glVertexPointerEXT	drivers/GL/gl_mangle.h	1365;"	d
glVertexPointerListIBM	drivers/GL/gl_mangle.h	1366;"	d
glVertexPointervINTEL	drivers/GL/gl_mangle.h	1368;"	d
glVertexStream1dATI	drivers/GL/gl_mangle.h	1369;"	d
glVertexStream1dvATI	drivers/GL/gl_mangle.h	1370;"	d
glVertexStream1fATI	drivers/GL/gl_mangle.h	1371;"	d
glVertexStream1fvATI	drivers/GL/gl_mangle.h	1372;"	d
glVertexStream1iATI	drivers/GL/gl_mangle.h	1373;"	d
glVertexStream1ivATI	drivers/GL/gl_mangle.h	1374;"	d
glVertexStream1sATI	drivers/GL/gl_mangle.h	1375;"	d
glVertexStream1svATI	drivers/GL/gl_mangle.h	1376;"	d
glVertexStream2dATI	drivers/GL/gl_mangle.h	1377;"	d
glVertexStream2dvATI	drivers/GL/gl_mangle.h	1378;"	d
glVertexStream2fATI	drivers/GL/gl_mangle.h	1379;"	d
glVertexStream2fvATI	drivers/GL/gl_mangle.h	1380;"	d
glVertexStream2iATI	drivers/GL/gl_mangle.h	1381;"	d
glVertexStream2ivATI	drivers/GL/gl_mangle.h	1382;"	d
glVertexStream2sATI	drivers/GL/gl_mangle.h	1383;"	d
glVertexStream2svATI	drivers/GL/gl_mangle.h	1384;"	d
glVertexStream3dATI	drivers/GL/gl_mangle.h	1385;"	d
glVertexStream3dvATI	drivers/GL/gl_mangle.h	1386;"	d
glVertexStream3fATI	drivers/GL/gl_mangle.h	1387;"	d
glVertexStream3fvATI	drivers/GL/gl_mangle.h	1388;"	d
glVertexStream3iATI	drivers/GL/gl_mangle.h	1389;"	d
glVertexStream3ivATI	drivers/GL/gl_mangle.h	1390;"	d
glVertexStream3sATI	drivers/GL/gl_mangle.h	1391;"	d
glVertexStream3svATI	drivers/GL/gl_mangle.h	1392;"	d
glVertexStream4dATI	drivers/GL/gl_mangle.h	1393;"	d
glVertexStream4dvATI	drivers/GL/gl_mangle.h	1394;"	d
glVertexStream4fATI	drivers/GL/gl_mangle.h	1395;"	d
glVertexStream4fvATI	drivers/GL/gl_mangle.h	1396;"	d
glVertexStream4iATI	drivers/GL/gl_mangle.h	1397;"	d
glVertexStream4ivATI	drivers/GL/gl_mangle.h	1398;"	d
glVertexStream4sATI	drivers/GL/gl_mangle.h	1399;"	d
glVertexStream4svATI	drivers/GL/gl_mangle.h	1400;"	d
glVertexWeightPointerEXT	drivers/GL/gl_mangle.h	1405;"	d
glVertexWeightfEXT	drivers/GL/gl_mangle.h	1401;"	d
glVertexWeightfvEXT	drivers/GL/gl_mangle.h	1402;"	d
glVertexWeighthNV	drivers/GL/gl_mangle.h	1403;"	d
glVertexWeighthvNV	drivers/GL/gl_mangle.h	1404;"	d
glViewport	drivers/GL/gl_mangle.h	1406;"	d
glWeightPointerARB	drivers/GL/gl_mangle.h	1411;"	d
glWeightbvARB	drivers/GL/gl_mangle.h	1407;"	d
glWeightdvARB	drivers/GL/gl_mangle.h	1408;"	d
glWeightfvARB	drivers/GL/gl_mangle.h	1409;"	d
glWeightivARB	drivers/GL/gl_mangle.h	1410;"	d
glWeightsvARB	drivers/GL/gl_mangle.h	1412;"	d
glWeightubvARB	drivers/GL/gl_mangle.h	1413;"	d
glWeightuivARB	drivers/GL/gl_mangle.h	1414;"	d
glWeightusvARB	drivers/GL/gl_mangle.h	1415;"	d
glWindowPos2d	drivers/GL/gl_mangle.h	1417;"	d
glWindowPos2dARB	drivers/GL/gl_mangle.h	1416;"	d
glWindowPos2dMESA	drivers/GL/gl_mangle.h	1418;"	d
glWindowPos2dv	drivers/GL/gl_mangle.h	1420;"	d
glWindowPos2dvARB	drivers/GL/gl_mangle.h	1419;"	d
glWindowPos2dvMESA	drivers/GL/gl_mangle.h	1421;"	d
glWindowPos2f	drivers/GL/gl_mangle.h	1423;"	d
glWindowPos2fARB	drivers/GL/gl_mangle.h	1422;"	d
glWindowPos2fMESA	drivers/GL/gl_mangle.h	1424;"	d
glWindowPos2fv	drivers/GL/gl_mangle.h	1426;"	d
glWindowPos2fvARB	drivers/GL/gl_mangle.h	1425;"	d
glWindowPos2fvMESA	drivers/GL/gl_mangle.h	1427;"	d
glWindowPos2i	drivers/GL/gl_mangle.h	1429;"	d
glWindowPos2iARB	drivers/GL/gl_mangle.h	1428;"	d
glWindowPos2iMESA	drivers/GL/gl_mangle.h	1430;"	d
glWindowPos2iv	drivers/GL/gl_mangle.h	1432;"	d
glWindowPos2ivARB	drivers/GL/gl_mangle.h	1431;"	d
glWindowPos2ivMESA	drivers/GL/gl_mangle.h	1433;"	d
glWindowPos2s	drivers/GL/gl_mangle.h	1435;"	d
glWindowPos2sARB	drivers/GL/gl_mangle.h	1434;"	d
glWindowPos2sMESA	drivers/GL/gl_mangle.h	1436;"	d
glWindowPos2sv	drivers/GL/gl_mangle.h	1438;"	d
glWindowPos2svARB	drivers/GL/gl_mangle.h	1437;"	d
glWindowPos2svMESA	drivers/GL/gl_mangle.h	1439;"	d
glWindowPos3d	drivers/GL/gl_mangle.h	1441;"	d
glWindowPos3dARB	drivers/GL/gl_mangle.h	1440;"	d
glWindowPos3dMESA	drivers/GL/gl_mangle.h	1442;"	d
glWindowPos3dv	drivers/GL/gl_mangle.h	1444;"	d
glWindowPos3dvARB	drivers/GL/gl_mangle.h	1443;"	d
glWindowPos3dvMESA	drivers/GL/gl_mangle.h	1445;"	d
glWindowPos3f	drivers/GL/gl_mangle.h	1447;"	d
glWindowPos3fARB	drivers/GL/gl_mangle.h	1446;"	d
glWindowPos3fMESA	drivers/GL/gl_mangle.h	1448;"	d
glWindowPos3fv	drivers/GL/gl_mangle.h	1450;"	d
glWindowPos3fvARB	drivers/GL/gl_mangle.h	1449;"	d
glWindowPos3fvMESA	drivers/GL/gl_mangle.h	1451;"	d
glWindowPos3i	drivers/GL/gl_mangle.h	1453;"	d
glWindowPos3iARB	drivers/GL/gl_mangle.h	1452;"	d
glWindowPos3iMESA	drivers/GL/gl_mangle.h	1454;"	d
glWindowPos3iv	drivers/GL/gl_mangle.h	1456;"	d
glWindowPos3ivARB	drivers/GL/gl_mangle.h	1455;"	d
glWindowPos3ivMESA	drivers/GL/gl_mangle.h	1457;"	d
glWindowPos3s	drivers/GL/gl_mangle.h	1459;"	d
glWindowPos3sARB	drivers/GL/gl_mangle.h	1458;"	d
glWindowPos3sMESA	drivers/GL/gl_mangle.h	1460;"	d
glWindowPos3sv	drivers/GL/gl_mangle.h	1462;"	d
glWindowPos3svARB	drivers/GL/gl_mangle.h	1461;"	d
glWindowPos3svMESA	drivers/GL/gl_mangle.h	1463;"	d
glWindowPos4dMESA	drivers/GL/gl_mangle.h	1464;"	d
glWindowPos4dvMESA	drivers/GL/gl_mangle.h	1465;"	d
glWindowPos4fMESA	drivers/GL/gl_mangle.h	1466;"	d
glWindowPos4fvMESA	drivers/GL/gl_mangle.h	1467;"	d
glWindowPos4iMESA	drivers/GL/gl_mangle.h	1468;"	d
glWindowPos4ivMESA	drivers/GL/gl_mangle.h	1469;"	d
glWindowPos4sMESA	drivers/GL/gl_mangle.h	1470;"	d
glWindowPos4svMESA	drivers/GL/gl_mangle.h	1471;"	d
glWriteMaskEXT	drivers/GL/gl_mangle.h	1472;"	d
glXChooseVisual	drivers/GL/glx_mangle.h	25;"	d
glXCopyContext	drivers/GL/glx_mangle.h	29;"	d
glXCopySubBufferMESA	drivers/GL/glx_mangle.h	47;"	d
glXCreateContext	drivers/GL/glx_mangle.h	26;"	d
glXCreateGLXPixmap	drivers/GL/glx_mangle.h	31;"	d
glXCreateGLXPixmapMESA	drivers/GL/glx_mangle.h	45;"	d
glXDestroyContext	drivers/GL/glx_mangle.h	27;"	d
glXDestroyGLXPixmap	drivers/GL/glx_mangle.h	32;"	d
glXGetClientString	drivers/GL/glx_mangle.h	44;"	d
glXGetConfig	drivers/GL/glx_mangle.h	36;"	d
glXGetCurrentContext	drivers/GL/glx_mangle.h	37;"	d
glXGetCurrentDrawable	drivers/GL/glx_mangle.h	38;"	d
glXGetProcAddress	drivers/GL/glx_mangle.h	52;"	d
glXGetVideoSyncSGI	drivers/GL/glx_mangle.h	48;"	d
glXIsDirect	drivers/GL/glx_mangle.h	35;"	d
glXMakeCurrent	drivers/GL/glx_mangle.h	28;"	d
glXQueryExtension	drivers/GL/glx_mangle.h	33;"	d
glXQueryExtensionsString	drivers/GL/glx_mangle.h	42;"	d
glXQueryServerString	drivers/GL/glx_mangle.h	43;"	d
glXQueryVersion	drivers/GL/glx_mangle.h	34;"	d
glXReleaseBuffersMESA	drivers/GL/glx_mangle.h	46;"	d
glXSwapBuffers	drivers/GL/glx_mangle.h	30;"	d
glXUseXFont	drivers/GL/glx_mangle.h	41;"	d
glXWaitGL	drivers/GL/glx_mangle.h	39;"	d
glXWaitVideoSyncSGI	drivers/GL/glx_mangle.h	49;"	d
glXWaitX	drivers/GL/glx_mangle.h	40;"	d
glXmulti	functions/TeImportMIF.cpp	/^double glXmulti = 1., glYmulti = 1;$/;"	v
glYmulti	functions/TeImportMIF.cpp	/^double glXmulti = 1., glYmulti = 1;$/;"	v
glbMemLockPtr_	image_processing/TePDIMMIOMatching.hpp	/^        TeMutex* glbMemLockPtr_; \/\/ To sync large memory allocations$/;"	m	struct:TePDIMMIOMatching::GenerateCorrelationFeaturesParams
glbMutexptr_	image_processing/TePDIMMIOMatching.hpp	/^          TeMutex* glbMutexptr_;  $/;"	m	class:TePDIMMIOMatching::ExtractLocalMaximasParams
glbMutexptr_	image_processing/TePDIMMIOMatching.hpp	/^          TeMutex* glbMutexptr_;$/;"	m	class:TePDIMMIOMatching::CalcCCorrelationMtxParams
glb_mem_lock_ptr_	image_processing/TePDIMMIOMatching.hpp	/^          TeMutex* glb_mem_lock_ptr_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
globInfo	drivers/SQLite/sqlite3/sqlite3.c	/^static const struct compareInfo globInfo = { '*', '?', '[', 0 };$/;"	v	typeref:struct:compareInfo	file:
globalMutexPtr_	image_processing/TePDIParaSegStrategyParams.hpp	/^      TeMutex* globalMutexPtr_;$/;"	m	class:TePDIParaSegStrategyParams
globalMutex_	image_processing/TePDIMMIOMatching.hpp	/^      TeMutex globalMutex_;$/;"	m	class:TePDIMMIOMatching
global_geom_ind_	drivers/Oracle/TeOCICursor.h	/^	SDO_GEOMETRY_ind*		global_geom_ind_[MAX_ROWS];	\/\/!< buffer to store spatial object indicator  $/;"	m	class:TeOCICursor
global_geom_obj_	drivers/Oracle/TeOCICursor.h	/^	SDO_GEOMETRY_TYPE*		global_geom_obj_[MAX_ROWS];	\/\/!< buffer to store spatial object  $/;"	m	class:TeOCICursor
global_recover	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines	file:
global_recover	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines
global_settings_	image_processing/TePDIPIManager.hpp	/^      TePDIPIManagerGlobalSettings& global_settings_;$/;"	m	class:TePDIPIManager
globalsettings	image_processing/TePDIPIManager.cpp	/^  static TePDIPIManagerGlobalSettings& globalsettings = $/;"	m	namespace:__anon13	file:
gluBeginCurve	drivers/GL/glu_mangle.h	52;"	d
gluBeginPolygon	drivers/GL/glu_mangle.h	73;"	d
gluBeginSurface	drivers/GL/glu_mangle.h	55;"	d
gluBeginTrim	drivers/GL/glu_mangle.h	58;"	d
gluBuild1DMipmapLevels	drivers/GL/glu_mangle.h	77;"	d
gluBuild1DMipmaps	drivers/GL/glu_mangle.h	34;"	d
gluBuild2DMipmapLevels	drivers/GL/glu_mangle.h	78;"	d
gluBuild2DMipmaps	drivers/GL/glu_mangle.h	35;"	d
gluBuild3DMipmapLevels	drivers/GL/glu_mangle.h	79;"	d
gluBuild3DMipmaps	drivers/GL/glu_mangle.h	80;"	d
gluCheckExtension	drivers/GL/glu_mangle.h	81;"	d
gluCylinder	drivers/GL/glu_mangle.h	43;"	d
gluDeleteNurbsRenderer	drivers/GL/glu_mangle.h	48;"	d
gluDeleteQuadric	drivers/GL/glu_mangle.h	37;"	d
gluDeleteTess	drivers/GL/glu_mangle.h	63;"	d
gluDisk	drivers/GL/glu_mangle.h	45;"	d
gluEndCurve	drivers/GL/glu_mangle.h	53;"	d
gluEndPolygon	drivers/GL/glu_mangle.h	75;"	d
gluEndSurface	drivers/GL/glu_mangle.h	56;"	d
gluEndTrim	drivers/GL/glu_mangle.h	59;"	d
gluErrorString	drivers/GL/glu_mangle.h	32;"	d
gluGetNurbsProperty	drivers/GL/glu_mangle.h	51;"	d
gluGetString	drivers/GL/glu_mangle.h	76;"	d
gluGetTessProperty	drivers/GL/glu_mangle.h	72;"	d
gluLoadSamplingMatrices	drivers/GL/glu_mangle.h	49;"	d
gluLookAt	drivers/GL/glu_mangle.h	26;"	d
gluNewNurbsRenderer	drivers/GL/glu_mangle.h	47;"	d
gluNewQuadric	drivers/GL/glu_mangle.h	36;"	d
gluNewTess	drivers/GL/glu_mangle.h	62;"	d
gluNextContour	drivers/GL/glu_mangle.h	74;"	d
gluNurbsCallback	drivers/GL/glu_mangle.h	61;"	d
gluNurbsCallbackData	drivers/GL/glu_mangle.h	83;"	d
gluNurbsCallbackDataEXT	drivers/GL/glu_mangle.h	84;"	d
gluNurbsCurve	drivers/GL/glu_mangle.h	54;"	d
gluNurbsProperty	drivers/GL/glu_mangle.h	50;"	d
gluNurbsSurface	drivers/GL/glu_mangle.h	57;"	d
gluOrtho2D	drivers/GL/glu_mangle.h	27;"	d
gluPartialDisk	drivers/GL/glu_mangle.h	46;"	d
gluPerspective	drivers/GL/glu_mangle.h	28;"	d
gluPickMatrix	drivers/GL/glu_mangle.h	29;"	d
gluProject	drivers/GL/glu_mangle.h	30;"	d
gluPwlCurve	drivers/GL/glu_mangle.h	60;"	d
gluQuadricCallback	drivers/GL/glu_mangle.h	42;"	d
gluQuadricDrawStyle	drivers/GL/glu_mangle.h	38;"	d
gluQuadricNormals	drivers/GL/glu_mangle.h	40;"	d
gluQuadricOrientation	drivers/GL/glu_mangle.h	39;"	d
gluQuadricTexture	drivers/GL/glu_mangle.h	41;"	d
gluScaleImage	drivers/GL/glu_mangle.h	33;"	d
gluSphere	drivers/GL/glu_mangle.h	44;"	d
gluTessBeginContour	drivers/GL/glu_mangle.h	65;"	d
gluTessBeginPolygon	drivers/GL/glu_mangle.h	64;"	d
gluTessCallback	drivers/GL/glu_mangle.h	71;"	d
gluTessEndContour	drivers/GL/glu_mangle.h	68;"	d
gluTessEndPolygon	drivers/GL/glu_mangle.h	67;"	d
gluTessNormal	drivers/GL/glu_mangle.h	70;"	d
gluTessProperty	drivers/GL/glu_mangle.h	69;"	d
gluTessVertex	drivers/GL/glu_mangle.h	66;"	d
gluUnProject	drivers/GL/glu_mangle.h	31;"	d
gluUnProject4	drivers/GL/glu_mangle.h	82;"	d
glutBitmap8By13	drivers/GL/glut.h	/^GLUTAPI void *glutBitmap8By13;$/;"	v
glutBitmap9By15	drivers/GL/glut.h	/^GLUTAPI void *glutBitmap9By15;$/;"	v
glutBitmapHelvetica10	drivers/GL/glut.h	/^GLUTAPI void *glutBitmapHelvetica10;$/;"	v
glutBitmapHelvetica12	drivers/GL/glut.h	/^GLUTAPI void *glutBitmapHelvetica12;$/;"	v
glutBitmapHelvetica18	drivers/GL/glut.h	/^GLUTAPI void *glutBitmapHelvetica18;$/;"	v
glutBitmapTimesRoman10	drivers/GL/glut.h	/^GLUTAPI void *glutBitmapTimesRoman10;$/;"	v
glutBitmapTimesRoman24	drivers/GL/glut.h	/^GLUTAPI void *glutBitmapTimesRoman24;$/;"	v
glutCreateMenu	drivers/GL/glut.h	599;"	d
glutCreateMenu_ATEXIT_HACK	drivers/GL/glut.h	/^static int GLUTAPIENTRY glutCreateMenu_ATEXIT_HACK(void (GLUTCALLBACK *func)(int)) { return __glutCreateMenuWithExit(func, exit); }$/;"	f
glutCreateWindow	drivers/GL/glut.h	553;"	d
glutCreateWindow_ATEXIT_HACK	drivers/GL/glut.h	/^static int GLUTAPIENTRY glutCreateWindow_ATEXIT_HACK(const char *title) { return __glutCreateWindowWithExit(title, exit); }$/;"	f
glutInit	drivers/GL/glut.h	536;"	d
glutInit_ATEXIT_HACK	drivers/GL/glut.h	/^static void GLUTAPIENTRY glutInit_ATEXIT_HACK(int *argcp, char **argv) { __glutInitWithExit(argcp, argv, exit); }$/;"	f
glutStrokeMonoRoman	drivers/GL/glut.h	/^GLUTAPI void *glutStrokeMonoRoman;$/;"	v
glutStrokeRoman	drivers/GL/glut.h	/^GLUTAPI void *glutStrokeRoman;$/;"	v
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXBindSwapBarrierSGIX
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXChangeDrawableAttributes
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXClientInfo
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXCopyContext
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXCreateContext
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXCreateContextWithConfigSGIX
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXCreateGLXPixmap
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXCreateGLXPixmapWithConfigSGIX
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXCreateNewContext
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXCreatePbuffer
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXCreatePixmap
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXCreateWindow
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXDestroyContext
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXDestroyGLXPixmap
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXDestroyPbuffer
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXDestroyPixmap
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXDestroyWindow
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXGetDrawableAttributes
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXGetFBConfigs
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXGetFBConfigsSGIX
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXGetVisualConfigs
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXIsDirect
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXJoinSwapGroupSGIX
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXMakeContextCurrent
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXMakeCurrent
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXMakeCurrentReadSGI
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXQueryContext
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXQueryContextInfoEXT
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXQueryExtensionsString
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXQueryMaxSwapBarriersSGIX
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXQueryServerString
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXQueryVersion
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXRender
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXRenderLarge
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXSingle
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXSwapBuffers
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXUseXFont
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXVendorPrivate
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXVendorPrivateWithReply
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXWaitGL
glxCode	drivers/GL/glxproto.h	/^    CARD8	glxCode;$/;"	m	struct:GLXWaitX
glxCode	drivers/GL/glxproto.h	/^    CARD8       glxCode;$/;"	m	struct:GLXDestroyHyperpipeConfigSGIX
glxCode	drivers/GL/glxproto.h	/^    CARD8       glxCode;$/;"	m	struct:GLXHyperpipeConfigSGIX
glxCode	drivers/GL/glxproto.h	/^    CARD8       glxCode;$/;"	m	struct:GLXQueryHyperpipeConfigSGIX
glxCode	drivers/GL/glxproto.h	/^    CARD8       glxCode;$/;"	m	struct:GLXQueryHyperpipeNetworkSGIX
glxpbufferclobber	drivers/GL/glx.h	/^    GLXPbufferClobberEvent glxpbufferclobber;$/;"	m	union:__GLXEvent
goDown	kernel/dynpq.h	/^	void dynamic_priority_queue<key_type>::goDown(index_type idx)$/;"	f	class:br_stl::dynamic_priority_queue
goToEditNewCell	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::goToEditNewCell()$/;"	f	class:TeQtGrid
goToLastColumn	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::goToLastColumn()$/;"	f	class:TeQtGrid
goToLastLine	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::goToLastLine()$/;"	f	class:TeQtGrid
goUp	kernel/dynpq.h	/^	void dynamic_priority_queue<key_type>::goUp(index_type idx)$/;"	f	class:br_stl::dynamic_priority_queue
gpm_id_	kernel/TeGeneralizedProxMatrix.h	/^	int						gpm_id_;	$/;"	m	class:TeGeneralizedProxMatrix
gposx_	drivers/GTM/TeGTM.h	/^	float gposx_, gposy_, gwidth_, gheight_, metax_, metay_;$/;"	m	class:TeGTMInformationImages
gposy_	drivers/GTM/TeGTM.h	/^	float gposx_, gposy_, gwidth_, gheight_, metax_, metay_;$/;"	m	class:TeGTMInformationImages
gradcolor_	drivers/GTM/TeGTM.h	/^	long gradcolor_, bcolor_, nwptstyles_, usercolor_, nwpts_, ntrcks_, nrtes_, n_maps_, n_tk_, labelcolor_;$/;"	m	class:TeGTMHeader
gradfont_	drivers/GTM/TeGTM.h	/^	char *gradfont_, *labelfont_, *userfont_, *newdatum_;$/;"	m	class:TeGTMHeader
gradnum_	drivers/GTM/TeGTM.h	/^	unsigned char wli_, vwt_, gradnum_, wptnum_, usernum_, coriml_, ndatum_;$/;"	m	class:TeGTMHeader
graph_	kernel/TeNetwork.h	/^	br_stl::Graph<TeNode, double>	graph_;$/;"	m	class:TeGraphNetwork
graph_	kernel/TeNetwork.h	/^	br_stl::Graph<TeNode, double>	graph_;$/;"	m	class:TeNetwork
graph_	kernel/TeProxMatrixImplementation.h	/^	br_stl::Graph<string, TeProxMatrixAttributes> graph_;$/;"	m	class:TeProxMatrixGraphBreymann
graphicScaleRect	drivers/qt/TeQtCanvas.h	/^	QRect& graphicScaleRect() { return graphicScaleRect_;}$/;"	f	class:TeQtCanvas
graphicScaleRect_	drivers/qt/TeQtCanvas.h	/^	QRect	graphicScaleRect_;$/;"	m	class:TeQtCanvas
greenBits	drivers/GL/glcore.h	/^    GLint redBits, greenBits, blueBits, alphaBits;	\/* bits per comp *\/$/;"	m	struct:__GLcontextModesRec
greenBits	drivers/GL/glxint.h	/^    GLint redBits, greenBits, blueBits, alphaBits;$/;"	m	struct:__GLXFBConfigRec
greenBits	drivers/GL/internal/glcore.h	/^    GLint redBits, greenBits, blueBits, alphaBits;	\/* bits per comp *\/$/;"	m	struct:__GLcontextModesRec
greenMask	drivers/GL/glcore.h	/^    GLuint redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLcontextModesRec
greenMask	drivers/GL/glxint.h	/^    GLuint redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLXFBConfigRec
greenMask	drivers/GL/glxint.h	/^    unsigned long redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLXvisualConfigRec
greenMask	drivers/GL/internal/glcore.h	/^    GLuint redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLcontextModesRec
greenSize	drivers/GL/glxint.h	/^    int redSize, greenSize, blueSize, alphaSize;$/;"	m	struct:__GLXvisualConfigRec
green_	image_processing/TePDIRgbPaletteNode.hpp	/^      unsigned int green_;$/;"	m	class:TePDIRgbPaletteNode
green_	kernel/TeVisual.h	/^	int green_; 	$/;"	m	struct:TeColor
green_size	drivers/GL/directfbgl.h	/^     int        green_size;$/;"	m	struct:__anon175
grid	kernel/TeGraph.cpp	/^	char grid[4];$/;"	m	struct:Opt	file:
grid	kernel/TeGraph.cpp	/^    TeColor grid;                \/* color of plot grid         *\/$/;"	m	struct:Grc	file:
grid2PortalColVec	drivers/qt/TeQtGridSource.h	/^	vector<int>& grid2PortalColVec() { return grid2PortalColVec_; }$/;"	f	class:TeQtGridSource
grid2PortalColVec_	drivers/qt/TeQtGridSource.h	/^	vector<int> grid2PortalColVec_;$/;"	m	class:TeQtGridSource
grid2PortalRowVec	drivers/qt/TeQtGridSource.h	/^	vector<int>& grid2PortalRowVec() { return grid2PortalRowVec_; }$/;"	f	class:TeQtGridSource
grid2PortalRowVec_	drivers/qt/TeQtGridSource.h	/^	vector<int> grid2PortalRowVec_;$/;"	m	class:TeQtGridSource
gridColVisVector_	drivers/qt/TeQtGrid.h	/^	vector<bool>			gridColVisVector_;$/;"	m	class:TeQtGrid
gridColorsVec	drivers/qt/TeQtGridSource.h	/^	vector<QColor>& gridColorsVec() { return gridColorsVec_; }$/;"	f	class:TeQtGridSource
gridColorsVec_	drivers/qt/TeQtGridSource.h	/^	vector<QColor> gridColorsVec_;$/;"	m	class:TeQtGridSource
gridHeight_	drivers/qt/TeQtGrid.h	/^	int						gridWidth_, gridHeight_;$/;"	m	class:TeQtGrid
gridHeight_	drivers/qt/TeQtTable.h	/^	int					gridWidth_, gridHeight_;$/;"	m	class:TeQtTable
gridInformation	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::gridInformation()$/;"	f	class:TeQtGrid
gridKey	kernel/TeGridIndex.h	/^		typedef pair<int, int> gridKey;							$/;"	t	class:TeSAM::TeGridIndex
gridStatusPos_	drivers/qt/TeQtGrid.h	/^	int						gridStatusPos_;$/;"	m	class:TeQtGrid
gridToPortalColVector_	drivers/qt/TeQtGrid.h	/^	vector<int>				gridToPortalColVector_;$/;"	m	class:TeQtGrid
gridToPortalRowVector_	drivers/qt/TeQtGrid.h	/^	vector<int>				gridToPortalRowVector_;$/;"	m	class:TeQtGrid
gridType	kernel/TeGridIndex.h	/^		typedef multimap<gridKey, unsigned int> gridType;		\/\/ em cada linha e coluna podemos associar uma lista de outros objetos$/;"	t	class:TeSAM::TeGridIndex
gridWidth_	drivers/qt/TeQtGrid.h	/^	int						gridWidth_, gridHeight_;$/;"	m	class:TeQtGrid
gridWidth_	drivers/qt/TeQtTable.h	/^	int					gridWidth_, gridHeight_;$/;"	m	class:TeQtTable
gridX_	drivers/qt/TeQtGrid.h	/^	int						gridX_, gridY_;$/;"	m	class:TeQtGrid
gridX_	drivers/qt/TeQtTable.h	/^	int					gridX_, gridY_;$/;"	m	class:TeQtTable
gridY_	drivers/qt/TeQtGrid.h	/^	int						gridX_, gridY_;$/;"	m	class:TeQtGrid
gridY_	drivers/qt/TeQtTable.h	/^	int					gridX_, gridY_;$/;"	m	class:TeQtTable
grid_	drivers/qt/TeQtGLWidget.h	/^	TeQtGrid* grid_;$/;"	m	class:TeQtGLWidget
grid_	kernel/TeGridIndex.h	/^		gridType grid_;		\/\/!< the grid.$/;"	m	class:TeSAM::TeGridIndex
griddatum_	drivers/GTM/TeGTM.h	/^	TeGTMGridDatum griddatum_;$/;"	m	class:TeGTM
group	kernel/TeLegendEntry.h	/^	int	group () { return group_; }$/;"	f	class:TeLegendEntry
group	kernel/TeLegendEntry.h	/^	void group (int i) { group_ = i; }$/;"	f	class:TeLegendEntry
groupAttr	kernel/TeQuerierParams.h	/^	virtual TeGroupingAttr& groupAttr() { return groupingAttr_;}$/;"	f	class:TeQuerierParams
groupAttribute_	kernel/TeAbstractTheme.h	/^	TeAttributeRep	groupAttribute_;$/;"	m	struct:TeGrouping
groupChronon_	kernel/TeAbstractTheme.h	/^	TeChronon groupChronon_;$/;"	m	struct:TeGrouping
groupColor	drivers/qt/TeAppTheme.h	/^	string groupColor () { return groupColor_ ; }$/;"	f	class:TeAppTheme
groupColor	drivers/qt/TeAppTheme.h	/^	void groupColor (const string& c) { groupColor_ = c; }$/;"	f	class:TeAppTheme
groupColorDir	drivers/qt/TeAppTheme.h	/^	TeColorDirection groupColorDir() { return groupColorDir_; }$/;"	f	class:TeAppTheme
groupColorDir	drivers/qt/TeAppTheme.h	/^	void groupColorDir(TeColorDirection n){ groupColorDir_ = n; }$/;"	f	class:TeAppTheme
groupColorDir_	drivers/qt/TeAppTheme.h	/^	TeColorDirection	groupColorDir_;$/;"	m	class:TeAppTheme
groupColor_	drivers/qt/TeAppTheme.h	/^	string				groupColor_;$/;"	m	class:TeAppTheme
groupConcatFinalize	drivers/SQLite/sqlite3/sqlite3.c	/^static void groupConcatFinalize(sqlite3_context *context){$/;"	f	file:
groupConcatStep	drivers/SQLite/sqlite3/sqlite3.c	/^static void groupConcatStep($/;"	f	file:
groupDataThreadEntry	image_processing/TePDIParallelSegmenter.cpp	/^bool TePDIParallelSegmenter::groupDataThreadEntry(void* paramsPtr)$/;"	f	class:TePDIParallelSegmenter
groupFunction_	kernel/TeAbstractTheme.h	/^	string	groupFunction_; $/;"	m	struct:TeGrouping
groupInMemory_	kernel/TeQuerierDBStr1.h	/^	bool						groupInMemory_;		\/\/! if it must group the object instances in the memory $/;"	m	class:TeQuerierDBStr1
groupIndex_	kernel/TeQuerierDB.h	/^	int				groupIndex_;$/;"	m	class:TeQuerierDB
groupMaxVal_	kernel/TeAbstractTheme.h	/^	double groupMaxVal_;$/;"	m	struct:TeGrouping
groupMinVal_	kernel/TeAbstractTheme.h	/^	double groupMinVal_;$/;"	m	struct:TeGrouping
groupMode_	kernel/TeAbstractTheme.h	/^	TeGroupingMode	groupMode_;			$/;"	m	struct:TeGrouping
groupNormAttribute_	kernel/TeAbstractTheme.h	/^	string	groupNormAttribute_;$/;"	m	struct:TeGrouping
groupNullAttr_	kernel/TeAbstractTheme.h	/^	bool	groupNullAttr_; $/;"	m	struct:TeGrouping
groupNumSlices_	kernel/TeAbstractTheme.h	/^	int	groupNumSlices_;	$/;"	m	struct:TeGrouping
groupObjects	drivers/qt/TeAppTheme.h	/^	TeSelectedObjects groupObjects() { return groupObjects_; }$/;"	f	class:TeAppTheme
groupObjects	drivers/qt/TeAppTheme.h	/^	void groupObjects(TeSelectedObjects n) { groupObjects_ = n; }$/;"	f	class:TeAppTheme
groupObjects_	drivers/qt/TeAppTheme.h	/^	TeSelectedObjects	groupObjects_;$/;"	m	class:TeAppTheme
groupPrecision_	kernel/TeAbstractTheme.h	/^	int	groupPrecision_;$/;"	m	struct:TeGrouping
groupStdDev_	kernel/TeAbstractTheme.h	/^	double	groupStdDev_;$/;"	m	struct:TeGrouping
group_	kernel/TeLegendEntry.h	/^	int					group_;$/;"	m	class:TeLegendEntry
group_name	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR *group_name;			\/* the group name *\/$/;"	m	struct:__anon65
groupid	drivers/Firebird/ibpp/core/ibpp.h	/^		uint32_t groupid;		\/\/ Only relevant on unixes$/;"	m	class:IBPP::User
grouping	kernel/TeAbstractTheme.h	/^	virtual TeGrouping& grouping() { return grouping_; }$/;"	f	class:TeAbstractTheme
grouping	kernel/TeAbstractTheme.h	/^	virtual void grouping(const TeGrouping& g) $/;"	f	class:TeAbstractTheme
groupingAttr_	kernel/TeQuerierParams.h	/^	TeGroupingAttr			groupingAttr_;			\/\/!< which attributes will be load and which aggregate function will be used in each attribute $/;"	m	class:TeQuerierParams
groupingColors_	drivers/qt/TeQtLegendSource.h	/^	QString groupingColors_;$/;"	m	class:TeQtLegendSource
grouping_	kernel/TeAbstractTheme.h	/^	TeGrouping		grouping_;$/;"	m	class:TeAbstractTheme
growOpArray	drivers/SQLite/sqlite3/sqlite3.c	/^static int growOpArray(Vdbe *p){$/;"	f	file:
growVTrans	drivers/SQLite/sqlite3/sqlite3.c	/^static int growVTrans(sqlite3 *db){$/;"	f	file:
grp	drivers/SQLite/sqlite3/sqlite3.c	/^  PGroup grp;                    \/* The global PGroup for mode (2) *\/$/;"	m	struct:PCacheGlobal	file:
gtif	kernel/TeDecoderTIFF.h	/^	GTIF	*gtif;			\/\/ GEOTIFF directory structure$/;"	m	class:TeDecoderTIFF
gwidth_	drivers/GTM/TeGTM.h	/^	float gposx_, gposy_, gwidth_, gheight_, metax_, metay_;$/;"	m	class:TeGTMInformationImages
h	drivers/SQLite/sqlite3/sqlite3.c	/^  HANDLE h;               \/* Handle for accessing the file *\/$/;"	m	struct:winFile	file:
h	drivers/SQLite/sqlite3/sqlite3.c	/^  HFILE h;                  \/* Handle for accessing the file *\/$/;"	m	struct:os2File	file:
h	drivers/SQLite/sqlite3/sqlite3.c	/^  int h, m;          \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
h	drivers/SQLite/sqlite3/sqlite3.c	/^  int h;                              \/* The file descriptor *\/$/;"	m	struct:unixFile	file:
h	drivers/SQLite/sqlite3/sqlite3.c	/^  int h;                     \/* Open file descriptor *\/$/;"	m	struct:unixShmNode	file:
hDBF	drivers/shapelib/TeQuerierSHP.h	/^	DBFHandle	hDBF;			\/\/!< handle to the file that stores attributes (.dbf) of the shapefile format $/;"	m	class:TeQuerierSHP
hDBF_	drivers/shapelib/TeDriverSHPDBF.h	/^	DBFHandle	hDBF_;$/;"	m	class:TeShapefileDriver
hFile	drivers/SQLite/sqlite3/sqlite3.c	/^  winFile hFile;             \/* File handle from winOpen *\/$/;"	m	struct:winShmNode	file:
hHeap	drivers/SQLite/sqlite3/sqlite3.c	/^  HANDLE hHeap; \/* The handle to our heap. *\/$/;"	m	struct:winMemData	file:
hLockFile	drivers/SQLite/sqlite3/sqlite3.c	/^  HFILE hLockFile;           \/* File used for inter-process memory locking *\/$/;"	m	struct:os2ShmNode	file:
hMap	drivers/SQLite/sqlite3/sqlite3.c	/^    HANDLE hMap;             \/* File handle from CreateFileMapping *\/$/;"	m	struct:winShmNode::ShmRegion	file:
hMutex	drivers/SQLite/sqlite3/sqlite3.c	/^  HANDLE hMutex;          \/* Mutex used to control access to shared lock *\/  $/;"	m	struct:winFile	file:
hPending	drivers/SQLite/sqlite3/sqlite3.c	/^    Fts3Hash hPending;            \/* Pending terms table for this index *\/$/;"	m	struct:Fts3Table::Fts3Index	file:
hProcess	drivers/SQLite/sqlite3/shell.c	/^static HANDLE hProcess;$/;"	v	file:
hSHP	drivers/shapelib/TeQuerierSHP.h	/^	SHPHandle	hSHP;			\/\/!< handle to the file that stores geometries (.shp) of the shapefile format $/;"	m	class:TeQuerierSHP
hSHP_	drivers/shapelib/TeDriverSHPDBF.h	/^	SHPHandle	hSHP_;$/;"	m	class:TeShapefileDriver
hShared	drivers/SQLite/sqlite3/sqlite3.c	/^  HANDLE hShared;         \/* Shared memory segment used for locking *\/$/;"	m	struct:winFile	file:
h_	utils/TeColorUtils.h	/^	int		h_;$/;"	m	struct:ColorBar
halfBufferPI	kernel/TeBufferRegion.cpp	/^const double halfBufferPI   = 1.57079632679489661923;$/;"	m	namespace:TeBUFFERREGION	file:
halfWayHoriz	kernel/TeCoord2D.h	/^	TeCoord2D halfWayHoriz ( TeCoord2D& rhs )$/;"	f	class:TeCoord2D
halfWayVert	kernel/TeCoord2D.h	/^	TeCoord2D halfWayVert  ( TeCoord2D& rhs )$/;"	f	class:TeCoord2D
handle	drivers/GL/glcore.h	/^    void *handle;$/;"	m	struct:__GLdrawableBufferRec
handle	drivers/GL/internal/glcore.h	/^    void *handle;$/;"	m	struct:__GLdrawableBufferRec
hants	image_processing/TePDIHants.cpp	/^  double* hants(double *data, double *smNDVI) {$/;"	f
hants	image_processing/TePDIHants.cpp	/^  void hants(TePDITypes::TePDIRasterPtrType inRaster, TePDITypes::TePDIRasterPtrType maskRaster, TePDITypes::TePDIRasterPtrType smNDVIRaster, TePDITypes::TePDIRasterPtrType compRaster) {$/;"	f
hasAgg	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 hasAgg;           \/* True if aggregates are seen *\/$/;"	m	struct:NameContext	file:
hasAttrRest	kernel/TeAbstractTheme.h	/^	virtual bool hasAttrRest () { return (!generateAttributeRest_.empty());}$/;"	f	class:TeAbstractTheme
hasAttrRest	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::hasAttrRest()$/;"	f	class:TeExternalTheme
hasBlob_	drivers/Oracle/TeOCICursor.h	/^	bool					hasBlob_;			\/\/! Flag that indicates if the cursor has blob data type$/;"	m	class:TeOCICursor
hasCells	kernel/TeMultiGeometry.h	/^	bool hasCells()	const$/;"	f	class:TeMultiGeometry
hasCells	kernel/TeSTInstance.cpp	/^TeSTInstance::hasCells()		$/;"	f	class:TeSTInstance
hasCreateSupport	drivers/gdal/TeGDALDecoder.cpp	/^bool TeGDALDriverInfo::hasCreateSupport() const$/;"	f	class:TeGDALDriverInfo
hasCreateSupport	kernel/TeGeoFileInfo.cpp	/^bool TeGeoFileInfo::hasCreateSupport() const$/;"	f	class:TeGeoFileInfo
hasCurrentView	kernel/TeProject.cpp	/^TeProject::hasCurrentView()$/;"	f	class:TeProject
hasData	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 hasData;          \/* True if this page stores data *\/$/;"	m	struct:MemPage	file:
hasElement	kernel/TeSTElementSet.cpp	/^TeSTElementSet::hasElement(const string& objId) $/;"	f	class:TeSTElementSet
hasFixedStep	image_processing/TePDIHistogram.cpp	/^bool TePDIHistogram::hasFixedStep() const$/;"	f	class:TePDIHistogram
hasGeometry	kernel/TeLayer.cpp	/^TeLayer::hasGeometry (TeGeomRep rep)$/;"	f	class:TeLayer
hasHotJournal	drivers/SQLite/sqlite3/sqlite3.c	/^static int hasHotJournal(Pager *pPager, int *pExists){$/;"	f	file:
hasLat0	kernel/TeProjection.h	/^	int hasLat0;$/;"	m	struct:TeProjInfo
hasLeft	kernel/TeKdTree.h	/^		bool hasLeft(void) const$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
hasLeft	kernel/TeKdTree.h	/^		bool hasLeft(void) const$/;"	f	class:TeSAM::TeKdTreeNode
hasLines	kernel/TeMultiGeometry.h	/^	bool hasLines() const		$/;"	f	class:TeMultiGeometry
hasLines	kernel/TeSTInstance.cpp	/^TeSTInstance::hasLines()		$/;"	f	class:TeSTInstance
hasLon0	kernel/TeProjection.h	/^	int hasLon0;$/;"	m	struct:TeProjInfo
hasMutex	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 hasMutex;               \/* True if holding the unixShmNode mutex *\/$/;"	m	struct:unixShm	file:
hasMutex	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 hasMutex;               \/* True if holding the winShmNode mutex *\/$/;"	m	struct:winShm	file:
hasObjectsWithoutGeometries	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::hasObjectsWithoutGeometries(TeGeomRep geomRep)$/;"	f	class:TeExternalTheme
hasObjectsWithoutGeometries	kernel/TeTheme.cpp	/^bool TeTheme::hasObjectsWithoutGeometries(TeGeomRep geomRep)$/;"	f	class:TeTheme
hasOffx	kernel/TeProjection.h	/^	int hasOffx;$/;"	m	struct:TeProjInfo
hasOffy	kernel/TeProjection.h	/^	int hasOffy;$/;"	m	struct:TeProjInfo
hasPointedLine	drivers/qt/TeQtGrid.cpp	/^bool TeQtGrid::hasPointedLine()$/;"	f	class:TeQtGrid
hasPoints	kernel/TeMultiGeometry.h	/^	bool hasPoints() const		$/;"	f	class:TeMultiGeometry
hasPoints	kernel/TeSTInstance.cpp	/^TeSTInstance::hasPoints()		$/;"	f	class:TeSTInstance
hasPolygons	kernel/TeMultiGeometry.h	/^	bool hasPolygons()	const$/;"	f	class:TeMultiGeometry
hasPolygons	kernel/TeSTInstance.cpp	/^TeSTInstance::hasPolygons()	$/;"	f	class:TeSTInstance
hasReadConflicts	drivers/SQLite/sqlite3/sqlite3.c	/^static int hasReadConflicts(Btree *pBtree, Pgno iRoot){$/;"	f	file:
hasReadConflicts	drivers/SQLite/sqlite3/sqlite3.c	48171;"	d	file:
hasRestriction	kernel/TeAbstractTheme.h	/^	virtual bool hasRestriction() { return (!(generateAttributeRest_.empty() || $/;"	f	class:TeAbstractTheme
hasRestriction	kernel/TeExternalTheme.cpp	/^TeExternalTheme::hasRestriction()$/;"	f	class:TeExternalTheme
hasRight	kernel/TeKdTree.h	/^		bool hasRight(void) const$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
hasRight	kernel/TeKdTree.h	/^		bool hasRight(void) const$/;"	f	class:TeSAM::TeKdTreeNode
hasScale	kernel/TeProjection.h	/^	int hasScale;$/;"	m	struct:TeProjInfo
hasSetDummy_	kernel/TeRasterParams.h	/^	bool hasSetDummy_;$/;"	m	class:TeRasterParams
hasSharedCacheTableLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int hasSharedCacheTableLock($/;"	f	file:
hasSharedCacheTableLock	drivers/SQLite/sqlite3/sqlite3.c	48170;"	d	file:
hasSpatialRes	kernel/TeQuerierParams.h	/^	virtual bool hasSpatialRes() { return hasSpatialRes_;}$/;"	f	class:TeQuerierParams
hasSpatialRes_	kernel/TeAbstractTheme.h	/^	bool				hasSpatialRes_;$/;"	m	class:TeAbstractTheme
hasSpatialRes_	kernel/TeQuerierParams.h	/^	bool					hasSpatialRes_;		\/\/!< Verifies if there is a spatial restriction defined $/;"	m	class:TeQuerierParams
hasSpatialRest	kernel/TeAbstractTheme.h	/^	virtual bool hasSpatialRest() { return hasSpatialRes_;}$/;"	f	class:TeAbstractTheme
hasSpatialRest	kernel/TeAbstractTheme.h	/^	virtual void hasSpatialRest(bool a) {hasSpatialRes_ = a;}$/;"	f	class:TeAbstractTheme
hasSpatialRest	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::hasSpatialRest()$/;"	f	class:TeExternalTheme
hasStlat1	kernel/TeProjection.h	/^	int hasStlat1;$/;"	m	struct:TeProjInfo
hasStlat2	kernel/TeProjection.h	/^	int hasStlat2;$/;"	m	struct:TeProjInfo
hasTemporalRest	kernel/TeAbstractTheme.h	/^	virtual bool hasTemporalRest() { return (!generateTemporalRest_.empty());}$/;"	f	class:TeAbstractTheme
hasTemporalRest	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::hasTemporalRest()$/;"	f	class:TeExternalTheme
hasTexts	kernel/TeMultiGeometry.h	/^	bool hasTexts()	const	$/;"	f	class:TeMultiGeometry
hasTexts	kernel/TeSTInstance.cpp	/^TeSTInstance::hasTexts()		$/;"	f	class:TeSTInstance
hasTimer	drivers/SQLite/sqlite3/shell.c	/^static int hasTimer(void){$/;"	f	file:
hasUnits	kernel/TeProjection.h	/^	int hasUnits;$/;"	m	struct:TeProjInfo
hasVowel	drivers/SQLite/sqlite3/sqlite3.c	/^static int hasVowel(const char *z){$/;"	f	file:
hasWorldInfo	drivers/MrSID/TeMrSID.cpp	/^bool TeMrSIDReader::hasWorldInfo()$/;"	f	class:TeMrSIDReader
hashDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^static void hashDestroy(void *p){$/;"	f	file:
haveAccumBuffer	drivers/GL/glcore.h	/^    GLboolean haveAccumBuffer;$/;"	m	struct:__GLcontextModesRec
haveAccumBuffer	drivers/GL/glxint.h	/^    GLboolean haveAccumBuffer;$/;"	m	struct:__GLXFBConfigRec
haveAccumBuffer	drivers/GL/internal/glcore.h	/^    GLboolean haveAccumBuffer;$/;"	m	struct:__GLcontextModesRec
haveDepthBuffer	drivers/GL/glcore.h	/^    GLboolean haveDepthBuffer;$/;"	m	struct:__GLcontextModesRec
haveDepthBuffer	drivers/GL/glxint.h	/^    GLboolean haveDepthBuffer;$/;"	m	struct:__GLXFBConfigRec
haveDepthBuffer	drivers/GL/internal/glcore.h	/^    GLboolean haveDepthBuffer;$/;"	m	struct:__GLcontextModesRec
haveStencilBuffer	drivers/GL/glcore.h	/^    GLboolean haveStencilBuffer;$/;"	m	struct:__GLcontextModesRec
haveStencilBuffer	drivers/GL/glxint.h	/^    GLboolean haveStencilBuffer;$/;"	m	struct:__GLXFBConfigRec
haveStencilBuffer	drivers/GL/internal/glcore.h	/^    GLboolean haveStencilBuffer;$/;"	m	struct:__GLcontextModesRec
hdr	drivers/SQLite/sqlite3/sqlite3.c	/^    } hdr;$/;"	m	union:Mem3Block::__anon51	typeref:struct:Mem3Block::__anon51::__anon52	file:
hdr	drivers/SQLite/sqlite3/sqlite3.c	/^  WalIndexHdr hdr;           \/* Wal-index header for current transaction *\/$/;"	m	struct:Wal	file:
hdrOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 hdrOffset;        \/* 100 for page 1.  0 otherwise *\/$/;"	m	struct:MemPage	file:
header_	drivers/GTM/TeGTM.h	/^	TeGTMHeader header_;$/;"	m	class:TeGTM
heapH	stat/heap.h	3;"	d
height	drivers/GL/dri_interface.h	/^    int height;             \/**< Pixel height of the framebuffer. *\/$/;"	m	struct:__DRIframebufferRec
height	drivers/GL/glcore.h	/^    GLint width, height, depth;$/;"	m	struct:__GLdrawableBufferRec
height	drivers/GL/glcore.h	/^    GLuint width, height;$/;"	m	struct:__GLdrawablePrivateRec
height	drivers/GL/glx.h	/^    int width, height;$/;"	m	struct:__anon176
height	drivers/GL/glxext.h	/^    int width, height;$/;"	m	struct:__anon93
height	drivers/GL/internal/dri_interface.h	/^    int height;             \/**< Pixel height of the framebuffer. *\/$/;"	m	struct:__DRIframebufferRec
height	drivers/GL/internal/glcore.h	/^    GLint width, height, depth;$/;"	m	struct:__GLdrawableBufferRec
height	drivers/GL/internal/glcore.h	/^    GLuint width, height;$/;"	m	struct:__GLdrawablePrivateRec
height	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::height(double h)$/;"	f	class:TeQtMultiTextEdit
height	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::height(double h)$/;"	f	class:TeQtTextEdit
height	kernel/TeBox.h	/^	double height () const $/;"	f	struct:TeBox
height	kernel/TeGeometry.h	/^	double height () const$/;"	f	class:TeText
height	kernel/TeGraph.h	/^	int height;            \/* height of axes (in pixels) *\/$/;"	m	class:TeGraphPlot
heightOfExpr	drivers/SQLite/sqlite3/sqlite3.c	/^static void heightOfExpr(Expr *p, int *pnHeight){$/;"	f	file:
heightOfExprList	drivers/SQLite/sqlite3/sqlite3.c	/^static void heightOfExprList(ExprList *p, int *pnHeight){$/;"	f	file:
heightOfSelect	drivers/SQLite/sqlite3/sqlite3.c	/^static void heightOfSelect(Select *p, int *pnHeight){$/;"	f	file:
height_	drivers/GTM/TeGTM.h	/^	long height_, color_, weight_, backcolor_;$/;"	m	class:TeGTMWaypointsStyles
height_	drivers/qt/TeQtCanvas.h	/^	int		height_;$/;"	m	class:TeQtCanvas
height_	image_processing/TePDIParaSegSegmentsBlock.hpp	/^      unsigned int height_;      $/;"	m	class:TePDIParaSegSegmentsBlock
height_	kernel/TeGeometry.h	/^	double height_;$/;"	m	class:TeText
help	kernel/TeGraph.cpp	/^	unsigned char help;         \/* color of help message text *\/$/;"	m	struct:Txtc	file:
helpPushButton_clicked	drivers/qt/ui/animation.ui.h	/^void Animation::helpPushButton_clicked()$/;"	f	class:Animation
helpPushButton_clicked	drivers/qt/ui/mediaDescription.ui.h	/^void MediaDescription::helpPushButton_clicked()$/;"	f	class:MediaDescription
helpPushButton_clicked	drivers/qt/ui/urlWindow.ui.h	/^void URLWindow::helpPushButton_clicked()$/;"	f	class:URLWindow
helpSlot	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::helpSlot()$/;"	f	class:TeQtColorBar
help_	drivers/qt/TeQtColorBar.h	/^	Help*	help_;$/;"	m	class:TeQtColorBar
hemisphere	kernel/TeProjection.h	/^	TeHemisphere hemisphere; \/\/!< Hemisphere$/;"	m	struct:TeProjectionParams
hemisphere	kernel/TeProjection.h	/^	inline const TeHemisphere& hemisphere() const {	return GPhemisphere; }$/;"	f	class:TeProjection
hexFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void hexFunc($/;"	f	file:
hexdigits	drivers/SQLite/sqlite3/sqlite3.c	/^static const char hexdigits[] = {$/;"	v	file:
hifen_	functions/TeAddressLocator.h	/^		char hifen_;$/;"	m	class:TeAddressLocator
histoCursorH_	drivers/qwt/TeQwtPlotPicker.h	/^	int histoCursorH_;$/;"	m	class:TeQwtPlotPicker
histo_cache_	image_processing/TePDILevelRemap.hpp	/^                TePDIHistogram::pointer > histo_cache_;$/;"	m	class:TePDILevelRemap
histo_cache_	image_processing/TePDIStatistic.hpp	/^      HistoCacheT histo_cache_;$/;"	m	class:TePDIStatistic
histo_ptr_	image_processing/TePDIContrast.hpp	/^      TePDIHistogram::pointer histo_ptr_;$/;"	m	class:TePDIContrast
histog	drivers/qwt/TeQwtPlotPicker.h	/^        histog$/;"	e	enum:TeQwtPlotPicker::CursorMode
hlmask	drivers/SQLite/sqlite3/sqlite3.c	/^  u64 hlmask;                     \/* Mask of snippet terms to highlight *\/$/;"	m	struct:SnippetFragment	file:
host	kernel/TeDatabase.h	/^	string	host () $/;"	f	class:TeDatabase
host_	kernel/TeConnection.h	/^    std::string host_;					\/\/!< Host name of the database server$/;"	m	class:TeConnection
host_	kernel/TeDatabase.h	/^std::string				host_;					\/\/!< host name of the database server$/;"	m	class:TeDatabase
host_	kernel/TeDatabaseFactoryParams.h	/^      std::string host_;		\/\/!< Host name.$/;"	m	class:TeDatabaseFactoryParams
host_obj_ptr_	kernel/TeCommunicator.h	/^      void* host_obj_ptr_;$/;"	m	class:TeCommunicator
hour	kernel/TeTime.h	/^	int hour() const {return ts_.tm_hour;}$/;"	f	class:TeTime
hsv2Rgb	utils/TeColorUtils.cpp	/^void hsv2Rgb(TeColor& c, const int& h, const int& s, const int& v)$/;"	f
ht	drivers/SQLite/sqlite3/sqlite3.c	/^  } *ht;$/;"	m	struct:Fts3Hash	typeref:struct:Fts3Hash::_fts3ht	file:
ht	drivers/SQLite/sqlite3/sqlite3.c	/^  } *ht;$/;"	m	struct:Hash	typeref:struct:Hash::_ht	file:
ht_slot	drivers/SQLite/sqlite3/sqlite3.c	/^typedef u16 ht_slot;$/;"	t	file:
htsize	drivers/SQLite/sqlite3/sqlite3.c	/^  int htsize;             \/* Number of buckets in the hash table *\/$/;"	m	struct:Fts3Hash	file:
htsize	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned int htsize;      \/* Number of buckets in the hash table *\/$/;"	m	struct:Hash	file:
i	drivers/SQLite/sqlite3/sqlite3.c	/^    i64 i;              \/* Integer value used when MEM_Int is set in flags *\/$/;"	m	union:Mem::__anon49	file:
i	drivers/SQLite/sqlite3/sqlite3.c	/^    i64 i;          \/* Value if eType is SQLITE_INTEGER *\/$/;"	m	union:IndexSample::__anon41	file:
i	drivers/SQLite/sqlite3/sqlite3.c	/^    int i;                                     \/* Integer value *\/$/;"	m	union:Walker::__anon48	file:
i	drivers/SQLite/sqlite3/sqlite3.c	/^    int i;                 \/* Integer value if p4type==P4_INT32 *\/$/;"	m	union:VdbeOp::__anon39	file:
i	drivers/SQLite/sqlite3/sqlite3.c	/^  int i;$/;"	m	union:RtreeCoord	file:
i	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
i16	drivers/SQLite/sqlite3/sqlite3.c	/^typedef INT16_TYPE i16;            \/* 2-byte signed integer *\/$/;"	t	file:
i16	drivers/SQLite/sqlite3/sqlite3.c	/^typedef short int i16;            \/* 2-byte (or larger) signed integer *\/$/;"	t	file:
i16_limits	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	const std::numeric_limits<int16_t> i16_limits;$/;"	m	namespace:ibpp_internals	file:
i2string	kernel/gra_util.h	/^std::string i2string(unsigned int i) {$/;"	f	namespace:br_stl
i32_limits	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	const std::numeric_limits<int32_t> i32_limits;$/;"	m	namespace:ibpp_internals	file:
i64	drivers/SQLite/sqlite3/sqlite3.c	/^typedef sqlite3_int64 i64;$/;"	t	file:
i64	drivers/SQLite/sqlite3/sqlite3.c	/^typedef sqlite_int64 i64;          \/* 8-byte signed integer *\/$/;"	t	file:
i8	drivers/SQLite/sqlite3/sqlite3.c	/^typedef INT8_TYPE i8;              \/* 1-byte signed integer *\/$/;"	t	file:
iAddr	drivers/SQLite/sqlite3/sqlite3.c	/^  int iAddr;                 \/* Address of next instruction to return *\/$/;"	m	struct:VdbeOpIter	file:
iAgg	drivers/SQLite/sqlite3/sqlite3.c	/^  i16 iAgg;              \/* Which entry in pAggInfo->aCol[] or ->aFunc[] *\/$/;"	m	struct:Expr	file:
iAlias	drivers/SQLite/sqlite3/sqlite3.c	/^    u16 iAlias;            \/* Index into Parse.aAlias[] for zName *\/$/;"	m	struct:ExprList::ExprList_item	file:
iBatch	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 iBatch;                     \/* Current insert batch *\/$/;"	m	struct:RowSet	file:
iBreak	drivers/SQLite/sqlite3/sqlite3.c	/^  int iBreak;                    \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereInfo	file:
iCacheCnt	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCacheCnt;       \/* Counter used to generate aColCache[].lru values *\/$/;"	m	struct:Parse	file:
iCacheLevel	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCacheLevel;     \/* ColCache valid when aColCache[].iLevel<=iCacheLevel *\/$/;"	m	struct:Parse	file:
iCallback	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 iCallback;             \/* Value to pass to log callback (or 0) *\/$/;"	m	struct:Wal	file:
iCell	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCell;                        \/* Index of current cell in pNode *\/$/;"	m	struct:RtreeCursor	file:
iChange	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 iChange;                    \/* Counter incremented each transaction *\/$/;"	m	struct:WalIndexHdr	file:
iCol	drivers/SQLite/sqlite3/sqlite3.c	/^    u16 iCol;              \/* For ORDER BY, column number in result set *\/$/;"	m	struct:ExprList::ExprList_item	file:
iCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCol;                       \/* Column of table to populate aTerm for *\/$/;"	m	struct:TermOffsetCtx	file:
iCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCol;                       \/* Column snippet is extracted from *\/$/;"	m	struct:SnippetFragment	file:
iCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCol;                       \/* Column token must occur in *\/$/;"	m	struct:Fts3DeferredToken	file:
iCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCol;                       \/* Current value of 'col' column *\/$/;"	m	struct:Fts3auxCursor	file:
iCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCol;                       \/* Extract snippet from this column *\/$/;"	m	struct:SnippetIter	file:
iCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCol;                       \/* The column the token must match *\/$/;"	m	struct:Fts3TokenAndCost	file:
iCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCol;               \/* Table column this handle is open on *\/$/;"	m	struct:Incrblob	file:
iCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCol;$/;"	m	struct:Fts3SegFilter	file:
iColCache	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 iColCache;        \/* Next entry of the cache to replace *\/$/;"	m	struct:Parse	file:
iColFilter	drivers/SQLite/sqlite3/sqlite3.c	/^  int iColFilter;                 \/* If >=0, filter for this column *\/$/;"	m	struct:Fts3MultiSegReader	file:
iCol_	drivers/qt/TeQtGrid.h	/^	int						iCol_, fCol_;$/;"	m	class:TeQtGrid
iCol_	drivers/qt/TeQtTable.h	/^	int					iCol_, fCol_;$/;"	m	class:TeQtTable
iColumn	drivers/SQLite/sqlite3/sqlite3.c	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	file:
iColumn	drivers/SQLite/sqlite3/sqlite3.c	/^     int iColumn;              \/* Column on left-hand side of constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
iColumn	drivers/SQLite/sqlite3/sqlite3.c	/^    int iColumn;             \/* Column number within the source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iColumn	drivers/SQLite/sqlite3/sqlite3.c	/^    int iColumn;          \/* Table column number *\/$/;"	m	struct:Parse::yColCache	file:
iColumn	drivers/SQLite/sqlite3/sqlite3.c	/^  int iColumn;               \/* Index of column this phrase must match *\/$/;"	m	struct:Fts3Phrase	file:
iColumn	drivers/SQLite/sqlite3/sqlite3.c	/^  ynVar iColumn;         \/* TK_COLUMN: column index.  -1 for rowid.$/;"	m	struct:Expr	file:
iColumn	drivers/SQLite/sqlite3/sqlite3.h	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
iColumn	drivers/SQLite/sqlite3/sqlite3.h	/^     int iColumn;              \/* Column on left-hand side of constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iContinue	drivers/SQLite/sqlite3/sqlite3.c	/^  int iContinue;                 \/* Jump here to continue with next record *\/$/;"	m	struct:WhereInfo	file:
iCoord	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCoord;                     \/* Index of constrained coordinate *\/$/;"	m	struct:RtreeConstraint	file:
iCur	drivers/SQLite/sqlite3/sqlite3.c	/^        int iCur;              \/* The VDBE cursor used by this IN operator *\/$/;"	m	struct:WhereLevel::__anon45::__anon46::InLoop	file:
iCurrent	drivers/SQLite/sqlite3/sqlite3.c	/^  int iCurrent;                   \/* First token of current snippet *\/$/;"	m	struct:SnippetIter	file:
iCurrentBlock	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iCurrentBlock;    \/* Current leaf block (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iCursor	drivers/SQLite/sqlite3/sqlite3.c	/^    int iCursor;      \/* The VDBE cursor number used to access this table *\/$/;"	m	struct:SrcList::SrcList_item	file:
iDb	drivers/SQLite/sqlite3/sqlite3.c	/^    int iDb;                    \/* When back is being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
iDb	drivers/SQLite/sqlite3/sqlite3.c	/^  int iDb;              \/* Index in sqlite3.aDb[] of database holding pTab *\/$/;"	m	struct:AutoincInfo	file:
iDb	drivers/SQLite/sqlite3/sqlite3.c	/^  int iDb;              \/* Index of cursor database in db->aDb[] (or -1) *\/$/;"	m	struct:VdbeCursor	file:
iDb	drivers/SQLite/sqlite3/sqlite3.c	/^  int iDb;             \/* The database containing the table to be locked *\/$/;"	m	struct:TableLock	file:
iDb	drivers/SQLite/sqlite3/sqlite3.c	/^  int iDb;            \/* 0 for main database.  1 for TEMP, 2.. for ATTACHed *\/$/;"	m	struct:__anon47	file:
iDefaultCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int iDefaultCol;                    \/* Default column to query *\/$/;"	m	struct:ParseContext	file:
iDepth	drivers/SQLite/sqlite3/sqlite3.c	/^  int iDepth;                 \/* Current depth of the r-tree structure *\/$/;"	m	struct:Rtree	file:
iDestSchema	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 iDestSchema;         \/* Original schema cookie in destination *\/$/;"	m	struct:sqlite3_backup	file:
iDistinct	drivers/SQLite/sqlite3/sqlite3.c	/^    int iDistinct;           \/* Ephemeral table used to enforce DISTINCT *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
iDivisor	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 iDivisor;   \/* Number of bits handled by each apSub[] entry. *\/$/;"	m	struct:Bitvec	file:
iDocid	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iDocid;          \/* Current docid (if pList!=0) *\/$/;"	m	struct:Fts3Doclist	file:
iDocid	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iDocid;      \/* Current docid *\/$/;"	m	struct:Fts3Expr	file:
iDocid	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:Fts3SegReader	file:
iDocid	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:TermOffsetCtx	file:
iDoclistToken	drivers/SQLite/sqlite3/sqlite3.c	/^  int iDoclistToken;$/;"	m	struct:Fts3Phrase	file:
iECursor	drivers/SQLite/sqlite3/sqlite3.c	/^  int iECursor;          \/* VDBE Cursor associated with this ExprList *\/$/;"	m	struct:ExprList	file:
iEndBlock	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iEndBlock;        \/* Rowid of final block in segment (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iEof	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 iEof;                       \/* 1 byte past EOF for this iterator *\/$/;"	m	struct:VdbeSorterIter	file:
iFirst	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iFirst;           \/* First slot in %_segments written *\/$/;"	m	struct:SegmentWriter	file:
iForeGuard	drivers/SQLite/sqlite3/sqlite3.c	/^  int iForeGuard;                     \/* Guard word for sanity *\/$/;"	m	struct:MemBlockHdr	file:
iFree	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iFree;            \/* Next free slot in %_segments *\/$/;"	m	struct:SegmentWriter	file:
iFrom	drivers/SQLite/sqlite3/sqlite3.c	/^    int iFrom;         \/* Index of column in pFrom *\/$/;"	m	struct:FKey::sColMap	file:
iFrom	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 iFrom;             \/* Which entry in the FROM clause *\/$/;"	m	struct:WhereLevel	file:
iGeneration	drivers/SQLite/sqlite3/sqlite3.c	/^  int iGeneration;     \/* Generation counter.  Incremented with each change *\/$/;"	m	struct:Schema	file:
iHash	drivers/SQLite/sqlite3/sqlite3.c	/^    u32 iHash;                 \/* Tiebreaker hash *\/$/;"	m	struct:Stat3Accum::Stat3Sample	file:
iHdrOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 iHdrOffset;              \/* See above *\/$/;"	m	struct:PagerSavepoint	file:
iHead	drivers/SQLite/sqlite3/sqlite3.c	/^  int iHead;                      \/* Next value in position list *\/$/;"	m	struct:SnippetPhrase	file:
iIdx	drivers/SQLite/sqlite3/sqlite3.c	/^  int iIdx;                       \/* Index within level, or 0x7FFFFFFF for PT *\/$/;"	m	struct:Fts3SegReader	file:
iIdxCur	drivers/SQLite/sqlite3/sqlite3.c	/^  int iIdxCur;          \/* The VDBE cursor used to access pIdx *\/$/;"	m	struct:WhereLevel	file:
iJD	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iJD; \/* The julian day number times 86400000 *\/$/;"	m	struct:DateTime	file:
iKey	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned int iKey;             \/* Key value (page number) *\/$/;"	m	struct:PgHdr1	file:
iLastCol	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iLastCol;$/;"	m	struct:PendingList	file:
iLastDocid	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iLastDocid;$/;"	m	struct:PendingList	file:
iLastPos	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iLastPos;$/;"	m	struct:PendingList	file:
iLeafEndBlock	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iLeafEndBlock;    \/* Rowid of final leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iLeftJoin	drivers/SQLite/sqlite3/sqlite3.c	/^  int iLeftJoin;        \/* Memory cell used to implement LEFT OUTER JOIN *\/$/;"	m	struct:WhereLevel	file:
iLevel	drivers/SQLite/sqlite3/sqlite3.c	/^    int iLevel;           \/* Nesting level *\/$/;"	m	struct:Parse::yColCache	file:
iLimit	drivers/SQLite/sqlite3/sqlite3.c	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select	file:
iLine_	drivers/qt/TeQtGrid.h	/^	int						iLine_, fLine_;$/;"	m	class:TeQtGrid
iLine_	drivers/qt/TeQtTable.h	/^	int					iLine_, fLine_;$/;"	m	class:TeQtTable
iMAX	image_processing/TePDIHants.cpp	/^  int TAT, iMAX;$/;"	v
iMaster	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 iMaster;$/;"	m	struct:Mem3Global	file:
iMaxKey	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned int iMaxKey;               \/* Largest key seen since xTruncate() *\/$/;"	m	struct:PCache1	file:
iMem	drivers/SQLite/sqlite3/sqlite3.c	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iMem	drivers/SQLite/sqlite3/sqlite3.c	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
iMem	drivers/SQLite/sqlite3/sqlite3.c	/^  int iMem;         \/* Base register where results are written *\/$/;"	m	struct:SelectDest	file:
iMin	drivers/SQLite/sqlite3/sqlite3.c	/^  int iMin;                 \/* Index of entry with minimum nEq and hash *\/$/;"	m	struct:Stat3Accum	file:
iNext	drivers/SQLite/sqlite3/sqlite3.c	/^    int iNext;                    \/* Next slot in aIndex[] not yet returned *\/$/;"	m	struct:WalIterator::WalSegment	file:
iNext	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno iNext;              \/* Page number of the next source page to copy *\/$/;"	m	struct:sqlite3_backup	file:
iNextSelectId	drivers/SQLite/sqlite3/sqlite3.c	/^  int iNextSelectId;$/;"	m	struct:Parse	file:
iNode	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 iNode;$/;"	m	struct:RtreeNode	file:
iNodeSize	drivers/SQLite/sqlite3/sqlite3.c	/^  int iNodeSize;              \/* Size in bytes of each node in the node table *\/$/;"	m	struct:Rtree	file:
iOff	drivers/SQLite/sqlite3/sqlite3.c	/^  int iOff;                       \/* Offset of this term from read positions *\/$/;"	m	struct:TermOffset	file:
iOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 iOffset;                 \/* Starting offset in main journal *\/$/;"	m	struct:PagerSavepoint	file:
iOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select	file:
iOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  int iOffset;                 \/* current position in pInput *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  int iOffset;                 \/* current position in zInput *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  int iOffset;            \/* Byte offset of blob in cursor data *\/$/;"	m	struct:Incrblob	file:
iOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iOffset;          \/* Offset from the beginning of the file *\/$/;"	m	struct:FilePoint	file:
iOverflow	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 iOverflow; \/* Offset to overflow page number.  Zero if no overflow *\/$/;"	m	struct:CellInfo	file:
iPKey	drivers/SQLite/sqlite3/sqlite3.c	/^  int iPKey;           \/* If not negative, use aCol[iPKey] as the primary key *\/$/;"	m	struct:Table	file:
iPage	drivers/SQLite/sqlite3/sqlite3.c	/^  i16 iPage;                            \/* Index of current page in apPage *\/$/;"	m	struct:BtCursor	file:
iParent	drivers/SQLite/sqlite3/sqlite3.c	/^  int iParent;            \/* Disable pWC->a[iParent] when this term disabled *\/$/;"	m	struct:WhereTerm	file:
iParm	drivers/SQLite/sqlite3/sqlite3.c	/^  int iParm;        \/* A parameter used by the eDest disposal method *\/$/;"	m	struct:SelectDest	file:
iPos	drivers/SQLite/sqlite3/sqlite3.c	/^  int iPos;                       \/* Current position *\/$/;"	m	struct:LcsIterator	file:
iPos	drivers/SQLite/sqlite3/sqlite3.c	/^  int iPos;                       \/* Index of first token in snippet *\/$/;"	m	struct:SnippetFragment	file:
iPos	drivers/SQLite/sqlite3/sqlite3.c	/^  int iPos;                       \/* Position just read from pList *\/$/;"	m	struct:TermOffset	file:
iPosOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  int iPosOffset;                 \/* Tokens count up to end of this phrase *\/$/;"	m	struct:LcsIterator	file:
iPrefEnc	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 iPrefEnc;         \/* Preferred text encoding (SQLITE_UTF8, 16LE, 16BE) *\/$/;"	m	struct:FuncDef	file:
iPrevDocid	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite_int64 iPrevDocid;        \/* Docid of most recently inserted document *\/$/;"	m	struct:Fts3Table	file:
iPrevId	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iPrevId;          \/* Previous id read from aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
iPrior	drivers/SQLite/sqlite3/sqlite3.c	/^  int iPrior;                     \/* Last result returned from the iterator *\/$/;"	m	struct:WalIterator	file:
iPrn	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 iPrn;                 \/* Pseudo-random number used for sampling *\/$/;"	m	struct:Stat3Accum	file:
iRangeReg	drivers/SQLite/sqlite3/sqlite3.c	/^  int iRangeReg;       \/* First register in temporary register block *\/$/;"	m	struct:Parse	file:
iReadOff	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 iReadOff;                   \/* Current read offset *\/$/;"	m	struct:VdbeSorterIter	file:
iReadOff	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 iReadOff;                   \/* Current read offset within file pTemp1 *\/$/;"	m	struct:VdbeSorter	file:
iReg	drivers/SQLite/sqlite3/sqlite3.c	/^    int iReg;             \/* Reg with value of this column. 0 means none. *\/$/;"	m	struct:Parse::yColCache	file:
iReinsertHeight	drivers/SQLite/sqlite3/sqlite3.c	/^  int iReinsertHeight;        \/* Height of sub-trees Reinsert() has run on *\/$/;"	m	struct:Rtree	file:
iRightJoinTable	drivers/SQLite/sqlite3/sqlite3.c	/^  i16 iRightJoinTable;   \/* If EP_FromJoin, the right table of the join *\/$/;"	m	struct:Expr	file:
iRowid	drivers/SQLite/sqlite3/sqlite3.c	/^    i64 iRowid;                \/* Rowid in main table of the key *\/$/;"	m	struct:Stat3Accum::Stat3Sample	file:
iRowid	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 iRowid;$/;"	m	struct:RtreeCell	file:
iRowid	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iRowid;           \/* Current rowid *\/$/;"	m	struct:Fts3auxCursor	file:
iSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^  int iSavepoint;           \/* Depth of the SAVEPOINT stack *\/$/;"	m	struct:VTable	file:
iSelectId	drivers/SQLite/sqlite3/sqlite3.c	/^    u8 iSelectId;     \/* If pSelect!=0, the id of the sub-select in EQP *\/$/;"	m	struct:SrcList::SrcList_item	file:
iSelectId	drivers/SQLite/sqlite3/sqlite3.c	/^  int iSelectId;$/;"	m	struct:Parse	file:
iSize	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 iSize;                          \/* Size of this allocation *\/$/;"	m	struct:MemBlockHdr	file:
iSize	drivers/SQLite/sqlite3/sqlite3.c	/^  int iSize;                      \/* Amount of zBuf[] currently used *\/$/;"	m	struct:JournalFile	file:
iSize	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 iSize;      \/* Maximum bit index.  Max iSize is 4,294,967,296. *\/$/;"	m	struct:Bitvec	file:
iSorterColumn	drivers/SQLite/sqlite3/sqlite3.c	/^    int iSorterColumn;       \/* Column number in the sorting index *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iStartBlock	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 iStartBlock;      \/* Rowid of first leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iStatement	drivers/SQLite/sqlite3/sqlite3.c	/^  int iStatement;         \/* Statement number (or 0 if has not opened stmt) *\/$/;"	m	struct:Vdbe	file:
iStrategy	drivers/SQLite/sqlite3/sqlite3.c	/^  int iStrategy;                    \/* Copy of idxNum search parameter *\/$/;"	m	struct:RtreeCursor	file:
iSub	drivers/SQLite/sqlite3/sqlite3.c	/^  int iSub;                  \/* 0 = main program, 1 = first sub-program etc. *\/$/;"	m	struct:VdbeOpIter	file:
iSubRec	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno iSubRec;                \/* Index of first record in sub-journal *\/$/;"	m	struct:PagerSavepoint	file:
iSum	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 iSum;         \/* Integer sum *\/   $/;"	m	struct:SumCtx	file:
iTab	drivers/SQLite/sqlite3/sqlite3.c	/^  int iTab;            \/* The root page of the table to be locked *\/$/;"	m	struct:TableLock	file:
iTabCur	drivers/SQLite/sqlite3/sqlite3.c	/^  int iTabCur;          \/* The VDBE cursor used to access the table *\/$/;"	m	struct:WhereLevel	file:
iTable	drivers/SQLite/sqlite3/sqlite3.c	/^    int iTable;              \/* Cursor number of the source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iTable	drivers/SQLite/sqlite3/sqlite3.c	/^    int iTable;           \/* Table cursor number *\/$/;"	m	struct:Parse::yColCache	file:
iTable	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno iTable;          \/* Root page of table *\/$/;"	m	struct:BtLock	file:
iTable	drivers/SQLite/sqlite3/sqlite3.c	/^  int iTable;            \/* TK_COLUMN: cursor number of table holding column$/;"	m	struct:Expr	file:
iTail	drivers/SQLite/sqlite3/sqlite3.c	/^  int iTail;                      \/* Next value in trailing position list *\/$/;"	m	struct:SnippetPhrase	file:
iTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  int iTerm;$/;"	m	struct:TermOffsetCtx	file:
iTermOffset	drivers/SQLite/sqlite3/sqlite3.c	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
iTermOffset	drivers/SQLite/sqlite3/sqlite3.h	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iToken	drivers/SQLite/sqlite3/sqlite3.c	/^  int iToken;                     \/* Position of token in phrase *\/$/;"	m	struct:Fts3TokenAndCost	file:
iToken	drivers/SQLite/sqlite3/sqlite3.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iToken	drivers/SQLite/sqlite3/sqlite3.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iToken	drivers/SQLite/sqlite3/sqlite3.c	/^  int iToken;$/;"	m	struct:IcuCursor	file:
iTop	drivers/SQLite/sqlite3/sqlite3.c	/^  int iTop;                      \/* The very beginning of the WHERE loop *\/$/;"	m	struct:WhereInfo	file:
iValue	drivers/SQLite/sqlite3/sqlite3.c	/^    int iValue;            \/* Non-negative integer value if EP_IntValue *\/$/;"	m	union:Expr::__anon42	file:
iVersion	drivers/SQLite/sqlite3/sqlite3.c	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs	file:
iVersion	drivers/SQLite/sqlite3/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods	file:
iVersion	drivers/SQLite/sqlite3/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_module	file:
iVersion	drivers/SQLite/sqlite3/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_tokenizer_module	file:
iVersion	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 iVersion;                   \/* Wal-index version *\/$/;"	m	struct:WalIndexHdr	file:
iVersion	drivers/SQLite/sqlite3/sqlite3.h	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs
iVersion	drivers/SQLite/sqlite3/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods
iVersion	drivers/SQLite/sqlite3/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_module
iWriteOff	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 iWriteOff;                  \/* Current write offset within file pTemp1 *\/$/;"	m	struct:VdbeSorter	file:
iZero	drivers/SQLite/sqlite3/sqlite3.c	/^    int iZero;                    \/* Frame number associated with aPgno[0] *\/$/;"	m	struct:WalIterator::WalSegment	file:
ibpp_internals	drivers/Firebird/ibpp/core/_ibpp.cpp	/^namespace ibpp_internals$/;"	n	file:
ibpp_internals	drivers/Firebird/ibpp/core/_ibpp.h	/^namespace ibpp_internals$/;"	n
ibpp_internals	drivers/Firebird/ibpp/core/time.cpp	/^namespace ibpp_internals$/;"	n	file:
ico_	drivers/GTM/TeGTM.h	/^	short ico_, wrot_, wlayer_;$/;"	m	class:TeGTMRoutes
ico_	drivers/GTM/TeGTM.h	/^	short ico_, wrot_, wlayer_;$/;"	m	class:TeGTMWaypoints
icol_	image_processing/TePDIRegGrowSeg.hpp	/^      int             icol_;$/;"	m	class:TePDIRegGrowSeg
icon_descr	drivers/GTM/TeGTM.h	/^	std::vector<char*> icon_descr;$/;"	m	class:TeGTM
iconnum_	drivers/GTM/TeGTM.h	/^	float maxlon_, minlon_, maxlat_, minlat_, layers_, iconnum_;$/;"	m	class:TeGTMHeader
icuCaseFunc16	drivers/SQLite/sqlite3/sqlite3.c	/^static void icuCaseFunc16(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int icuClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
icuCollationColl	drivers/SQLite/sqlite3/sqlite3.c	/^static int icuCollationColl($/;"	f	file:
icuCollationDel	drivers/SQLite/sqlite3/sqlite3.c	/^static void icuCollationDel(void *pCtx){$/;"	f	file:
icuCreate	drivers/SQLite/sqlite3/sqlite3.c	/^static int icuCreate($/;"	f	file:
icuDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^static int icuDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
icuFunctionError	drivers/SQLite/sqlite3/sqlite3.c	/^static void icuFunctionError($/;"	f	file:
icuLikeCompare	drivers/SQLite/sqlite3/sqlite3.c	/^static int icuLikeCompare($/;"	f	file:
icuLikeFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void icuLikeFunc($/;"	f	file:
icuLoadCollation	drivers/SQLite/sqlite3/sqlite3.c	/^static void icuLoadCollation($/;"	f	file:
icuNext	drivers/SQLite/sqlite3/sqlite3.c	/^static int icuNext($/;"	f	file:
icuOpen	drivers/SQLite/sqlite3/sqlite3.c	/^static int icuOpen($/;"	f	file:
icuRegexpDelete	drivers/SQLite/sqlite3/sqlite3.c	/^static void icuRegexpDelete(void *p){$/;"	f	file:
icuRegexpFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void icuRegexpFunc(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuTokenizerModule	drivers/SQLite/sqlite3/sqlite3.c	/^static const sqlite3_tokenizer_module icuTokenizerModule = {$/;"	v	file:
id	drivers/GL/glxint.h	/^    unsigned int id;          $/;"	m	struct:__GLXFBConfigRec
id	drivers/SQLite/sqlite3/sqlite3.c	/^  int  id;          \/* Mutex type *\/$/;"	m	struct:sqlite3_mutex	file:
id	drivers/SQLite/sqlite3/sqlite3.c	/^  int id;                    \/* Mutex type *\/$/;"	m	struct:sqlite3_mutex	file:
id	drivers/SQLite/sqlite3/sqlite3.c	/^  int id;     \/* The mutex type *\/$/;"	m	struct:sqlite3_debug_mutex	file:
id	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 id;                     \/* Id of this connection with its os2ShmNode *\/$/;"	m	struct:os2ShmLink	file:
id	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 id;                     \/* Id of this connection with its winShmNode *\/$/;"	m	struct:winShm	file:
id	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 id;                     \/* Id of this connection within its unixShmNode *\/$/;"	m	struct:unixShm	file:
id	image_processing/TePDIBaatz.hpp	/^  unsigned long int id; \/* segment id *\/$/;"	m	struct:segment
id	image_processing/TePDICluster.hpp	/^    int id;$/;"	m	class:TePDICluster
id	image_processing/TePDIRegion.hpp	/^    long id;$/;"	m	class:TePDIRegion
id	kernel/TeCoverageDecoder.h	/^    int id; \/\/!< The identifier of the block$/;"	m	struct:TeCoverageBlock
id	kernel/TeLayer.h	/^	virtual int id()$/;"	f	class:TeLayer
id	kernel/TeLayer.h	/^	virtual void id(int id)$/;"	f	class:TeLayer
id	kernel/TeLegendEntry.h	/^	int	id () $/;"	f	class:TeLegendEntry
id	kernel/TeLegendEntry.h	/^	void id (int i) { id_ = i; }$/;"	f	class:TeLegendEntry
id	kernel/TeProject.h	/^	virtual int id() $/;"	f	class:TeProject
id	kernel/TeProjection.h	/^	int	id() { return GPid;}$/;"	f	class:TeProjection
id	kernel/TeProjection.h	/^	void id(int i) { GPid = i;}$/;"	f	class:TeProjection
id	kernel/TeTable.h	/^	int id() { return id_; }$/;"	f	class:TeTable
id	kernel/TeView.h	/^	virtual int	id () { return id_; }$/;"	f	class:TeView
id	kernel/TeView.h	/^	virtual void id (int id)$/;"	f	class:TeView
id	kernel/TeViewNode.h	/^	virtual int		id () { return viewNodeParams_.id_; }$/;"	f	class:TeViewNode
id	kernel/TeViewNode.h	/^	virtual void	id (int i){ viewNodeParams_.id_ = i; }$/;"	f	class:TeViewNode
idVec_	drivers/qt/TeQtGLWidget.h	/^	vector<string> idVec_;$/;"	m	class:TeQtGLWidget
id_	image_processing/TePDIParaSegSegment.hpp	/^      SegIdDataType id_; $/;"	m	class:TePDIParaSegSegment
id_	kernel/TeConnection.h	/^    unsigned int id_; \/\/!< Internal identify for the connection.$/;"	m	class:TeConnection
id_	kernel/TeLayer.h	/^	int			id_;					\/\/!< layer unique identification$/;"	m	class:TeLayer
id_	kernel/TeLegendEntry.h	/^	int					id_;$/;"	m	class:TeLegendEntry
id_	kernel/TeProject.h	/^	int id_;$/;"	m	class:TeProject
id_	kernel/TeRepresentation.h	/^	int id_;				\/\/!< representation unique dabatase identifier$/;"	m	struct:TeRepresentation
id_	kernel/TeTable.h	/^	int					id_;	\/\/ unique id from a database where this table may be stored$/;"	m	class:TeTable
id_	kernel/TeView.h	/^	int				id_;	\/\/ view id$/;"	m	class:TeView
id_	kernel/TeViewNode.h	/^	int				id_;$/;"	m	class:TeViewNodeParams
identLength	drivers/SQLite/sqlite3/sqlite3.c	/^static int identLength(const char *z){$/;"	f	file:
identPut	drivers/SQLite/sqlite3/sqlite3.c	/^static void identPut(char *z, int *pIdx, char *zSignedIdent){$/;"	f	file:
idx	drivers/SQLite/sqlite3/sqlite3.c	/^    int idx;          \/* Index in some Table.aCol[] of a column named zName *\/$/;"	m	struct:IdList::IdList_item	file:
idx	drivers/SQLite/sqlite3/sqlite3.c	/^    u16 idx;            \/* Insert this cell before idx-th non-overflow cell *\/$/;"	m	struct:MemPage::_OvflCell	file:
idxHash	drivers/SQLite/sqlite3/sqlite3.c	/^  Hash idxHash;        \/* All (named) indices indexed by name *\/$/;"	m	struct:Schema	file:
idxNum	drivers/SQLite/sqlite3/sqlite3.c	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info	file:
idxNum	drivers/SQLite/sqlite3/sqlite3.h	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info
idxStr	drivers/SQLite/sqlite3/sqlite3.c	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info	file:
idxStr	drivers/SQLite/sqlite3/sqlite3.h	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info
ifnullFunc	drivers/SQLite/sqlite3/sqlite3.c	84762;"	d	file:
ifrom_	kernel/TeGeometry.h	/^	int		ifrom_, ito_;$/;"	m	class:TeArc
ihs2rgb	image_processing/TePDIIHSWaveletFusion.cpp	/^void TePDIIHSWaveletFusion::ihs2rgb(double *ihs, double *rgb)$/;"	f	class:TePDIIHSWaveletFusion
ilConcurrency	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TIL {ilConcurrency, ilReadDirty, ilReadCommitted, ilConsistency};$/;"	e	enum:IBPP::TIL
ilConsistency	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TIL {ilConcurrency, ilReadDirty, ilReadCommitted, ilConsistency};$/;"	e	enum:IBPP::TIL
ilReadCommitted	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TIL {ilConcurrency, ilReadDirty, ilReadCommitted, ilConsistency};$/;"	e	enum:IBPP::TIL
ilReadDirty	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TIL {ilConcurrency, ilReadDirty, ilReadCommitted, ilConsistency};$/;"	e	enum:IBPP::TIL
ilin_	image_processing/TePDIRegGrowSeg.hpp	/^      int             ilin_;$/;"	m	class:TePDIRegGrowSeg
image_	drivers/qt/TeDecoderQtImage.h	/^	QImage*	image_;$/;"	m	class:TeDecoderQtImage
imagelen_	drivers/GTM/TeGTM.h	/^	long imagelen_;$/;"	m	class:TeGTMInformationImages
imagesLayer	drivers/GTM/TeGTM.h	/^	std::map<std::string, std::vector<char*> > imagesLayer;$/;"	m	class:TeGTM
imap_error_	kernel/TeGeometricTransformation.h	/^          double imap_error_;$/;"	m	class:TeGeometricTransformation::ExcTPDataNode
imap_error_	kernel/TeGeometricTransformation.h	/^          double imap_error_;$/;"	m	class:TeGeometricTransformation::TPDataNode
img1FeatMtxPtr_	image_processing/TePDIMMIOMatching.hpp	/^          TePDIMatrix< double > const* img1FeatMtxPtr_;$/;"	m	class:TePDIMMIOMatching::CalcCCorrelationMtxParams
img2FeatMtxPtr_	image_processing/TePDIMMIOMatching.hpp	/^          TePDIMatrix< double > const* img2FeatMtxPtr_;$/;"	m	class:TePDIMMIOMatching::CalcCCorrelationMtxParams
imgMatrixPtr_	image_processing/TePDIMMIOMatching.hpp	/^          TePDIMtxDoubleAdptInt const* imgMatrixPtr_;$/;"	m	class:TePDIMMIOMatching::ExtractLocalMaximasParams
imgMatrixPtr_	image_processing/TePDIMMIOMatching.hpp	/^        TePDIMtxDoubleAdptInt const* imgMatrixPtr_;$/;"	m	struct:TePDIMMIOMatching::GenerateCorrelationFeaturesParams
img_matrix_ds_ptr_	image_processing/TePDIMMIOMatching.hpp	/^          TePDIMtxDoubleAdptInt* img_matrix_ds_ptr_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
img_matrix_ptr_	image_processing/TePDIMMIOMatching.hpp	/^          TePDIMtxDoubleAdptInt* img_matrix_ptr_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
img_matrix_us_ptr_	image_processing/TePDIMMIOMatching.hpp	/^          TePDIMtxDoubleAdptInt* img_matrix_us_ptr_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
imp_	kernel/TeGeneralizedProxMatrix.h	/^	TeProxMatrixImplementation*	imp_;  $/;"	m	class:TeGeneralizedProxMatrix
impl_strategy_	kernel/TeGeneralizedProxMatrix.h	/^	TeGPMImplementation		impl_strategy_;$/;"	m	class:TeGeneralizedProxMatrix
importGTM	drivers/GTM/TeGTM.cpp	/^std::vector<TeLayer*> TeGTM::importGTM(TeDatabase *db, std::string fileName)$/;"	f	class:TeGTM
importImages	drivers/GTM/TeGTM.cpp	/^int TeGTM::importImages(TeLayer* layer)$/;"	f	class:TeGTM
importRoutes	drivers/GTM/TeGTM.cpp	/^bool TeGTM::importRoutes(TeLayer* layer, string attrTableName,string objectIdAtt,int unsigned chunkSize)$/;"	f	class:TeGTM
importRoutes2	drivers/GTM/TeGTM.cpp	/^bool TeGTM::importRoutes2(TeLayer* layer, string attrTableName,string objectIdAtt,int unsigned chunkSize)$/;"	f	class:TeGTM
importTracklogs	drivers/GTM/TeGTM.cpp	/^bool TeGTM::importTracklogs(TeLayer* layer, string attrTableName,string objectIdAtt,int unsigned chunkSize)$/;"	f	class:TeGTM
importTracklogs2	drivers/GTM/TeGTM.cpp	/^bool TeGTM::importTracklogs2(TeLayer* layer, string attrTableName,string objectIdAtt,int unsigned chunkSize)$/;"	f	class:TeGTM
importVtabErrMsg	drivers/SQLite/sqlite3/sqlite3.c	/^static void importVtabErrMsg(Vdbe *p, sqlite3_vtab *pVtab){$/;"	f	file:
importWaypoints	drivers/GTM/TeGTM.cpp	/^bool TeGTM::importWaypoints(TeLayer* layer, string attrTableName,string objectIdAtt,int unsigned chunkSize )$/;"	f	class:TeGTM
imports	drivers/GL/glcore.h	/^    __GLimports imports;$/;"	m	struct:__GLinterfaceRec
imports	drivers/GL/internal/glcore.h	/^    __GLimports imports;$/;"	m	struct:__GLinterfaceRec
in	drivers/SQLite/sqlite3/sqlite3.c	/^    } in;                 \/* Used when plan.wsFlags&WHERE_IN_ABLE *\/$/;"	m	union:WhereLevel::__anon45	typeref:struct:WhereLevel::__anon45::__anon46	file:
in	image_processing/TePDIHants.cpp	/^  fftw_complex *in, *out;$/;"	v
inClauseValues	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::inClauseValues(const string& query, const string& attribute, vector<string>& inClauseVector)$/;"	f	class:TeFirebird
inClauseValues	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::inClauseValues(const string& query, const string& attribute, vector<string>& inClauseVector)$/;"	f	class:TeMySQL
inClauseValues	kernel/TeDatabase.cpp	/^TeDatabase::inClauseValues(const string& query, const string& \/* attribute *\/, vector<string>& inClauseVector)$/;"	f	class:TeDatabase
inFix2PostFix	image_processing/TePDIArithmetic.cpp	/^void TePDIArithmetic::inFix2PostFix( const std::vector< std::string >& input, $/;"	f	class:TePDIArithmetic
inMaximasListPtr_	image_processing/TePDIMMIOMatching.hpp	/^        MaximasListT const* inMaximasListPtr_;$/;"	m	struct:TePDIMMIOMatching::GenerateCorrelationFeaturesParams
inMutex_	image_processing/TePDISAMClassifier.hpp	/^          TeMutex& inMutex_;$/;"	m	class:TePDISAMClassifier::SegThread
inNormalWrite	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char inNormalWrite;   \/* True if in a normal write operation *\/$/;"	m	struct:unixFile	file:
inProgress	drivers/SQLite/sqlite3/sqlite3.c	/^  int inProgress;                   \/* True while initialization in progress *\/$/;"	m	struct:Sqlite3Config	file:
inRasterBands_	image_processing/TePDISAMClassifier.hpp	/^          const std::vector< unsigned int >& inRasterBands_;$/;"	m	class:TePDISAMClassifier::SegThread
inRaster_	image_processing/TePDISAMClassifier.hpp	/^          TeRaster& inRaster_;$/;"	m	class:TePDISAMClassifier::SegThread
inTrans	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 inTrans;          \/* 0: not writable.  1: Transaction.  2: Checkpoint *\/$/;"	m	struct:Db	file:
inTrans	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 inTrans;        \/* TRANS_NONE, TRANS_READ or TRANS_WRITE *\/$/;"	m	struct:Btree	file:
inTransaction	drivers/SQLite/sqlite3/sqlite3.c	/^  int inTransaction;     \/* True after xBegin but before xCommit\/xRollback *\/$/;"	m	struct:Fts3Table	file:
inTransaction	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 inTransaction;     \/* Transaction state *\/$/;"	m	struct:BtShared	file:
inTransaction_	drivers/PostgreSQL/TePGInterface.h	/^		bool inTransaction_;$/;"	m	class:TePGConnection
inVtabMethod	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 inVtabMethod;        \/* See comments above *\/$/;"	m	struct:Vdbe	file:
in_box_ncols_	image_processing/TePDIMMIOMatching.hpp	/^          unsigned int in_box_ncols_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
in_box_nlines_	image_processing/TePDIMMIOMatching.hpp	/^          unsigned int in_box_nlines_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
in_box_x_off_	image_processing/TePDIMMIOMatching.hpp	/^          unsigned int in_box_x_off_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
in_box_y_off_	image_processing/TePDIMMIOMatching.hpp	/^          unsigned int in_box_y_off_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
incCount	kernel/TeLegendEntry.h	/^	void incCount(int n=1)$/;"	f	class:TeLegendEntry
incrVacuum	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 incrVacuum;        \/* True if incr-vacuum is enabled *\/$/;"	m	struct:BtShared	file:
incrVacuumStep	drivers/SQLite/sqlite3/sqlite3.c	/^static int incrVacuumStep(BtShared *pBt, Pgno nFin, Pgno iLastPg){$/;"	f	file:
ind	kernel/TeViewTreeIterator.h	/^    int ind;           \/\/!< index of the current child in the tree$/;"	m	struct:TeViewTreeIterator::StackElem
ind	kernel/TeViewTreeIterator.h	/^    int ind;           \/\/!< index of the current child in the tree$/;"	m	struct:TeViewTreeRevIterator::StackElem
ind_	drivers/Oracle/TeOCICursor.h	/^	vector <indarray>		ind_;		\/\/!< buffer to store null indicator$/;"	m	class:TeOCICursor
ind_	drivers/qt/TeQtColorBar.h	/^	int		ind_;$/;"	m	class:TeQtColorBar
indarray	drivers/Oracle/TeOCICursor.h	/^typedef struct sb2ind	indarray;$/;"	t	typeref:struct:sb2ind
index	drivers/PostgreSQL/TePGInterface.h	/^		int index(void) const$/;"	f	class:TePGRecordset
index2Coord	kernel/TeDecoder.cpp	/^TeCoord2D TeDecoder::index2Coord (const TeCoord2D &pt)$/;"	f	class:TeDecoder
index2Coord	kernel/TeRaster.h	/^inline TeCoord2D TeRaster::index2Coord(TeCoord2D pt)$/;"	f	class:TeRaster
index2Coord	kernel/TeRasterParams.cpp	/^TeRasterParams::index2Coord (const TeCoord2D& pt) const$/;"	f	class:TeRasterParams
indexBits	drivers/GL/glcore.h	/^    GLint indexBits;		\/* total bits for colorindex *\/$/;"	m	struct:__GLcontextModesRec
indexBits	drivers/GL/glxint.h	/^    GLint indexBits;$/;"	m	struct:__GLXFBConfigRec
indexBits	drivers/GL/internal/glcore.h	/^    GLint indexBits;		\/* total bits for colorindex *\/$/;"	m	struct:__GLcontextModesRec
indexCache_	kernel/TeDecoderVirtualMemory.h	/^	vector<TeBlockIndex> indexCache_; $/;"	m	class:TeDecoderVirtualMemory
indexLine	kernel/TeGridIndex.h	/^		void indexLine(const TeLine2D& l)$/;"	f	class:TeSAM::TeGridIndex
indexTriang_	kernel/TeTin.h	/^	TeSAM::TeRTree<long>* indexTriang_;$/;"	m	class:TeTin
indexVector_	drivers/qt/TeQtGrid.h	/^	vector<string>			indexVector_;$/;"	m	class:TeQtGrid
index_	drivers/GTM/TeGTM.h	/^	short index_, reserva2_;$/;"	m	class:TeGTMLayers
index_type	kernel/dynpq.h	/^		typedef typename std::vector<key_type>::difference_type index_type;$/;"	t	class:br_stl::dynamic_priority_queue
indexable	drivers/SQLite/sqlite3/sqlite3.c	/^  Bitmask indexable;       \/* Bitmask of all indexable tables in the clause *\/$/;"	m	struct:WhereOrInfo	file:
indexer_	image_processing/TePDIRaster2Vector.hpp	/^      TePDITileIndexer* indexer_;    $/;"	m	class:TePDIRaster2VectorPolStruct
indexes_	kernel/TeOverlayUtils.cpp	/^	vector<unsigned int>	indexes_;		$/;"	m	struct:TeSIP	file:
indicatorAM_	kernel/TeAttribute.h	/^	string				indicatorAM_;		\/\/!< AM indicator for a 12 hour clock$/;"	m	struct:TeAttribute
indicatorPM_	kernel/TeAttribute.h	/^	string				indicatorPM_;		\/\/!< PM indicator for a 12 hour clock$/;"	m	struct:TeAttribute
inf_	drivers/qt/TeQtColorBar.h	/^	int		limit_, inf_, sup_;$/;"	m	class:TeQtColorBar
info	drivers/SQLite/sqlite3/sqlite3.c	/^  CellInfo info;            \/* A parse of the cell we are pointing at *\/$/;"	m	struct:BtCursor	file:
info_db_class	drivers/Firebird/ibpp/core/ibase.h	/^enum info_db_class$/;"	g
info_db_implementations	drivers/Firebird/ibpp/core/ibase.h	/^enum  info_db_implementations$/;"	g
info_db_provider	drivers/Firebird/ibpp/core/ibase.h	/^enum info_db_provider$/;"	g
informationimages_	drivers/GTM/TeGTM.h	/^	vector<TeGTMInformationImages*> informationimages_;$/;"	m	class:TeGTM
init	drivers/MrSID/TeDecoderMrSID.cpp	/^void TeDecoderMrSID::init()$/;"	f	class:TeDecoderMrSID
init	drivers/PAMDecoder/TeDecoderPAM.cpp	/^void TeDecoderPAM::init()$/;"	f	class:TeDecoderPAM
init	drivers/SQLite/sqlite3/sqlite3.c	/^  } init;$/;"	m	struct:sqlite3	typeref:struct:sqlite3::sqlite3InitInfo	file:
init	drivers/gdal/TeGDALDecoder.cpp	/^void TeGDALDecoder::init()$/;"	f	class:TeGDALDecoder
init	drivers/qt/TeDecoderQtImage.cpp	/^TeDecoderQtImage::init()$/;"	f	class:TeDecoderQtImage
init	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::init (TeAppTheme *appTheme)$/;"	f	class:TeQtGrid
init	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::init(TeText& tx, TeVisual v, TeQtCanvas* canvas)$/;"	f	class:TeQtTextEdit
init	drivers/qt/ui/animation.ui.h	/^void Animation::init()$/;"	f	class:Animation
init	drivers/qt/ui/help.ui.h	/^void Help::init( QString helpFile )$/;"	f	class:Help
init	drivers/qt/ui/mediaDescription.ui.h	/^void MediaDescription::init()$/;"	f	class:MediaDescription
init	drivers/qt/ui/urlWindow.ui.h	/^void URLWindow::init()$/;"	f	class:URLWindow
init	drivers/spl/PluginParameters.cpp	/^void PluginParameters::init()$/;"	f	class:PluginParameters
init	image_processing/TePDIBlender.cpp	/^bool TePDIBlender::init( const TePDITypes::TePDIRasterPtrType& raster1Ptr,$/;"	f	class:TePDIBlender
init	image_processing/TePDIHistogram.cpp	/^void TePDIHistogram::init()$/;"	f	class:TePDIHistogram
init	image_processing/TePDIInterpolator.cpp	/^void TePDIInterpolator::init()$/;"	f	class:TePDIInterpolator
init	image_processing/TePDIMatrix.hpp	/^  void TePDIMatrix< ElementType >::init()$/;"	f	class:TePDIMatrix
init	image_processing/TePDIRaster2Vector.hpp	/^      void init()$/;"	f	class:TePDIRaster2VectorPolStruct
init	image_processing/TePDITileIndexer.hpp	/^    void init()$/;"	f	class:TePDITileIndexer
init	kernel/TeCoverage.h	/^    virtual void init()$/;"	f	class:TeCoverage
init	kernel/TeCoverageDecoder.h	/^    virtual void init()$/;"	f	class:TeCoverageDecoder
init	kernel/TeCoverageDecoderCacheLRU.h	/^    virtual void init()$/;"	f	class:TeCoverageDecoderCacheLRU
init	kernel/TeCoverageDecoderDatabase.h	/^    virtual void init()$/;"	f	class:TeCoverageDecoderDatabase
init	kernel/TeDecoder.cpp	/^void TeDecoder::init( TeRasterParams& par )$/;"	f	class:TeDecoder
init	kernel/TeDecoderASCIIGrid.cpp	/^TeDecoderASCIIGrid::init()$/;"	f	class:TeDecoderASCIIGrid
init	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::init()$/;"	f	class:TeDecoderDatabase
init	kernel/TeDecoderFile.cpp	/^TeDecoderFile::init()$/;"	f	class:TeDecoderFile
init	kernel/TeDecoderJPEG.cpp	/^TeDecoderJPEG::init()$/;"	f	class:TeDecoderJPEG
init	kernel/TeDecoderMemory.cpp	/^TeDecoderMemory::init()$/;"	f	class:TeDecoderMemory
init	kernel/TeDecoderMemoryMap.cpp	/^TeDecoderMemoryMap::init()$/;"	f	class:TeDecoderMemoryMap
init	kernel/TeDecoderSPR.cpp	/^TeDecoderSPR::init()$/;"	f	class:TeDecoderSPR
init	kernel/TeDecoderSmartMem.cpp	/^void TeDecoderSmartMem::init()$/;"	f	class:TeDecoderSmartMem
init	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::init()$/;"	f	class:TeDecoderTIFF
init	kernel/TeDecoderVirtualMemory.cpp	/^TeDecoderVirtualMemory::init()$/;"	f	class:TeDecoderVirtualMemory
init	kernel/TeMappedMemory.cpp	/^void TeMappedMemory::init()$/;"	f	class:TeMappedMemory
init	kernel/TePieBar.h	/^	void init(int themeId, TeDatabase* db)$/;"	f	class:TePieBar
init	kernel/TeRTree.h	/^			void init()$/;"	f	struct:TeSAM::TeRTree::TePartitionVars
init	kernel/TeRTree.h	/^		void init()$/;"	f	class:TeSAM::TeRTreeNode
init	kernel/TeRaster.cpp	/^bool TeRaster::init( TeRasterParams& pars )$/;"	f	class:TeRaster
init	kernel/TeRaster.cpp	/^bool TeRaster::init()$/;"	f	class:TeRaster
init	kernel/TeSharedPtr.h	/^  void TeSharedPtr< T >::init()$/;"	f	class:TeSharedPtr
init	kernel/TeVisual.h	/^	void init (int r, int g, int b, const string& name="") {red_=r,green_=g,blue_=b;name_=name; }$/;"	f	struct:TeColor
init	utils/mtrand.cpp	/^bool MTRand_int32::init = false;$/;"	m	class:MTRand_int32	file:
init	utils/mtrand.h	/^  static bool init; \/\/ true if init function is called$/;"	m	class:MTRand_int32
initCursorArea	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::initCursorArea(QPoint p)$/;"	f	class:TeQtCanvas
initData	drivers/DXF/TeDXFDriver.cpp	/^bool TeDXFDriver::initData()$/;"	f	class:TeDXFDriver
initData	drivers/gdal/TeOGRDriver.cpp	/^bool TeOGRDriver::initData()$/;"	f	class:TeOGRDriver
initData	drivers/shapelib/TeDriverSHPDBF.cpp	/^bool TeShapefileDriver::initData() $/;"	f	class:TeShapefileDriver
initDbl	stat/TeStatDataStructures.h	/^	void initDbl(int n) $/;"	f	class:TeSTStatInstance
initGLObject	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::initGLObject()$/;"	f	class:TeQtGLWidget
initGeomPortal	kernel/TeQuerierDBStr1.cpp	/^TeQuerierDBStr1::initGeomPortal(TeRepresentation& rep, TeTSEntry* ent)$/;"	f	class:TeQuerierDBStr1
initGlobals	image_processing/TePDIHants.cpp	/^  void initGlobals() {$/;"	f
initLexOut	kernel/lexTemporal.cpp	/^void initLexOut()$/;"	f
initMaskSet	drivers/SQLite/sqlite3/sqlite3.c	101106;"	d	file:
initMetadata	drivers/DXF/TeDXFDriver.cpp	/^bool TeDXFDriver::initMetadata()$/;"	f	class:TeDXFDriver
initMetadata	drivers/gdal/TeOGRDriver.cpp	/^bool TeOGRDriver::initMetadata()$/;"	f	class:TeOGRDriver
initMetadata	drivers/shapelib/TeDriverSHPDBF.cpp	/^bool TeShapefileDriver::initMetadata() $/;"	f	class:TeShapefileDriver
initParse	kernel/yyTemporal.cpp	/^int initParse(const string& strIn, TeDatabase* db)$/;"	f
initPortal	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::initPortal()$/;"	f	class:TeQtGrid
initPortal	kernel/TeQuerierDBStr1.cpp	/^TeQuerierDBStr1::initPortal(TeRepresentation& rep, TeTSEntry* ent)$/;"	f	class:TeQuerierDBStr1
initPortal	kernel/TeQuerierDBStr2.cpp	/^TeQuerierDBStr2::initPortal(TeTSEntry* ent)  $/;"	f	class:TeQuerierDBStr2
initPortal	kernel/TeQuerierDBStr3.cpp	/^TeQuerierDBStr3::initPortal(TeTSEntry* ent)  $/;"	f	class:TeQuerierDBStr3
initRastersList	image_processing/TePDIBatchGeoMosaic.cpp	/^bool TePDIBatchGeoMosaic::initRastersList( $/;"	f	class:TePDIBatchGeoMosaic
initUconvObjects	drivers/SQLite/sqlite3/sqlite3.c	/^static void initUconvObjects( void ){$/;"	f	file:
initVars	kernel/TeDecoderSmartMem.cpp	/^void TeDecoderSmartMem::initVars()$/;"	f	class:TeDecoderSmartMem
init_conv_buf	image_processing/TePDIBufferedFilter.cpp	/^void TePDIBufferedFilter::init_conv_buf()$/;"	f	class:TePDIBufferedFilter
init_destination	drivers/libjpeg/jmemdst.c	/^init_destination (j_compress_ptr cinfo)$/;"	f
init_jhist_	image_processing/TePDIJointHistogram.hpp	/^	    unsigned int** init_jhist_;$/;"	m	class:TePDIJointHistogram
init_jhist_cols_	image_processing/TePDIJointHistogram.hpp	/^      unsigned int init_jhist_cols_;$/;"	m	class:TePDIJointHistogram
init_jhist_lines_	image_processing/TePDIJointHistogram.hpp	/^      unsigned int init_jhist_lines_;$/;"	m	class:TePDIJointHistogram
init_maskmatrix	image_processing/TePDIBufferedFilter.cpp	/^void TePDIBufferedFilter::init_maskmatrix()$/;"	f	class:TePDIBufferedFilter
init_r1hist_	image_processing/TePDIJointHistogram.hpp	/^	    unsigned int* init_r1hist_;$/;"	m	class:TePDIJointHistogram
init_r2hist_	image_processing/TePDIJointHistogram.hpp	/^	    unsigned int* init_r2hist_;$/;"	m	class:TePDIJointHistogram
init_source	drivers/libjpeg/jmemsrc.c	/^init_source (j_decompress_ptr cinfo)$/;"	f
initialDataSize	drivers/libjpeg/jmemdstsrc.h	/^  unsigned int initialDataSize;		\/* size of the initially allocated buffer*\/$/;"	m	struct:__anon36
initialIndex_	kernel/TeOverlayUtils.cpp	/^	unsigned int	initialIndex_; \/\/indice da coordenada inicial do fragmento$/;"	m	struct:TeSFragment	file:
initialLeftNumber_	functions/TeAddressLocator.h	/^	int initialLeftNumber_;			\/\/!< The initial location left number$/;"	m	struct:TeAddressDescription
initialLeftNumber_	functions/TeAddressLocator.h	/^	string initialLeftNumber_;		\/\/!< The field name with the initial location left number$/;"	m	struct:TeAddressMetadata
initialNeighbourhoodRadius_	kernel/TeCoverageInterpolatorNN.h	/^    double initialNeighbourhoodRadius_; \/\/!< The initial radius used for interpolation.$/;"	m	class:TeCoverageInterpolatorNN
initialRightNumber_	functions/TeAddressLocator.h	/^	int initialRightNumber_;		\/\/!< The initial location right number$/;"	m	struct:TeAddressDescription
initialRightNumber_	functions/TeAddressLocator.h	/^	string initialRightNumber_;		\/\/!< The field name with the initial location right number$/;"	m	struct:TeAddressMetadata
initial_column	image_processing/TePDIKMeansClas.hpp	/^    int initial_column;$/;"	m	class:TePDIKMeansClas
initial_line	image_processing/TePDIKMeansClas.hpp	/^    int initial_line;$/;"	m	class:TePDIKMeansClas
initialize	drivers/gdal/TeGDALDecoder.cpp	/^void TeGDALDecoder::initialize()$/;"	f	class:TeGDALDecoder
initialize	kernel/TeConnectionPool.cpp	/^bool TeConnectionPool::initialize(const std::string& user, const std::string& password, const std::string& host, $/;"	f	class:TeConnectionPool
initializeGL	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::initializeGL()$/;"	f	class:TeQtGLWidget
initialize_segments	image_processing/TePDIBaatz.cpp	/^int initialize_segments(struct segment ***segments_ptr_vector, $/;"	f
initialized	image_processing/TePDICluster.hpp	/^    bool initialized;$/;"	m	class:TePDICluster
initiallyEmpty	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 initiallyEmpty;    \/* Database is empty at start of transaction *\/$/;"	m	struct:BtShared	file:
ino	drivers/SQLite/sqlite3/sqlite3.c	/^  ino_t ino;                  \/* Inode number *\/$/;"	m	struct:unixFileId	file:
inodeList	drivers/SQLite/sqlite3/sqlite3.c	/^static unixInodeInfo *inodeList = 0;$/;"	v	file:
input	kernel/TeGraph.cpp	/^	unsigned char input;        \/* color of input window *\/$/;"	m	struct:Txtc	file:
inputChannelsVecPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          std::vector< unsigned int > const* inputChannelsVecPtr_;$/;"	m	class:TePDIParallelSegmenter::SegmenterThreadEntryParams::std
inputColorVec_	drivers/qt/TeQtColorBar.h	/^	vector<ColorBar> inputColorVec_;$/;"	m	class:TeQtColorBar
inputRasterPtr_	image_processing/TePDIParaSegBaatzStrategy.hpp	/^      TePDITypes::TePDIRasterPtrType inputRasterPtr_;$/;"	m	class:TePDIParaSegBaatzStrategy
inputRasterPtr_	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^      TePDITypes::TePDIRasterPtrType inputRasterPtr_;$/;"	m	class:TePDIParaSegRegGrowStrategy
inputRasterPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          TeRaster* inputRasterPtr_;      $/;"	m	class:TePDIParallelSegmenter::SegmenterThreadEntryParams
inputType_	kernel/TePieBar.h	/^	int				inputType_;$/;"	m	class:TePieBar
input_answer	kernel/TeGraph.cpp	/^	unsigned char input_answer; \/* color of input window answer *\/	$/;"	m	struct:Txtc	file:
input_image_channel_	image_processing/TePDIMMIOMatching.hpp	/^          unsigned int input_image_channel_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
input_image_mean_	image_processing/TePDIMallatWavelets.hpp	/^      double input_image_mean_;$/;"	m	class:TePDIMallatWavelets
input_image_ptr_	image_processing/TePDIMMIOMatching.hpp	/^          TePDITypes::TePDIRasterPtrType input_image_ptr_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
input_prompt	kernel/TeGraph.cpp	/^	unsigned char input_prompt; \/* color of input window prompt *\/$/;"	m	struct:Txtc	file:
input_raster	image_processing/TePDIKMeansClas.hpp	/^  TePDITypes::TePDIRasterPtrType input_raster;$/;"	m	class:TePDIKMeansClas
input_raster_	image_processing/TePDIHaralick.hpp	/^      TePDITypes::TePDIRasterPtrType input_raster_;$/;"	m	class:TePDIHaralick
input_raster_max_chan_val_vec_	image_processing/TePDIInterpolator.hpp	/^      double* input_raster_max_chan_val_vec_;  $/;"	m	class:TePDIInterpolator
input_raster_min_chan_val_vec_	image_processing/TePDIInterpolator.hpp	/^      double* input_raster_min_chan_val_vec_; $/;"	m	class:TePDIInterpolator
input_raster_nptr_	image_processing/TePDIInterpolator.hpp	/^      TeRaster* input_raster_nptr_;  $/;"	m	class:TePDIInterpolator
input_raster_params_nptr_	image_processing/TePDIInterpolator.hpp	/^      TeRasterParams* input_raster_params_nptr_;$/;"	m	class:TePDIInterpolator
input_raster_ptr_	image_processing/TePDIInterpolator.hpp	/^      TeSharedPtr< TeRaster > input_raster_ptr_;      $/;"	m	class:TePDIInterpolator
insert	kernel/TeErrorLog.cpp	/^TeErrorLog::insert ( TeErrorType code, const string& msg )$/;"	f	class:TeErrorLog
insert	kernel/TeGridIndex.h	/^		void insert(const TeCoord2D& c, const unsigned int& itemId)$/;"	f	class:TeSAM::TeGridIndex
insert	kernel/TeGridIndex.h	/^		void insert(const TeCoord2D& c1, const TeCoord2D& c2, const unsigned int& itemId)$/;"	f	class:TeSAM::TeGridIndex
insert	kernel/TeKdTree.h	/^void TeKdTree<KdTreeNode>::insert(const kdKey& key, const kdDataItem& item)$/;"	f	class:TeSAM::TeKdTree
insert	kernel/TeRTree.h	/^		void insert(const TeBox& rect, const DATATYPE& data)$/;"	f	class:TeSAM::TeRTree
insert	kernel/TeRTree.h	/^bool TeRTree<DATATYPE, MAXNODES, MINNODES>::insert(const TeBox& rect, const DATATYPE& data, TeRTreeNodeType** root, int level)$/;"	f	class:TeSAM::TeRTree
insert	kernel/graph.h	/^	int Graph<VertexType,EdgeType>::insert(const VertexType& e) $/;"	f	class:br_stl::Graph
insert	kernel/graph.h	/^	void Graph<VertexType,EdgeType>::insert(const VertexType& e1,$/;"	f	class:br_stl::Graph
insertAddressMetadata	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::insertAddressMetadata(const TeAddressMetadata& metadata)$/;"	f	class:TeAddressLocator
insertAppTheme	drivers/qt/TeApplicationUtils.cpp	/^bool insertAppTheme(TeDatabase* db, TeAppTheme *appTheme, const string& tableName)$/;"	f
insertArc	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertArc(const string& table, TeArc &arc)$/;"	f	class:TeFirebird
insertArc	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertArc(const string& table, TeArc &arc)$/;"	f	class:TeMySQL
insertArc	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertArc (const string& table, TeArc &arc)$/;"	f	class:TeOCIOracle
insertArc	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::insertArc (const string& table, TeArc &arc)$/;"	f	class:TeOracleSpatial
insertArc	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertArc(const string& table, TeArc& arc)$/;"	f	class:TePostgreSQL
insertArc	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertArc(const string& table,TeArc &arc)$/;"	f	class:TeSQLite
insertArc	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertArc (const string& table, TeArc &arc)$/;"	f	class:TeAdo
insertArc	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertArc (const string& table, TeArc &arc)$/;"	f	class:TeFireBird
insertArc	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertArc (const string& table, TeArc &arc)$/;"	f	class:TeOracle
insertArcSet	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertArcSet (const string& table, TeArcSet &as)$/;"	f	class:TeAdo
insertArcSet	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertArcSet (const string& table, TeArcSet &as)$/;"	f	class:TeFireBird
insertArcSet	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertArcSet (const string& table, TeArcSet &as)$/;"	f	class:TeOracle
insertArcSet	kernel/TeDatabase.cpp	/^TeDatabase::insertArcSet	(const string& table, TeArcSet &as)$/;"	f	class:TeDatabase
insertArea	functions/TeGeoProcessingFunctions.cpp	/^inline void insertArea(const string& cellId, const string& polId, const double& area, map<string, map<string, double> >& cellMap)$/;"	f
insertBinaryOperator	drivers/SQLite/sqlite3/sqlite3.c	/^static void insertBinaryOperator($/;"	f	file:
insertBlob	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertBlob (const string& tableName, const string& columnBlob , const string& whereClause, unsigned char* data, int size)$/;"	f	class:TeFirebird
insertBlob	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertBlob (const string& tableName, const string& columnBlob , const string& whereClause, unsigned char* data, int size)$/;"	f	class:TeMySQL
insertBlob	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertBlob (const string& tableName, const string& columnBlob, const string& whereClause, unsigned char* data, int size)$/;"	f	class:TeOCIOracle
insertBlob	drivers/PostgreSQL/TePGInterface.cpp	/^Oid TePGConnection::insertBlob(char* buff, const int& blobSize)$/;"	f	class:TePGConnection
insertBlob	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertBlob (const string& tableName, const string& columnBlob, const string& whereClause, unsigned char* data, int size)$/;"	f	class:TePostgreSQL
insertBlob	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertBlob(const string& tableName, const string& columnBlob, const string& whereClause, unsigned char* data, int size)$/;"	f	class:TeSQLite
insertBlob	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertBlob (const string& tableName, const string& columnBlob, const string& whereClause, unsigned char* data, int size)$/;"	f	class:TeAdo
insertBlob	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertBlob (const string& tableName, const string& columnBlob, const string& whereClause, unsigned char* data, int size)$/;"	f	class:TeFireBird
insertBlob	kernel/TeDatabase.cpp	/^TeDatabase::insertBlob (const string& tableName, const string& columnBlob, TeAttributeRep& columnId, const string& valueId, const string& fileName)$/;"	f	class:TeDatabase
insertBlob	kernel/TeDatabase.cpp	/^TeDatabase::insertBlob (const string& tableName, const string& columnBlob, TeAttributeRep& columnId, const string& valueId, unsigned char* data, int size)$/;"	f	class:TeDatabase
insertBlob	kernel/TeDatabase.cpp	/^TeDatabase::insertBlob (const string& tableName, const string& columnBlob, const string& whereClause, const string& fileName)$/;"	f	class:TeDatabase
insertBoundaryCells	functions/TeGeoProcessingFunctions.cpp	/^bool insertBoundaryCells(int newId, TeLayer* outPutLayer, map<string, map<string, double> >& cellMap, TeTheme* cellTheme, TeTheme* themeTrim = 0)$/;"	f
insertBreaklines	kernel/TeTin.cpp	/^TeTin::insertBreaklines(TeLineSet& breaklineSet, double scale)$/;"	f	class:TeTin
insertBreaklinesPoints	kernel/TeTin.cpp	/^TeTin::insertBreaklinesPoints(TeLineSet breaklines, double scale)$/;"	f	class:TeTin
insertCell	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertCell(const string& table, TeCell &c)$/;"	f	class:TeFirebird
insertCell	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertCell(const string& table, TeCell &c)$/;"	f	class:TeMySQL
insertCell	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertCell (const string& table, TeCell &cell )$/;"	f	class:TeOCIOracle
insertCell	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::insertCell (const string& table, TeCell &cell )$/;"	f	class:TeOracleSpatial
insertCell	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::insertCell(const string& table, TeCell &c)$/;"	f	class:TePostGIS
insertCell	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertCell(const string& table, TeCell &c)$/;"	f	class:TePostgreSQL
insertCell	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertCell(const string& table, TeCell &c)$/;"	f	class:TeSQLite
insertCell	drivers/SQLite/sqlite3/sqlite3.c	/^static void insertCell($/;"	f	file:
insertCell	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertCell (const string& table, TeCell &c)$/;"	f	class:TeAdo
insertCell	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertCell (const string& table, TeCell &cell)$/;"	f	class:TeFireBird
insertCell	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertCell (const string& table, TeCell &cell)$/;"	f	class:TeOracle
insertCellSet	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertCellSet (const string& table, TeCellSet &cs)$/;"	f	class:TeAdo
insertCellSet	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertCellSet (const string& table, TeCellSet &cs)$/;"	f	class:TeFireBird
insertCellSet	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertCellSet (const string& table, TeCellSet &cs)$/;"	f	class:TeOracle
insertCellSet	kernel/TeDatabase.cpp	/^TeDatabase::insertCellSet	(const string& table, TeCellSet &cs)$/;"	f	class:TeDatabase
insertChartParams	drivers/qt/TeApplicationUtils.cpp	/^bool insertChartParams(TeDatabase* db, TeAppTheme *theme)$/;"	f
insertComponent	image_processing/TePDIMixModelComponentList.cpp	/^bool TePDIMixModelComponentList::insertComponent(unsigned int cn, TePDIMixModelComponent c)$/;"	f	class:TePDIMixModelComponentList
insertComponent	image_processing/TePDIMixModelComponentList.cpp	/^bool TePDIMixModelComponentList::insertComponent(unsigned int cn, string l)$/;"	f	class:TePDIMixModelComponentList
insertData	kernel/TeKdTree.h	/^		void insertData(KdTreeNode*& node, const kdDataItem& data, const kd_node_data_set_tag&)$/;"	f	class:TeSAM::TeKdTree
insertData	kernel/TeKdTree.h	/^		void insertData(KdTreeNode*& node, const kdDataItem& data, const kd_node_data_single_tag&)$/;"	f	class:TeSAM::TeKdTree
insertDatabase	kernel/TeDBConnectionsPool.cpp	/^void TeDBConnectionsPool::insertDatabase(TeDatabase* db, const int& dbId)$/;"	f	class:TeDBConnectionsPool
insertDatum	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::insertDatum(const TeDatum& datum)$/;"	f	class:TeFirebird
insertDatum	kernel/TeDatabase.cpp	/^bool TeDatabase::insertDatum(const TeDatum& datum)$/;"	f	class:TeDatabase
insertElement	drivers/SQLite/sqlite3/sqlite3.c	/^static void insertElement($/;"	f	file:
insertFront	kernel/TeViewNode.cpp	/^TeViewTree::insertFront(TeViewNode* node)$/;"	f	class:TeViewTree
insertGPM	drivers/qt/TeApplicationUtils.h	/^bool insertGPM(TeDatabase* db, TeGeneralizedProxMatrix<set>* gpm, vector<string>& objs)$/;"	f
insertGrouping	kernel/TeDatabase.cpp	/^TeDatabase::insertGrouping (int themeId, const TeGrouping& grouping)$/;"	f	class:TeDatabase
insertHifen	functions/TeAddressLocator.cpp	/^void TeAddressLocator::insertHifen(string& zipCode) const$/;"	f	class:TeAddressLocator
insertId	drivers/MySQL/TeMySQL.cpp	/^int TeMySQL::insertId ()$/;"	f	class:TeMySQL
insertId	drivers/MySQL/TeMySQL.cpp	/^int TeMySQLPortal::insertId ()$/;"	f	class:TeMySQLPortal
insertInfo2Blob	drivers/qt/TeApplicationUtils.cpp	/^bool insertInfo2Blob(TeDatabase* db, int layerId, const string& tableName, const  string& fileName, const  string& type)$/;"	f
insertKernelMetadata	drivers/qt/TeApplicationUtils.cpp	/^bool insertKernelMetadata(TeDatabase* db, TeKernelParams& kernelPar)$/;"	f
insertLayer	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertLayer (TeLayer* layer)$/;"	f	class:TeFirebird
insertLayer	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::insertLayer (TeLayer* layer)$/;"	f	class:TeMySQL
insertLayer	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertLayer(TeLayer* layer)$/;"	f	class:TeOCIOracle
insertLayer	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertLayer(TeLayer *layer)$/;"	f	class:TePostgreSQL
insertLayer	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertLayer(TeLayer* layer)$/;"	f	class:TeSQLite
insertLayer	drivers/ado/TeAdoDB.cpp	/^bool TeAdo::insertLayer (TeLayer* layer)$/;"	f	class:TeAdo
insertLayer	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertLayer (TeLayer* layer)$/;"	f	class:TeFireBird
insertLayer	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertLayer (TeLayer* layer)$/;"	f	class:TeOracle
insertLegend	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::insertLegend (TeLegendEntry *legend)$/;"	f	class:TeFirebird
insertLegend	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::insertLegend (TeLegendEntry *legend)$/;"	f	class:TeMySQL
insertLegend	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertLegend (TeLegendEntry* leg)$/;"	f	class:TeOCIOracle
insertLegend	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertLegend(TeLegendEntry *legend)$/;"	f	class:TePostgreSQL
insertLegend	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertLegend(TeLegendEntry *legend)$/;"	f	class:TeSQLite
insertLegend	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertLegend (TeLegendEntry *legend)$/;"	f	class:TeAdo
insertLegend	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertLegend (TeLegendEntry* leg)$/;"	f	class:TeFireBird
insertLegend	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertLegend (TeLegendEntry* leg)$/;"	f	class:TeOracle
insertLine	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertLine (const string& table, TeLine2D &l)$/;"	f	class:TeFirebird
insertLine	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertLine (const string& table, TeLine2D &l)$/;"	f	class:TeMySQL
insertLine	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertLine (const string& table, TeLine2D &line)$/;"	f	class:TeOCIOracle
insertLine	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::insertLine (const string& table, TeLine2D &line)$/;"	f	class:TeOracleSpatial
insertLine	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::insertLine(const string& table, TeLine2D& l)$/;"	f	class:TePostGIS
insertLine	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertLine(const string& table, TeLine2D& l)$/;"	f	class:TePostgreSQL
insertLine	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertLine(const string& table, TeLine2D &l)$/;"	f	class:TeSQLite
insertLine	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertLine (const string& table, TeLine2D &line)$/;"	f	class:TeAdo
insertLine	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertLine (const string& table, TeLine2D &line)$/;"	f	class:TeFireBird
insertLine	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertLine (const string& table, TeLine2D &line)$/;"	f	class:TeOracle
insertLine	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::insertLine(const string& table, TeLine2D &l)$/;"	f	class:TeSqlServer
insertLine	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::insertLine(const string& table, TeLine2D &l)$/;"	f	class:TeSqlServerSpatial
insertLine	kernel/TeNetwork.cpp	/^TeGraphNetwork:: insertLine (TeLine2D& line, const double& attr) $/;"	f	class:TeGraphNetwork
insertLine	kernel/TeNetwork.cpp	/^TeNetwork:: insertLine (TeLine2D& line, const double& attr) $/;"	f	class:TeNetwork
insertLineSamples	kernel/TeTin.cpp	/^TeTin::insertLineSamples ( TeContourLine& line )$/;"	f	class:TeTin
insertLineSet	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertLineSet(const string& table, TeLineSet &ls)$/;"	f	class:TeMySQL
insertLineSet	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertLineSet(const string& table, TeLineSet &ls)$/;"	f	class:TeOCIOracle
insertLineSet	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertLineSet (const string& table, TeLineSet &ls)$/;"	f	class:TeAdo
insertLineSet	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertLineSet(const string& table, TeLineSet &ls)$/;"	f	class:TeFireBird
insertLineSet	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertLineSet(const string& table, TeLineSet &ls)$/;"	f	class:TeOracle
insertLineSet	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::insertLineSet(const string& table, TeLineSet &ls)$/;"	f	class:TeSqlServer
insertLineSet	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::insertLineSet(const string& table, TeLineSet &ls)$/;"	f	class:TeSqlServerSpatial
insertLineSet	kernel/TeDatabase.cpp	/^TeDatabase::insertLineSet	(const string& table, TeLineSet &ls)$/;"	f	class:TeDatabase
insertMedia	drivers/qt/TeApplicationUtils.cpp	/^bool insertMedia(TeDatabase* db, const string& tableName, string& fileName, const string& description, const string& type, bool blob)$/;"	f
insertMediaObjLayer	drivers/qt/TeApplicationUtils.cpp	/^bool insertMediaObjLayer (TeDatabase* db, TeLayer* layer, const string& objectId, const string& mediaName, const string& mediaTable)$/;"	f
insertMetadata	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::insertMetadata(const string &table, const string &column, double tolx,double toly,TeBox &box,short \/* srid *\/)$/;"	f	class:TeOracleSpatial
insertMetadata	kernel/TeDatabase.h	/^	virtual bool insertMetadata(const string& \/* table *\/, const string& \/* column *\/, double \/* tolx *\/, double \/* toly *\/,TeBox &\/* box *\/,short \/* srid *\/ =0) { return true; };$/;"	f	class:TeDatabase
insertNode	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertNode(const string& table, TeNode &node)$/;"	f	class:TeFirebird
insertNode	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertNode(const string& table, TeNode &node)$/;"	f	class:TeMySQL
insertNode	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertNode (const string& table, TeNode &node)$/;"	f	class:TeOCIOracle
insertNode	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::insertNode (const string& table, TeNode &node)$/;"	f	class:TeOracleSpatial
insertNode	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::insertNode(const string& table, TeNode& node)$/;"	f	class:TePostGIS
insertNode	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertNode(const string& table, TeNode& node)$/;"	f	class:TePostgreSQL
insertNode	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertNode(const string& table, TeNode &node)$/;"	f	class:TeSQLite
insertNode	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertNode (const string& table, TeNode &n)$/;"	f	class:TeAdo
insertNode	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertNode (const string& table, TeNode &node)$/;"	f	class:TeFireBird
insertNode	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertNode (const string& table, TeNode &node)$/;"	f	class:TeOracle
insertNode	kernel/TeNetwork.cpp	/^TeNetwork:: insertNode (TeNode& node, int line)$/;"	f	class:TeNetwork
insertNodeSet	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertNodeSet (const string& table, TeNodeSet &ns)$/;"	f	class:TeAdo
insertNodeSet	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertNodeSet (const string& table, TeNodeSet &ns)$/;"	f	class:TeFireBird
insertNodeSet	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertNodeSet (const string& table, TeNodeSet &ns)$/;"	f	class:TeOracle
insertNodeSet	kernel/TeDatabase.cpp	/^TeDatabase::insertNodeSet	(const string& table, TeNodeSet &ns)$/;"	f	class:TeDatabase
insertObjectIntoCollection	drivers/qt/TeApplicationUtils.cpp	/^string insertObjectIntoCollection(TeTheme* theme, TeCoord2D p, string newId, string newTId)$/;"	f
insertObjectIntoCollection	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::insertObjectIntoCollection(string newId, string newTId)$/;"	f	class:TeQtGrid
insertPixel	image_processing/TePDIMixModelComponent.cpp	/^bool TePDIMixModelComponent::insertPixel(unsigned int bn, double p)$/;"	f	class:TePDIMixModelComponent
insertPixel	image_processing/TePDIMixModelComponentList.cpp	/^bool TePDIMixModelComponentList::insertPixel(unsigned int cn, unsigned int bn, double p)$/;"	f	class:TePDIMixModelComponentList
insertPoint	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertPoint(const string& table, TePoint &p)$/;"	f	class:TeFirebird
insertPoint	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertPoint(const string& table,TePoint &p)$/;"	f	class:TeMySQL
insertPoint	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertPoint(const string& table, TePoint &point)$/;"	f	class:TeOCIOracle
insertPoint	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::insertPoint(const string& table, TePoint &point)$/;"	f	class:TeOracleSpatial
insertPoint	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::insertPoint(const string& table, TePoint &p)$/;"	f	class:TePostGIS
insertPoint	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertPoint(const string& table, TePoint &p)$/;"	f	class:TePostgreSQL
insertPoint	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertPoint(const string& table, TePoint &p)$/;"	f	class:TeSQLite
insertPoint	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertPoint (const string& table, TePoint &p)$/;"	f	class:TeAdo
insertPoint	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertPoint (const string& table, TePoint &p)$/;"	f	class:TeFireBird
insertPoint	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertPoint (const string& table, TePoint &p)$/;"	f	class:TeOracle
insertPoint	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::insertPoint(const string& table, TePoint &p)$/;"	f	class:TeSqlServer
insertPoint	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::insertPoint(const string& table, TePoint &p)$/;"	f	class:TeSqlServerSpatial
insertPoint	kernel/TeTin.cpp	/^TeTin::insertPoint(double x, double y, double value)$/;"	f	class:TeTin
insertPoint	kernel/TeTin.h	/^	bool insertPoint(TeSample& xyz)$/;"	f	class:TeTin
insertPointSet	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertPointSet (const string& table, TePointSet &ps)$/;"	f	class:TeAdo
insertPointSet	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertPointSet (const string& table, TePointSet &ps)$/;"	f	class:TeFireBird
insertPointSet	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertPointSet (const string& table, TePointSet &ps)$/;"	f	class:TeOracle
insertPointSet	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::insertPointSet(const string& table, TePointSet &ps)$/;"	f	class:TeSqlServer
insertPointSet	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::insertPointSet(const string& table, TePointSet &ps)$/;"	f	class:TeSqlServerSpatial
insertPointSet	kernel/TeDatabase.cpp	/^TeDatabase::insertPointSet	(const string& table, TePointSet &ps)$/;"	f	class:TeDatabase
insertPolygon	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertPolygon (const string& table, TePolygon &poly )$/;"	f	class:TeFirebird
insertPolygon	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertPolygon (const string& table, TePolygon &poly )$/;"	f	class:TeMySQL
insertPolygon	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertPolygon (const string& table, TePolygon &poly)$/;"	f	class:TeOCIOracle
insertPolygon	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::insertPolygon (const string& table, TePolygon &poly)$/;"	f	class:TeOracleSpatial
insertPolygon	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::insertPolygon(const string& table, TePolygon &p)$/;"	f	class:TePostGIS
insertPolygon	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertPolygon(const string& table, TePolygon &p)$/;"	f	class:TePostgreSQL
insertPolygon	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertPolygon(const string& table, TePolygon &p)$/;"	f	class:TeSQLite
insertPolygon	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertPolygon (const string& table, TePolygon& pol)$/;"	f	class:TeAdo
insertPolygon	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertPolygon (const string& table, TePolygon &poly)$/;"	f	class:TeFireBird
insertPolygon	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertPolygon (const string& table, TePolygon &poly)$/;"	f	class:TeOracle
insertPolygon	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::insertPolygon (const string& table, TePolygon &pol)$/;"	f	class:TeSqlServer
insertPolygon	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::insertPolygon (const string& table, TePolygon &pol)$/;"	f	class:TeSqlServerSpatial
insertPolygonSet	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertPolygonSet(const string& table, TePolygonSet &ps)$/;"	f	class:TeMySQL
insertPolygonSet	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertPolygonSet(const string& table, TePolygonSet &ps)$/;"	f	class:TeOCIOracle
insertPolygonSet	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertPolygonSet (const string& table, TePolygonSet &ps)$/;"	f	class:TeAdo
insertPolygonSet	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertPolygonSet (const string& table, TePolygonSet &ps)$/;"	f	class:TeFireBird
insertPolygonSet	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertPolygonSet (const string& table, TePolygonSet &ps)$/;"	f	class:TeOracle
insertPolygonSet	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::insertPolygonSet (const string& table, TePolygonSet &ps)$/;"	f	class:TeSqlServer
insertPolygonSet	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::insertPolygonSet (const string& table, TePolygonSet &ps)$/;"	f	class:TeSqlServerSpatial
insertPolygonSet	kernel/TeDatabase.cpp	/^TeDatabase::insertPolygonSet(const string& table, TePolygonSet &ps)$/;"	f	class:TeDatabase
insertProject	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::insertProject (TeProject* project)$/;"	f	class:TeFirebird
insertProject	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::insertProject (TeProject* project)$/;"	f	class:TeMySQL
insertProject	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertProject(TeProject* project)$/;"	f	class:TeOCIOracle
insertProject	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertProject(TeProject *project)$/;"	f	class:TePostgreSQL
insertProject	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertProject(TeProject *project)$/;"	f	class:TeSQLite
insertProject	drivers/ado/TeAdoDB.cpp	/^bool TeAdo::insertProject(TeProject *project)$/;"	f	class:TeAdo
insertProject	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertProject(TeProject* project)$/;"	f	class:TeOracle
insertProjectViewRel	kernel/TeDatabase.cpp	/^TeDatabase::insertProjectViewRel(int projectId, int viewId)$/;"	f	class:TeDatabase
insertProjection	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::insertProjection (TeProjection *proj)$/;"	f	class:TeFirebird
insertProjection	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::insertProjection (TeProjection *proj)$/;"	f	class:TeMySQL
insertProjection	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertProjection (TeProjection *proj)$/;"	f	class:TeOCIOracle
insertProjection	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertProjection(TeProjection *proj)$/;"	f	class:TePostgreSQL
insertProjection	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertProjection(TeProjection* proj)$/;"	f	class:TeSQLite
insertProjection	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertProjection(TeProjection* proj)$/;"	f	class:TeAdo
insertProjection	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertProjection(TeProjection* proj)$/;"	f	class:TeFireBird
insertProjection	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertProjection(TeProjection* proj)$/;"	f	class:TeOracle
insertRasterBlock	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertRasterBlock(const string& table, const string& blockId, const TeCoord2D& ll, const TeCoord2D& ur, $/;"	f	class:TeFirebird
insertRasterBlock	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertRasterBlock(const string& table, const string& blockId, const TeCoord2D& ll, const TeCoord2D& ur,$/;"	f	class:TeMySQL
insertRasterBlock	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertRasterBlock(const string& table, const string& blockId, const TeCoord2D& ll, const TeCoord2D& ur, $/;"	f	class:TeOCIOracle
insertRasterBlock	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::insertRasterBlock(const string& table, const string& blockId, const TeCoord2D& ll, const TeCoord2D& ur, $/;"	f	class:TeOracleSpatial
insertRasterBlock	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertRasterBlock(const string& table, const string& blockId, const TeCoord2D& ll, const TeCoord2D& ur, unsigned char* buf, unsigned long size, int band, unsigned int res, unsigned int subband)$/;"	f	class:TePostgreSQL
insertRasterBlock	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertRasterBlock(const string& table, const string& blockId, const TeCoord2D& ll, const TeCoord2D& ur, unsigned char *buf, unsigned long size, int band, unsigned int res, unsigned int subband)$/;"	f	class:TeSQLite
insertRasterBlock	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertRasterBlock(const string& table, const string& blockId, const TeCoord2D& ll, const TeCoord2D& ur, $/;"	f	class:TeAdo
insertRasterBlock	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertRasterBlock(const string& table, const string& blockId, const TeCoord2D& ll, const TeCoord2D& ur, $/;"	f	class:TeFireBird
insertRasterGeometry	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::insertRasterGeometry(const string& tableName, TeRasterParams& par, const string& objectId)$/;"	f	class:TeFirebird
insertRasterGeometry	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertRasterGeometry(const string& tableName, TeRasterParams& par, const string& objectId)$/;"	f	class:TeFireBird
insertRasterGeometry	kernel/TeDatabase.cpp	/^TeDatabase::insertRasterGeometry(const string& tableName, TeRasterParams& par, const string& objectId)$/;"	f	class:TeDatabase
insertRasterMetadata	kernel/TeDatabase.cpp	/^TeDatabase::insertRasterMetadata (const string& tableName, int geomId, TeRasterParams& par)$/;"	f	class:TeDatabase
insertRasterVisual	kernel/TeDatabase.cpp	/^bool TeDatabase::insertRasterVisual (int themeId , TeRasterVisual* vis)$/;"	f	class:TeDatabase
insertRelationInfo	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertRelationInfo(const int tableId, const string& tField,$/;"	f	class:TeFirebird
insertRelationInfo	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::insertRelationInfo(const int tableId, const string& tField,$/;"	f	class:TeMySQL
insertRelationInfo	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertRelationInfo(const int tableId, const string& tField,$/;"	f	class:TeOCIOracle
insertRelationInfo	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertRelationInfo(const int tableId, const string& tField, const string& rTable, const string& rField, int& relId)$/;"	f	class:TePostgreSQL
insertRelationInfo	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertRelationInfo(const int tableId, const string& tField, const string& rTable, const string& rField, int& relId)$/;"	f	class:TeSQLite
insertRelationInfo	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertRelationInfo(const int tableId, const string& tField,$/;"	f	class:TeAdo
insertRelationInfo	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertRelationInfo(const int tableId, const string& tField,$/;"	f	class:TeFireBird
insertRelationInfo	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertRelationInfo(const int tableId, const string& tField,$/;"	f	class:TeOracle
insertRepresentation	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertRepresentation (int layerId, TeRepresentation& rep)$/;"	f	class:TeFirebird
insertRepresentation	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::insertRepresentation (int layerId, TeRepresentation& rep)$/;"	f	class:TeMySQL
insertRepresentation	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertRepresentation (int layerId, TeRepresentation& rep)$/;"	f	class:TeOCIOracle
insertRepresentation	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertRepresentation(int layerId, TeRepresentation& rep)$/;"	f	class:TePostgreSQL
insertRepresentation	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertRepresentation(int layerId, TeRepresentation& rep)$/;"	f	class:TeSQLite
insertRepresentation	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertRepresentation (int layerId, TeRepresentation& rep)$/;"	f	class:TeAdo
insertRepresentation	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertRepresentation (int layerId, TeRepresentation& rep)$/;"	f	class:TeFireBird
insertRepresentation	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertRepresentation (int layerId, TeRepresentation& rep)$/;"	f	class:TeOracle
insertRow	kernel/TeSTEFunctionsDB.h	/^bool insertRow (Element* elem, TeTable& table, const string& uniqueValue, TeDatabase* db, vector<int>* indexes)$/;"	f
insertSRSId	kernel/TeDatabase.cpp	/^bool TeDatabase::insertSRSId(TeProjection* proj, int srsId)$/;"	f	class:TeDatabase
insertSTInstance	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::insertSTInstance (InstanceType& inst)$/;"	f	class:TeBaseSTInstanceSet
insertSegment	kernel/TeTin.cpp	/^TeTin::insertSegment( TeCoord2D& pf, TeCoord2D& pn )$/;"	f	class:TeTin
insertSpectralBand	image_processing/TePDIMixModelSpectralBandList.cpp	/^bool TePDIMixModelSpectralBandList::insertSpectralBand(TePDIMixModelSpectralBand sb)$/;"	f	class:TePDIMixModelSpectralBandList
insertTable	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertTable(TeTable &table)$/;"	f	class:TeFirebird
insertTable	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::insertTable(TeTable &table)$/;"	f	class:TeMySQL
insertTable	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertTable(TeTable &table)$/;"	f	class:TeOCIOracle
insertTable	drivers/PostgreSQL/TePostgreSQL.cpp	/^TePostgreSQL::insertTable(TeTable &table)$/;"	f	class:TePostgreSQL
insertTable	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertTable (TeTable &table)$/;"	f	class:TeAdo
insertTable	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertTable (TeTable &table)$/;"	f	class:TeFireBird
insertTable	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::insertTable(TeTable &table)$/;"	f	class:TeSqlServer
insertTable	kernel/TeDatabase.cpp	/^TeDatabase::insertTable	(TeTable &table)$/;"	f	class:TeDatabase
insertTableInfo	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertTableInfo (int layerId, TeTable &table, const string& user)$/;"	f	class:TeFirebird
insertTableInfo	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertTableInfo (int layerId, TeTable &table, const string& user)$/;"	f	class:TeMySQL
insertTableInfo	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertTableInfo (int layerId, TeTable &table, const string& user)$/;"	f	class:TeOCIOracle
insertTableInfo	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertTableInfo(int layerId, TeTable& table, const string& user)$/;"	f	class:TePostgreSQL
insertTableInfo	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertTableInfo(int layerId, TeTable &table, const string& user)$/;"	f	class:TeSQLite
insertTableInfo	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertTableInfo(int layerId, TeTable &table, const string& user)$/;"	f	class:TeAdo
insertTableInfo	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertTableInfo(int layerId, TeTable &table, const string& user)$/;"	f	class:TeFireBird
insertTableInfo	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertTableInfo(int layerId, TeTable &table, const string& user)$/;"	f	class:TeOracle
insertText	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertText(const string& table, TeText &t)$/;"	f	class:TeFirebird
insertText	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertText(const string& table, TeText &t)$/;"	f	class:TeMySQL
insertText	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertText	(const string& table, TeText &text)$/;"	f	class:TeOCIOracle
insertText	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::insertText	(const string& table, TeText &text)$/;"	f	class:TeOracleSpatial
insertText	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertText(const string& table, TeText& t)$/;"	f	class:TePostgreSQL
insertText	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertText(const string& table, TeText &t)$/;"	f	class:TeSQLite
insertText	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertText(const string& table, TeText &t)$/;"	f	class:TeAdo
insertText	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertText(const string& table, TeText &text)$/;"	f	class:TeFireBird
insertText	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertText(const string& table, TeText &text)$/;"	f	class:TeOracle
insertText	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::insertText(const string& table, TeText &t)$/;"	f	class:TeSqlServer
insertText	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::insertText(const string& table, TeText &t)$/;"	f	class:TeSqlServerSpatial
insertTextSet	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertTextSet (const string& table, TeTextSet &ts)$/;"	f	class:TeAdo
insertTextSet	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertTextSet (const string& table, TeTextSet &ts)$/;"	f	class:TeFireBird
insertTextSet	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertTextSet (const string& table, TeTextSet &ts)$/;"	f	class:TeOracle
insertTextSet	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::insertTextSet(const string& table, TeTextSet &ts)$/;"	f	class:TeSqlServer
insertTextSet	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::insertTextSet(const string& table, TeTextSet &ts)$/;"	f	class:TeSqlServerSpatial
insertTextSet	kernel/TeDatabase.cpp	/^TeDatabase::insertTextSet	(const string& table, TeTextSet &ts)$/;"	f	class:TeDatabase
insertTheme	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertTheme (TeAbstractTheme *tem)$/;"	f	class:TeFirebird
insertTheme	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::insertTheme (TeAbstractTheme *tem)$/;"	f	class:TeMySQL
insertTheme	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertTheme (TeAbstractTheme *theme)$/;"	f	class:TeOCIOracle
insertTheme	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertTheme(TeAbstractTheme *theme)$/;"	f	class:TePostgreSQL
insertTheme	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertTheme(TeAbstractTheme *theme)$/;"	f	class:TeSQLite
insertTheme	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertTheme (TeAbstractTheme *theme)$/;"	f	class:TeAdo
insertTheme	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertTheme (TeAbstractTheme *theme)$/;"	f	class:TeFireBird
insertTheme	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertTheme (TeAbstractTheme *theme)$/;"	f	class:TeOracle
insertTheme	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::insertTheme(TeAbstractTheme *theme)$/;"	f	class:TeSqlServer
insertThemeGroup	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertThemeGroup (TeViewTree* tree)$/;"	f	class:TeFirebird
insertThemeGroup	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::insertThemeGroup (TeViewTree* tree)$/;"	f	class:TeMySQL
insertThemeGroup	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertThemeGroup(TeViewTree* tree)$/;"	f	class:TeOCIOracle
insertThemeGroup	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertThemeGroup(TeViewTree* tree)$/;"	f	class:TePostgreSQL
insertThemeGroup	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertThemeGroup(TeViewTree* tree)$/;"	f	class:TeSQLite
insertThemeGroup	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertThemeGroup (TeViewTree* tree)$/;"	f	class:TeAdo
insertThemeGroup	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertThemeGroup(TeViewTree* tree)$/;"	f	class:TeFireBird
insertThemeGroup	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertThemeGroup(TeViewTree* tree)$/;"	f	class:TeOracle
insertThemeTable	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertThemeTable (int themeId, int tableId, int relationId, int tableOrder)$/;"	f	class:TeFirebird
insertThemeTable	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::insertThemeTable (int themeId, int tableId, int relationId, int tableOrder)$/;"	f	class:TeMySQL
insertThemeTable	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertThemeTable (int themeId, int tableId, int relationId, int tableOrder)$/;"	f	class:TeOCIOracle
insertThemeTable	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertThemeTable(int themeId, int tableId, int relationId, int tableOrder)$/;"	f	class:TePostgreSQL
insertThemeTable	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertThemeTable(int themeId, int tableId, int relationId, int tableOrder)$/;"	f	class:TeSQLite
insertThemeTable	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertThemeTable	(int themeId, int tableId, int relationId, int tableOrder)$/;"	f	class:TeAdo
insertThemeTable	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertThemeTable (int themeId, int tableId, int relationId, int tableOrder)$/;"	f	class:TeFireBird
insertThemeTable	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertThemeTable (int themeId, int tableId, int relationId, int tableOrder)$/;"	f	class:TeOracle
insertThemeTable	kernel/TeDatabase.cpp	/^TeDatabase::insertThemeTable(TeTheme *theme, TeTable& inputTable)$/;"	f	class:TeDatabase
insertToCoverageLayerTable	kernel/TeCoverageImportUtils.cpp	/^insertToCoverageLayerTable(TeLayer* layer, std::string& coverageLayerTableName, std::string& coverageTableName, const std::string& coverageId, TeBox& coverageBox)$/;"	f
insertToCoverageTable	kernel/TeCoverageImportUtils.cpp	/^insertToCoverageTable(TeLayer* layer, std::string& tableName, const unsigned int blockId, const TeBox& blockBox, const unsigned int numElements, unsigned char* data, const unsigned long dataSize)$/;"	f
insertView	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertView (TeView *view)$/;"	f	class:TeFirebird
insertView	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::insertView (TeView *view)$/;"	f	class:TeMySQL
insertView	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertView(TeView *view)$/;"	f	class:TeOCIOracle
insertView	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertView(TeView *view)$/;"	f	class:TePostgreSQL
insertView	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertView(TeView *view)$/;"	f	class:TeSQLite
insertView	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertView (TeView *view)$/;"	f	class:TeAdo
insertView	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertView (TeView *view)$/;"	f	class:TeFireBird
insertView	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertView (TeView *view)$/;"	f	class:TeOracle
insertView	kernel/TeProject.cpp	/^TeProject::insertView(string name, TeProjection* projection)$/;"	f	class:TeProject
insertViewRel	kernel/TeProject.cpp	/^TeProject::insertViewRel(int viewId)$/;"	f	class:TeProject
insertViewTree	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::insertViewTree (TeViewTree *tree)$/;"	f	class:TeFirebird
insertViewTree	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::insertViewTree (TeViewTree *tree)$/;"	f	class:TeMySQL
insertViewTree	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::insertViewTree (TeViewTree *tree)$/;"	f	class:TeOCIOracle
insertViewTree	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::insertViewTree(TeViewTree *tree)$/;"	f	class:TePostgreSQL
insertViewTree	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::insertViewTree(TeViewTree *tree)$/;"	f	class:TeSQLite
insertViewTree	drivers/ado/TeAdoDB.cpp	/^TeAdo::insertViewTree (TeViewTree *tree)$/;"	f	class:TeAdo
insertViewTree	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::insertViewTree (TeViewTree *tree)$/;"	f	class:TeFireBird
insertViewTree	drivers/ado/TeAdoOracle.cpp	/^TeOracle::insertViewTree (TeViewTree *tree)$/;"	f	class:TeOracle
insertVisual	kernel/TeDatabase.cpp	/^bool TeDatabase::insertVisual (TeLegendEntry *legend)$/;"	f	class:TeDatabase
insertWidget	drivers/qt/TeQtBigTable.h	/^	void insertWidget(int, int, QWidget *) {}$/;"	f	class:TeQtBigTable
instance	kernel/TeAbstractFactory.h	/^	static TeFactoryMap& instance()$/;"	f	class:TeAbstractFactory
instance	kernel/TeFactory.h	/^	static TeFactoryMap& instance ()$/;"	f	class:TeFactory
instance	kernel/TeProgress.cpp	/^TeProgressBase* TeProgress::instance()$/;"	f	class:TeProgress
instance	kernel/TeSingleton.h	/^	static T& instance ()$/;"	f	class:TeSingleton
instanceName2Dec	kernel/TeDecoder.h	/^	static TeNames2Decoders& instanceName2Dec ()$/;"	f	class:TeDecoderFactory
instance_	kernel/TeProgress.cpp	/^TeProgressBase* TeProgress::instance_ = 0;$/;"	m	class:TeProgress	file:
instance_	kernel/TeProgress.h	/^	static TeProgressBase* instance_;	\/\/!< The unique instance of a progress interface$/;"	m	class:TeProgress
instance_	kernel/TePrototype.h	/^	static TePrototypePtr instance_;$/;"	m	class:TePrototype
instance_	kernel/TePrototype.h	/^typename TePrototype<T>::TePrototypePtr TePrototype<T>::instance_;$/;"	m	class:TePrototype
instances_	kernel/TeBaseSTInstanceSet.h	/^	vector<InstanceType>	instances_;		$/;"	m	class:TeBaseSTInstanceSet
int16_t	drivers/Firebird/ibpp/core/ibpp.h	/^	typedef __int16 int16_t;$/;"	t
int16_t	drivers/Firebird/ibpp/core/ibpp.h	/^	typedef short int16_t;$/;"	t
int32_t	drivers/Firebird/ibpp/core/ibpp.h	/^	typedef __int32 int32_t;$/;"	t
int32_t	drivers/Firebird/ibpp/core/ibpp.h	/^	typedef int int32_t;$/;"	t
int32_t	drivers/GL/glxext.h	/^typedef long int int32_t;$/;"	t
int64_t	drivers/Firebird/ibpp/core/ibpp.h	/^	typedef __int64 int64_t;$/;"	t
int64_t	drivers/GL/glxext.h	/^typedef long int int64_t;$/;"	t
int64_t	drivers/GL/glxext.h	/^typedef long long int int64_t;   $/;"	t
int64_t	drivers/GL/glxext.h	/^typedef long long int int64_t;$/;"	t
intChronon_	kernel/TeTimeInterval.h	/^	TeChronon  intChronon_;$/;"	m	class:TeTimeInterval
intKey	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 intKey;           \/* True if intkey flag is set *\/$/;"	m	struct:MemPage	file:
intTestFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void intTestFunc($/;"	f	file:
int_bof_	drivers/PostgreSQL/TePGInterface.cpp	/^const int TePGRecordset::int_bof_ = -1;$/;"	m	class:TePGRecordset	file:
int_bof_	drivers/PostgreSQL/TePGInterface.h	/^		static const int int_bof_;$/;"	m	class:TePGRecordset
int_connection_	drivers/PostgreSQL/TePGInterface.h	/^        int int_connection_;	\/\/ A flag that indicates the state of a connection$/;"	m	class:TePGConnection
int_eof_	drivers/PostgreSQL/TePGInterface.h	/^        int int_eof_;$/;"	m	class:TePGRecordset
int_index_current_	drivers/PostgreSQL/TePGInterface.h	/^        int int_index_current_;$/;"	m	class:TePGRecordset
intensityAttrName1_	stat/TeKernelParams.h	/^	string					intensityAttrName1_;	\/\/ intensity attribute name 		$/;"	m	struct:TeKernelParams
intensityAttrName2_	stat/TeKernelParams.h	/^	string					intensityAttrName2_;	\/\/ intensity attribute name 		$/;"	m	struct:TeKernelParams
intensityAttrTable1_	stat/TeKernelParams.h	/^	string					intensityAttrTable1_;	\/\/ table name that keeps the intensity attribute$/;"	m	struct:TeKernelParams
intensityAttrTable2_	stat/TeKernelParams.h	/^	string					intensityAttrTable2_;	\/\/ table name that keeps the intensity attribute$/;"	m	struct:TeKernelParams
interLineSetInR1_	image_processing/TePDIBlender.hpp	/^      TeLineSet interLineSetInR1_;$/;"	m	class:TePDIBlender
interLineSetInR2_	image_processing/TePDIBlender.hpp	/^      TeLineSet interLineSetInR2_;$/;"	m	class:TePDIBlender
interPolR1IdxRef_	image_processing/TePDIBlender.hpp	/^      TePolygon interPolR1IdxRef_;$/;"	m	class:TePDIBlender
interleaving_	kernel/TeRasterParams.h	/^	TeRasterInterLeavingMode interleaving_;	\/\/!< interleaving mode$/;"	m	class:TeRasterParams
internal_iterator	kernel/TeRedBlackTree.h	/^					internal_iterator()$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
internal_iterator	kernel/TeRedBlackTree.h	/^					internal_iterator(TeRBTree<Node_i>* tree, Node_i* n)$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
internal_iterator	kernel/TeRedBlackTree.h	/^			template<class Node_i> class internal_iterator$/;"	c	class:TeREDBLACK::TeRBTree
internal_matrix_	image_processing/TePDIFilterMask.hpp	/^      mutable TeMatrix internal_matrix_;$/;"	m	class:TePDIFilterMask
internal_params_	kernel/TeGeometricTransformation.h	/^      TeGTParams internal_params_;$/;"	m	class:TeGeometricTransformation
interp1Instance_	image_processing/TePDIBlender.hpp	/^      TePDIInterpolator interp1Instance_;      $/;"	m	class:TePDIBlender
interp2Instance_	image_processing/TePDIBlender.hpp	/^      TePDIInterpolator interp2Instance_;      $/;"	m	class:TePDIBlender
interp_funct_ptr_	image_processing/TePDIInterpolator.hpp	/^      InterpFunctPtr interp_funct_ptr_;$/;"	m	class:TePDIInterpolator
interpolate	image_processing/TePDIInterpolator.hpp	/^      inline void interpolate( const double& line, const double& col, $/;"	f	class:TePDIInterpolator
interpolationPoint	kernel/TeTin.cpp	/^TeTin::interpolationPoint(TeCoord2D &pt, double &z)$/;"	f	class:TeTin
interpolation_	kernel/TeRasterRemap.h	/^	int	 interpolation_;$/;"	m	class:TeRasterRemap
interpolator_	kernel/TeCoverage.h	/^    TeCoverageInterpolator<T>* interpolator_; \/\/!< provides interpolation methods$/;"	m	class:TeCoverage
interrupt_handler	drivers/SQLite/sqlite3/shell.c	/^static void interrupt_handler(int NotUsed){$/;"	f	file:
interruptx	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
interruptx	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
intervalChronon	kernel/TeTimeInterval.cpp	/^TeTimeInterval::intervalChronon(TeChronon c)$/;"	f	class:TeTimeInterval
intervalChronon	kernel/TeTimeInterval.h	/^	TeChronon intervalChronon() { return  intChronon_; }$/;"	f	class:TeTimeInterval
intervalDSExt	drivers/Oracle/OCI/include/occiData.h	/^   void *intervalDSExt;$/;"	m	class:oracle::occi::IntervalDS
intervalYMExt	drivers/Oracle/OCI/include/occiData.h	/^   void *intervalYMExt;$/;"	m	class:oracle::occi::IntervalYM
interval_	kernel/TeAttribute.h	/^	string				interval_;	\/\/!< mesurement interval$/;"	m	struct:TeAttribute
intf	drivers/Firebird/ibpp/core/ibpp.h	/^		T* intf() const						{ return mObject; }$/;"	f	class:IBPP::Ptr
invalid	kernel/TeRedBlackTree.h	/^					void invalid(void)$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
invalidThemeItem_	drivers/qt/TeQtThemeItem.h	/^	bool invalidThemeItem_;$/;"	m	class:TeQtThemeItem
invalidThemeMap	kernel/TeDatabase.h	/^	TeThemeMap&	invalidThemeMap() $/;"	f	class:TeDatabase
invalidThemeMap	kernel/TeMetaModelCache.h	/^		TeThemeMap&	invalidThemeMap () $/;"	f	class:TeMetaModelCache
invalidThemeMap_	kernel/TeMetaModelCache.h	/^		TeThemeMap			invalidThemeMap_;	\/\/!< invalid theme map$/;"	m	class:TeMetaModelCache
invalid_plugins_	drivers/spl/PluginsManager.h	/^      std::vector< SPLPluginInfoT > invalid_plugins_;      $/;"	m	class:PluginsManager
invalidateAllOverflowCache	drivers/SQLite/sqlite3/sqlite3.c	/^static void invalidateAllOverflowCache(BtShared *pBt){$/;"	f	file:
invalidateAllOverflowCache	drivers/SQLite/sqlite3/sqlite3.c	48564;"	d	file:
invalidateCursorsOnModifiedBtrees	drivers/SQLite/sqlite3/sqlite3.c	/^static void invalidateCursorsOnModifiedBtrees(sqlite3 *db){$/;"	f	file:
invalidateIncrblobCursors	drivers/SQLite/sqlite3/sqlite3.c	/^static void invalidateIncrblobCursors($/;"	f	file:
invalidateIncrblobCursors	drivers/SQLite/sqlite3/sqlite3.c	48565;"	d	file:
invalidateOverflowCache	drivers/SQLite/sqlite3/sqlite3.c	/^static void invalidateOverflowCache(BtCursor *pCur){$/;"	f	file:
invalidateOverflowCache	drivers/SQLite/sqlite3/sqlite3.c	48563;"	d	file:
invalidateTempStorage	drivers/SQLite/sqlite3/sqlite3.c	/^static int invalidateTempStorage(Parse *pParse){$/;"	f	file:
inverseMap	kernel/Te2ndDegPolynomialGT.cpp	/^void Te2ndDegPolynomialGT::inverseMap( const TeGTParams& params, const TeCoord2D& pt2, $/;"	f	class:Te2ndDegPolynomialGT
inverseMap	kernel/Te3rdDegPolynomialGT.cpp	/^void Te3rdDegPolynomialGT::inverseMap( const TeGTParams& params, const TeCoord2D& pt2, $/;"	f	class:Te3rdDegPolynomialGT
inverseMap	kernel/TeAffineGT.cpp	/^void TeAffineGT::inverseMap( const TeGTParams& params, const TeCoord2D& pt2, $/;"	f	class:TeAffineGT
inverseMap	kernel/TeGeometricTransformation.h	/^      inline void inverseMap( const TeCoord2D& pt2, $/;"	f	class:TeGeometricTransformation
inverseMap	kernel/TeProjectiveGT.cpp	/^void TeProjectiveGT::inverseMap( const TeGTParams& params, const TeCoord2D& pt2, $/;"	f	class:TeProjectiveGT
inverse_parameters_	kernel/TeGTParams.h	/^      TeMatrix inverse_parameters_;      $/;"	m	class:TeGTParams
invertColorBar	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::invertColorBar()$/;"	f	class:TeQtColorBar
invertObjectStatus	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::invertObjectStatus()$/;"	f	class:TeAbstractTheme
invertSelectionSlot	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::invertSelectionSlot()$/;"	f	class:TeQtGrid
iotrace	drivers/SQLite/sqlite3/shell.c	/^static FILE *iotrace = 0;$/;"	v	file:
iotracePrintf	drivers/SQLite/sqlite3/shell.c	/^static void iotracePrintf(const char *zFormat, ...){$/;"	f	file:
ipRedOrder	kernel/TeFragmentation.cpp	/^struct ipRedOrder	\/\/ XY order$/;"	s	file:
ipRedOrder2	kernel/TeFragmentation.cpp	/^struct ipRedOrder2	\/\/ XY order$/;"	s	file:
isActive	kernel/TeSharedPtr.h	/^      inline bool isActive() const$/;"	f	class:TeSharedPtr
isAppropriateForFactoring	drivers/SQLite/sqlite3/sqlite3.c	/^static int isAppropriateForFactoring(Expr *p){$/;"	f	file:
isAttached	drivers/SQLite/sqlite3/sqlite3.c	/^  int isAttached;          \/* True once backup has been registered with pager *\/$/;"	m	struct:sqlite3_backup	file:
isAutoNumber_	kernel/TeAttribute.h	/^	bool			isAutoNumber_; 	\/\/!< flag to indicate that the attribute is auto number$/;"	m	struct:TeAttributeRep
isAvailable	kernel/TeAbstractTheme.cpp	/^const bool& TeAbstractTheme::isAvailable() const$/;"	f	class:TeAbstractTheme
isAvailable_	kernel/TeAbstractTheme.h	/^	bool isAvailable_, \/\/!< Theme source can be accessed.$/;"	m	class:TeAbstractTheme
isBinaryOperator	image_processing/TePDIArithmetic.cpp	/^bool TePDIArithmetic::isBinaryOperator( const std::string& inputToken ) const$/;"	f	class:TePDIArithmetic
isBlockMergingEnabled	image_processing/TePDIParaSegStrategy.hpp	/^      inline bool isBlockMergingEnabled() const$/;"	f	class:TePDIParaSegStrategy
isBreaklineSegment	kernel/TeTin.cpp	/^TeTin::isBreaklineSegment(long e)$/;"	f	class:TeTin
isCandidateForInOpt	drivers/SQLite/sqlite3/sqlite3.c	/^static int isCandidateForInOpt(Select *p){$/;"	f	file:
isCheck	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isCheck;          \/* True if resolving names in a CHECK constraint *\/$/;"	m	struct:NameContext	file:
isChild	drivers/qt/TeQtCheckListItem.cpp	/^bool TeQtCheckListItem::isChild(QListViewItem *item)$/;"	f	class:TeQtCheckListItem
isClear	drivers/Oracle/OCI/include/occiObjects.h	/^bool Ref<T>::isClear() const$/;"	f	class:oracle::occi::Ref
isConnected	drivers/Oracle/TeOCIConnect.h	/^	bool isConnected() { return connected_; }$/;"	f	class:TeOCIConnection
isConnected	drivers/Oracle/TeOCIOracle.cpp	/^bool TeOCIOraclePortal::isConnected()$/;"	f	class:TeOCIOraclePortal
isConnected	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::isConnected()$/;"	f	class:TeAdoPortal
isConnected	kernel/TeDatabase.h	/^	bool isConnected () $/;"	f	class:TeDatabase
isConnected	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::isConnected (const string& object_id1, const string& object_id2) $/;"	f	class:TeGeneralizedProxMatrix
isConnected	kernel/TeProxMatrixImplementation.h	/^	bool isConnected (const string& object_id1, const string& object_id2) $/;"	f	class:TeProxMatrixImplementation
isConnected_	kernel/TeDatabase.h	/^	bool				isConnected_;			\/\/!< indicates if the connection is open$/;"	m	class:TeDatabase
isConsonant	drivers/SQLite/sqlite3/sqlite3.c	/^static int isConsonant(const char *z){$/;"	f	file:
isCorrelated	drivers/SQLite/sqlite3/sqlite3.c	/^    u8 isCorrelated;  \/* True if sub-query is correlated *\/$/;"	m	struct:SrcList::SrcList_item	file:
isDataAccessible	drivers/DXF/TeDXFDriver.cpp	/^bool TeDXFDriver::isDataAccessible() $/;"	f	class:TeDXFDriver
isDataAccessible	drivers/gdal/TeOGRDriver.cpp	/^bool TeOGRDriver::isDataAccessible() $/;"	f	class:TeOGRDriver
isDataAccessible	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeShapefileDriver::isDataAccessible()$/;"	f	class:TeShapefileDriver
isDataInited	kernel/TeGeoDataDriver.cpp	/^ bool TeGeoDataDriver::isDataInited() const$/;"	f	class:TeGeoDataDriver
isDataInited_	kernel/TeGeoDataDriver.h	/^	bool			isDataInited_; \/\/!< TRUE if the data has already been initialized$/;"	m	class:TeGeoDataDriver
isDate	drivers/SQLite/sqlite3/sqlite3.c	/^static int isDate($/;"	f	file:
isDateInt	drivers/PostgreSQL/TePGInterface.h	/^		bool isDateInt() const$/;"	f	class:TePGConnection
isDateInt_	drivers/PostgreSQL/TePGInterface.h	/^		bool isDateInt_;		\/\/ Tells if server date format is int64 or double (IEEE754)$/;"	m	class:TePGConnection
isDateTimeRegistered	drivers/qt/TeQtGrid.cpp	/^bool TeQtGrid::isDateTimeRegistered(int col) \/\/ portal column$/;"	f	class:TeQtGrid
isDateTimeRegistered	drivers/qt/TeQtGridSource.cpp	/^bool TeQtGridSource::isDateTimeRegistered(int gridCol)$/;"	f	class:TeQtGridSource
isDeferred	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isDeferred;    \/* True if constraint checking is deferred till COMMIT *\/$/;"	m	struct:FKey	file:
isDelete	drivers/SQLite/sqlite3/sqlite3.c	/^  int isDelete;                       \/* Delete on close if true *\/$/;"	m	struct:unixFile	file:
isDelim	drivers/SQLite/sqlite3/sqlite3.c	122130;"	d	file:
isDirect	drivers/GL/glxproto.h	/^    BOOL	isDirect;$/;"	m	struct:GLXCreateContext
isDirect	drivers/GL/glxproto.h	/^    BOOL	isDirect;$/;"	m	struct:GLXCreateContextWithConfigSGIX
isDirect	drivers/GL/glxproto.h	/^    BOOL	isDirect;$/;"	m	struct:GLXCreateNewContext
isDirect	drivers/GL/glxproto.h	/^    BOOL	isDirect;$/;"	m	struct:__anon109
isDirected	kernel/graph.h	/^		bool isDirected() const { return directed;}$/;"	f	class:br_stl::Graph
isDirty	drivers/SQLite/sqlite3/sqlite3.c	/^  int isDirty;$/;"	m	struct:RtreeNode	file:
isDistinctIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static int isDistinctIndex($/;"	f	file:
isDistinctRedundant	drivers/SQLite/sqlite3/sqlite3.c	/^static int isDistinctRedundant($/;"	f	file:
isDone	kernel/TeViewTreeIterator.h	/^inline bool TeViewTreeIterator::isDone()$/;"	f	class:TeViewTreeIterator
isDone	kernel/TeViewTreeIterator.h	/^inline bool TeViewTreeRevIterator::isDone()$/;"	f	class:TeViewTreeRevIterator
isDriverFile	drivers/gdal/TeOGRDriverFactory.cpp	/^bool TeOGRDriverFactory::isDriverFile(const std::string& ogrDriver, TeGeoFileInfo& info)$/;"	f	class:TeOGRDriverFactory
isEOF	drivers/Oracle/TeOCIOracle.cpp	/^bool TeOCIOraclePortal::isEOF() $/;"	f	class:TeOCIOraclePortal
isEOF	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::isEOF()$/;"	f	class:TeAdoPortal
isEdgeTriangle	kernel/TeTin.cpp	/^TeTin::isEdgeTriangle (long t)$/;"	f	class:TeTin
isEditable	kernel/TeAbstractTheme.cpp	/^bool TeAbstractTheme::isEditable() const$/;"	f	class:TeAbstractTheme
isEditable_	kernel/TeAbstractTheme.h	/^		isEditable_; 	\/\/!< Theme can be edited.$/;"	m	class:TeAbstractTheme
isEmpty	kernel/TeKdTree.h	/^		bool isEmpty(void) const$/;"	f	class:TeSAM::TeBasicKdTree
isEmpty	kernel/TeRTree.h	/^		bool isEmpty(void) const$/;"	f	class:TeSAM::TeRTree
isEmpty	kernel/TeTin.h	/^	bool isEmpty ()$/;"	f	class:TeTin
isEnabled	kernel/TeCommunicator.h	/^  bool TeCommunicator< DataType >::isEnabled()$/;"	f	class:TeCommunicator
isEof	drivers/SQLite/sqlite3/sqlite3.c	/^  int isEof;                      \/* True if cursor is at EOF *\/$/;"	m	struct:Fts3auxCursor	file:
isEof	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isEof;                       \/* True if at End Of Results *\/$/;"	m	struct:Fts3Cursor	file:
isEqual	kernel/TeProxMatrixImplementation.h	/^	virtual bool isEqual (TeProxMatrixImplementation& other) $/;"	f	class:TeProxMatrixGraphBreymann
isEqual	kernel/TeProxMatrixImplementation.h	/^	virtual bool isEqual (TeProxMatrixImplementation& other)$/;"	f	class:TeProxMatrixImplementation
isError	drivers/SQLite/sqlite3/sqlite3.c	/^  int isError;          \/* Error code returned by the function. *\/$/;"	m	struct:sqlite3_context	file:
isExclusive	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isExclusive;       \/* True if pWriter has an EXCLUSIVE lock on the db *\/$/;"	m	struct:BtShared	file:
isExternalTable	drivers/qt/TeQtGrid.cpp	/^bool TeQtGrid::isExternalTable(int col) \/\/ portal column$/;"	f	class:TeQtGrid
isFatalError	drivers/SQLite/sqlite3/sqlite3.c	/^static int isFatalError(int rc){$/;"	f	file:
isGeoTiff_	kernel/TeDecoderTIFF.h	/^	bool		isGeoTiff_;	\/\/ indicates if the data has geographical information$/;"	m	class:TeDecoderTIFF
isGroup_	kernel/TeQuerierDBStr1.h	/^	bool						isGroup_;			\/\/! if the portal was built with statistics sql funcionts$/;"	m	class:TeQuerierDBStr1
isHidden	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isHidden;     \/* True if this column is 'hidden' *\/$/;"	m	struct:Column	file:
isHotPoint	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::isHotPoint(QPoint& p)$/;"	f	class:TeQtMultiTextEdit
isHotPoint	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::isHotPoint(QPoint& p)$/;"	f	class:TeQtTextEdit
isIncrblobHandle	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isIncrblobHandle;      \/* True if this cursor is an incr. io handle *\/$/;"	m	struct:BtCursor	file:
isIndex	drivers/SQLite/sqlite3/sqlite3.c	/^  Bool isIndex;         \/* True if an index containing keys only - no data *\/$/;"	m	struct:VdbeCursor	file:
isIndex	drivers/qt/TeQtGrid.cpp	/^bool TeQtGrid::isIndex(int col) \/\/ portal column$/;"	f	class:TeQtGrid
isIndex	kernel/TeTheme.cpp	/^TeTheme::isIndex(unsigned int pos)$/;"	f	class:TeTheme
isInit	drivers/SQLite/sqlite3/sqlite3.c	/^  int isInit;                       \/* True after initialization has finished *\/$/;"	m	struct:Sqlite3Config	file:
isInit	drivers/SQLite/sqlite3/sqlite3.c	/^  int isInit;                    \/* True if initialized *\/$/;"	m	struct:PCacheGlobal	file:
isInit	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isInit;                      \/* 1 when initialized *\/$/;"	m	struct:WalIndexHdr	file:
isInit	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isInit;           \/* True if previously initialized. MUST BE FIRST! *\/$/;"	m	struct:MemPage	file:
isInit	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char isInit;          \/* True if initialized *\/$/;"	m	struct:sqlite3PrngType	file:
isInternalNode	kernel/TeRTree.h	/^        bool isInternalNode() const$/;"	f	class:TeSAM::TeRTreeNode
isInterrupted	drivers/SQLite/sqlite3/sqlite3.c	/^    volatile int isInterrupted; \/* True if sqlite3_interrupt has been called *\/$/;"	m	union:sqlite3::__anon40	file:
isIsolineSegment	kernel/TeTin.cpp	/^TeTin::isIsolineSegment(long e)$/;"	f	class:TeTin
isLeaf	kernel/TeKdTree.h	/^		bool isLeaf(void) const$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
isLeaf	kernel/TeKdTree.h	/^		bool isLeaf(void) const$/;"	f	class:TeSAM::TeKdTreeNode
isLeaf	kernel/TeRTree.h	/^        bool isLeaf() const$/;"	f	class:TeSAM::TeRTreeNode
isLeapYear	kernel/TeTime.cpp	/^bool TeTime::isLeapYear(int year)$/;"	f	class:TeTime
isLikeOrGlob	drivers/SQLite/sqlite3/sqlite3.c	/^static int isLikeOrGlob($/;"	f	file:
isLittleEndian	utils/TeWKBGeometryDecoder.cpp	/^bool isLittleEndian()$/;"	f
isLittleEndian_	drivers/PostgreSQL/TePGInterface.h	/^		bool isLittleEndian_;$/;"	m	class:TePGRecordset
isLookaside	drivers/SQLite/sqlite3/sqlite3.c	/^static int isLookaside(sqlite3 *db, void *p){$/;"	f	file:
isLookaside	drivers/SQLite/sqlite3/sqlite3.c	18612;"	d	file:
isLowerTriangle	kernel/TeMatrix.cpp	/^TeMatrix::isLowerTriangle() const	$/;"	f	class:TeMatrix
isLowerVersion	utils/TeUpdateDBVersion.cpp	/^bool isLowerVersion(const std::string& version1, const std::string& version2)$/;"	f
isMallocInit	drivers/SQLite/sqlite3/sqlite3.c	/^  int isMallocInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config	file:
isMatchOfColumn	drivers/SQLite/sqlite3/sqlite3.c	/^static int isMatchOfColumn($/;"	f	file:
isMatchinfoNeeded	drivers/SQLite/sqlite3/sqlite3.c	/^  int isMatchinfoNeeded;          \/* True when aMatchinfo[] needs filling in *\/$/;"	m	struct:Fts3Cursor	file:
isMetadataInited	kernel/TeGeoDataDriver.cpp	/^ bool TeGeoDataDriver::isMetadataInited() const$/;"	f	class:TeGeoDataDriver
isMetadataInited_	kernel/TeGeoDataDriver.h	/^	bool			isMetadataInited_; \/\/!< TRUE if the metadata has already been initialized$/;"	m	class:TeGeoDataDriver
isMetadataLoaded	functions/TeAddressLocator.h	/^		bool isMetadataLoaded() const$/;"	f	class:TeAddressLocator
isMetadataLoaded_	functions/TeAddressLocator.h	/^		bool isMetadataLoaded_;						\/\/!< Flag to indicate if the metadata is loaded$/;"	m	class:TeAddressLocator
isModified_	kernel/TeDecoderASCIIGrid.h	/^	bool isModified_;$/;"	m	class:TeDecoderASCIIGrid
isModified_	kernel/TeDecoderJPEG.h	/^	bool isModified_;$/;"	m	class:TeDecoderJPEG
isModified_	kernel/TeDecoderSPR.h	/^	bool isModified_;$/;"	m	class:TeDecoderSPR
isMorfMask	image_processing/TePDIFilterMask.cpp	/^bool TePDIFilterMask::isMorfMask()$/;"	f	class:TePDIFilterMask
isMultiWrite	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isMultiWrite;     \/* True if statement may affect\/insert multiple rows *\/$/;"	m	struct:Parse	file:
isMutexInit	drivers/SQLite/sqlite3/sqlite3.c	/^  int isMutexInit;                  \/* True after mutexes are initialized *\/$/;"	m	struct:Sqlite3Config	file:
isNT	drivers/SQLite/sqlite3/sqlite3.c	/^  static int isNT(void){$/;"	f	file:
isNT	drivers/SQLite/sqlite3/sqlite3.c	31819;"	d	file:
isNeighborOnIsoOrBreakline	kernel/TeTin.cpp	/^TeTin::isNeighborOnIsoOrBreakline(long t, long nviz)$/;"	f	class:TeTin
isNot	drivers/SQLite/sqlite3/sqlite3.c	/^  int isNot;                          \/* True if getNextNode() sees a unary - *\/$/;"	m	struct:ParseContext	file:
isNotAtEOF	kernel/TeStdFile.h	/^	bool isNotAtEOF()$/;"	f	class:TeStdFile
isNull	drivers/Oracle/OCI/include/occiData.h	/^ bool   isNull;$/;"	m	struct:oracle::occi::BDouble
isNull	drivers/Oracle/OCI/include/occiData.h	/^ bool  isNull;$/;"	m	struct:oracle::occi::BFloat
isNull	drivers/Oracle/OCI/include/occiObjects.h	/^bool Ref<T>::isNull() const$/;"	f	class:oracle::occi::Ref
isNull	drivers/PostgreSQL/TePGInterface.h	/^		bool isNull(const int& field_num) const { return PQgetisnull(pg_recordset_, index(), field_num) == 1; }$/;"	f	class:TePGRecordset
isNull	drivers/PostgreSQL/TePGInterface.h	/^		bool isNull(const string& field_name) const { return isNull(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
isNumber	drivers/SQLite/sqlite3/shell.c	/^static int isNumber(const char *z, int *realnum){$/;"	f	file:
isOpen	drivers/Oracle/TeOCICursor.h	/^	bool isOpen()	{ return isOpen_; }$/;"	f	class:TeOCICursor
isOpen	drivers/SQLite/sqlite3/sqlite3.c	38099;"	d	file:
isOpen_	drivers/Oracle/TeOCICursor.h	/^	bool				isOpen_;			\/\/!< indicates if the cursor is opened or not (if the stmthpToQuery was located)$/;"	m	class:TeOCICursor
isOperator	image_processing/TePDIArithmetic.cpp	/^bool TePDIArithmetic::isOperator( const std::string& inputToken ) const$/;"	f	class:TePDIArithmetic
isOrdered	drivers/SQLite/sqlite3/sqlite3.c	/^  Bool isOrdered;       \/* True if the underlying table is BTREE_UNORDERED *\/$/;"	m	struct:VdbeCursor	file:
isPCacheInit	drivers/SQLite/sqlite3/sqlite3.c	/^  int isPCacheInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config	file:
isPSample	drivers/SQLite/sqlite3/sqlite3.c	/^    u8 isPSample;              \/* True if a periodic sample *\/$/;"	m	struct:Stat3Accum::Stat3Sample	file:
isPending	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isPending;         \/* If waiting for read-locks to clear *\/$/;"	m	struct:BtShared	file:
isPositiveDefinide	kernel/TeMatrix.cpp	/^TeMatrix::isPositiveDefinide() const$/;"	f	class:TeMatrix
isPrefix	drivers/SQLite/sqlite3/sqlite3.c	/^  int isPrefix;                   \/* True if token ends with a "*" character *\/$/;"	m	struct:Fts3PhraseToken	file:
isPrepareV2	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isPrepareV2;         \/* True if prepared with prepare_v2() *\/$/;"	m	struct:Vdbe	file:
isPrimKey	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isPrimKey;    \/* True if this column is part of the PRIMARY KEY *\/$/;"	m	struct:Column	file:
isPrimaryKey	kernel/TeDatabaseIndex.cpp	/^bool TeDatabaseIndex::isPrimaryKey()$/;"	f	class:TeDatabaseIndex
isPrimaryKey_	kernel/TeAttribute.h	/^	bool			isPrimaryKey_;	\/\/!< flag to indicate that the attribute is part of primary key$/;"	m	struct:TeAttributeRep
isProjectView	kernel/TeProject.cpp	/^TeProject::isProjectView(int viewId)$/;"	f	class:TeProject
isRasterBandToken	image_processing/TePDIArithmetic.cpp	/^bool TePDIArithmetic::isRasterBandToken( const std::string& token,$/;"	f	class:TePDIArithmetic
isRaster_	image_processing/TePDIArithmetic.hpp	/^          bool isRaster_;$/;"	m	class:TePDIArithmetic::ExecStackElement
isReadonly	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isReadonly;             \/* True if read-only *\/$/;"	m	struct:unixShmNode	file:
isRealNumberToken	image_processing/TePDIArithmetic.cpp	/^bool TePDIArithmetic::isRealNumberToken( const std::string& token,$/;"	f	class:TePDIArithmetic
isRealNumber_	image_processing/TePDIArithmetic.hpp	/^          bool isRealNumber_;$/;"	m	class:TePDIArithmetic::ExecStackElement
isRequireSeek	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isRequireSeek;               \/* True if must seek pStmt to %_content row *\/$/;"	m	struct:Fts3Cursor	file:
isRing	kernel/TeGeometry.cpp	/^TeLine2D::isRing() const$/;"	f	class:TeLine2D
isRing	kernel/TeGeometry.h	/^	virtual bool isRing() const$/;"	f	class:TeGeometry
isShared	kernel/TeSharedPtr.h	/^      inline bool isShared() const$/;"	f	class:TeSharedPtr
isSimetric	kernel/TeMatrix.cpp	/^TeMatrix::isSimetric()	const$/;"	f	class:TeMatrix
isSimpleCount	drivers/SQLite/sqlite3/sqlite3.c	/^static Table *isSimpleCount(Select *p, AggInfo *pAggInfo){$/;"	f	file:
isSortBy	drivers/qt/TeQtGrid.cpp	/^bool TeQtGrid::isSortBy(int col) \/\/ portal column$/;"	f	class:TeQtGrid
isSorted	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isSorted;                   \/* True if pEntry is sorted *\/$/;"	m	struct:RowSet	file:
isSorter	drivers/SQLite/sqlite3/sqlite3.c	/^  Bool isSorter;        \/* True if a new-style sorter *\/$/;"	m	struct:VdbeCursor	file:
isSorter	drivers/SQLite/sqlite3/sqlite3.c	63054;"	d	file:
isSorter	drivers/SQLite/sqlite3/sqlite3.c	63056;"	d	file:
isSortingIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static int isSortingIndex($/;"	f	file:
isStored	kernel/TeMultiContainer.h	/^bool TeMultiContainer< TeMultiContainerKeyT >::isStored( $/;"	f	class:TeMultiContainer
isSystemTable	drivers/SQLite/sqlite3/sqlite3.c	/^static int isSystemTable(Parse *pParse, const char *zName){$/;"	f	file:
isTable	drivers/SQLite/sqlite3/sqlite3.c	/^  Bool isTable;         \/* True if a table requiring integer keys *\/$/;"	m	struct:VdbeCursor	file:
isTerralibModel	utils/TeDatabaseUtils.cpp	/^bool isTerralibModel(TeDatabase* db)$/;"	f
isThemeItemInvalid	drivers/qt/TeQtThemeItem.h	/^	bool isThemeItemInvalid()$/;"	f	class:TeQtThemeItem
isThemeTable	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::isThemeTable(int tableId)$/;"	f	class:TeExternalTheme
isThemeTable	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::isThemeTable(string tableName)$/;"	f	class:TeExternalTheme
isThemeTable	kernel/TeTheme.cpp	/^TeTheme::isThemeTable(int tableId)$/;"	f	class:TeTheme
isThemeTable	kernel/TeTheme.cpp	/^TeTheme::isThemeTable(string tableName)$/;"	f	class:TeTheme
isTiled_	kernel/TeDecoderTIFF.h	/^	bool		isTiled_;	\/\/ indicates if the data is organizes in tiles $/;"	m	class:TeDecoderTIFF
isTimeValid	kernel/TeBaseSTInstance.h	/^	virtual bool isTimeValid()$/;"	f	class:TeBaseSTInstance
isTimeValid	kernel/TeSTEvent.cpp	/^TeSTEvent::isTimeValid() $/;"	f	class:TeSTEvent
isTimeValid	kernel/TeSTInstance.cpp	/^TeSTInstance::isTimeValid()$/;"	f	class:TeSTInstance
isTransDefined	kernel/Te2ndDegPolynomialGT.cpp	/^bool Te2ndDegPolynomialGT::isTransDefined( const TeGTParams& params )  const$/;"	f	class:Te2ndDegPolynomialGT
isTransDefined	kernel/Te3rdDegPolynomialGT.cpp	/^bool Te3rdDegPolynomialGT::isTransDefined( const TeGTParams& params )  const$/;"	f	class:Te3rdDegPolynomialGT
isTransDefined	kernel/TeAffineGT.cpp	/^bool TeAffineGT::isTransDefined( const TeGTParams& params )  const$/;"	f	class:TeAffineGT
isTransDefined	kernel/TeProjectiveGT.cpp	/^bool TeProjectiveGT::isTransDefined( const TeGTParams& params )  const$/;"	f	class:TeProjectiveGT
isTransactionSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isTransactionSavepoint;    \/* True if the outermost savepoint is a TS *\/$/;"	m	struct:sqlite3	file:
isUnaryOperator	image_processing/TePDIArithmetic.cpp	/^bool TePDIArithmetic::isUnaryOperator( const std::string& ) const$/;"	f	class:TePDIArithmetic
isUpdated	kernel/TeAbstractTheme.cpp	/^bool TeAbstractTheme::isUpdated()$/;"	f	class:TeAbstractTheme
isUpdated	kernel/TeTheme.cpp	/^bool TeTheme::isUpdated()$/;"	f	class:TeTheme
isUpperTriangle	kernel/TeMatrix.cpp	/^TeMatrix::isUpperTriangle() const$/;"	f	class:TeMatrix
isValid	kernel/TeBox.h	/^	bool isValid() const$/;"	f	struct:TeBox
isValid	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::isValid () const$/;"	f	class:TeGeneralizedProxMatrix
isValid	kernel/TeGridIndex.h	/^		bool isValid() const$/;"	f	class:TeSAM::TeGridIndex
isValid	kernel/TeTime.cpp	/^TeTime::isValid() const $/;"	f	class:TeTime
isValid	kernel/TeTimeInterval.h	/^	bool isValid() $/;"	f	class:TeTimeInterval
isValid_	functions/TeAddressLocator.h	/^	bool isValid_;					\/\/!< Tells if pt_ is a valid coordinate or the segment range was not found$/;"	m	struct:TeAddressDescription
isVerticalEdition	drivers/qt/TeQtGrid.h	/^	bool isVerticalEdition() { return verticalEdition_; }$/;"	f	class:TeQtGrid
isView	drivers/SQLite/sqlite3/sqlite3.c	83994;"	d	file:
isView	drivers/SQLite/sqlite3/sqlite3.c	83995;"	d	file:
isView	drivers/SQLite/sqlite3/sqlite3.c	84176;"	d	file:
isView	drivers/SQLite/sqlite3/sqlite3.c	87715;"	d	file:
isView	drivers/SQLite/sqlite3/sqlite3.c	87716;"	d	file:
isView	drivers/SQLite/sqlite3/sqlite3.c	88254;"	d	file:
isView	drivers/SQLite/sqlite3/sqlite3.c	98771;"	d	file:
isView	drivers/SQLite/sqlite3/sqlite3.c	98772;"	d	file:
isView	drivers/SQLite/sqlite3/sqlite3.c	99184;"	d	file:
isVisible	kernel/TeView.h	/^	virtual bool isVisible () { return is_visible_; }$/;"	f	class:TeView
isVisible	kernel/TeView.h	/^	virtual void isVisible (bool v) { is_visible_ = v; }$/;"	f	class:TeView
isVowel	drivers/SQLite/sqlite3/sqlite3.c	/^static int isVowel(const char *z){$/;"	f	file:
isWriteLock	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 isWriteLock;      \/* True for write lock.  False for a read lock *\/$/;"	m	struct:TableLock	file:
is_default_	kernel/TeGeneralizedProxMatrix.h	/^	bool					is_default_;$/;"	m	class:TeGeneralizedProxMatrix
is_visible_	kernel/TeView.h	/^	bool			is_visible_;$/;"	m	class:TeView
isatty	drivers/SQLite/sqlite3/shell.c	69;"	d	file:
isatty	drivers/SQLite/sqlite3/shell.c	82;"	d	file:
isc_action_svc_add_license	drivers/Firebird/ibpp/core/ibase.h	2089;"	d
isc_action_svc_add_user	drivers/Firebird/ibpp/core/ibase.h	2084;"	d
isc_action_svc_backup	drivers/Firebird/ibpp/core/ibase.h	2081;"	d
isc_action_svc_db_stats	drivers/Firebird/ibpp/core/ibase.h	2091;"	d
isc_action_svc_delete_user	drivers/Firebird/ibpp/core/ibase.h	2085;"	d
isc_action_svc_display_user	drivers/Firebird/ibpp/core/ibase.h	2087;"	d
isc_action_svc_get_fb_log	drivers/Firebird/ibpp/core/ibase.h	2093;"	d
isc_action_svc_get_ib_log	drivers/Firebird/ibpp/core/ibase.h	2092;"	d
isc_action_svc_modify_user	drivers/Firebird/ibpp/core/ibase.h	2086;"	d
isc_action_svc_properties	drivers/Firebird/ibpp/core/ibase.h	2088;"	d
isc_action_svc_remove_license	drivers/Firebird/ibpp/core/ibase.h	2090;"	d
isc_action_svc_repair	drivers/Firebird/ibpp/core/ibase.h	2083;"	d
isc_action_svc_restore	drivers/Firebird/ibpp/core/ibase.h	2082;"	d
isc_adm_task_denied	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_adm_task_denied                  = 335544788L;$/;"	v
isc_adm_task_denied	drivers/Firebird/ibpp/core/iberror.h	1313;"	d
isc_alias_conflict_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_alias_conflict_err               = 335544620L;$/;"	v
isc_alias_conflict_err	drivers/Firebird/ibpp/core/iberror.h	1145;"	d
isc_arg_cstring	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_cstring		= 3;	\/\/ count & string argument $/;"	v
isc_arg_cstring	drivers/Firebird/ibpp/core/iberror.h	832;"	d
isc_arg_domain	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_domain		= 8;	\/\/ Apollo\/Domain error code $/;"	v
isc_arg_domain	drivers/Firebird/ibpp/core/iberror.h	837;"	d
isc_arg_dos	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_dos			= 9;	\/\/ MSDOS\/OS2 error code $/;"	v
isc_arg_dos	drivers/Firebird/ibpp/core/iberror.h	838;"	d
isc_arg_end	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_end			= 0;	\/\/ end of argument list $/;"	v
isc_arg_end	drivers/Firebird/ibpp/core/iberror.h	829;"	d
isc_arg_gds	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_gds			= 1;	\/\/ generic DSRI status value $/;"	v
isc_arg_gds	drivers/Firebird/ibpp/core/iberror.h	830;"	d
isc_arg_interpreted	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_interpreted	= 5;	\/\/ interpreted status code (string) $/;"	v
isc_arg_interpreted	drivers/Firebird/ibpp/core/iberror.h	834;"	d
isc_arg_mpexl	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_mpexl		= 10;	\/\/ HP MPE\/XL error code $/;"	v
isc_arg_mpexl	drivers/Firebird/ibpp/core/iberror.h	839;"	d
isc_arg_mpexl_ipc	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_mpexl_ipc	= 11;	\/\/ HP MPE\/XL IPC error code $/;"	v
isc_arg_mpexl_ipc	drivers/Firebird/ibpp/core/iberror.h	840;"	d
isc_arg_netware	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_netware		= 16;	\/\/ NetWare error code $/;"	v
isc_arg_netware	drivers/Firebird/ibpp/core/iberror.h	842;"	d
isc_arg_next_mach	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_next_mach	= 15;	\/\/ NeXT\/Mach error code $/;"	v
isc_arg_next_mach	drivers/Firebird/ibpp/core/iberror.h	841;"	d
isc_arg_number	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_number		= 4;	\/\/ numeric argument (long) $/;"	v
isc_arg_number	drivers/Firebird/ibpp/core/iberror.h	833;"	d
isc_arg_string	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_string		= 2;	\/\/ string argument $/;"	v
isc_arg_string	drivers/Firebird/ibpp/core/iberror.h	831;"	d
isc_arg_unix	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_unix		= 7;	\/\/ UNIX error code $/;"	v
isc_arg_unix	drivers/Firebird/ibpp/core/iberror.h	836;"	d
isc_arg_vms	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_vms			= 6;	\/\/ VAX\/VMS status code (long) $/;"	v
isc_arg_vms	drivers/Firebird/ibpp/core/iberror.h	835;"	d
isc_arg_warning	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_warning		= 18;	\/\/ warning argument $/;"	v
isc_arg_warning	drivers/Firebird/ibpp/core/iberror.h	844;"	d
isc_arg_win32	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arg_win32		= 17;	\/\/ Win32 error code $/;"	v
isc_arg_win32	drivers/Firebird/ibpp/core/iberror.h	843;"	d
isc_arith_except	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_arith_except                     = 335544321L;$/;"	v
isc_arith_except	drivers/Firebird/ibpp/core/iberror.h	846;"	d
isc_array_convert_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_array_convert_error              = 335544861L;$/;"	v
isc_array_convert_error	drivers/Firebird/ibpp/core/iberror.h	1386;"	d
isc_array_idx_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_array_idx_err                    = 335544671L;$/;"	v
isc_array_idx_err	drivers/Firebird/ibpp/core/iberror.h	1196;"	d
isc_att_handle	drivers/Firebird/ibpp/core/ibase.h	/^typedef FB_API_HANDLE isc_att_handle;$/;"	t
isc_att_shutdown	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_att_shutdown                     = 335544856L;$/;"	v
isc_att_shutdown	drivers/Firebird/ibpp/core/iberror.h	1381;"	d
isc_bad_checksum	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_checksum                     = 335544649L;$/;"	v
isc_bad_checksum	drivers/Firebird/ibpp/core/iberror.h	1174;"	d
isc_bad_db_format	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_db_format                    = 335544323L;$/;"	v
isc_bad_db_format	drivers/Firebird/ibpp/core/iberror.h	848;"	d
isc_bad_db_handle	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_db_handle                    = 335544324L;$/;"	v
isc_bad_db_handle	drivers/Firebird/ibpp/core/iberror.h	849;"	d
isc_bad_dbkey	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_dbkey                        = 335544322L;$/;"	v
isc_bad_dbkey	drivers/Firebird/ibpp/core/iberror.h	847;"	d
isc_bad_default_value	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_default_value                = 335544759L;$/;"	v
isc_bad_default_value	drivers/Firebird/ibpp/core/iberror.h	1284;"	d
isc_bad_detach	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_detach                       = 335544441L;$/;"	v
isc_bad_detach	drivers/Firebird/ibpp/core/iberror.h	966;"	d
isc_bad_dpb_content	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_dpb_content                  = 335544325L;$/;"	v
isc_bad_dpb_content	drivers/Firebird/ibpp/core/iberror.h	850;"	d
isc_bad_dpb_form	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_dpb_form                     = 335544326L;$/;"	v
isc_bad_dpb_form	drivers/Firebird/ibpp/core/iberror.h	851;"	d
isc_bad_limit_param	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_limit_param                  = 335544817L;$/;"	v
isc_bad_limit_param	drivers/Firebird/ibpp/core/iberror.h	1342;"	d
isc_bad_lock_handle	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_lock_handle                  = 335544519L;$/;"	v
isc_bad_lock_handle	drivers/Firebird/ibpp/core/iberror.h	1044;"	d
isc_bad_lock_level	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_lock_level                   = 335544474L;$/;"	v
isc_bad_lock_level	drivers/Firebird/ibpp/core/iberror.h	999;"	d
isc_bad_msg_vec	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_msg_vec                      = 335544440L;$/;"	v
isc_bad_msg_vec	drivers/Firebird/ibpp/core/iberror.h	965;"	d
isc_bad_protocol	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_protocol                     = 335544751L;$/;"	v
isc_bad_protocol	drivers/Firebird/ibpp/core/iberror.h	1276;"	d
isc_bad_req_handle	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_req_handle                   = 335544327L;$/;"	v
isc_bad_req_handle	drivers/Firebird/ibpp/core/iberror.h	852;"	d
isc_bad_sec_info	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_sec_info                     = 335544448L;$/;"	v
isc_bad_sec_info	drivers/Firebird/ibpp/core/iberror.h	973;"	d
isc_bad_segstr_handle	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_segstr_handle                = 335544328L;$/;"	v
isc_bad_segstr_handle	drivers/Firebird/ibpp/core/iberror.h	853;"	d
isc_bad_segstr_id	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_segstr_id                    = 335544329L;$/;"	v
isc_bad_segstr_id	drivers/Firebird/ibpp/core/iberror.h	854;"	d
isc_bad_segstr_type	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_segstr_type                  = 335544465L;$/;"	v
isc_bad_segstr_type	drivers/Firebird/ibpp/core/iberror.h	990;"	d
isc_bad_shutdown_mode	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_shutdown_mode                = 335544835L;$/;"	v
isc_bad_shutdown_mode	drivers/Firebird/ibpp/core/iberror.h	1360;"	d
isc_bad_skip_param	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_skip_param                   = 335544818L;$/;"	v
isc_bad_skip_param	drivers/Firebird/ibpp/core/iberror.h	1343;"	d
isc_bad_spb_form	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_spb_form                     = 335544562L;$/;"	v
isc_bad_spb_form	drivers/Firebird/ibpp/core/iberror.h	1087;"	d
isc_bad_stmt_handle	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_stmt_handle                  = 335544485L;$/;"	v
isc_bad_stmt_handle	drivers/Firebird/ibpp/core/iberror.h	1010;"	d
isc_bad_substring_length	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_substring_length             = 335544853L;$/;"	v
isc_bad_substring_length	drivers/Firebird/ibpp/core/iberror.h	1378;"	d
isc_bad_substring_offset	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_substring_offset             = 335544837L;$/;"	v
isc_bad_substring_offset	drivers/Firebird/ibpp/core/iberror.h	1362;"	d
isc_bad_svc_handle	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_svc_handle                   = 335544559L;$/;"	v
isc_bad_svc_handle	drivers/Firebird/ibpp/core/iberror.h	1084;"	d
isc_bad_tpb_content	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_tpb_content                  = 335544330L;$/;"	v
isc_bad_tpb_content	drivers/Firebird/ibpp/core/iberror.h	855;"	d
isc_bad_tpb_form	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_tpb_form                     = 335544331L;$/;"	v
isc_bad_tpb_form	drivers/Firebird/ibpp/core/iberror.h	856;"	d
isc_bad_trans_handle	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bad_trans_handle                 = 335544332L;$/;"	v
isc_bad_trans_handle	drivers/Firebird/ibpp/core/iberror.h	857;"	d
isc_badblk	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_badblk                           = 335544384L;$/;"	v
isc_badblk	drivers/Firebird/ibpp/core/iberror.h	909;"	d
isc_badhndcnt	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_badhndcnt                        = 335544410L;$/;"	v
isc_badhndcnt	drivers/Firebird/ibpp/core/iberror.h	935;"	d
isc_badindex	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_badindex                         = 335544406L;$/;"	v
isc_badindex	drivers/Firebird/ibpp/core/iberror.h	931;"	d
isc_badmsgnum	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_badmsgnum                        = 335544428L;$/;"	v
isc_badmsgnum	drivers/Firebird/ibpp/core/iberror.h	953;"	d
isc_badodsver	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_badodsver                        = 335544394L;$/;"	v
isc_badodsver	drivers/Firebird/ibpp/core/iberror.h	919;"	d
isc_badpage	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_badpage                          = 335544405L;$/;"	v
isc_badpage	drivers/Firebird/ibpp/core/iberror.h	930;"	d
isc_badpagtyp	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_badpagtyp                        = 335544403L;$/;"	v
isc_badpagtyp	drivers/Firebird/ibpp/core/iberror.h	928;"	d
isc_badparnum	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_badparnum                        = 335544429L;$/;"	v
isc_badparnum	drivers/Firebird/ibpp/core/iberror.h	954;"	d
isc_badrelation	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_badrelation                      = 335544415L;$/;"	v
isc_badrelation	drivers/Firebird/ibpp/core/iberror.h	940;"	d
isc_base	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_base = 335544320L;$/;"	v
isc_base	drivers/Firebird/ibpp/core/iberror.h	826;"	d
isc_bdbincon	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bdbincon                         = 335544392L;$/;"	v
isc_bdbincon	drivers/Firebird/ibpp/core/iberror.h	917;"	d
isc_blktoobig	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_blktoobig                        = 335544388L;$/;"	v
isc_blktoobig	drivers/Firebird/ibpp/core/iberror.h	913;"	d
isc_blob_acl	drivers/Firebird/ibpp/core/ibase.h	2688;"	d
isc_blob_blr	drivers/Firebird/ibpp/core/ibase.h	2687;"	d
isc_blob_convert_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_blob_convert_error               = 335544860L;$/;"	v
isc_blob_convert_error	drivers/Firebird/ibpp/core/iberror.h	1385;"	d
isc_blob_ctl	drivers/Firebird/ibpp/core/ibase.h	/^typedef struct isc_blob_ctl$/;"	s
isc_blob_dbase_ole	drivers/Firebird/ibpp/core/ibase.h	2701;"	d
isc_blob_extfile	drivers/Firebird/ibpp/core/ibase.h	2693;"	d
isc_blob_filter_alloc	drivers/Firebird/ibpp/core/ibase.h	1275;"	d
isc_blob_filter_close	drivers/Firebird/ibpp/core/ibase.h	1272;"	d
isc_blob_filter_create	drivers/Firebird/ibpp/core/ibase.h	1273;"	d
isc_blob_filter_exception	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_blob_filter_exception            = 335544767L;$/;"	v
isc_blob_filter_exception	drivers/Firebird/ibpp/core/iberror.h	1292;"	d
isc_blob_filter_free	drivers/Firebird/ibpp/core/ibase.h	1276;"	d
isc_blob_filter_get_segment	drivers/Firebird/ibpp/core/ibase.h	1271;"	d
isc_blob_filter_open	drivers/Firebird/ibpp/core/ibase.h	1270;"	d
isc_blob_filter_put_segment	drivers/Firebird/ibpp/core/ibase.h	1274;"	d
isc_blob_filter_seek	drivers/Firebird/ibpp/core/ibase.h	1277;"	d
isc_blob_format	drivers/Firebird/ibpp/core/ibase.h	2691;"	d
isc_blob_formatted_memo	drivers/Firebird/ibpp/core/ibase.h	2698;"	d
isc_blob_graphic	drivers/Firebird/ibpp/core/ibase.h	2700;"	d
isc_blob_handle	drivers/Firebird/ibpp/core/ibase.h	/^typedef FB_API_HANDLE isc_blob_handle;$/;"	t
isc_blob_idx_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_blob_idx_err                     = 335544670L;$/;"	v
isc_blob_idx_err	drivers/Firebird/ibpp/core/iberror.h	1195;"	d
isc_blob_max_predefined_subtype	drivers/Firebird/ibpp/core/ibase.h	2694;"	d
isc_blob_paradox_ole	drivers/Firebird/ibpp/core/ibase.h	2699;"	d
isc_blob_ranges	drivers/Firebird/ibpp/core/ibase.h	2689;"	d
isc_blob_summary	drivers/Firebird/ibpp/core/ibase.h	2690;"	d
isc_blob_text	drivers/Firebird/ibpp/core/ibase.h	2686;"	d
isc_blob_tra	drivers/Firebird/ibpp/core/ibase.h	2692;"	d
isc_blob_typed_binary	drivers/Firebird/ibpp/core/ibase.h	2702;"	d
isc_blob_untyped	drivers/Firebird/ibpp/core/ibase.h	2682;"	d
isc_blobnotsup	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_blobnotsup                       = 335544414L;$/;"	v
isc_blobnotsup	drivers/Firebird/ibpp/core/iberror.h	939;"	d
isc_blobtoobig	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_blobtoobig                       = 335544857L;$/;"	v
isc_blobtoobig	drivers/Firebird/ibpp/core/iberror.h	1382;"	d
isc_blocking_signal	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_blocking_signal                  = 335544431L;$/;"	v
isc_blocking_signal	drivers/Firebird/ibpp/core/iberror.h	956;"	d
isc_bpb_filter_parameter	drivers/Firebird/ibpp/core/ibase.h	1733;"	d
isc_bpb_source_interp	drivers/Firebird/ibpp/core/ibase.h	1731;"	d
isc_bpb_source_type	drivers/Firebird/ibpp/core/ibase.h	1728;"	d
isc_bpb_target_interp	drivers/Firebird/ibpp/core/ibase.h	1732;"	d
isc_bpb_target_type	drivers/Firebird/ibpp/core/ibase.h	1729;"	d
isc_bpb_type	drivers/Firebird/ibpp/core/ibase.h	1730;"	d
isc_bpb_type_segmented	drivers/Firebird/ibpp/core/ibase.h	1735;"	d
isc_bpb_type_stream	drivers/Firebird/ibpp/core/ibase.h	1736;"	d
isc_bpb_version1	drivers/Firebird/ibpp/core/ibase.h	1727;"	d
isc_buf_invalid	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_buf_invalid                      = 335544470L;$/;"	v
isc_buf_invalid	drivers/Firebird/ibpp/core/iberror.h	995;"	d
isc_bufexh	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bufexh                           = 335544389L;$/;"	v
isc_bufexh	drivers/Firebird/ibpp/core/iberror.h	914;"	d
isc_bufinuse	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bufinuse                         = 335544391L;$/;"	v
isc_bufinuse	drivers/Firebird/ibpp/core/iberror.h	916;"	d
isc_bug_check	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_bug_check                        = 335544333L;$/;"	v
isc_bug_check	drivers/Firebird/ibpp/core/iberror.h	858;"	d
isc_cache_redef	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_cache_redef                      = 335544690L;$/;"	v
isc_cache_redef	drivers/Firebird/ibpp/core/iberror.h	1215;"	d
isc_cache_restart	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_cache_restart                    = 335544518L;$/;"	v
isc_cache_restart	drivers/Firebird/ibpp/core/iberror.h	1043;"	d
isc_cache_too_small	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_cache_too_small                  = 335544691L;$/;"	v
isc_cache_too_small	drivers/Firebird/ibpp/core/iberror.h	1216;"	d
isc_callback	drivers/Firebird/ibpp/core/ibase.h	/^typedef void (* isc_callback) ();$/;"	t
isc_cancelled	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_cancelled                        = 335544794L;$/;"	v
isc_cancelled	drivers/Firebird/ibpp/core/iberror.h	1319;"	d
isc_cant_start_journal	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_cant_start_journal               = 335544462L;$/;"	v
isc_cant_start_journal	drivers/Firebird/ibpp/core/iberror.h	987;"	d
isc_cant_start_logging	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_cant_start_logging               = 335544464L;$/;"	v
isc_cant_start_logging	drivers/Firebird/ibpp/core/iberror.h	989;"	d
isc_cant_validate	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_cant_validate                    = 335544461L;$/;"	v
isc_cant_validate	drivers/Firebird/ibpp/core/iberror.h	986;"	d
isc_charset_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_charset_not_found                = 335544509L;$/;"	v
isc_charset_not_found	drivers/Firebird/ibpp/core/iberror.h	1034;"	d
isc_charset_not_installed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_charset_not_installed            = 335544854L;$/;"	v
isc_charset_not_installed	drivers/Firebird/ibpp/core/iberror.h	1379;"	d
isc_check_cnstrnt_del	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_check_cnstrnt_del                = 335544536L;$/;"	v
isc_check_cnstrnt_del	drivers/Firebird/ibpp/core/iberror.h	1061;"	d
isc_check_cnstrnt_update	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_check_cnstrnt_update             = 335544535L;$/;"	v
isc_check_cnstrnt_update	drivers/Firebird/ibpp/core/iberror.h	1060;"	d
isc_check_constraint	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_check_constraint                 = 335544558L;$/;"	v
isc_check_constraint	drivers/Firebird/ibpp/core/iberror.h	1083;"	d
isc_check_trig_del	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_check_trig_del                   = 335544541L;$/;"	v
isc_check_trig_del	drivers/Firebird/ibpp/core/iberror.h	1066;"	d
isc_check_trig_update	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_check_trig_update                = 335544542L;$/;"	v
isc_check_trig_update	drivers/Firebird/ibpp/core/iberror.h	1067;"	d
isc_cnstrnt_fld_del	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_cnstrnt_fld_del                  = 335544543L;$/;"	v
isc_cnstrnt_fld_del	drivers/Firebird/ibpp/core/iberror.h	1068;"	d
isc_cnstrnt_fld_rename	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_cnstrnt_fld_rename               = 335544544L;$/;"	v
isc_cnstrnt_fld_rename	drivers/Firebird/ibpp/core/iberror.h	1069;"	d
isc_codnotdef	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_codnotdef                        = 335544515L;$/;"	v
isc_codnotdef	drivers/Firebird/ibpp/core/iberror.h	1040;"	d
isc_col_name_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_col_name_err                     = 335544600L;$/;"	v
isc_col_name_err	drivers/Firebird/ibpp/core/iberror.h	1125;"	d
isc_collation_not_for_charset	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_collation_not_for_charset        = 335544589L;$/;"	v
isc_collation_not_for_charset	drivers/Firebird/ibpp/core/iberror.h	1114;"	d
isc_collation_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_collation_not_found              = 335544588L;$/;"	v
isc_collation_not_found	drivers/Firebird/ibpp/core/iberror.h	1113;"	d
isc_collation_not_installed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_collation_not_installed          = 335544855L;$/;"	v
isc_collation_not_installed	drivers/Firebird/ibpp/core/iberror.h	1380;"	d
isc_collation_requires_text	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_collation_requires_text          = 335544640L;$/;"	v
isc_collation_requires_text	drivers/Firebird/ibpp/core/iberror.h	1165;"	d
isc_command_end_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_command_end_err                  = 335544608L;$/;"	v
isc_command_end_err	drivers/Firebird/ibpp/core/iberror.h	1133;"	d
isc_command_end_err2	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_command_end_err2                 = 335544851L;$/;"	v
isc_command_end_err2	drivers/Firebird/ibpp/core/iberror.h	1376;"	d
isc_complex_view	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_complex_view                     = 335544710L;$/;"	v
isc_complex_view	drivers/Firebird/ibpp/core/iberror.h	1235;"	d
isc_concat_overflow	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_concat_overflow                  = 335544836L;$/;"	v
isc_concat_overflow	drivers/Firebird/ibpp/core/iberror.h	1361;"	d
isc_conf_access_denied	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_conf_access_denied               = 335544831L;$/;"	v
isc_conf_access_denied	drivers/Firebird/ibpp/core/iberror.h	1356;"	d
isc_conn_lost	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_conn_lost                        = 335544648L;$/;"	v
isc_conn_lost	drivers/Firebird/ibpp/core/iberror.h	1173;"	d
isc_connect_reject	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_connect_reject                   = 335544421L;$/;"	v
isc_connect_reject	drivers/Firebird/ibpp/core/iberror.h	946;"	d
isc_constaint_on_view	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_constaint_on_view                = 335544546L;$/;"	v
isc_constaint_on_view	drivers/Firebird/ibpp/core/iberror.h	1071;"	d
isc_convert_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_convert_error                    = 335544334L;$/;"	v
isc_convert_error	drivers/Firebird/ibpp/core/iberror.h	859;"	d
isc_corrupt	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_corrupt                          = 335544404L;$/;"	v
isc_corrupt	drivers/Firebird/ibpp/core/iberror.h	929;"	d
isc_crrp_data_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_crrp_data_err                    = 335544680L;$/;"	v
isc_crrp_data_err	drivers/Firebird/ibpp/core/iberror.h	1205;"	d
isc_cse_not_supported	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_cse_not_supported                = 335544730L;$/;"	v
isc_cse_not_supported	drivers/Firebird/ibpp/core/iberror.h	1255;"	d
isc_ctx_bad_argument	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ctx_bad_argument                 = 335544846L;$/;"	v
isc_ctx_bad_argument	drivers/Firebird/ibpp/core/iberror.h	1371;"	d
isc_ctx_namespace_invalid	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ctx_namespace_invalid            = 335544844L;$/;"	v
isc_ctx_namespace_invalid	drivers/Firebird/ibpp/core/iberror.h	1369;"	d
isc_ctx_too_big	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ctx_too_big                      = 335544845L;$/;"	v
isc_ctx_too_big	drivers/Firebird/ibpp/core/iberror.h	1370;"	d
isc_ctx_var_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ctx_var_not_found                = 335544843L;$/;"	v
isc_ctx_var_not_found	drivers/Firebird/ibpp/core/iberror.h	1368;"	d
isc_ctxinuse	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ctxinuse                         = 335544425L;$/;"	v
isc_ctxinuse	drivers/Firebird/ibpp/core/iberror.h	950;"	d
isc_ctxnotdef	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ctxnotdef                        = 335544426L;$/;"	v
isc_ctxnotdef	drivers/Firebird/ibpp/core/iberror.h	951;"	d
isc_cursor_already_open	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_cursor_already_open              = 335544841L;$/;"	v
isc_cursor_already_open	drivers/Firebird/ibpp/core/iberror.h	1366;"	d
isc_cursor_not_open	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_cursor_not_open                  = 335544834L;$/;"	v
isc_cursor_not_open	drivers/Firebird/ibpp/core/iberror.h	1359;"	d
isc_database_create_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_database_create_failed           = 335544804L;$/;"	v
isc_database_create_failed	drivers/Firebird/ibpp/core/iberror.h	1329;"	d
isc_date_range_exceeded	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_date_range_exceeded              = 335544810L;$/;"	v
isc_date_range_exceeded	drivers/Firebird/ibpp/core/iberror.h	1335;"	d
isc_datnotsup	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_datnotsup                        = 335544427L;$/;"	v
isc_datnotsup	drivers/Firebird/ibpp/core/iberror.h	952;"	d
isc_datype_notsup	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_datype_notsup                    = 335544801L;$/;"	v
isc_datype_notsup	drivers/Firebird/ibpp/core/iberror.h	1326;"	d
isc_db_corrupt	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_db_corrupt                       = 335544335L;$/;"	v
isc_db_corrupt	drivers/Firebird/ibpp/core/iberror.h	860;"	d
isc_db_handle	drivers/Firebird/ibpp/core/ibase.h	/^typedef FB_API_HANDLE isc_db_handle;$/;"	t
isc_db_or_file_exists	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_db_or_file_exists                = 335544646L;$/;"	v
isc_db_or_file_exists	drivers/Firebird/ibpp/core/iberror.h	1171;"	d
isc_dbbnotzer	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dbbnotzer                        = 335544407L;$/;"	v
isc_dbbnotzer	drivers/Firebird/ibpp/core/iberror.h	932;"	d
isc_dbfile	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dbfile                           = 335544422L;$/;"	v
isc_dbfile	drivers/Firebird/ibpp/core/iberror.h	947;"	d
isc_ddl_not_allowed_by_db_sql_dial	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ddl_not_allowed_by_db_sql_dial   = 335544793L;$/;"	v
isc_ddl_not_allowed_by_db_sql_dial	drivers/Firebird/ibpp/core/iberror.h	1318;"	d
isc_deadlock	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_deadlock                         = 335544336L;$/;"	v
isc_deadlock	drivers/Firebird/ibpp/core/iberror.h	861;"	d
isc_del_last_field	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_del_last_field                   = 335544674L;$/;"	v
isc_del_last_field	drivers/Firebird/ibpp/core/iberror.h	1199;"	d
isc_depend_on_uncommitted_rel	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_depend_on_uncommitted_rel        = 335544798L;$/;"	v
isc_depend_on_uncommitted_rel	drivers/Firebird/ibpp/core/iberror.h	1323;"	d
isc_dependency	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dependency                       = 335544630L;$/;"	v
isc_dependency	drivers/Firebird/ibpp/core/iberror.h	1155;"	d
isc_dialect_not_changed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dialect_not_changed              = 335544803L;$/;"	v
isc_dialect_not_changed	drivers/Firebird/ibpp/core/iberror.h	1328;"	d
isc_dialect_reset_warning	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dialect_reset_warning            = 335544802L;$/;"	v
isc_dialect_reset_warning	drivers/Firebird/ibpp/core/iberror.h	1327;"	d
isc_dirtypage	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dirtypage                        = 335544397L;$/;"	v
isc_dirtypage	drivers/Firebird/ibpp/core/iberror.h	922;"	d
isc_distinct_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_distinct_err                     = 335544603L;$/;"	v
isc_distinct_err	drivers/Firebird/ibpp/core/iberror.h	1128;"	d
isc_doubleloc	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_doubleloc                        = 335544399L;$/;"	v
isc_doubleloc	drivers/Firebird/ibpp/core/iberror.h	924;"	d
isc_dpb_SQL_dialect	drivers/Firebird/ibpp/core/ibase.h	2707;"	d
isc_dpb_activate_shadow	drivers/Firebird/ibpp/core/ibase.h	1562;"	d
isc_dpb_addr_endpoint	drivers/Firebird/ibpp/core/ibase.h	1655;"	d
isc_dpb_addr_protocol	drivers/Firebird/ibpp/core/ibase.h	1654;"	d
isc_dpb_address	drivers/Firebird/ibpp/core/ibase.h	1652;"	d
isc_dpb_address_path	drivers/Firebird/ibpp/core/ibase.h	1611;"	d
isc_dpb_allocation	drivers/Firebird/ibpp/core/ibase.h	1543;"	d
isc_dpb_begin_log	drivers/Firebird/ibpp/core/ibase.h	1566;"	d
isc_dpb_buffer_length	drivers/Firebird/ibpp/core/ibase.h	1547;"	d
isc_dpb_cache_manager	drivers/Firebird/ibpp/core/ibase.h	1590;"	d
isc_dpb_cdd_pathname	drivers/Firebird/ibpp/core/ibase.h	1542;"	d
isc_dpb_connect_timeout	drivers/Firebird/ibpp/core/ibase.h	1598;"	d
isc_dpb_damaged	drivers/Firebird/ibpp/core/ibase.h	1558;"	d
isc_dpb_dbkey_scope	drivers/Firebird/ibpp/core/ibase.h	1554;"	d
isc_dpb_debug	drivers/Firebird/ibpp/core/ibase.h	1548;"	d
isc_dpb_delete_shadow	drivers/Firebird/ibpp/core/ibase.h	1564;"	d
isc_dpb_disable_journal	drivers/Firebird/ibpp/core/ibase.h	1553;"	d
isc_dpb_disable_wal	drivers/Firebird/ibpp/core/ibase.h	1597;"	d
isc_dpb_drop_walfile	drivers/Firebird/ibpp/core/ibase.h	1581;"	d
isc_dpb_dummy_packet_interval	drivers/Firebird/ibpp/core/ibase.h	1599;"	d
isc_dpb_enable_journal	drivers/Firebird/ibpp/core/ibase.h	1552;"	d
isc_dpb_encrypt_key	drivers/Firebird/ibpp/core/ibase.h	1561;"	d
isc_dpb_force_write	drivers/Firebird/ibpp/core/ibase.h	1565;"	d
isc_dpb_garbage_collect	drivers/Firebird/ibpp/core/ibase.h	1549;"	d
isc_dpb_gbak_attach	drivers/Firebird/ibpp/core/ibase.h	1600;"	d
isc_dpb_gfix_attach	drivers/Firebird/ibpp/core/ibase.h	1607;"	d
isc_dpb_gsec_attach	drivers/Firebird/ibpp/core/ibase.h	1610;"	d
isc_dpb_gstat_attach	drivers/Firebird/ibpp/core/ibase.h	1608;"	d
isc_dpb_ignore	drivers/Firebird/ibpp/core/ibase.h	1667;"	d
isc_dpb_indices	drivers/Firebird/ibpp/core/ibase.h	1663;"	d
isc_dpb_interp	drivers/Firebird/ibpp/core/ibase.h	1573;"	d
isc_dpb_journal	drivers/Firebird/ibpp/core/ibase.h	1544;"	d
isc_dpb_lc_ctype	drivers/Firebird/ibpp/core/ibase.h	1589;"	d
isc_dpb_lc_messages	drivers/Firebird/ibpp/core/ibase.h	1588;"	d
isc_dpb_license	drivers/Firebird/ibpp/core/ibase.h	1559;"	d
isc_dpb_no_garbage_collect	drivers/Firebird/ibpp/core/ibase.h	1557;"	d
isc_dpb_no_reserve	drivers/Firebird/ibpp/core/ibase.h	1568;"	d
isc_dpb_no_update	drivers/Firebird/ibpp/core/ibase.h	1665;"	d
isc_dpb_num_buffers	drivers/Firebird/ibpp/core/ibase.h	1546;"	d
isc_dpb_number_of_users	drivers/Firebird/ibpp/core/ibase.h	1555;"	d
isc_dpb_old_dump_id	drivers/Firebird/ibpp/core/ibase.h	1582;"	d
isc_dpb_old_file	drivers/Firebird/ibpp/core/ibase.h	1577;"	d
isc_dpb_old_file_size	drivers/Firebird/ibpp/core/ibase.h	1575;"	d
isc_dpb_old_num_files	drivers/Firebird/ibpp/core/ibase.h	1576;"	d
isc_dpb_old_start_file	drivers/Firebird/ibpp/core/ibase.h	1580;"	d
isc_dpb_old_start_page	drivers/Firebird/ibpp/core/ibase.h	1578;"	d
isc_dpb_old_start_seqno	drivers/Firebird/ibpp/core/ibase.h	1579;"	d
isc_dpb_online	drivers/Firebird/ibpp/core/ibase.h	1592;"	d
isc_dpb_online_dump	drivers/Firebird/ibpp/core/ibase.h	1574;"	d
isc_dpb_overwrite	drivers/Firebird/ibpp/core/ibase.h	1595;"	d
isc_dpb_page_size	drivers/Firebird/ibpp/core/ibase.h	1545;"	d
isc_dpb_pages	drivers/Firebird/ibpp/core/ibase.h	1661;"	d
isc_dpb_password	drivers/Firebird/ibpp/core/ibase.h	1570;"	d
isc_dpb_password_enc	drivers/Firebird/ibpp/core/ibase.h	1571;"	d
isc_dpb_quit_log	drivers/Firebird/ibpp/core/ibase.h	1567;"	d
isc_dpb_records	drivers/Firebird/ibpp/core/ibase.h	1662;"	d
isc_dpb_repair	drivers/Firebird/ibpp/core/ibase.h	1666;"	d
isc_dpb_reserved	drivers/Firebird/ibpp/core/ibase.h	1594;"	d
isc_dpb_sec_attach	drivers/Firebird/ibpp/core/ibase.h	1596;"	d
isc_dpb_set_db_SQL_dialect	drivers/Firebird/ibpp/core/ibase.h	2708;"	d
isc_dpb_set_db_charset	drivers/Firebird/ibpp/core/ibase.h	1609;"	d
isc_dpb_set_db_readonly	drivers/Firebird/ibpp/core/ibase.h	1605;"	d
isc_dpb_set_db_sql_dialect	drivers/Firebird/ibpp/core/ibase.h	1606;"	d
isc_dpb_set_page_buffers	drivers/Firebird/ibpp/core/ibase.h	1602;"	d
isc_dpb_shut_attachment	drivers/Firebird/ibpp/core/ibase.h	1674;"	d
isc_dpb_shut_cache	drivers/Firebird/ibpp/core/ibase.h	1673;"	d
isc_dpb_shut_default	drivers/Firebird/ibpp/core/ibase.h	1679;"	d
isc_dpb_shut_force	drivers/Firebird/ibpp/core/ibase.h	1676;"	d
isc_dpb_shut_full	drivers/Firebird/ibpp/core/ibase.h	1683;"	d
isc_dpb_shut_mode_mask	drivers/Firebird/ibpp/core/ibase.h	1677;"	d
isc_dpb_shut_multi	drivers/Firebird/ibpp/core/ibase.h	1681;"	d
isc_dpb_shut_normal	drivers/Firebird/ibpp/core/ibase.h	1680;"	d
isc_dpb_shut_single	drivers/Firebird/ibpp/core/ibase.h	1682;"	d
isc_dpb_shut_transaction	drivers/Firebird/ibpp/core/ibase.h	1675;"	d
isc_dpb_shutdown	drivers/Firebird/ibpp/core/ibase.h	1591;"	d
isc_dpb_shutdown_delay	drivers/Firebird/ibpp/core/ibase.h	1593;"	d
isc_dpb_sql_dialect	drivers/Firebird/ibpp/core/ibase.h	1604;"	d
isc_dpb_sql_role_name	drivers/Firebird/ibpp/core/ibase.h	1601;"	d
isc_dpb_sweep	drivers/Firebird/ibpp/core/ibase.h	1551;"	d
isc_dpb_sweep_interval	drivers/Firebird/ibpp/core/ibase.h	1563;"	d
isc_dpb_sys_user_name	drivers/Firebird/ibpp/core/ibase.h	1560;"	d
isc_dpb_sys_user_name_enc	drivers/Firebird/ibpp/core/ibase.h	1572;"	d
isc_dpb_trace	drivers/Firebird/ibpp/core/ibase.h	1556;"	d
isc_dpb_transactions	drivers/Firebird/ibpp/core/ibase.h	1664;"	d
isc_dpb_user_name	drivers/Firebird/ibpp/core/ibase.h	1569;"	d
isc_dpb_verify	drivers/Firebird/ibpp/core/ibase.h	1550;"	d
isc_dpb_version1	drivers/Firebird/ibpp/core/ibase.h	1541;"	d
isc_dpb_wal_backup_dir	drivers/Firebird/ibpp/core/ibase.h	1583;"	d
isc_dpb_wal_bufsize	drivers/Firebird/ibpp/core/ibase.h	1586;"	d
isc_dpb_wal_chkptlen	drivers/Firebird/ibpp/core/ibase.h	1584;"	d
isc_dpb_wal_grp_cmt_wait	drivers/Firebird/ibpp/core/ibase.h	1587;"	d
isc_dpb_wal_numbufs	drivers/Firebird/ibpp/core/ibase.h	1585;"	d
isc_dpb_working_directory	drivers/Firebird/ibpp/core/ibase.h	1603;"	d
isc_drdb_completed_with_errs	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_drdb_completed_with_errs         = 335544667L;$/;"	v
isc_drdb_completed_with_errs	drivers/Firebird/ibpp/core/iberror.h	1192;"	d
isc_drop_wal	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_drop_wal                         = 335544501L;$/;"	v
isc_drop_wal	drivers/Firebird/ibpp/core/iberror.h	1026;"	d
isc_dsql_agg_column_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_agg_column_err              = 335544824L;$/;"	v
isc_dsql_agg_column_err	drivers/Firebird/ibpp/core/iberror.h	1349;"	d
isc_dsql_agg_group_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_agg_group_err               = 335544823L;$/;"	v
isc_dsql_agg_group_err	drivers/Firebird/ibpp/core/iberror.h	1348;"	d
isc_dsql_agg_having_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_agg_having_err              = 335544825L;$/;"	v
isc_dsql_agg_having_err	drivers/Firebird/ibpp/core/iberror.h	1350;"	d
isc_dsql_agg_nested_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_agg_nested_err              = 335544826L;$/;"	v
isc_dsql_agg_nested_err	drivers/Firebird/ibpp/core/iberror.h	1351;"	d
isc_dsql_agg_ref_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_agg_ref_err                 = 335544709L;$/;"	v
isc_dsql_agg_ref_err	drivers/Firebird/ibpp/core/iberror.h	1234;"	d
isc_dsql_agg_where_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_agg_where_err               = 335544822L;$/;"	v
isc_dsql_agg_where_err	drivers/Firebird/ibpp/core/iberror.h	1347;"	d
isc_dsql_ambiguous_field_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_ambiguous_field_name        = 336003085L;$/;"	v
isc_dsql_ambiguous_field_name	drivers/Firebird/ibpp/core/iberror.h	1430;"	d
isc_dsql_arr_range_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_arr_range_error             = 335544594L;$/;"	v
isc_dsql_arr_range_error	drivers/Firebird/ibpp/core/iberror.h	1119;"	d
isc_dsql_base_table	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_base_table                  = 335544658L;$/;"	v
isc_dsql_base_table	drivers/Firebird/ibpp/core/iberror.h	1183;"	d
isc_dsql_blob_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_blob_err                    = 335544587L;$/;"	v
isc_dsql_blob_err	drivers/Firebird/ibpp/core/iberror.h	1112;"	d
isc_dsql_blob_type_unknown	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_blob_type_unknown           = 335544662L;$/;"	v
isc_dsql_blob_type_unknown	drivers/Firebird/ibpp/core/iberror.h	1187;"	d
isc_dsql_column_pos_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_column_pos_err              = 335544821L;$/;"	v
isc_dsql_column_pos_err	drivers/Firebird/ibpp/core/iberror.h	1346;"	d
isc_dsql_command_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_command_err                 = 335544570L;$/;"	v
isc_dsql_command_err	drivers/Firebird/ibpp/core/iberror.h	1095;"	d
isc_dsql_constant_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_constant_err                = 335544571L;$/;"	v
isc_dsql_constant_err	drivers/Firebird/ibpp/core/iberror.h	1096;"	d
isc_dsql_construct_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_construct_err               = 335544614L;$/;"	v
isc_dsql_construct_err	drivers/Firebird/ibpp/core/iberror.h	1139;"	d
isc_dsql_count_mismatch	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_count_mismatch              = 335544669L;$/;"	v
isc_dsql_count_mismatch	drivers/Firebird/ibpp/core/iberror.h	1194;"	d
isc_dsql_crdb_prepare_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_crdb_prepare_err            = 335544597L;$/;"	v
isc_dsql_crdb_prepare_err	drivers/Firebird/ibpp/core/iberror.h	1122;"	d
isc_dsql_cursor_close_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_cursor_close_err            = 335544577L;$/;"	v
isc_dsql_cursor_close_err	drivers/Firebird/ibpp/core/iberror.h	1102;"	d
isc_dsql_cursor_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_cursor_err                  = 335544572L;$/;"	v
isc_dsql_cursor_err	drivers/Firebird/ibpp/core/iberror.h	1097;"	d
isc_dsql_cursor_exists	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_cursor_exists               = 336003092L;$/;"	v
isc_dsql_cursor_exists	drivers/Firebird/ibpp/core/iberror.h	1437;"	d
isc_dsql_cursor_invalid	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_cursor_invalid              = 336003089L;$/;"	v
isc_dsql_cursor_invalid	drivers/Firebird/ibpp/core/iberror.h	1434;"	d
isc_dsql_cursor_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_cursor_not_found            = 336003091L;$/;"	v
isc_dsql_cursor_not_found	drivers/Firebird/ibpp/core/iberror.h	1436;"	d
isc_dsql_cursor_not_open	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_cursor_not_open             = 336003095L;$/;"	v
isc_dsql_cursor_not_open	drivers/Firebird/ibpp/core/iberror.h	1440;"	d
isc_dsql_cursor_open_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_cursor_open_err             = 335544576L;$/;"	v
isc_dsql_cursor_open_err	drivers/Firebird/ibpp/core/iberror.h	1101;"	d
isc_dsql_cursor_redefined	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_cursor_redefined            = 336003090L;$/;"	v
isc_dsql_cursor_redefined	drivers/Firebird/ibpp/core/iberror.h	1435;"	d
isc_dsql_cursor_rel_ambiguous	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_cursor_rel_ambiguous        = 336003093L;$/;"	v
isc_dsql_cursor_rel_ambiguous	drivers/Firebird/ibpp/core/iberror.h	1438;"	d
isc_dsql_cursor_rel_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_cursor_rel_not_found        = 336003094L;$/;"	v
isc_dsql_cursor_rel_not_found	drivers/Firebird/ibpp/core/iberror.h	1439;"	d
isc_dsql_cursor_update_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_cursor_update_err           = 335544575L;$/;"	v
isc_dsql_cursor_update_err	drivers/Firebird/ibpp/core/iberror.h	1100;"	d
isc_dsql_datatype_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_datatype_err                = 335544573L;$/;"	v
isc_dsql_datatype_err	drivers/Firebird/ibpp/core/iberror.h	1098;"	d
isc_dsql_datatypes_not_comparable	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_datatypes_not_comparable    = 336003088L;$/;"	v
isc_dsql_datatypes_not_comparable	drivers/Firebird/ibpp/core/iberror.h	1433;"	d
isc_dsql_dbkey_from_non_table	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_dbkey_from_non_table        = 336003074L;$/;"	v
isc_dsql_dbkey_from_non_table	drivers/Firebird/ibpp/core/iberror.h	1420;"	d
isc_dsql_decl_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_decl_err                    = 335544574L;$/;"	v
isc_dsql_decl_err	drivers/Firebird/ibpp/core/iberror.h	1099;"	d
isc_dsql_dialect_warning_expr	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_dialect_warning_expr        = 336003076L;$/;"	v
isc_dsql_dialect_warning_expr	drivers/Firebird/ibpp/core/iberror.h	1422;"	d
isc_dsql_domain_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_domain_err                  = 335544623L;$/;"	v
isc_dsql_domain_err	drivers/Firebird/ibpp/core/iberror.h	1148;"	d
isc_dsql_domain_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_domain_not_found            = 335544641L;$/;"	v
isc_dsql_domain_not_found	drivers/Firebird/ibpp/core/iberror.h	1166;"	d
isc_dsql_dup_option	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_dup_option                  = 335544590L;$/;"	v
isc_dsql_dup_option	drivers/Firebird/ibpp/core/iberror.h	1115;"	d
isc_dsql_duplicate_spec	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_duplicate_spec              = 335544664L;$/;"	v
isc_dsql_duplicate_spec	drivers/Firebird/ibpp/core/iberror.h	1189;"	d
isc_dsql_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_error                       = 335544569L;$/;"	v
isc_dsql_error	drivers/Firebird/ibpp/core/iberror.h	1094;"	d
isc_dsql_field_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_field_err                   = 335544578L;$/;"	v
isc_dsql_field_err	drivers/Firebird/ibpp/core/iberror.h	1103;"	d
isc_dsql_field_ref	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_field_ref                   = 335544682L;$/;"	v
isc_dsql_field_ref	drivers/Firebird/ibpp/core/iberror.h	1207;"	d
isc_dsql_file_length_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_file_length_err             = 335544632L;$/;"	v
isc_dsql_file_length_err	drivers/Firebird/ibpp/core/iberror.h	1157;"	d
isc_dsql_function_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_function_err                = 335544586L;$/;"	v
isc_dsql_function_err	drivers/Firebird/ibpp/core/iberror.h	1111;"	d
isc_dsql_internal_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_internal_err                = 335544579L;$/;"	v
isc_dsql_internal_err	drivers/Firebird/ibpp/core/iberror.h	1104;"	d
isc_dsql_invalid_array	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_invalid_array               = 335544592L;$/;"	v
isc_dsql_invalid_array	drivers/Firebird/ibpp/core/iberror.h	1117;"	d
isc_dsql_invalid_label	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_invalid_label               = 336003087L;$/;"	v
isc_dsql_invalid_label	drivers/Firebird/ibpp/core/iberror.h	1432;"	d
isc_dsql_line_col_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_line_col_error              = 336397208L;$/;"	v
isc_dsql_line_col_error	drivers/Firebird/ibpp/core/iberror.h	1546;"	d
isc_dsql_max_arr_dim_exceeded	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_max_arr_dim_exceeded        = 335544593L;$/;"	v
isc_dsql_max_arr_dim_exceeded	drivers/Firebird/ibpp/core/iberror.h	1118;"	d
isc_dsql_no_blob_array	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_no_blob_array               = 335544657L;$/;"	v
isc_dsql_no_blob_array	drivers/Firebird/ibpp/core/iberror.h	1182;"	d
isc_dsql_no_dup_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_no_dup_name                 = 336397210L;$/;"	v
isc_dsql_no_dup_name	drivers/Firebird/ibpp/core/iberror.h	1548;"	d
isc_dsql_no_relation_alias	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_no_relation_alias           = 335544635L;$/;"	v
isc_dsql_no_relation_alias	drivers/Firebird/ibpp/core/iberror.h	1160;"	d
isc_dsql_open_cursor_request	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_open_cursor_request         = 335544688L;$/;"	v
isc_dsql_open_cursor_request	drivers/Firebird/ibpp/core/iberror.h	1213;"	d
isc_dsql_procedure_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_procedure_err               = 335544581L;$/;"	v
isc_dsql_procedure_err	drivers/Firebird/ibpp/core/iberror.h	1106;"	d
isc_dsql_procedure_use_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_procedure_use_err           = 335544668L;$/;"	v
isc_dsql_procedure_use_err	drivers/Firebird/ibpp/core/iberror.h	1193;"	d
isc_dsql_relation_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_relation_err                = 335544580L;$/;"	v
isc_dsql_relation_err	drivers/Firebird/ibpp/core/iberror.h	1105;"	d
isc_dsql_request_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_request_err                 = 335544582L;$/;"	v
isc_dsql_request_err	drivers/Firebird/ibpp/core/iberror.h	1107;"	d
isc_dsql_self_join	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_self_join                   = 335544643L;$/;"	v
isc_dsql_self_join	drivers/Firebird/ibpp/core/iberror.h	1168;"	d
isc_dsql_shadow_number_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_shadow_number_err           = 335544633L;$/;"	v
isc_dsql_shadow_number_err	drivers/Firebird/ibpp/core/iberror.h	1158;"	d
isc_dsql_sqlda_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_sqlda_err                   = 335544583L;$/;"	v
isc_dsql_sqlda_err	drivers/Firebird/ibpp/core/iberror.h	1108;"	d
isc_dsql_sqlda_value_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_sqlda_value_err             = 335544713L;$/;"	v
isc_dsql_sqlda_value_err	drivers/Firebird/ibpp/core/iberror.h	1238;"	d
isc_dsql_stmt_handle	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_stmt_handle                 = 335544585L;$/;"	v
isc_dsql_stmt_handle	drivers/Firebird/ibpp/core/iberror.h	1110;"	d
isc_dsql_subselect_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_subselect_err               = 335544596L;$/;"	v
isc_dsql_subselect_err	drivers/Firebird/ibpp/core/iberror.h	1121;"	d
isc_dsql_table_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_table_not_found             = 336397206L;$/;"	v
isc_dsql_table_not_found	drivers/Firebird/ibpp/core/iberror.h	1544;"	d
isc_dsql_token_unk_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_token_unk_err               = 335544634L;$/;"	v
isc_dsql_token_unk_err	drivers/Firebird/ibpp/core/iberror.h	1159;"	d
isc_dsql_too_many_values	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_too_many_values             = 336397211L;$/;"	v
isc_dsql_too_many_values	drivers/Firebird/ibpp/core/iberror.h	1549;"	d
isc_dsql_too_old_ods	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_too_old_ods                 = 336397205L;$/;"	v
isc_dsql_too_old_ods	drivers/Firebird/ibpp/core/iberror.h	1543;"	d
isc_dsql_tran_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_tran_err                    = 335544591L;$/;"	v
isc_dsql_tran_err	drivers/Firebird/ibpp/core/iberror.h	1116;"	d
isc_dsql_transitional_numeric	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_transitional_numeric        = 336003075L;$/;"	v
isc_dsql_transitional_numeric	drivers/Firebird/ibpp/core/iberror.h	1421;"	d
isc_dsql_trigger_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_trigger_err                 = 335544595L;$/;"	v
isc_dsql_trigger_err	drivers/Firebird/ibpp/core/iberror.h	1120;"	d
isc_dsql_type_not_supp_ext_tab	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_type_not_supp_ext_tab       = 336003096L;$/;"	v
isc_dsql_type_not_supp_ext_tab	drivers/Firebird/ibpp/core/iberror.h	1441;"	d
isc_dsql_udf_return_pos_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_udf_return_pos_err          = 336003086L;$/;"	v
isc_dsql_udf_return_pos_err	drivers/Firebird/ibpp/core/iberror.h	1431;"	d
isc_dsql_unknown_pos	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_unknown_pos                 = 336397209L;$/;"	v
isc_dsql_unknown_pos	drivers/Firebird/ibpp/core/iberror.h	1547;"	d
isc_dsql_var_conflict	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_var_conflict                = 335544656L;$/;"	v
isc_dsql_var_conflict	drivers/Firebird/ibpp/core/iberror.h	1181;"	d
isc_dsql_var_count_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_var_count_err               = 335544584L;$/;"	v
isc_dsql_var_count_err	drivers/Firebird/ibpp/core/iberror.h	1109;"	d
isc_dsql_view_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_view_not_found              = 336397207L;$/;"	v
isc_dsql_view_not_found	drivers/Firebird/ibpp/core/iberror.h	1545;"	d
isc_dsql_warn_precision_ambiguous	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_warn_precision_ambiguous    = 336003082L;$/;"	v
isc_dsql_warn_precision_ambiguous	drivers/Firebird/ibpp/core/iberror.h	1427;"	d
isc_dsql_warn_precision_ambiguous1	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_warn_precision_ambiguous1   = 336003083L;$/;"	v
isc_dsql_warn_precision_ambiguous1	drivers/Firebird/ibpp/core/iberror.h	1428;"	d
isc_dsql_warn_precision_ambiguous2	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_warn_precision_ambiguous2   = 336003084L;$/;"	v
isc_dsql_warn_precision_ambiguous2	drivers/Firebird/ibpp/core/iberror.h	1429;"	d
isc_dsql_warning_number_ambiguous	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_warning_number_ambiguous    = 336003080L;$/;"	v
isc_dsql_warning_number_ambiguous	drivers/Firebird/ibpp/core/iberror.h	1425;"	d
isc_dsql_warning_number_ambiguous1	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dsql_warning_number_ambiguous1   = 336003081L;$/;"	v
isc_dsql_warning_number_ambiguous1	drivers/Firebird/ibpp/core/iberror.h	1426;"	d
isc_dtype_renamed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dtype_renamed                    = 335544808L;$/;"	v
isc_dtype_renamed	drivers/Firebird/ibpp/core/iberror.h	1333;"	d
isc_dup_usrname_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dup_usrname_found                = 335544752L;$/;"	v
isc_dup_usrname_found	drivers/Firebird/ibpp/core/iberror.h	1277;"	d
isc_duplicate_base_table	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_duplicate_base_table             = 335544659L;$/;"	v
isc_duplicate_base_table	drivers/Firebird/ibpp/core/iberror.h	1184;"	d
isc_dupnodfnd	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dupnodfnd                        = 335544401L;$/;"	v
isc_dupnodfnd	drivers/Firebird/ibpp/core/iberror.h	926;"	d
isc_dyn_begin	drivers/Firebird/ibpp/core/ibase.h	2292;"	d
isc_dyn_begin_backup	drivers/Firebird/ibpp/core/ibase.h	2358;"	d
isc_dyn_char_fld_too_small	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_char_fld_too_small           = 336068816L;$/;"	v
isc_dyn_char_fld_too_small	drivers/Firebird/ibpp/core/iberror.h	1455;"	d
isc_dyn_coll_attribute	drivers/Firebird/ibpp/core/ibase.h	2615;"	d
isc_dyn_coll_for_charset	drivers/Firebird/ibpp/core/ibase.h	2613;"	d
isc_dyn_coll_from	drivers/Firebird/ibpp/core/ibase.h	2614;"	d
isc_dyn_coll_specific_attributes	drivers/Firebird/ibpp/core/ibase.h	2617;"	d
isc_dyn_coll_specific_attributes_charset	drivers/Firebird/ibpp/core/ibase.h	2616;"	d
isc_dyn_def_collation	drivers/Firebird/ibpp/core/ibase.h	2612;"	d
isc_dyn_def_database	drivers/Firebird/ibpp/core/ibase.h	2295;"	d
isc_dyn_def_difference	drivers/Firebird/ibpp/core/ibase.h	2356;"	d
isc_dyn_def_dimension	drivers/Firebird/ibpp/core/ibase.h	2304;"	d
isc_dyn_def_exception	drivers/Firebird/ibpp/core/ibase.h	2348;"	d
isc_dyn_def_file	drivers/Firebird/ibpp/core/ibase.h	2311;"	d
isc_dyn_def_filter	drivers/Firebird/ibpp/core/ibase.h	2307;"	d
isc_dyn_def_foreign_key	drivers/Firebird/ibpp/core/ibase.h	2337;"	d
isc_dyn_def_function	drivers/Firebird/ibpp/core/ibase.h	2306;"	d
isc_dyn_def_function_arg	drivers/Firebird/ibpp/core/ibase.h	2308;"	d
isc_dyn_def_generator	drivers/Firebird/ibpp/core/ibase.h	2305;"	d
isc_dyn_def_global_fld	drivers/Firebird/ibpp/core/ibase.h	2296;"	d
isc_dyn_def_idx	drivers/Firebird/ibpp/core/ibase.h	2298;"	d
isc_dyn_def_local_fld	drivers/Firebird/ibpp/core/ibase.h	2297;"	d
isc_dyn_def_parameter	drivers/Firebird/ibpp/core/ibase.h	2341;"	d
isc_dyn_def_primary_key	drivers/Firebird/ibpp/core/ibase.h	2336;"	d
isc_dyn_def_procedure	drivers/Firebird/ibpp/core/ibase.h	2339;"	d
isc_dyn_def_rel	drivers/Firebird/ibpp/core/ibase.h	2299;"	d
isc_dyn_def_security_class	drivers/Firebird/ibpp/core/ibase.h	2303;"	d
isc_dyn_def_shadow	drivers/Firebird/ibpp/core/ibase.h	2309;"	d
isc_dyn_def_sql_fld	drivers/Firebird/ibpp/core/ibase.h	2300;"	d
isc_dyn_def_sql_role	drivers/Firebird/ibpp/core/ibase.h	2588;"	d
isc_dyn_def_trigger	drivers/Firebird/ibpp/core/ibase.h	2302;"	d
isc_dyn_def_trigger_msg	drivers/Firebird/ibpp/core/ibase.h	2310;"	d
isc_dyn_def_unique	drivers/Firebird/ibpp/core/ibase.h	2338;"	d
isc_dyn_def_view	drivers/Firebird/ibpp/core/ibase.h	2301;"	d
isc_dyn_del_collation	drivers/Firebird/ibpp/core/ibase.h	2618;"	d
isc_dyn_del_default	drivers/Firebird/ibpp/core/ibase.h	2428;"	d
isc_dyn_del_exception	drivers/Firebird/ibpp/core/ibase.h	2350;"	d
isc_dyn_del_sql_role	drivers/Firebird/ibpp/core/ibase.h	2591;"	d
isc_dyn_del_validation	drivers/Firebird/ibpp/core/ibase.h	2429;"	d
isc_dyn_delete_database	drivers/Firebird/ibpp/core/ibase.h	2322;"	d
isc_dyn_delete_dimensions	drivers/Firebird/ibpp/core/ibase.h	2328;"	d
isc_dyn_delete_filter	drivers/Firebird/ibpp/core/ibase.h	2331;"	d
isc_dyn_delete_function	drivers/Firebird/ibpp/core/ibase.h	2332;"	d
isc_dyn_delete_generator	drivers/Firebird/ibpp/core/ibase.h	2598;"	d
isc_dyn_delete_global_fld	drivers/Firebird/ibpp/core/ibase.h	2324;"	d
isc_dyn_delete_idx	drivers/Firebird/ibpp/core/ibase.h	2326;"	d
isc_dyn_delete_local_fld	drivers/Firebird/ibpp/core/ibase.h	2325;"	d
isc_dyn_delete_parameter	drivers/Firebird/ibpp/core/ibase.h	2342;"	d
isc_dyn_delete_procedure	drivers/Firebird/ibpp/core/ibase.h	2340;"	d
isc_dyn_delete_rel	drivers/Firebird/ibpp/core/ibase.h	2323;"	d
isc_dyn_delete_rel_constraint	drivers/Firebird/ibpp/core/ibase.h	2402;"	d
isc_dyn_delete_role_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_delete_role_failed           = 336068799L;$/;"	v
isc_dyn_delete_role_failed	drivers/Firebird/ibpp/core/iberror.h	1445;"	d
isc_dyn_delete_security_class	drivers/Firebird/ibpp/core/ibase.h	2327;"	d
isc_dyn_delete_shadow	drivers/Firebird/ibpp/core/ibase.h	2333;"	d
isc_dyn_delete_trigger	drivers/Firebird/ibpp/core/ibase.h	2329;"	d
isc_dyn_delete_trigger_msg	drivers/Firebird/ibpp/core/ibase.h	2330;"	d
isc_dyn_dependency_exists	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_dependency_exists            = 336068814L;$/;"	v
isc_dyn_dependency_exists	drivers/Firebird/ibpp/core/iberror.h	1453;"	d
isc_dyn_description	drivers/Firebird/ibpp/core/ibase.h	2379;"	d
isc_dyn_description2	drivers/Firebird/ibpp/core/ibase.h	2535;"	d
isc_dyn_dim_lower	drivers/Firebird/ibpp/core/ibase.h	2485;"	d
isc_dyn_dim_upper	drivers/Firebird/ibpp/core/ibase.h	2486;"	d
isc_dyn_domain_name_exists	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_domain_name_exists           = 336068812L;$/;"	v
isc_dyn_domain_name_exists	drivers/Firebird/ibpp/core/iberror.h	1451;"	d
isc_dyn_drop_difference	drivers/Firebird/ibpp/core/ibase.h	2357;"	d
isc_dyn_dtype_conv_invalid	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_dtype_conv_invalid           = 336068818L;$/;"	v
isc_dyn_dtype_conv_invalid	drivers/Firebird/ibpp/core/iberror.h	1457;"	d
isc_dyn_dtype_invalid	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_dtype_invalid                = 336068815L;$/;"	v
isc_dyn_dtype_invalid	drivers/Firebird/ibpp/core/iberror.h	1454;"	d
isc_dyn_dup_sql_role	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_dup_sql_role                 = 336068802L;$/;"	v
isc_dyn_dup_sql_role	drivers/Firebird/ibpp/core/iberror.h	1448;"	d
isc_dyn_end	drivers/Firebird/ibpp/core/ibase.h	2293;"	d
isc_dyn_end_backup	drivers/Firebird/ibpp/core/ibase.h	2359;"	d
isc_dyn_eoc	drivers/Firebird/ibpp/core/ibase.h	2286;"	d
isc_dyn_field_name_exists	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_field_name_exists            = 336068813L;$/;"	v
isc_dyn_field_name_exists	drivers/Firebird/ibpp/core/iberror.h	1452;"	d
isc_dyn_file_length	drivers/Firebird/ibpp/core/ibase.h	2494;"	d
isc_dyn_file_name	drivers/Firebird/ibpp/core/ibase.h	2492;"	d
isc_dyn_file_start	drivers/Firebird/ibpp/core/ibase.h	2493;"	d
isc_dyn_filter_in_subtype	drivers/Firebird/ibpp/core/ibase.h	2531;"	d
isc_dyn_filter_out_subtype	drivers/Firebird/ibpp/core/ibase.h	2532;"	d
isc_dyn_fld_ambiguous	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_fld_ambiguous                = 335544708L;$/;"	v
isc_dyn_fld_ambiguous	drivers/Firebird/ibpp/core/iberror.h	1233;"	d
isc_dyn_fld_base_fld	drivers/Firebird/ibpp/core/ibase.h	2438;"	d
isc_dyn_fld_char_length	drivers/Firebird/ibpp/core/ibase.h	2425;"	d
isc_dyn_fld_character_set	drivers/Firebird/ibpp/core/ibase.h	2431;"	d
isc_dyn_fld_character_set_name	drivers/Firebird/ibpp/core/ibase.h	2386;"	d
isc_dyn_fld_collation	drivers/Firebird/ibpp/core/ibase.h	2426;"	d
isc_dyn_fld_computed_blr	drivers/Firebird/ibpp/core/ibase.h	2417;"	d
isc_dyn_fld_computed_source	drivers/Firebird/ibpp/core/ibase.h	2418;"	d
isc_dyn_fld_computed_source2	drivers/Firebird/ibpp/core/ibase.h	2536;"	d
isc_dyn_fld_default_source	drivers/Firebird/ibpp/core/ibase.h	2427;"	d
isc_dyn_fld_default_value	drivers/Firebird/ibpp/core/ibase.h	2420;"	d
isc_dyn_fld_dimensions	drivers/Firebird/ibpp/core/ibase.h	2422;"	d
isc_dyn_fld_edit_string	drivers/Firebird/ibpp/core/ibase.h	2414;"	d
isc_dyn_fld_edit_string2	drivers/Firebird/ibpp/core/ibase.h	2537;"	d
isc_dyn_fld_length	drivers/Firebird/ibpp/core/ibase.h	2409;"	d
isc_dyn_fld_missing_value	drivers/Firebird/ibpp/core/ibase.h	2419;"	d
isc_dyn_fld_name	drivers/Firebird/ibpp/core/ibase.h	2376;"	d
isc_dyn_fld_not_null	drivers/Firebird/ibpp/core/ibase.h	2423;"	d
isc_dyn_fld_position	drivers/Firebird/ibpp/core/ibase.h	2439;"	d
isc_dyn_fld_precision	drivers/Firebird/ibpp/core/ibase.h	2424;"	d
isc_dyn_fld_query_header	drivers/Firebird/ibpp/core/ibase.h	2413;"	d
isc_dyn_fld_query_header2	drivers/Firebird/ibpp/core/ibase.h	2538;"	d
isc_dyn_fld_query_name	drivers/Firebird/ibpp/core/ibase.h	2421;"	d
isc_dyn_fld_scale	drivers/Firebird/ibpp/core/ibase.h	2410;"	d
isc_dyn_fld_segment_length	drivers/Firebird/ibpp/core/ibase.h	2412;"	d
isc_dyn_fld_source	drivers/Firebird/ibpp/core/ibase.h	2437;"	d
isc_dyn_fld_sub_type	drivers/Firebird/ibpp/core/ibase.h	2411;"	d
isc_dyn_fld_type	drivers/Firebird/ibpp/core/ibase.h	2408;"	d
isc_dyn_fld_update_flag	drivers/Firebird/ibpp/core/ibase.h	2440;"	d
isc_dyn_fld_validation_blr	drivers/Firebird/ibpp/core/ibase.h	2415;"	d
isc_dyn_fld_validation_source	drivers/Firebird/ibpp/core/ibase.h	2416;"	d
isc_dyn_fld_validation_source2	drivers/Firebird/ibpp/core/ibase.h	2539;"	d
isc_dyn_foreign_key_cascade	drivers/Firebird/ibpp/core/ibase.h	2580;"	d
isc_dyn_foreign_key_default	drivers/Firebird/ibpp/core/ibase.h	2581;"	d
isc_dyn_foreign_key_delete	drivers/Firebird/ibpp/core/ibase.h	2579;"	d
isc_dyn_foreign_key_none	drivers/Firebird/ibpp/core/ibase.h	2583;"	d
isc_dyn_foreign_key_null	drivers/Firebird/ibpp/core/ibase.h	2582;"	d
isc_dyn_foreign_key_update	drivers/Firebird/ibpp/core/ibase.h	2578;"	d
isc_dyn_func_arg_position	drivers/Firebird/ibpp/core/ibase.h	2529;"	d
isc_dyn_func_entry_point	drivers/Firebird/ibpp/core/ibase.h	2527;"	d
isc_dyn_func_mechanism	drivers/Firebird/ibpp/core/ibase.h	2530;"	d
isc_dyn_func_module_name	drivers/Firebird/ibpp/core/ibase.h	2526;"	d
isc_dyn_func_return_argument	drivers/Firebird/ibpp/core/ibase.h	2528;"	d
isc_dyn_function_name	drivers/Firebird/ibpp/core/ibase.h	2524;"	d
isc_dyn_function_type	drivers/Firebird/ibpp/core/ibase.h	2525;"	d
isc_dyn_generator_id	drivers/Firebird/ibpp/core/ibase.h	2550;"	d
isc_dyn_generator_name	drivers/Firebird/ibpp/core/ibase.h	2549;"	d
isc_dyn_grant	drivers/Firebird/ibpp/core/ibase.h	2334;"	d
isc_dyn_grant_admin_options	drivers/Firebird/ibpp/core/ibase.h	2590;"	d
isc_dyn_grant_options	drivers/Firebird/ibpp/core/ibase.h	2476;"	d
isc_dyn_grant_proc	drivers/Firebird/ibpp/core/ibase.h	2473;"	d
isc_dyn_grant_role	drivers/Firebird/ibpp/core/ibase.h	2478;"	d
isc_dyn_grant_role_to_user	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_grant_role_to_user           = 336068800L;$/;"	v
isc_dyn_grant_role_to_user	drivers/Firebird/ibpp/core/iberror.h	1446;"	d
isc_dyn_grant_trig	drivers/Firebird/ibpp/core/ibase.h	2474;"	d
isc_dyn_grant_user	drivers/Firebird/ibpp/core/ibase.h	2471;"	d
isc_dyn_grant_user_explicit	drivers/Firebird/ibpp/core/ibase.h	2472;"	d
isc_dyn_grant_user_group	drivers/Firebird/ibpp/core/ibase.h	2477;"	d
isc_dyn_grant_view	drivers/Firebird/ibpp/core/ibase.h	2475;"	d
isc_dyn_idx_foreign_key	drivers/Firebird/ibpp/core/ibase.h	2449;"	d
isc_dyn_idx_inactive	drivers/Firebird/ibpp/core/ibase.h	2447;"	d
isc_dyn_idx_name	drivers/Firebird/ibpp/core/ibase.h	2378;"	d
isc_dyn_idx_ref_column	drivers/Firebird/ibpp/core/ibase.h	2450;"	d
isc_dyn_idx_statistic	drivers/Firebird/ibpp/core/ibase.h	2451;"	d
isc_dyn_idx_type	drivers/Firebird/ibpp/core/ibase.h	2448;"	d
isc_dyn_idx_unique	drivers/Firebird/ibpp/core/ibase.h	2446;"	d
isc_dyn_if	drivers/Firebird/ibpp/core/ibase.h	2294;"	d
isc_dyn_inv_sql_role_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_inv_sql_role_name            = 336068801L;$/;"	v
isc_dyn_inv_sql_role_name	drivers/Firebird/ibpp/core/iberror.h	1447;"	d
isc_dyn_invalid_dtype_conversion	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_invalid_dtype_conversion     = 336068817L;$/;"	v
isc_dyn_invalid_dtype_conversion	drivers/Firebird/ibpp/core/iberror.h	1456;"	d
isc_dyn_kywd_spec_for_role	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_kywd_spec_for_role           = 336068803L;$/;"	v
isc_dyn_kywd_spec_for_role	drivers/Firebird/ibpp/core/iberror.h	1449;"	d
isc_dyn_last_dyn_value	drivers/Firebird/ibpp/core/ibase.h	2624;"	d
isc_dyn_mod_charset	drivers/Firebird/ibpp/core/ibase.h	2605;"	d
isc_dyn_mod_collation	drivers/Firebird/ibpp/core/ibase.h	2606;"	d
isc_dyn_mod_database	drivers/Firebird/ibpp/core/ibase.h	2312;"	d
isc_dyn_mod_exception	drivers/Firebird/ibpp/core/ibase.h	2349;"	d
isc_dyn_mod_filter	drivers/Firebird/ibpp/core/ibase.h	2602;"	d
isc_dyn_mod_function	drivers/Firebird/ibpp/core/ibase.h	2601;"	d
isc_dyn_mod_generator	drivers/Firebird/ibpp/core/ibase.h	2603;"	d
isc_dyn_mod_global_fld	drivers/Firebird/ibpp/core/ibase.h	2314;"	d
isc_dyn_mod_idx	drivers/Firebird/ibpp/core/ibase.h	2315;"	d
isc_dyn_mod_local_fld	drivers/Firebird/ibpp/core/ibase.h	2316;"	d
isc_dyn_mod_prc_parameter	drivers/Firebird/ibpp/core/ibase.h	2607;"	d
isc_dyn_mod_procedure	drivers/Firebird/ibpp/core/ibase.h	2343;"	d
isc_dyn_mod_rel	drivers/Firebird/ibpp/core/ibase.h	2313;"	d
isc_dyn_mod_security_class	drivers/Firebird/ibpp/core/ibase.h	2319;"	d
isc_dyn_mod_sql_fld	drivers/Firebird/ibpp/core/ibase.h	2317;"	d
isc_dyn_mod_sql_role	drivers/Firebird/ibpp/core/ibase.h	2604;"	d
isc_dyn_mod_trigger	drivers/Firebird/ibpp/core/ibase.h	2320;"	d
isc_dyn_mod_trigger_msg	drivers/Firebird/ibpp/core/ibase.h	2321;"	d
isc_dyn_mod_view	drivers/Firebird/ibpp/core/ibase.h	2318;"	d
isc_dyn_new_fld_name	drivers/Firebird/ibpp/core/ibase.h	2377;"	d
isc_dyn_no_grant_admin_opt	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_no_grant_admin_opt           = 336068797L;$/;"	v
isc_dyn_no_grant_admin_opt	drivers/Firebird/ibpp/core/iberror.h	1443;"	d
isc_dyn_prc_blr	drivers/Firebird/ibpp/core/ibase.h	2559;"	d
isc_dyn_prc_inputs	drivers/Firebird/ibpp/core/ibase.h	2556;"	d
isc_dyn_prc_name	drivers/Firebird/ibpp/core/ibase.h	2383;"	d
isc_dyn_prc_outputs	drivers/Firebird/ibpp/core/ibase.h	2557;"	d
isc_dyn_prc_source	drivers/Firebird/ibpp/core/ibase.h	2558;"	d
isc_dyn_prc_source2	drivers/Firebird/ibpp/core/ibase.h	2560;"	d
isc_dyn_prm_name	drivers/Firebird/ibpp/core/ibase.h	2384;"	d
isc_dyn_prm_number	drivers/Firebird/ibpp/core/ibase.h	2566;"	d
isc_dyn_prm_type	drivers/Firebird/ibpp/core/ibase.h	2567;"	d
isc_dyn_rel_constraint	drivers/Firebird/ibpp/core/ibase.h	2401;"	d
isc_dyn_rel_dbkey_length	drivers/Firebird/ibpp/core/ibase.h	2392;"	d
isc_dyn_rel_erase_trig	drivers/Firebird/ibpp/core/ibase.h	2395;"	d
isc_dyn_rel_erase_trig_source	drivers/Firebird/ibpp/core/ibase.h	2398;"	d
isc_dyn_rel_ext_file	drivers/Firebird/ibpp/core/ibase.h	2399;"	d
isc_dyn_rel_modify_trig	drivers/Firebird/ibpp/core/ibase.h	2394;"	d
isc_dyn_rel_modify_trig_source	drivers/Firebird/ibpp/core/ibase.h	2397;"	d
isc_dyn_rel_name	drivers/Firebird/ibpp/core/ibase.h	2375;"	d
isc_dyn_rel_sql_protection	drivers/Firebird/ibpp/core/ibase.h	2400;"	d
isc_dyn_rel_store_trig	drivers/Firebird/ibpp/core/ibase.h	2393;"	d
isc_dyn_rel_store_trig_source	drivers/Firebird/ibpp/core/ibase.h	2396;"	d
isc_dyn_revoke	drivers/Firebird/ibpp/core/ibase.h	2335;"	d
isc_dyn_role_does_not_exist	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_role_does_not_exist          = 336068796L;$/;"	v
isc_dyn_role_does_not_exist	drivers/Firebird/ibpp/core/iberror.h	1442;"	d
isc_dyn_roles_not_supported	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_roles_not_supported          = 336068804L;$/;"	v
isc_dyn_roles_not_supported	drivers/Firebird/ibpp/core/iberror.h	1450;"	d
isc_dyn_scl_acl	drivers/Firebird/ibpp/core/ibase.h	2470;"	d
isc_dyn_security_class	drivers/Firebird/ibpp/core/ibase.h	2380;"	d
isc_dyn_shadow_conditional	drivers/Firebird/ibpp/core/ibase.h	2497;"	d
isc_dyn_shadow_man_auto	drivers/Firebird/ibpp/core/ibase.h	2496;"	d
isc_dyn_shadow_number	drivers/Firebird/ibpp/core/ibase.h	2495;"	d
isc_dyn_single_validation	drivers/Firebird/ibpp/core/ibase.h	2430;"	d
isc_dyn_sql_object	drivers/Firebird/ibpp/core/ibase.h	2385;"	d
isc_dyn_sql_role_name	drivers/Firebird/ibpp/core/ibase.h	2589;"	d
isc_dyn_system_flag	drivers/Firebird/ibpp/core/ibase.h	2381;"	d
isc_dyn_trg_blr	drivers/Firebird/ibpp/core/ibase.h	2458;"	d
isc_dyn_trg_inactive	drivers/Firebird/ibpp/core/ibase.h	2462;"	d
isc_dyn_trg_msg	drivers/Firebird/ibpp/core/ibase.h	2464;"	d
isc_dyn_trg_msg2	drivers/Firebird/ibpp/core/ibase.h	2540;"	d
isc_dyn_trg_msg_number	drivers/Firebird/ibpp/core/ibase.h	2463;"	d
isc_dyn_trg_name	drivers/Firebird/ibpp/core/ibase.h	2460;"	d
isc_dyn_trg_sequence	drivers/Firebird/ibpp/core/ibase.h	2461;"	d
isc_dyn_trg_source	drivers/Firebird/ibpp/core/ibase.h	2459;"	d
isc_dyn_trg_source2	drivers/Firebird/ibpp/core/ibase.h	2541;"	d
isc_dyn_trg_type	drivers/Firebird/ibpp/core/ibase.h	2457;"	d
isc_dyn_update_flag	drivers/Firebird/ibpp/core/ibase.h	2382;"	d
isc_dyn_user_not_role_member	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_user_not_role_member         = 336068798L;$/;"	v
isc_dyn_user_not_role_member	drivers/Firebird/ibpp/core/iberror.h	1444;"	d
isc_dyn_version_1	drivers/Firebird/ibpp/core/ibase.h	2285;"	d
isc_dyn_view_blr	drivers/Firebird/ibpp/core/ibase.h	2365;"	d
isc_dyn_view_context	drivers/Firebird/ibpp/core/ibase.h	2368;"	d
isc_dyn_view_context_name	drivers/Firebird/ibpp/core/ibase.h	2369;"	d
isc_dyn_view_relation	drivers/Firebird/ibpp/core/ibase.h	2367;"	d
isc_dyn_view_source	drivers/Firebird/ibpp/core/ibase.h	2366;"	d
isc_dyn_view_source2	drivers/Firebird/ibpp/core/ibase.h	2542;"	d
isc_dyn_xcp_msg	drivers/Firebird/ibpp/core/ibase.h	2573;"	d
isc_dyn_xcp_msg2	drivers/Firebird/ibpp/core/ibase.h	2543;"	d
isc_dyn_zero_len_id	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_dyn_zero_len_id                  = 336068820L;$/;"	v
isc_dyn_zero_len_id	drivers/Firebird/ibpp/core/iberror.h	1458;"	d
isc_err_max	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_err_max                          = 763;$/;"	v
isc_err_max	drivers/Firebird/ibpp/core/iberror.h	1609;"	d
isc_err_stack_limit	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_err_stack_limit                  = 335544717L;$/;"	v
isc_err_stack_limit	drivers/Firebird/ibpp/core/iberror.h	1242;"	d
isc_error_adding_sec_record	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_error_adding_sec_record          = 335544754L;$/;"	v
isc_error_adding_sec_record	drivers/Firebird/ibpp/core/iberror.h	1279;"	d
isc_error_deleting_sec_record	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_error_deleting_sec_record        = 335544756L;$/;"	v
isc_error_deleting_sec_record	drivers/Firebird/ibpp/core/iberror.h	1281;"	d
isc_error_modifying_sec_record	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_error_modifying_sec_record       = 335544755L;$/;"	v
isc_error_modifying_sec_record	drivers/Firebird/ibpp/core/iberror.h	1280;"	d
isc_error_updating_sec_db	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_error_updating_sec_db            = 335544757L;$/;"	v
isc_error_updating_sec_db	drivers/Firebird/ibpp/core/iberror.h	1282;"	d
isc_except	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_except                           = 335544517L;$/;"	v
isc_except	drivers/Firebird/ibpp/core/iberror.h	1042;"	d
isc_except2	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_except2                          = 335544848L;$/;"	v
isc_except2	drivers/Firebird/ibpp/core/iberror.h	1373;"	d
isc_exception_access_violation	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_access_violation       = 335544768L;$/;"	v
isc_exception_access_violation	drivers/Firebird/ibpp/core/iberror.h	1293;"	d
isc_exception_array_bounds_exceeded	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_array_bounds_exceeded  = 335544770L;$/;"	v
isc_exception_array_bounds_exceeded	drivers/Firebird/ibpp/core/iberror.h	1295;"	d
isc_exception_datatype_missalignment	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_datatype_missalignment = 335544769L;$/;"	v
isc_exception_datatype_missalignment	drivers/Firebird/ibpp/core/iberror.h	1294;"	d
isc_exception_float_denormal_operand	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_float_denormal_operand = 335544771L;$/;"	v
isc_exception_float_denormal_operand	drivers/Firebird/ibpp/core/iberror.h	1296;"	d
isc_exception_float_divide_by_zero	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_float_divide_by_zero   = 335544772L;$/;"	v
isc_exception_float_divide_by_zero	drivers/Firebird/ibpp/core/iberror.h	1297;"	d
isc_exception_float_inexact_result	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_float_inexact_result   = 335544773L;$/;"	v
isc_exception_float_inexact_result	drivers/Firebird/ibpp/core/iberror.h	1298;"	d
isc_exception_float_invalid_operand	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_float_invalid_operand  = 335544774L;$/;"	v
isc_exception_float_invalid_operand	drivers/Firebird/ibpp/core/iberror.h	1299;"	d
isc_exception_float_overflow	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_float_overflow         = 335544775L;$/;"	v
isc_exception_float_overflow	drivers/Firebird/ibpp/core/iberror.h	1300;"	d
isc_exception_float_stack_check	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_float_stack_check      = 335544776L;$/;"	v
isc_exception_float_stack_check	drivers/Firebird/ibpp/core/iberror.h	1301;"	d
isc_exception_float_underflow	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_float_underflow        = 335544777L;$/;"	v
isc_exception_float_underflow	drivers/Firebird/ibpp/core/iberror.h	1302;"	d
isc_exception_integer_divide_by_zero	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_integer_divide_by_zero = 335544778L;$/;"	v
isc_exception_integer_divide_by_zero	drivers/Firebird/ibpp/core/iberror.h	1303;"	d
isc_exception_integer_overflow	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_integer_overflow       = 335544779L;$/;"	v
isc_exception_integer_overflow	drivers/Firebird/ibpp/core/iberror.h	1304;"	d
isc_exception_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_name                   = 335544610L;$/;"	v
isc_exception_name	drivers/Firebird/ibpp/core/iberror.h	1135;"	d
isc_exception_sigbus	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_sigbus                 = 335544784L;$/;"	v
isc_exception_sigbus	drivers/Firebird/ibpp/core/iberror.h	1309;"	d
isc_exception_sigfpe	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_sigfpe                 = 335544785L;$/;"	v
isc_exception_sigfpe	drivers/Firebird/ibpp/core/iberror.h	1310;"	d
isc_exception_sigill	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_sigill                 = 335544783L;$/;"	v
isc_exception_sigill	drivers/Firebird/ibpp/core/iberror.h	1308;"	d
isc_exception_sigsegv	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_sigsegv                = 335544782L;$/;"	v
isc_exception_sigsegv	drivers/Firebird/ibpp/core/iberror.h	1307;"	d
isc_exception_stack_overflow	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_stack_overflow         = 335544781L;$/;"	v
isc_exception_stack_overflow	drivers/Firebird/ibpp/core/iberror.h	1306;"	d
isc_exception_unknown	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exception_unknown                = 335544780L;$/;"	v
isc_exception_unknown	drivers/Firebird/ibpp/core/iberror.h	1305;"	d
isc_excess_trans	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_excess_trans                     = 335544337L;$/;"	v
isc_excess_trans	drivers/Firebird/ibpp/core/iberror.h	862;"	d
isc_exec_sql_invalid_arg	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exec_sql_invalid_arg             = 335544827L;$/;"	v
isc_exec_sql_invalid_arg	drivers/Firebird/ibpp/core/iberror.h	1352;"	d
isc_exec_sql_invalid_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exec_sql_invalid_req             = 335544828L;$/;"	v
isc_exec_sql_invalid_req	drivers/Firebird/ibpp/core/iberror.h	1353;"	d
isc_exec_sql_invalid_var	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exec_sql_invalid_var             = 335544829L;$/;"	v
isc_exec_sql_invalid_var	drivers/Firebird/ibpp/core/iberror.h	1354;"	d
isc_exec_sql_max_call_exceeded	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_exec_sql_max_call_exceeded       = 335544830L;$/;"	v
isc_exec_sql_max_call_exceeded	drivers/Firebird/ibpp/core/iberror.h	1355;"	d
isc_existing_priv_mod	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_existing_priv_mod                = 335544529L;$/;"	v
isc_existing_priv_mod	drivers/Firebird/ibpp/core/iberror.h	1054;"	d
isc_expec_long	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_expec_long                       = 335544700L;$/;"	v
isc_expec_long	drivers/Firebird/ibpp/core/iberror.h	1225;"	d
isc_expec_positive	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_expec_positive                   = 335544712L;$/;"	v
isc_expec_positive	drivers/Firebird/ibpp/core/iberror.h	1237;"	d
isc_expec_short	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_expec_short                      = 335544699L;$/;"	v
isc_expec_short	drivers/Firebird/ibpp/core/iberror.h	1224;"	d
isc_expec_ushort	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_expec_ushort                     = 335544701L;$/;"	v
isc_expec_ushort	drivers/Firebird/ibpp/core/iberror.h	1226;"	d
isc_expression_eval_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_expression_eval_err              = 335544606L;$/;"	v
isc_expression_eval_err	drivers/Firebird/ibpp/core/iberror.h	1131;"	d
isc_ext_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ext_err                          = 335544445L;$/;"	v
isc_ext_err	drivers/Firebird/ibpp/core/iberror.h	970;"	d
isc_ext_file_delete	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ext_file_delete                  = 335544786L;$/;"	v
isc_ext_file_delete	drivers/Firebird/ibpp/core/iberror.h	1311;"	d
isc_ext_file_modify	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ext_file_modify                  = 335544787L;$/;"	v
isc_ext_file_modify	drivers/Firebird/ibpp/core/iberror.h	1312;"	d
isc_ext_readonly_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ext_readonly_err                 = 335544651L;$/;"	v
isc_ext_readonly_err	drivers/Firebird/ibpp/core/iberror.h	1176;"	d
isc_extern_func_dir_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_extern_func_dir_error            = 335544809L;$/;"	v
isc_extern_func_dir_error	drivers/Firebird/ibpp/core/iberror.h	1334;"	d
isc_extern_func_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_extern_func_err                  = 335544619L;$/;"	v
isc_extern_func_err	drivers/Firebird/ibpp/core/iberror.h	1144;"	d
isc_extfile_uns_op	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_extfile_uns_op                   = 335544715L;$/;"	v
isc_extfile_uns_op	drivers/Firebird/ibpp/core/iberror.h	1240;"	d
isc_extract_input_mismatch	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_extract_input_mismatch           = 335544789L;$/;"	v
isc_extract_input_mismatch	drivers/Firebird/ibpp/core/iberror.h	1314;"	d
isc_facility	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_facility	= 20;$/;"	v
isc_facility	drivers/Firebird/ibpp/core/iberror.h	825;"	d
isc_factor	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_factor = 1;$/;"	v
isc_factor	drivers/Firebird/ibpp/core/iberror.h	827;"	d
isc_fatal_conflict	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_fatal_conflict                   = 335544383L;$/;"	v
isc_fatal_conflict	drivers/Firebird/ibpp/core/iberror.h	908;"	d
isc_field_aggregate_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_field_aggregate_err              = 335544615L;$/;"	v
isc_field_aggregate_err	drivers/Firebird/ibpp/core/iberror.h	1140;"	d
isc_field_disappeared	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_field_disappeared                = 335544865L;$/;"	v
isc_field_disappeared	drivers/Firebird/ibpp/core/iberror.h	1390;"	d
isc_field_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_field_name                       = 335544611L;$/;"	v
isc_field_name	drivers/Firebird/ibpp/core/iberror.h	1136;"	d
isc_field_ref_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_field_ref_err                    = 335544616L;$/;"	v
isc_field_ref_err	drivers/Firebird/ibpp/core/iberror.h	1141;"	d
isc_file_in_use	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_file_in_use                      = 335544791L;$/;"	v
isc_file_in_use	drivers/Firebird/ibpp/core/iberror.h	1316;"	d
isc_fldnotdef	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_fldnotdef                        = 335544396L;$/;"	v
isc_fldnotdef	drivers/Firebird/ibpp/core/iberror.h	921;"	d
isc_foreign_key	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_foreign_key                      = 335544466L;$/;"	v
isc_foreign_key	drivers/Firebird/ibpp/core/iberror.h	991;"	d
isc_foreign_key_notfound	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_foreign_key_notfound             = 335544533L;$/;"	v
isc_foreign_key_notfound	drivers/Firebird/ibpp/core/iberror.h	1058;"	d
isc_foreign_key_references_present	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_foreign_key_references_present   = 335544839L;$/;"	v
isc_foreign_key_references_present	drivers/Firebird/ibpp/core/iberror.h	1364;"	d
isc_foreign_key_target_doesnt_exist	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_foreign_key_target_doesnt_exist  = 335544838L;$/;"	v
isc_foreign_key_target_doesnt_exist	drivers/Firebird/ibpp/core/iberror.h	1363;"	d
isc_from_no_match	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_from_no_match                    = 335544338L;$/;"	v
isc_from_no_match	drivers/Firebird/ibpp/core/iberror.h	863;"	d
isc_funmismat	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_funmismat                        = 335544439L;$/;"	v
isc_funmismat	drivers/Firebird/ibpp/core/iberror.h	964;"	d
isc_funnotdef	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_funnotdef                        = 335544438L;$/;"	v
isc_funnotdef	drivers/Firebird/ibpp/core/iberror.h	963;"	d
isc_gbak_bkup_corrupt	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_bkup_corrupt                = 336331019L;$/;"	v
isc_gbak_bkup_corrupt	drivers/Firebird/ibpp/core/iberror.h	1533;"	d
isc_gbak_blob_col_missing	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_blob_col_missing            = 336330788L;$/;"	v
isc_gbak_blob_col_missing	drivers/Firebird/ibpp/core/iberror.h	1490;"	d
isc_gbak_blob_info_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_blob_info_failed            = 336330772L;$/;"	v
isc_gbak_blob_info_failed	drivers/Firebird/ibpp/core/iberror.h	1474;"	d
isc_gbak_block_fac_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_block_fac_specified         = 336330936L;$/;"	v
isc_gbak_block_fac_specified	drivers/Firebird/ibpp/core/iberror.h	1512;"	d
isc_gbak_cant_rest_record	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_cant_rest_record            = 336330799L;$/;"	v
isc_gbak_cant_rest_record	drivers/Firebird/ibpp/core/iberror.h	1501;"	d
isc_gbak_close_blob_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_close_blob_failed           = 336330775L;$/;"	v
isc_gbak_close_blob_failed	drivers/Firebird/ibpp/core/iberror.h	1477;"	d
isc_gbak_comp_req_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_comp_req_failed             = 336330779L;$/;"	v
isc_gbak_comp_req_failed	drivers/Firebird/ibpp/core/iberror.h	1481;"	d
isc_gbak_create_blob_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_create_blob_failed          = 336330789L;$/;"	v
isc_gbak_create_blob_failed	drivers/Firebird/ibpp/core/iberror.h	1491;"	d
isc_gbak_data_only	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_data_only                   = 336331034L;$/;"	v
isc_gbak_data_only	drivers/Firebird/ibpp/core/iberror.h	1542;"	d
isc_gbak_db_create_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_db_create_failed            = 336330785L;$/;"	v
isc_gbak_db_create_failed	drivers/Firebird/ibpp/core/iberror.h	1487;"	d
isc_gbak_db_exists	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_db_exists                   = 336330766L;$/;"	v
isc_gbak_db_exists	drivers/Firebird/ibpp/core/iberror.h	1472;"	d
isc_gbak_db_format_too_old	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_db_format_too_old           = 336330803L;$/;"	v
isc_gbak_db_format_too_old	drivers/Firebird/ibpp/core/iberror.h	1505;"	d
isc_gbak_db_in_use	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_db_in_use                   = 336330985L;$/;"	v
isc_gbak_db_in_use	drivers/Firebird/ibpp/core/iberror.h	1521;"	d
isc_gbak_db_info_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_db_info_failed              = 336330783L;$/;"	v
isc_gbak_db_info_failed	drivers/Firebird/ibpp/core/iberror.h	1485;"	d
isc_gbak_db_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_db_specified                = 336330765L;$/;"	v
isc_gbak_db_specified	drivers/Firebird/ibpp/core/iberror.h	1471;"	d
isc_gbak_decomp_len_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_decomp_len_error            = 336330786L;$/;"	v
isc_gbak_decomp_len_error	drivers/Firebird/ibpp/core/iberror.h	1488;"	d
isc_gbak_disk_space_ex	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_disk_space_ex               = 336331022L;$/;"	v
isc_gbak_disk_space_ex	drivers/Firebird/ibpp/core/iberror.h	1536;"	d
isc_gbak_dup_inout_names	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_dup_inout_names             = 336330763L;$/;"	v
isc_gbak_dup_inout_names	drivers/Firebird/ibpp/core/iberror.h	1469;"	d
isc_gbak_err_restore_charset	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_err_restore_charset         = 336330965L;$/;"	v
isc_gbak_err_restore_charset	drivers/Firebird/ibpp/core/iberror.h	1517;"	d
isc_gbak_err_restore_collation	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_err_restore_collation       = 336330967L;$/;"	v
isc_gbak_err_restore_collation	drivers/Firebird/ibpp/core/iberror.h	1518;"	d
isc_gbak_exp_data_type	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_exp_data_type               = 336330793L;$/;"	v
isc_gbak_exp_data_type	drivers/Firebird/ibpp/core/iberror.h	1495;"	d
isc_gbak_file_outof_sequence	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_file_outof_sequence         = 336331015L;$/;"	v
isc_gbak_file_outof_sequence	drivers/Firebird/ibpp/core/iberror.h	1529;"	d
isc_gbak_filename_missing	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_filename_missing            = 336330762L;$/;"	v
isc_gbak_filename_missing	drivers/Firebird/ibpp/core/iberror.h	1468;"	d
isc_gbak_gen_id_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_gen_id_failed               = 336330794L;$/;"	v
isc_gbak_gen_id_failed	drivers/Firebird/ibpp/core/iberror.h	1496;"	d
isc_gbak_get_seg_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_get_seg_failed              = 336330774L;$/;"	v
isc_gbak_get_seg_failed	drivers/Firebird/ibpp/core/iberror.h	1476;"	d
isc_gbak_hdr_write_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_hdr_write_failed            = 336331021L;$/;"	v
isc_gbak_hdr_write_failed	drivers/Firebird/ibpp/core/iberror.h	1535;"	d
isc_gbak_inv_array_dim	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_inv_array_dim               = 336330804L;$/;"	v
isc_gbak_inv_array_dim	drivers/Firebird/ibpp/core/iberror.h	1506;"	d
isc_gbak_inv_bkup_ver	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_inv_bkup_ver                = 336330796L;$/;"	v
isc_gbak_inv_bkup_ver	drivers/Firebird/ibpp/core/iberror.h	1498;"	d
isc_gbak_inv_block_fac	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_inv_block_fac               = 336330935L;$/;"	v
isc_gbak_inv_block_fac	drivers/Firebird/ibpp/core/iberror.h	1511;"	d
isc_gbak_inv_page_size	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_inv_page_size               = 336330764L;$/;"	v
isc_gbak_inv_page_size	drivers/Firebird/ibpp/core/iberror.h	1470;"	d
isc_gbak_inv_rec_len	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_inv_rec_len                 = 336330792L;$/;"	v
isc_gbak_inv_rec_len	drivers/Firebird/ibpp/core/iberror.h	1494;"	d
isc_gbak_inv_size	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_inv_size                    = 336331014L;$/;"	v
isc_gbak_inv_size	drivers/Firebird/ibpp/core/iberror.h	1528;"	d
isc_gbak_inv_skipped_bytes	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_inv_skipped_bytes           = 336330953L;$/;"	v
isc_gbak_inv_skipped_bytes	drivers/Firebird/ibpp/core/iberror.h	1516;"	d
isc_gbak_join_file_missing	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_join_file_missing           = 336331016L;$/;"	v
isc_gbak_join_file_missing	drivers/Firebird/ibpp/core/iberror.h	1530;"	d
isc_gbak_just_data	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_just_data                   = 336331033L;$/;"	v
isc_gbak_just_data	drivers/Firebird/ibpp/core/iberror.h	1541;"	d
isc_gbak_missing_bkup_desc	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_missing_bkup_desc           = 336330797L;$/;"	v
isc_gbak_missing_bkup_desc	drivers/Firebird/ibpp/core/iberror.h	1499;"	d
isc_gbak_missing_block_fac	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_missing_block_fac           = 336330934L;$/;"	v
isc_gbak_missing_block_fac	drivers/Firebird/ibpp/core/iberror.h	1510;"	d
isc_gbak_missing_password	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_missing_password            = 336330941L;$/;"	v
isc_gbak_missing_password	drivers/Firebird/ibpp/core/iberror.h	1514;"	d
isc_gbak_missing_skipped_bytes	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_missing_skipped_bytes       = 336330952L;$/;"	v
isc_gbak_missing_skipped_bytes	drivers/Firebird/ibpp/core/iberror.h	1515;"	d
isc_gbak_missing_username	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_missing_username            = 336330940L;$/;"	v
isc_gbak_missing_username	drivers/Firebird/ibpp/core/iberror.h	1513;"	d
isc_gbak_mode_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_mode_req                    = 336331031L;$/;"	v
isc_gbak_mode_req	drivers/Firebird/ibpp/core/iberror.h	1540;"	d
isc_gbak_multi_source_dest	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_multi_source_dest           = 336330761L;$/;"	v
isc_gbak_multi_source_dest	drivers/Firebird/ibpp/core/iberror.h	1467;"	d
isc_gbak_no_db_desc	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_no_db_desc                  = 336330784L;$/;"	v
isc_gbak_no_db_desc	drivers/Firebird/ibpp/core/iberror.h	1486;"	d
isc_gbak_no_protection	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_no_protection               = 336330759L;$/;"	v
isc_gbak_no_protection	drivers/Firebird/ibpp/core/iberror.h	1465;"	d
isc_gbak_no_tbl_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_no_tbl_name                 = 336330801L;$/;"	v
isc_gbak_no_tbl_name	drivers/Firebird/ibpp/core/iberror.h	1503;"	d
isc_gbak_not_ownr	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_not_ownr                    = 336331026L;$/;"	v
isc_gbak_not_ownr	drivers/Firebird/ibpp/core/iberror.h	1539;"	d
isc_gbak_open_bkup_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_open_bkup_error             = 336330817L;$/;"	v
isc_gbak_open_bkup_error	drivers/Firebird/ibpp/core/iberror.h	1508;"	d
isc_gbak_open_blob_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_open_blob_failed            = 336330776L;$/;"	v
isc_gbak_open_blob_failed	drivers/Firebird/ibpp/core/iberror.h	1478;"	d
isc_gbak_open_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_open_error                  = 336330818L;$/;"	v
isc_gbak_open_error	drivers/Firebird/ibpp/core/iberror.h	1509;"	d
isc_gbak_page_buffers_missing	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_page_buffers_missing        = 336331010L;$/;"	v
isc_gbak_page_buffers_missing	drivers/Firebird/ibpp/core/iberror.h	1525;"	d
isc_gbak_page_buffers_restore	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_page_buffers_restore        = 336331012L;$/;"	v
isc_gbak_page_buffers_restore	drivers/Firebird/ibpp/core/iberror.h	1527;"	d
isc_gbak_page_buffers_wrong_param	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_page_buffers_wrong_param    = 336331011L;$/;"	v
isc_gbak_page_buffers_wrong_param	drivers/Firebird/ibpp/core/iberror.h	1526;"	d
isc_gbak_page_size_missing	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_page_size_missing           = 336330754L;$/;"	v
isc_gbak_page_size_missing	drivers/Firebird/ibpp/core/iberror.h	1460;"	d
isc_gbak_page_size_not_allowed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_page_size_not_allowed       = 336330760L;$/;"	v
isc_gbak_page_size_not_allowed	drivers/Firebird/ibpp/core/iberror.h	1466;"	d
isc_gbak_page_size_toobig	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_page_size_toobig            = 336330755L;$/;"	v
isc_gbak_page_size_toobig	drivers/Firebird/ibpp/core/iberror.h	1461;"	d
isc_gbak_put_blr_gen_id_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_put_blr_gen_id_failed       = 336330777L;$/;"	v
isc_gbak_put_blr_gen_id_failed	drivers/Firebird/ibpp/core/iberror.h	1479;"	d
isc_gbak_put_seg_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_put_seg_failed              = 336330790L;$/;"	v
isc_gbak_put_seg_failed	drivers/Firebird/ibpp/core/iberror.h	1492;"	d
isc_gbak_read_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_read_error                  = 336330972L;$/;"	v
isc_gbak_read_error	drivers/Firebird/ibpp/core/iberror.h	1519;"	d
isc_gbak_rec_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_rec_failed                  = 336330781L;$/;"	v
isc_gbak_rec_failed	drivers/Firebird/ibpp/core/iberror.h	1483;"	d
isc_gbak_rec_len_exp	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_rec_len_exp                 = 336330791L;$/;"	v
isc_gbak_rec_len_exp	drivers/Firebird/ibpp/core/iberror.h	1493;"	d
isc_gbak_redir_ouput_missing	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_redir_ouput_missing         = 336330756L;$/;"	v
isc_gbak_redir_ouput_missing	drivers/Firebird/ibpp/core/iberror.h	1462;"	d
isc_gbak_rel_req_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_rel_req_failed              = 336330782L;$/;"	v
isc_gbak_rel_req_failed	drivers/Firebird/ibpp/core/iberror.h	1484;"	d
isc_gbak_restore_role_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_restore_role_failed         = 336331002L;$/;"	v
isc_gbak_restore_role_failed	drivers/Firebird/ibpp/core/iberror.h	1523;"	d
isc_gbak_role_op_missing	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_role_op_missing             = 336331005L;$/;"	v
isc_gbak_role_op_missing	drivers/Firebird/ibpp/core/iberror.h	1524;"	d
isc_gbak_send_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_send_failed                 = 336330800L;$/;"	v
isc_gbak_send_failed	drivers/Firebird/ibpp/core/iberror.h	1502;"	d
isc_gbak_size_lt_min	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_size_lt_min                 = 336331023L;$/;"	v
isc_gbak_size_lt_min	drivers/Firebird/ibpp/core/iberror.h	1537;"	d
isc_gbak_start_req_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_start_req_failed            = 336330780L;$/;"	v
isc_gbak_start_req_failed	drivers/Firebird/ibpp/core/iberror.h	1482;"	d
isc_gbak_stdin_not_supptd	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_stdin_not_supptd            = 336331017L;$/;"	v
isc_gbak_stdin_not_supptd	drivers/Firebird/ibpp/core/iberror.h	1531;"	d
isc_gbak_stdout_not_supptd	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_stdout_not_supptd           = 336331018L;$/;"	v
isc_gbak_stdout_not_supptd	drivers/Firebird/ibpp/core/iberror.h	1532;"	d
isc_gbak_string_trunc	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_string_trunc                = 336330798L;$/;"	v
isc_gbak_string_trunc	drivers/Firebird/ibpp/core/iberror.h	1500;"	d
isc_gbak_svc_name_missing	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_svc_name_missing            = 336331025L;$/;"	v
isc_gbak_svc_name_missing	drivers/Firebird/ibpp/core/iberror.h	1538;"	d
isc_gbak_switches_conflict	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_switches_conflict           = 336330757L;$/;"	v
isc_gbak_switches_conflict	drivers/Firebird/ibpp/core/iberror.h	1463;"	d
isc_gbak_sysmemex	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_sysmemex                    = 336330990L;$/;"	v
isc_gbak_sysmemex	drivers/Firebird/ibpp/core/iberror.h	1522;"	d
isc_gbak_tbl_missing	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_tbl_missing                 = 336330787L;$/;"	v
isc_gbak_tbl_missing	drivers/Firebird/ibpp/core/iberror.h	1489;"	d
isc_gbak_unexp_eof	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_unexp_eof                   = 336330802L;$/;"	v
isc_gbak_unexp_eof	drivers/Firebird/ibpp/core/iberror.h	1504;"	d
isc_gbak_unk_blob_item	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_unk_blob_item               = 336330773L;$/;"	v
isc_gbak_unk_blob_item	drivers/Firebird/ibpp/core/iberror.h	1475;"	d
isc_gbak_unk_db_file_spec	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_unk_db_file_spec            = 336331020L;$/;"	v
isc_gbak_unk_db_file_spec	drivers/Firebird/ibpp/core/iberror.h	1534;"	d
isc_gbak_unk_device	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_unk_device                  = 336330767L;$/;"	v
isc_gbak_unk_device	drivers/Firebird/ibpp/core/iberror.h	1473;"	d
isc_gbak_unk_rec_type	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_unk_rec_type                = 336330795L;$/;"	v
isc_gbak_unk_rec_type	drivers/Firebird/ibpp/core/iberror.h	1497;"	d
isc_gbak_unk_type	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_unk_type                    = 336330778L;$/;"	v
isc_gbak_unk_type	drivers/Firebird/ibpp/core/iberror.h	1480;"	d
isc_gbak_unknown_device	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_unknown_device              = 336330758L;$/;"	v
isc_gbak_unknown_device	drivers/Firebird/ibpp/core/iberror.h	1464;"	d
isc_gbak_unknown_switch	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_unknown_switch              = 336330753L;$/;"	v
isc_gbak_unknown_switch	drivers/Firebird/ibpp/core/iberror.h	1459;"	d
isc_gbak_write_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_write_error                 = 336330973L;$/;"	v
isc_gbak_write_error	drivers/Firebird/ibpp/core/iberror.h	1520;"	d
isc_gbak_xdr_len_expected	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gbak_xdr_len_expected            = 336330807L;$/;"	v
isc_gbak_xdr_len_expected	drivers/Firebird/ibpp/core/iberror.h	1507;"	d
isc_generator_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_generator_name                   = 335544815L;$/;"	v
isc_generator_name	drivers/Firebird/ibpp/core/iberror.h	1340;"	d
isc_gennotdef	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gennotdef                        = 335544463L;$/;"	v
isc_gennotdef	drivers/Firebird/ibpp/core/iberror.h	988;"	d
isc_gfix_bad_pool	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_bad_pool                    = 335740994L;$/;"	v
isc_gfix_bad_pool	drivers/Firebird/ibpp/core/iberror.h	1412;"	d
isc_gfix_corrupt_pool	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_corrupt_pool                = 335740992L;$/;"	v
isc_gfix_corrupt_pool	drivers/Firebird/ibpp/core/iberror.h	1410;"	d
isc_gfix_db_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_db_name                     = 335740929L;$/;"	v
isc_gfix_db_name	drivers/Firebird/ibpp/core/iberror.h	1391;"	d
isc_gfix_exceed_max	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_exceed_max                  = 335740991L;$/;"	v
isc_gfix_exceed_max	drivers/Firebird/ibpp/core/iberror.h	1409;"	d
isc_gfix_full_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_full_req                    = 335740940L;$/;"	v
isc_gfix_full_req	drivers/Firebird/ibpp/core/iberror.h	1399;"	d
isc_gfix_incmp_sw	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_incmp_sw                    = 335740932L;$/;"	v
isc_gfix_incmp_sw	drivers/Firebird/ibpp/core/iberror.h	1393;"	d
isc_gfix_invalid_sw	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_invalid_sw                  = 335740930L;$/;"	v
isc_gfix_invalid_sw	drivers/Firebird/ibpp/core/iberror.h	1392;"	d
isc_gfix_mem_exhausted	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_mem_exhausted               = 335740993L;$/;"	v
isc_gfix_mem_exhausted	drivers/Firebird/ibpp/core/iberror.h	1411;"	d
isc_gfix_mode_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_mode_req                    = 335741038L;$/;"	v
isc_gfix_mode_req	drivers/Firebird/ibpp/core/iberror.h	1417;"	d
isc_gfix_nval_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_nval_req                    = 335740946L;$/;"	v
isc_gfix_nval_req	drivers/Firebird/ibpp/core/iberror.h	1405;"	d
isc_gfix_opt_SQL_dialect	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_opt_SQL_dialect             = 335741039L;$/;"	v
isc_gfix_opt_SQL_dialect	drivers/Firebird/ibpp/core/iberror.h	1418;"	d
isc_gfix_pass_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_pass_req                    = 335740942L;$/;"	v
isc_gfix_pass_req	drivers/Firebird/ibpp/core/iberror.h	1401;"	d
isc_gfix_pgbuf_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_pgbuf_req                   = 335740934L;$/;"	v
isc_gfix_pgbuf_req	drivers/Firebird/ibpp/core/iberror.h	1395;"	d
isc_gfix_pval_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_pval_req                    = 335740936L;$/;"	v
isc_gfix_pval_req	drivers/Firebird/ibpp/core/iberror.h	1397;"	d
isc_gfix_pzval_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_pzval_req                   = 335741042L;$/;"	v
isc_gfix_pzval_req	drivers/Firebird/ibpp/core/iberror.h	1419;"	d
isc_gfix_recon_fail	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_recon_fail                  = 335741018L;$/;"	v
isc_gfix_recon_fail	drivers/Firebird/ibpp/core/iberror.h	1415;"	d
isc_gfix_replay_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_replay_req                  = 335740933L;$/;"	v
isc_gfix_replay_req	drivers/Firebird/ibpp/core/iberror.h	1394;"	d
isc_gfix_retry	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_retry                       = 335740948L;$/;"	v
isc_gfix_retry	drivers/Firebird/ibpp/core/iberror.h	1407;"	d
isc_gfix_retry_db	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_retry_db                    = 335740951L;$/;"	v
isc_gfix_retry_db	drivers/Firebird/ibpp/core/iberror.h	1408;"	d
isc_gfix_sec_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_sec_req                     = 335740945L;$/;"	v
isc_gfix_sec_req	drivers/Firebird/ibpp/core/iberror.h	1404;"	d
isc_gfix_subs_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_subs_name                   = 335740943L;$/;"	v
isc_gfix_subs_name	drivers/Firebird/ibpp/core/iberror.h	1402;"	d
isc_gfix_trn_not_valid	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_trn_not_valid               = 335740995L;$/;"	v
isc_gfix_trn_not_valid	drivers/Firebird/ibpp/core/iberror.h	1413;"	d
isc_gfix_trn_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_trn_req                     = 335740937L;$/;"	v
isc_gfix_trn_req	drivers/Firebird/ibpp/core/iberror.h	1398;"	d
isc_gfix_trn_unknown	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_trn_unknown                 = 335741036L;$/;"	v
isc_gfix_trn_unknown	drivers/Firebird/ibpp/core/iberror.h	1416;"	d
isc_gfix_type_shut	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_type_shut                   = 335740947L;$/;"	v
isc_gfix_type_shut	drivers/Firebird/ibpp/core/iberror.h	1406;"	d
isc_gfix_unexp_eoi	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_unexp_eoi                   = 335741012L;$/;"	v
isc_gfix_unexp_eoi	drivers/Firebird/ibpp/core/iberror.h	1414;"	d
isc_gfix_usrname_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_usrname_req                 = 335740941L;$/;"	v
isc_gfix_usrname_req	drivers/Firebird/ibpp/core/iberror.h	1400;"	d
isc_gfix_val_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_val_req                     = 335740935L;$/;"	v
isc_gfix_val_req	drivers/Firebird/ibpp/core/iberror.h	1396;"	d
isc_gfix_wal_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gfix_wal_req                     = 335740944L;$/;"	v
isc_gfix_wal_req	drivers/Firebird/ibpp/core/iberror.h	1403;"	d
isc_grant_fld_notfound	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_grant_fld_notfound               = 335544552L;$/;"	v
isc_grant_fld_notfound	drivers/Firebird/ibpp/core/iberror.h	1077;"	d
isc_grant_nopriv	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_grant_nopriv                     = 335544553L;$/;"	v
isc_grant_nopriv	drivers/Firebird/ibpp/core/iberror.h	1078;"	d
isc_grant_nopriv_on_base	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_grant_nopriv_on_base             = 335544707L;$/;"	v
isc_grant_nopriv_on_base	drivers/Firebird/ibpp/core/iberror.h	1232;"	d
isc_grant_obj_notfound	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_grant_obj_notfound               = 335544551L;$/;"	v
isc_grant_obj_notfound	drivers/Firebird/ibpp/core/iberror.h	1076;"	d
isc_gsec_amb_switch	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_amb_switch                  = 336724009L;$/;"	v
isc_gsec_amb_switch	drivers/Firebird/ibpp/core/iberror.h	1572;"	d
isc_gsec_cant_open_db	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_cant_open_db                = 336723983L;$/;"	v
isc_gsec_cant_open_db	drivers/Firebird/ibpp/core/iberror.h	1550;"	d
isc_gsec_db_admin_pw_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_db_admin_pw_specified       = 336724048L;$/;"	v
isc_gsec_db_admin_pw_specified	drivers/Firebird/ibpp/core/iberror.h	1580;"	d
isc_gsec_db_admin_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_db_admin_specified          = 336724047L;$/;"	v
isc_gsec_db_admin_specified	drivers/Firebird/ibpp/core/iberror.h	1579;"	d
isc_gsec_db_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_db_specified                = 336724046L;$/;"	v
isc_gsec_db_specified	drivers/Firebird/ibpp/core/iberror.h	1578;"	d
isc_gsec_err_add	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_err_add                     = 336723987L;$/;"	v
isc_gsec_err_add	drivers/Firebird/ibpp/core/iberror.h	1554;"	d
isc_gsec_err_delete	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_err_delete                  = 336723991L;$/;"	v
isc_gsec_err_delete	drivers/Firebird/ibpp/core/iberror.h	1558;"	d
isc_gsec_err_find_del	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_err_find_del                = 336723992L;$/;"	v
isc_gsec_err_find_del	drivers/Firebird/ibpp/core/iberror.h	1559;"	d
isc_gsec_err_find_disp	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_err_find_disp               = 336723996L;$/;"	v
isc_gsec_err_find_disp	drivers/Firebird/ibpp/core/iberror.h	1560;"	d
isc_gsec_err_find_mod	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_err_find_mod                = 336723989L;$/;"	v
isc_gsec_err_find_mod	drivers/Firebird/ibpp/core/iberror.h	1556;"	d
isc_gsec_err_modify	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_err_modify                  = 336723988L;$/;"	v
isc_gsec_err_modify	drivers/Firebird/ibpp/core/iberror.h	1555;"	d
isc_gsec_err_rec_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_err_rec_not_found           = 336723990L;$/;"	v
isc_gsec_err_rec_not_found	drivers/Firebird/ibpp/core/iberror.h	1557;"	d
isc_gsec_fname_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_fname_specified             = 336724004L;$/;"	v
isc_gsec_fname_specified	drivers/Firebird/ibpp/core/iberror.h	1568;"	d
isc_gsec_gid_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_gid_specified               = 336724001L;$/;"	v
isc_gsec_gid_specified	drivers/Firebird/ibpp/core/iberror.h	1565;"	d
isc_gsec_incompat_switch	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_incompat_switch             = 336724012L;$/;"	v
isc_gsec_incompat_switch	drivers/Firebird/ibpp/core/iberror.h	1575;"	d
isc_gsec_inv_param	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_inv_param                   = 336723997L;$/;"	v
isc_gsec_inv_param	drivers/Firebird/ibpp/core/iberror.h	1561;"	d
isc_gsec_inv_pw_length	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_inv_pw_length               = 336724045L;$/;"	v
isc_gsec_inv_pw_length	drivers/Firebird/ibpp/core/iberror.h	1577;"	d
isc_gsec_inv_switch	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_inv_switch                  = 336724008L;$/;"	v
isc_gsec_inv_switch	drivers/Firebird/ibpp/core/iberror.h	1571;"	d
isc_gsec_inv_username	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_inv_username                = 336724044L;$/;"	v
isc_gsec_inv_username	drivers/Firebird/ibpp/core/iberror.h	1576;"	d
isc_gsec_lname_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_lname_specified             = 336724006L;$/;"	v
isc_gsec_lname_specified	drivers/Firebird/ibpp/core/iberror.h	1570;"	d
isc_gsec_mname_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_mname_specified             = 336724005L;$/;"	v
isc_gsec_mname_specified	drivers/Firebird/ibpp/core/iberror.h	1569;"	d
isc_gsec_no_op_spec	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_no_op_spec                  = 336723985L;$/;"	v
isc_gsec_no_op_spec	drivers/Firebird/ibpp/core/iberror.h	1552;"	d
isc_gsec_no_op_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_no_op_specified             = 336724010L;$/;"	v
isc_gsec_no_op_specified	drivers/Firebird/ibpp/core/iberror.h	1573;"	d
isc_gsec_no_usr_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_no_usr_name                 = 336723986L;$/;"	v
isc_gsec_no_usr_name	drivers/Firebird/ibpp/core/iberror.h	1553;"	d
isc_gsec_op_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_op_specified                = 336723998L;$/;"	v
isc_gsec_op_specified	drivers/Firebird/ibpp/core/iberror.h	1562;"	d
isc_gsec_org_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_org_specified               = 336724003L;$/;"	v
isc_gsec_org_specified	drivers/Firebird/ibpp/core/iberror.h	1567;"	d
isc_gsec_params_not_allowed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_params_not_allowed          = 336724011L;$/;"	v
isc_gsec_params_not_allowed	drivers/Firebird/ibpp/core/iberror.h	1574;"	d
isc_gsec_proj_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_proj_specified              = 336724002L;$/;"	v
isc_gsec_proj_specified	drivers/Firebird/ibpp/core/iberror.h	1566;"	d
isc_gsec_pw_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_pw_specified                = 336723999L;$/;"	v
isc_gsec_pw_specified	drivers/Firebird/ibpp/core/iberror.h	1563;"	d
isc_gsec_sql_role_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_sql_role_specified          = 336724049L;$/;"	v
isc_gsec_sql_role_specified	drivers/Firebird/ibpp/core/iberror.h	1581;"	d
isc_gsec_switches_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_switches_error              = 336723984L;$/;"	v
isc_gsec_switches_error	drivers/Firebird/ibpp/core/iberror.h	1551;"	d
isc_gsec_uid_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gsec_uid_specified               = 336724000L;$/;"	v
isc_gsec_uid_specified	drivers/Firebird/ibpp/core/iberror.h	1564;"	d
isc_gstat_open_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gstat_open_err                   = 336920605L;$/;"	v
isc_gstat_open_err	drivers/Firebird/ibpp/core/iberror.h	1606;"	d
isc_gstat_read_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gstat_read_err                   = 336920606L;$/;"	v
isc_gstat_read_err	drivers/Firebird/ibpp/core/iberror.h	1607;"	d
isc_gstat_retry	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gstat_retry                      = 336920578L;$/;"	v
isc_gstat_retry	drivers/Firebird/ibpp/core/iberror.h	1603;"	d
isc_gstat_sysmemex	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gstat_sysmemex                   = 336920607L;$/;"	v
isc_gstat_sysmemex	drivers/Firebird/ibpp/core/iberror.h	1608;"	d
isc_gstat_unexpected_eof	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gstat_unexpected_eof             = 336920580L;$/;"	v
isc_gstat_unexpected_eof	drivers/Firebird/ibpp/core/iberror.h	1605;"	d
isc_gstat_unknown_switch	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gstat_unknown_switch             = 336920577L;$/;"	v
isc_gstat_unknown_switch	drivers/Firebird/ibpp/core/iberror.h	1602;"	d
isc_gstat_wrong_ods	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_gstat_wrong_ods                  = 336920579L;$/;"	v
isc_gstat_wrong_ods	drivers/Firebird/ibpp/core/iberror.h	1604;"	d
isc_high_minor	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_high_minor                       = 335544467L;$/;"	v
isc_high_minor	drivers/Firebird/ibpp/core/iberror.h	992;"	d
isc_host_unknown	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_host_unknown                     = 335544706L;$/;"	v
isc_host_unknown	drivers/Firebird/ibpp/core/iberror.h	1231;"	d
isc_ib_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ib_error                         = 335544689L;$/;"	v
isc_ib_error	drivers/Firebird/ibpp/core/iberror.h	1214;"	d
isc_identifier_too_long	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_identifier_too_long              = 335544847L;$/;"	v
isc_identifier_too_long	drivers/Firebird/ibpp/core/iberror.h	1372;"	d
isc_idx_create_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_idx_create_err                   = 335544628L;$/;"	v
isc_idx_create_err	drivers/Firebird/ibpp/core/iberror.h	1153;"	d
isc_idx_key_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_idx_key_err                      = 335544631L;$/;"	v
isc_idx_key_err	drivers/Firebird/ibpp/core/iberror.h	1156;"	d
isc_idx_seg_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_idx_seg_err                      = 335544624L;$/;"	v
isc_idx_seg_err	drivers/Firebird/ibpp/core/iberror.h	1149;"	d
isc_imp_exc	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_imp_exc                          = 335544381L;$/;"	v
isc_imp_exc	drivers/Firebird/ibpp/core/iberror.h	906;"	d
isc_index_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_index_name                       = 335544609L;$/;"	v
isc_index_name	drivers/Firebird/ibpp/core/iberror.h	1134;"	d
isc_index_root_page_full	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_index_root_page_full             = 335544661L;$/;"	v
isc_index_root_page_full	drivers/Firebird/ibpp/core/iberror.h	1186;"	d
isc_index_unused	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_index_unused                     = 335544642L;$/;"	v
isc_index_unused	drivers/Firebird/ibpp/core/iberror.h	1167;"	d
isc_indexname	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_indexname                        = 335544636L;$/;"	v
isc_indexname	drivers/Firebird/ibpp/core/iberror.h	1161;"	d
isc_indexnotdefined	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_indexnotdefined                  = 335544471L;$/;"	v
isc_indexnotdefined	drivers/Firebird/ibpp/core/iberror.h	996;"	d
isc_infinap	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_infinap                          = 335544339L;$/;"	v
isc_infinap	drivers/Firebird/ibpp/core/iberror.h	864;"	d
isc_info_access_path	drivers/Firebird/ibpp/core/ibase.h	1966;"	d
isc_info_active_tran_count	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_active_tran_count = 110,$/;"	e	enum:db_info_types
isc_info_active_transactions	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_active_transactions = 109,$/;"	e	enum:db_info_types
isc_info_allocation	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_allocation             = 21,$/;"	e	enum:db_info_types
isc_info_attachment_id	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_attachment_id   = 22,$/;"	e	enum:db_info_types
isc_info_backout_count	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_backout_count          = 28,$/;"	e	enum:db_info_types
isc_info_base_level	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_base_level             = 13,$/;"	e	enum:db_info_types
isc_info_blob_max_segment	drivers/Firebird/ibpp/core/ibase.h	2014;"	d
isc_info_blob_num_segments	drivers/Firebird/ibpp/core/ibase.h	2013;"	d
isc_info_blob_total_length	drivers/Firebird/ibpp/core/ibase.h	2015;"	d
isc_info_blob_type	drivers/Firebird/ibpp/core/ibase.h	2016;"	d
isc_info_bpage_errors	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_bpage_errors = 56,$/;"	e	enum:db_info_types
isc_info_creation_date	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_creation_date = 111,$/;"	e	enum:db_info_types
isc_info_cur_log_part_offset	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_cur_log_part_offset    = 37,$/;"	e	enum:db_info_types
isc_info_cur_logfile_name	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_cur_logfile_name       = 36,$/;"	e	enum:db_info_types
isc_info_current_memory	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_current_memory = 17,$/;"	e	enum:db_info_types
isc_info_data_not_ready	drivers/Firebird/ibpp/core/ibase.h	1774;"	d
isc_info_db_SQL_dialect	drivers/Firebird/ibpp/core/ibase.h	2706;"	d
isc_info_db_class	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class = 102,$/;"	e	enum:db_info_types
isc_info_db_class_access	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_access = 1,$/;"	e	enum:info_db_class
isc_info_db_class_cache	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_cache = 12,$/;"	e	enum:info_db_class
isc_info_db_class_classic_access	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_classic_access = 13,$/;"	e	enum:info_db_class
isc_info_db_class_gateway	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_gateway = 11,$/;"	e	enum:info_db_class
isc_info_db_class_last_value	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_last_value   $/;"	e	enum:info_db_class
isc_info_db_class_pipe_int	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_pipe_int = 7,$/;"	e	enum:info_db_class
isc_info_db_class_pipe_srvr	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_pipe_srvr = 8,$/;"	e	enum:info_db_class
isc_info_db_class_rem_int	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_rem_int = 3,$/;"	e	enum:info_db_class
isc_info_db_class_rem_srvr	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_rem_srvr = 4,$/;"	e	enum:info_db_class
isc_info_db_class_sam_int	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_sam_int = 9,$/;"	e	enum:info_db_class
isc_info_db_class_sam_srvr	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_sam_srvr = 10,$/;"	e	enum:info_db_class
isc_info_db_class_server_access	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_server_access = 14,$/;"	e	enum:info_db_class
isc_info_db_class_y_valve	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_class_y_valve = 2,$/;"	e	enum:info_db_class
isc_info_db_code_firebird	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_code_firebird = 4,$/;"	e	enum:info_db_provider
isc_info_db_code_interbase	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_code_interbase = 3,$/;"	e	enum:info_db_provider
isc_info_db_code_last_value	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_code_last_value   $/;"	e	enum:info_db_provider
isc_info_db_code_rdb_eln	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_code_rdb_eln = 1,$/;"	e	enum:info_db_provider
isc_info_db_code_rdb_vms	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_code_rdb_vms = 2,$/;"	e	enum:info_db_provider
isc_info_db_id	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_id                  = 4,$/;"	e	enum:db_info_types
isc_info_db_impl_alpha_osf	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_alpha_osf = 52,$/;"	e	enum:info_db_implementations
isc_info_db_impl_alpha_vms	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_alpha_vms = 53,$/;"	e	enum:info_db_implementations
isc_info_db_impl_darwin	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_darwin = 63,$/;"	e	enum:info_db_implementations
isc_info_db_impl_dg_x86	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_dg_x86 = 58,$/;"	e	enum:info_db_implementations
isc_info_db_impl_freebsd	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_freebsd = 61,$/;"	e	enum:info_db_implementations
isc_info_db_impl_freebsd_amd64	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_freebsd_amd64 = 67,$/;"	e	enum:info_db_implementations
isc_info_db_impl_i386	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_i386 = 60,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_a	drivers/Firebird/ibpp/core/ibase.h	1925;"	d
isc_info_db_impl_isc_apl_68K	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_apl_68K = 25,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_cray	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_cray = 43,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_delta	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_delta = 45,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_dg	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_dg = 38,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_dos	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_dos = 47,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_epson	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_epson = 51,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_hp_mpexl	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_hp_mpexl = 39,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_hp_ux	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_hp_ux = 31,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_hp_ux68K	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_hp_ux68K = 40,       $/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_imp	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_imp = 44,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_mac_aux	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_mac_aux = 34,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_mips_ult	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_mips_ult = 36,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_next	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_next = 46,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_os2	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_os2 = 29,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_rt_aix	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_rt_aix = 35,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_s	drivers/Firebird/ibpp/core/ibase.h	1928;"	d
isc_info_db_impl_isc_sco_unix	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_sco_unix = 42,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_sgi	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_sgi = 41,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_sun4	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_sun4 = 30,    $/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_sun_386i	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_sun_386i = 32,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_sun_68k	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_sun_68k = 28,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_u	drivers/Firebird/ibpp/core/ibase.h	1926;"	d
isc_info_db_impl_isc_v	drivers/Firebird/ibpp/core/ibase.h	1927;"	d
isc_info_db_impl_isc_vax_ultr	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_vax_ultr = 26,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_vms	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_vms = 27,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_vms_orcl	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_vms_orcl = 33,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_winnt_x86	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_winnt_x86 = 50,$/;"	e	enum:info_db_implementations
isc_info_db_impl_isc_xenix	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_isc_xenix = 37,$/;"	e	enum:info_db_implementations
isc_info_db_impl_jri	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_jri = 6,$/;"	e	enum:info_db_implementations
isc_info_db_impl_jsv	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_jsv = 7,$/;"	e	enum:info_db_implementations
isc_info_db_impl_last_value	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_last_value   $/;"	e	enum:info_db_implementations
isc_info_db_impl_linux_amd64	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_linux_amd64 = 66,$/;"	e	enum:info_db_implementations
isc_info_db_impl_linux_sparc	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_linux_sparc = 65,$/;"	e	enum:info_db_implementations
isc_info_db_impl_m88K	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_m88K = 48,$/;"	e	enum:info_db_implementations
isc_info_db_impl_ncr_3000	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_ncr_3000 = 56,$/;"	e	enum:info_db_implementations
isc_info_db_impl_netbsd	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_netbsd = 62,$/;"	e	enum:info_db_implementations
isc_info_db_impl_netware_386	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_netware_386 = 54, $/;"	e	enum:info_db_implementations
isc_info_db_impl_rdb_eln	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_rdb_eln = 2,$/;"	e	enum:info_db_implementations
isc_info_db_impl_rdb_eln_dev	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_rdb_eln_dev = 3,$/;"	e	enum:info_db_implementations
isc_info_db_impl_rdb_eln_y	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_rdb_eln_y = 5,$/;"	e	enum:info_db_implementations
isc_info_db_impl_rdb_vms	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_rdb_vms = 1,$/;"	e	enum:info_db_implementations
isc_info_db_impl_rdb_vms_y	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_rdb_vms_y = 4,$/;"	e	enum:info_db_implementations
isc_info_db_impl_sco_ev	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_sco_ev = 59,$/;"	e	enum:info_db_implementations
isc_info_db_impl_sinixz	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_sinixz = 64,$/;"	e	enum:info_db_implementations
isc_info_db_impl_unixware	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_unixware = 49,$/;"	e	enum:info_db_implementations
isc_info_db_impl_win_only	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_win_only = 55,$/;"	e	enum:info_db_implementations
isc_info_db_impl_winnt_ppc	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_impl_winnt_ppc = 57,$/;"	e	enum:info_db_implementations
isc_info_db_last_value	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_last_value   $/;"	e	enum:db_info_types
isc_info_db_provider	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_provider = 108,$/;"	e	enum:db_info_types
isc_info_db_read_only	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_read_only = 63,$/;"	e	enum:db_info_types
isc_info_db_size_in_pages	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_size_in_pages = 64,$/;"	e	enum:db_info_types
isc_info_db_sql_dialect	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_db_sql_dialect = 62,   $/;"	e	enum:db_info_types
isc_info_delete_count	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_delete_count           = 27,$/;"	e	enum:db_info_types
isc_info_dpage_errors	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_dpage_errors = 57,$/;"	e	enum:db_info_types
isc_info_end	drivers/Firebird/ibpp/core/ibase.h	1771;"	d
isc_info_error	drivers/Firebird/ibpp/core/ibase.h	1773;"	d
isc_info_expunge_count	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_expunge_count          = 30,$/;"	e	enum:db_info_types
isc_info_fetches	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_fetches                = 7,$/;"	e	enum:db_info_types
isc_info_firebird_version	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_firebird_version = 103,$/;"	e	enum:db_info_types
isc_info_flag_end	drivers/Firebird/ibpp/core/ibase.h	1775;"	d
isc_info_forced_writes	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_forced_writes          = 52,$/;"	e	enum:db_info_types
isc_info_implementation	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_implementation = 11,$/;"	e	enum:db_info_types
isc_info_insert_count	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_insert_count           = 25,$/;"	e	enum:db_info_types
isc_info_ipage_errors	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_ipage_errors = 58,$/;"	e	enum:db_info_types
isc_info_isc_version	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_isc_version            = 12,$/;"	e	enum:db_info_types
isc_info_license	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_license                = 20,$/;"	e	enum:db_info_types
isc_info_limbo	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_limbo                  = 16,$/;"	e	enum:db_info_types
isc_info_logfile	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_logfile                = 35,$/;"	e	enum:db_info_types
isc_info_marks	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_marks                  = 8,$/;"	e	enum:db_info_types
isc_info_max_memory	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_max_memory             = 18,$/;"	e	enum:db_info_types
isc_info_max_message	drivers/Firebird/ibpp/core/ibase.h	1959;"	d
isc_info_max_receive	drivers/Firebird/ibpp/core/ibase.h	1961;"	d
isc_info_max_send	drivers/Firebird/ibpp/core/ibase.h	1960;"	d
isc_info_message_number	drivers/Firebird/ibpp/core/ibase.h	1963;"	d
isc_info_message_size	drivers/Firebird/ibpp/core/ibase.h	1964;"	d
isc_info_next_transaction	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_next_transaction = 107,$/;"	e	enum:db_info_types
isc_info_no_reserve	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_no_reserve             = 34,$/;"	e	enum:db_info_types
isc_info_num_buffers	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_num_buffers    = 15,$/;"	e	enum:db_info_types
isc_info_num_wal_buffers	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_num_wal_buffers        = 38,$/;"	e	enum:db_info_types
isc_info_number_messages	drivers/Firebird/ibpp/core/ibase.h	1958;"	d
isc_info_ods_minor_version	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_ods_minor_version      = 33,$/;"	e	enum:db_info_types
isc_info_ods_version	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_ods_version            = 32,$/;"	e	enum:db_info_types
isc_info_oldest_active	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_oldest_active = 105,$/;"	e	enum:db_info_types
isc_info_oldest_snapshot	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_oldest_snapshot = 106,$/;"	e	enum:db_info_types
isc_info_oldest_transaction	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_oldest_transaction = 104,$/;"	e	enum:db_info_types
isc_info_page_errors	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_page_errors = 54,$/;"	e	enum:db_info_types
isc_info_page_size	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_page_size              = 14,$/;"	e	enum:db_info_types
isc_info_ppage_errors	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_ppage_errors = 59,$/;"	e	enum:db_info_types
isc_info_purge_count	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_purge_count            = 29,$/;"	e	enum:db_info_types
isc_info_read_idx_count	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_read_idx_count = 24,$/;"	e	enum:db_info_types
isc_info_read_seq_count	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_read_seq_count = 23,$/;"	e	enum:db_info_types
isc_info_reads	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_reads                  = 5,$/;"	e	enum:db_info_types
isc_info_record_errors	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_record_errors = 55,$/;"	e	enum:db_info_types
isc_info_req_active	drivers/Firebird/ibpp/core/ibase.h	2006;"	d
isc_info_req_delete_count	drivers/Firebird/ibpp/core/ibase.h	1970;"	d
isc_info_req_inactive	drivers/Firebird/ibpp/core/ibase.h	2007;"	d
isc_info_req_insert_count	drivers/Firebird/ibpp/core/ibase.h	1968;"	d
isc_info_req_receive	drivers/Firebird/ibpp/core/ibase.h	2009;"	d
isc_info_req_select	drivers/Firebird/ibpp/core/ibase.h	2010;"	d
isc_info_req_select_count	drivers/Firebird/ibpp/core/ibase.h	1967;"	d
isc_info_req_send	drivers/Firebird/ibpp/core/ibase.h	2008;"	d
isc_info_req_sql_stall	drivers/Firebird/ibpp/core/ibase.h	2011;"	d
isc_info_req_update_count	drivers/Firebird/ibpp/core/ibase.h	1969;"	d
isc_info_request_cost	drivers/Firebird/ibpp/core/ibase.h	1965;"	d
isc_info_rsb_aggregate	drivers/Firebird/ibpp/core/ibase.h	1987;"	d
isc_info_rsb_and	drivers/Firebird/ibpp/core/ibase.h	2001;"	d
isc_info_rsb_begin	drivers/Firebird/ibpp/core/ibase.h	1973;"	d
isc_info_rsb_boolean	drivers/Firebird/ibpp/core/ibase.h	1985;"	d
isc_info_rsb_cross	drivers/Firebird/ibpp/core/ibase.h	1982;"	d
isc_info_rsb_dbkey	drivers/Firebird/ibpp/core/ibase.h	2003;"	d
isc_info_rsb_end	drivers/Firebird/ibpp/core/ibase.h	1972;"	d
isc_info_rsb_ext_dbkey	drivers/Firebird/ibpp/core/ibase.h	1991;"	d
isc_info_rsb_ext_indexed	drivers/Firebird/ibpp/core/ibase.h	1990;"	d
isc_info_rsb_ext_sequential	drivers/Firebird/ibpp/core/ibase.h	1989;"	d
isc_info_rsb_first	drivers/Firebird/ibpp/core/ibase.h	1984;"	d
isc_info_rsb_index	drivers/Firebird/ibpp/core/ibase.h	2004;"	d
isc_info_rsb_indexed	drivers/Firebird/ibpp/core/ibase.h	1979;"	d
isc_info_rsb_left_cross	drivers/Firebird/ibpp/core/ibase.h	1992;"	d
isc_info_rsb_merge	drivers/Firebird/ibpp/core/ibase.h	1988;"	d
isc_info_rsb_navigate	drivers/Firebird/ibpp/core/ibase.h	1980;"	d
isc_info_rsb_once	drivers/Firebird/ibpp/core/ibase.h	1997;"	d
isc_info_rsb_or	drivers/Firebird/ibpp/core/ibase.h	2002;"	d
isc_info_rsb_plan	drivers/Firebird/ibpp/core/ibase.h	1976;"	d
isc_info_rsb_procedure	drivers/Firebird/ibpp/core/ibase.h	1998;"	d
isc_info_rsb_relation	drivers/Firebird/ibpp/core/ibase.h	1975;"	d
isc_info_rsb_select	drivers/Firebird/ibpp/core/ibase.h	1993;"	d
isc_info_rsb_sequential	drivers/Firebird/ibpp/core/ibase.h	1981;"	d
isc_info_rsb_sim_cross	drivers/Firebird/ibpp/core/ibase.h	1996;"	d
isc_info_rsb_simulate	drivers/Firebird/ibpp/core/ibase.h	1995;"	d
isc_info_rsb_skip	drivers/Firebird/ibpp/core/ibase.h	1999;"	d
isc_info_rsb_sort	drivers/Firebird/ibpp/core/ibase.h	1983;"	d
isc_info_rsb_sql_join	drivers/Firebird/ibpp/core/ibase.h	1994;"	d
isc_info_rsb_type	drivers/Firebird/ibpp/core/ibase.h	1974;"	d
isc_info_rsb_union	drivers/Firebird/ibpp/core/ibase.h	1986;"	d
isc_info_rsb_unknown	drivers/Firebird/ibpp/core/ibase.h	1978;"	d
isc_info_set_page_buffers	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_set_page_buffers = 61,$/;"	e	enum:db_info_types
isc_info_sql_alias	drivers/Firebird/ibpp/core/ibase.h	2051;"	d
isc_info_sql_batch_fetch	drivers/Firebird/ibpp/core/ibase.h	2056;"	d
isc_info_sql_bind	drivers/Firebird/ibpp/core/ibase.h	2037;"	d
isc_info_sql_describe_end	drivers/Firebird/ibpp/core/ibase.h	2040;"	d
isc_info_sql_describe_vars	drivers/Firebird/ibpp/core/ibase.h	2039;"	d
isc_info_sql_field	drivers/Firebird/ibpp/core/ibase.h	2048;"	d
isc_info_sql_get_plan	drivers/Firebird/ibpp/core/ibase.h	2054;"	d
isc_info_sql_length	drivers/Firebird/ibpp/core/ibase.h	2046;"	d
isc_info_sql_message_seq	drivers/Firebird/ibpp/core/ibase.h	2042;"	d
isc_info_sql_null_ind	drivers/Firebird/ibpp/core/ibase.h	2047;"	d
isc_info_sql_num_variables	drivers/Firebird/ibpp/core/ibase.h	2038;"	d
isc_info_sql_owner	drivers/Firebird/ibpp/core/ibase.h	2050;"	d
isc_info_sql_records	drivers/Firebird/ibpp/core/ibase.h	2055;"	d
isc_info_sql_relation	drivers/Firebird/ibpp/core/ibase.h	2049;"	d
isc_info_sql_relation_alias	drivers/Firebird/ibpp/core/ibase.h	2057;"	d
isc_info_sql_scale	drivers/Firebird/ibpp/core/ibase.h	2045;"	d
isc_info_sql_select	drivers/Firebird/ibpp/core/ibase.h	2036;"	d
isc_info_sql_sqlda_seq	drivers/Firebird/ibpp/core/ibase.h	2041;"	d
isc_info_sql_sqlda_start	drivers/Firebird/ibpp/core/ibase.h	2052;"	d
isc_info_sql_stmt_commit	drivers/Firebird/ibpp/core/ibase.h	2068;"	d
isc_info_sql_stmt_ddl	drivers/Firebird/ibpp/core/ibase.h	2063;"	d
isc_info_sql_stmt_delete	drivers/Firebird/ibpp/core/ibase.h	2062;"	d
isc_info_sql_stmt_exec_procedure	drivers/Firebird/ibpp/core/ibase.h	2066;"	d
isc_info_sql_stmt_get_segment	drivers/Firebird/ibpp/core/ibase.h	2064;"	d
isc_info_sql_stmt_insert	drivers/Firebird/ibpp/core/ibase.h	2060;"	d
isc_info_sql_stmt_put_segment	drivers/Firebird/ibpp/core/ibase.h	2065;"	d
isc_info_sql_stmt_rollback	drivers/Firebird/ibpp/core/ibase.h	2069;"	d
isc_info_sql_stmt_savepoint	drivers/Firebird/ibpp/core/ibase.h	2072;"	d
isc_info_sql_stmt_select	drivers/Firebird/ibpp/core/ibase.h	2059;"	d
isc_info_sql_stmt_select_for_upd	drivers/Firebird/ibpp/core/ibase.h	2070;"	d
isc_info_sql_stmt_set_generator	drivers/Firebird/ibpp/core/ibase.h	2071;"	d
isc_info_sql_stmt_start_trans	drivers/Firebird/ibpp/core/ibase.h	2067;"	d
isc_info_sql_stmt_type	drivers/Firebird/ibpp/core/ibase.h	2053;"	d
isc_info_sql_stmt_update	drivers/Firebird/ibpp/core/ibase.h	2061;"	d
isc_info_sql_sub_type	drivers/Firebird/ibpp/core/ibase.h	2044;"	d
isc_info_sql_type	drivers/Firebird/ibpp/core/ibase.h	2043;"	d
isc_info_state	drivers/Firebird/ibpp/core/ibase.h	1962;"	d
isc_info_svc_capabilities	drivers/Firebird/ibpp/core/ibase.h	2106;"	d
isc_info_svc_get_config	drivers/Firebird/ibpp/core/ibase.h	2102;"	d
isc_info_svc_get_env	drivers/Firebird/ibpp/core/ibase.h	2108;"	d
isc_info_svc_get_env_lock	drivers/Firebird/ibpp/core/ibase.h	2109;"	d
isc_info_svc_get_env_msg	drivers/Firebird/ibpp/core/ibase.h	2110;"	d
isc_info_svc_get_license	drivers/Firebird/ibpp/core/ibase.h	2100;"	d
isc_info_svc_get_license_mask	drivers/Firebird/ibpp/core/ibase.h	2101;"	d
isc_info_svc_get_licensed_users	drivers/Firebird/ibpp/core/ibase.h	2114;"	d
isc_info_svc_get_users	drivers/Firebird/ibpp/core/ibase.h	2117;"	d
isc_info_svc_implementation	drivers/Firebird/ibpp/core/ibase.h	2105;"	d
isc_info_svc_limbo_trans	drivers/Firebird/ibpp/core/ibase.h	2115;"	d
isc_info_svc_line	drivers/Firebird/ibpp/core/ibase.h	2111;"	d
isc_info_svc_running	drivers/Firebird/ibpp/core/ibase.h	2116;"	d
isc_info_svc_server_version	drivers/Firebird/ibpp/core/ibase.h	2104;"	d
isc_info_svc_svr_db_info	drivers/Firebird/ibpp/core/ibase.h	2099;"	d
isc_info_svc_timeout	drivers/Firebird/ibpp/core/ibase.h	2113;"	d
isc_info_svc_to_eof	drivers/Firebird/ibpp/core/ibase.h	2112;"	d
isc_info_svc_user_dbpath	drivers/Firebird/ibpp/core/ibase.h	2107;"	d
isc_info_svc_version	drivers/Firebird/ibpp/core/ibase.h	2103;"	d
isc_info_sweep_interval	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_sweep_interval = 31,$/;"	e	enum:db_info_types
isc_info_tpage_errors	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_tpage_errors = 60,$/;"	e	enum:db_info_types
isc_info_tra_access	drivers/Firebird/ibpp/core/ibase.h	2023;"	d
isc_info_tra_concurrency	drivers/Firebird/ibpp/core/ibase.h	2027;"	d
isc_info_tra_consistency	drivers/Firebird/ibpp/core/ibase.h	2026;"	d
isc_info_tra_id	drivers/Firebird/ibpp/core/ibase.h	2018;"	d
isc_info_tra_isolation	drivers/Firebird/ibpp/core/ibase.h	2022;"	d
isc_info_tra_lock_timeout	drivers/Firebird/ibpp/core/ibase.h	2024;"	d
isc_info_tra_no_rec_version	drivers/Firebird/ibpp/core/ibase.h	2030;"	d
isc_info_tra_oldest_active	drivers/Firebird/ibpp/core/ibase.h	2021;"	d
isc_info_tra_oldest_interesting	drivers/Firebird/ibpp/core/ibase.h	2019;"	d
isc_info_tra_oldest_snapshot	drivers/Firebird/ibpp/core/ibase.h	2020;"	d
isc_info_tra_read_committed	drivers/Firebird/ibpp/core/ibase.h	2028;"	d
isc_info_tra_readonly	drivers/Firebird/ibpp/core/ibase.h	2033;"	d
isc_info_tra_readwrite	drivers/Firebird/ibpp/core/ibase.h	2034;"	d
isc_info_tra_rec_version	drivers/Firebird/ibpp/core/ibase.h	2031;"	d
isc_info_truncated	drivers/Firebird/ibpp/core/ibase.h	1772;"	d
isc_info_update_count	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_update_count           = 26,$/;"	e	enum:db_info_types
isc_info_user_names	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_user_names = 53,$/;"	e	enum:db_info_types
isc_info_version	drivers/Firebird/ibpp/core/ibase.h	1860;"	d
isc_info_wal_avg_grpc_size	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_wal_avg_grpc_size      = 51,$/;"	e	enum:db_info_types
isc_info_wal_avg_io_size	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_wal_avg_io_size        = 49,$/;"	e	enum:db_info_types
isc_info_wal_buffer_size	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_wal_buffer_size        = 39,$/;"	e	enum:db_info_types
isc_info_wal_ckpt_length	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_wal_ckpt_length        = 40,$/;"	e	enum:db_info_types
isc_info_wal_cur_ckpt_interval	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_wal_cur_ckpt_interval = 41,$/;"	e	enum:db_info_types
isc_info_wal_grpc_wait_usecs	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_wal_grpc_wait_usecs    = 47,$/;"	e	enum:db_info_types
isc_info_wal_num_commits	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_wal_num_commits        = 50,$/;"	e	enum:db_info_types
isc_info_wal_num_io	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_wal_num_io             = 48,$/;"	e	enum:db_info_types
isc_info_wal_prv_ckpt_fname	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_wal_prv_ckpt_fname     = 42,$/;"	e	enum:db_info_types
isc_info_wal_prv_ckpt_poffset	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_wal_prv_ckpt_poffset   = 43,$/;"	e	enum:db_info_types
isc_info_wal_recv_ckpt_fname	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_wal_recv_ckpt_fname    = 44,$/;"	e	enum:db_info_types
isc_info_wal_recv_ckpt_poffset	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_wal_recv_ckpt_poffset = 45,$/;"	e	enum:db_info_types
isc_info_window_turns	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_window_turns   = 19,$/;"	e	enum:db_info_types
isc_info_writes	drivers/Firebird/ibpp/core/ibase.h	/^        isc_info_writes             = 6,$/;"	e	enum:db_info_types
isc_infona	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_infona                           = 335544340L;$/;"	v
isc_infona	drivers/Firebird/ibpp/core/iberror.h	865;"	d
isc_infunk	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_infunk                           = 335544341L;$/;"	v
isc_infunk	drivers/Firebird/ibpp/core/iberror.h	866;"	d
isc_insufficient_svc_privileges	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_insufficient_svc_privileges      = 335544790L;$/;"	v
isc_insufficient_svc_privileges	drivers/Firebird/ibpp/core/iberror.h	1315;"	d
isc_integ_deactivate_primary	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_integ_deactivate_primary         = 335544729L;$/;"	v
isc_integ_deactivate_primary	drivers/Firebird/ibpp/core/iberror.h	1254;"	d
isc_integ_fail	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_integ_fail                       = 335544342L;$/;"	v
isc_integ_fail	drivers/Firebird/ibpp/core/iberror.h	867;"	d
isc_integ_index_deactivate	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_integ_index_deactivate           = 335544728L;$/;"	v
isc_integ_index_deactivate	drivers/Firebird/ibpp/core/iberror.h	1253;"	d
isc_integ_index_del	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_integ_index_del                  = 335544539L;$/;"	v
isc_integ_index_del	drivers/Firebird/ibpp/core/iberror.h	1064;"	d
isc_integ_index_mod	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_integ_index_mod                  = 335544540L;$/;"	v
isc_integ_index_mod	drivers/Firebird/ibpp/core/iberror.h	1065;"	d
isc_integ_index_seg_del	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_integ_index_seg_del              = 335544537L;$/;"	v
isc_integ_index_seg_del	drivers/Firebird/ibpp/core/iberror.h	1062;"	d
isc_integ_index_seg_mod	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_integ_index_seg_mod              = 335544538L;$/;"	v
isc_integ_index_seg_mod	drivers/Firebird/ibpp/core/iberror.h	1063;"	d
isc_interp_eng_ascii	drivers/Firebird/ibpp/core/ibase.h	2672;"	d
isc_interp_jpn_euc	drivers/Firebird/ibpp/core/ibase.h	2674;"	d
isc_interp_jpn_sjis	drivers/Firebird/ibpp/core/ibase.h	2673;"	d
isc_inv_client_dialect_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_inv_client_dialect_specified     = 335544811L;$/;"	v
isc_inv_client_dialect_specified	drivers/Firebird/ibpp/core/iberror.h	1336;"	d
isc_inv_dialect_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_inv_dialect_specified            = 335544805L;$/;"	v
isc_inv_dialect_specified	drivers/Firebird/ibpp/core/iberror.h	1330;"	d
isc_inval_key_posn	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_inval_key_posn                   = 335544678L;$/;"	v
isc_inval_key_posn	drivers/Firebird/ibpp/core/iberror.h	1203;"	d
isc_invalid_array_id	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_array_id                 = 335544714L;$/;"	v
isc_invalid_array_id	drivers/Firebird/ibpp/core/iberror.h	1239;"	d
isc_invalid_blr	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_blr                      = 335544343L;$/;"	v
isc_invalid_blr	drivers/Firebird/ibpp/core/iberror.h	868;"	d
isc_invalid_bookmark	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_bookmark                 = 335544473L;$/;"	v
isc_invalid_bookmark	drivers/Firebird/ibpp/core/iberror.h	998;"	d
isc_invalid_clause	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_clause                   = 335544760L;$/;"	v
isc_invalid_clause	drivers/Firebird/ibpp/core/iberror.h	1285;"	d
isc_invalid_dimension	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_dimension                = 335544458L;$/;"	v
isc_invalid_dimension	drivers/Firebird/ibpp/core/iberror.h	983;"	d
isc_invalid_direction	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_direction                = 335544655L;$/;"	v
isc_invalid_direction	drivers/Firebird/ibpp/core/iberror.h	1180;"	d
isc_invalid_key	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_key                      = 335544718L;$/;"	v
isc_invalid_key	drivers/Firebird/ibpp/core/iberror.h	1243;"	d
isc_invalid_operator	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_operator                 = 335544647L;$/;"	v
isc_invalid_operator	drivers/Firebird/ibpp/core/iberror.h	1172;"	d
isc_invalid_savepoint	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_savepoint                = 335544820L;$/;"	v
isc_invalid_savepoint	drivers/Firebird/ibpp/core/iberror.h	1345;"	d
isc_invalid_sdl	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_sdl                      = 335544456L;$/;"	v
isc_invalid_sdl	drivers/Firebird/ibpp/core/iberror.h	981;"	d
isc_invalid_sec_info	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_sec_info                 = 335544449L;$/;"	v
isc_invalid_sec_info	drivers/Firebird/ibpp/core/iberror.h	974;"	d
isc_invalid_string_constant	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_string_constant          = 335544763L;$/;"	v
isc_invalid_string_constant	drivers/Firebird/ibpp/core/iberror.h	1288;"	d
isc_invalid_time_precision	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invalid_time_precision           = 335544859L;$/;"	v
isc_invalid_time_precision	drivers/Firebird/ibpp/core/iberror.h	1384;"	d
isc_invld_cnstrnt_type	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invld_cnstrnt_type               = 335544547L;$/;"	v
isc_invld_cnstrnt_type	drivers/Firebird/ibpp/core/iberror.h	1072;"	d
isc_invpoolcl	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_invpoolcl                        = 335544385L;$/;"	v
isc_invpoolcl	drivers/Firebird/ibpp/core/iberror.h	910;"	d
isc_io_32bit_exceeded_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_io_32bit_exceeded_err            = 335544819L;$/;"	v
isc_io_32bit_exceeded_err	drivers/Firebird/ibpp/core/iberror.h	1344;"	d
isc_io_access_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_io_access_err                    = 335544739L;$/;"	v
isc_io_access_err	drivers/Firebird/ibpp/core/iberror.h	1264;"	d
isc_io_close_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_io_close_err                     = 335544735L;$/;"	v
isc_io_close_err	drivers/Firebird/ibpp/core/iberror.h	1260;"	d
isc_io_create_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_io_create_err                    = 335544733L;$/;"	v
isc_io_create_err	drivers/Firebird/ibpp/core/iberror.h	1258;"	d
isc_io_delete_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_io_delete_err                    = 335544738L;$/;"	v
isc_io_delete_err	drivers/Firebird/ibpp/core/iberror.h	1263;"	d
isc_io_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_io_error                         = 335544344L;$/;"	v
isc_io_error	drivers/Firebird/ibpp/core/iberror.h	869;"	d
isc_io_open_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_io_open_err                      = 335544734L;$/;"	v
isc_io_open_err	drivers/Firebird/ibpp/core/iberror.h	1259;"	d
isc_io_read_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_io_read_err                      = 335544736L;$/;"	v
isc_io_read_err	drivers/Firebird/ibpp/core/iberror.h	1261;"	d
isc_io_write_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_io_write_err                     = 335544737L;$/;"	v
isc_io_write_err	drivers/Firebird/ibpp/core/iberror.h	1262;"	d
isc_isc_sql_dialect_conflict_num	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_isc_sql_dialect_conflict_num     = 336003079L;$/;"	v
isc_isc_sql_dialect_conflict_num	drivers/Firebird/ibpp/core/iberror.h	1424;"	d
isc_journerr	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_journerr                         = 335544433L;$/;"	v
isc_journerr	drivers/Firebird/ibpp/core/iberror.h	958;"	d
isc_jrn_enable	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_jrn_enable                       = 335544478L;$/;"	v
isc_jrn_enable	drivers/Firebird/ibpp/core/iberror.h	1003;"	d
isc_jrn_file_full	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_jrn_file_full                    = 335544687L;$/;"	v
isc_jrn_file_full	drivers/Firebird/ibpp/core/iberror.h	1212;"	d
isc_jrn_format_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_jrn_format_err                   = 335544686L;$/;"	v
isc_jrn_format_err	drivers/Firebird/ibpp/core/iberror.h	1211;"	d
isc_jrn_present	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_jrn_present                      = 335544520L;$/;"	v
isc_jrn_present	drivers/Firebird/ibpp/core/iberror.h	1045;"	d
isc_key_field_count_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_key_field_count_err              = 335544604L;$/;"	v
isc_key_field_count_err	drivers/Firebird/ibpp/core/iberror.h	1129;"	d
isc_key_field_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_key_field_err                    = 335544672L;$/;"	v
isc_key_field_err	drivers/Firebird/ibpp/core/iberror.h	1197;"	d
isc_keytoobig	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_keytoobig                        = 335544434L;$/;"	v
isc_keytoobig	drivers/Firebird/ibpp/core/iberror.h	959;"	d
isc_license_amb_switch	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_amb_switch               = 336789528L;$/;"	v
isc_license_amb_switch	drivers/Firebird/ibpp/core/iberror.h	1588;"	d
isc_license_dup_id	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_dup_id                   = 336789534L;$/;"	v
isc_license_dup_id	drivers/Firebird/ibpp/core/iberror.h	1593;"	d
isc_license_err_convert	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_err_convert              = 336789538L;$/;"	v
isc_license_err_convert	drivers/Firebird/ibpp/core/iberror.h	1597;"	d
isc_license_err_remove	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_err_remove               = 336789536L;$/;"	v
isc_license_err_remove	drivers/Firebird/ibpp/core/iberror.h	1595;"	d
isc_license_err_unk	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_err_unk                  = 336789539L;$/;"	v
isc_license_err_unk	drivers/Firebird/ibpp/core/iberror.h	1598;"	d
isc_license_err_update	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_err_update               = 336789537L;$/;"	v
isc_license_err_update	drivers/Firebird/ibpp/core/iberror.h	1596;"	d
isc_license_eval_exists	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_eval_exists              = 336789563L;$/;"	v
isc_license_eval_exists	drivers/Firebird/ibpp/core/iberror.h	1601;"	d
isc_license_inv_id_key	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_inv_id_key               = 336789535L;$/;"	v
isc_license_inv_id_key	drivers/Firebird/ibpp/core/iberror.h	1594;"	d
isc_license_inv_op_combo	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_inv_op_combo             = 336789527L;$/;"	v
isc_license_inv_op_combo	drivers/Firebird/ibpp/core/iberror.h	1587;"	d
isc_license_inv_parameter	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_inv_parameter            = 336789529L;$/;"	v
isc_license_inv_parameter	drivers/Firebird/ibpp/core/iberror.h	1589;"	d
isc_license_inv_switch	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_inv_switch               = 336789525L;$/;"	v
isc_license_inv_switch	drivers/Firebird/ibpp/core/iberror.h	1585;"	d
isc_license_inv_switch_combo	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_inv_switch_combo         = 336789526L;$/;"	v
isc_license_inv_switch_combo	drivers/Firebird/ibpp/core/iberror.h	1586;"	d
isc_license_no_file	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_no_file                  = 336789504L;$/;"	v
isc_license_no_file	drivers/Firebird/ibpp/core/iberror.h	1582;"	d
isc_license_op_missing	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_op_missing               = 336789524L;$/;"	v
isc_license_op_missing	drivers/Firebird/ibpp/core/iberror.h	1584;"	d
isc_license_op_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_op_specified             = 336789523L;$/;"	v
isc_license_op_specified	drivers/Firebird/ibpp/core/iberror.h	1583;"	d
isc_license_param_req	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_param_req                = 336789531L;$/;"	v
isc_license_param_req	drivers/Firebird/ibpp/core/iberror.h	1591;"	d
isc_license_param_specified	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_param_specified          = 336789530L;$/;"	v
isc_license_param_specified	drivers/Firebird/ibpp/core/iberror.h	1590;"	d
isc_license_svc_err_add	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_svc_err_add              = 336789540L;$/;"	v
isc_license_svc_err_add	drivers/Firebird/ibpp/core/iberror.h	1599;"	d
isc_license_svc_err_remove	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_svc_err_remove           = 336789541L;$/;"	v
isc_license_svc_err_remove	drivers/Firebird/ibpp/core/iberror.h	1600;"	d
isc_license_syntx_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_license_syntx_error              = 336789532L;$/;"	v
isc_license_syntx_error	drivers/Firebird/ibpp/core/iberror.h	1592;"	d
isc_like_escape_invalid	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_like_escape_invalid              = 335544702L;$/;"	v
isc_like_escape_invalid	drivers/Firebird/ibpp/core/iberror.h	1227;"	d
isc_loadlib_failure	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_loadlib_failure                  = 335544720L;$/;"	v
isc_loadlib_failure	drivers/Firebird/ibpp/core/iberror.h	1245;"	d
isc_lock_conflict	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_lock_conflict                    = 335544345L;$/;"	v
isc_lock_conflict	drivers/Firebird/ibpp/core/iberror.h	870;"	d
isc_lock_timeout	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_lock_timeout                     = 335544510L;$/;"	v
isc_lock_timeout	drivers/Firebird/ibpp/core/iberror.h	1035;"	d
isc_lockmanerr	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_lockmanerr                       = 335544432L;$/;"	v
isc_lockmanerr	drivers/Firebird/ibpp/core/iberror.h	957;"	d
isc_locnotmar	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_locnotmar                        = 335544402L;$/;"	v
isc_locnotmar	drivers/Firebird/ibpp/core/iberror.h	927;"	d
isc_log_length_spec	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_log_length_spec                  = 335544696L;$/;"	v
isc_log_length_spec	drivers/Firebird/ibpp/core/iberror.h	1221;"	d
isc_log_redef	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_log_redef                        = 335544692L;$/;"	v
isc_log_redef	drivers/Firebird/ibpp/core/iberror.h	1217;"	d
isc_log_too_small	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_log_too_small                    = 335544693L;$/;"	v
isc_log_too_small	drivers/Firebird/ibpp/core/iberror.h	1218;"	d
isc_logb_small	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_logb_small                       = 335544496L;$/;"	v
isc_logb_small	drivers/Firebird/ibpp/core/iberror.h	1021;"	d
isc_logf_unexpected_eof	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_logf_unexpected_eof              = 335544493L;$/;"	v
isc_logf_unexpected_eof	drivers/Firebird/ibpp/core/iberror.h	1018;"	d
isc_logh_diff_dbname	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_logh_diff_dbname                 = 335544492L;$/;"	v
isc_logh_diff_dbname	drivers/Firebird/ibpp/core/iberror.h	1017;"	d
isc_logh_inv_version	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_logh_inv_version                 = 335544489L;$/;"	v
isc_logh_inv_version	drivers/Firebird/ibpp/core/iberror.h	1014;"	d
isc_logh_open_flag	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_logh_open_flag                   = 335544490L;$/;"	v
isc_logh_open_flag	drivers/Firebird/ibpp/core/iberror.h	1015;"	d
isc_logh_open_flag2	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_logh_open_flag2                  = 335544491L;$/;"	v
isc_logh_open_flag2	drivers/Firebird/ibpp/core/iberror.h	1016;"	d
isc_logh_small	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_logh_small                       = 335544488L;$/;"	v
isc_logh_small	drivers/Firebird/ibpp/core/iberror.h	1013;"	d
isc_login	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_login                            = 335544472L;$/;"	v
isc_login	drivers/Firebird/ibpp/core/iberror.h	997;"	d
isc_login_same_as_role_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_login_same_as_role_name          = 335544745L;$/;"	v
isc_login_same_as_role_name	drivers/Firebird/ibpp/core/iberror.h	1270;"	d
isc_logr_header_small	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_logr_header_small                = 335544495L;$/;"	v
isc_logr_header_small	drivers/Firebird/ibpp/core/iberror.h	1020;"	d
isc_logr_incomplete	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_logr_incomplete                  = 335544494L;$/;"	v
isc_logr_incomplete	drivers/Firebird/ibpp/core/iberror.h	1019;"	d
isc_lost_db_connection	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_lost_db_connection               = 335544741L;$/;"	v
isc_lost_db_connection	drivers/Firebird/ibpp/core/iberror.h	1266;"	d
isc_malformed_string	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_malformed_string                 = 335544849L;$/;"	v
isc_malformed_string	drivers/Firebird/ibpp/core/iberror.h	1374;"	d
isc_max_att_exceeded	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_max_att_exceeded                 = 335544744L;$/;"	v
isc_max_att_exceeded	drivers/Firebird/ibpp/core/iberror.h	1269;"	d
isc_max_idx	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_max_idx                          = 335544477L;$/;"	v
isc_max_idx	drivers/Firebird/ibpp/core/iberror.h	1002;"	d
isc_metadata_corrupt	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_metadata_corrupt                 = 335544346L;$/;"	v
isc_metadata_corrupt	drivers/Firebird/ibpp/core/iberror.h	871;"	d
isc_misc_interpreted	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_misc_interpreted                 = 335544450L;$/;"	v
isc_misc_interpreted	drivers/Firebird/ibpp/core/iberror.h	975;"	d
isc_must_be_dialect_2_and_up	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_must_be_dialect_2_and_up         = 335544766L;$/;"	v
isc_must_be_dialect_2_and_up	drivers/Firebird/ibpp/core/iberror.h	1291;"	d
isc_must_have_phys_field	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_must_have_phys_field             = 335544858L;$/;"	v
isc_must_have_phys_field	drivers/Firebird/ibpp/core/iberror.h	1383;"	d
isc_net_connect_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_net_connect_err                  = 335544722L;$/;"	v
isc_net_connect_err	drivers/Firebird/ibpp/core/iberror.h	1247;"	d
isc_net_connect_listen_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_net_connect_listen_err           = 335544723L;$/;"	v
isc_net_connect_listen_err	drivers/Firebird/ibpp/core/iberror.h	1248;"	d
isc_net_event_connect_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_net_event_connect_err            = 335544724L;$/;"	v
isc_net_event_connect_err	drivers/Firebird/ibpp/core/iberror.h	1249;"	d
isc_net_event_listen_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_net_event_listen_err             = 335544725L;$/;"	v
isc_net_event_listen_err	drivers/Firebird/ibpp/core/iberror.h	1250;"	d
isc_net_init_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_net_init_error                   = 335544719L;$/;"	v
isc_net_init_error	drivers/Firebird/ibpp/core/iberror.h	1244;"	d
isc_net_lookup_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_net_lookup_err                   = 335544704L;$/;"	v
isc_net_lookup_err	drivers/Firebird/ibpp/core/iberror.h	1229;"	d
isc_net_read_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_net_read_err                     = 335544726L;$/;"	v
isc_net_read_err	drivers/Firebird/ibpp/core/iberror.h	1251;"	d
isc_net_write_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_net_write_err                    = 335544727L;$/;"	v
isc_net_write_err	drivers/Firebird/ibpp/core/iberror.h	1252;"	d
isc_network_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_network_error                    = 335544721L;$/;"	v
isc_network_error	drivers/Firebird/ibpp/core/iberror.h	1246;"	d
isc_no_archive	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_archive                       = 335544505L;$/;"	v
isc_no_archive	drivers/Firebird/ibpp/core/iberror.h	1030;"	d
isc_no_cur_rec	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_cur_rec                       = 335544348L;$/;"	v
isc_no_cur_rec	drivers/Firebird/ibpp/core/iberror.h	873;"	d
isc_no_dbkey	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_dbkey                         = 335544685L;$/;"	v
isc_no_dbkey	drivers/Firebird/ibpp/core/iberror.h	1210;"	d
isc_no_delete	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_delete                        = 335544673L;$/;"	v
isc_no_delete	drivers/Firebird/ibpp/core/iberror.h	1198;"	d
isc_no_dup	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_dup                           = 335544349L;$/;"	v
isc_no_dup	drivers/Firebird/ibpp/core/iberror.h	874;"	d
isc_no_field_access	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_field_access                  = 335544684L;$/;"	v
isc_no_field_access	drivers/Firebird/ibpp/core/iberror.h	1209;"	d
isc_no_finish	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_finish                        = 335544350L;$/;"	v
isc_no_finish	drivers/Firebird/ibpp/core/iberror.h	875;"	d
isc_no_jrn	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_jrn                           = 335544564L;$/;"	v
isc_no_jrn	drivers/Firebird/ibpp/core/iberror.h	1089;"	d
isc_no_lock_mgr	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_lock_mgr                      = 335544424L;$/;"	v
isc_no_lock_mgr	drivers/Firebird/ibpp/core/iberror.h	949;"	d
isc_no_meta_update	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_meta_update                   = 335544351L;$/;"	v
isc_no_meta_update	drivers/Firebird/ibpp/core/iberror.h	876;"	d
isc_no_priv	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_priv                          = 335544352L;$/;"	v
isc_no_priv	drivers/Firebird/ibpp/core/iberror.h	877;"	d
isc_no_recon	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_recon                         = 335544353L;$/;"	v
isc_no_recon	drivers/Firebird/ibpp/core/iberror.h	878;"	d
isc_no_record	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_record                        = 335544354L;$/;"	v
isc_no_record	drivers/Firebird/ibpp/core/iberror.h	879;"	d
isc_no_rollback	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_rollback                      = 335544447L;$/;"	v
isc_no_rollback	drivers/Firebird/ibpp/core/iberror.h	972;"	d
isc_no_segments_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_segments_err                  = 335544679L;$/;"	v
isc_no_segments_err	drivers/Firebird/ibpp/core/iberror.h	1204;"	d
isc_no_segstr_close	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_segstr_close                  = 335544355L;$/;"	v
isc_no_segstr_close	drivers/Firebird/ibpp/core/iberror.h	880;"	d
isc_no_stream_plan	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_stream_plan                   = 335544637L;$/;"	v
isc_no_stream_plan	drivers/Firebird/ibpp/core/iberror.h	1162;"	d
isc_no_update	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_update                        = 335544840L;$/;"	v
isc_no_update	drivers/Firebird/ibpp/core/iberror.h	1365;"	d
isc_no_wal	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_wal                           = 335544500L;$/;"	v
isc_no_wal	drivers/Firebird/ibpp/core/iberror.h	1025;"	d
isc_no_wal_no_jrn	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_wal_no_jrn                    = 335544482L;$/;"	v
isc_no_wal_no_jrn	drivers/Firebird/ibpp/core/iberror.h	1007;"	d
isc_no_write_user_priv	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_no_write_user_priv               = 335544742L;$/;"	v
isc_no_write_user_priv	drivers/Firebird/ibpp/core/iberror.h	1267;"	d
isc_noargacc_read	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_noargacc_read                    = 335544442L;$/;"	v
isc_noargacc_read	drivers/Firebird/ibpp/core/iberror.h	967;"	d
isc_noargacc_write	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_noargacc_write                   = 335544443L;$/;"	v
isc_noargacc_write	drivers/Firebird/ibpp/core/iberror.h	968;"	d
isc_node_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_node_err                         = 335544607L;$/;"	v
isc_node_err	drivers/Firebird/ibpp/core/iberror.h	1132;"	d
isc_node_name_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_node_name_err                    = 335544625L;$/;"	v
isc_node_name_err	drivers/Firebird/ibpp/core/iberror.h	1150;"	d
isc_nodetach	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_nodetach                         = 335544416L;$/;"	v
isc_nodetach	drivers/Firebird/ibpp/core/iberror.h	941;"	d
isc_nodnotfnd	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_nodnotfnd                        = 335544400L;$/;"	v
isc_nodnotfnd	drivers/Firebird/ibpp/core/iberror.h	925;"	d
isc_nofilter	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_nofilter                         = 335544454L;$/;"	v
isc_nofilter	drivers/Firebird/ibpp/core/iberror.h	979;"	d
isc_non_updatable	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_non_updatable                    = 335544446L;$/;"	v
isc_non_updatable	drivers/Firebird/ibpp/core/iberror.h	971;"	d
isc_nonsql_security_fld	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_nonsql_security_fld              = 335544555L;$/;"	v
isc_nonsql_security_fld	drivers/Firebird/ibpp/core/iberror.h	1080;"	d
isc_nonsql_security_rel	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_nonsql_security_rel              = 335544554L;$/;"	v
isc_nonsql_security_rel	drivers/Firebird/ibpp/core/iberror.h	1079;"	d
isc_nopoolids	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_nopoolids                        = 335544386L;$/;"	v
isc_nopoolids	drivers/Firebird/ibpp/core/iberror.h	911;"	d
isc_not_rel_owner	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_not_rel_owner                    = 335544550L;$/;"	v
isc_not_rel_owner	drivers/Firebird/ibpp/core/iberror.h	1075;"	d
isc_not_valid	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_not_valid                        = 335544347L;$/;"	v
isc_not_valid	drivers/Firebird/ibpp/core/iberror.h	872;"	d
isc_notinlim	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_notinlim                         = 335544419L;$/;"	v
isc_notinlim	drivers/Firebird/ibpp/core/iberror.h	944;"	d
isc_notremote	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_notremote                        = 335544417L;$/;"	v
isc_notremote	drivers/Firebird/ibpp/core/iberror.h	942;"	d
isc_nullsegkey	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_nullsegkey                       = 335544435L;$/;"	v
isc_nullsegkey	drivers/Firebird/ibpp/core/iberror.h	960;"	d
isc_num_field_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_num_field_err                    = 335544599L;$/;"	v
isc_num_field_err	drivers/Firebird/ibpp/core/iberror.h	1124;"	d
isc_num_old_files	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_num_old_files                    = 335544483L;$/;"	v
isc_num_old_files	drivers/Firebird/ibpp/core/iberror.h	1008;"	d
isc_obj_in_use	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_obj_in_use                       = 335544453L;$/;"	v
isc_obj_in_use	drivers/Firebird/ibpp/core/iberror.h	978;"	d
isc_obsolete_metadata	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_obsolete_metadata                = 335544356L;$/;"	v
isc_obsolete_metadata	drivers/Firebird/ibpp/core/iberror.h	881;"	d
isc_old_failure	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_old_failure                      = 335544479L;$/;"	v
isc_old_failure	drivers/Firebird/ibpp/core/iberror.h	1004;"	d
isc_old_in_progress	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_old_in_progress                  = 335544480L;$/;"	v
isc_old_in_progress	drivers/Firebird/ibpp/core/iberror.h	1005;"	d
isc_old_no_space	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_old_no_space                     = 335544481L;$/;"	v
isc_old_no_space	drivers/Firebird/ibpp/core/iberror.h	1006;"	d
isc_open_trans	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_open_trans                       = 335544357L;$/;"	v
isc_open_trans	drivers/Firebird/ibpp/core/iberror.h	882;"	d
isc_optimizer_between_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_optimizer_between_err            = 335544813L;$/;"	v
isc_optimizer_between_err	drivers/Firebird/ibpp/core/iberror.h	1338;"	d
isc_optimizer_blk_exc	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_optimizer_blk_exc                = 335544762L;$/;"	v
isc_optimizer_blk_exc	drivers/Firebird/ibpp/core/iberror.h	1287;"	d
isc_order_by_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_order_by_err                     = 335544617L;$/;"	v
isc_order_by_err	drivers/Firebird/ibpp/core/iberror.h	1142;"	d
isc_orphan	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_orphan                           = 335544423L;$/;"	v
isc_orphan	drivers/Firebird/ibpp/core/iberror.h	948;"	d
isc_out_of_bounds	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_out_of_bounds                    = 335544457L;$/;"	v
isc_out_of_bounds	drivers/Firebird/ibpp/core/iberror.h	982;"	d
isc_page_type_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_page_type_err                    = 335544650L;$/;"	v
isc_page_type_err	drivers/Firebird/ibpp/core/iberror.h	1175;"	d
isc_partition_not_supp	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_partition_not_supp               = 335544695L;$/;"	v
isc_partition_not_supp	drivers/Firebird/ibpp/core/iberror.h	1220;"	d
isc_partition_too_small	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_partition_too_small              = 335544694L;$/;"	v
isc_partition_too_small	drivers/Firebird/ibpp/core/iberror.h	1219;"	d
isc_partner_idx_incompat_type	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_partner_idx_incompat_type        = 335544852L;$/;"	v
isc_partner_idx_incompat_type	drivers/Firebird/ibpp/core/iberror.h	1377;"	d
isc_partner_idx_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_partner_idx_not_found            = 335544863L;$/;"	v
isc_partner_idx_not_found	drivers/Firebird/ibpp/core/iberror.h	1388;"	d
isc_password_required	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_password_required                = 335544750L;$/;"	v
isc_password_required	drivers/Firebird/ibpp/core/iberror.h	1275;"	d
isc_password_too_long	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_password_too_long                = 335544748L;$/;"	v
isc_password_too_long	drivers/Firebird/ibpp/core/iberror.h	1273;"	d
isc_port_len	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_port_len                         = 335544358L;$/;"	v
isc_port_len	drivers/Firebird/ibpp/core/iberror.h	883;"	d
isc_prc_out_param_mismatch	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_prc_out_param_mismatch           = 335544850L;$/;"	v
isc_prc_out_param_mismatch	drivers/Firebird/ibpp/core/iberror.h	1375;"	d
isc_prcmismat	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_prcmismat                        = 335544512L;$/;"	v
isc_prcmismat	drivers/Firebird/ibpp/core/iberror.h	1037;"	d
isc_prcnotdef	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_prcnotdef                        = 335544511L;$/;"	v
isc_prcnotdef	drivers/Firebird/ibpp/core/iberror.h	1036;"	d
isc_precision_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_precision_err                    = 335544697L;$/;"	v
isc_precision_err	drivers/Firebird/ibpp/core/iberror.h	1222;"	d
isc_primary_key_exists	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_primary_key_exists               = 335544548L;$/;"	v
isc_primary_key_exists	drivers/Firebird/ibpp/core/iberror.h	1073;"	d
isc_primary_key_notnull	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_primary_key_notnull              = 335544531L;$/;"	v
isc_primary_key_notnull	drivers/Firebird/ibpp/core/iberror.h	1056;"	d
isc_primary_key_ref	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_primary_key_ref                  = 335544530L;$/;"	v
isc_primary_key_ref	drivers/Firebird/ibpp/core/iberror.h	1055;"	d
isc_proc_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_proc_name                        = 335544627L;$/;"	v
isc_proc_name	drivers/Firebird/ibpp/core/iberror.h	1152;"	d
isc_procedure_conflict_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_procedure_conflict_error         = 335544621L;$/;"	v
isc_procedure_conflict_error	drivers/Firebird/ibpp/core/iberror.h	1146;"	d
isc_psw_attach	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_psw_attach                       = 335544653L;$/;"	v
isc_psw_attach	drivers/Firebird/ibpp/core/iberror.h	1178;"	d
isc_psw_start_trans	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_psw_start_trans                  = 335544654L;$/;"	v
isc_psw_start_trans	drivers/Firebird/ibpp/core/iberror.h	1179;"	d
isc_quad_high	drivers/Firebird/ibpp/core/ibase.h	123;"	d
isc_quad_low	drivers/Firebird/ibpp/core/ibase.h	124;"	d
isc_random	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_random                           = 335544382L;$/;"	v
isc_random	drivers/Firebird/ibpp/core/iberror.h	907;"	d
isc_range_in_use	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_range_in_use                     = 335544507L;$/;"	v
isc_range_in_use	drivers/Firebird/ibpp/core/iberror.h	1032;"	d
isc_range_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_range_not_found                  = 335544508L;$/;"	v
isc_range_not_found	drivers/Firebird/ibpp/core/iberror.h	1033;"	d
isc_read_only	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_read_only                        = 335544444L;$/;"	v
isc_read_only	drivers/Firebird/ibpp/core/iberror.h	969;"	d
isc_read_only_database	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_read_only_database               = 335544765L;$/;"	v
isc_read_only_database	drivers/Firebird/ibpp/core/iberror.h	1290;"	d
isc_read_only_field	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_read_only_field                  = 335544359L;$/;"	v
isc_read_only_field	drivers/Firebird/ibpp/core/iberror.h	884;"	d
isc_read_only_rel	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_read_only_rel                    = 335544360L;$/;"	v
isc_read_only_rel	drivers/Firebird/ibpp/core/iberror.h	885;"	d
isc_read_only_trans	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_read_only_trans                  = 335544361L;$/;"	v
isc_read_only_trans	drivers/Firebird/ibpp/core/iberror.h	886;"	d
isc_read_only_view	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_read_only_view                   = 335544362L;$/;"	v
isc_read_only_view	drivers/Firebird/ibpp/core/iberror.h	887;"	d
isc_rec_in_limbo	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_rec_in_limbo                     = 335544459L;$/;"	v
isc_rec_in_limbo	drivers/Firebird/ibpp/core/iberror.h	984;"	d
isc_rec_size_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_rec_size_err                     = 335544681L;$/;"	v
isc_rec_size_err	drivers/Firebird/ibpp/core/iberror.h	1206;"	d
isc_record_lock	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_record_lock                      = 335544476L;$/;"	v
isc_record_lock	drivers/Firebird/ibpp/core/iberror.h	1001;"	d
isc_record_lock_not_supp	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_record_lock_not_supp             = 335544862L;$/;"	v
isc_record_lock_not_supp	drivers/Firebird/ibpp/core/iberror.h	1387;"	d
isc_ref_cnstrnt_notfound	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ref_cnstrnt_notfound             = 335544532L;$/;"	v
isc_ref_cnstrnt_notfound	drivers/Firebird/ibpp/core/iberror.h	1057;"	d
isc_ref_cnstrnt_update	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_ref_cnstrnt_update               = 335544534L;$/;"	v
isc_ref_cnstrnt_update	drivers/Firebird/ibpp/core/iberror.h	1059;"	d
isc_reftable_requires_pk	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_reftable_requires_pk             = 335544746L;$/;"	v
isc_reftable_requires_pk	drivers/Firebird/ibpp/core/iberror.h	1271;"	d
isc_rel_cnstrnt_update	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_rel_cnstrnt_update               = 335544545L;$/;"	v
isc_rel_cnstrnt_update	drivers/Firebird/ibpp/core/iberror.h	1070;"	d
isc_relation_conflict_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_relation_conflict_err            = 335544622L;$/;"	v
isc_relation_conflict_err	drivers/Firebird/ibpp/core/iberror.h	1147;"	d
isc_relation_lock	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_relation_lock                    = 335544475L;$/;"	v
isc_relation_lock	drivers/Firebird/ibpp/core/iberror.h	1000;"	d
isc_relbadblk	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_relbadblk                        = 335544387L;$/;"	v
isc_relbadblk	drivers/Firebird/ibpp/core/iberror.h	912;"	d
isc_relnotdef	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_relnotdef                        = 335544395L;$/;"	v
isc_relnotdef	drivers/Firebird/ibpp/core/iberror.h	920;"	d
isc_req_depth_exceeded	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_req_depth_exceeded               = 335544683L;$/;"	v
isc_req_depth_exceeded	drivers/Firebird/ibpp/core/iberror.h	1208;"	d
isc_req_handle	drivers/Firebird/ibpp/core/ibase.h	/^typedef FB_API_HANDLE isc_req_handle;$/;"	t
isc_req_max_clones_exceeded	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_req_max_clones_exceeded          = 335544663L;$/;"	v
isc_req_max_clones_exceeded	drivers/Firebird/ibpp/core/iberror.h	1188;"	d
isc_req_no_trans	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_req_no_trans                     = 335544363L;$/;"	v
isc_req_no_trans	drivers/Firebird/ibpp/core/iberror.h	888;"	d
isc_req_sync	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_req_sync                         = 335544364L;$/;"	v
isc_req_sync	drivers/Firebird/ibpp/core/iberror.h	889;"	d
isc_req_wrong_db	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_req_wrong_db                     = 335544365L;$/;"	v
isc_req_wrong_db	drivers/Firebird/ibpp/core/iberror.h	890;"	d
isc_reqinuse	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_reqinuse                         = 335544393L;$/;"	v
isc_reqinuse	drivers/Firebird/ibpp/core/iberror.h	918;"	d
isc_resv_handle	drivers/Firebird/ibpp/core/ibase.h	/^typedef ISC_LONG isc_resv_handle;$/;"	t
isc_return_mode_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_return_mode_err                  = 335544618L;$/;"	v
isc_return_mode_err	drivers/Firebird/ibpp/core/iberror.h	1143;"	d
isc_scale_nogt	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_scale_nogt                       = 335544698L;$/;"	v
isc_scale_nogt	drivers/Firebird/ibpp/core/iberror.h	1223;"	d
isc_sdl_add	drivers/Firebird/ibpp/core/ibase.h	2643;"	d
isc_sdl_and	drivers/Firebird/ibpp/core/ibase.h	2654;"	d
isc_sdl_assignment	drivers/Firebird/ibpp/core/ibase.h	2658;"	d
isc_sdl_begin	drivers/Firebird/ibpp/core/ibase.h	2661;"	d
isc_sdl_divide	drivers/Firebird/ibpp/core/ibase.h	2646;"	d
isc_sdl_do1	drivers/Firebird/ibpp/core/ibase.h	2665;"	d
isc_sdl_do2	drivers/Firebird/ibpp/core/ibase.h	2664;"	d
isc_sdl_do3	drivers/Firebird/ibpp/core/ibase.h	2663;"	d
isc_sdl_element	drivers/Firebird/ibpp/core/ibase.h	2666;"	d
isc_sdl_end	drivers/Firebird/ibpp/core/ibase.h	2662;"	d
isc_sdl_eoc	drivers/Firebird/ibpp/core/ibase.h	2631;"	d
isc_sdl_eql	drivers/Firebird/ibpp/core/ibase.h	2648;"	d
isc_sdl_fid	drivers/Firebird/ibpp/core/ibase.h	2635;"	d
isc_sdl_field	drivers/Firebird/ibpp/core/ibase.h	2634;"	d
isc_sdl_geq	drivers/Firebird/ibpp/core/ibase.h	2651;"	d
isc_sdl_gtr	drivers/Firebird/ibpp/core/ibase.h	2650;"	d
isc_sdl_label	drivers/Firebird/ibpp/core/ibase.h	2659;"	d
isc_sdl_leave	drivers/Firebird/ibpp/core/ibase.h	2660;"	d
isc_sdl_leq	drivers/Firebird/ibpp/core/ibase.h	2653;"	d
isc_sdl_literal	drivers/Firebird/ibpp/core/ibase.h	2642;"	d
isc_sdl_long_integer	drivers/Firebird/ibpp/core/ibase.h	2641;"	d
isc_sdl_lss	drivers/Firebird/ibpp/core/ibase.h	2652;"	d
isc_sdl_multiply	drivers/Firebird/ibpp/core/ibase.h	2645;"	d
isc_sdl_negate	drivers/Firebird/ibpp/core/ibase.h	2647;"	d
isc_sdl_neq	drivers/Firebird/ibpp/core/ibase.h	2649;"	d
isc_sdl_not	drivers/Firebird/ibpp/core/ibase.h	2656;"	d
isc_sdl_or	drivers/Firebird/ibpp/core/ibase.h	2655;"	d
isc_sdl_relation	drivers/Firebird/ibpp/core/ibase.h	2632;"	d
isc_sdl_rid	drivers/Firebird/ibpp/core/ibase.h	2633;"	d
isc_sdl_scalar	drivers/Firebird/ibpp/core/ibase.h	2638;"	d
isc_sdl_short_integer	drivers/Firebird/ibpp/core/ibase.h	2640;"	d
isc_sdl_struct	drivers/Firebird/ibpp/core/ibase.h	2636;"	d
isc_sdl_subtract	drivers/Firebird/ibpp/core/ibase.h	2644;"	d
isc_sdl_tiny_integer	drivers/Firebird/ibpp/core/ibase.h	2639;"	d
isc_sdl_variable	drivers/Firebird/ibpp/core/ibase.h	2637;"	d
isc_sdl_version1	drivers/Firebird/ibpp/core/ibase.h	2630;"	d
isc_sdl_while	drivers/Firebird/ibpp/core/ibase.h	2657;"	d
isc_segment	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_segment                          = 335544366L;$/;"	v
isc_segment	drivers/Firebird/ibpp/core/iberror.h	891;"	d
isc_segstr_eof	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_segstr_eof                       = 335544367L;$/;"	v
isc_segstr_eof	drivers/Firebird/ibpp/core/iberror.h	892;"	d
isc_segstr_no_op	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_segstr_no_op                     = 335544368L;$/;"	v
isc_segstr_no_op	drivers/Firebird/ibpp/core/iberror.h	893;"	d
isc_segstr_no_read	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_segstr_no_read                   = 335544369L;$/;"	v
isc_segstr_no_read	drivers/Firebird/ibpp/core/iberror.h	894;"	d
isc_segstr_no_trans	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_segstr_no_trans                  = 335544370L;$/;"	v
isc_segstr_no_trans	drivers/Firebird/ibpp/core/iberror.h	895;"	d
isc_segstr_no_write	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_segstr_no_write                  = 335544371L;$/;"	v
isc_segstr_no_write	drivers/Firebird/ibpp/core/iberror.h	896;"	d
isc_segstr_wrong_db	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_segstr_wrong_db                  = 335544372L;$/;"	v
isc_segstr_wrong_db	drivers/Firebird/ibpp/core/iberror.h	897;"	d
isc_service_att_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_service_att_err                  = 335544792L;$/;"	v
isc_service_att_err	drivers/Firebird/ibpp/core/iberror.h	1317;"	d
isc_service_not_supported	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_service_not_supported            = 335544814L;$/;"	v
isc_service_not_supported	drivers/Firebird/ibpp/core/iberror.h	1339;"	d
isc_service_unknown	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_service_unknown                  = 335544705L;$/;"	v
isc_service_unknown	drivers/Firebird/ibpp/core/iberror.h	1230;"	d
isc_shadow_accessed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_shadow_accessed                  = 335544455L;$/;"	v
isc_shadow_accessed	drivers/Firebird/ibpp/core/iberror.h	980;"	d
isc_shadow_missing	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_shadow_missing                   = 335544460L;$/;"	v
isc_shadow_missing	drivers/Firebird/ibpp/core/iberror.h	985;"	d
isc_shutdown	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_shutdown                         = 335544528L;$/;"	v
isc_shutdown	drivers/Firebird/ibpp/core/iberror.h	1053;"	d
isc_shutfail	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_shutfail                         = 335544557L;$/;"	v
isc_shutfail	drivers/Firebird/ibpp/core/iberror.h	1082;"	d
isc_shutinprog	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_shutinprog                       = 335544506L;$/;"	v
isc_shutinprog	drivers/Firebird/ibpp/core/iberror.h	1031;"	d
isc_shutwarn	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_shutwarn                         = 335544560L;$/;"	v
isc_shutwarn	drivers/Firebird/ibpp/core/iberror.h	1085;"	d
isc_sing_select_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_sing_select_err                  = 335544652L;$/;"	v
isc_sing_select_err	drivers/Firebird/ibpp/core/iberror.h	1177;"	d
isc_sort_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_sort_err                         = 335544675L;$/;"	v
isc_sort_err	drivers/Firebird/ibpp/core/iberror.h	1200;"	d
isc_sort_mem_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_sort_mem_err                     = 335544676L;$/;"	v
isc_sort_mem_err	drivers/Firebird/ibpp/core/iberror.h	1201;"	d
isc_sort_rec_size_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_sort_rec_size_err                = 335544758L;$/;"	v
isc_sort_rec_size_err	drivers/Firebird/ibpp/core/iberror.h	1283;"	d
isc_spb_address_path	drivers/Firebird/ibpp/core/ibase.h	1755;"	d
isc_spb_bkp_convert	drivers/Firebird/ibpp/core/ibase.h	2155;"	d
isc_spb_bkp_expand	drivers/Firebird/ibpp/core/ibase.h	2156;"	d
isc_spb_bkp_factor	drivers/Firebird/ibpp/core/ibase.h	2147;"	d
isc_spb_bkp_file	drivers/Firebird/ibpp/core/ibase.h	2146;"	d
isc_spb_bkp_ignore_checksums	drivers/Firebird/ibpp/core/ibase.h	2149;"	d
isc_spb_bkp_ignore_limbo	drivers/Firebird/ibpp/core/ibase.h	2150;"	d
isc_spb_bkp_length	drivers/Firebird/ibpp/core/ibase.h	2148;"	d
isc_spb_bkp_metadata_only	drivers/Firebird/ibpp/core/ibase.h	2151;"	d
isc_spb_bkp_no_garbage_collect	drivers/Firebird/ibpp/core/ibase.h	2152;"	d
isc_spb_bkp_non_transportable	drivers/Firebird/ibpp/core/ibase.h	2154;"	d
isc_spb_bkp_old_descriptions	drivers/Firebird/ibpp/core/ibase.h	2153;"	d
isc_spb_command_line	drivers/Firebird/ibpp/core/ibase.h	1751;"	d
isc_spb_connect_timeout	drivers/Firebird/ibpp/core/ibase.h	1758;"	d
isc_spb_current_version	drivers/Firebird/ibpp/core/ibase.h	1744;"	d
isc_spb_dbname	drivers/Firebird/ibpp/core/ibase.h	1752;"	d
isc_spb_dummy_packet_interval	drivers/Firebird/ibpp/core/ibase.h	1759;"	d
isc_spb_lic_desc	drivers/Firebird/ibpp/core/ibase.h	2139;"	d
isc_spb_lic_id	drivers/Firebird/ibpp/core/ibase.h	2138;"	d
isc_spb_lic_key	drivers/Firebird/ibpp/core/ibase.h	2137;"	d
isc_spb_multi_tra_id	drivers/Firebird/ibpp/core/ibase.h	2204;"	d
isc_spb_num_att	drivers/Firebird/ibpp/core/ibase.h	2254;"	d
isc_spb_num_db	drivers/Firebird/ibpp/core/ibase.h	2255;"	d
isc_spb_options	drivers/Firebird/ibpp/core/ibase.h	1754;"	d
isc_spb_password	drivers/Firebird/ibpp/core/ibase.h	1749;"	d
isc_spb_password_enc	drivers/Firebird/ibpp/core/ibase.h	1750;"	d
isc_spb_prp_access_mode	drivers/Firebird/ibpp/core/ibase.h	2169;"	d
isc_spb_prp_activate	drivers/Firebird/ibpp/core/ibase.h	2171;"	d
isc_spb_prp_am_readonly	drivers/Firebird/ibpp/core/ibase.h	2192;"	d
isc_spb_prp_am_readwrite	drivers/Firebird/ibpp/core/ibase.h	2193;"	d
isc_spb_prp_db_online	drivers/Firebird/ibpp/core/ibase.h	2172;"	d
isc_spb_prp_deny_new_attachments	drivers/Firebird/ibpp/core/ibase.h	2165;"	d
isc_spb_prp_deny_new_transactions	drivers/Firebird/ibpp/core/ibase.h	2166;"	d
isc_spb_prp_page_buffers	drivers/Firebird/ibpp/core/ibase.h	2162;"	d
isc_spb_prp_res	drivers/Firebird/ibpp/core/ibase.h	2179;"	d
isc_spb_prp_res_use_full	drivers/Firebird/ibpp/core/ibase.h	2178;"	d
isc_spb_prp_reserve_space	drivers/Firebird/ibpp/core/ibase.h	2167;"	d
isc_spb_prp_set_sql_dialect	drivers/Firebird/ibpp/core/ibase.h	2170;"	d
isc_spb_prp_shutdown_db	drivers/Firebird/ibpp/core/ibase.h	2164;"	d
isc_spb_prp_sweep_interval	drivers/Firebird/ibpp/core/ibase.h	2163;"	d
isc_spb_prp_wm_async	drivers/Firebird/ibpp/core/ibase.h	2185;"	d
isc_spb_prp_wm_sync	drivers/Firebird/ibpp/core/ibase.h	2186;"	d
isc_spb_prp_write_mode	drivers/Firebird/ibpp/core/ibase.h	2168;"	d
isc_spb_res_access_mode	drivers/Firebird/ibpp/core/ibase.h	2234;"	d
isc_spb_res_am_readonly	drivers/Firebird/ibpp/core/ibase.h	2247;"	d
isc_spb_res_am_readwrite	drivers/Firebird/ibpp/core/ibase.h	2248;"	d
isc_spb_res_buffers	drivers/Firebird/ibpp/core/ibase.h	2231;"	d
isc_spb_res_create	drivers/Firebird/ibpp/core/ibase.h	2240;"	d
isc_spb_res_deactivate_idx	drivers/Firebird/ibpp/core/ibase.h	2235;"	d
isc_spb_res_length	drivers/Firebird/ibpp/core/ibase.h	2233;"	d
isc_spb_res_no_shadow	drivers/Firebird/ibpp/core/ibase.h	2236;"	d
isc_spb_res_no_validity	drivers/Firebird/ibpp/core/ibase.h	2237;"	d
isc_spb_res_one_at_a_time	drivers/Firebird/ibpp/core/ibase.h	2238;"	d
isc_spb_res_page_size	drivers/Firebird/ibpp/core/ibase.h	2232;"	d
isc_spb_res_replace	drivers/Firebird/ibpp/core/ibase.h	2239;"	d
isc_spb_res_use_all_space	drivers/Firebird/ibpp/core/ibase.h	2241;"	d
isc_spb_rpr_check_db	drivers/Firebird/ibpp/core/ibase.h	2222;"	d
isc_spb_rpr_commit_trans	drivers/Firebird/ibpp/core/ibase.h	2199;"	d
isc_spb_rpr_full	drivers/Firebird/ibpp/core/ibase.h	2225;"	d
isc_spb_rpr_ignore_checksum	drivers/Firebird/ibpp/core/ibase.h	2223;"	d
isc_spb_rpr_kill_shadows	drivers/Firebird/ibpp/core/ibase.h	2224;"	d
isc_spb_rpr_list_limbo_trans	drivers/Firebird/ibpp/core/ibase.h	2221;"	d
isc_spb_rpr_mend_db	drivers/Firebird/ibpp/core/ibase.h	2220;"	d
isc_spb_rpr_recover_two_phase	drivers/Firebird/ibpp/core/ibase.h	2201;"	d
isc_spb_rpr_rollback_trans	drivers/Firebird/ibpp/core/ibase.h	2200;"	d
isc_spb_rpr_sweep_db	drivers/Firebird/ibpp/core/ibase.h	2219;"	d
isc_spb_rpr_validate_db	drivers/Firebird/ibpp/core/ibase.h	2218;"	d
isc_spb_sec_firstname	drivers/Firebird/ibpp/core/ibase.h	2128;"	d
isc_spb_sec_groupid	drivers/Firebird/ibpp/core/ibase.h	2124;"	d
isc_spb_sec_groupname	drivers/Firebird/ibpp/core/ibase.h	2127;"	d
isc_spb_sec_lastname	drivers/Firebird/ibpp/core/ibase.h	2130;"	d
isc_spb_sec_middlename	drivers/Firebird/ibpp/core/ibase.h	2129;"	d
isc_spb_sec_password	drivers/Firebird/ibpp/core/ibase.h	2126;"	d
isc_spb_sec_userid	drivers/Firebird/ibpp/core/ibase.h	2123;"	d
isc_spb_sec_username	drivers/Firebird/ibpp/core/ibase.h	2125;"	d
isc_spb_single_tra_id	drivers/Firebird/ibpp/core/ibase.h	2203;"	d
isc_spb_sql_role_name	drivers/Firebird/ibpp/core/ibase.h	1760;"	d
isc_spb_sts_data_pages	drivers/Firebird/ibpp/core/ibase.h	2261;"	d
isc_spb_sts_db_log	drivers/Firebird/ibpp/core/ibase.h	2262;"	d
isc_spb_sts_hdr_pages	drivers/Firebird/ibpp/core/ibase.h	2263;"	d
isc_spb_sts_idx_pages	drivers/Firebird/ibpp/core/ibase.h	2264;"	d
isc_spb_sts_nocreation	drivers/Firebird/ibpp/core/ibase.h	2268;"	d
isc_spb_sts_record_versions	drivers/Firebird/ibpp/core/ibase.h	2266;"	d
isc_spb_sts_sys_relations	drivers/Firebird/ibpp/core/ibase.h	2265;"	d
isc_spb_sts_table	drivers/Firebird/ibpp/core/ibase.h	2267;"	d
isc_spb_sys_user_name	drivers/Firebird/ibpp/core/ibase.h	1747;"	d
isc_spb_sys_user_name_enc	drivers/Firebird/ibpp/core/ibase.h	1748;"	d
isc_spb_tra_advise	drivers/Firebird/ibpp/core/ibase.h	2213;"	d
isc_spb_tra_advise_commit	drivers/Firebird/ibpp/core/ibase.h	2214;"	d
isc_spb_tra_advise_rollback	drivers/Firebird/ibpp/core/ibase.h	2215;"	d
isc_spb_tra_advise_unknown	drivers/Firebird/ibpp/core/ibase.h	2216;"	d
isc_spb_tra_db_path	drivers/Firebird/ibpp/core/ibase.h	2212;"	d
isc_spb_tra_host_site	drivers/Firebird/ibpp/core/ibase.h	2210;"	d
isc_spb_tra_id	drivers/Firebird/ibpp/core/ibase.h	2202;"	d
isc_spb_tra_remote_site	drivers/Firebird/ibpp/core/ibase.h	2211;"	d
isc_spb_tra_state	drivers/Firebird/ibpp/core/ibase.h	2205;"	d
isc_spb_tra_state_commit	drivers/Firebird/ibpp/core/ibase.h	2207;"	d
isc_spb_tra_state_limbo	drivers/Firebird/ibpp/core/ibase.h	2206;"	d
isc_spb_tra_state_rollback	drivers/Firebird/ibpp/core/ibase.h	2208;"	d
isc_spb_tra_state_unknown	drivers/Firebird/ibpp/core/ibase.h	2209;"	d
isc_spb_user_name	drivers/Firebird/ibpp/core/ibase.h	1746;"	d
isc_spb_verbose	drivers/Firebird/ibpp/core/ibase.h	1753;"	d
isc_spb_version	drivers/Firebird/ibpp/core/ibase.h	1745;"	d
isc_spb_version1	drivers/Firebird/ibpp/core/ibase.h	1743;"	d
isc_specify_field_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_specify_field_err                = 335544598L;$/;"	v
isc_specify_field_err	drivers/Firebird/ibpp/core/iberror.h	1123;"	d
isc_sql_db_dialect_dtype_unsupport	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_sql_db_dialect_dtype_unsupport   = 336003077L;$/;"	v
isc_sql_db_dialect_dtype_unsupport	drivers/Firebird/ibpp/core/iberror.h	1423;"	d
isc_sql_dialect_datatype_unsupport	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_sql_dialect_datatype_unsupport   = 335544796L;$/;"	v
isc_sql_dialect_datatype_unsupport	drivers/Firebird/ibpp/core/iberror.h	1321;"	d
isc_sqlerr	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_sqlerr                           = 335544436L;$/;"	v
isc_sqlerr	drivers/Firebird/ibpp/core/iberror.h	961;"	d
isc_sqlwarn	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_sqlwarn                          = 335544807L;$/;"	v
isc_sqlwarn	drivers/Firebird/ibpp/core/iberror.h	1332;"	d
isc_srvr_version_too_old	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_srvr_version_too_old             = 335544666L;$/;"	v
isc_srvr_version_too_old	drivers/Firebird/ibpp/core/iberror.h	1191;"	d
isc_stack_trace	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_stack_trace                      = 335544842L;$/;"	v
isc_stack_trace	drivers/Firebird/ibpp/core/iberror.h	1367;"	d
isc_start_cm_for_wal	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_start_cm_for_wal                 = 335544566L;$/;"	v
isc_start_cm_for_wal	drivers/Firebird/ibpp/core/iberror.h	1091;"	d
isc_stmt_handle	drivers/Firebird/ibpp/core/ibase.h	/^typedef FB_API_HANDLE isc_stmt_handle;$/;"	t
isc_stream_bof	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_stream_bof                       = 335544644L;$/;"	v
isc_stream_bof	drivers/Firebird/ibpp/core/iberror.h	1169;"	d
isc_stream_crack	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_stream_crack                     = 335544645L;$/;"	v
isc_stream_crack	drivers/Firebird/ibpp/core/iberror.h	1170;"	d
isc_stream_eof	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_stream_eof                       = 335544374L;$/;"	v
isc_stream_eof	drivers/Firebird/ibpp/core/iberror.h	899;"	d
isc_stream_not_defined	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_stream_not_defined               = 335544502L;$/;"	v
isc_stream_not_defined	drivers/Firebird/ibpp/core/iberror.h	1027;"	d
isc_stream_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_stream_not_found                 = 335544639L;$/;"	v
isc_stream_not_found	drivers/Firebird/ibpp/core/iberror.h	1164;"	d
isc_stream_twice	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_stream_twice                     = 335544638L;$/;"	v
isc_stream_twice	drivers/Firebird/ibpp/core/iberror.h	1163;"	d
isc_subquery_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_subquery_err                     = 335544605L;$/;"	v
isc_subquery_err	drivers/Firebird/ibpp/core/iberror.h	1130;"	d
isc_svc_handle	drivers/Firebird/ibpp/core/ibase.h	/^typedef FB_API_HANDLE isc_svc_handle;$/;"	t
isc_svc_in_use	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_svc_in_use                       = 335544716L;$/;"	v
isc_svc_in_use	drivers/Firebird/ibpp/core/iberror.h	1241;"	d
isc_svc_name_missing	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_svc_name_missing                 = 335544799L;$/;"	v
isc_svc_name_missing	drivers/Firebird/ibpp/core/iberror.h	1324;"	d
isc_svcnoexe	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_svcnoexe                         = 335544703L;$/;"	v
isc_svcnoexe	drivers/Firebird/ibpp/core/iberror.h	1228;"	d
isc_svcnotdef	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_svcnotdef                        = 335544563L;$/;"	v
isc_svcnotdef	drivers/Firebird/ibpp/core/iberror.h	1088;"	d
isc_svcnouser	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_svcnouser                        = 335544797L;$/;"	v
isc_svcnouser	drivers/Firebird/ibpp/core/iberror.h	1322;"	d
isc_syntaxerr	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_syntaxerr                        = 335544390L;$/;"	v
isc_syntaxerr	drivers/Firebird/ibpp/core/iberror.h	915;"	d
isc_sys_request	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_sys_request                      = 335544373L;$/;"	v
isc_sys_request	drivers/Firebird/ibpp/core/iberror.h	898;"	d
isc_systrig_update	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_systrig_update                   = 335544549L;$/;"	v
isc_systrig_update	drivers/Firebird/ibpp/core/iberror.h	1074;"	d
isc_table_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_table_name                       = 335544626L;$/;"	v
isc_table_name	drivers/Firebird/ibpp/core/iberror.h	1151;"	d
isc_table_view_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_table_view_err                   = 335544602L;$/;"	v
isc_table_view_err	drivers/Firebird/ibpp/core/iberror.h	1127;"	d
isc_text_subtype	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_text_subtype                     = 335544568L;$/;"	v
isc_text_subtype	drivers/Firebird/ibpp/core/iberror.h	1093;"	d
isc_token_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_token_err                        = 335544612L;$/;"	v
isc_token_err	drivers/Firebird/ibpp/core/iberror.h	1137;"	d
isc_token_too_long	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_token_too_long                   = 335544743L;$/;"	v
isc_token_too_long	drivers/Firebird/ibpp/core/iberror.h	1268;"	d
isc_too_many_contexts	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_too_many_contexts                = 335544800L;$/;"	v
isc_too_many_contexts	drivers/Firebird/ibpp/core/iberror.h	1325;"	d
isc_too_many_handles	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_too_many_handles                 = 335544761L;$/;"	v
isc_too_many_handles	drivers/Firebird/ibpp/core/iberror.h	1286;"	d
isc_tpb_autocommit	drivers/Firebird/ibpp/core/ibase.h	1715;"	d
isc_tpb_commit_time	drivers/Firebird/ibpp/core/ibase.h	1712;"	d
isc_tpb_concurrency	drivers/Firebird/ibpp/core/ibase.h	1701;"	d
isc_tpb_consistency	drivers/Firebird/ibpp/core/ibase.h	1700;"	d
isc_tpb_exclusive	drivers/Firebird/ibpp/core/ibase.h	1704;"	d
isc_tpb_ignore_limbo	drivers/Firebird/ibpp/core/ibase.h	1713;"	d
isc_tpb_lock_read	drivers/Firebird/ibpp/core/ibase.h	1709;"	d
isc_tpb_lock_timeout	drivers/Firebird/ibpp/core/ibase.h	1720;"	d
isc_tpb_lock_write	drivers/Firebird/ibpp/core/ibase.h	1710;"	d
isc_tpb_no_auto_undo	drivers/Firebird/ibpp/core/ibase.h	1719;"	d
isc_tpb_no_rec_version	drivers/Firebird/ibpp/core/ibase.h	1717;"	d
isc_tpb_nowait	drivers/Firebird/ibpp/core/ibase.h	1706;"	d
isc_tpb_protected	drivers/Firebird/ibpp/core/ibase.h	1703;"	d
isc_tpb_read	drivers/Firebird/ibpp/core/ibase.h	1707;"	d
isc_tpb_read_committed	drivers/Firebird/ibpp/core/ibase.h	1714;"	d
isc_tpb_rec_version	drivers/Firebird/ibpp/core/ibase.h	1716;"	d
isc_tpb_restart_requests	drivers/Firebird/ibpp/core/ibase.h	1718;"	d
isc_tpb_shared	drivers/Firebird/ibpp/core/ibase.h	1702;"	d
isc_tpb_verb_time	drivers/Firebird/ibpp/core/ibase.h	1711;"	d
isc_tpb_version1	drivers/Firebird/ibpp/core/ibase.h	1698;"	d
isc_tpb_version3	drivers/Firebird/ibpp/core/ibase.h	1699;"	d
isc_tpb_wait	drivers/Firebird/ibpp/core/ibase.h	1705;"	d
isc_tpb_write	drivers/Firebird/ibpp/core/ibase.h	1708;"	d
isc_tr_handle	drivers/Firebird/ibpp/core/ibase.h	/^typedef FB_API_HANDLE isc_tr_handle;$/;"	t
isc_tra_must_sweep	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_tra_must_sweep                   = 335544731L;$/;"	v
isc_tra_must_sweep	drivers/Firebird/ibpp/core/iberror.h	1256;"	d
isc_tra_num_exc	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_tra_num_exc                      = 335544864L;$/;"	v
isc_tra_num_exc	drivers/Firebird/ibpp/core/iberror.h	1389;"	d
isc_tra_state	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_tra_state                        = 335544468L;$/;"	v
isc_tra_state	drivers/Firebird/ibpp/core/iberror.h	993;"	d
isc_trainlim	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_trainlim                         = 335544418L;$/;"	v
isc_trainlim	drivers/Firebird/ibpp/core/iberror.h	943;"	d
isc_tranotzer	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_tranotzer                        = 335544408L;$/;"	v
isc_tranotzer	drivers/Firebird/ibpp/core/iberror.h	933;"	d
isc_trans_invalid	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_trans_invalid                    = 335544469L;$/;"	v
isc_trans_invalid	drivers/Firebird/ibpp/core/iberror.h	994;"	d
isc_transitional_date	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_transitional_date                = 335544764L;$/;"	v
isc_transitional_date	drivers/Firebird/ibpp/core/iberror.h	1289;"	d
isc_transliteration_failed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_transliteration_failed           = 335544565L;$/;"	v
isc_transliteration_failed	drivers/Firebird/ibpp/core/iberror.h	1090;"	d
isc_traoutsta	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_traoutsta                        = 335544420L;$/;"	v
isc_traoutsta	drivers/Firebird/ibpp/core/iberror.h	945;"	d
isc_trareqmis	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_trareqmis                        = 335544409L;$/;"	v
isc_trareqmis	drivers/Firebird/ibpp/core/iberror.h	934;"	d
isc_udf_exception	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_udf_exception                    = 335544740L;$/;"	v
isc_udf_exception	drivers/Firebird/ibpp/core/iberror.h	1265;"	d
isc_udf_name	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_udf_name                         = 335544816L;$/;"	v
isc_udf_name	drivers/Firebird/ibpp/core/iberror.h	1341;"	d
isc_unavailable	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_unavailable                      = 335544375L;$/;"	v
isc_unavailable	drivers/Firebird/ibpp/core/iberror.h	900;"	d
isc_unexp_spb_form	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_unexp_spb_form                   = 335544795L;$/;"	v
isc_unexp_spb_form	drivers/Firebird/ibpp/core/iberror.h	1320;"	d
isc_union_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_union_err                        = 335544613L;$/;"	v
isc_union_err	drivers/Firebird/ibpp/core/iberror.h	1138;"	d
isc_unique_key_violation	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_unique_key_violation             = 335544665L;$/;"	v
isc_unique_key_violation	drivers/Firebird/ibpp/core/iberror.h	1190;"	d
isc_unlicensed	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_unlicensed                       = 335544452L;$/;"	v
isc_unlicensed	drivers/Firebird/ibpp/core/iberror.h	977;"	d
isc_unprepared_stmt	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_unprepared_stmt                  = 335544711L;$/;"	v
isc_unprepared_stmt	drivers/Firebird/ibpp/core/iberror.h	1236;"	d
isc_unres_rel	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_unres_rel                        = 335544376L;$/;"	v
isc_unres_rel	drivers/Firebird/ibpp/core/iberror.h	901;"	d
isc_uns_ext	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_uns_ext                          = 335544377L;$/;"	v
isc_uns_ext	drivers/Firebird/ibpp/core/iberror.h	902;"	d
isc_unsupported_network_drive	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_unsupported_network_drive        = 335544732L;$/;"	v
isc_unsupported_network_drive	drivers/Firebird/ibpp/core/iberror.h	1257;"	d
isc_update_conflict	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_update_conflict                  = 335544451L;$/;"	v
isc_update_conflict	drivers/Firebird/ibpp/core/iberror.h	976;"	d
isc_usrname_not_found	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_usrname_not_found                = 335544753L;$/;"	v
isc_usrname_not_found	drivers/Firebird/ibpp/core/iberror.h	1278;"	d
isc_usrname_required	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_usrname_required                 = 335544749L;$/;"	v
isc_usrname_required	drivers/Firebird/ibpp/core/iberror.h	1274;"	d
isc_usrname_too_long	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_usrname_too_long                 = 335544747L;$/;"	v
isc_usrname_too_long	drivers/Firebird/ibpp/core/iberror.h	1272;"	d
isc_valid_client_dialects	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_valid_client_dialects            = 335544812L;$/;"	v
isc_valid_client_dialects	drivers/Firebird/ibpp/core/iberror.h	1337;"	d
isc_valid_db_dialects	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_valid_db_dialects                = 335544806L;$/;"	v
isc_valid_db_dialects	drivers/Firebird/ibpp/core/iberror.h	1331;"	d
isc_version4	drivers/Firebird/ibpp/core/ibase.h	40;"	d
isc_version_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_version_err                      = 335544677L;$/;"	v
isc_version_err	drivers/Firebird/ibpp/core/iberror.h	1202;"	d
isc_view_alias	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_view_alias                       = 335544660L;$/;"	v
isc_view_alias	drivers/Firebird/ibpp/core/iberror.h	1185;"	d
isc_virmemexh	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_virmemexh                        = 335544430L;$/;"	v
isc_virmemexh	drivers/Firebird/ibpp/core/iberror.h	955;"	d
isc_waifortra	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_waifortra                        = 335544398L;$/;"	v
isc_waifortra	drivers/Firebird/ibpp/core/iberror.h	923;"	d
isc_wal_backup_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_backup_err                   = 335544833L;$/;"	v
isc_wal_backup_err	drivers/Firebird/ibpp/core/iberror.h	1358;"	d
isc_wal_bugcheck	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_bugcheck                     = 335544513L;$/;"	v
isc_wal_bugcheck	drivers/Firebird/ibpp/core/iberror.h	1038;"	d
isc_wal_cache_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_cache_err                    = 335544556L;$/;"	v
isc_wal_cache_err	drivers/Firebird/ibpp/core/iberror.h	1081;"	d
isc_wal_cant_expand	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_cant_expand                  = 335544514L;$/;"	v
isc_wal_cant_expand	drivers/Firebird/ibpp/core/iberror.h	1039;"	d
isc_wal_err_expansion	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_err_expansion                = 335544524L;$/;"	v
isc_wal_err_expansion	drivers/Firebird/ibpp/core/iberror.h	1049;"	d
isc_wal_err_jrn_comm	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_err_jrn_comm                 = 335544523L;$/;"	v
isc_wal_err_jrn_comm	drivers/Firebird/ibpp/core/iberror.h	1048;"	d
isc_wal_err_logwrite	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_err_logwrite                 = 335544522L;$/;"	v
isc_wal_err_logwrite	drivers/Firebird/ibpp/core/iberror.h	1047;"	d
isc_wal_err_rollover	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_err_rollover                 = 335544499L;$/;"	v
isc_wal_err_rollover	drivers/Firebird/ibpp/core/iberror.h	1024;"	d
isc_wal_err_rollover2	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_err_rollover2                = 335544521L;$/;"	v
isc_wal_err_rollover2	drivers/Firebird/ibpp/core/iberror.h	1046;"	d
isc_wal_err_setup	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_err_setup                    = 335544525L;$/;"	v
isc_wal_err_setup	drivers/Firebird/ibpp/core/iberror.h	1050;"	d
isc_wal_err_ww_start	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_err_ww_start                 = 335544527L;$/;"	v
isc_wal_err_ww_start	drivers/Firebird/ibpp/core/iberror.h	1052;"	d
isc_wal_err_ww_sync	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_err_ww_sync                  = 335544526L;$/;"	v
isc_wal_err_ww_sync	drivers/Firebird/ibpp/core/iberror.h	1051;"	d
isc_wal_failure	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_failure                      = 335544486L;$/;"	v
isc_wal_failure	drivers/Firebird/ibpp/core/iberror.h	1011;"	d
isc_wal_file_open	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_file_open                    = 335544484L;$/;"	v
isc_wal_file_open	drivers/Firebird/ibpp/core/iberror.h	1009;"	d
isc_wal_illegal_attach	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_illegal_attach               = 335544497L;$/;"	v
isc_wal_illegal_attach	drivers/Firebird/ibpp/core/iberror.h	1022;"	d
isc_wal_invalid_wpb	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_invalid_wpb                  = 335544498L;$/;"	v
isc_wal_invalid_wpb	drivers/Firebird/ibpp/core/iberror.h	1023;"	d
isc_wal_ovflow_log_required	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_ovflow_log_required          = 335544567L;$/;"	v
isc_wal_ovflow_log_required	drivers/Firebird/ibpp/core/iberror.h	1092;"	d
isc_wal_shadow_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_shadow_err                   = 335544629L;$/;"	v
isc_wal_shadow_err	drivers/Firebird/ibpp/core/iberror.h	1154;"	d
isc_wal_subsys_corrupt	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_subsys_corrupt               = 335544504L;$/;"	v
isc_wal_subsys_corrupt	drivers/Firebird/ibpp/core/iberror.h	1029;"	d
isc_wal_subsys_error	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wal_subsys_error                 = 335544503L;$/;"	v
isc_wal_subsys_error	drivers/Firebird/ibpp/core/iberror.h	1028;"	d
isc_walw_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_walw_err                         = 335544487L;$/;"	v
isc_walw_err	drivers/Firebird/ibpp/core/iberror.h	1012;"	d
isc_where_err	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_where_err                        = 335544601L;$/;"	v
isc_where_err	drivers/Firebird/ibpp/core/iberror.h	1126;"	d
isc_wish_list	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wish_list                        = 335544378L;$/;"	v
isc_wish_list	drivers/Firebird/ibpp/core/iberror.h	903;"	d
isc_wroblrver	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wroblrver                        = 335544412L;$/;"	v
isc_wroblrver	drivers/Firebird/ibpp/core/iberror.h	937;"	d
isc_wrodpbver	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wrodpbver                        = 335544413L;$/;"	v
isc_wrodpbver	drivers/Firebird/ibpp/core/iberror.h	938;"	d
isc_wrodynver	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wrodynver                        = 335544437L;$/;"	v
isc_wrodynver	drivers/Firebird/ibpp/core/iberror.h	962;"	d
isc_wrong_backup_state	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wrong_backup_state               = 335544832L;$/;"	v
isc_wrong_backup_state	drivers/Firebird/ibpp/core/iberror.h	1357;"	d
isc_wrong_ods	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wrong_ods                        = 335544379L;$/;"	v
isc_wrong_ods	drivers/Firebird/ibpp/core/iberror.h	904;"	d
isc_wronumarg	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wronumarg                        = 335544380L;$/;"	v
isc_wronumarg	drivers/Firebird/ibpp/core/iberror.h	905;"	d
isc_wrospbver	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wrospbver                        = 335544561L;$/;"	v
isc_wrospbver	drivers/Firebird/ibpp/core/iberror.h	1086;"	d
isc_wrotpbver	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_wrotpbver                        = 335544411L;$/;"	v
isc_wrotpbver	drivers/Firebird/ibpp/core/iberror.h	936;"	d
isc_xcpnotdef	drivers/Firebird/ibpp/core/iberror.h	/^const ISC_LONG isc_xcpnotdef                        = 335544516L;$/;"	v
isc_xcpnotdef	drivers/Firebird/ibpp/core/iberror.h	1041;"	d
isoTol_	kernel/TeTin.h	/^	double				isoTol_;		\/\/! Isolines tolerance$/;"	m	class:TeTin
it	stat/filaDouble.h	/^    typedef struct it {$/;"	s	class:TFilaDouble
it	stat/filaInt.h	/^    typedef struct it {$/;"	s	class:TFilaInt
it_	kernel/TeBaseSTInstanceSet.h	/^			typename vector<InstanceType>::iterator		it_; $/;"	m	class:TeBaseSTInstanceSet::propertyIterator
it_	kernel/TeCoverage.h	/^        geom_it it_; \/\/!< Generic geometry-value pair vector iterator$/;"	m	class:TeCoverage::iterator
it_	stat/TeStatDataStructures.h	/^      vector<TeSTStatInstance >::iterator it_;$/;"	m	class:TeSTStatInstanceSet::iterator
italic	kernel/TeVisual.h	/^	virtual bool italic () $/;"	f	class:TeVisual
italic	kernel/TeVisual.h	/^	virtual void italic (bool i) $/;"	f	class:TeVisual
italic_	drivers/GTM/TeGTM.h	/^	unsigned char dspl_, border_, italic_, underline_, strikeout_, alignment_;$/;"	m	class:TeGTMWaypointsStyles
italic_	kernel/TeVisual.h	/^	bool		italic_;	$/;"	m	class:TeBaseVisualParams
item	drivers/qt/TeQtBigTable.h	/^	QTableItem *item(int, int) { return 0; }$/;"	f	class:TeQtBigTable
itemStatusMap_	kernel/TeAbstractTheme.h	/^	map<string, int> itemStatusMap_;$/;"	m	class:TeAbstractTheme
iterator	functions/TeRasterIteratorSet.h	/^	    iterator()$/;"	f	class:RasterIteratorSet::iterator
iterator	functions/TeRasterIteratorSet.h	/^	    iterator(RasterIteratorSet<It>* set, unsigned index, It current)$/;"	f	class:RasterIteratorSet::iterator
iterator	functions/TeRasterIteratorSet.h	/^  class iterator : public It$/;"	c	class:RasterIteratorSet
iterator	image_processing/TePDIHistogram.hpp	/^      typedef TePDIHMapSpec::iterator iterator;      $/;"	t	class:TePDIHistogram
iterator	image_processing/TePDIJointHistogram.hpp	/^      typedef ConteinerT::iterator iterator;$/;"	t	class:TePDIJointHistogram
iterator	kernel/TeBaseSTInstanceSet.h	/^	typedef typename vector<InstanceType>::iterator iterator;$/;"	t	class:TeBaseSTInstanceSet
iterator	kernel/TeComposite.h	/^	typedef typename vector<T>::iterator iterator;$/;"	t	class:TeComposite
iterator	kernel/TeCoverage.h	/^        iterator(geom_it it) :$/;"	f	class:TeCoverage::iterator
iterator	kernel/TeCoverage.h	/^    class iterator$/;"	c	class:TeCoverage
iterator	kernel/TeGeometry.h	/^	typedef typename TeComposite<T>::iterator iterator;$/;"	t	class:TeGeomComposite
iterator	kernel/TeNeighbours.h	/^	typedef neigh_vector::iterator iterator;$/;"	t	class:TeNeighbours
iterator	kernel/TeRaster.h	/^			iterator(int c0=0, int l0=0, int nc=0, int nl=0, int nb=0, TeRaster* pt=0) : $/;"	f	class:TeRaster::iterator
iterator	kernel/TeRaster.h	/^	class TL_DLL iterator$/;"	c	class:TeRaster
iterator	kernel/TeRedBlackTree.h	/^			typedef internal_iterator<NODE> iterator;$/;"	t	class:TeREDBLACK::TeRBTree
iterator	kernel/TeSparseMatrix.h	/^   typedef typename ContainerType::iterator iterator;$/;"	t	class:TeSparseMatrix
iterator	kernel/checkvec.h	/^		typedef typename checkedVector::iterator iterator;$/;"	t	class:br_stl::checkedVector
iterator	kernel/graph.h	/^		typedef typename GraphType::iterator iterator;$/;"	t	class:br_stl::Graph
iterator	stat/TeStatDataStructures.h	/^		iterator(TeRaster* rst=0): curItRaster_(0)$/;"	f	class:TeKernelGridSupport::iterator
iterator	stat/TeStatDataStructures.h	/^		iterator(TeRaster::iterator itr, TeRaster* rst=0) :$/;"	f	class:TeKernelGridSupport::iterator
iterator	stat/TeStatDataStructures.h	/^	class iterator$/;"	c	class:TeKernelGridSupport
iterator	stat/TeStatDataStructures.h	/^      iterator(vector<TeSTStatInstance >::iterator i){it_ = i;}$/;"	f	class:TeSTStatInstanceSet::iterator
iterator	stat/TeStatDataStructures.h	/^    class iterator {$/;"	c	class:TeSTStatInstanceSet
iteratorPoly	kernel/TeRaster.h	/^			iteratorPoly(TeRaster* raster = 0): $/;"	f	class:TeRaster::iteratorPoly
iteratorPoly	kernel/TeRaster.h	/^			iteratorPoly(int colCurr, int linCurr, int nc, int nl, int nb, TeRaster* pt, const TePolygon& poly,$/;"	f	class:TeRaster::iteratorPoly
iteratorPoly	kernel/TeRaster.h	/^	class TL_DLL iteratorPoly : public iterator$/;"	c	class:TeRaster
iteratorPoly	stat/TeStatDataStructures.h	/^		iteratorPoly(TeRaster* rst=0): curItRaster_(0)$/;"	f	class:TeKernelGridSupport::iteratorPoly
iteratorPoly	stat/TeStatDataStructures.h	/^		iteratorPoly(TeRaster::iteratorPoly itr, TeRaster* rst=0) :$/;"	f	class:TeKernelGridSupport::iteratorPoly
iteratorPoly	stat/TeStatDataStructures.h	/^	class iteratorPoly$/;"	c	class:TeKernelGridSupport
iterator_strat_	image_processing/TePDIStatistic.hpp	/^      TeStrategicIterator iterator_strat_;$/;"	m	class:TePDIStatistic
ito_	kernel/TeGeometry.h	/^	int		ifrom_, ito_;$/;"	m	class:TeArc
itod	drivers/Firebird/ibpp/core/date.cpp	/^bool IBPP::itod (int *pdate, int year, int month, int day)$/;"	f	class:IBPP
itot	drivers/Firebird/ibpp/core/time.cpp	/^void IBPP::itot (int *ptime, int hour, int minute, int second, int tenthousandths)$/;"	f	class:IBPP
ivArray	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef enum {ivArray, ivBlob, ivDate, ivTime, ivTimestamp, ivString,$/;"	e	enum:ibpp_internals::__anon66
ivBlob	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef enum {ivArray, ivBlob, ivDate, ivTime, ivTimestamp, ivString,$/;"	e	enum:ibpp_internals::__anon66
ivBool	drivers/Firebird/ibpp/core/_ibpp.h	/^			ivBool, ivDBKey, ivByte} IITYPE;$/;"	e	enum:ibpp_internals::__anon66
ivByte	drivers/Firebird/ibpp/core/_ibpp.h	/^			ivBool, ivDBKey, ivByte} IITYPE;$/;"	e	enum:ibpp_internals::__anon66
ivDBKey	drivers/Firebird/ibpp/core/_ibpp.h	/^			ivBool, ivDBKey, ivByte} IITYPE;$/;"	e	enum:ibpp_internals::__anon66
ivDate	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef enum {ivArray, ivBlob, ivDate, ivTime, ivTimestamp, ivString,$/;"	e	enum:ibpp_internals::__anon66
ivDouble	drivers/Firebird/ibpp/core/_ibpp.h	/^			ivInt16, ivInt32, ivInt64, ivFloat, ivDouble,$/;"	e	enum:ibpp_internals::__anon66
ivFloat	drivers/Firebird/ibpp/core/_ibpp.h	/^			ivInt16, ivInt32, ivInt64, ivFloat, ivDouble,$/;"	e	enum:ibpp_internals::__anon66
ivInt16	drivers/Firebird/ibpp/core/_ibpp.h	/^			ivInt16, ivInt32, ivInt64, ivFloat, ivDouble,$/;"	e	enum:ibpp_internals::__anon66
ivInt32	drivers/Firebird/ibpp/core/_ibpp.h	/^			ivInt16, ivInt32, ivInt64, ivFloat, ivDouble,$/;"	e	enum:ibpp_internals::__anon66
ivInt64	drivers/Firebird/ibpp/core/_ibpp.h	/^			ivInt16, ivInt32, ivInt64, ivFloat, ivDouble,$/;"	e	enum:ibpp_internals::__anon66
ivString	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef enum {ivArray, ivBlob, ivDate, ivTime, ivTimestamp, ivString,$/;"	e	enum:ibpp_internals::__anon66
ivTime	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef enum {ivArray, ivBlob, ivDate, ivTime, ivTimestamp, ivString,$/;"	e	enum:ibpp_internals::__anon66
ivTimestamp	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef enum {ivArray, ivBlob, ivDate, ivTime, ivTimestamp, ivString,$/;"	e	enum:ibpp_internals::__anon66
ix	drivers/SQLite/sqlite3/sqlite3.c	/^  int ix[BMS];                  \/* Cursor assigned to each bit *\/$/;"	m	struct:WhereMaskSet	file:
ixlr_	drivers/qt/TeQtCanvas.h	/^	int 	ixlr_;$/;"	m	class:TeQtCanvas
ixul_	drivers/qt/TeQtCanvas.h	/^	int 	ixul_; \/\/ cursor screen coordinates$/;"	m	class:TeQtCanvas
iylr_	drivers/qt/TeQtCanvas.h	/^	int 	iylr_;$/;"	m	class:TeQtCanvas
iyul_	drivers/qt/TeQtCanvas.h	/^	int 	iyul_;$/;"	m	class:TeQtCanvas
j	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
j2date	drivers/PostgreSQL/TePGInterface.cpp	/^inline void j2date(int jd, int *year, int *month, int *day)$/;"	f
jHistContainer_	image_processing/TePDIJointHistogram.hpp	/^      ConteinerT jHistContainer_;$/;"	m	class:TePDIJointHistogram
jHistoCache_	image_processing/TePDIStatistic.hpp	/^      JHistoCacheT jHistoCache_;$/;"	m	class:TePDIStatistic
j_mem_dest	drivers/libjpeg/jmemdst.c	/^j_mem_dest(j_compress_ptr cinfo, void **pTargetData, unsigned int *pNumBytes)$/;"	f
j_mem_src	drivers/libjpeg/jmemsrc.c	/^j_mem_src (j_decompress_ptr cinfo, unsigned char* buffer, unsigned int bufsize)$/;"	f
jfd	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_file *jfd;          \/* File descriptor for main journal *\/$/;"	m	struct:Pager	file:
jobFinishedSig_	kernel/TeThreadJobsManager.h	/^      TeThreadSignal jobFinishedSig_;$/;"	m	struct:TeThreadJobsManager::InternalManagerDataStruct
jobFuncParsPtr_	kernel/TeFunctionCallThreadJob.h	/^    void* jobFuncParsPtr_;$/;"	m	class:TeFunctionCallThreadJob
jobFunc_	kernel/TeFunctionCallThreadJob.h	/^    FunctPtrT jobFunc_;$/;"	m	class:TeFunctionCallThreadJob
jobsMan_	image_processing/TePDIMMIOMatching.hpp	/^      TeThreadJobsManager jobsMan_;$/;"	m	class:TePDIMMIOMatching
jointBorderLenght_	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^        unsigned int jointBorderLenght_;$/;"	m	class:TePDIParaSegRegGrowStrategy::MergingSegmentInfo
jointype	drivers/SQLite/sqlite3/sqlite3.c	/^    u8 jointype;      \/* Type of join between this able and the previous *\/$/;"	m	struct:SrcList::SrcList_item	file:
journalHdr	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 journalHdr;             \/* Byte offset to previous journal header *\/$/;"	m	struct:Pager	file:
journalHdrOffset	drivers/SQLite/sqlite3/sqlite3.c	/^static i64 journalHdrOffset(Pager *pPager){$/;"	f	file:
journalMode	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 journalMode;             \/* One of the PAGER_JOURNALMODE_* values *\/$/;"	m	struct:Pager	file:
journalOff	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 journalOff;             \/* Current write offset in the journal file *\/$/;"	m	struct:Pager	file:
journalSizeLimit	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 journalSizeLimit;       \/* Size limit for persistent journal files *\/$/;"	m	struct:Pager	file:
jrnlBufferSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int jrnlBufferSize(Pager *pPager){$/;"	f	file:
jrnlClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int jrnlClose(sqlite3_file *pJfd){$/;"	f	file:
jrnlFileSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int jrnlFileSize(sqlite3_file *pJfd, sqlite_int64 *pSize){$/;"	f	file:
jrnlRead	drivers/SQLite/sqlite3/sqlite3.c	/^static int jrnlRead($/;"	f	file:
jrnlSync	drivers/SQLite/sqlite3/sqlite3.c	/^static int jrnlSync(sqlite3_file *pJfd, int flags){$/;"	f	file:
jrnlTruncate	drivers/SQLite/sqlite3/sqlite3.c	/^static int jrnlTruncate(sqlite3_file *pJfd, sqlite_int64 size){$/;"	f	file:
jrnlWrite	drivers/SQLite/sqlite3/sqlite3.c	/^static int jrnlWrite($/;"	f	file:
juliandayFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void juliandayFunc($/;"	f	file:
kComb_	stat/TeKernelFunctions.h	/^  TeKernelCombinationType	kComb_;$/;"	m	class:TeStatKernelRatio
kdData	kernel/TeKdTree.h	/^		typedef NodeData kdData;$/;"	t	class:TeSAM::TeAdaptativeKdTreeNode
kdData	kernel/TeKdTree.h	/^		typedef NodeData kdData;$/;"	t	class:TeSAM::TeKdTreeNode
kdData	kernel/TeKdTree.h	/^		typedef typename KdTreeNode::kdData kdData;		$/;"	t	class:TeSAM::TeAdaptativeKdTree
kdData	kernel/TeKdTree.h	/^		typedef typename KdTreeNode::kdData kdData;$/;"	t	class:TeSAM::TeKdTree
kdDataItem	functions/TeInterpolation.h	/^		typedef typename ADAPTATIVEKDTREE::kdDataItem kdDataItem;$/;"	t	class:TeInterpolationAlgorithms
kdDataItem	kernel/TeKdTree.h	/^		typedef NodeDataItem kdDataItem;$/;"	t	class:TeSAM::TeAdaptativeKdTreeNode
kdDataItem	kernel/TeKdTree.h	/^		typedef NodeDataItem kdDataItem;$/;"	t	class:TeSAM::TeKdTreeNode
kdDataItem	kernel/TeKdTree.h	/^		typedef typename KdTreeNode::kdDataItem kdDataItem;		$/;"	t	class:TeSAM::TeKdTree
kdDataItem	kernel/TeKdTree.h	/^		typedef typename KdTreeNode::kdDataItem kdDataItem;	$/;"	t	class:TeSAM::TeAdaptativeKdTree
kdDataTag	kernel/TeKdTree.h	/^		typedef NodeDataTag  kdDataTag;$/;"	t	class:TeSAM::TeKdTreeNode
kdDataTag	kernel/TeKdTree.h	/^		typedef typename KdTreeNode::kdDataTag kdDataTag;$/;"	t	class:TeSAM::TeKdTree
kdKey	functions/TeInterpolation.h	/^		typedef typename ADAPTATIVEKDTREE::kdKey kdKey;$/;"	t	class:TeInterpolationAlgorithms
kdKey	kernel/TeKdTree.h	/^		typedef NodeKey kdKey;$/;"	t	class:TeSAM::TeAdaptativeKdTreeNode
kdKey	kernel/TeKdTree.h	/^		typedef NodeKey kdKey;$/;"	t	class:TeSAM::TeKdTreeNode
kdKey	kernel/TeKdTree.h	/^		typedef typename KdTreeNode::kdKey kdKey;		$/;"	t	class:TeSAM::TeAdaptativeKdTree
kdKey	kernel/TeKdTree.h	/^		typedef typename KdTreeNode::kdKey kdKey;$/;"	t	class:TeSAM::TeKdTree
kdNode	functions/TeInterpolation.h	/^		typedef typename ADAPTATIVEKDTREE::kdNode kdNode;$/;"	t	class:TeInterpolationAlgorithms
kdNode	kernel/TeKdTree.h	/^		typedef KdTreeNode kdNode;		$/;"	t	class:TeSAM::TeAdaptativeKdTree
kdNode	kernel/TeSTEvent.h	/^	typedef TeSAM::TeAdaptativeKdTreeNode<TeCoord2D, vector<TePoint>, TePoint> kdNode;$/;"	t	class:TeSTEventSet
kdTree	kernel/TeSTEvent.h	/^	typedef TeSAM::TeAdaptativeKdTree<kdNode> kdTree;$/;"	t	class:TeSTEventSet
kdTree_	kernel/TeSTEvent.h	/^	kdTree*		kdTree_;$/;"	m	class:TeSTEventSet
kd_	functions/TeInterpolation.h	/^		const ADAPTATIVEKDTREE& kd_;$/;"	m	class:TeInterpolationAlgorithms
kd_node_data_set_tag	kernel/TeKdTree.h	/^struct TL_DLL kd_node_data_set_tag {};$/;"	s	namespace:TeSAM
kd_node_data_single_tag	kernel/TeKdTree.h	/^struct TL_DLL kd_node_data_single_tag {};$/;"	s	namespace:TeSAM
kdsort	kernel/TeKdTree.h	/^void kdsort(CONTAINER& dataSet, const unsigned int& first, const unsigned int& last, const char& level, const LESSTHANX& lessThanCompFunctorByX, const LESSTHANY& lessThanCompFunctorByY)$/;"	f	namespace:TeSAM
keepDimension	drivers/qt/TeAppTheme.h	/^	int	keepDimension() { return keepDimension_; };$/;"	f	class:TeAppTheme
keepDimension	drivers/qt/TeAppTheme.h	/^	void keepDimension(int n) { keepDimension_ = n; };$/;"	f	class:TeAppTheme
keepDimension_	drivers/qt/TeAppTheme.h	/^	int				keepDimension_;$/;"	m	class:TeAppTheme
keepDimension_	kernel/TePieBar.h	/^	bool			keepDimension_;$/;"	m	class:TePieBar
kernelFunction1_	stat/TeKernelParams.h	/^	TeKernelFunctionType	kernelFunction1_;		\/\/ kernel function$/;"	m	struct:TeKernelParams
kernelFunction2_	stat/TeKernelParams.h	/^	TeKernelFunctionType	kernelFunction2_;		\/\/ kernel function$/;"	m	struct:TeKernelParams
key	drivers/SQLite/sqlite3/sqlite3.c	/^struct AttachKey { int type;  Token key; };$/;"	m	struct:AttachKey	file:
key	drivers/qt/TeQtCheckListItem.cpp	/^QString TeQtCheckListItem::key ( int \/* col *\/, bool \/* ascending *\/ ) const$/;"	f	class:TeQtCheckListItem
key	drivers/qt/TeQtDatabaseItem.h	/^	QString key(int col, bool ascending) const$/;"	f	class:TeQtDatabaseItem
key	drivers/qt/TeQtLayerItem.h	/^	QString key(int col, bool ascending) const$/;"	f	class:TeQtLayerItem
key	drivers/qt/TeQtViewItem.h	/^	QString key(int col, bool ascending) const$/;"	f	class:TeQtViewItem
keyClass	drivers/SQLite/sqlite3/sqlite3.c	/^  char keyClass;          \/* HASH_INT, _POINTER, _STRING, _BINARY *\/$/;"	m	struct:Fts3Hash	file:
keyColumnName_	functions/TeAddressLocator.h	/^	string keyColumnName_;					\/\/!< The column with index$/;"	m	struct:TeGeocodeTableMetadata
keyConf	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 keyConf;          \/* What to do in case of uniqueness conflict on iPKey *\/$/;"	m	struct:Table	file:
keyInfoFromExprList	drivers/SQLite/sqlite3/sqlite3.c	/^static KeyInfo *keyInfoFromExprList(Parse *pParse, ExprList *pList){$/;"	f	file:
keyMove_	kernel/TePieBar.h	/^	string			keyMove_;$/;"	m	class:TePieBar
keyPressEvent	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::keyPressEvent (QKeyEvent* e)$/;"	f	class:TeQtCanvas
keyPressEvent	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::keyPressEvent(QKeyEvent* e)$/;"	f	class:TeQtGLWidget
keyPress_	drivers/qt/TeQtGLWidget.h	/^	int	keyPress_;$/;"	m	class:TeQtGLWidget
keyReleaseEvent	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::keyReleaseEvent (QKeyEvent* e)$/;"	f	class:TeQtCanvas
keyReleaseEvent	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::keyReleaseEvent(QKeyEvent*)$/;"	f	class:TeQtGLWidget
key_	kernel/TeKdTree.h	/^		NodeKey key_;$/;"	m	class:TeSAM::TeKdTreeNode
key_	kernel/TeKdTree.h	/^		double key_;$/;"	m	class:TeSAM::TeAdaptativeKdTreeNode
keylen_nzttPKCS7ProtInfo	drivers/Oracle/OCI/include/nzt.h	/^   ub4 keylen_nzttPKCS7ProtInfo;             \/* Length of key to use *\/$/;"	m	struct:nzttPKCS7ProtInfo
keywordCode	drivers/SQLite/sqlite3/sqlite3.c	/^static int keywordCode(const char *z, int n){$/;"	f	file:
kfunc1_	stat/TeKernelFunctions.h	/^  TeKernelFunctionType		kfunc1_;$/;"	m	class:TeStatKernelRatio
kfunc2_	stat/TeKernelFunctions.h	/^  TeKernelFunctionType		kfunc2_;$/;"	m	class:TeStatKernelRatio
kfunc_	stat/TeKernelFunctions.h	/^  TeKernelFunctionType kfunc_;$/;"	m	class:TeStatKernel
kill	kernel/TeGraph.cpp	/^TeGraphPlot :: kill(int order)$/;"	f	class:TeGraphPlot
kmeans	image_processing/TePDIKMeansClas.cpp	/^bool TePDIKMeansClas::kmeans()$/;"	f	class:TePDIKMeansClas
ktype_	stat/TeKernelFunctions.h	/^  TeKernelComputeType		  ktype_;$/;"	m	class:TeStatKernelRatio
ktype_	stat/TeKernelFunctions.h	/^  TeKernelComputeType  ktype_;$/;"	m	class:TeStatKernel
kuscx_handle	drivers/Oracle/OCI/include/kusapi.h	/^typedef dvoid *kuscx_handle;	\/* handle for continuation context *\/$/;"	t
kusdb_handle	drivers/Oracle/OCI/include/kusapi.h	/^typedef dvoid *kusdb_handle;	\/* handle for connected database *\/$/;"	t
kusmem	drivers/Oracle/OCI/include/kusapi.h	/^  } kusmem;$/;"	t	typeref:struct:kusmem
kusmem	drivers/Oracle/OCI/include/kusapi.h	/^typedef struct kusmem$/;"	s
kusst	drivers/Oracle/OCI/include/kusapi.h	/^  } kusst;$/;"	t	typeref:enum:kusst
kusst	drivers/Oracle/OCI/include/kusapi.h	/^typedef enum kusst$/;"	g
kustv_handle	drivers/Oracle/OCI/include/kusapi.h	/^typedef dvoid *kustv_handle;	\/* handle for TLV context *\/$/;"	t
kustvs	drivers/Oracle/OCI/include/kusapi.h	/^  } kustvs;$/;"	t	typeref:enum:kustvs
kustvs	drivers/Oracle/OCI/include/kusapi.h	/^typedef enum kustvs$/;"	g
lWOutRemotion	kernel/TeGeometricTransformation.cpp	/^bool TeGeometricTransformation::lWOutRemotion( $/;"	f	class:TeGeometricTransformation
label	image_processing/TePDIMixModelComponent.hpp	/^		string label;$/;"	m	class:TePDIMixModelComponent
label	image_processing/TePDIMixModelSpectralBand.hpp	/^		string label;$/;"	m	class:TePDIMixModelSpectralBand
label	kernel/TeLegendEntry.cpp	/^TeLegendEntry::label()$/;"	f	class:TeLegendEntry
label	kernel/TeLegendEntry.h	/^	void label(string& s)$/;"	f	class:TeLegendEntry
label_	kernel/TeLegendEntry.h	/^	string				label_;$/;"	m	class:TeLegendEntry
label_field	kernel/TeGraph.h	/^	int label_field;       \/* maximum no. of characters in a label field *\/$/;"	m	class:TeGraphPlot
label_font	kernel/TeGraph.h	/^	int label_font;        \/* font number to use for labels *\/$/;"	m	class:TeGraphPlot
label_format	kernel/TeGraph.cpp	/^TeGraphPlot :: label_format(Real values[], int nvalues, int field_width,$/;"	f	class:TeGraphPlot
label_height	kernel/TeGraph.h	/^	int label_height;      \/* height of label character *\/$/;"	m	class:TeGraphPlot
label_width	kernel/TeGraph.h	/^	int label_width;       \/* width of label character *\/$/;"	m	class:TeGraphPlot
labelcolor_	drivers/GTM/TeGTM.h	/^	long gradcolor_, bcolor_, nwptstyles_, usercolor_, nwpts_, ntrcks_, nrtes_, n_maps_, n_tk_, labelcolor_;$/;"	m	class:TeGTMHeader
labelfont_	drivers/GTM/TeGTM.h	/^	char *gradfont_, *labelfont_, *userfont_, *newdatum_;$/;"	m	class:TeGTMHeader
labelsize_	drivers/GTM/TeGTM.h	/^	short version_, labelsize_;$/;"	m	class:TeGTMHeader
last	kernel/TeGeometry.h	/^	T& last() const$/;"	f	class:TeGeomComposite
lastErrno	drivers/SQLite/sqlite3/sqlite3.c	/^  DWORD lastErrno;           \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winShmNode	file:
lastErrno	drivers/SQLite/sqlite3/sqlite3.c	/^  DWORD lastErrno;        \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winFile	file:
lastErrno	drivers/SQLite/sqlite3/sqlite3.c	/^  int lastErrno;                      \/* The unix errno from last I\/O error *\/$/;"	m	struct:unixFile	file:
lastFetch	drivers/PostgreSQL/TePGInterface.h	/^		bool lastFetch;			\/\/ Mario$/;"	m	class:TePGRecordset
lastGenSegID_	image_processing/TePDIParaSegStrategy.hpp	/^      volatile TePDIParaSegSegment::SegIdDataType lastGenSegID_;    $/;"	m	class:TePDIParaSegStrategy
lastLinePressed_	drivers/qt/TeQtGrid.h	/^	long					lastLinePressed_;$/;"	m	class:TeQtGrid
lastObjId_	kernel/TeQuerierDBStr1.h	/^	string						lastObjId_;$/;"	m	class:TeQuerierDBStr1
lastReadedLine_	image_processing/TePDIRasterRUBuffer.hpp	/^      unsigned int lastReadedLine_;$/;"	m	class:TePDIRasterRUBuffer
lastRowid	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 lastRowid;                \/* ROWID of most recent insert (see above) *\/$/;"	m	struct:sqlite3	file:
lastRowid	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 lastRowid;          \/* Last insert rowid (sqlite3.lastRowid) *\/$/;"	m	struct:VdbeFrame	file:
lastRowid	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 lastRowid;        \/* Last rowid from a Next or NextIdx operation *\/$/;"	m	struct:VdbeCursor	file:
lastSelectionPolygon_	kernel/TeCoverage.h	/^    TePolygon lastSelectionPolygon_; \/\/!< the last polygon used for a selection$/;"	m	class:TeCoverage
lastSelectionRelation_	kernel/TeCoverage.h	/^    TeSpatialRelation lastSelectionRelation_; \/\/!< the last relation used for a selection$/;"	m	class:TeCoverage
lastSelectionResult_	kernel/TeCoverage.h	/^    std::vector<TeGeomValuePair<T> > lastSelectionResult_; \/\/!< the last result of a selection$/;"	m	class:TeCoverage
last_	kernel/TeTime.h	/^    time_t		last_;		\/\/ time in seconds$/;"	m	class:TeTime
last_Row_	drivers/Oracle/TeOCICursor.h	/^	bool				last_Row_;		\/\/!< if the current row is the last$/;"	m	class:TeOCICursor
last_insert_rowid	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
last_insert_rowid	drivers/SQLite/sqlite3/sqlite3.c	/^static void last_insert_rowid($/;"	f	file:
last_insert_rowid	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
last_name	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR *last_name;			\/* the user's last name *\/$/;"	m	struct:__anon65
last_oid_	drivers/PostgreSQL/TePGInterface.h	/^        Oid last_oid_;			\/\/ Always stores the last OID resulted of a command$/;"	m	class:TePGConnection
last_pixel	image_processing/TePDIBaatz.hpp	/^  struct segment_pixel *last_pixel; \/* pointer to the last pixel in the pixel list *\/$/;"	m	struct:segment	typeref:struct:segment::segment_pixel
last_up_time_	drivers/spl/PluginsParametersContainer.h	/^      time_t last_up_time_;$/;"	m	class:PluginsParametersContainer
last_valid_col_	image_processing/TePDIInterpolator.hpp	/^      double last_valid_col_;$/;"	m	class:TePDIInterpolator
last_valid_line_	image_processing/TePDIInterpolator.hpp	/^      double last_valid_line_;$/;"	m	class:TePDIInterpolator
lastname	drivers/Firebird/ibpp/core/ibpp.h	/^		std::string lastname;$/;"	m	class:IBPP::User
lat0	kernel/TeProjection.h	/^	double  lat0() { return GPlat0;	}	  $/;"	f	class:TeProjection
lat0	kernel/TeProjection.h	/^	double  lat0;	     \/\/!< Latitude of origin (rad)  $/;"	m	struct:TeProjectionParams
latitude_	drivers/GTM/TeGTM.h	/^	double latitude_, longitude_;$/;"	m	class:TeGTMRoutes
latitude_	drivers/GTM/TeGTM.h	/^	double latitude_, longitude_;$/;"	m	class:TeGTMTrackLogs
latitude_	drivers/GTM/TeGTM.h	/^	double latitude_, longitude_;$/;"	m	class:TeGTMWaypoints
layer	kernel/TeExternalTheme.cpp	/^TeExternalTheme::layer()$/;"	f	class:TeExternalTheme
layer	kernel/TeExternalTheme.cpp	/^TeExternalTheme::layer(TeLayer* layer)$/;"	f	class:TeExternalTheme
layer	kernel/TeQuerierDB.h	/^	TeLayer* layer() {	return  params_->theme()->layer(); }$/;"	f	class:TeQuerierDB
layer	kernel/TeQuerierParams.h	/^	virtual TeLayer* layer() { return layer_; }$/;"	f	class:TeQuerierParams
layer	kernel/TeTheme.cpp	/^void TeTheme::layer(TeLayer* layer)$/;"	f	class:TeTheme
layer	kernel/TeTheme.h	/^	virtual TeLayer* layer() { return layer_; }$/;"	f	class:TeTheme
layerExist	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::layerExist	(string layerName)$/;"	f	class:TeFirebird
layerExist	kernel/TeDatabase.cpp	/^TeDatabase::layerExist(int layerId)$/;"	f	class:TeDatabase
layerExist	kernel/TeDatabase.cpp	/^TeDatabase::layerExist(string layerName)$/;"	f	class:TeDatabase
layerId	kernel/TeExternalTheme.cpp	/^TeExternalTheme::layerId()$/;"	f	class:TeExternalTheme
layerId	kernel/TeExternalTheme.cpp	/^TeExternalTheme::layerId(int)$/;"	f	class:TeExternalTheme
layerId	kernel/TeTheme.h	/^	virtual int layerId() $/;"	f	class:TeTheme
layerId	kernel/TeTheme.h	/^	virtual void layerId(int i)$/;"	f	class:TeTheme
layerId_	kernel/TeCoverageParams.h	/^    int layerId_;                   \/\/!< Layer identifier$/;"	m	class:TeCoverageParams
layerId_	kernel/TeRasterParams.h	/^	int 		layerId_;	\/\/!< identification of the layer that contains the raster$/;"	m	class:TeRasterParams
layerId_	kernel/TeTheme.h	/^	int			layerId_;	$/;"	m	class:TeTheme
layerMap	kernel/TeDatabase.h	/^	TeLayerMap&	layerMap () $/;"	f	class:TeDatabase
layerMap	kernel/TeMetaModelCache.h	/^		TeLayerMap&	layerMap () $/;"	f	class:TeMetaModelCache
layerMap_	kernel/TeMetaModelCache.h	/^		TeLayerMap			layerMap_;			\/\/!< layer map	  $/;"	m	class:TeMetaModelCache
layer_	drivers/qt/TeQtLayerItem.h	/^	TeLayer	*layer_;$/;"	m	class:TeQtLayerItem
layer_	kernel/TeBaseSTInstanceSet.h	/^	TeLayer*				layer_;	$/;"	m	class:TeBaseSTInstanceSet
layer_	kernel/TeQuerierParams.h	/^	TeLayer*				layer_;			\/\/!< pointer to a source layer $/;"	m	class:TeQuerierParams
layer_	kernel/TeTheme.h	/^	TeLayer*	layer_;$/;"	m	class:TeTheme
layersNames_	drivers/GTM/TeGTM.h	/^	std::string layersNames_;$/;"	m	class:TeGTM
layers_	drivers/DXF/tedxfvisitor.h	/^    std::vector<TeDXFLayer *> layers_; \/\/!< $/;"	m	class:TeDXFVisitor
layers_	drivers/GTM/TeGTM.h	/^	float maxlon_, minlon_, maxlat_, minlat_, layers_, iconnum_;$/;"	m	class:TeGTMHeader
layers_	drivers/GTM/TeGTM.h	/^	vector<TeGTMLayers*> layers_;$/;"	m	class:TeGTM
ldadef	drivers/Oracle/OCI/include/ocidef.h	/^typedef struct csrdef ldadef;                    \/* lda is the same as a csr *\/$/;"	t	typeref:struct:csrdef
ldaerr	drivers/Oracle/OCI/include/ocidef.h	316;"	d
ldapName_nzttWallet	drivers/Oracle/OCI/include/nzt.h	/^   ub1 *ldapName_nzttWallet;              \/* user's LDAP Name *\/$/;"	m	struct:nzttWallet
ldapNamelen_nzttWallet	drivers/Oracle/OCI/include/nzt.h	/^   ub4  ldapNamelen_nzttWallet;           \/* len of user's LDAP Name *\/$/;"	m	struct:nzttWallet
leaf	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 leaf;             \/* True if leaf flag is set *\/$/;"	m	struct:MemPage	file:
leastSquareFitting	kernel/TeTin.cpp	/^TeTin::leastSquareFitting(double* vectx, double* vecty, int np, int degree, double* coef)$/;"	f	class:TeTin
leaveEvent	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::leaveEvent ( QEvent * )$/;"	f	class:TeQtCanvas
leaveEvent	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::leaveEvent(QEvent*)$/;"	f	class:TeQtColorBar
leaveEvent	drivers/qt/TeQtProgress.h	/^	void leaveEvent ( QEvent * )$/;"	f	class:TeQtProgress
leaveMutex	drivers/SQLite/sqlite3/sqlite3.c	/^static void leaveMutex(void){$/;"	f	file:
left	kernel/TeTin.h	/^	long left () $/;"	f	class:TeTinEdge
leftButtonPressed_	drivers/qt/TeQtViewsListView.h	/^	bool				leftButtonPressed_;$/;"	m	class:TeQtViewsListView
leftColumn	drivers/SQLite/sqlite3/sqlite3.c	/^    int leftColumn;         \/* Column number of X in "X <op> <expr>" *\/$/;"	m	union:WhereTerm::__anon55	file:
leftCursor	drivers/SQLite/sqlite3/sqlite3.c	/^  int leftCursor;         \/* Cursor number of X in "X <op> <expr>" *\/$/;"	m	struct:WhereTerm	file:
leftNeighborhood_	functions/TeAddressLocator.h	/^	string leftNeighborhood_;		\/\/!< The field name for the left location neighborhood $/;"	m	struct:TeAddressMetadata
leftNeighborhood_	functions/TeAddressLocator.h	/^	string leftNeighborhood_;		\/\/!< The left location neighborhood $/;"	m	struct:TeAddressDescription
leftString	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::leftString(const string& name, const int& length)$/;"	f	class:TePostgreSQL
leftString	kernel/TeDatabase.h	/^	virtual string leftString(const string& \/*name*\/, const int& \/*length*\/){return "";}$/;"	f	class:TeDatabase
leftZipCode_	functions/TeAddressLocator.h	/^	string leftZipCode_;			\/\/!< The eft location zip code$/;"	m	struct:TeAddressDescription
leftZipCode_	functions/TeAddressLocator.h	/^	string leftZipCode_;			\/\/!< The field name for the left location zip code$/;"	m	struct:TeAddressMetadata
left_	kernel/TeKdTree.h	/^		TeAdaptativeKdTreeNode* left_;$/;"	m	class:TeSAM::TeAdaptativeKdTreeNode
left_	kernel/TeKdTree.h	/^		TeKdTreeNode* left_;$/;"	m	class:TeSAM::TeKdTreeNode
left_	kernel/TeRedBlackTree.h	/^			TeRedBlackNode* left_;$/;"	m	class:TeREDBLACK::TeRedBlackNode
left_	kernel/TeTin.h	/^	long	left_, right_;$/;"	m	class:TeTinEdge
legend	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::legend (TeLegendEntry& leg)$/;"	f	class:TeAbstractTheme
legend	kernel/TeAbstractTheme.h	/^	virtual TeLegendEntryVector& legend() { return legend_; }$/;"	f	class:TeAbstractTheme
legend	kernel/TeGraph.cpp	/^	char legend[4];$/;"	m	struct:Opt	file:
legendEntry	drivers/qt/TeQtLegendItem.h	/^	TeLegendEntry* legendEntry()$/;"	f	class:TeQtLegendItem
legendEntry_	drivers/qt/TeQtLegendItem.h	/^	TeLegendEntry *legendEntry_;$/;"	m	class:TeQtLegendItem
legendIdGroup_	kernel/TeQuerierDB.h	/^	map<int, int>			legendIdGroup_;$/;"	m	class:TeQuerierDB
legendMap	kernel/TeDatabase.h	/^	TeLegendEntryMap& legendMap () $/;"	f	class:TeDatabase
legendMap	kernel/TeMetaModelCache.h	/^		TeLegendEntryMap& legendMap () $/;"	f	class:TeMetaModelCache
legendMap_	kernel/TeMetaModelCache.h	/^        TeLegendEntryMap	legendMap_;			\/\/!< view map$/;"	m	class:TeMetaModelCache
legend_	kernel/TeAbstractTheme.h	/^	TeLegendEntryVector	legend_;$/;"	m	class:TeAbstractTheme
legend_	kernel/TeRasterTransform.h	/^		TeLegendEntryVector legend_;$/;"	m	class:TeRasterTransform
len_pctx	drivers/Oracle/OCI/include/cdemodp0.h	/^  ub4   len_pctx;                            \/* length of this column so far *\/$/;"	m	struct:pctx
length	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned long long length;        \/* nbr of bytes to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
length	kernel/TeTimeInterval.cpp	/^TeTimeInterval :: length ()$/;"	f	class:TeTimeInterval
lengthFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void lengthFunc($/;"	f	file:
length_kusmem	drivers/Oracle/OCI/include/kusapi.h	/^    ub4 length_kusmem;          \/* Number of bytes to copy *\/$/;"	m	struct:kusmem
level	drivers/GL/glcore.h	/^    GLint level;$/;"	m	struct:__GLcontextModesRec
level	drivers/GL/glxint.h	/^    GLint level;$/;"	m	struct:__GLXFBConfigRec
level	drivers/GL/glxint.h	/^    int level;$/;"	m	struct:__GLXvisualConfigRec
level	drivers/GL/internal/glcore.h	/^    GLint level;$/;"	m	struct:__GLcontextModesRec
level_	kernel/TeRTree.h	/^		int level_;			\/\/!< Leaf is zero, others positive.$/;"	m	class:TeSAM::TeRTreeNode
lexOut	kernel/lexTemporal.cpp	/^char lexOut[1000];$/;"	v
lgenfp_t	drivers/Oracle/OCI/include/oratypes.h	/^typedef void (*lgenfp_t)( void );$/;"	t
lhs	drivers/SQLite/sqlite3/sqlite3.c	/^  YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon58	file:
lib$ediv	drivers/GL/vms_x_fix.h	873;"	d
lib$find_file	drivers/GL/vms_x_fix.h	855;"	d
lib$find_file_end	drivers/GL/vms_x_fix.h	856;"	d
lib$set_symbol	drivers/GL/vms_x_fix.h	857;"	d
lib$sfree1_dd	drivers/GL/vms_x_fix.h	858;"	d
lib$spawn	drivers/GL/vms_x_fix.h	859;"	d
lib$subx	drivers/GL/vms_x_fix.h	874;"	d
lib$wait	drivers/GL/vms_x_fix.h	854;"	d
libversion	drivers/SQLite/sqlite3/sqlite3.c	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines	file:
libversion	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines
libversion_number	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines	file:
libversion_number	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines
likeFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void likeFunc($/;"	f	file:
likeInfoAlt	drivers/SQLite/sqlite3/sqlite3.c	/^static const struct compareInfo likeInfoAlt = { '%', '_',   0, 0 };$/;"	v	typeref:struct:compareInfo	file:
likeInfoNorm	drivers/SQLite/sqlite3/sqlite3.c	/^static const struct compareInfo likeInfoNorm = { '%', '_',   0, 1 };$/;"	v	typeref:struct:compareInfo	file:
likely	drivers/SQLite/sqlite3/sqlite3.c	534;"	d	file:
likely	drivers/SQLite/sqlite3/sqlite3.c	537;"	d	file:
limit	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
limit	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines
limit_	drivers/qt/TeQtColorBar.h	/^	int		limit_, inf_, sup_;$/;"	m	class:TeQtColorBar
linCurrent_	kernel/TeRaster.h	/^			int linCurrent_, colCurrent_;$/;"	m	class:TeRaster::iterator
linMax_	kernel/TeRaster.h	/^			double				linMin_, linMax_;  $/;"	m	class:TeRaster::iteratorPoly
linMinCM_	kernel/TeRaster.h	/^			double				linMinCM_;	\/\/minimal line in world coordinates $/;"	m	class:TeRaster::iteratorPoly
linMin_	kernel/TeRaster.h	/^			double				linMin_, linMax_;  $/;"	m	class:TeRaster::iteratorPoly
lin_	kernel/TeDecoderVirtualMemory.h	/^	int lin_;$/;"	m	class:TeBlockIndex
lin_	stat/TeStatDataStructures.h	/^	int lin_;$/;"	m	class:TeGridElement
line	functions/TeCellAlgorithms.cpp	/^	int line;$/;"	m	struct:procDist	file:
line	kernel/TeDecoderVirtualMemory.h	/^	int line() const$/;"	f	class:TeBlockIndex
line	kernel/TeGeometry.h	/^	int	line () const$/;"	f	class:TeCell
line	kernel/TeGeometry.h	/^	void line (int line) $/;"	f	class:TeCell
lineColor_	drivers/qt/TeQtCanvas.h	/^	QColor		lineColor_;$/;"	m	class:TeQtCanvas
lineColor_	drivers/qt/TeQtGraph.h	/^	QColor		lineColor_;$/;"	m	class:TeQtGraphPlot
lineId_	kernel/TeIntersector.h	/^	unsigned int lineId_;	\/\/!<  The line id, when used in a lineset or in a polygon.$/;"	m	struct:TeINTERSECTOR2::TeSegIdInPolygonSet
lineMap_	drivers/qt/TeAppTheme.h	/^	map<int, TeLine2D> lineMap_;$/;"	m	struct:RepMap
linePen_	drivers/qt/TeQtCanvas.h	/^	QPen		linePen_;$/;"	m	class:TeQtCanvas
linePen_	drivers/qt/TeQtGraph.h	/^	QPen		linePen_;$/;"	m	class:TeQtGraphPlot
lineSet	kernel/TeProfile1.h	/^	TeContourLineSet *lineSet;$/;"	m	class:TeProfile1
lineSight	kernel/TeProfile1.h	/^	TeLine2D *lineSight;$/;"	m	class:TeProfile1
lineSize_	image_processing/TePDIMatrix.hpp	/^      unsigned int lineSize_;      $/;"	m	class:TePDIMatrix
lineSpace	kernel/TeVisual.h	/^	virtual int	lineSpace () $/;"	f	class:TeVisual
lineSpace	kernel/TeVisual.h	/^	virtual void lineSpace (int s) $/;"	f	class:TeVisual
lineSpace_	kernel/TeVisual.h	/^	int			lineSpace_;	$/;"	m	class:TeBaseVisualParams
line_	drivers/DXF/tedxfvisitor.h	/^    TeLinearRing line_; \/\/!< $/;"	m	class:TeDXFVisitor
line_	kernel/TeGeometry.h	/^	int line_;		\/\/!< the line number of this cell$/;"	m	class:TeCell
line_	kernel/TeOverlayUtils.cpp	/^	TeLine2D		line_;$/;"	m	struct:TeSFragment	file:
line_cost_	kernel/TeNetwork.h	/^	map<string, double>				line_cost_;	$/;"	m	class:TeGraphNetwork
line_set_	kernel/TeNetwork.h	/^	TeLineSet						line_set_;	$/;"	m	class:TeGraphNetwork
line_set_	kernel/TeNetwork.h	/^	TeLineSet						line_set_;	$/;"	m	class:TeNetwork
linearInterpolation	kernel/TeTin.cpp	/^TeTin::linearInterpolation(TeRaster* raster, int band, TeTinTriangle t, int fline, int lline,int fcol, int lcol)$/;"	f	class:TeTin
linearInterpolation	kernel/TeTin.cpp	/^TeTin::linearInterpolation(TeRaster*& grid)$/;"	f	class:TeTin
lineno	kernel/lexTemporal.cpp	/^int   lineno;$/;"	v
lines	image_processing/TePDIFilterMask.cpp	/^unsigned int TePDIFilterMask::lines() const$/;"	f	class:TePDIFilterMask
lines	kernel/TeGraph.cpp	/^    TeColor lines;               \/* color of plot all lines    *\/$/;"	m	struct:Grc	file:
linesProcStatusVec_	image_processing/TePDISAMClassifier.hpp	/^          std::vector< bool >& linesProcStatusVec_;$/;"	m	class:TePDISAMClassifier::SegThread
lines_	kernel/TeMultiGeometry.h	/^	TeLineSet			lines_;$/;"	m	class:TeMultiGeometry
linesize	kernel/TeGraph.cpp	/^	char linesize[4];$/;"	m	struct:Opt	file:
linkClicked	drivers/qt/ui/help.ui.h	/^void Help::linkClicked(const QString & \/* link *\/ )$/;"	f	class:Help
linkColumnName_	functions/TeAddressLocator.h	/^	string linkColumnName_;					\/\/!< The column used as link column in geocoding$/;"	m	struct:TeGeocodeTableMetadata
linkColumnName_	functions/TeAddressLocator.h	/^	string linkColumnName_;			\/\/!< The column used as link to line geometry$/;"	m	struct:TeAddressMetadata
linkIndex_	kernel/TeQuerierDB.h	/^	vector<int>		linkIndex_;$/;"	m	class:TeQuerierDB
linkName	kernel/TeTable.h	/^	string linkName()$/;"	f	class:TeTable
linkName_	kernel/TeQuerierDBStr1.h	/^	string						linkName_;$/;"	m	class:TeQuerierDBStr1
list	drivers/SQLite/sqlite3/sqlite3.c	/^    } list;$/;"	m	union:Mem3Block::__anon51	typeref:struct:Mem3Block::__anon51::__anon53	file:
listDatabases	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::listDatabases(std::vector<std::string> &databaseList) $/;"	f	class:TeMySQL
listDatabases	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::listDatabases(std::vector<std::string> &databaseList)$/;"	f	class:TePostgreSQL
listDatabases	drivers/ado/TeAdoSqlServer.cpp	/^bool TeSqlServer::listDatabases(std::vector<std::string> &databaseList) $/;"	f	class:TeSqlServer
listDatabases	kernel/TeDatabase.h	/^	virtual bool listDatabases(std::vector<std::string> & \/*databaseList*\/) { return false; }$/;"	f	class:TeDatabase
listTables	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::listTables(vector<string>& tableList)$/;"	f	class:TeOCIOracle
listTables	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::listTables(vector<string>& tableList)$/;"	f	class:TePostgreSQL
listTables	drivers/ado/TeAdoDB.cpp	/^TeAdo::listTables(vector<string>& tableList)$/;"	f	class:TeAdo
listTables	drivers/ado/TeAdoOracle.cpp	/^TeOracle::listTables(vector<string>& tableList)$/;"	f	class:TeOracle
listTables	kernel/TeDatabase.h	/^	virtual bool listTables(vector<string>& \/* tableList *\/) { return false; }$/;"	f	class:TeDatabase
listenerExt	drivers/Oracle/OCI/include/occiAQ.h	/^     void *listenerExt;$/;"	m	class:oracle::occi::aq::Listener
lndet	image_processing/TePDICluster.hpp	/^    double lndet;$/;"	m	class:TePDICluster
load	kernel/TePieBar.h	/^	bool load()$/;"	f	class:TePieBar
loadAddressCompoundNames	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::loadAddressCompoundNames()$/;"	f	class:TeAddressLocator
loadAddressMetadata	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::loadAddressMetadata(const int& tableId)$/;"	f	class:TeAddressLocator
loadAliasVector	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::loadAliasVector()$/;"	f	class:TeExternalTheme
loadAliasVector	kernel/TeTheme.cpp	/^TeTheme::loadAliasVector()$/;"	f	class:TeTheme
loadAllAttr	kernel/TeQuerierParams.h	/^	virtual bool loadAllAttr() { return loadAllAttributes_;}$/;"	f	class:TeQuerierParams
loadAllAttributes_	kernel/TeQuerierParams.h	/^	bool					loadAllAttributes_;		\/\/!< if the querier must load all attributes of each instance$/;"	m	class:TeQuerierParams
loadAnalysis	drivers/SQLite/sqlite3/sqlite3.c	/^static void loadAnalysis(Parse *pParse, int iDb){$/;"	f	file:
loadAppTheme	drivers/qt/TeApplicationUtils.cpp	/^bool loadAppTheme (TeDatabase* db, TeAppTheme *theme, const string& tableName)$/;"	f
loadArcSet	kernel/TeDatabase.cpp	/^TeDatabase::loadArcSet (const string& table, const string& geoid, TeArcSet &as)$/;"	f	class:TeDatabase
loadAttrLists	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::loadAttrLists()$/;"	f	class:TeExternalTheme
loadAttrLists	kernel/TeTheme.cpp	/^TeTheme::loadAttrLists()$/;"	f	class:TeTheme
loadAttrNamesSeted_	kernel/TeQuerierParams.h	/^	vector<string>			loadAttrNamesSeted_;	\/\/!< internal structure$/;"	m	class:TeQuerierParams
loadAttrNames_	kernel/TeQuerierParams.h	/^	vector<string>			loadAttrNames_;			\/\/!< which attributes the querier must load$/;"	m	class:TeQuerierParams
loadAttrs	kernel/TeQuerierParams.h	/^	virtual vector<string>& loadAttrs() { return loadAttrNames_;}$/;"	f	class:TeQuerierParams
loadBlock	kernel/TeDecoderVirtualMemory.cpp	/^TeMemoryPage* TeDecoderVirtualMemory::loadBlock(int col,int lin, int band)$/;"	f	class:TeDecoderVirtualMemory
loadBlocks	kernel/TeBlockLoader.cpp	/^TeBlockLoader::loadBlocks()$/;"	f	class:TeBlockLoader
loadCellSet	kernel/TeDatabase.cpp	/^TeDatabase::loadCellSet (const int& layerId, const string& table, const string& geoid, TeCellSet &cs)$/;"	f	class:TeDatabase
loadChartParams	drivers/qt/TeApplicationUtils.cpp	/^bool loadChartParams (TeDatabase* db, TeAppTheme *theme)$/;"	f
loadCollDescription	drivers/Oracle/TeOCICursor.cpp	/^void TeOCICursor::loadCollDescription() $/;"	f	class:TeOCICursor
loadData	drivers/shapelib/TeDriverSHPDBF.cpp	/^bool TeShapefileDriver::loadData()$/;"	f	class:TeShapefileDriver
loadDatum	kernel/TeDatabase.cpp	/^bool TeDatabase::loadDatum(TeDatum& datum)$/;"	f	class:TeDatabase
loadDatumMap	kernel/TeDatum.cpp	/^void TeDatumFactory::loadDatumMap()$/;"	f	class:TeDatumFactory
loadDatumSet	kernel/TeDatabase.cpp	/^bool TeDatabase::loadDatumSet()$/;"	f	class:TeDatabase
loadDecoder	kernel/TeDecoder.cpp	/^TeDecoder* TeDecoderFactory::loadDecoder(const TeRasterParams& params)$/;"	f	class:TeDecoderFactory
loadDefaultGPM	drivers/qt/TeApplicationUtils.h	/^bool loadDefaultGPM(TeDatabase* db, const int& themeId, TeGeneralizedProxMatrix<set>* &gpm)$/;"	f
loadDictionary	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::loadDictionary(const string& dictionaryFileName)$/;"	f	class:TeAddressLocator
loadDirect	kernel/TeGraph.cpp	/^TeGraphPlot :: loadDirect (int format, int curv, int points, Labels& labels, Real_Vector x, Real_Vector y)$/;"	f	class:TeGraphPlot
loadExt	drivers/SQLite/sqlite3/sqlite3.c	/^static void loadExt(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
loadExternalDBConnections	kernel/TeDBConnectionsPool.cpp	/^void TeDBConnectionsPool::loadExternalDBConnections(TeDatabase* mainDb)$/;"	f	class:TeDBConnectionsPool
loadExternalThemes	kernel/TeDatabase.cpp	/^bool TeDatabase::loadExternalThemes(std::vector<TeAbstractTheme*>& vecExternalThemes)$/;"	f	class:TeDatabase
loadFromBlob	drivers/Firebird/TeFirebird.cpp	/^void loadFromBlob(IBPP::Statement& st, TeLinearRing& ring)$/;"	f
loadFromFile	kernel/TeTin.cpp	/^TeTin::loadFromFile(std::string &fileName)$/;"	f	class:TeTin
loadFromFile	kernel/TeTin.cpp	/^TeTinEdgeSet::loadFromFile(std::string &fileName)$/;"	f	class:TeTinEdgeSet
loadFromFile	kernel/TeTin.cpp	/^TeTinTriangleSet::loadFromFile(std::string &fileName)$/;"	f	class:TeTinTriangleSet
loadFromFile	kernel/TeTin.cpp	/^TeTinVertexSet::loadFromFile(std::string &fileName)$/;"	f	class:TeTinVertexSet
loadGeoFilesInfo	drivers/DXF/TeDXFDriverFactory.cpp	/^void TeDXFDriverFactory::loadGeoFilesInfo()$/;"	f	class:TeDXFDriverFactory
loadGeoFilesInfo	drivers/gdal/TeOGRDriverFactory.cpp	/^void TeOGRDriverFactory::loadGeoFilesInfo()$/;"	f	class:TeOGRDriverFactory
loadGeoFilesInfo	drivers/shapelib/TeSHPDriverFactory.cpp	/^void TeSHPDriverFactory::loadGeoFilesInfo()$/;"	f	class:TeSHPDriverFactory
loadGeom	kernel/TeQuerierParams.h	/^	virtual bool loadGeom ()  { return	loadGeometries_; }$/;"	f	class:TeQuerierParams
loadGeometries	drivers/shapelib/TeQuerierSHP.cpp	/^TeQuerierSHP::loadGeometries(TeMultiGeometry&) $/;"	f	class:TeQuerierSHP
loadGeometries	drivers/shapelib/TeQuerierSHP.cpp	/^TeQuerierSHP::loadGeometries(TeMultiGeometry&, unsigned int&) $/;"	f	class:TeQuerierSHP
loadGeometries	kernel/TeQuerier.cpp	/^TeQuerier::loadGeometries(TeMultiGeometry& geometries)$/;"	f	class:TeQuerier
loadGeometries	kernel/TeQuerier.cpp	/^TeQuerier::loadGeometries(TeMultiGeometry& geometries, unsigned int& index)$/;"	f	class:TeQuerier
loadGeometries	kernel/TeQuerierDB.cpp	/^TeQuerierDB::loadGeometries(TeMultiGeometry& geometries) $/;"	f	class:TeQuerierDB
loadGeometries	kernel/TeQuerierDB.cpp	/^TeQuerierDB::loadGeometries(TeMultiGeometry& geometries, unsigned int& index)$/;"	f	class:TeQuerierDB
loadGeometries_	kernel/TeQuerierParams.h	/^	bool					loadGeometries_;		\/\/!< if the querier must load the geometries of each instance$/;"	m	class:TeQuerierParams
loadGeometrySet	kernel/TeLayer.cpp	/^TeLayer::loadGeometrySet (const string& geoid, TeCellSet &cs)$/;"	f	class:TeLayer
loadGeometrySet	kernel/TeLayer.cpp	/^TeLayer::loadGeometrySet (const string& geoid, TeLineSet &ls)$/;"	f	class:TeLayer
loadGeometrySet	kernel/TeLayer.cpp	/^TeLayer::loadGeometrySet (const string& geoid, TePointSet &ps)$/;"	f	class:TeLayer
loadGeometrySet	kernel/TeLayer.cpp	/^TeLayer::loadGeometrySet (const string& geoid, TeTextSet &ts)$/;"	f	class:TeLayer
loadGeometrySet	kernel/TeLayer.cpp	/^TeLayer::loadGeometrySet(const string& geoid, TePolygonSet &ps)$/;"	f	class:TeLayer
loadHistogram	kernel/TeGraph.cpp	/^void TeGraphPlot::loadHistogram (TeLegendEntryVector& sv, const string& label)$/;"	f	class:TeGraphPlot
loadImage	image_processing/TePDICorrelationMatching.cpp	/^bool TePDICorrelationMatching::loadImage( const TeThreadParameters& params )$/;"	f	class:TePDICorrelationMatching
loadImage	image_processing/TePDIMIMatching.cpp	/^bool TePDIMIMatching::loadImage( const TeThreadParameters& params )$/;"	f	class:TePDIMIMatching
loadImage	image_processing/TePDIMMIOMatching.cpp	/^void TePDIMMIOMatching::loadImage( void * paramsPtr )$/;"	f	class:TePDIMMIOMatching
loadImage	image_processing/TePDIOFMatching.cpp	/^bool TePDIOFMatching::loadImage( const TeThreadParameters& params )$/;"	f	class:TePDIOFMatching
loadInstances	drivers/shapelib/TeQuerierSHP.cpp	/^TeQuerierSHP::loadInstances(TeTSEntry* ) $/;"	f	class:TeQuerierSHP
loadInstances	kernel/TeQuerier.cpp	/^TeQuerier::loadInstances(int frame)$/;"	f	class:TeQuerier
loadInstances	kernel/TeQuerierDBStr1.cpp	/^TeQuerierDBStr1::loadInstances(TeTSEntry* ent)$/;"	f	class:TeQuerierDBStr1
loadInstances	kernel/TeQuerierDBStr2.cpp	/^TeQuerierDBStr2::loadInstances(TeTSEntry* ent) $/;"	f	class:TeQuerierDBStr2
loadInstances	kernel/TeQuerierDBStr3.cpp	/^TeQuerierDBStr3::loadInstances(TeTSEntry* ent) $/;"	f	class:TeQuerierDBStr3
loadKernelParams	drivers/qt/TeApplicationUtils.cpp	/^bool loadKernelParams (TeDatabase* db, int layerId, TeKernelParams& KernelPar)$/;"	f
loadKernelParams	drivers/qt/TeApplicationUtils.cpp	/^bool loadKernelParams (TeDatabase* db, int supThemeId, const string& supTableName, const string& supAttrName, TeKernelParams& KernelPar)$/;"	f
loadLayer	kernel/TeDatabase.cpp	/^TeDatabase::loadLayer(TeLayer* layer, const bool& loadAttrList)$/;"	f	class:TeDatabase
loadLayerRaster	kernel/TeDatabase.cpp	/^TeDatabase::loadLayerRaster(int layerId, const string& objectId, const char& mode)$/;"	f	class:TeDatabase
loadLayerSet	kernel/TeDatabase.cpp	/^TeDatabase::loadLayerSet(const bool& loadAttrList)$/;"	f	class:TeDatabase
loadLayerTable	kernel/TeDatabase.cpp	/^TeDatabase::loadLayerTable(TeLayer* layer, const bool& loadAttrList)$/;"	f	class:TeDatabase
loadLayerTables	kernel/TeLayer.cpp	/^TeLayer::loadLayerTables() $/;"	f	class:TeLayer
loadLegend	kernel/TeDatabase.cpp	/^TeDatabase::loadLegend (TeAbstractTheme *theme, const string& visualType)$/;"	f	class:TeDatabase
loadLineSet	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::loadLineSet (const string& table, TeBox &bb, TeLineSet &linSet)$/;"	f	class:TeOracleSpatial
loadLineSet	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::loadLineSet (const string& table, TeBox &box)$/;"	f	class:TeOracleSpatial
loadLineSet	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::loadLineSet (const string& table, const string& geoid, TeLineSet &ls)$/;"	f	class:TeOracleSpatial
loadLineSet	drivers/PostgreSQL/TePostGIS.cpp	/^TeDatabasePortal* TePostGIS::loadLineSet(const string& table, TeBox& box)$/;"	f	class:TePostGIS
loadLineSet	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::loadLineSet(const string& table, TeBox& box, TeLineSet& linSet)$/;"	f	class:TePostGIS
loadLineSet	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::loadLineSet(const string& table, const string& geoid, TeLineSet& ls)$/;"	f	class:TePostGIS
loadLineSet	drivers/PostgreSQL/TePostgreSQL.cpp	/^TeDatabasePortal* TePostgreSQL::loadLineSet(const string& table, TeBox& box)$/;"	f	class:TePostgreSQL
loadLineSet	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::loadLineSet(const string& table, TeBox& box, TeLineSet& linSet)$/;"	f	class:TePostgreSQL
loadLineSet	kernel/TeDatabase.cpp	/^TeDatabase::loadLineSet (const string& table, TeBox &bb, TeLineSet &linSet)$/;"	f	class:TeDatabase
loadLineSet	kernel/TeDatabase.cpp	/^TeDatabase::loadLineSet (const string& table, TeBox &box)$/;"	f	class:TeDatabase
loadLineSet	kernel/TeDatabase.cpp	/^TeDatabase::loadLineSet (const string& table, const string& geoid, TeLineSet &ls)$/;"	f	class:TeDatabase
loadLineSet	kernel/TeDatabase.cpp	/^TeDatabase::loadLineSet(TeTheme* theme, TeLineSet &ls)$/;"	f	class:TeDatabase
loadMetadata	kernel/TeExternalTheme.cpp	/^TeExternalTheme::loadMetadata(TeDatabase* db)$/;"	f	class:TeExternalTheme
loadMetadata	kernel/TeFileTheme.cpp	/^bool TeFileTheme::loadMetadata(TeDatabase* localDb)$/;"	f	class:TeFileTheme
loadMetadata	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::loadMetadata(TeDatabase* db)$/;"	f	class:TeSFSTheme
loadMetadata	kernel/TeTheme.h	/^	virtual bool loadMetadata(TeDatabase* ) { return true; } $/;"	f	class:TeTheme
loadNodeSet	kernel/TeDatabase.cpp	/^TeDatabase::loadNodeSet (const string& table, const string& geoid, TeNodeSet &ns)$/;"	f	class:TeDatabase
loadNodes	kernel/TeRTree.h	/^void TeRTree<DATATYPE, MAXNODES, MINNODES>::loadNodes(TeRTreeNodeType* n, TeRTreeNodeType* q, TePartitionVars& p) const$/;"	f	class:TeSAM::TeRTree
loadObjectLegendMap	kernel/TeExternalTheme.cpp	/^TeExternalTheme::loadObjectLegendMap()$/;"	f	class:TeExternalTheme
loadPie	kernel/TeGraph.cpp	/^void TeGraphPlot::loadPie (TeLegendEntryVector& sv, const string& label)$/;"	f	class:TeGraphPlot
loadPlugins	drivers/spl/PluginsManager.cpp	/^unsigned int PluginsManager::loadPlugins( const std::string& path )$/;"	f	class:PluginsManager
loadPointSet	kernel/TeDatabase.cpp	/^TeDatabase::loadPointSet (const string& table, TeBox &bb, TePointSet &ps)$/;"	f	class:TeDatabase
loadPointSet	kernel/TeDatabase.cpp	/^TeDatabase::loadPointSet (const string& table, const string& geoid, TePointSet &ps)$/;"	f	class:TeDatabase
loadPointSet	kernel/TeDatabase.cpp	/^TeDatabase::loadPointSet(TeTheme* theme, TePointSet &ps)$/;"	f	class:TeDatabase
loadPointSet	kernel/TeDatabase.cpp	/^TeDatabase::loadPointSet(const string& table, TeBox &box)$/;"	f	class:TeDatabase
loadPolygonSet	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::loadPolygonSet (const string& table, TeBox &box, TePolygonSet &ps)$/;"	f	class:TeOracleSpatial
loadPolygonSet	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::loadPolygonSet (const string& table, const string& geoid, TePolygonSet &ps)$/;"	f	class:TeOracleSpatial
loadPolygonSet	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::loadPolygonSet(TeTheme* theme, TePolygonSet &ps)$/;"	f	class:TeOracleSpatial
loadPolygonSet	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::loadPolygonSet(const string& table, TeBox &box)$/;"	f	class:TeOracleSpatial
loadPolygonSet	drivers/PostgreSQL/TePostGIS.cpp	/^TeDatabasePortal* TePostGIS::loadPolygonSet(const string& table, TeBox& box)$/;"	f	class:TePostGIS
loadPolygonSet	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::loadPolygonSet(TeTheme* theme, TePolygonSet& ps)$/;"	f	class:TePostGIS
loadPolygonSet	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::loadPolygonSet(const string& table, TeBox& box, TePolygonSet& ps)$/;"	f	class:TePostGIS
loadPolygonSet	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::loadPolygonSet(const string& table, const string& geoid, TePolygonSet& ps)$/;"	f	class:TePostGIS
loadPolygonSet	drivers/PostgreSQL/TePostgreSQL.cpp	/^TeDatabasePortal* TePostgreSQL::loadPolygonSet(const string& table, TeBox& box)$/;"	f	class:TePostgreSQL
loadPolygonSet	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::loadPolygonSet(const string& table, TeBox& box, TePolygonSet& ps)$/;"	f	class:TePostgreSQL
loadPolygonSet	kernel/TeDatabase.cpp	/^TeDatabase::loadPolygonSet (const string& table, TeBox &bb, TePolygonSet &polSet)$/;"	f	class:TeDatabase
loadPolygonSet	kernel/TeDatabase.cpp	/^TeDatabase::loadPolygonSet (const string& table, const string& geoid, TePolygonSet &ps)$/;"	f	class:TeDatabase
loadPolygonSet	kernel/TeDatabase.cpp	/^TeDatabase::loadPolygonSet(TeTheme* theme, TePolygonSet &ps)$/;"	f	class:TeDatabase
loadPolygonSet	kernel/TeDatabase.cpp	/^TeDatabase::loadPolygonSet(const string& table, TeBox &box)$/;"	f	class:TeDatabase
loadProject	kernel/TeDatabase.cpp	/^TeDatabase::loadProject(TeProject* project)$/;"	f	class:TeDatabase
loadProjectSet	kernel/TeDatabase.cpp	/^TeDatabase::loadProjectSet()$/;"	f	class:TeDatabase
loadProjection	kernel/TeDatabase.cpp	/^TeDatabase::loadProjection (int projId)$/;"	f	class:TeDatabase
loadProjectionFromSRSId	kernel/TeDatabase.cpp	/^TeProjection* TeDatabase::loadProjectionFromSRSId(int srsid)$/;"	f	class:TeDatabase
loadRaster	image_processing/TePDIUtils.cpp	/^  bool loadRaster( const std::string& fileName, $/;"	f	namespace:TePDIUtils
loadRasterLUT	kernel/TeDatabase.cpp	/^TeDatabase::loadRasterLUT(TeRasterParams* par)$/;"	f	class:TeDatabase
loadSetedAttrs	kernel/TeQuerierParams.h	/^	virtual vector<string>& loadSetedAttrs() { return loadAttrNamesSeted_;}$/;"	f	class:TeQuerierParams
loadSpectralBandsFromFile	image_processing/TePDIMixModelSpectralBandList.cpp	/^bool TePDIMixModelSpectralBandList::loadSpectralBandsFromFile(string filename)$/;"	f	class:TePDIMixModelSpectralBandList
loadStat3	drivers/SQLite/sqlite3/sqlite3.c	/^static int loadStat3(sqlite3 *db, const char *zDb){$/;"	f	file:
loadTIN	kernel/TeTin.cpp	/^TeTin::loadTIN(TeLayer* layer, TeDatabase* db)$/;"	f	class:TeTin
loadTable	kernel/TeDatabase.cpp	/^TeDatabase::loadTable(const string& tableName, TeTable &table)$/;"	f	class:TeDatabase
loadTableInfo	kernel/TeDatabase.cpp	/^TeDatabase::loadTableInfo(TeTable& table)$/;"	f	class:TeDatabase
loadTablesJoin	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::loadTablesJoin(const string& geomTable)$/;"	f	class:TeExternalTheme
loadTablesJoin	kernel/TeTheme.cpp	/^TeTheme::loadTablesJoin(const string& geomTable)  \/\/sqlGridFrom and sqlGridJoin$/;"	f	class:TeTheme
loadTextSet	kernel/TeDatabase.cpp	/^TeDatabase::loadTextSet (const string& table, const string& geoid, TeTextSet &ts)$/;"	f	class:TeDatabase
loadTheme	kernel/TeDatabase.cpp	/^TeDatabase::loadTheme (TeAbstractTheme* theme, const bool& loadAttrList, const string& visualType)$/;"	f	class:TeDatabase
loadThemeTable	kernel/TeDatabase.cpp	/^TeDatabase::loadThemeTable (TeTheme* theme, const bool& loadAttrList)$/;"	f	class:TeDatabase
loadThemeTables	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::loadThemeTables()$/;"	f	class:TeExternalTheme
loadThemeTables	kernel/TeTheme.cpp	/^TeTheme::loadThemeTables()$/;"	f	class:TeTheme
loadThemeTablesJoin	kernel/TeTheme.cpp	/^void TeTheme::loadThemeTablesJoin()  \/\/\/\/sqlJoin and sqlFrom$/;"	f	class:TeTheme
loadThemes	kernel/TeDatabase.cpp	/^TeDatabase::loadThemes(std::vector<TeAbstractTheme*>& vecThemes, const bool& loadAttrList, const std::string& userName, const bool& loadMetadata, const string& visualType)$/;"	f	class:TeDatabase
loadTimeFrameInstances	kernel/TeQuerierImpl.cpp	/^TeQuerierImpl::loadTimeFrameInstances(int frame)$/;"	f	class:TeQuerierImpl
loadTranslationFile	drivers/spl/PluginParameters.cpp	/^bool PluginParameters::loadTranslationFile( const PluginParameters&,$/;"	f	class:PluginParameters
loadTranslationFile	drivers/spl/PluginParameters.cpp	/^bool PluginParameters::loadTranslationFile( const std::string& filename ) const$/;"	f	class:PluginParameters
loadTranslationFileFPT	drivers/spl/PluginParameters.h	/^      typedef bool (*loadTranslationFileFPT)( $/;"	t	class:PluginParameters
loadTranslationFileFP_	drivers/spl/PluginParameters.h	/^      loadTranslationFileFPT loadTranslationFileFP_;   $/;"	m	class:PluginParameters
loadVersionStamp	kernel/TeDatabase.cpp	/^TeDatabase::loadVersionStamp(string& DBversion)$/;"	f	class:TeDatabase
loadView	kernel/TeDatabase.cpp	/^TeDatabase::loadView (TeView* view, const bool& loadAttrList, const string& visualType)$/;"	f	class:TeDatabase
loadViewSet	kernel/TeDatabase.cpp	/^TeDatabase::loadViewSet (const string& user, const bool& loadAttrList, const string& visualType)$/;"	f	class:TeDatabase
loadViewSetAndThemeGroups	utils/TeDatabaseUtils.cpp	/^bool loadViewSetAndThemeGroups(TeDatabase* db, const std::string& userName)$/;"	f
loadViewTree	kernel/TeDatabase.cpp	/^TeDatabase::loadViewTree(TeView* view, int id, const bool& loadAttrList, const string& visualType)$/;"	f	class:TeDatabase
load_all_attrs	kernel/TeBlockLoader.h	/^    bool load_all_attrs;$/;"	m	struct:__anon30
lobBuffer_	drivers/Oracle/TeOCICursor.h	/^	vector<unsigned char*>	lobBuffer_;			\/\/! vector of buffers to store blob$/;"	m	class:TeOCICursor
lobp	drivers/Oracle/OCI/include/occiData.h	/^    OCIBlobLocator *lobp; $/;"	m	class:oracle::occi::Blob
lobp	drivers/Oracle/OCI/include/occiData.h	/^    OCIClobLocator *lobp; $/;"	m	class:oracle::occi::Clob
local	drivers/SQLite/sqlite3/sqlite3.c	/^  winceLock local;        \/* Locks obtained by this instance of winFile *\/$/;"	m	struct:winFile	file:
localDb_	kernel/TeFileTheme.h	/^	TeDatabase*			localDb_;		\/\/ a pointer to the database that stores the theme$/;"	m	class:TeFileTheme
local_getline	drivers/SQLite/sqlite3/shell.c	/^static char *local_getline(char *zPrompt, FILE *in){$/;"	f	file:
local_ioerr	drivers/SQLite/sqlite3/sqlite3.c	/^static void local_ioerr(){$/;"	f	file:
localtime	drivers/SQLite/sqlite3/sqlite3.c	/^struct tm *__cdecl localtime(const time_t *t)$/;"	f
localtimeOffset	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3_int64 localtimeOffset($/;"	f	file:
locate	kernel/TePieBar.h	/^	bool locate(TeCoord2D pt, double delta)$/;"	f	class:TePieBar
locateBestFeaturesMatching	image_processing/TePDIOFMatching.cpp	/^bool TePDIOFMatching::locateBestFeaturesMatching( $/;"	f	class:TePDIOFMatching
locateCell	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::locateCell(const string& table, TeCoord2D &pt, TeCell& cell, const double& \/* tol *\/)$/;"	f	class:TeOracleSpatial
locateCell	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::locateCell(const string& table, TeCoord2D& pt, TeCell& c, const double& tol)$/;"	f	class:TePostGIS
locateCell	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::locateCell(const string& table, TeCoord2D& pt, TeCell& c, const double& tol)$/;"	f	class:TePostgreSQL
locateCell	kernel/TeDatabase.cpp	/^TeDatabase::locateCell (const string& table, TeCoord2D &pt, TeCell &cell, const double& \/* tol *\/)$/;"	f	class:TeDatabase
locateCell	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::locateCell(TeCoord2D &pt, TeCell &c, const double& tol)$/;"	f	class:TeExternalTheme
locateCell	kernel/TeFileTheme.cpp	/^bool TeFileTheme::locateCell(TeCoord2D&, TeCell&, const double&)$/;"	f	class:TeFileTheme
locateCell	kernel/TeLayer.cpp	/^TeLayer::locateCell (TeCoord2D &pt, TeCell &cell, const double& tol)$/;"	f	class:TeLayer
locateCell	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::locateCell(TeCoord2D &pt, TeCell &c, const double& tol)$/;"	f	class:TeSFSTheme
locateCell	kernel/TeTheme.cpp	/^TeTheme::locateCell (TeCoord2D &pt, TeCell &cell, const double&  tol)$/;"	f	class:TeTheme
locateFkeyIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static int locateFkeyIndex($/;"	f	file:
locateGraphicScale	drivers/qt/TeQtCanvas.cpp	/^bool TeQtCanvas::locateGraphicScale(const QPoint& p)$/;"	f	class:TeQtCanvas
locateLine	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::locateLine (const string& table, TeCoord2D &pt, TeLine2D& line, const double& tol)$/;"	f	class:TeOracleSpatial
locateLine	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::locateLine(const string& table, TeCoord2D &pt, TeLine2D &line, const double& tol)$/;"	f	class:TePostGIS
locateLine	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::locateLine(const string& table, TeCoord2D &pt, TeLine2D &line, const double& tol)$/;"	f	class:TePostgreSQL
locateLine	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::locateLine (const string& table, TeCoord2D &pt, TeLine2D &line, const double& tol)$/;"	f	class:TeSqlServerSpatial
locateLine	kernel/TeDatabase.cpp	/^TeDatabase::locateLine (const string& table, TeCoord2D &pt, TeLine2D &line, const double& tol)$/;"	f	class:TeDatabase
locateLine	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::locateLine(TeCoord2D &pt, TeLine2D &line, const double& tol)$/;"	f	class:TeExternalTheme
locateLine	kernel/TeFileTheme.cpp	/^bool TeFileTheme::locateLine(TeCoord2D& \/*pt*\/, TeLine2D& line, const double& \/*tol*\/)$/;"	f	class:TeFileTheme
locateLine	kernel/TeLayer.cpp	/^TeLayer::locateLine (TeCoord2D &pt, TeLine2D &line, const double& tol)$/;"	f	class:TeLayer
locateLine	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::locateLine(TeCoord2D &pt, TeLine2D &line, const double& tol)$/;"	f	class:TeSFSTheme
locateLine	kernel/TeTheme.cpp	/^TeTheme::locateLine (TeCoord2D &pt, TeLine2D &line, const double& tol)$/;"	f	class:TeTheme
locateLineSet	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::locateLineSet (const string& table, TeCoord2D &pt, TeLineSet &ls, const double& tol)$/;"	f	class:TeSqlServerSpatial
locateLineSet	kernel/TeDatabase.cpp	/^TeDatabase::locateLineSet (const string& table, TeCoord2D &pt, TeLineSet &ls, const double& tol)$/;"	f	class:TeDatabase
locatePieBar	drivers/qt/TeApplicationUtils.cpp	/^bool locatePieBar (TeDatabase* db, TeAppTheme* theme, TeCoord2D pt, double delta) $/;"	f
locatePoint	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::locatePoint (const string& table, TeCoord2D &pt, TePoint& point, const double& tol)$/;"	f	class:TeOracleSpatial
locatePoint	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::locatePoint(const string& table, TeCoord2D& pt, TePoint& point, const double& tol)$/;"	f	class:TePostGIS
locatePoint	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::locatePoint(const string& table, TeCoord2D& pt, TePoint& point, const double& tol)$/;"	f	class:TePostgreSQL
locatePoint	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::locatePoint (const string& table, TeCoord2D &pt, TePoint &point, const double& tol)$/;"	f	class:TeSqlServerSpatial
locatePoint	kernel/TeDatabase.cpp	/^TeDatabase::locatePoint (const string& table, TeCoord2D &pt, TePoint &point, const double& tol)$/;"	f	class:TeDatabase
locatePoint	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::locatePoint(TeCoord2D &pt, TePoint &point, const double& tol)$/;"	f	class:TeExternalTheme
locatePoint	kernel/TeFileTheme.cpp	/^bool TeFileTheme::locatePoint(TeCoord2D& \/*pt*\/, TePoint &point, const double& \/*tol*\/)$/;"	f	class:TeFileTheme
locatePoint	kernel/TeLayer.cpp	/^TeLayer::locatePoint (TeCoord2D &pt, TePoint &point, const double& tol)$/;"	f	class:TeLayer
locatePoint	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::locatePoint(TeCoord2D &pt, TePoint &point, const double& tol)$/;"	f	class:TeSFSTheme
locatePoint	kernel/TeTheme.cpp	/^TeTheme::locatePoint (TeCoord2D &pt, TePoint &point, const double& tol)$/;"	f	class:TeTheme
locatePointSet	kernel/TeDatabase.cpp	/^TeDatabase::locatePointSet (const string& table, TeCoord2D &pt, TePointSet &pointSet, const double& tol)$/;"	f	class:TeDatabase
locatePolygon	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::locatePolygon (const string& table, TeCoord2D &pt, TePolygon& polygon, const double& \/* tol *\/)$/;"	f	class:TeOracleSpatial
locatePolygon	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::locatePolygon(const string& table, TeCoord2D& pt, TePolygon& polygon, const double& tol)$/;"	f	class:TePostGIS
locatePolygon	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::locatePolygon(const string& table, TeCoord2D& pt, TePolygon& polygon, const double& tol)$/;"	f	class:TePostgreSQL
locatePolygon	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::locatePolygon (const string& table, TeCoord2D &pt, TePolygon &polygon, const double& tol)$/;"	f	class:TeSqlServerSpatial
locatePolygon	kernel/TeDatabase.cpp	/^TeDatabase::locatePolygon (const string& table, TeCoord2D &pt, TePolygon &polygon, const double& tol)$/;"	f	class:TeDatabase
locatePolygon	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::locatePolygon(TeCoord2D &pt, TePolygon &polygon, const double& tol)$/;"	f	class:TeExternalTheme
locatePolygon	kernel/TeFileTheme.cpp	/^bool TeFileTheme::locatePolygon(TeCoord2D &pt, TePolygon &polygon, const double& tol)$/;"	f	class:TeFileTheme
locatePolygon	kernel/TeLayer.cpp	/^TeLayer::locatePolygon (TeCoord2D &pt, TePolygon &polygon, const double& tol)$/;"	f	class:TeLayer
locatePolygon	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::locatePolygon(TeCoord2D &pt, TePolygon &polygon, const double& tol)$/;"	f	class:TeSFSTheme
locatePolygon	kernel/TeTheme.cpp	/^TeTheme::locatePolygon (TeCoord2D &pt, TePolygon &polygon, const double& tol)$/;"	f	class:TeTheme
locatePolygonSet	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::locatePolygonSet(const string& table, TeCoord2D &pt, double tol, TePolygonSet &polygons)$/;"	f	class:TePostGIS
locatePolygonSet	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::locatePolygonSet(const string& table, TeCoord2D &pt, double tol, TePolygonSet &polygons)$/;"	f	class:TePostgreSQL
locatePolygonSet	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::locatePolygonSet (const string& table, TeCoord2D &pt, double tol, TePolygonSet &polygons)$/;"	f	class:TeSqlServerSpatial
locatePolygonSet	kernel/TeDatabase.cpp	/^TeDatabase::locatePolygonSet (const string& table, TeCoord2D &pt, double tol, TePolygonSet &polygons)$/;"	f	class:TeDatabase
locatePolygonSet	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::locatePolygonSet(TeCoord2D &pt, double tol, TePolygonSet &polygons)$/;"	f	class:TeExternalTheme
locatePolygonSet	kernel/TeFileTheme.cpp	/^bool TeFileTheme::locatePolygonSet(TeCoord2D& \/*pt*\/, double \/*tol*\/, TePolygonSet& \/*polygons*\/)$/;"	f	class:TeFileTheme
locatePolygonSet	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::locatePolygonSet(TeCoord2D &pt, double tol, TePolygonSet &polygons)$/;"	f	class:TeSFSTheme
locatePolygonSet	kernel/TeTheme.cpp	/^TeTheme::locatePolygonSet (TeCoord2D &pt, double tol, TePolygonSet &polygons)$/;"	f	class:TeTheme
locateText	drivers/qt/TeAppTheme.cpp	/^bool TeAppTheme::locateText (TeCoord2D &pt, TeText &text, const double& tol)$/;"	f	class:TeAppTheme
locateText	kernel/TeDatabase.cpp	/^bool TeDatabase::locateText (const string& table, TeCoord2D &pt, TeText &text, const double& tol)$/;"	f	class:TeDatabase
locateText	kernel/TeLayer.cpp	/^TeLayer::locateText(TeCoord2D &pt, TeText &text, const double& tol)$/;"	f	class:TeLayer
locateTextSet	kernel/TeDatabase.cpp	/^TeDatabase::locateTextSet (const string& table, TeCoord2D &pt, TeTextSet& textSet, const double& tol)$/;"	f	class:TeDatabase
located	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::located(QPoint& p)$/;"	f	class:TeQtMultiTextEdit
located	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::located(QPoint& p)$/;"	f	class:TeQtTextEdit
location	kernel/TeComposite.h	/^	T&	location ()$/;"	f	class:TeSingle
location	kernel/TeComposite.h	/^	const T& location() const$/;"	f	class:TeSingle
location	kernel/TeGeometry.h	/^	T&	location ()$/;"	f	class:TeGeomSingle
location	kernel/TeGeometry.h	/^	const T& location () const$/;"	f	class:TeGeomSingle
locationCompleteName_	functions/TeAddressLocator.h	/^	string locationCompleteName_;		\/\/!< The complete location name$/;"	m	struct:TeAddressDescription
locationCompleteName_	functions/TeAddressLocator.h	/^	string locationCompleteName_;	\/\/!< The field name with composed location name$/;"	m	struct:TeAddressMetadata
locationLink_	functions/TeAddressLocator.h	/^	string locationLink_;			\/\/!< The value that unique identifies the location	$/;"	m	struct:TeAddress
locationLink_	functions/TeAddressLocator.h	/^	string locationLink_;			\/\/!< The value that unique identifies the location$/;"	m	struct:TeAddressDescription
locationNameColumnName_	functions/TeAddressLocator.h	/^	string locationNameColumnName_;			\/\/!< The field name with the location name$/;"	m	struct:TeGeocodeTableMetadata
locationName_	functions/TeAddressLocator.h	/^	string locationName_;			\/\/!< Location name$/;"	m	struct:TeAddress
locationName_	functions/TeAddressLocator.h	/^	string locationName_;			\/\/!< The field name with the location name$/;"	m	struct:TeAddressMetadata
locationName_	functions/TeAddressLocator.h	/^	string locationName_;			\/\/!< The location name$/;"	m	struct:TeAddressDescription
locationNumberColumnName_	functions/TeAddressLocator.h	/^	string locationNumberColumnName_;		\/\/!< The field name with the ocation number$/;"	m	struct:TeGeocodeTableMetadata
locationNumber_	functions/TeAddressLocator.h	/^	int locationNumber_;			\/\/!< Location number$/;"	m	struct:TeAddress
locationPrepositionColumnName_	functions/TeAddressLocator.h	/^	string locationPrepositionColumnName_;	\/\/!< The field name with the preposition used to form the location name (Dos, Das, De, $/;"	m	struct:TeGeocodeTableMetadata
locationPreposition_	functions/TeAddressLocator.h	/^	string locationPreposition_;	\/\/!< Location preposition$/;"	m	struct:TeAddress
locationPreposition_	functions/TeAddressLocator.h	/^	string locationPreposition_;	\/\/!< The field name with the preposition used to form the location name (Dos, Das, De, $/;"	m	struct:TeAddressMetadata
locationPreposition_	functions/TeAddressLocator.h	/^	string locationPreposition_;	\/\/!< The preposition used to form the location name (Dos, Das, De, $/;"	m	struct:TeAddressDescription
locationTitleColumnName_	functions/TeAddressLocator.h	/^	string locationTitleColumnName_;		\/\/!< The field name with location title (Dr., Dra., PRF ...)$/;"	m	struct:TeGeocodeTableMetadata
locationTitle_	functions/TeAddressLocator.h	/^	string locationTitle_;			\/\/!< Location title$/;"	m	struct:TeAddress
locationTitle_	functions/TeAddressLocator.h	/^	string locationTitle_;			\/\/!< The field name with location title (Dr., Dra., PRF ...)$/;"	m	struct:TeAddressMetadata
locationTitle_	functions/TeAddressLocator.h	/^	string locationTitle_;			\/\/!< The location title (Dr., Dra., PRF ...)$/;"	m	struct:TeAddressDescription
locationTypeColumnName_	functions/TeAddressLocator.h	/^	string locationTypeColumnName_;			\/\/!< The field name with location type (Av., Rua, R., Pr., Jz., Pres. ...)$/;"	m	struct:TeGeocodeTableMetadata
locationType_	functions/TeAddressLocator.h	/^	string locationType_;			\/\/!< Location type$/;"	m	struct:TeAddress
locationType_	functions/TeAddressLocator.h	/^	string locationType_;			\/\/!< The field name with location type (Av., Rua, R., Pr., Jz., Pres. ...)$/;"	m	struct:TeAddressMetadata
locationType_	functions/TeAddressLocator.h	/^	string locationType_;			\/\/!< The location type (Av., Rua, R., Pr., Jz., Pres. ...)$/;"	m	struct:TeAddressDescription
lock	drivers/GL/glcore.h	/^    void (*lock)(__GLdrawableBuffer *buf, __GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawableBufferRec
lock	drivers/GL/glcore.h	/^    void *lock;$/;"	m	struct:__GLdrawablePrivateRec
lock	drivers/GL/internal/glcore.h	/^    void (*lock)(__GLdrawableBuffer *buf, __GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawableBufferRec
lock	drivers/GL/internal/glcore.h	/^    void *lock;$/;"	m	struct:__GLdrawablePrivateRec
lock	drivers/SQLite/sqlite3/sqlite3.c	/^  BtLock lock;       \/* Object used to lock page 1 *\/$/;"	m	struct:Btree	file:
lock	kernel/TeMutex.h	/^      inline void lock()$/;"	f	class:TeMutex
lockBtree	drivers/SQLite/sqlite3/sqlite3.c	/^static int lockBtree(BtShared *pBt){$/;"	f	file:
lockBtreeMutex	drivers/SQLite/sqlite3/sqlite3.c	/^static void lockBtreeMutex(Btree *p){$/;"	f	file:
lockDP	drivers/GL/glcore.h	/^    void (*lockDP)(__GLdrawablePrivate *glPriv, __GLcontext *gc);$/;"	m	struct:__GLdrawablePrivateRec
lockDP	drivers/GL/internal/glcore.h	/^    void (*lockDP)(__GLdrawablePrivate *glPriv, __GLcontext *gc);$/;"	m	struct:__GLdrawablePrivateRec
lockError	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 lockError;              \/* True if a locking error has occurred *\/$/;"	m	struct:Wal	file:
lockFile	drivers/GL/glcore.h	/^    char *lockFile[10];$/;"	m	struct:__GLdrawablePrivateRec
lockFile	drivers/GL/internal/glcore.h	/^    char *lockFile[10];$/;"	m	struct:__GLdrawablePrivateRec
lockLine	drivers/GL/glcore.h	/^    int lockLine[10];$/;"	m	struct:__GLdrawablePrivateRec
lockLine	drivers/GL/internal/glcore.h	/^    int lockLine[10];$/;"	m	struct:__GLdrawablePrivateRec
lockMask	drivers/SQLite/sqlite3/sqlite3.c	/^  yDbMask lockMask;       \/* Subset of btreeMask that requires a lock *\/$/;"	m	struct:Vdbe	file:
lockOption	drivers/Oracle/OCI/include/occiObjects.h	/^  LockOptions lockOption;$/;"	m	class:oracle::occi::RefImpl
lockProxy	drivers/SQLite/sqlite3/sqlite3.c	/^  unixFile *lockProxy;         \/* Open proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockProxyPath	drivers/SQLite/sqlite3/sqlite3.c	/^  char *lockProxyPath;         \/* Name of the proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockRefCount	drivers/GL/glcore.h	/^    int lockRefCount;$/;"	m	struct:__GLdrawablePrivateRec
lockRefCount	drivers/GL/internal/glcore.h	/^    int lockRefCount;$/;"	m	struct:__GLdrawablePrivateRec
lockTrace	drivers/SQLite/sqlite3/sqlite3.c	/^static int lockTrace(int fd, int op, struct flock *p){$/;"	f	file:
lock_	drivers/GTM/TeGTM.h	/^	unsigned char lock_, view_, reserva1_;$/;"	m	class:TeGTMLayers
lock_	image_processing/TePDIPIManagerGlobalSettings.hpp	/^      TeMutex lock_;$/;"	m	class:TePDIPIManagerGlobalSettings
lock_instance_	kernel/TeCommunicator.h	/^      mutable TeMutex lock_instance_;      $/;"	m	class:TeCommunicator
lock_instance_	kernel/TeMultiContainer.h	/^      mutable TeMutex lock_instance_;      $/;"	m	class:TeMultiContainer
locked	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 locked;         \/* True if db currently has pBt locked *\/$/;"	m	struct:Btree	file:
lockingContext	drivers/SQLite/sqlite3/sqlite3.c	/^  void *lockingContext;               \/* Locking style specific state *\/$/;"	m	struct:unixFile	file:
locktype	drivers/SQLite/sqlite3/sqlite3.c	/^  int locktype;             \/* Type of lock currently held on this file *\/$/;"	m	struct:os2File	file:
locktype	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 locktype;            \/* Type of lock currently held on this file *\/$/;"	m	struct:winFile	file:
log	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*log)(int,const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
log	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void (*log)(int,const char*,...);$/;"	m	struct:sqlite3_api_routines
logBadConnection	drivers/SQLite/sqlite3/sqlite3.c	/^static void logBadConnection(const char *zType){$/;"	f	file:
logFile_	kernel/TeErrorLog.h	/^    TeAsciiFile* logFile_;$/;"	m	class:TeErrorLog
logIoerr	drivers/SQLite/sqlite3/sqlite3.c	/^static void logIoerr(int nRetry){$/;"	f	file:
lon0	kernel/TeProjection.h	/^	double	lon0() { return GPlon0;	}$/;"	f	class:TeProjection
lon0	kernel/TeProjection.h	/^        double	lon0;	     \/\/!< Longitude of origin (rad)$/;"	m	struct:TeProjectionParams
long_nzttIdentityDesc	drivers/Oracle/OCI/include/nzt.h	/^   text *long_nzttIdentityDesc;           \/* Longer description *\/$/;"	m	struct:nzttIdentityDesc
long_nzttPersonaDesc	drivers/Oracle/OCI/include/nzt.h	/^   text *long_nzttPersonaDesc;            \/* Longer persona description *\/$/;"	m	struct:nzttPersonaDesc
longitude_	drivers/GTM/TeGTM.h	/^	double latitude_, longitude_;$/;"	m	class:TeGTMRoutes
longitude_	drivers/GTM/TeGTM.h	/^	double latitude_, longitude_;$/;"	m	class:TeGTMTrackLogs
longitude_	drivers/GTM/TeGTM.h	/^	double latitude_, longitude_;$/;"	m	class:TeGTMWaypoints
longlen_nzttIdentityDesc	drivers/Oracle/OCI/include/nzt.h	/^   ub4 longlen_nzttIdentityDesc;       \/* Length of longer description *\/$/;"	m	struct:nzttIdentityDesc
longlen_nzttPersonaDesc	drivers/Oracle/OCI/include/nzt.h	/^   ub4 longlen_nzttPersonaDesc;        \/* Length of longer description*\/$/;"	m	struct:nzttPersonaDesc
lookaside	drivers/SQLite/sqlite3/sqlite3.c	/^  Lookaside lookaside;          \/* Lookaside malloc configuration *\/$/;"	m	struct:sqlite3	file:
lookupName	drivers/SQLite/sqlite3/sqlite3.c	/^static int lookupName($/;"	f	file:
loseCurrent	drivers/GL/glcore.h	/^    GLboolean (*loseCurrent)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
loseCurrent	drivers/GL/internal/glcore.h	/^    GLboolean (*loseCurrent)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
lowerFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void lowerFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
lowerLeft	kernel/TeBox.h	/^	TeCoord2D lowerLeft() const $/;"	f	struct:TeBox
lowerLeftResolutionSize	kernel/TeRasterParams.cpp	/^TeRasterParams::lowerLeftResolutionSize (double left, double lower, $/;"	f	class:TeRasterParams
lowerlimit	image_processing/TePDIMixModelSpectralBand.hpp	/^		double	lowerlimit;$/;"	m	class:TePDIMixModelSpectralBand
lrNoWait	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TLR {lrWait, lrNoWait};$/;"	e	enum:IBPP::TLR
lrWait	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TLR {lrWait, lrNoWait};$/;"	e	enum:IBPP::TLR
lru	drivers/SQLite/sqlite3/sqlite3.c	/^    int lru;              \/* Least recently used entry has the smallest value *\/$/;"	m	struct:Parse::yColCache	file:
lu	image_processing/TePDICluster.hpp	/^    TeMatrix lu;$/;"	m	class:TePDICluster
lutClassName_	kernel/TeRasterParams.h	/^	vector<string> lutClassName_;  	\/\/!< class name$/;"	m	class:TeRasterParams
lutName	kernel/TeRasterParams.h	/^	const string& lutName() $/;"	f	class:TeRasterParams
lutName_	kernel/TeRasterParams.h	/^	string	lutName_;		\/\/!< name of a lut table associated to this raster$/;"	m	class:TeRasterParams
lutSize_	kernel/TeRasterTransform.h	/^	int lutSize_;$/;"	m	class:TeRasterTransform
lutTable_	kernel/TeRasterTransform.h	/^	std::string lutTable_;$/;"	m	class:TeRasterTransform
lutb_	kernel/TeRasterParams.h	/^	vector<unsigned short> lutb_;  	\/\/!< blue pallete$/;"	m	class:TeRasterParams
lutb_	kernel/TeRasterTransform.h	/^	vector<unsigned char> lutb_;$/;"	m	class:TeRasterTransform
lutg_	kernel/TeRasterParams.h	/^	vector<unsigned short> lutg_;  	\/\/!< green pallete$/;"	m	class:TeRasterParams
lutg_	kernel/TeRasterTransform.h	/^	vector<unsigned char> lutg_;$/;"	m	class:TeRasterTransform
lutr_	kernel/TeRasterParams.h	/^	vector<unsigned short> lutr_;  	\/\/!< red pallete$/;"	m	class:TeRasterParams
lutr_	kernel/TeRasterTransform.h	/^	vector<unsigned char> lutr_;$/;"	m	class:TeRasterTransform
lx1_	drivers/qt/TeQtCanvas.h	/^	int		lx1_;$/;"	m	class:TeQtCanvas
lx2_	drivers/qt/TeQtCanvas.h	/^	int		lx2_;$/;"	m	class:TeQtCanvas
ly1_	drivers/qt/TeQtCanvas.h	/^	int		ly1_;$/;"	m	class:TeQtCanvas
ly2_	drivers/qt/TeQtCanvas.h	/^	int		ly2_;$/;"	m	class:TeQtCanvas
m	drivers/SQLite/sqlite3/sqlite3.c	/^  int h, m;          \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
m	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mem_methods m;            \/* Low-level memory allocation interface *\/$/;"	m	struct:Sqlite3Config	file:
m	utils/mtrand.h	/^  static const int m = 397; \/\/ compile time constants$/;"	m	class:MTRand_int32
mAlloc	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mAlloc;						\/\/ Its allocated size$/;"	m	class:ibpp_internals::TPB
mAlloc	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mAlloc;					\/\/ Its allocated size in bytes$/;"	m	class:ibpp_internals::DPB
mAlloc	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mAlloc;					\/\/ Its allocated size in bytes$/;"	m	class:ibpp_internals::SPB
mArrays	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<ArrayImpl*> mArrays;			\/\/ Tableau de Array*$/;"	m	class:ibpp_internals::TransactionImpl
mArrays	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<ArrayImpl*> mArrays;		\/\/ Table of Array*$/;"	m	class:ibpp_internals::DatabaseImpl
mBlobs	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<BlobImpl*> mBlobs;				\/\/ Tableau de IBlob*$/;"	m	class:ibpp_internals::TransactionImpl
mBlobs	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<BlobImpl*> mBlobs;			\/\/ Table of Blob*$/;"	m	class:ibpp_internals::DatabaseImpl
mBools	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<char> mBools;		\/\/ Temporary storage for Bools$/;"	m	class:ibpp_internals::RowImpl
mBuffer	drivers/Firebird/ibpp/core/_ibpp.h	/^	char* mBuffer;					\/\/ Dynamically allocated TPB structure$/;"	m	class:ibpp_internals::TPB
mBuffer	drivers/Firebird/ibpp/core/_ibpp.h	/^	char* mBuffer;				\/\/ Dynamically allocated DPB structure$/;"	m	class:ibpp_internals::DPB
mBuffer	drivers/Firebird/ibpp/core/_ibpp.h	/^	char* mBuffer;				\/\/ Dynamically allocated SPB structure$/;"	m	class:ibpp_internals::SPB
mBuffer	drivers/Firebird/ibpp/core/_ibpp.h	/^	char* mBuffer;$/;"	m	class:ibpp_internals::RB
mBuffer	drivers/Firebird/ibpp/core/_ibpp.h	/^	void*				mBuffer;		\/\/ Buffer for native data$/;"	m	class:ibpp_internals::ArrayImpl
mBufferSize	drivers/Firebird/ibpp/core/_ibpp.h	/^	int					mBufferSize;	\/\/ Size of this buffer in bytes$/;"	m	class:ibpp_internals::ArrayImpl
mCharSet	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::string mCharSet;	  	\/\/ Character Set used for the connection$/;"	m	class:ibpp_internals::DatabaseImpl
mContext	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::string mContext; 			\/\/ Exception context ("IDatabase::Drop")$/;"	m	class:ibpp_internals::ExceptionBase
mCreateParams	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::string mCreateParams;	\/\/ Other parameters (creation only)$/;"	m	class:ibpp_internals::DatabaseImpl
mCursorOpened	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool mCursorOpened;			\/\/ dsql_set_cursor_name was called$/;"	m	class:ibpp_internals::StatementImpl
mDBKey	drivers/Firebird/ibpp/core/ibpp.h	/^		std::string mDBKey;			\/\/ Stores the binary DBKey$/;"	m	class:IBPP::DBKey
mDatabase	drivers/Firebird/ibpp/core/_ibpp.h	/^	DatabaseImpl*  			mDatabase;		\/\/ Belongs to this database$/;"	m	class:ibpp_internals::BlobImpl
mDatabase	drivers/Firebird/ibpp/core/_ibpp.h	/^	DatabaseImpl*  		mDatabase;		\/\/ Database attach�e$/;"	m	class:ibpp_internals::ArrayImpl
mDatabase	drivers/Firebird/ibpp/core/_ibpp.h	/^	DatabaseImpl* mDatabase;		\/\/ Attached database$/;"	m	class:ibpp_internals::StatementImpl
mDatabase	drivers/Firebird/ibpp/core/_ibpp.h	/^	DatabaseImpl* mDatabase;		\/\/ Related Database (important for Blobs, ...)$/;"	m	class:ibpp_internals::RowImpl
mDatabase	drivers/Firebird/ibpp/core/_ibpp.h	/^	DatabaseImpl* mDatabase;$/;"	m	class:ibpp_internals::EventsImpl
mDatabaseName	drivers/Firebird/ibpp/core/_ibpp.h	/^    std::string mDatabaseName;	\/\/ Database name (path\/file)$/;"	m	class:ibpp_internals::DatabaseImpl
mDatabases	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<DatabaseImpl*> mDatabases;   	\/\/ Tableau de IDatabase*$/;"	m	class:ibpp_internals::TransactionImpl
mDate	drivers/Firebird/ibpp/core/ibpp.h	/^		int mDate;	\/\/ The date : 1 == 1 Jan 1900$/;"	m	class:IBPP::Date
mDesc	drivers/Firebird/ibpp/core/_ibpp.h	/^	ISC_ARRAY_DESC		mDesc;$/;"	m	class:ibpp_internals::ArrayImpl
mDescrArea	drivers/Firebird/ibpp/core/_ibpp.h	/^	XSQLDA* mDescrArea;				\/\/ XSQLDA descriptor itself$/;"	m	class:ibpp_internals::RowImpl
mDescribed	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool				mDescribed;$/;"	m	class:ibpp_internals::ArrayImpl
mDialect	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mDialect;							\/\/ 1 if IB5, 1 or 3 if IB6\/FB1$/;"	m	class:ibpp_internals::DatabaseImpl
mDialect	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mDialect;					\/\/ Related database dialect$/;"	m	class:ibpp_internals::RowImpl
mElemCount	drivers/Firebird/ibpp/core/_ibpp.h	/^	int					mElemCount;		\/\/ Count of elements in this array$/;"	m	class:ibpp_internals::ArrayImpl
mElemSize	drivers/Firebird/ibpp/core/_ibpp.h	/^	int					mElemSize;		\/\/ Size of an element in the buffer$/;"	m	class:ibpp_internals::ArrayImpl
mEngineCode	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mEngineCode;$/;"	m	class:ibpp_internals::SQLExceptionImpl
mEventBuffer	drivers/Firebird/ibpp/core/_ibpp.h	/^	Buffer mEventBuffer;$/;"	m	class:ibpp_internals::EventsImpl
mEvents	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<EventsImpl*> mEvents;		\/\/ Table of Events*$/;"	m	class:ibpp_internals::DatabaseImpl
mFila	stat/filaDouble.h	/^    Fila_ptr mFila;$/;"	m	class:TFilaDouble
mFila	stat/filaInt.h	/^    Fila_ptr mFila;$/;"	m	class:TFilaInt
mFila	stat/filaR.h	/^  Fila_ptr mFila;$/;"	m	class:TFilaR
mFloats	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<float> mFloats;	 	\/\/ Temporary storage for Floats$/;"	m	class:ibpp_internals::RowImpl
mGDSVersion	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mGDSVersion; 		\/\/ Version of the GDS32.DLL (50 for 5.0, 60 for 6.0)$/;"	m	struct:ibpp_internals::GDS
mHandle	drivers/Firebird/ibpp/core/_ibpp.h	/^	HMODULE mHandle;			\/\/ The GDS32.DLL HMODULE$/;"	m	struct:ibpp_internals::GDS
mHandle	drivers/Firebird/ibpp/core/_ibpp.h	/^	isc_blob_handle			mHandle;$/;"	m	class:ibpp_internals::BlobImpl
mHandle	drivers/Firebird/ibpp/core/_ibpp.h	/^	isc_stmt_handle mHandle;	\/\/ Statement Handle$/;"	m	class:ibpp_internals::StatementImpl
mHandle	drivers/Firebird/ibpp/core/_ibpp.h	/^    isc_db_handle mHandle;		\/\/ InterBase API Session Handle$/;"	m	class:ibpp_internals::DatabaseImpl
mHandle	drivers/Firebird/ibpp/core/_ibpp.h	/^    isc_svc_handle mHandle;		\/\/ InterBase API Service Handle$/;"	m	class:ibpp_internals::ServiceImpl
mHandle	drivers/Firebird/ibpp/core/_ibpp.h	/^    isc_tr_handle mHandle;			\/\/ Transaction InterBase$/;"	m	class:ibpp_internals::TransactionImpl
mId	drivers/Firebird/ibpp/core/_ibpp.h	/^	ISC_LONG mId;			\/\/ Firebird internal Id of these events$/;"	m	class:ibpp_internals::EventsImpl
mId	drivers/Firebird/ibpp/core/_ibpp.h	/^	ISC_QUAD				mId;$/;"	m	class:ibpp_internals::BlobImpl
mId	drivers/Firebird/ibpp/core/_ibpp.h	/^	ISC_QUAD			mId;$/;"	m	class:ibpp_internals::ArrayImpl
mIdAssigned	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool					mIdAssigned;$/;"	m	class:ibpp_internals::BlobImpl
mIdAssigned	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool				mIdAssigned;$/;"	m	class:ibpp_internals::ArrayImpl
mInRow	drivers/Firebird/ibpp/core/_ibpp.h	/^	RowImpl* mInRow;$/;"	m	class:ibpp_internals::StatementImpl
mInt16s	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<int16_t> mInt16s;	\/\/ Temporary storage for 16 bits$/;"	m	class:ibpp_internals::RowImpl
mInt32s	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<int32_t> mInt32s;	\/\/ Temporary storage for 32 bits$/;"	m	class:ibpp_internals::RowImpl
mInt64s	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<int64_t> mInt64s;	\/\/ Temporary storage for 64 bits$/;"	m	class:ibpp_internals::RowImpl
mIt	drivers/Firebird/ibpp/core/_ibpp.h	/^	It mIt;$/;"	m	struct:ibpp_internals::EventBufferIterator
mMessage	drivers/Firebird/ibpp/core/_ibpp.h	/^	mutable std::string mMessage;$/;"	m	class:ibpp_internals::IBS
mNumerics	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<double> mNumerics;	\/\/ Temporary storage for Numerics$/;"	m	class:ibpp_internals::RowImpl
mObject	drivers/Firebird/ibpp/core/ibpp.h	/^		T* mObject;$/;"	m	class:IBPP::Ptr
mObjectReferences	drivers/Firebird/ibpp/core/_ibpp.h	/^	ObjRefs mObjectReferences;$/;"	m	class:ibpp_internals::EventsImpl
mOutRow	drivers/Firebird/ibpp/core/_ibpp.h	/^	RowImpl* mOutRow;$/;"	m	class:ibpp_internals::StatementImpl
mQueued	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool mQueued;			\/\/ Has isc_que_events() been called?$/;"	m	class:ibpp_internals::EventsImpl
mReady	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool mReady;$/;"	m	struct:ibpp_internals::GDS
mRefCount	drivers/Firebird/ibpp/core/_ibpp.h	/^	int					mRefCount;		\/\/ Reference counter$/;"	m	class:ibpp_internals::ArrayImpl
mRefCount	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mRefCount;					\/\/ Reference counter$/;"	m	class:ibpp_internals::RowImpl
mRefCount	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mRefCount;					\/\/ Reference counter$/;"	m	class:ibpp_internals::TransactionImpl
mRefCount	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mRefCount;				\/\/ Reference counter$/;"	m	class:ibpp_internals::DatabaseImpl
mRefCount	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mRefCount;				\/\/ Reference counter$/;"	m	class:ibpp_internals::ServiceImpl
mRefCount	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mRefCount;				\/\/ Reference counter$/;"	m	class:ibpp_internals::StatementImpl
mRefCount	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mRefCount;		\/\/ Reference counter$/;"	m	class:ibpp_internals::EventsImpl
mRefCount	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mRefCount;$/;"	m	class:ibpp_internals::BlobImpl
mResultSetAvailable	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool mResultSetAvailable;	\/\/ Executed and result set is available$/;"	m	class:ibpp_internals::StatementImpl
mResultsBuffer	drivers/Firebird/ibpp/core/_ibpp.h	/^	Buffer mResultsBuffer;$/;"	m	class:ibpp_internals::EventsImpl
mRoleName	drivers/Firebird/ibpp/core/_ibpp.h	/^    std::string mRoleName;	  	\/\/ Role used for the duration of the connection$/;"	m	class:ibpp_internals::DatabaseImpl
mSearchPaths	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::string mSearchPaths;	\/\/ Optional additional search paths$/;"	m	struct:ibpp_internals::GDS
mServerName	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::string mServerName;	\/\/ Nom du serveur$/;"	m	class:ibpp_internals::ServiceImpl
mServerName	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::string mServerName;	\/\/ Server name$/;"	m	class:ibpp_internals::DatabaseImpl
mSize	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mSize;						\/\/ Its used size in bytes$/;"	m	class:ibpp_internals::TPB
mSize	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mSize;  				\/\/ Its used size in bytes$/;"	m	class:ibpp_internals::DPB
mSize	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mSize;  				\/\/ Its used size in bytes$/;"	m	class:ibpp_internals::SPB
mSize	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mSize;$/;"	m	class:ibpp_internals::RB
mSql	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::string mSql;			\/\/ Last SQL statement prepared or executed$/;"	m	class:ibpp_internals::StatementImpl
mSqlCode	drivers/Firebird/ibpp/core/_ibpp.h	/^	int mSqlCode;$/;"	m	class:ibpp_internals::SQLExceptionImpl
mStatements	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<StatementImpl*> mStatements;	\/\/ Tableau de IStatement*$/;"	m	class:ibpp_internals::TransactionImpl
mStatements	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<StatementImpl*> mStatements;\/\/ Table of Statement*$/;"	m	class:ibpp_internals::DatabaseImpl
mString	drivers/Firebird/ibpp/core/ibpp.h	/^		mutable std::string mString;\/\/ String (temporary) representation of it$/;"	m	class:IBPP::DBKey
mStrings	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<std::string> mStrings;	\/\/ Temporary storage for Strings$/;"	m	class:ibpp_internals::RowImpl
mTPBs	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<TPB*> mTPBs;					\/\/ Tableau de TPB$/;"	m	class:ibpp_internals::TransactionImpl
mTime	drivers/Firebird/ibpp/core/ibpp.h	/^		int mTime;	\/\/ The time, in ten-thousandths of seconds since midnight$/;"	m	class:IBPP::Time
mTransaction	drivers/Firebird/ibpp/core/_ibpp.h	/^	TransactionImpl*		mTransaction;	\/\/ Belongs to this transaction$/;"	m	class:ibpp_internals::BlobImpl
mTransaction	drivers/Firebird/ibpp/core/_ibpp.h	/^	TransactionImpl*	mTransaction;	\/\/ Transaction attach�e$/;"	m	class:ibpp_internals::ArrayImpl
mTransaction	drivers/Firebird/ibpp/core/_ibpp.h	/^	TransactionImpl* mTransaction;	\/\/ Attached transaction$/;"	m	class:ibpp_internals::StatementImpl
mTransaction	drivers/Firebird/ibpp/core/_ibpp.h	/^	TransactionImpl* mTransaction;	\/\/ Related Transaction (same remark)$/;"	m	class:ibpp_internals::RowImpl
mTransactions	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<TransactionImpl*> mTransactions;\/\/ Table of Transaction*$/;"	m	class:ibpp_internals::DatabaseImpl
mTrapped	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool mTrapped;			\/\/ EventHandled() was called since last que_events()$/;"	m	class:ibpp_internals::EventsImpl
mType	drivers/Firebird/ibpp/core/_ibpp.h	/^	IBPP::STT mType;			\/\/ Type de requ�te$/;"	m	class:ibpp_internals::StatementImpl
mUpdated	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::vector<bool> mUpdated;		\/\/ Which columns where updated (Set()) ?$/;"	m	class:ibpp_internals::RowImpl
mUserName	drivers/Firebird/ibpp/core/_ibpp.h	/^    std::string mUserName;		\/\/ Nom de l'utilisateur$/;"	m	class:ibpp_internals::ServiceImpl
mUserName	drivers/Firebird/ibpp/core/_ibpp.h	/^    std::string mUserName;	  	\/\/ User name$/;"	m	class:ibpp_internals::DatabaseImpl
mUserPassword	drivers/Firebird/ibpp/core/_ibpp.h	/^    std::string mUserPassword;	\/\/ Mot de passe de l'utilisateur$/;"	m	class:ibpp_internals::ServiceImpl
mUserPassword	drivers/Firebird/ibpp/core/_ibpp.h	/^    std::string mUserPassword;	\/\/ User password$/;"	m	class:ibpp_internals::DatabaseImpl
mVector	drivers/Firebird/ibpp/core/_ibpp.h	/^	mutable ISC_STATUS mVector[20];$/;"	m	class:ibpp_internals::IBS
mWaitMessage	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::string mWaitMessage;	\/\/ Progress message returned by WaitMsg()$/;"	m	class:ibpp_internals::ServiceImpl
mWhat	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::string mWhat;				\/\/ Full formatted message$/;"	m	class:ibpp_internals::ExceptionBase
mWriteMode	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool					mWriteMode;$/;"	m	class:ibpp_internals::BlobImpl
m_access_	kernel/TeMutex.h	/^        HANDLE m_access_;$/;"	m	class:TeMutex
m_access_	kernel/TeMutex.h	/^        pthread_mutex_t m_access_;$/;"	m	class:TeMutex
m_access_	kernel/TeThreadSignal.h	/^        pthread_mutex_t m_access_;$/;"	m	class:TeThreadSignal
m_array_get_slice	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_array_get_slice*			m_array_get_slice;$/;"	m	struct:ibpp_internals::GDS
m_array_lookup_bounds	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_array_lookup_bounds*		m_array_lookup_bounds;$/;"	m	struct:ibpp_internals::GDS
m_array_put_slice	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_array_put_slice*			m_array_put_slice;$/;"	m	struct:ibpp_internals::GDS
m_attach_database	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_attach_database*			m_attach_database;$/;"	m	struct:ibpp_internals::GDS
m_blob_info	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_blob_info*				m_blob_info;$/;"	m	struct:ibpp_internals::GDS
m_buffer	kernel/TeDecoderFile.h	/^	LPVOID  m_buffer;			\/\/ Pointer to view of file mapped to memory$/;"	m	class:TeDecoderFile
m_cancel_blob	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_cancel_blob*				m_cancel_blob;$/;"	m	struct:ibpp_internals::GDS
m_cancel_events	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_cancel_events* 			m_cancel_events;$/;"	m	struct:ibpp_internals::GDS
m_close_blob	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_close_blob*				m_close_blob;$/;"	m	struct:ibpp_internals::GDS
m_commit_retaining	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_commit_retaining*			m_commit_retaining;$/;"	m	struct:ibpp_internals::GDS
m_commit_transaction	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_commit_transaction*		m_commit_transaction;$/;"	m	struct:ibpp_internals::GDS
m_create_blob2	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_create_blob2*				m_create_blob2;$/;"	m	struct:ibpp_internals::GDS
m_create_database	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_create_database*			m_create_database;$/;"	m	struct:ibpp_internals::GDS
m_database_info	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_database_info*			m_database_info;$/;"	m	struct:ibpp_internals::GDS
m_detach_database	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_detach_database*			m_detach_database;$/;"	m	struct:ibpp_internals::GDS
m_drop_database	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_drop_database*			m_drop_database;$/;"	m	struct:ibpp_internals::GDS
m_dsql_allocate_statement	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_dsql_allocate_statement*	m_dsql_allocate_statement;$/;"	m	struct:ibpp_internals::GDS
m_dsql_describe	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_dsql_describe*			m_dsql_describe;$/;"	m	struct:ibpp_internals::GDS
m_dsql_describe_bind	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_dsql_describe_bind*		m_dsql_describe_bind;$/;"	m	struct:ibpp_internals::GDS
m_dsql_execute	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_dsql_execute*				m_dsql_execute;$/;"	m	struct:ibpp_internals::GDS
m_dsql_execute2	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_dsql_execute2*			m_dsql_execute2;$/;"	m	struct:ibpp_internals::GDS
m_dsql_execute_immediate	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_dsql_execute_immediate*	m_dsql_execute_immediate;$/;"	m	struct:ibpp_internals::GDS
m_dsql_fetch	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_dsql_fetch*				m_dsql_fetch;$/;"	m	struct:ibpp_internals::GDS
m_dsql_free_statement	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_dsql_free_statement*		m_dsql_free_statement;$/;"	m	struct:ibpp_internals::GDS
m_dsql_prepare	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_dsql_prepare*				m_dsql_prepare;$/;"	m	struct:ibpp_internals::GDS
m_dsql_set_cursor_name	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_dsql_set_cursor_name*		m_dsql_set_cursor_name;$/;"	m	struct:ibpp_internals::GDS
m_dsql_sql_info	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_dsql_sql_info* 			m_dsql_sql_info;$/;"	m	struct:ibpp_internals::GDS
m_dwPosition	kernel/TeDecoderFile.h	/^	DWORD	m_dwPosition;		\/\/ Current file pointer position$/;"	m	class:TeDecoderFile
m_dwSize	kernel/TeDecoderFile.h	/^	DWORD	m_dwSize;			\/\/ File size in bytes$/;"	m	class:TeDecoderFile
m_dwSize	kernel/TeDecoderMemoryMap.h	/^	DWORD	m_dwSize;$/;"	m	class:TeDecoderMemoryMap
m_dwSize	kernel/TeDecoderMemoryMap.h	/^	off_t	m_dwSize;$/;"	m	class:TeDecoderMemoryMap
m_dwWordSize	kernel/TeDecoderFile.h	/^	DWORD	m_dwWordSize;		\/\/ word size in bytes$/;"	m	class:TeDecoderFile
m_eq_1	drivers/SQLite/sqlite3/sqlite3.c	/^static int m_eq_1(const char *z){$/;"	f	file:
m_get_segment	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_get_segment*				m_get_segment;$/;"	m	struct:ibpp_internals::GDS
m_gt_0	drivers/SQLite/sqlite3/sqlite3.c	/^static int m_gt_0(const char *z){$/;"	f	file:
m_gt_1	drivers/SQLite/sqlite3/sqlite3.c	/^static int m_gt_1(const char *z){$/;"	f	file:
m_hFile	kernel/TeDecoderFile.h	/^	HANDLE  m_hFile;			\/\/ Handle to file we're currently zapping$/;"	m	class:TeDecoderFile
m_hFile	kernel/TeDecoderMemoryMap.h	/^	HANDLE  m_hFile;			\/\/ Handle to file we're currently zapping$/;"	m	class:TeDecoderMemoryMap
m_hFile	kernel/TeDecoderMemoryMap.h	/^	int	m_hFile;			\/\/(fd) Handle to file we're currently zapping$/;"	m	class:TeDecoderMemoryMap
m_hFile_	kernel/TeMappedMemory.h	/^        HANDLE m_hFile_;$/;"	m	class:TeMappedMemory
m_hFile_	kernel/TeMappedMemory.h	/^        int m_hFile_;$/;"	m	class:TeMappedMemory
m_hMapping	kernel/TeDecoderMemoryMap.h	/^	HANDLE	m_hMapping;			\/\/ Handle to memory-mapping of that file$/;"	m	class:TeDecoderMemoryMap
m_hMapping_	kernel/TeMappedMemory.h	/^        HANDLE m_hMapping_;$/;"	m	class:TeMappedMemory
m_interprete	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_interprete*				m_interprete;$/;"	m	struct:ibpp_internals::GDS
m_lpszFile	kernel/TeDecoderMemoryMap.h	/^	LPVOID  m_lpszFile;			\/\/ Pointer to view of file mapped to memory$/;"	m	class:TeDecoderMemoryMap
m_lpszFile	kernel/TeDecoderMemoryMap.h	/^	void*	m_lpszFile;			\/\/ Pointer to view of file mapped to memory$/;"	m	class:TeDecoderMemoryMap
m_lpszFile_	kernel/TeMappedMemory.h	/^        LPVOID m_lpszFile_;$/;"	m	class:TeMappedMemory
m_lpszFile_	kernel/TeMappedMemory.h	/^        void* m_lpszFile_;$/;"	m	class:TeMappedMemory
m_open_blob2	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_open_blob2*				m_open_blob2;$/;"	m	struct:ibpp_internals::GDS
m_put_segment	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_put_segment*				m_put_segment;$/;"	m	struct:ibpp_internals::GDS
m_que_events	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_que_events*				m_que_events;$/;"	m	struct:ibpp_internals::GDS
m_rollback_retaining	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_rollback_retaining*		m_rollback_retaining;$/;"	m	struct:ibpp_internals::GDS
m_rollback_transaction	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_rollback_transaction*		m_rollback_transaction;$/;"	m	struct:ibpp_internals::GDS
m_sa_	kernel/TeMutex.h	/^        SECURITY_ATTRIBUTES m_sa_;$/;"	m	class:TeMutex
m_service_attach	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_service_attach*			m_service_attach;$/;"	m	struct:ibpp_internals::GDS
m_service_detach	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_service_detach*			m_service_detach;$/;"	m	struct:ibpp_internals::GDS
m_service_query	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_service_query*			m_service_query;$/;"	m	struct:ibpp_internals::GDS
m_service_start	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_service_start*			m_service_start;$/;"	m	struct:ibpp_internals::GDS
m_sql_interprete	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_sql_interprete*			m_sql_interprete;$/;"	m	struct:ibpp_internals::GDS
m_sqlcode	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_sqlcode*					m_sqlcode;$/;"	m	struct:ibpp_internals::GDS
m_start_multiple	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_start_multiple*			m_start_multiple;$/;"	m	struct:ibpp_internals::GDS
m_vax_integer	drivers/Firebird/ibpp/core/_ibpp.h	/^	proto_vax_integer*				m_vax_integer;$/;"	m	struct:ibpp_internals::GDS
magic	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 magic;                      \/* Always RTREE_GEOMETRY_MAGIC *\/$/;"	m	struct:RtreeMatchArg	file:
magic	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 magic;                    \/* Magic number for detect library misuse *\/$/;"	m	struct:sqlite3	file:
magic	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 magic;              \/* Magic number for sanity checking *\/$/;"	m	struct:Vdbe	file:
magic	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 magic;    \/* Magic number to detect structure corruption. *\/$/;"	m	struct:winMemData	file:
main	drivers/SQLite/sqlite3/shell.c	/^int main(int argc, char **argv){$/;"	f
main	kernel/lexTemporal.cpp	/^int main()$/;"	f
mainInit	drivers/GL/glcore.h	/^    __GLbufMainInitFn mainInit;$/;"	m	struct:__GLdrawableBufferRec
mainInit	drivers/GL/internal/glcore.h	/^    __GLbufMainInitFn mainInit;$/;"	m	struct:__GLdrawableBufferRec
mainPrompt	drivers/SQLite/sqlite3/shell.c	/^static char mainPrompt[20];     \/* First line prompt. default: "sqlite> "*\/$/;"	v	file:
main_init	drivers/SQLite/sqlite3/shell.c	/^static void main_init(struct callback_data *data) {$/;"	f	file:
major	drivers/GL/dri_interface.h	/^    int    major;        \/**< Major version number. *\/$/;"	m	struct:__DRIversionRec
major	drivers/GL/internal/dri_interface.h	/^    int    major;        \/**< Major version number. *\/$/;"	m	struct:__DRIversionRec
major	drivers/SQLite/sqlite3/sqlite3.c	/^  YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:yyStackEntry	file:
major_tick	kernel/TeGraph.h	/^	int major_tick;        \/* length of major tick mark (in pixels) *\/$/;"	m	class:TeGraphPlot
make	functions/TeMIFProjection.cpp	/^TeMIFProjectionFactory::make ( vector<string>& argList )$/;"	f	class:TeMIFProjectionFactory
make	kernel/TeAbstractFactory.h	/^	static PRODUCT* make(PARAMS* arg)$/;"	f	class:TeAbstractFactory
make	kernel/TeAbstractFactory.h	/^	static PRODUCT* make(PRODUCTIDTYPE prodId)$/;"	f	class:TeAbstractFactory
make	kernel/TeDatum.cpp	/^TeDatum TeDatumFactory::make(const string& name)$/;"	f	class:TeDatumFactory
make	kernel/TeFactory.h	/^TeFactory<T,Arg>::make ( string name, const Arg& arg )$/;"	f	class:TeFactory
make	kernel/TeFactory.h	/^TeFactory<T,Arg>::make (const Arg& arg )$/;"	f	class:TeFactory
make	kernel/TeProjection.cpp	/^TeProjectionFactory::make ( const TeProjectionParams& par )$/;"	f	class:TeProjectionFactory
make	kernel/TeProjection.cpp	/^TeProjectionFactory::make (int epsgcode)$/;"	f	class:TeProjectionFactory
makeBox	kernel/TeBox.cpp	/^makeBox(double x1, double y1, double x2, double y2, const double& tol)$/;"	f
makeCurrent	drivers/GL/glcore.h	/^    GLboolean (*makeCurrent)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
makeCurrent	drivers/GL/internal/glcore.h	/^    GLboolean (*makeCurrent)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
makeFromEPSGCode	kernel/TeDatum.cpp	/^TeDatum TeDatumFactory::makeFromEPSGCode(const std::string epsgCode)$/;"	f	class:TeDatumFactory
makeFromProj4	kernel/TeDatum.cpp	/^TeDatum TeDatumFactory::makeFromProj4(const string& proj4)$/;"	f	class:TeDatumFactory
makeFromWKT	kernel/TeDatum.cpp	/^TeDatum TeDatumFactory::makeFromWKT(const std::string wktDatumDescription)$/;"	f	class:TeDatumFactory
makeLikeExpression	functions/TeAddressLocator.cpp	/^string TeAddressLocator::makeLikeExpression(const string& str) const$/;"	f	class:TeAddressLocator
makeObject	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::makeObject()$/;"	f	class:TeQtGLWidget
makePointSet	kernel/TeGeometry.cpp	/^TePointSet makePointSet( const TeLinearRing& lr )$/;"	f
makePointSet	kernel/TeGeometry.cpp	/^TePointSet makePointSet( const TePolygon& p )$/;"	f
makeSegmentSet	image_processing/TePDIUtils.cpp	/^  void makeSegmentSet( const TeLinearRing& g_in, TeLineSet& g_out )$/;"	f	namespace:TePDIUtils
makeSegmentSet	image_processing/TePDIUtils.hpp	/^    void makeSegmentSet( const Geometry& g_in, TeLineSet& g_out )$/;"	f	namespace:TePDIUtils
malloc	drivers/GL/glcore.h	/^    void * (*malloc)(__GLcontext *gc, size_t size);$/;"	m	struct:__GLimportsRec
malloc	drivers/GL/glcore.h	/^    void *(*malloc)(size_t size);$/;"	m	struct:__GLdrawablePrivateRec
malloc	drivers/GL/internal/glcore.h	/^    void * (*malloc)(__GLcontext *gc, size_t size);$/;"	m	struct:__GLimportsRec
malloc	drivers/GL/internal/glcore.h	/^    void *(*malloc)(size_t size);$/;"	m	struct:__GLdrawablePrivateRec
malloc	drivers/SQLite/sqlite3/sqlite3.c	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines	file:
malloc	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines
mallocFailed	drivers/SQLite/sqlite3/sqlite3.c	/^  int mallocFailed; \/* A memory allocation error has occurred *\/$/;"	m	struct:IntegrityCk	file:
mallocFailed	drivers/SQLite/sqlite3/sqlite3.c	/^  u8   mallocFailed;   \/* Becomes true if any memory allocation fails *\/$/;"	m	struct:StrAccum	file:
mallocFailed	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 mallocFailed;              \/* True if we have seen a malloc failure *\/$/;"	m	struct:sqlite3	file:
mallocWithAlarm	drivers/SQLite/sqlite3/sqlite3.c	/^static int mallocWithAlarm(int n, void **pp){$/;"	f	file:
man_manager_	kernel/TeDecoderSmartMem.h	/^  mutable TeRasterMemManager man_manager_;$/;"	m	class:TeDecoderSmartMem
managerData_	kernel/TeThreadJobsManager.h	/^    InternalManagerDataStruct managerData_;$/;"	m	class:TeThreadJobsManager
mapCWtoDW	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::mapCWtoDW(TeBox& box)$/;"	f	class:TeQtCanvas
mapCWtoV	drivers/qt/TeQtCanvas.cpp	/^QPoint TeQtCanvas::mapCWtoV(const TeCoord2D& c)$/;"	f	class:TeQtCanvas
mapCWtoV	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::mapCWtoV(TeBox& box)$/;"	f	class:TeQtCanvas
mapDWtoCW	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::mapDWtoCW(TeBox& box)$/;"	f	class:TeQtCanvas
mapDWtoV	drivers/qt/TeQtCanvas.cpp	/^QPoint TeQtCanvas::mapDWtoV(const TeCoord2D& dw)$/;"	f	class:TeQtCanvas
mapDWtoV	drivers/qt/TeQtCanvas.cpp	/^QPointArray TeQtCanvas::mapDWtoV(const TeLine2D& line)$/;"	f	class:TeQtCanvas
mapDWtoV	drivers/qt/TeQtCanvas.cpp	/^int TeQtCanvas::mapDWtoV(double a)$/;"	f	class:TeQtCanvas
mapDWtoV	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::mapDWtoV(TeBox& w)$/;"	f	class:TeQtCanvas
mapObjValVec	drivers/qt/TeQtLegendSource.h	/^	vector<map<string, string> >& mapObjValVec() { return mapObjValVec_; }$/;"	f	class:TeQtLegendSource
mapObjValVec_	drivers/qt/TeQtLegendSource.h	/^    vector<map<string, string> >mapObjValVec_;$/;"	m	class:TeQtLegendSource
mapThemeAlias	kernel/TeDatabase.h	/^	map<int, map<string, string> >& mapThemeAlias() {return metaModel_->mapThemeAlias();}$/;"	f	class:TeDatabase
mapThemeAlias	kernel/TeMetaModelCache.h	/^		map<int, map<string, string> >& mapThemeAlias()$/;"	f	class:TeMetaModelCache
mapThemeAlias_	kernel/TeMetaModelCache.h	/^		map<int, map<string, string> > mapThemeAlias_;$/;"	m	class:TeMetaModelCache
mapToFirebirdType	drivers/Firebird/TeFirebird.cpp	/^std::string TeFirebird::mapToFirebirdType(const TeAttribute& teRep) const$/;"	f	class:TeFirebird
mapVtoCW	drivers/qt/TeQtCanvas.cpp	/^TeCoord2D TeQtCanvas::mapVtoCW(const QPoint& p)$/;"	f	class:TeQtCanvas
mapVtoCW	drivers/qt/TeQtCanvas.cpp	/^double TeQtCanvas::mapVtoCW(int pixels)$/;"	f	class:TeQtCanvas
mapVtoCW	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::mapVtoCW(TeBox& box)$/;"	f	class:TeQtCanvas
mapVtoDW	drivers/qt/TeQtCanvas.cpp	/^TeCoord2D TeQtCanvas::mapVtoDW(const QPoint& v)$/;"	f	class:TeQtCanvas
mapVtoDW	drivers/qt/TeQtCanvas.cpp	/^double TeQtCanvas::mapVtoDW(int pixels)$/;"	f	class:TeQtCanvas
map_	drivers/GTM/TeGTM.h	/^	bool rectangular_, truegrid_, usernegrit_, useritalic_, usersublin_, usertachado_, map_;$/;"	m	class:TeGTMHeader
map_	kernel/TeProxMatrixImplementation.h	/^	Object_id_map_type  map_;$/;"	m	class:TeProxMatrixGraphBreymann
map_const_iterator	kernel/TeProxMatrixImplementation.h	/^	typedef Object_id_map_type::const_iterator map_const_iterator;$/;"	t	class:TeProxMatrixGraphBreymann
map_iterator	kernel/TeProxMatrixImplementation.h	/^	typedef Object_id_map_type::iterator map_iterator;$/;"	t	class:TeProxMatrixGraphBreymann
mapping_is_active_	kernel/TeMappedMemory.h	/^      bool mapping_is_active_;$/;"	m	class:TeMappedMemory
markDelete	drivers/Oracle/OCI/include/occiObjects.h	/^void Ref<T>::markDelete ()$/;"	f	class:oracle::occi::Ref
mask	drivers/GL/glxext.h	/^    unsigned int mask;	  \/* mask indicating which buffers are affected*\/$/;"	m	struct:__anon93
mask	drivers/SQLite/sqlite3/sqlite3.c	/^  struct {int value; int mask;} yy215;$/;"	m	struct:__anon56::__anon57	file:
mask	kernel/TeDatabase.cpp	/^TeDatabase::mask(const string& rasterTable, TePolygon& poly, const string& nameLayerOut, TeStrategicIterator st)$/;"	f	class:TeDatabase
mask	kernel/TeDatabase.cpp	/^TeDatabase::mask(const string& rasterTable, const string& actGeomTable, const string& objId, const string& nameLayerOut, TeStrategicIterator st)$/;"	f	class:TeDatabase
maskMatrixPtr_	image_processing/TePDIMMIOMatching.hpp	/^          MaskMatrixT const* maskMatrixPtr_;          $/;"	m	class:TePDIMMIOMatching::ExtractLocalMaximasParams
maskPage	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 maskPage;        \/* Mask for page offset *\/$/;"	m	struct:MemPage	file:
mask_image_ptr_	image_processing/TePDIMMIOMatching.hpp	/^          TePDITypes::TePDIRasterPtrType mask_image_ptr_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
mask_matrix_ptr_	image_processing/TePDIMMIOMatching.hpp	/^          MaskMatrixT* mask_matrix_ptr_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
mat	kernel/TeMatrix.h	/^	double **mat;	\/\/ TeMatrix of double elements $/;"	m	class:TeMatrix
matchAll	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 matchAll;$/;"	m	struct:compareInfo	file:
matchFeatures	image_processing/TePDIMMIOMatching.cpp	/^bool TePDIMMIOMatching::matchFeatures( FeatMatchingMethod matching_method,$/;"	f	class:TePDIMMIOMatching
matchMatrixMaxPtr_	image_processing/TePDIMMIOMatching.hpp	/^          double* matchMatrixMaxPtr_;          $/;"	m	class:TePDIMMIOMatching::CalcCCorrelationMtxParams
matchMatrixMinPtr_	image_processing/TePDIMMIOMatching.hpp	/^          double* matchMatrixMinPtr_;$/;"	m	class:TePDIMMIOMatching::CalcCCorrelationMtxParams
matchMatrixPtr_	image_processing/TePDIMMIOMatching.hpp	/^          TePDIMatrix<double>* matchMatrixPtr_;$/;"	m	class:TePDIMMIOMatching::CalcCCorrelationMtxParams
matchOne	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 matchOne;$/;"	m	struct:compareInfo	file:
matchQuality	drivers/SQLite/sqlite3/sqlite3.c	/^static int matchQuality(FuncDef *p, int nArg, u8 enc){$/;"	f	file:
matchSet	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 matchSet;$/;"	m	struct:compareInfo	file:
matrix2Tiff	image_processing/TePDICorrelationMatching.cpp	/^void TePDICorrelationMatching::matrix2Tiff( $/;"	f	class:TePDICorrelationMatching
matrix2Tiff	image_processing/TePDIMIMatching.cpp	/^void TePDIMIMatching::matrix2Tiff( $/;"	f	class:TePDIMIMatching
matrix2Tiff	image_processing/TePDIMMIOMatching.cpp	/^void TePDIMMIOMatching::matrix2Tiff( $/;"	f	class:TePDIMMIOMatching
matrix2Tiff	image_processing/TePDIOFMatching.cpp	/^void TePDIOFMatching::matrix2Tiff( $/;"	f	class:TePDIOFMatching
matrix_	image_processing/TePDIHaralick.hpp	/^          GLCMMatrixT matrix_;$/;"	m	class:TePDIHaralick::GLCMMatrixCacheNodeT
max	drivers/Firebird/ibpp/core/_ibpp.cpp	59;"	d	file:
max	kernel/TeGeometricTransformation.cpp	41;"	d	file:
max16	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	const int16_t consts::max16 = i16_limits.max();$/;"	m	class:ibpp_internals::consts	file:
max16	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	const int16_t consts::max16 = std::numeric_limits<int16_t>::max();$/;"	m	class:ibpp_internals::consts	file:
max16	drivers/Firebird/ibpp/core/_ibpp.h	/^	static const int16_t max16;$/;"	m	struct:ibpp_internals::consts
max32	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	const int32_t consts::max32 = i32_limits.max();$/;"	m	class:ibpp_internals::consts	file:
max32	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	const int32_t consts::max32 = std::numeric_limits<int32_t>::max();$/;"	m	class:ibpp_internals::consts	file:
max32	drivers/Firebird/ibpp/core/_ibpp.h	/^	static const int32_t max32;$/;"	m	struct:ibpp_internals::consts
maxAlpha	drivers/GL/glxint.h	/^    GLdouble minAlpha, maxAlpha;$/;"	m	struct:__GLXFBConfigRec
maxAngularDist_	image_processing/TePDISAMClassifier.hpp	/^          double maxAngularDist_;          $/;"	m	class:TePDISAMClassifier::ClassReferenceData
maxAngularDist_	image_processing/TePDISAMClassifier.hpp	/^          double maxAngularDist_;          $/;"	m	class:TePDISAMClassifier::ClassSpectralSamples
maxAuxBuffers	drivers/GL/glxint.h	/^    GLint maxAuxBuffers;$/;"	m	struct:__GLXFBConfigRec
maxBlue	drivers/GL/glxint.h	/^    GLdouble minBlue, maxBlue;$/;"	m	struct:__GLXFBConfigRec
maxBuflen_	drivers/Oracle/TeOCICursor.h	/^	unsigned long			maxBuflen_;			\/\/! Max memory the will be allocated to store blob data$/;"	m	class:TeOCICursor
maxColumns	kernel/TeSparseMatrix.h	/^       size_type Row, maxColumns;$/;"	m	class:TeSparseMatrix::Aux
maxConnections_	kernel/TeConnectionPool.h	/^    unsigned int maxConnections_;            \/\/!< The number of max connections controlled by this.$/;"	m	class:TeConnectionPool
maxCount	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 maxCount;       \/* Maximum instantaneous currentCount *\/$/;"	m	struct:Mem5Global	file:
maxDiameter_	kernel/TePieBar.h	/^	double			maxDiameter_;	$/;"	m	class:TePieBar
maxDist	kernel/TeComputeAttributeStrategies.h	/^		double maxDist;$/;"	m	class:TeMinimumDistanceStrategy
maxFieldsPerRelation	drivers/MySQL/TeMySQL.h	/^  unsigned int maxFieldsPerRelation() { return 4096; }$/;"	f	class:TeMySQL
maxFieldsPerRelation	drivers/ado/TeAdoDB.h	/^  unsigned int maxFieldsPerRelation() { return 255; }$/;"	f	class:TeAdo
maxFieldsPerRelation	drivers/ado/TeAdoFireBird.h	/^  unsigned int maxFieldsPerRelation() { return 0; }$/;"	f	class:TeFireBird
maxFieldsPerRelation	drivers/ado/TeAdoOracle.h	/^  unsigned int maxFieldsPerRelation() { return 1000; }$/;"	f	class:TeOracle
maxFieldsPerRelation	drivers/ado/TeAdoSqlServer.h	/^  unsigned int maxFieldsPerRelation() { return 1000; }$/;"	f	class:TeSqlServer
maxFieldsPerRelation	kernel/TeDatabase.h	/^    virtual unsigned int maxFieldsPerRelation() { return 0; }$/;"	f	class:TeDatabase
maxGreen	drivers/GL/glxint.h	/^    GLdouble minGreen, maxGreen;$/;"	m	struct:__GLXFBConfigRec
maxHeight	drivers/GL/glxext.h	/^    int XOrigin, YOrigin, maxHeight, maxWidth;$/;"	m	struct:__anon97
maxHeight_	kernel/TePieBar.h	/^	double			maxHeight_;$/;"	m	class:TePieBar
maxIdle_	kernel/TeConnectionPool.h	/^    unsigned int maxIdle_;       	         \/\/!< The number of max connections idle to be hold by this.$/;"	m	class:TeConnectionPool
maxIters_	kernel/TeGTParams.h	/^      unsigned int maxIters_;$/;"	m	class:TeGTParams
maxLeaf	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 maxLeaf;          \/* Maximum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared	file:
maxLocal	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 maxLocal;         \/* Maximum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared	file:
maxLocal	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 maxLocal;        \/* Copy of BtShared.maxLocal or BtShared.maxLeaf *\/$/;"	m	struct:MemPage	file:
maxMemPercentUsage_	image_processing/TePDIMatrix.hpp	/^      unsigned char maxMemPercentUsage_;$/;"	m	class:TePDIMatrix
maxMemPercentUsage_	kernel/TeRasterMemManager.h	/^      unsigned char maxMemPercentUsage_;$/;"	m	class:TeRasterMemManager
maxOut	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 maxOut;         \/* Maximum instantaneous currentOut *\/$/;"	m	struct:Mem5Global	file:
maxPbufferHeight	drivers/GL/glcore.h	/^    GLint maxPbufferHeight;$/;"	m	struct:__GLcontextModesRec
maxPbufferHeight	drivers/GL/glxint.h	/^    int maxPbufferWidth, maxPbufferHeight, maxPbufferPixels;$/;"	m	struct:__GLXFBConfigRec
maxPbufferHeight	drivers/GL/internal/glcore.h	/^    GLint maxPbufferHeight;$/;"	m	struct:__GLcontextModesRec
maxPbufferPixels	drivers/GL/glcore.h	/^    GLint maxPbufferPixels;$/;"	m	struct:__GLcontextModesRec
maxPbufferPixels	drivers/GL/glxint.h	/^    int maxPbufferWidth, maxPbufferHeight, maxPbufferPixels;$/;"	m	struct:__GLXFBConfigRec
maxPbufferPixels	drivers/GL/internal/glcore.h	/^    GLint maxPbufferPixels;$/;"	m	struct:__GLcontextModesRec
maxPbufferWidth	drivers/GL/glcore.h	/^    GLint maxPbufferWidth;$/;"	m	struct:__GLcontextModesRec
maxPbufferWidth	drivers/GL/glxint.h	/^    int maxPbufferWidth, maxPbufferHeight, maxPbufferPixels;$/;"	m	struct:__GLXFBConfigRec
maxPbufferWidth	drivers/GL/internal/glcore.h	/^    GLint maxPbufferWidth;$/;"	m	struct:__GLcontextModesRec
maxRed	drivers/GL/glxint.h	/^    GLdouble minRed, maxRed;$/;"	m	struct:__GLXFBConfigRec
maxRequest	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 maxRequest;     \/* Largest allocation (exclusive of internal frag) *\/$/;"	m	struct:Mem5Global	file:
maxRows_	drivers/Oracle/TeOCICursor.h	/^    int						maxRows_;			\/\/! Number of rows to be fetched into memory from database server$/;"	m	class:TeOCICursor
maxScale	kernel/TeAbstractTheme.h	/^	virtual double maxScale() { return maxScale_; }$/;"	f	class:TeAbstractTheme
maxScale	kernel/TeAbstractTheme.h	/^	virtual void maxScale(double s) { maxScale_ = s; }$/;"	f	class:TeAbstractTheme
maxScale_	kernel/TeAbstractTheme.h	/^	double	maxScale_;$/;"	m	class:TeAbstractTheme
maxSimulJobs_	kernel/TeThreadJobsManager.h	/^      unsigned long int maxSimulJobs_;$/;"	m	struct:TeThreadJobsManager::InternalManagerDataStruct
maxTempFileSize_	kernel/TeRasterMemManager.h	/^      unsigned long int maxTempFileSize_;      $/;"	m	class:TeRasterMemManager
maxTime_	kernel/TeBaseSTInstanceSet.h	/^	TimeType				maxTime_;$/;"	m	class:TeBaseSTInstanceSet
maxTmpFileSize_	image_processing/TePDIMatrix.hpp	/^      unsigned long int maxTmpFileSize_;      $/;"	m	class:TePDIMatrix
maxValue_	kernel/TeAttribute.h	/^	string				maxValue_;	\/\/!< maximum value of the attrbute	$/;"	m	struct:TeAttribute
maxValue_	kernel/TePieBar.h	/^	double			maxValue_;$/;"	m	class:TePieBar
maxVar	image_processing/TePDICluster.cpp	/^double TePDICluster::maxVar()const$/;"	f	class:TePDICluster
maxVarBand	image_processing/TePDICluster.cpp	/^int TePDICluster::maxVarBand()const$/;"	f	class:TePDICluster
maxWait_	kernel/TeConnectionPool.h	/^    clock_t maxWait_;                        \/\/!< Time limit to wait for a connection (in milliseconds).$/;"	m	class:TeConnectionPool
maxWidth	drivers/GL/glxext.h	/^    int XOrigin, YOrigin, maxHeight, maxWidth;$/;"	m	struct:__anon97
max_	drivers/qt/TeQtGLWidget.h	/^	GLfloat min_, max_;$/;"	m	class:TeQtGLWidget
max_adapt_mask_width_	image_processing/TePDIRadarFilter.hpp	/^      unsigned int max_adapt_mask_width_;$/;"	m	class:TePDIRadarFilter
max_angle	image_processing/TePDIGeneralizedIHSFusion.cpp	12;"	d	file:
max_connection_distance_	kernel/TeProxMatrixConstructionStrategy.h	/^	double						max_connection_distance_;$/;"	m	struct:TeProxMatrixConstructionParams
max_distance_	kernel/TeProxMatrixConstructionStrategy.h	/^	double						max_distance_;$/;"	m	struct:TeProxMatrixConstructionParams
max_dmap_error_	kernel/TeGTParams.h	/^      double max_dmap_error_;$/;"	m	class:TeGTParams
max_dmap_rmse_	kernel/TeGTParams.h	/^      double max_dmap_rmse_;$/;"	m	class:TeGTParams
max_gray_levels	image_processing/TePDIGeneralizedIHSFusion.cpp	11;"	d	file:
max_imap_error_	kernel/TeGTParams.h	/^      double max_imap_error_;   $/;"	m	class:TeGTParams
max_imap_rmse_	kernel/TeGTParams.h	/^      double max_imap_rmse_;    $/;"	m	class:TeGTParams
max_local_dist_	kernel/TeProxMatrixWeightsStrategy.h	/^	double						max_local_dist_;$/;"	m	struct:TeProxMatrixWeightsParams
max_net_distance_	kernel/TeProxMatrixConstructionStrategy.h	/^	double						max_net_distance_;$/;"	m	struct:TeProxMatrixConstructionParams
max_size	kernel/TeSparseMatrix.h	/^   size_type max_size()   const { return C.max_size();}$/;"	f	class:TeSparseMatrix
max_three	image_processing/TePDIGeneralizedIHSFusion.cpp	/^double max_three(std::vector<double> list)$/;"	f
maximasNumber_	image_processing/TePDIMMIOMatching.hpp	/^          unsigned int maximasNumber_;$/;"	m	class:TePDIMMIOMatching::ExtractLocalMaximasParams
maxlat_	drivers/GTM/TeGTM.h	/^	float maxlon_, minlon_, maxlat_, minlat_, layers_, iconnum_;$/;"	m	class:TeGTMHeader
maxlon_	drivers/GTM/TeGTM.h	/^	float maxlon_, minlon_, maxlat_, minlat_, layers_, iconnum_;$/;"	m	class:TeGTMHeader
mayAbort	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 mayAbort;         \/* True if statement may throw an ABORT exception *\/$/;"	m	struct:Parse	file:
mband_	kernel/TeRasterTransform.h	/^	short mband_, mbout_;$/;"	m	class:TeRasterTransform
mbcsToUnicode	drivers/SQLite/sqlite3/sqlite3.c	/^static WCHAR *mbcsToUnicode(const char *zFilename){$/;"	f	file:
mbout_	kernel/TeRasterTransform.h	/^	short mband_, mbout_;$/;"	m	class:TeRasterTransform
mbr_	kernel/TeKdTree.h	/^		TeBox mbr_;$/;"	m	class:TeSAM::TeBasicKdTree
mbr_	kernel/TeRTree.h	/^		TeBox mbr_;					\/\/!< Bounding box of the tree$/;"	m	class:TeSAM::TeRTree
mean	image_processing/TePDICluster.hpp	/^    vector<double> mean;$/;"	m	class:TePDICluster
mean	image_processing/TePDIRegion.hpp	/^    vector<double> mean;$/;"	m	class:TePDIRegion
meanBlendMethodImp	image_processing/TePDIBlender.cpp	/^void TePDIBlender::meanBlendMethodImp( const double& line, const double& col,$/;"	f	class:TePDIBlender
meanBlendMethodImp_coord1_	image_processing/TePDIBlender.hpp	/^      TeCoord2D meanBlendMethodImp_coord1_;$/;"	m	class:TePDIBlender
meanBlendMethodImp_coord2_	image_processing/TePDIBlender.hpp	/^      TeCoord2D meanBlendMethodImp_coord2_;$/;"	m	class:TePDIBlender
meanBlendMethodImp_value1_	image_processing/TePDIBlender.hpp	/^      double meanBlendMethodImp_value1_; $/;"	m	class:TePDIBlender
meanBlendMethodImp_value2_	image_processing/TePDIBlender.hpp	/^      double meanBlendMethodImp_value2_;$/;"	m	class:TePDIBlender
mediaTable	kernel/TeLayer.cpp	/^TeLayer::mediaTable()$/;"	f	class:TeLayer
mediaTable	kernel/TeLayer.cpp	/^TeLayer::mediaTable(const string& name)$/;"	f	class:TeLayer
mem	drivers/SQLite/sqlite3/sqlite3.c	/^} mem;$/;"	v	typeref:struct:__anon50	file:
mem0	drivers/SQLite/sqlite3/sqlite3.c	/^} mem0 = { 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v	typeref:struct:Mem0Global	file:
mem0	drivers/SQLite/sqlite3/sqlite3.c	18250;"	d	file:
mem3	drivers/SQLite/sqlite3/sqlite3.c	/^} mem3 = { 97535575 };$/;"	v	typeref:struct:Mem3Global	file:
mem3	drivers/SQLite/sqlite3/sqlite3.c	15717;"	d	file:
mem5	drivers/SQLite/sqlite3/sqlite3.c	/^} mem5;$/;"	v	typeref:struct:Mem5Global	file:
mem5	drivers/SQLite/sqlite3/sqlite3.c	16400;"	d	file:
memAboutToChange	drivers/SQLite/sqlite3/sqlite3.c	62947;"	d	file:
memAboutToChange	drivers/SQLite/sqlite3/sqlite3.c	62949;"	d	file:
memAux_	kernel/TeDecoderDatabase.h	/^	unsigned char		*memAux_;$/;"	m	class:TeDecoderDatabase
memDb	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 memDb;                   \/* True to inhibit all file I\/O *\/$/;"	m	struct:Pager	file:
memIsValid	drivers/SQLite/sqlite3/sqlite3.c	12809;"	d	file:
memManager_	kernel/TeDecoderTIFF.h	/^	TeDecoderSmartMem memManager_;$/;"	m	class:TeDecoderTIFF
memTracePrint	drivers/SQLite/sqlite3/sqlite3.c	/^static void memTracePrint(FILE *out, Mem *p){$/;"	f	file:
mem_dest_ptr	drivers/libjpeg/jmemdstsrc.h	/^typedef mem_destination_mgr * mem_dest_ptr;$/;"	t
mem_destination_mgr	drivers/libjpeg/jmemdstsrc.h	/^} mem_destination_mgr;$/;"	t	typeref:struct:__anon36
memjrnlClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int memjrnlClose(sqlite3_file *pJfd){$/;"	f	file:
memjrnlFileSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int memjrnlFileSize(sqlite3_file *pJfd, sqlite_int64 *pSize){$/;"	f	file:
memjrnlRead	drivers/SQLite/sqlite3/sqlite3.c	/^static int memjrnlRead($/;"	f	file:
memjrnlSync	drivers/SQLite/sqlite3/sqlite3.c	/^static int memjrnlSync(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
memjrnlTruncate	drivers/SQLite/sqlite3/sqlite3.c	/^static int memjrnlTruncate(sqlite3_file *pJfd, sqlite_int64 size){$/;"	f	file:
memjrnlWrite	drivers/SQLite/sqlite3/sqlite3.c	/^static int memjrnlWrite($/;"	f	file:
memoryOffset	drivers/GL/dri_interface.h	/^    GLuint (*memoryOffset)(__DRInativeDisplay *dpy, int scrn, const GLvoid *pointer);$/;"	m	struct:__DRIscreenRec
memoryOffset	drivers/GL/internal/dri_interface.h	/^    GLuint (*memoryOffset)(__DRInativeDisplay *dpy, int scrn, const GLvoid *pointer);$/;"	m	struct:__DRIscreenRec
memoryPolicy_	image_processing/TePDIMatrix.hpp	/^      MemoryPolicy memoryPolicy_;$/;"	m	class:TePDIMatrix
memory_highwater	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines	file:
memory_highwater	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines
memory_used	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines	file:
memory_used	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines
memsys3Checkout	drivers/SQLite/sqlite3/sqlite3.c	/^static void *memsys3Checkout(u32 i, u32 nBlock){$/;"	f	file:
memsys3Enter	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys3Enter(void){$/;"	f	file:
memsys3Free	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys3Free(void *pPrior){$/;"	f	file:
memsys3FreeUnsafe	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys3FreeUnsafe(void *pOld){$/;"	f	file:
memsys3FromMaster	drivers/SQLite/sqlite3/sqlite3.c	/^static void *memsys3FromMaster(u32 nBlock){$/;"	f	file:
memsys3Init	drivers/SQLite/sqlite3/sqlite3.c	/^static int memsys3Init(void *NotUsed){$/;"	f	file:
memsys3Leave	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys3Leave(void){$/;"	f	file:
memsys3Link	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys3Link(u32 i){$/;"	f	file:
memsys3LinkIntoList	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys3LinkIntoList(u32 i, u32 *pRoot){$/;"	f	file:
memsys3Malloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *memsys3Malloc(int nBytes){$/;"	f	file:
memsys3MallocUnsafe	drivers/SQLite/sqlite3/sqlite3.c	/^static void *memsys3MallocUnsafe(int nByte){$/;"	f	file:
memsys3Merge	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys3Merge(u32 *pRoot){$/;"	f	file:
memsys3OutOfMemory	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys3OutOfMemory(int nByte){$/;"	f	file:
memsys3Realloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *memsys3Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys3Roundup	drivers/SQLite/sqlite3/sqlite3.c	/^static int memsys3Roundup(int n){$/;"	f	file:
memsys3Shutdown	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys3Shutdown(void *NotUsed){$/;"	f	file:
memsys3Size	drivers/SQLite/sqlite3/sqlite3.c	/^static int memsys3Size(void *p){$/;"	f	file:
memsys3Unlink	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys3Unlink(u32 i){$/;"	f	file:
memsys3UnlinkFromList	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys3UnlinkFromList(u32 i, u32 *pRoot){$/;"	f	file:
memsys5Enter	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys5Enter(void){$/;"	f	file:
memsys5Free	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys5Free(void *pPrior){$/;"	f	file:
memsys5FreeUnsafe	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys5FreeUnsafe(void *pOld){$/;"	f	file:
memsys5Init	drivers/SQLite/sqlite3/sqlite3.c	/^static int memsys5Init(void *NotUsed){$/;"	f	file:
memsys5Leave	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys5Leave(void){$/;"	f	file:
memsys5Link	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys5Link(int i, int iLogsize){$/;"	f	file:
memsys5Log	drivers/SQLite/sqlite3/sqlite3.c	/^static int memsys5Log(int iValue){$/;"	f	file:
memsys5Malloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *memsys5Malloc(int nBytes){$/;"	f	file:
memsys5MallocUnsafe	drivers/SQLite/sqlite3/sqlite3.c	/^static void *memsys5MallocUnsafe(int nByte){$/;"	f	file:
memsys5Realloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *memsys5Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys5Roundup	drivers/SQLite/sqlite3/sqlite3.c	/^static int memsys5Roundup(int n){$/;"	f	file:
memsys5Shutdown	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys5Shutdown(void *NotUsed){$/;"	f	file:
memsys5Size	drivers/SQLite/sqlite3/sqlite3.c	/^static int memsys5Size(void *p){$/;"	f	file:
memsys5Unlink	drivers/SQLite/sqlite3/sqlite3.c	/^static void memsys5Unlink(int i, int iLogsize){$/;"	f	file:
memsys5UnlinkFirst	drivers/SQLite/sqlite3/sqlite3.c	/^static int memsys5UnlinkFirst(int iLogsize){$/;"	f	file:
mergeAdjacentBlocks_	image_processing/TePDIParallelSegmenter.hpp	/^          bool mergeAdjacentBlocks_;                  $/;"	m	class:TePDIParallelSegmenter::SegmenterThreadEntryParams
mergeAdjacentBlocks_	image_processing/TePDIParallelSegmenter.hpp	/^          bool mergeAdjacentBlocks_;$/;"	m	class:TePDIParallelSegmenter::GroupDataThreadEntryParams
mergeSegments	image_processing/TePDIParaSegBaatzStrategy.cpp	/^bool TePDIParaSegBaatzStrategy::mergeSegments( $/;"	f	class:TePDIParaSegBaatzStrategy
mergeSegments	image_processing/TePDIParaSegRegGrowStrategy.cpp	/^bool TePDIParaSegRegGrowStrategy::mergeSegments( $/;"	f	class:TePDIParaSegRegGrowStrategy
merge_segment	image_processing/TePDIBaatz.cpp	/^int merge_segment(struct segment_neighbor *curr_neighbor, $/;"	f
message	kernel/TeErrorLog.cpp	/^TeErrorLog::message( const TeErrorType msgCode )$/;"	f	class:TeErrorLog
message	kernel/TeException.cpp	/^TeException::message() const$/;"	f	class:TeException
messageStr_	kernel/TeStdIOProgress.h	/^	string messageStr_;$/;"	m	class:TeStdIOProgress
message_	image_processing/TePDIPIManager.hpp	/^      std::string message_;    $/;"	m	class:TePDIPIManager
metaDataImplPtr	drivers/Oracle/OCI/include/occiControl.h	/^  Ptr<MetaDataImpl> metaDataImplPtr;$/;"	m	class:oracle::occi::MetaData
metaModel_	kernel/TeDatabase.h	/^	TeSharedPtr<TeMetaModelCache> metaModel_;	\/\/!< Meta model: Layers, Themes, Views...$/;"	m	class:TeDatabase
metadata_	functions/TeAddressLocator.h	/^		TeAddressMetadata metadata_;				\/\/!< Metadata information for a geocoding base table$/;"	m	class:TeAddressLocator
metamapa_	drivers/GTM/TeGTM.h	/^	unsigned char metamapa_, tnum_;$/;"	m	class:TeGTMInformationImages
metax_	drivers/GTM/TeGTM.h	/^	float gposx_, gposy_, gwidth_, gheight_, metax_, metay_;$/;"	m	class:TeGTMInformationImages
metay_	drivers/GTM/TeGTM.h	/^	float gposx_, gposy_, gwidth_, gheight_, metax_, metay_;$/;"	m	class:TeGTMInformationImages
methodZero	kernel/TeRTree.h	/^void TeRTree<DATATYPE, MAXNODES, MINNODES>::methodZero(TePartitionVars& p) const$/;"	f	class:TeSAM::TeRTree
mictype_nzttPKCS7ProtInfo	drivers/Oracle/OCI/include/nzt.h	/^   nzttCipherType mictype_nzttPKCS7ProtInfo;    \/* Hash cipher *\/$/;"	m	struct:nzttPKCS7ProtInfo
middle_name	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR *middle_name;			\/* the user's middle name *\/$/;"	m	struct:__anon65
middlename	drivers/Firebird/ibpp/core/ibpp.h	/^		std::string middlename;$/;"	m	class:IBPP::User
mifDatumCode	functions/TeMIFProjection.cpp	/^char* mifDatumCode[] = {$/;"	v
mifProjCode	functions/TeMIFProjection.cpp	/^char* mifProjCode[]= {$/;"	v
mifProjInfo	functions/TeMIFProjection.cpp	/^char* mifProjInfo[]= {$/;"	v
mifUnitsCode	functions/TeMIFProjection.cpp	/^char* mifUnitsCode[] = {$/;"	v
min	drivers/Firebird/ibpp/core/_ibpp.cpp	58;"	d	file:
min	kernel/TeGeometricTransformation.cpp	44;"	d	file:
min16	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	const int16_t consts::min16 = i16_limits.min();$/;"	m	class:ibpp_internals::consts	file:
min16	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	const int16_t consts::min16 = std::numeric_limits<int16_t>::min();$/;"	m	class:ibpp_internals::consts	file:
min16	drivers/Firebird/ibpp/core/_ibpp.h	/^	static const int16_t min16;$/;"	m	struct:ibpp_internals::consts
min32	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	const int32_t consts::min32 = i32_limits.min();$/;"	m	class:ibpp_internals::consts	file:
min32	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	const int32_t consts::min32 = std::numeric_limits<int32_t>::min();$/;"	m	class:ibpp_internals::consts	file:
min32	drivers/Firebird/ibpp/core/_ibpp.h	/^	static const int32_t min32;$/;"	m	struct:ibpp_internals::consts
minAlpha	drivers/GL/glxint.h	/^    GLdouble minAlpha, maxAlpha;$/;"	m	struct:__GLXFBConfigRec
minBlue	drivers/GL/glxint.h	/^    GLdouble minBlue, maxBlue;$/;"	m	struct:__GLXFBConfigRec
minDiameter_	kernel/TePieBar.h	/^	double			minDiameter_;	$/;"	m	class:TePieBar
minGreen	drivers/GL/glxint.h	/^    GLdouble minGreen, maxGreen;$/;"	m	struct:__GLXFBConfigRec
minHeight_	kernel/TePieBar.h	/^	double			minHeight_;$/;"	m	class:TePieBar
minLeaf	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 minLeaf;          \/* Minimum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared	file:
minLocal	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 minLocal;         \/* Minimum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared	file:
minLocal	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 minLocal;        \/* Copy of BtShared.minLocal or BtShared.minLeaf *\/$/;"	m	struct:MemPage	file:
minMaxFinalize	drivers/SQLite/sqlite3/sqlite3.c	/^static void minMaxFinalize(sqlite3_context *context){$/;"	f	file:
minMaxQuery	drivers/SQLite/sqlite3/sqlite3.c	/^static u8 minMaxQuery(Select *p){$/;"	f	file:
minRed	drivers/GL/glxint.h	/^    GLdouble minRed, maxRed;$/;"	m	struct:__GLXFBConfigRec
minScale	kernel/TeAbstractTheme.h	/^	virtual double minScale() { return minScale_; }$/;"	f	class:TeAbstractTheme
minScale	kernel/TeAbstractTheme.h	/^	virtual void minScale(double s) { minScale_ = s; }$/;"	f	class:TeAbstractTheme
minScale_	kernel/TeAbstractTheme.h	/^	double	minScale_;$/;"	m	class:TeAbstractTheme
minTime_	kernel/TeBaseSTInstanceSet.h	/^	TimeType				minTime_;$/;"	m	class:TeBaseSTInstanceSet
minValue_	kernel/TeAttribute.h	/^	string				minValue_;	\/\/!< minimum value of the attribute$/;"	m	struct:TeAttribute
minValue_	kernel/TePieBar.h	/^	double			minValue_;$/;"	m	class:TePieBar
minWriteFileFormat	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 minWriteFileFormat;  \/* Minimum file format for writable database files *\/$/;"	m	struct:Vdbe	file:
min_	drivers/qt/TeQtGLWidget.h	/^	GLfloat min_, max_;$/;"	m	class:TeQtGLWidget
min_three	image_processing/TePDIGeneralizedIHSFusion.cpp	/^double min_three(std::vector<double> list)$/;"	f
minedgesize_	kernel/TeTin.h	/^	double				minedgesize_;	\/\/! Edge minimun size$/;"	m	class:TeTin
minimumPath	kernel/TeNetwork.cpp	/^TeGraphNetwork:: minimumPath (TeNode& n1, TeNodeSet& nodeSet,vector<double>& result)$/;"	f	class:TeGraphNetwork
minimumPath	kernel/TeNetwork.cpp	/^TeNetwork:: minimumPath (TeNode& n1, TeNodeSet& nodeSet,vector<double>& result)$/;"	f	class:TeNetwork
minlat_	drivers/GTM/TeGTM.h	/^	float maxlon_, minlon_, maxlat_, minlat_, layers_, iconnum_;$/;"	m	class:TeGTMHeader
minlon_	drivers/GTM/TeGTM.h	/^	float maxlon_, minlon_, maxlat_, minlat_, layers_, iconnum_;$/;"	m	class:TeGTMHeader
minmaxFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void minmaxFunc($/;"	f	file:
minmaxStep	drivers/SQLite/sqlite3/sqlite3.c	/^static void minmaxStep($/;"	f	file:
minor	drivers/GL/dri_interface.h	/^    int    minor;        \/**< Minor version number. *\/$/;"	m	struct:__DRIversionRec
minor	drivers/GL/internal/dri_interface.h	/^    int    minor;        \/**< Minor version number. *\/$/;"	m	struct:__DRIversionRec
minor	drivers/SQLite/sqlite3/sqlite3.c	/^  YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:yyStackEntry	file:
minor_tick	kernel/TeGraph.h	/^	int minor_tick;        \/* length of minor tick mark (in pixels) *\/$/;"	m	class:TeGraphPlot
minute	kernel/TeTime.h	/^	int minute() const {return ts_.tm_min;}$/;"	f	class:TeTime
mixColor	drivers/qt/TeAppTheme.h	/^	bool mixColor()$/;"	f	class:TeAppTheme
mixColor	drivers/qt/TeAppTheme.h	/^	void mixColor(bool mixcolor)$/;"	f	class:TeAppTheme
mix_color_	drivers/qt/TeAppTheme.h	/^	bool			mix_color_;$/;"	m	class:TeAppTheme
mnMaster	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 mnMaster;$/;"	m	struct:Mem3Global	file:
mnPmaSize	drivers/SQLite/sqlite3/sqlite3.c	/^  int mnPmaSize;                  \/* Minimum PMA size, in bytes *\/$/;"	m	struct:VdbeSorter	file:
mnReq	drivers/SQLite/sqlite3/sqlite3.c	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config	file:
mode	drivers/GL/dri_interface.h	/^    const __GLcontextModes * mode;$/;"	m	struct:__DRIcontextRec
mode	drivers/GL/internal/dri_interface.h	/^    const __GLcontextModes * mode;$/;"	m	struct:__DRIcontextRec
mode	drivers/Oracle/OCI/include/occiAQ.h	/^     ub4 mode;$/;"	m	class:oracle::occi::aq::NotifyResult
mode	drivers/SQLite/sqlite3/shell.c	/^  int mode;              \/* An output mode setting *\/$/;"	m	struct:callback_data	file:
mode	drivers/SQLite/sqlite3/shell.c	/^  int mode;$/;"	m	struct:previous_mode_data	file:
mode	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::mode()$/;"	f	class:TeQtMultiTextEdit
mode	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::mode(int m)$/;"	f	class:TeQtMultiTextEdit
mode	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::mode()$/;"	f	class:TeQtTextEdit
mode	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::mode(int mode)$/;"	f	class:TeQtTextEdit
mode	drivers/qwt/TeQwtPlotPicker.cpp	/^void TeQwtPlotPicker::mode(int m)$/;"	f	class:TeQwtPlotPicker
modeDescr	drivers/SQLite/sqlite3/shell.c	/^static const char *modeDescr[] = {$/;"	v	file:
mode_	drivers/qt/TeQtTextEdit.h	/^	int					mode_;$/;"	m	class:TeQtTextEdit
mode_	drivers/qwt/TeQwtPlotPicker.h	/^	int mode_;$/;"	m	class:TeQwtPlotPicker
mode_	kernel/TeRasterParams.h	/^	char	mode_;			\/\/!< a character indicating the access mode to the raster data: 'r', 'w' or 'c'$/;"	m	class:TeRasterParams
mode_	kernel/TeStdFile.h	/^	string mode_;$/;"	m	class:TeStdFile
modeloalcance_	stat/TeSemivarModelFactory.h	/^	double		modeloalcance_;$/;"	m	class:TeSemivarModel
modelocontribuicao_	stat/TeSemivarModelFactory.h	/^	double		modelocontribuicao_;$/;"	m	class:TeSemivarModel
modeloefeitopepita_	stat/TeSemivarModelFactory.h	/^	double		modeloefeitopepita_;$/;"	m	class:TeSemivarModel
modes	drivers/GL/glcore.h	/^    __GLcontextModes *modes;$/;"	m	struct:__GLdrawablePrivateRec
modes	drivers/GL/internal/glcore.h	/^    __GLcontextModes *modes;$/;"	m	struct:__GLdrawablePrivateRec
modifyPagePointer	drivers/SQLite/sqlite3/sqlite3.c	/^static int modifyPagePointer(MemPage *pPage, Pgno iFrom, Pgno iTo, u8 eType){$/;"	f	file:
month	kernel/TeTime.h	/^	int month() const {return ts_.tm_mon+1;}$/;"	f	class:TeTime
moravecDownSampleFactor_	image_processing/TePDIMMIOMatching.hpp	/^          double moravecDownSampleFactor_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
moravecDownSampleFactor_	image_processing/TePDIMMIOMatching.hpp	/^      const double moravecDownSampleFactor_;$/;"	m	class:TePDIMMIOMatching
moravecRepeatability	image_processing/TePDIMMIOMatching.cpp	/^void TePDIMMIOMatching::moravecRepeatability( const MaximasListT& inputList,$/;"	f	class:TePDIMMIOMatching
moravecRepeatabilityMinTolerance_	image_processing/TePDIMMIOMatching.hpp	/^      const double moravecRepeatabilityMinTolerance_;      $/;"	m	class:TePDIMMIOMatching
moravecUpSampleFactor_	image_processing/TePDIMMIOMatching.hpp	/^          double moravecUpSampleFactor_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
moravecUpSampleFactor_	image_processing/TePDIMMIOMatching.hpp	/^      const double moravecUpSampleFactor_;$/;"	m	class:TePDIMMIOMatching
moravecWindowSize_	image_processing/TePDIMMIOMatching.hpp	/^          unsigned int moravecWindowSize_;$/;"	m	class:TePDIMMIOMatching::ExtractLocalMaximasParams
mountExactWhereSQL	functions/TeAddressLocator.cpp	/^string TeAddressLocator::mountExactWhereSQL(const TeAddress& address, const string& fullName)$/;"	f	class:TeAddressLocator
mountLikeWhereSQL	functions/TeAddressLocator.cpp	/^string TeAddressLocator::mountLikeWhereSQL(const TeAddress& address, const string& fullName)$/;"	f	class:TeAddressLocator
mountPatternWhereSQL	functions/TeAddressLocator.cpp	/^string TeAddressLocator::mountPatternWhereSQL(const TeAddress& address, const string& fullName, const bool& disabletype, const bool& disabletitle, const bool& disablepreposition)$/;"	f	class:TeAddressLocator
mountSelect	kernel/TeSpatialOperations.cpp	/^mountSelect(string geomTable, string colTable, TeGeomRep rep, TeBox& box, int relate, TeDatabasePortal *portal)$/;"	f
mountSimilarWhereSQL	functions/TeAddressLocator.cpp	/^string TeAddressLocator::mountSimilarWhereSQL(const TeAddress& address)$/;"	f	class:TeAddressLocator
mouseDoubleClickEvent	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::mouseDoubleClickEvent(QMouseEvent* e)$/;"	f	class:TeQtColorBar
mouseMoveEvent	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::mouseMoveEvent(QMouseEvent* e)$/;"	f	class:TeQtColorBar
mouseMoveEvent	drivers/qt/TeQtFrame.cpp	/^void TeQtFrame::mouseMoveEvent(QMouseEvent* e)$/;"	f	class:TeQtFrame
mouseMoveEvent	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::mouseMoveEvent(QMouseEvent* e)$/;"	f	class:TeQtGLWidget
mousePosition_	drivers/qt/TeQtGLWidget.h	/^	QPoint mousePosition_;$/;"	m	class:TeQtGLWidget
mousePressEvent	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::mousePressEvent(QMouseEvent* e)$/;"	f	class:TeQtColorBar
mousePressEvent	drivers/qt/TeQtFrame.cpp	/^void TeQtFrame::mousePressEvent(QMouseEvent* e)$/;"	f	class:TeQtFrame
mousePressEvent	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::mousePressEvent(QMouseEvent* e)$/;"	f	class:TeQtGLWidget
mousePressedOnHorizontalHeader_	drivers/qt/TeQtGrid.h	/^	bool					mousePressedOnHorizontalHeader_;$/;"	m	class:TeQtGrid
mouseReleaseEvent	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::mouseReleaseEvent(QMouseEvent*)$/;"	f	class:TeQtColorBar
mouseReleaseEvent	drivers/qt/TeQtFrame.cpp	/^void TeQtFrame::mouseReleaseEvent(QMouseEvent*e)$/;"	f	class:TeQtFrame
mouseReleaseEvent	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::mouseReleaseEvent(QMouseEvent*)$/;"	f	class:TeQtGLWidget
mouseReleasedOnVerticalHeaderSlot	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::mouseReleasedOnVerticalHeaderSlot(int lin)     $/;"	f	class:TeQtGrid
move	kernel/TePieBar.h	/^	void move(TeCoord2D pt)$/;"	f	class:TePieBar
moveBottom	kernel/TeViewNode.cpp	/^TeViewTree::moveBottom(TeViewNode* node)$/;"	f	class:TeViewTree
moveDown	kernel/TeView.h	/^	virtual void moveDown(TeViewNode* node)$/;"	f	class:TeView
moveDown	kernel/TeViewNode.cpp	/^TeViewTree::moveDown(TeViewNode* node)$/;"	f	class:TeViewTree
moveDown	kernel/TeViewNode.h	/^	virtual void	moveDown (TeViewNode*) {}$/;"	f	class:TeViewNode
moveDown	kernel/TeViewNode.h	/^	virtual void moveDown ()$/;"	f	class:TeViewNode
moveFirst	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::moveFirst()$/;"	f	class:TeOCICursor
moveFirst	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::moveFirst() $/;"	f	class:TeOCIOraclePortal
moveFirst	drivers/PostgreSQL/TePGInterface.cpp	/^bool TePGRecordset::moveFirst(void)$/;"	f	class:TePGRecordset
moveFirst	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::moveFirst()$/;"	f	class:TeAdoPortal
moveForward	kernel/TeRaster.cpp	/^void TeRaster::iterator::moveForward()$/;"	f	class:TeRaster::iterator
moveForward	kernel/TeRaster.cpp	/^void TeRaster::iteratorPoly::moveForward()$/;"	f	class:TeRaster::iteratorPoly
moveLast	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::moveLast()  $/;"	f	class:TeOCICursor
moveLast	drivers/PostgreSQL/TePGInterface.cpp	/^bool TePGRecordset::moveLast(void)$/;"	f	class:TePGRecordset
moveNext	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::moveNext()$/;"	f	class:TeOCICursor
moveNext	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::moveNext() $/;"	f	class:TeOCIOraclePortal
moveNext	drivers/PostgreSQL/TePGInterface.cpp	/^bool TePGRecordset::moveNext(void)$/;"	f	class:TePGRecordset
moveNext	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::moveNext()$/;"	f	class:TeAdoPortal
movePrevious	drivers/PostgreSQL/TePGInterface.cpp	/^bool TePGRecordset::movePrevious(void)$/;"	f	class:TePGRecordset
moveTo	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::moveTo(int pos) \/\/begin in 0$/;"	f	class:TeOCICursor
moveTo	drivers/PostgreSQL/TePGInterface.cpp	/^bool TePGRecordset::moveTo(const int& lin_number)$/;"	f	class:TePGRecordset
moveTo	drivers/gdal/TeOGRDataSet.cpp	/^bool TeOGRDataSet::moveTo(const int& index)$/;"	f	class:TeOGRDataSet
moveToChild	drivers/SQLite/sqlite3/sqlite3.c	/^static int moveToChild(BtCursor *pCur, u32 newPgno){$/;"	f	file:
moveToLeftmost	drivers/SQLite/sqlite3/sqlite3.c	/^static int moveToLeftmost(BtCursor *pCur){$/;"	f	file:
moveToParent	drivers/SQLite/sqlite3/sqlite3.c	/^static void moveToParent(BtCursor *pCur){$/;"	f	file:
moveToRightmost	drivers/SQLite/sqlite3/sqlite3.c	/^static int moveToRightmost(BtCursor *pCur){$/;"	f	file:
moveToRoot	drivers/SQLite/sqlite3/sqlite3.c	/^static int moveToRoot(BtCursor *pCur){$/;"	f	file:
moveTop	kernel/TeViewNode.cpp	/^TeViewTree::moveTop (TeViewNode* node)$/;"	f	class:TeViewTree
moveUp	kernel/TeView.h	/^	virtual void moveUp (TeViewNode* node)$/;"	f	class:TeView
moveUp	kernel/TeViewNode.cpp	/^TeViewTree::moveUp(TeViewNode* node)$/;"	f	class:TeViewTree
moveUp	kernel/TeViewNode.h	/^	virtual void	moveUp (TeViewNode*) {}$/;"	f	class:TeViewNode
moveUp	kernel/TeViewNode.h	/^	virtual void moveUp ()$/;"	f	class:TeViewNode
movetoTarget	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 movetoTarget;     \/* Argument to the deferred sqlite3BtreeMoveto() *\/$/;"	m	struct:VdbeCursor	file:
movingBackward_	drivers/PostgreSQL/TePGInterface.h	/^		bool movingBackward_;	\/\/ Mario$/;"	m	class:TePGRecordset
mprintf	drivers/SQLite/sqlite3/sqlite3.c	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
mprintf	drivers/SQLite/sqlite3/sqlite3ext.h	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines
mrsid_	drivers/MrSID/TeDecoderMrSID.h	/^	TeMrSIDReader* mrsid_;$/;"	m	class:TeDecoderMrSID
mrsid_initialized	drivers/MrSID/TeMrSID.cpp	/^bool TeMrSIDReader::mrsid_initialized = false;$/;"	m	class:TeMrSIDReader	file:
mrsid_initialized	drivers/MrSID/TeMrSID.h	/^	static bool mrsid_initialized; \/\/ indicates if MrSID has already been initialized$/;"	m	class:TeMrSIDReader
msgCode_	kernel/TeException.h	/^	TeErrorType 	msgCode_;   $/;"	m	class:TeException
mtxPtr_	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^        TePDIParaSegSegmentsBlock::SegmentsPointersMatrixT const* mtxPtr_;$/;"	m	class:TePDIParaSegRegGrowStrategy::MergingSegmentInfo::TePDIParaSegSegmentsBlock
multiGeometryToLayer	functions/TeGeoProcessingFunctions.cpp	/^inline bool multiGeometryToLayer(TeMultiGeometry& mGeom, const string& newId, TeLayer* newLayer, TeProjection* proj=0, TeGeomRep geomRep=TeGEOMETRYNONE)$/;"	f
multiRetrive	kernel/TeMultiContainer.h	/^void TeMultiContainer< TeMultiContainerKeyT >::multiRetrive($/;"	f	class:TeMultiContainer
multiSampleSize	drivers/GL/glxint.h	/^    GLuint multiSampleSize;     \/* Number of samples per pixel (0 if no ms) *\/$/;"	m	struct:__GLXFBConfigRec
multiSampleSize	drivers/GL/glxint.h	/^    int multiSampleSize;$/;"	m	struct:__GLXvisualConfigRec
multiSelect	drivers/SQLite/sqlite3/sqlite3.c	/^static int multiSelect($/;"	f	file:
multiSelectCollSeq	drivers/SQLite/sqlite3/sqlite3.c	/^static CollSeq *multiSelectCollSeq(Parse *pParse, Select *p, int iCol){$/;"	f	file:
multiSelectOrderBy	drivers/SQLite/sqlite3/sqlite3.c	/^static int multiSelectOrderBy($/;"	f	file:
must_delete_file_	kernel/TeMappedMemory.h	/^      bool must_delete_file_;$/;"	m	class:TeMappedMemory
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  CRITICAL_SECTION mutex;    \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  HMTX mutex;       \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  pthread_mutex_t mutex;     \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;          \/* MUTEX_STATIC_LRU or NULL *\/$/;"	m	struct:PGroup	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;          \/* Mutex for accessing the following: *\/$/;"	m	struct:PCacheGlobal	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;         \/* Connection mutex *\/$/;"	m	struct:sqlite3	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;         \/* Mutex to serialize access *\/$/;"	m	struct:Mem0Global	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:os2ShmNode	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:unixShmNode	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:winShmNode	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex; \/* Non-recursive mutex required to access this object *\/$/;"	m	struct:BtShared	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem3Global	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem5Global	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:__anon50	file:
mutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex_methods mutex;      \/* Low-level mutex interface *\/$/;"	m	struct:Sqlite3Config	file:
mutexIsInit	drivers/SQLite/sqlite3/sqlite3.c	/^static SQLITE_WSD int mutexIsInit = 0;$/;"	v	file:
mutexLock_	kernel/TeConnectionPool.h	/^    TeMutex mutexLock_;                      \/\/!< For threads control.$/;"	m	class:TeConnectionPool
mutexPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          TeMutex* mutexPtr_;$/;"	m	class:TePDIParallelSegmenter::GroupDataThreadEntryParams
mutexPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          TeMutex* mutexPtr_;$/;"	m	class:TePDIParallelSegmenter::SegmenterThreadEntryParams
mutex_	image_processing/TePDICorrelationMatching.hpp	/^          TeMutex& mutex_;$/;"	m	class:TePDICorrelationMatching::CorrThread
mutex_	kernel/TeThreadJobsManager.h	/^      TeMutex mutex_;$/;"	m	struct:TeThreadJobsManager::InternalManagerDataStruct
mutex_alloc	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines	file:
mutex_alloc	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines
mutex_enter	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_enter	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_free	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_free	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_leave	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_leave	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_try	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_try	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mxAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int  mxAlloc;        \/* Maximum allowed string length *\/$/;"	m	struct:StrAccum	file:
mxCurrent	drivers/SQLite/sqlite3/sqlite3.c	/^  int mxCurrent[NCSIZE];   \/* Highwater mark for nCurrent *\/$/;"	m	struct:__anon50	file:
mxErr	drivers/SQLite/sqlite3/sqlite3.c	/^  int mxErr;        \/* Stop accumulating errors when this reaches zero *\/$/;"	m	struct:IntegrityCk	file:
mxFrame	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 mxFrame;                    \/* Index of last valid frame in the WAL *\/$/;"	m	struct:WalIndexHdr	file:
mxOut	drivers/SQLite/sqlite3/sqlite3.c	/^  int mxOut;              \/* Highwater mark for nOut *\/$/;"	m	struct:Lookaside	file:
mxParserStack	drivers/SQLite/sqlite3/sqlite3.c	/^  int mxParserStack;                \/* maximum depth of the parser stack *\/$/;"	m	struct:Sqlite3Config	file:
mxPathname	drivers/SQLite/sqlite3/sqlite3.c	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs	file:
mxPathname	drivers/SQLite/sqlite3/sqlite3.h	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs
mxPgno	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno mxPgno;                \/* Maximum allowed size of the database *\/$/;"	m	struct:Pager	file:
mxPinned	drivers/SQLite/sqlite3/sqlite3.c	/^  int mxPinned;                  \/* nMaxpage + 10 - nMinPage *\/$/;"	m	struct:PGroup	file:
mxPmaSize	drivers/SQLite/sqlite3/sqlite3.c	/^  int mxPmaSize;                  \/* Maximum PMA size, in bytes.  0==no limit *\/$/;"	m	struct:VdbeSorter	file:
mxReq	drivers/SQLite/sqlite3/sqlite3.c	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config	file:
mxSample	drivers/SQLite/sqlite3/sqlite3.c	/^  int mxSample;             \/* Maximum number of samples to accumulate *\/$/;"	m	struct:Stat3Accum	file:
mxSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^  int mxSavepoint;       \/* Largest valid xSavepoint integer *\/$/;"	m	struct:Fts3Table	file:
mxStrlen	drivers/SQLite/sqlite3/sqlite3.c	/^  int mxStrlen;                     \/* Maximum string length *\/$/;"	m	struct:Sqlite3Config	file:
mxValue	drivers/SQLite/sqlite3/sqlite3.c	/^  int mxValue[10];          \/* Maximum value *\/$/;"	m	struct:sqlite3StatType	file:
mxWalSize	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 mxWalSize;             \/* Truncate WAL to this size upon reset *\/$/;"	m	struct:Wal	file:
myData_	kernel/TeDecoderASCIIGrid.h	/^	double* myData_;$/;"	m	class:TeDecoderASCIIGrid
myData_	kernel/TeDecoderJPEG.h	/^	unsigned char* myData_;$/;"	m	class:TeDecoderJPEG
myParentId_	kernel/TeViewNode.h	/^	int 			myParentId_;$/;"	m	class:TeViewNodeParams
myParent_	kernel/TeViewNode.h	/^	TeViewNode* 	myParent_;  $/;"	m	class:TeViewNodeParams
my_source_mgr	drivers/libjpeg/jmemdstsrc.h	/^} my_source_mgr;$/;"	t	typeref:struct:__anon37
my_src_ptr	drivers/libjpeg/jmemdstsrc.h	/^typedef my_source_mgr* my_src_ptr;$/;"	t
my_yyinput	kernel/lexTemporal.cpp	/^int my_yyinput(char* buf, int max_size)$/;"	f
mycertreqs_nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^   nzttIdentity *mycertreqs_nzttPersona;      \/* My cert-requests *\/$/;"	m	struct:nzttPersona
mycerts_nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^   nzttIdentity *mycerts_nzttPersona;         \/* My certificates *\/$/;"	m	struct:nzttPersona
myinputlim	kernel/yyTemporal.cpp	/^long myinputlim;	$/;"	v
myinputptr	kernel/yyTemporal.cpp	/^const char*	myinputptr;$/;"	v
myinputptr_aux	kernel/yyTemporal.cpp	/^string  myinputptr_aux;$/;"	v
mypkcs11Info_nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^   nzpkcs11_Info *mypkcs11Info_nzttPersona;   \/* PKCS11 token info *\/$/;"	m	struct:nzttPersona
mysql_	drivers/MySQL/TeMySQL.h	/^	st_mysql			*mysql_;$/;"	m	class:TeMySQLPortal
mysql_	drivers/MySQL/TeMySQL.h	/^        st_mysql*	mysql_;$/;"	m	class:TeMySQL
mystore_nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^   nzssEntry *mystore_nzttPersona;            \/* List of secrets *\/$/;"	m	struct:nzttPersona
mytps_nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^   nzttIdentity *mytps_nzttPersona;           \/* List of trusted identities *\/$/;"	m	struct:nzttPersona
n	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 n;$/;"	m	struct:CountCtx	file:
n	drivers/SQLite/sqlite3/sqlite3.c	/^  int n;                          \/* Length of z in bytes (excl. nul-term) *\/$/;"	m	struct:StrBuffer	file:
n	drivers/SQLite/sqlite3/sqlite3.c	/^  int n;                          \/* Number of bytes in buffer z *\/$/;"	m	struct:Fts3PhraseToken	file:
n	drivers/SQLite/sqlite3/sqlite3.c	/^  int n;                        \/* Number of assigned cursor values *\/$/;"	m	struct:WhereMaskSet	file:
n	drivers/SQLite/sqlite3/sqlite3.c	/^  int n;              \/* Number of characters in string value, excluding '\\0' *\/$/;"	m	struct:Mem	file:
n	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned int n;    \/* Number of characters in this token *\/$/;"	m	struct:Token	file:
n	utils/mtrand.h	/^  static const int n = 624; \/\/ compile time constants$/;"	m	class:MTRand_int32
n90pct	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned int n90pct;                \/* nMax*9\/10 *\/$/;"	m	struct:PCache1	file:
nAccumulator	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAccumulator;       \/* Number of columns that show through to the output.$/;"	m	struct:AggInfo	file:
nAdvance	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAdvance;                   \/* How many seg-readers to advance *\/$/;"	m	struct:Fts3MultiSegReader	file:
nAlias	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAlias;          \/* Number of aliased result set columns *\/$/;"	m	struct:Parse	file:
nAliasAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAliasAlloc;     \/* Number of allocated slots for aAlias[] *\/$/;"	m	struct:Parse	file:
nAll	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAll;                      \/* Size of a[] in bytes *\/$/;"	m	struct:Fts3Doclist	file:
nAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  i16 nAlloc;      \/* Number of entries allocated in a[] below *\/$/;"	m	struct:SrcList	file:
nAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int  nAlloc;         \/* Amount of space allocated in zText *\/$/;"	m	struct:StrAccum	file:
nAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAlloc;                     \/* Allocated size of buffer z in bytes *\/$/;"	m	struct:StrBuffer	file:
nAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAlloc;                     \/* Bytes of space at aAlloc *\/$/;"	m	struct:VdbeSorterIter	file:
nAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAlloc;            \/* Number of entries allocated below *\/$/;"	m	struct:ExprList	file:
nAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAlloc;        \/* Slots allocated for azResult[] *\/$/;"	m	struct:TabResult	file:
nAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAlloc;      \/* Number of entries allocated for a[] below *\/$/;"	m	struct:IdList	file:
nAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAlloc[NCSIZE];      \/* Total number of allocations *\/$/;"	m	struct:__anon50	file:
nAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  u64 nAlloc;         \/* Total number of calls to malloc *\/$/;"	m	struct:Mem5Global	file:
nAllocated	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAllocated;              \/* space allocated to zToken buffer *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nArg	drivers/SQLite/sqlite3/sqlite3.c	/^  i16 nArg;            \/* Number of arguments.  -1 means unlimited *\/$/;"	m	struct:FuncDef	file:
nAux	drivers/SQLite/sqlite3/sqlite3.c	/^  int nAux;                     \/* Number of entries allocated for apAux[] *\/$/;"	m	struct:VdbeFunc	file:
nBackfill	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 nBackfill;                  \/* Number of WAL frames backfilled into DB *\/$/;"	m	struct:WalCkptInfo	file:
nBacktrace	drivers/SQLite/sqlite3/sqlite3.c	/^  char nBacktrace;                    \/* Number of backtraces on this alloc *\/$/;"	m	struct:MemBlockHdr	file:
nBacktrace	drivers/SQLite/sqlite3/sqlite3.c	/^  int nBacktrace;$/;"	m	struct:__anon50	file:
nBacktraceSlots	drivers/SQLite/sqlite3/sqlite3.c	/^  char nBacktraceSlots;               \/* Available backtrace slots *\/$/;"	m	struct:MemBlockHdr	file:
nBackup	drivers/SQLite/sqlite3/sqlite3.c	/^  int nBackup;       \/* Number of backup operations reading this btree *\/$/;"	m	struct:Btree	file:
nBands	drivers/MrSID/TeMrSID.cpp	/^int TeMrSIDReader::nBands() const$/;"	f	class:TeMrSIDReader
nBands	kernel/TeRaster.h	/^inline int TeRaster::iterator::nBands(void)$/;"	f	class:TeRaster::iterator
nBands	kernel/TeRaster.h	/^inline int TeRaster::nBands()$/;"	f	class:TeRaster
nBands	kernel/TeRasterParams.cpp	/^TeRasterParams::nBands(int n)$/;"	f	class:TeRasterParams
nBands	kernel/TeRasterParams.h	/^	int nBands() const$/;"	f	class:TeRasterParams
nBands_	kernel/TeDecoderTIFF.h	/^	unsigned int	nBands_;		\/\/ number of samples per data$/;"	m	class:TeDecoderTIFF
nBands_	kernel/TeRaster.h	/^			int nBands_;$/;"	m	class:TeRaster::iterator
nBlock	drivers/SQLite/sqlite3/sqlite3.c	/^  int nBlock;      \/* Number of szAtom sized blocks in zPool *\/$/;"	m	struct:Mem5Global	file:
nBuf	drivers/SQLite/sqlite3/sqlite3.c	/^  int nBuf;                       \/* Size of zBuf[] in bytes *\/$/;"	m	struct:JournalFile	file:
nBuffer	drivers/SQLite/sqlite3/sqlite3.c	/^  int nBuffer;                    \/* Allocated size of aBuffer[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nBuffer	drivers/SQLite/sqlite3/sqlite3.c	/^  int nBuffer;$/;"	m	struct:IcuCursor	file:
nBusy	drivers/SQLite/sqlite3/sqlite3.c	/^  int nBusy;                  \/* Current number of users of this structure *\/$/;"	m	struct:Rtree	file:
nBusy	drivers/SQLite/sqlite3/sqlite3.c	/^  int nBusy;                 \/* Incremented with each busy call *\/$/;"	m	struct:BusyHandler	file:
nByte	drivers/SQLite/sqlite3/sqlite3.c	/^  int nByte;              \/* Size of open blob, in bytes *\/$/;"	m	struct:Incrblob	file:
nByte	drivers/SQLite/sqlite3/sqlite3.c	/^  int nByte;        \/* Size in byte of text or blob. *\/$/;"	m	struct:IndexSample	file:
nBytes	drivers/SQLite/sqlite3/sqlite3.c	/^  int nBytes;                  \/* size of the input *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nBytesPerCell	drivers/SQLite/sqlite3/sqlite3.c	/^  int nBytesPerCell;          \/* Bytes consumed per cell *\/$/;"	m	struct:Rtree	file:
nCell	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nCell;           \/* Number of cells on this page, local and ovfl *\/$/;"	m	struct:MemPage	file:
nChange	drivers/SQLite/sqlite3/sqlite3.c	/^  int nChange;                  \/* Value returned by sqlite3_changes() *\/$/;"	m	struct:sqlite3	file:
nChange	drivers/SQLite/sqlite3/sqlite3.c	/^  int nChange;            \/* Number of db changes made since last reset *\/$/;"	m	struct:Vdbe	file:
nChange	drivers/SQLite/sqlite3/sqlite3.c	/^  int nChange;            \/* Statement changes (Vdbe.nChanges)     *\/$/;"	m	struct:VdbeFrame	file:
nChar	drivers/SQLite/sqlite3/sqlite3.c	/^  int  nChar;          \/* Length of the string so far *\/$/;"	m	struct:StrAccum	file:
nChar	drivers/SQLite/sqlite3/sqlite3.c	/^  int nChar;                  \/* Number of UChar elements in pInput *\/$/;"	m	struct:IcuCursor	file:
nChild	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 nChild;              \/* Number of children that must disable us *\/$/;"	m	struct:WhereTerm	file:
nChildCsr	drivers/SQLite/sqlite3/sqlite3.c	/^  int nChildCsr;          \/* Number of cursors for child frame *\/$/;"	m	struct:VdbeFrame	file:
nChildMem	drivers/SQLite/sqlite3/sqlite3.c	/^  int nChildMem;          \/* Number of memory cells for child frame *\/$/;"	m	struct:VdbeFrame	file:
nCkpt	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 nCkpt;                 \/* Checkpoint sequence counter in the wal-header *\/$/;"	m	struct:Wal	file:
nCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int nCol;                           \/* Number of entries in azCol[] *\/$/;"	m	struct:ParseContext	file:
nCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int nCol;                       \/* Number of columns in table *\/$/;"	m	struct:MatchInfo	file:
nCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int nCol;            \/* Number of columns in this table *\/$/;"	m	struct:Table	file:
nCol	drivers/SQLite/sqlite3/sqlite3.c	/^  int nCol;         \/* Number of columns in this key *\/$/;"	m	struct:FKey	file:
nColCache	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 nColCache;        \/* Number of entries in the column cache *\/$/;"	m	struct:Parse	file:
nColsInPoly	kernel/TeRaster.h	/^inline int TeRaster::iteratorPoly::nColsInPoly()$/;"	f	class:TeRaster::iteratorPoly
nColsInPoly_	kernel/TeRaster.h	/^			int					nLinesInPoly_, nColsInPoly_;$/;"	m	class:TeRaster::iteratorPoly
nCols_	drivers/qt/TeQtGridSource.h	/^	int nCols_;$/;"	m	class:TeQtGridSource
nCols_	drivers/qt/TeQtLegendSource.h	/^	int nCols_;$/;"	m	class:TeQtLegendSource
nCols_	image_processing/TePDIRaster2Vector.hpp	/^      long   nCols_;$/;"	m	class:TePDIRaster2Vector
nCols_	kernel/TeRaster.h	/^			int nLines_, nCols_;$/;"	m	class:TeRaster::iterator
nCols_	kernel/TeRepresentation.h	/^	int		nCols_;			\/\/!< number of columns in raster geometry$/;"	m	struct:TeRepresentation
nColumn	drivers/SQLite/sqlite3/sqlite3.c	/^  int nColumn;                    \/* number of named columns in virtual table *\/$/;"	m	struct:Fts3Table	file:
nColumn	drivers/SQLite/sqlite3/sqlite3.c	/^  int nColumn;            \/* Number of used entries in aCol[] *\/$/;"	m	struct:AggInfo	file:
nColumn	drivers/SQLite/sqlite3/sqlite3.c	/^  int nColumn;       \/* Number of columns in the result *\/$/;"	m	struct:TabResult	file:
nColumn	drivers/SQLite/sqlite3/sqlite3.c	/^  int nColumn;     \/* Number of columns in the table used by this index *\/$/;"	m	struct:Index	file:
nColumnAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nColumnAlloc;       \/* Number of slots allocated for aCol[] *\/$/;"	m	struct:AggInfo	file:
nConstraint	drivers/SQLite/sqlite3/sqlite3.c	/^  int nConstraint;                  \/* Number of entries in aConstraint *\/$/;"	m	struct:RtreeCursor	file:
nConstraint	drivers/SQLite/sqlite3/sqlite3.c	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info	file:
nConstraint	drivers/SQLite/sqlite3/sqlite3.h	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info
nCost	drivers/SQLite/sqlite3/sqlite3.c	/^  int nCost;                      \/* Cost of running iterator *\/$/;"	m	struct:Fts3MultiSegReader	file:
nCsr	drivers/SQLite/sqlite3/sqlite3.c	/^  int nCsr;                     \/* Number of cursors required *\/$/;"	m	struct:SubProgram	file:
nCurrent	drivers/SQLite/sqlite3/sqlite3.c	/^  int nCurrent[NCSIZE];    \/* Current number of allocations *\/$/;"	m	struct:__anon50	file:
nCurrentPage	drivers/SQLite/sqlite3/sqlite3.c	/^  int nCurrentPage;              \/* Number of purgeable pages allocated *\/$/;"	m	struct:PGroup	file:
nCursor	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nCursor;            \/* Number of entries in apCsr *\/$/;"	m	struct:VdbeFrame	file:
nCursor	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nCursor;            \/* Number of slots in apCsr[] *\/$/;"	m	struct:Vdbe	file:
nDLt	drivers/SQLite/sqlite3/sqlite3.c	/^    tRowcnt nDLt;              \/* sqlite_stat3.nDLt *\/$/;"	m	struct:Stat3Accum::Stat3Sample	file:
nDLt	drivers/SQLite/sqlite3/sqlite3.c	/^  tRowcnt nDLt;     \/* Est. number of distinct keys less than this sample *\/$/;"	m	struct:IndexSample	file:
nData	drivers/SQLite/sqlite3/sqlite3.c	/^  int nData;                      \/* Bytes of data in aData *\/$/;"	m	struct:SegmentWriter	file:
nData	drivers/SQLite/sqlite3/sqlite3.c	/^  int nData;                      \/* Bytes of valid data so far *\/$/;"	m	struct:SegmentNode	file:
nData	drivers/SQLite/sqlite3/sqlite3.c	/^  int nData;         \/* Slots used in azResult[].  (nRow+1)*nColumn *\/$/;"	m	struct:TabResult	file:
nData	drivers/SQLite/sqlite3/sqlite3.c	/^  int nData;$/;"	m	struct:PendingList	file:
nData	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 nData;     \/* Number of bytes of data *\/$/;"	m	struct:CellInfo	file:
nDb	drivers/SQLite/sqlite3/sqlite3.c	/^  int nDb;                      \/* Number of backends currently in use *\/$/;"	m	struct:sqlite3	file:
nDeferredCons	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 nDeferredCons;                  \/* Number of deferred fk violations *\/$/;"	m	struct:Savepoint	file:
nDeferredCons	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 nDeferredCons;            \/* Net deferred constraints this transaction. *\/$/;"	m	struct:sqlite3	file:
nDepth	drivers/SQLite/sqlite3/sqlite3.c	/^  int nDepth;          \/* Depth of subquery recursion. 1 for no recursion *\/$/;"	m	struct:NameContext	file:
nDim	drivers/SQLite/sqlite3/sqlite3.c	/^  int nDim;                   \/* Number of dimensions *\/$/;"	m	struct:Rtree	file:
nDoc	drivers/SQLite/sqlite3/sqlite3.c	/^    sqlite3_int64 nDoc;           \/* 'documents' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nDoc	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 nDoc;             \/* Documents in table *\/$/;"	m	struct:Fts3Cursor	file:
nDoc	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 nDoc;             \/* Number of docs in database *\/$/;"	m	struct:MatchInfo	file:
nDoclist	drivers/SQLite/sqlite3/sqlite3.c	/^  int nDoclist;                   \/* Size of aDoclist[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nDoclist	drivers/SQLite/sqlite3/sqlite3.c	/^  int nDoclist;                   \/* Size of buffer at aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
nDoclist	drivers/SQLite/sqlite3/sqlite3.c	/^  int nDoclist;                   \/* Size of doclist in current entry *\/$/;"	m	struct:Fts3SegReader	file:
nElems	image_processing/TePDICluster.hpp	/^    int nElems;$/;"	m	class:TePDICluster
nEntities	drivers/shapelib/TeQuerierSHP.h	/^	int			nEntities;		\/\/!< number of entities in the shape file$/;"	m	class:TeQuerierSHP
nEntry	drivers/SQLite/sqlite3/sqlite3.c	/^    int nEntry;                   \/* Nr. of entries in aPgno[] and aIndex[] *\/$/;"	m	struct:WalIterator::WalSegment	file:
nEntry	drivers/SQLite/sqlite3/sqlite3.c	/^  int nEntry;                     \/* Number of terms written to node so far *\/$/;"	m	struct:SegmentNode	file:
nEq	drivers/SQLite/sqlite3/sqlite3.c	/^    tRowcnt nEq;               \/* sqlite_stat3.nEq *\/$/;"	m	struct:Stat3Accum::Stat3Sample	file:
nEq	drivers/SQLite/sqlite3/sqlite3.c	/^  tRowcnt nEq;      \/* Est. number of rows where the key equals this sample *\/$/;"	m	struct:IndexSample	file:
nEq	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 nEq;                       \/* Number of == constraints *\/$/;"	m	struct:WherePlan	file:
nErr	drivers/SQLite/sqlite3/shell.c	/^  int nErr;              \/* Number of errors seen *\/$/;"	m	struct:callback_data	file:
nErr	drivers/SQLite/sqlite3/sqlite3.c	/^  int nErr;            \/* Number of errors encountered while resolving names *\/$/;"	m	struct:NameContext	file:
nErr	drivers/SQLite/sqlite3/sqlite3.c	/^  int nErr;            \/* Number of errors seen *\/$/;"	m	struct:Parse	file:
nErr	drivers/SQLite/sqlite3/sqlite3.c	/^  int nErr;         \/* Number of messages written to zErrMsg so far *\/$/;"	m	struct:IntegrityCk	file:
nExpr	drivers/SQLite/sqlite3/sqlite3.c	/^  int nExpr;             \/* Number of expressions on the list *\/$/;"	m	struct:ExprList	file:
nExt	drivers/SQLite/sqlite3/sqlite3.c	/^  int nExt;              \/* Number of entries in aExt[] *\/          $/;"	m	struct:sqlite3AutoExtList	file:
nExtension	drivers/SQLite/sqlite3/sqlite3.c	/^  int nExtension;               \/* Number of loaded extensions *\/$/;"	m	struct:sqlite3	file:
nExtra	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nExtra;                 \/* Add this many bytes to each in-memory page *\/$/;"	m	struct:Pager	file:
nField	drivers/SQLite/sqlite3/sqlite3.c	/^  int nField;           \/* Number of fields in the header *\/$/;"	m	struct:VdbeCursor	file:
nField	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nField;         \/* Number of entries in aColl[] *\/$/;"	m	struct:KeyInfo	file:
nField	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nField;         \/* Number of entries in apMem[] *\/$/;"	m	struct:UnpackedRecord	file:
nFkConstraint	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 nFkConstraint;      \/* Number of imm. FK constraints this VM *\/$/;"	m	struct:Vdbe	file:
nFrame	drivers/SQLite/sqlite3/sqlite3.c	/^  int nFrame;             \/* Number of frames in pFrame list *\/$/;"	m	struct:Vdbe	file:
nFree	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nFree;           \/* Number of free bytes on the page *\/$/;"	m	struct:MemPage	file:
nFreeSlot	drivers/SQLite/sqlite3/sqlite3.c	/^  int nFreeSlot;                 \/* Number of unused pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nFresh	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nFresh;                    \/* Number of objects on pFresh *\/$/;"	m	struct:RowSet	file:
nFunc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nFunc;              \/* Number of entries in aFunc[] *\/$/;"	m	struct:AggInfo	file:
nFuncAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nFuncAlloc;         \/* Number of slots allocated for aFunc[] *\/$/;"	m	struct:AggInfo	file:
nGeometries	kernel/TeLayer.cpp	/^TeLayer::nGeometries(TeGeomRep rep)$/;"	f	class:TeLayer
nHash	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned int nHash;                 \/* Number of slots in apHash[] *\/$/;"	m	struct:PCache1	file:
nHeader	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nHeader;   \/* Size of the cell content header in bytes *\/$/;"	m	struct:CellInfo	file:
nHeap	drivers/SQLite/sqlite3/sqlite3.c	/^  int nHeap;                        \/* Size of pHeap[] *\/$/;"	m	struct:Sqlite3Config	file:
nHeight	drivers/SQLite/sqlite3/sqlite3.c	/^  int nHeight;            \/* Expression tree height of current sub-select *\/$/;"	m	struct:Parse	file:
nHeight	drivers/SQLite/sqlite3/sqlite3.c	/^  int nHeight;           \/* Height of the tree headed by this node *\/$/;"	m	struct:Expr	file:
nHit	drivers/SQLite/sqlite3/sqlite3.c	/^  int nHit, nMiss;            \/* Total cache hits and misses *\/$/;"	m	struct:Pager	file:
nId	drivers/SQLite/sqlite3/sqlite3.c	/^  int nId;         \/* Number of identifiers on the list *\/$/;"	m	struct:IdList	file:
nIn	drivers/SQLite/sqlite3/sqlite3.c	/^      int nIn;              \/* Number of entries in aInLoop[] *\/$/;"	m	struct:WhereLevel::__anon45::__anon46	file:
nInMemory	drivers/SQLite/sqlite3/sqlite3.c	/^  int nInMemory;                  \/* Current size of pRecord list as PMA *\/$/;"	m	struct:VdbeSorter	file:
nIndex	drivers/SQLite/sqlite3/sqlite3.c	/^  int nIndex;                     \/* Size of aIndex[] *\/$/;"	m	struct:Fts3Table	file:
nInput	drivers/SQLite/sqlite3/sqlite3.c	/^  int nInput;                  \/* size of the input *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nItens_	kernel/TeTemporalSeries.h	/^	int 				nItens_; \/\/number of instances$/;"	m	class:TeTSEntry
nKey	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *pKey; int nKey;  \/* Key associated with this element *\/$/;"	m	struct:HashElem	file:
nKey	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 nKey;        \/* Size of pKey, or last integer key *\/$/;"	m	struct:BtCursor	file:
nKey	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 nKey;      \/* The key for INTKEY tables, or number of bytes in key *\/$/;"	m	struct:CellInfo	file:
nKey	drivers/SQLite/sqlite3/sqlite3.c	/^  int nKey;                       \/* Number of bytes in key *\/$/;"	m	struct:VdbeSorterIter	file:
nKey	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
nLabel	drivers/SQLite/sqlite3/sqlite3.c	/^  int nLabel;             \/* Number of labels used *\/$/;"	m	struct:Vdbe	file:
nLabelAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nLabelAlloc;        \/* Number of slots allocated in aLabel[] *\/$/;"	m	struct:Vdbe	file:
nLevel	drivers/SQLite/sqlite3/sqlite3.c	/^  int nLevel;                    \/* Number of nested loop *\/$/;"	m	struct:WhereInfo	file:
nLinesInPoly	kernel/TeRaster.h	/^inline int TeRaster::iteratorPoly::nLinesInPoly()$/;"	f	class:TeRaster::iteratorPoly
nLinesInPoly_	kernel/TeRaster.h	/^			int					nLinesInPoly_, nColsInPoly_;$/;"	m	class:TeRaster::iteratorPoly
nLines_	image_processing/TePDIRaster2Vector.hpp	/^      long   nLines_;$/;"	m	class:TePDIRaster2Vector
nLines_	kernel/TeRaster.h	/^			int nLines_, nCols_;$/;"	m	class:TeRaster::iterator
nLins_	kernel/TeRepresentation.h	/^	int		nLins_;			\/\/!< number of columns in raster geometry$/;"	m	struct:TeRepresentation
nList	drivers/SQLite/sqlite3/sqlite3.c	/^  int nList;                     \/* Length of position list *\/$/;"	m	struct:Fts3Doclist	file:
nLocal	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nLocal;    \/* Amount of payload held locally *\/$/;"	m	struct:CellInfo	file:
nLock	drivers/SQLite/sqlite3/sqlite3.c	/^  int nLock;                      \/* Number of outstanding file locks *\/$/;"	m	struct:unixInodeInfo	file:
nLookaside	drivers/SQLite/sqlite3/sqlite3.c	/^  int nLookaside;                   \/* Default lookaside buffer count *\/$/;"	m	struct:Sqlite3Config	file:
nLt	drivers/SQLite/sqlite3/sqlite3.c	/^    tRowcnt nLt;               \/* sqlite_stat3.nLt *\/$/;"	m	struct:Stat3Accum::Stat3Sample	file:
nLt	drivers/SQLite/sqlite3/sqlite3.c	/^  tRowcnt nLt;      \/* Est. number of rows where key is less than this sample *\/$/;"	m	struct:IndexSample	file:
nMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentNode	file:
nMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentWriter	file:
nMatchinfo	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMatchinfo;                 \/* Number of elements in aMatchinfo[] *\/$/;"	m	struct:Fts3Cursor	file:
nMax	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMax;                           \/* Configured cache size *\/$/;"	m	struct:PCache	file:
nMax	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned int nMax;                  \/* Configured "cache_size" value *\/$/;"	m	struct:PCache1	file:
nMaxArg	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMaxArg;         \/* Max args passed to user function by sub-program *\/$/;"	m	struct:Parse	file:
nMaxPage	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMaxPage;                  \/* Sum of nMax for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMaxPendingData	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMaxPendingData;            \/* Max pending data before flush to disk *\/$/;"	m	struct:Fts3Table	file:
nMem	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMem;                     \/* Number of memory cells required *\/$/;"	m	struct:SubProgram	file:
nMem	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMem;               \/* Number of entries in aMem *\/$/;"	m	struct:VdbeFrame	file:
nMem	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMem;               \/* Number of memory locations currently allocated *\/$/;"	m	struct:Vdbe	file:
nMem	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMem;            \/* Number of memory cells used so far *\/$/;"	m	struct:Parse	file:
nMem	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMem;         \/* Number of registers allocated *\/$/;"	m	struct:SelectDest	file:
nMin	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned int nMin;                  \/* Minimum number of pages reserved *\/$/;"	m	struct:PCache1	file:
nMinPage	drivers/SQLite/sqlite3/sqlite3.c	/^  int nMinPage;                  \/* Sum of nMin for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMiss	drivers/SQLite/sqlite3/sqlite3.c	/^  int nHit, nMiss;            \/* Total cache hits and misses *\/$/;"	m	struct:Pager	file:
nModuleArg	drivers/SQLite/sqlite3/sqlite3.c	/^  int nModuleArg;      \/* Number of arguments to the module *\/$/;"	m	struct:Table	file:
nMultiSampleBuffers	drivers/GL/glxint.h	/^    GLuint nMultiSampleBuffers; \/* Number of availble ms buffers *\/$/;"	m	struct:__GLXFBConfigRec
nMultiSampleBuffers	drivers/GL/glxint.h	/^    int nMultiSampleBuffers;$/;"	m	struct:__GLXvisualConfigRec
nNInterpolation	image_processing/TePDIInterpolator.cpp	/^void TePDIInterpolator::nNInterpolation( const double& line, const double& col, $/;"	f	class:TePDIInterpolator
nName	drivers/SQLite/sqlite3/sqlite3.c	/^  int nName;                    \/* Length of the zCanonicalName[] string *\/$/;"	m	struct:vxworksFileId	file:
nNear	drivers/SQLite/sqlite3/sqlite3.c	/^  int nNear;                 \/* Valid if eType==FTSQUERY_NEAR *\/$/;"	m	struct:Fts3Expr	file:
nNest	drivers/SQLite/sqlite3/sqlite3.c	/^  int nNest;                          \/* Number of nested brackets *\/$/;"	m	struct:ParseContext	file:
nNode	drivers/SQLite/sqlite3/sqlite3.c	/^  int nNode;                      \/* Size of buffer at aNode (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
nNodeSize	drivers/SQLite/sqlite3/sqlite3.c	/^  int nNodeSize;                  \/* Soft limit for node size *\/$/;"	m	struct:Fts3Table	file:
nObjects	kernel/TeLayer.cpp	/^TeLayer::nObjects(const string& tName)$/;"	f	class:TeLayer
nOcc	drivers/SQLite/sqlite3/sqlite3.c	/^    sqlite3_int64 nOcc;           \/* 'occurrences' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nOffsetList	drivers/SQLite/sqlite3/sqlite3.c	/^  int nOffsetList;                \/* For descending pending seg-readers only *\/$/;"	m	struct:Fts3SegReader	file:
nOp	drivers/SQLite/sqlite3/sqlite3.c	/^  int nOp;                      \/* Elements in aOp[] *\/$/;"	m	struct:SubProgram	file:
nOp	drivers/SQLite/sqlite3/sqlite3.c	/^  int nOp;                \/* Number of instructions in the program *\/$/;"	m	struct:Vdbe	file:
nOp	drivers/SQLite/sqlite3/sqlite3.c	/^  int nOp;                \/* Size of aOp array *\/$/;"	m	struct:VdbeFrame	file:
nOpAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nOpAlloc;           \/* Number of slots allocated for aOp[] *\/$/;"	m	struct:Vdbe	file:
nOrderBy	drivers/SQLite/sqlite3/sqlite3.c	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	file:
nOrderBy	drivers/SQLite/sqlite3/sqlite3.h	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info
nOrig	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno nOrig;                  \/* Original number of pages in file *\/$/;"	m	struct:PagerSavepoint	file:
nOut	drivers/SQLite/sqlite3/sqlite3.c	/^  int nOut;               \/* Number of buffers currently checked out *\/$/;"	m	struct:Lookaside	file:
nOverflow	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 nOverflow;        \/* Number of overflow cell bodies in aCell[] *\/$/;"	m	struct:MemPage	file:
nOvfl	drivers/SQLite/sqlite3/sqlite3.c	/^  int nOvfl;                      \/* Number of overflow pages to load doclist *\/$/;"	m	struct:Fts3TokenAndCost	file:
nPMA	drivers/SQLite/sqlite3/sqlite3.c	/^  int nPMA;                       \/* Number of PMAs stored in pTemp1 *\/$/;"	m	struct:VdbeSorter	file:
nPSample	drivers/SQLite/sqlite3/sqlite3.c	/^  tRowcnt nPSample;         \/* How often to do a periodic sample *\/$/;"	m	struct:Stat3Accum	file:
nPage	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno nPage;       \/* Number of pages in the database *\/$/;"	m	struct:IntegrityCk	file:
nPage	drivers/SQLite/sqlite3/sqlite3.c	/^  int nPage;                        \/* Number of pages in pPage[] *\/$/;"	m	struct:Sqlite3Config	file:
nPage	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 nPage;                      \/* Size of database in pages *\/$/;"	m	struct:WalIndexHdr	file:
nPage	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 nPage;            \/* Number of pages in the database *\/$/;"	m	struct:BtShared	file:
nPage	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned int nPage;                 \/* Total number of pages in apHash *\/$/;"	m	struct:PCache1	file:
nPagecount	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno nPagecount;         \/* Total number of pages to copy *\/$/;"	m	struct:sqlite3_backup	file:
nParam	drivers/SQLite/sqlite3/sqlite3.c	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
nParam	drivers/SQLite/sqlite3/sqlite3.c	/^  int nParam;$/;"	m	struct:RtreeMatchArg	file:
nParam	drivers/SQLite/sqlite3/sqlite3.h	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry
nPayload	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 nPayload;  \/* Total amount of payload *\/$/;"	m	struct:CellInfo	file:
nPendingData	drivers/SQLite/sqlite3/sqlite3.c	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts3Table	file:
nPgsz	drivers/SQLite/sqlite3/sqlite3.c	/^  int nPgsz;                      \/* Page size for host database *\/$/;"	m	struct:Fts3Table	file:
nPhrase	drivers/SQLite/sqlite3/sqlite3.c	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:Fts3Cursor	file:
nPhrase	drivers/SQLite/sqlite3/sqlite3.c	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:MatchInfo	file:
nPhrase	drivers/SQLite/sqlite3/sqlite3.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:SnippetIter	file:
nPhrase	drivers/SQLite/sqlite3/sqlite3.c	/^  int nPhrase;                    \/* Number of phrases seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nPool	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 nPool;$/;"	m	struct:Mem3Global	file:
nPopulate	drivers/SQLite/sqlite3/sqlite3.c	/^  int nPopulate;                  \/* If >0, bytes of buffer aNode[] loaded *\/$/;"	m	struct:Fts3SegReader	file:
nPrefix	drivers/SQLite/sqlite3/sqlite3.c	/^    int nPrefix;                  \/* Prefix length (0 for main terms index) *\/$/;"	m	struct:Fts3Table::Fts3Index	file:
nProgressOps	drivers/SQLite/sqlite3/sqlite3.c	/^  int nProgressOps;             \/* Number of opcodes for progress callback *\/$/;"	m	struct:sqlite3	file:
nQPlan	drivers/SQLite/sqlite3/sqlite3.c	/^static int nQPlan = 0;              \/* Next free slow in _query_plan[] *\/$/;"	v	file:
nQueryLoop	drivers/SQLite/sqlite3/sqlite3.c	/^  double nQueryLoop;   \/* Estimated number of iterations of a query *\/$/;"	m	struct:Parse	file:
nRangeReg	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRangeReg;       \/* Size of the temporary register block *\/$/;"	m	struct:Parse	file:
nRead	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRead, nWrite;          \/* Database pages read\/written *\/$/;"	m	struct:Pager	file:
nReaders	drivers/SQLite/sqlite3/sqlite3.c	/^  int nReaders;       \/* Number of reader locks obtained *\/$/;"	m	struct:winceLock	file:
nRec	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRec;                   \/* Pages journalled since last j-header written *\/$/;"	m	struct:Pager	file:
nRecyclable	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned int nRecyclable;           \/* Number of pages in the LRU list *\/$/;"	m	struct:PCache1	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  i16 nRef;                      \/* Number of users of this page *\/$/;"	m	struct:PgHdr	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRef;                           \/* Number of referenced pages *\/$/;"	m	struct:PCache	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRef;                       \/* NO LONGER USED *\/$/;"	m	struct:sqlite3_vtab	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRef;                       \/* Number of pointers to this structure *\/$/;"	m	struct:unixInodeInfo	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRef;                     \/* Number of references to this one *\/$/;"	m	struct:vxworksFileId	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRef;                  \/* Number of os2ShmLink objects pointing to this *\/$/;"	m	struct:os2ShmNode	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRef;                  \/* Number of unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRef;                  \/* Number of winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRef;                 \/* Number of pointers to this structure *\/$/;"	m	struct:VTable	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRef;             \/* Number of references to this structure *\/$/;"	m	struct:BtShared	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRef;            \/* Number of names resolved by this context *\/$/;"	m	struct:NameContext	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRef;$/;"	m	struct:FuncDestructor	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRef;$/;"	m	struct:RtreeNode	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nRef;            \/* Number of pointers to this Table *\/$/;"	m	struct:Table	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  volatile int nRef;         \/* Number of enterances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	drivers/SQLite/sqlite3/sqlite3.c	/^  volatile int nRef;         \/* Number of entrances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	drivers/SQLite/sqlite3/sqlite3.h	/^  int nRef;                       \/* NO LONGER USED *\/$/;"	m	struct:sqlite3_vtab
nRefInitMutex	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRefInitMutex;                \/* Number of users of pInitMutex *\/$/;"	m	struct:Sqlite3Config	file:
nRegion	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:os2ShmNode	file:
nRegion	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:winShmNode	file:
nRegion	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:unixShmNode	file:
nRemaining	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno nRemaining;         \/* Number of pages left to copy *\/$/;"	m	struct:sqlite3_backup	file:
nResColumn	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nResColumn;         \/* Number of columns in one row of the result set *\/$/;"	m	struct:Vdbe	file:
nReserve	drivers/SQLite/sqlite3/sqlite3.c	/^  i16 nReserve;               \/* Number of unused bytes at end of each page *\/$/;"	m	struct:Pager	file:
nReserve	drivers/SQLite/sqlite3/sqlite3.c	/^  int nReserve;                  \/* Try to keep nFreeSlot above this *\/$/;"	m	struct:PCacheGlobal	file:
nRow	drivers/SQLite/sqlite3/sqlite3.c	/^  double nRow;                   \/* Estimated number of rows (for EQP) *\/$/;"	m	struct:WherePlan	file:
nRow	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRow;          \/* Number of rows in the result *\/$/;"	m	struct:TabResult	file:
nRow	drivers/SQLite/sqlite3/sqlite3.c	/^  tRowcnt nRow;             \/* Number of rows in the entire table *\/$/;"	m	struct:Stat3Accum	file:
nRowAvg	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRowAvg;                    \/* Average size of database rows, in pages *\/$/;"	m	struct:Fts3Cursor	file:
nRowEst	drivers/SQLite/sqlite3/sqlite3.c	/^  tRowcnt nRowEst;     \/* Estimated rows in table - from sqlite_stat1 table *\/$/;"	m	struct:Table	file:
nRowOut	drivers/SQLite/sqlite3/sqlite3.c	/^  double nRowOut;                \/* Estimated number of output rows *\/$/;"	m	struct:WhereInfo	file:
nRows_	drivers/qt/TeQtGridSource.h	/^	int nRows_;$/;"	m	class:TeQtGridSource
nRows_	drivers/qt/TeQtLegendSource.h	/^	int nRows_;$/;"	m	class:TeQtLegendSource
nSample	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSample;              \/* Current number of samples *\/$/;"	m	struct:Stat3Accum	file:
nSample	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSample;             \/* Number of elements in aSample[] *\/$/;"	m	struct:Index	file:
nSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSavepoint;               \/* Number of non-transaction savepoints *\/$/;"	m	struct:sqlite3	file:
nSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSavepoint;             \/* Number of elements in aSavepoint[] *\/$/;"	m	struct:Pager	file:
nScratch	drivers/SQLite/sqlite3/sqlite3.c	/^  int nScratch;                     \/* Number of scratch buffers *\/$/;"	m	struct:Sqlite3Config	file:
nScratchFree	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 nScratchFree;$/;"	m	struct:Mem0Global	file:
nSegment	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSegment;                   \/* Number of entries in aSegment[] *\/$/;"	m	struct:WalIterator	file:
nSegment	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSegment;                   \/* Size of apSegment array *\/$/;"	m	struct:Fts3MultiSegReader	file:
nSelectRow	drivers/SQLite/sqlite3/sqlite3.c	/^  double nSelectRow;     \/* Estimated number of result rows *\/$/;"	m	struct:Select	file:
nSelectedBlocks_	drivers/MrSID/TeDecoderMrSID.h	/^	int nSelectedBlocks_;$/;"	m	class:TeDecoderMrSID
nSelectedBlocks_	kernel/TeDecoderDatabase.h	/^	int					nSelectedBlocks_;$/;"	m	class:TeDecoderDatabase
nSet	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSet;            \/* Number of sets used so far *\/$/;"	m	struct:Parse	file:
nSet	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 nSet;       \/* Number of bits that are set - only valid for aHash$/;"	m	struct:Bitvec	file:
nShapeType	drivers/shapelib/TeQuerierSHP.h	/^	int			nShapeType;		\/\/!< geometry type of the shape file  $/;"	m	class:TeQuerierSHP
nShared	drivers/SQLite/sqlite3/sqlite3.c	/^  int nShared;                    \/* Number of SHARED locks held *\/$/;"	m	struct:unixInodeInfo	file:
nSize	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSize;                      \/* Size of allocation at aData *\/$/;"	m	struct:SegmentWriter	file:
nSize	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 nSize;     \/* Size of the cell content on the main b-tree page *\/$/;"	m	struct:CellInfo	file:
nSlot	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSlot;                     \/* The number of pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nSlot	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSlot;               \/* Number of entries in a[] *\/$/;"	m	struct:WhereClause	file:
nSnippet	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSnippet;                   \/* Requested snippet length (in tokens) *\/$/;"	m	struct:SnippetIter	file:
nSortingColumn	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSortingColumn;     \/* Number of columns in the sorting index *\/$/;"	m	struct:AggInfo	file:
nSpace	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSpace;$/;"	m	struct:PendingList	file:
nSrc	drivers/SQLite/sqlite3/sqlite3.c	/^  i16 nSrc;        \/* Number of tables or subqueries in the FROM clause *\/$/;"	m	struct:SrcList	file:
nStat	drivers/SQLite/sqlite3/sqlite3.c	/^  int nStat;                      \/* Size of aStat[] array *\/$/;"	m	struct:Fts3auxCursor	file:
nStatement	drivers/SQLite/sqlite3/sqlite3.c	/^  int nStatement;               \/* Number of nested statement-transactions  *\/$/;"	m	struct:sqlite3	file:
nStmtDefCons	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 nStmtDefCons;       \/* Number of def. constraints when stmt started *\/$/;"	m	struct:Vdbe	file:
nStop	drivers/SQLite/sqlite3/sqlite3.c	/^  int nStop;                      \/* Byte-length of string zStop *\/$/;"	m	struct:Fts3auxCursor	file:
nSub	drivers/SQLite/sqlite3/sqlite3.c	/^  int nSub;                  \/* Number of entries in apSub *\/$/;"	m	struct:VdbeOpIter	file:
nSubRec	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 nSubRec;                \/* Number of records written to sub-journal *\/$/;"	m	struct:Pager	file:
nTab	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTab;            \/* Number of previously allocated VDBE cursors *\/$/;"	m	struct:Parse	file:
nTable	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTable;                   \/* Number of tables in the database *\/$/;"	m	struct:sqlite3	file:
nTableLock	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTableLock;        \/* Number of locks in aTableLock *\/$/;"	m	struct:Parse	file:
nTempInUse	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 nTempInUse;       \/* Number of aTempReg[] currently checked out *\/$/;"	m	struct:Parse	file:
nTempReg	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 nTempReg;         \/* Number of temporary registers in aTempReg[] *\/$/;"	m	struct:Parse	file:
nTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTerm;                      \/* Number of bytes in current term *\/$/;"	m	struct:Fts3SegReader	file:
nTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentNode	file:
nTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentWriter	file:
nTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTerm;                      \/* Size of zTerm in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTerm;               \/* Number of terms *\/$/;"	m	struct:WhereClause	file:
nTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTerm;$/;"	m	struct:Fts3SegFilter	file:
nTermAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTermAlloc;                 \/* Allocated size of zTerm buffer *\/$/;"	m	struct:Fts3SegReader	file:
nTilesInMemory_	kernel/TeRasterParams.h	/^	int nTilesInMemory_;		\/\/!< number of tiles to be kept in memory$/;"	m	class:TeRasterParams
nTitle	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTitle;        \/* Bytes of zTitle to save.  Includes '\\0' and padding *\/$/;"	m	struct:__anon50	file:
nTitle	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 nTitle;                          \/* Bytes of title; includes '\\0' *\/$/;"	m	struct:MemBlockHdr	file:
nToken	drivers/SQLite/sqlite3/sqlite3.c	/^  int nToken;                     \/* Number of tokens in phrase *\/$/;"	m	struct:SnippetPhrase	file:
nToken	drivers/SQLite/sqlite3/sqlite3.c	/^  int nToken;                     \/* Number of tokens seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nToken	drivers/SQLite/sqlite3/sqlite3.c	/^  int nToken;                \/* Number of tokens in the phrase *\/$/;"	m	struct:Fts3Phrase	file:
nTokenAllocated	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTokenAllocated;         \/* space allocated to zToken buffer *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTotalChange	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTotalChange;             \/* Value returned by sqlite3_total_changes() *\/$/;"	m	struct:sqlite3	file:
nTransaction	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTransaction;     \/* Number of open transactions (read + write) *\/$/;"	m	struct:BtShared	file:
nTree	drivers/SQLite/sqlite3/sqlite3.c	/^  int nTree;                      \/* Used size of aTree\/aIter (power of 2) *\/$/;"	m	struct:VdbeSorter	file:
nVTrans	drivers/SQLite/sqlite3/sqlite3.c	/^  int nVTrans;                  \/* Allocated size of aVTrans *\/$/;"	m	struct:sqlite3	file:
nVal	drivers/SQLite/sqlite3/sqlite3.c	/^  int nVal;$/;"	m	struct:SorterRecord	file:
nVar	drivers/SQLite/sqlite3/sqlite3.c	/^  int nVar;            \/* Number of '?' variables seen in the SQL so far *\/$/;"	m	struct:Parse	file:
nVar	drivers/SQLite/sqlite3/sqlite3.c	/^  ynVar nVar;             \/* Number of entries in aVar[] *\/$/;"	m	struct:Vdbe	file:
nVtabLock	drivers/SQLite/sqlite3/sqlite3.c	/^  int nVtabLock;             \/* Number of virtual tables to lock *\/$/;"	m	struct:Parse	file:
nWiData	drivers/SQLite/sqlite3/sqlite3.c	/^  int nWiData;               \/* Size of array apWiData *\/$/;"	m	struct:Wal	file:
nWrite	drivers/SQLite/sqlite3/sqlite3.c	/^  int nRead, nWrite;          \/* Database pages read\/written *\/$/;"	m	struct:Pager	file:
nZero	drivers/SQLite/sqlite3/sqlite3.c	/^    int nZero;          \/* Used when bit MEM_Zero is set in flags *\/$/;"	m	union:Mem::__anon49	file:
n_Bands	image_processing/TePDIKMeansClas.hpp	/^    int n_Bands;$/;"	m	class:TePDIKMeansClas
n_Class	image_processing/TePDIKMeansClas.hpp	/^    int n_Class;$/;"	m	class:TePDIKMeansClas
n_Iter	image_processing/TePDIKMeansClas.hpp	/^    int n_Iter;$/;"	m	class:TePDIKMeansClas
n_maps_	drivers/GTM/TeGTM.h	/^	long gradcolor_, bcolor_, nwptstyles_, usercolor_, nwpts_, ntrcks_, nrtes_, n_maps_, n_tk_, labelcolor_;$/;"	m	class:TeGTMHeader
n_tk_	drivers/GTM/TeGTM.h	/^	long gradcolor_, bcolor_, nwptstyles_, usercolor_, nwpts_, ntrcks_, nrtes_, n_maps_, n_tk_, labelcolor_;$/;"	m	class:TeGTMHeader
nakedPointer	kernel/TeSharedPtr.h	/^      inline T* nakedPointer() const$/;"	f	class:TeSharedPtr
name	drivers/qt/TeQtChartItem.h	/^	string name() {return name_;}$/;"	f	class:TeQtChartItem
name	kernel/TeCoverageParams.h	/^    std::string name;   \/\/!< Dimension name$/;"	m	struct:TeCoverageDimension
name	kernel/TeDatum.h	/^	std::string 	name()	 const			$/;"	f	class:TeDatum
name	kernel/TeDatum.h	/^	void name(const std::string& name)	 			$/;"	f	class:TeDatum
name	kernel/TeLayer.h	/^	virtual string name()$/;"	f	class:TeLayer
name	kernel/TeLayer.h	/^	virtual void name(const string &name)$/;"	f	class:TeLayer
name	kernel/TeProject.h	/^	virtual string name() $/;"	f	class:TeProject
name	kernel/TeProjection.h	/^	inline string& name() { return GPname; }$/;"	f	class:TeProjection
name	kernel/TeProjection.h	/^	string	name;	     \/\/!< projection name$/;"	m	struct:TeProjectionParams
name	kernel/TeProjection.h	/^  inline const string& name() const { return GPname; }	$/;"	f	class:TeProjection
name	kernel/TeStdFile.h	/^	string name ()$/;"	f	class:TeStdFile
name	kernel/TeTable.h	/^	const string& name() const$/;"	f	class:TeTable
name	kernel/TeTable.h	/^	string name()$/;"	f	class:TeTable
name	kernel/TeTable.h	/^	void name(const string& n)$/;"	f	class:TeTable
name	kernel/TeView.h	/^	virtual string	name () const { return name_; }$/;"	f	class:TeView
name	kernel/TeView.h	/^	virtual void name (const string& s) { name_ = s; }$/;"	f	class:TeView
name	kernel/TeViewNode.h	/^	virtual string	name () { return viewNodeParams_.name_; }$/;"	f	class:TeViewNode
name	kernel/TeViewNode.h	/^	virtual void	name (const string& s) { viewNodeParams_.name_ = s; }$/;"	f	class:TeViewNode
nameClash	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 nameClash;        \/* A permanent table name clashes with temp table name *\/$/;"	m	struct:Parse	file:
nameInUsingClause	drivers/SQLite/sqlite3/sqlite3.c	/^static int nameInUsingClause(IdList *pUsing, const char *zCol){$/;"	f	file:
name_	drivers/DXF/tedxflayer.h	/^    string name_; \/\/!< $/;"	m	class:TeDXFLayer
name_	drivers/DXF/tedxfvisitor.h	/^    string name_; \/\/!< $/;"	m	class:TeDXFVisitor
name_	drivers/GTM/TeGTM.h	/^	char *name_, *wname_;\/\/name deve ser char[10]$/;"	m	class:TeGTMWaypoints
name_	drivers/GTM/TeGTM.h	/^	char* name_;$/;"	m	class:TeGTMLayers
name_	drivers/GTM/TeGTM.h	/^	char* name_;$/;"	m	class:TeGTMUserIcons
name_	drivers/qt/TeQtChartItem.h	/^	string name_;$/;"	m	class:TeQtChartItem
name_	kernel/TeAttribute.h	/^	string			name_;		\/\/!< attribute name	$/;"	m	struct:TeAttributeRep
name_	kernel/TeDatum.h	/^	std::string	name_;		\/\/!< Planimetric TeDatum name$/;"	m	class:TeDatum
name_	kernel/TeLayer.h	/^	string		name_;					\/\/!< layer name$/;"	m	class:TeLayer
name_	kernel/TeProject.h	/^	string name_;$/;"	m	class:TeProject
name_	kernel/TeTable.h	/^	string				name_;	\/\/ name$/;"	m	class:TeTable
name_	kernel/TeView.h	/^	string			name_;	\/\/ view name$/;"	m	class:TeView
name_	kernel/TeViewNode.h	/^	string			name_;		$/;"	m	class:TeViewNodeParams
name_	kernel/TeVisual.h	/^	string name_;$/;"	m	struct:TeColor
name_map_	drivers/GTM/TeGTM.h	/^	char *name_map_, *comments_, *blob_;\/\/blob -> usado para guardar a imagem em si$/;"	m	class:TeGTMInformationImages
name_ocixmldbparam	drivers/Oracle/OCI/include/ocixmldb.h	/^  ocixmldbpname   name_ocixmldbparam;$/;"	m	struct:ocixmldbparam
nb	image_processing/TePDIHants.cpp	/^  int nl, nc, nb;$/;"	v
nban	image_processing/TePDIEspecData.hpp	/^    int nban;               \/\/ Number of bands$/;"	m	class:TePDIEspecData
nbands	image_processing/TePDICluster.hpp	/^    int nbands;$/;"	m	class:TePDICluster
nbands	image_processing/TePDIRegion.hpp	/^    int nbands;$/;"	m	class:TePDIRegion
nbands_	image_processing/TePDIInterpolator.hpp	/^      unsigned int nbands_;      $/;"	m	class:TePDIInterpolator
nbands_	kernel/TeRasterParams.h	/^	int	nbands_;		\/\/!< number of bands$/;"	m	class:TeRasterParams
nbitsperPixel_	kernel/TeRasterParams.h	/^	vector<int>	nbitsperPixel_;		\/\/!< number of bits per pixel $/;"	m	class:TeRasterParams
nc	image_processing/TePDIHants.cpp	/^  int nl, nc, nb;$/;"	v
ncol	kernel/TeMatrix.h	/^	int ncol;	\/\/ Number of columns$/;"	m	class:TeMatrix
ncols_	kernel/TeRasterParams.h	/^	int ncols_;			\/\/!< number of columns$/;"	m	class:TeRasterParams
ndatum_	drivers/GTM/TeGTM.h	/^	short ngrid_, ndatum_, dx_, dy_, dz_;$/;"	m	class:TeGTMGridDatum
ndatum_	drivers/GTM/TeGTM.h	/^	unsigned char wli_, vwt_, gradnum_, wptnum_, usernum_, coriml_, ndatum_;$/;"	m	class:TeGTMHeader
nearestNeighbor	functions/TeInterpolation.h	/^		double nearestNeighbor(const kdKey& key)$/;"	f	class:TeInterpolationAlgorithms
nearestNeighborSearch	kernel/TeKdTree.h	/^		void nearestNeighborSearch(const kdKey& key, vector<kdDataItem>& report, vector<double>& sqrDists, const unsigned int& k) const$/;"	f	class:TeSAM::TeAdaptativeKdTree
nearestNeighborSearch	kernel/TeKdTree.h	/^void TeAdaptativeKdTree<KdTreeNode>::nearestNeighborSearch(KdTreeNode* node, const kdKey& key, vector<kdDataItem>& report, vector<double>& sqrDists, TeBox& rect) const$/;"	f	class:TeSAM::TeAdaptativeKdTree
nearestNeighbors	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::nearestNeighbors(const string& actGeomTable, TeGeomRep \/* actRep *\/, const string& objId1, const string& visGeomTable, const string& visCollTable, TeGeomRep \/* visRep *\/, TeDatabasePortal* portal, int numRes)$/;"	f	class:TeOracleSpatial
nearestNeighbors	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::nearestNeighbors(const string& actGeomTable, TeGeomRep actRep, const string& objId1, const string& visGeomTable, const string& visCollTable, TeGeomRep visRep, TeKeys& visIdsOut, int numRes)$/;"	f	class:TeOracleSpatial
nearestNeighbors	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::nearestNeighbors(const string& actGeomTable, const string& actCollTable, TeGeomRep \/* actRep *\/, const string& objId1, TeDatabasePortal* portal, int numRes)$/;"	f	class:TeOracleSpatial
nearestNeighbors	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::nearestNeighbors(const string& actGeomTable, const string& actCollTable, TeGeomRep actRep, const string& objId1, TeKeys& actIdsOut, int numRes)$/;"	f	class:TeOracleSpatial
nearestNeighbors	kernel/TeDatabase.cpp	/^TeDatabase::nearestNeighbors(const string& \/* actGeomTable *\/, TeGeomRep \/* actRep *\/, const string& \/* objId1 *\/, const string& \/* visGeomTable *\/, const string& \/* visCollTable *\/, TeGeomRep \/* visRep *\/, TeDatabasePortal* \/* portal *\/, int \/* numRes *\/)$/;"	f	class:TeDatabase
nearestNeighbors	kernel/TeDatabase.cpp	/^TeDatabase::nearestNeighbors(const string& \/* actGeomTable *\/, TeGeomRep \/* actRep *\/, const string& \/* objId1 *\/, const string& \/* visGeomTable *\/, const string& \/* visCollTable *\/, TeGeomRep \/* visRep *\/, TeKeys& \/* visIdsOut *\/, int \/* numRes *\/)$/;"	f	class:TeDatabase
nearestNeighbors	kernel/TeDatabase.cpp	/^TeDatabase::nearestNeighbors(const string& \/* actGeomTable *\/, const string& \/* actCollTable *\/, TeGeomRep \/* actRep *\/, const string& \/* objId1 *\/, TeDatabasePortal* \/* portal *\/, int \/* numRes *\/)$/;"	f	class:TeDatabase
nearestNeighbors	kernel/TeDatabase.cpp	/^TeDatabase::nearestNeighbors(const string& \/* actGeomTable *\/, const string& \/* actCollTable *\/, TeGeomRep \/* actRep *\/, const string& \/* objId1 *\/, TeKeys& \/* actIdsOut *\/, int \/* numRes *\/)$/;"	f	class:TeDatabase
nearestNeighbour	kernel/TeCoverageInterpolatorNN.h	/^    virtual TeGeomValuePair<T> nearestNeighbour(const TeCoord2D& position, double radius = 0)$/;"	f	class:TeCoverageInterpolatorNN
nearestNeighbourSearch	kernel/TeSTEvent.cpp	/^bool TeSTEventSet::nearestNeighbourSearch(const TeCoord2D& coord, vector<TeSTEvent* >& result, $/;"	f	class:TeSTEventSet
nearestNetworkPoint	kernel/TeNetwork.cpp	/^TeGraphNetwork:: nearestNetworkPoint (TeCoord2D& p1, int& lindex, TeCoord2D& pinter, double& distance, double tol)$/;"	f	class:TeGraphNetwork
nearestNetworkPoint	kernel/TeNetwork.cpp	/^TeNetwork:: nearestNetworkPoint (TeCoord2D& p1, int& lindex, TeCoord2D& pinter, double& distance, double tol)$/;"	f	class:TeNetwork
nearestNodePoint	kernel/TeNetwork.cpp	/^TeGraphNetwork:: nearestNodePoint (TeCoord2D& p1, int& index, TeCoord2D& p2, double& distance, double tol)$/;"	f	class:TeGraphNetwork
nearestNodePoint	kernel/TeNetwork.cpp	/^TeNetwork:: nearestNodePoint (TeCoord2D& p1, int& index, TeCoord2D& p2, double& distance, double tol)$/;"	f	class:TeNetwork
nearlyFull	drivers/SQLite/sqlite3/sqlite3.c	/^  int nearlyFull;$/;"	m	struct:Mem0Global	file:
needCsvQuote	drivers/SQLite/sqlite3/shell.c	/^static const char needCsvQuote[] = {$/;"	v	file:
needToFreeIdxStr	drivers/SQLite/sqlite3/sqlite3.c	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info	file:
needToFreeIdxStr	drivers/SQLite/sqlite3/sqlite3.h	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info
needUpdateDB	utils/TeUpdateDBVersion.cpp	/^bool needUpdateDB(TeDatabase* db, string& DBversion)$/;"	f
neigh_values	kernel/TeNeighbours.h	/^	typedef pair<string, TeProxMatrixAttributes>	neigh_values;$/;"	t	class:TeNeighbours
neigh_vector	kernel/TeNeighbours.h	/^	typedef vector<neigh_values>					neigh_vector;$/;"	t	class:TeNeighbours
neighbor	image_processing/TePDIBaatz.hpp	/^  struct segment *neighbor; \/* neighbor segment *\/$/;"	m	struct:segment_neighbor	typeref:struct:segment_neighbor::segment
neighbor_id	image_processing/TePDIBaatz.hpp	/^  unsigned long int neighbor_id; \/* id of neighbor segment *\/$/;"	m	struct:segment_neighbor
neighborhoodColumnName_	functions/TeAddressLocator.h	/^	string neighborhoodColumnName_;			\/\/!< The field name for the location neighborhood$/;"	m	struct:TeGeocodeTableMetadata
neighborhood_	functions/TeAddressLocator.h	/^	string neighborhood_;			\/\/!< Location neighborhood$/;"	m	struct:TeAddress
neighbourhood_table_	kernel/TeGeneralizedProxMatrix.h	/^	string					neighbourhood_table_;$/;"	m	class:TeGeneralizedProxMatrix
nelems_	kernel/TeDecoderMemory.h	/^	unsigned int nelems_;$/;"	m	class:TeDecoderMemory
nested	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 nested;           \/* Number of nested calls to the parser\/code generator *\/$/;"	m	struct:Parse	file:
net_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeGraphNetwork*		net_;$/;"	m	class:TeProxMatrixClosedNetworkStrategy
net_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeGraphNetwork*		net_;$/;"	m	class:TeProxMatrixOpenNetworkStrategy
net_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeGraphNetwork*		net_;$/;"	m	class:TeProxMatrixOpenNetworkStrategy2
networkId	drivers/GL/glxext.h	/^    int     networkId;$/;"	m	struct:__anon94
newDatabase	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::newDatabase(const string& database, const string& user, const string& password, const string& host, const int & port, bool terralibModel, const std::string& characterSet)$/;"	f	class:TeFirebird
newDatabase	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::newDatabase(const string& database, const string& user, const string& password, const string& host, const int & port, bool terralibModel, const std::string& characterSet)$/;"	f	class:TeMySQL
newDatabase	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::newDatabase(const string& database, const string& user, const string& password, const string& host, const int& port, bool terralibModel, const std::string& characterSet) $/;"	f	class:TeOCIOracle
newDatabase	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::newDatabase(const string& database, const string& user, const string& password, const string& host, const int& port, bool terralibModel, const std::string& characterSet)$/;"	f	class:TePostGIS
newDatabase	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::newDatabase(const string& database, const string& user, const string& password, const string& host, const int& port, bool terralibModel, const std::string& characterSet)$/;"	f	class:TePostgreSQL
newDatabase	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::newDatabase(const string& database, const string& user, const string& password, const string& host, const int &port, bool terralibModel, const std::string& characterSet)$/;"	f	class:TeSQLite
newDatabase	drivers/SQLite/sqlite3/sqlite3.c	/^static int newDatabase(BtShared *pBt){$/;"	f	file:
newDatabase	drivers/ado/TeAdoDB.cpp	/^TeAdo::newDatabase(const string& database, const string& user, const string& password , const string& \/* host *\/, const int& \/* port *\/, bool terralibModel, const std::string& characterSet)$/;"	f	class:TeAdo
newDatabase	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::newDatabase(const string& database, const string& user, const string& password , const string&  host , const int& \/* port *\/, bool terralibModel)$/;"	f	class:TeFireBird
newDatabase	drivers/ado/TeAdoOracle.cpp	/^TeOracle::newDatabase(const string& database, const string& user, const string& password, $/;"	f	class:TeOracle
newDatabase	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::newDatabase(const string& database, const string& user, const string& password, const string& host, const int& port, bool terralibModel, const std::string& \/*characterSet*\/)$/;"	f	class:TeSqlServer
newRowid	drivers/SQLite/sqlite3/sqlite3.c	/^static int newRowid(Rtree *pRtree, i64 *piRowid){$/;"	f	file:
newTnum	drivers/SQLite/sqlite3/sqlite3.c	/^    int newTnum;                \/* Rootpage of table being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
newdatum_	drivers/GTM/TeGTM.h	/^	char *gradfont_, *labelfont_, *userfont_, *newdatum_;$/;"	m	class:TeGTMHeader
newmask	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 newmask;         \/* Mask of new.* columns referenced *\/$/;"	m	struct:Parse	file:
next	drivers/GL/glcore.h	/^    struct __GLcontextModesRec * next;$/;"	m	struct:__GLcontextModesRec	typeref:struct:__GLcontextModesRec::__GLcontextModesRec
next	drivers/GL/internal/glcore.h	/^    struct __GLcontextModesRec * next;$/;"	m	struct:__GLcontextModesRec	typeref:struct:__GLcontextModesRec::__GLcontextModesRec
next	drivers/SQLite/sqlite3/sqlite3.c	/^      u32 next;       \/* Index in mem3.aPool[] of next free chunk *\/$/;"	m	struct:Mem3Block::__anon51::__anon53	file:
next	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem	file:
next	drivers/SQLite/sqlite3/sqlite3.c	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem	file:
next	drivers/SQLite/sqlite3/sqlite3.c	/^  int next;       \/* Index of next free chunk *\/$/;"	m	struct:Mem5Link	file:
next	kernel/TeViewTreeIterator.cpp	/^void TeViewTreeIterator::next()$/;"	f	class:TeViewTreeIterator
next	kernel/TeViewTreeIterator.cpp	/^void TeViewTreeRevIterator::next()$/;"	f	class:TeViewTreeRevIterator
next	kernel/TeViewTreeIterator.h	190;"	d
next	kernel/TeViewTreeIterator.h	33;"	d
nextAutovac	drivers/SQLite/sqlite3/sqlite3.c	/^  signed char nextAutovac;      \/* Autovac setting after VACUUM if >=0 *\/$/;"	m	struct:sqlite3	file:
nextLeaf	kernel/TeViewTreeIterator.cpp	/^void TeViewTreeIterator::nextLeaf()$/;"	f	class:TeViewTreeIterator
nextLeaf	kernel/TeViewTreeIterator.cpp	/^void TeViewTreeRevIterator::nextLeaf()$/;"	f	class:TeViewTreeRevIterator
nextLineToProcess_	image_processing/TePDICorrelationMatching.hpp	/^          volatile unsigned int& nextLineToProcess_;   $/;"	m	class:TePDICorrelationMatching::CorrThread
nextPagesize	drivers/SQLite/sqlite3/sqlite3.c	/^  int nextPagesize;             \/* Pagesize after VACUUM if >0 *\/$/;"	m	struct:sqlite3	file:
nextShmId	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 nextShmId;              \/* Next available unixShm.id value *\/$/;"	m	struct:unixShmNode	file:
nextShmId	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 nextShmId;              \/* Next available winShm.id value *\/$/;"	m	struct:winShmNode	file:
nextSwapLineRamLinesIndexesVecIdx_	image_processing/TePDIMatrix.hpp	/^      mutable unsigned int nextSwapLineRamLinesIndexesVecIdx_;$/;"	m	class:TePDIMatrix
nextSwapTileRamTilesIndexesVecIdx_	kernel/TeRasterMemManager.h	/^      unsigned int nextSwapTileRamTilesIndexesVecIdx_;$/;"	m	class:TeRasterMemManager
next_neighbor	image_processing/TePDIBaatz.hpp	/^  struct segment_neighbor *next_neighbor; \/* next neighbor *\/$/;"	m	struct:segment_neighbor	typeref:struct:segment_neighbor::segment_neighbor
next_nzttB64Cert	drivers/Oracle/OCI/include/nzt.h	/^   struct nzttB64Cert *next_nzttB64Cert;$/;"	m	struct:nzttB64Cert	typeref:struct:nzttB64Cert::nzttB64Cert
next_nzttIdentity	drivers/Oracle/OCI/include/nzt.h	/^   nzttIdentity *next_nzttIdentity;            \/* next identity in list *\/$/;"	m	struct:nzttIdentity
next_nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^   struct nzttPersona *next_nzttPersona;      \/* Next persona *\/$/;"	m	struct:nzttPersona	typeref:struct:nzttPersona::nzttPersona
next_original_segment	image_processing/TePDIBaatz.hpp	/^  struct segment *next_original_segment; \/* next original segment *\/$/;"	m	struct:segment	typeref:struct:segment::segment
next_pixel	image_processing/TePDIBaatz.hpp	/^  struct segment_pixel *next_pixel; \/* next pixel *\/$/;"	m	struct:segment_pixel	typeref:struct:segment_pixel::segment_pixel
next_segment	image_processing/TePDIBaatz.hpp	/^  struct segment *next_segment; \/* next not deleted segment *\/$/;"	m	struct:segment	typeref:struct:segment::segment
next_stmt	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
next_stmt	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
next_unused_segment	image_processing/TePDIBaatz.hpp	/^  struct segment *next_unused_segment; \/* next unused segment *\/$/;"	m	struct:segment	typeref:struct:segment::segment
nfreqs	image_processing/TePDIHants.cpp	/^  int nfreqs;$/;"	v
nfsUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^static int nfsUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
ngrid_	drivers/GTM/TeGTM.h	/^	short ngrid_, ndatum_, dx_, dy_, dz_;$/;"	m	class:TeGTMGridDatum
nil_	kernel/TeRedBlackTree.h	/^			NODE* nil_;		\/\/!< Reference node.			$/;"	m	class:TeREDBLACK::TeRBTree
nl	image_processing/TePDIHants.cpp	/^  int nl, nc, nb;$/;"	v
nlines_	kernel/TeRasterParams.h	/^	int nlines_;			\/\/!< number of lines$/;"	m	class:TeRasterParams
noBlendMethodImp	image_processing/TePDIBlender.cpp	/^void TePDIBlender::noBlendMethodImp( const double& line, const double& col,$/;"	f	class:TePDIBlender
noBlendMethodImp_coord1_	image_processing/TePDIBlender.hpp	/^      TeCoord2D noBlendMethodImp_coord1_;$/;"	m	class:TePDIBlender
noBlendMethodImp_coord2_	image_processing/TePDIBlender.hpp	/^      TeCoord2D noBlendMethodImp_coord2_;$/;"	m	class:TePDIBlender
noCase	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 noCase;$/;"	m	struct:compareInfo	file:
noReadlock	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 noReadlock;              \/* Do not bother to obtain readlocks *\/$/;"	m	struct:Pager	file:
noSync	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 noSync;                  \/* Do not sync the journal if true *\/$/;"	m	struct:Pager	file:
nocaseCollatingFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static int nocaseCollatingFunc($/;"	f	file:
nodeAcquire	drivers/SQLite/sqlite3/sqlite3.c	/^nodeAcquire($/;"	f	file:
nodeColor_	drivers/qt/TeQtCanvas.h	/^	QColor		nodeColor_;$/;"	m	class:TeQtCanvas
nodeCount_	kernel/TeRedBlackTree.h	/^			unsigned int nodeCount_;	\/\/!< Count the number of nodes in the tree (excluding nil_ node).$/;"	m	class:TeREDBLACK::TeRBTree
nodeCover	kernel/TeRTree.h	/^TeBox TeRTree<DATATYPE, MAXNODES, MINNODES>::nodeCover(TeRTreeNodeType* n) const$/;"	f	class:TeSAM::TeRTree
nodeDeleteCell	drivers/SQLite/sqlite3/sqlite3.c	/^static void nodeDeleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell){$/;"	f	file:
nodeGetCell	drivers/SQLite/sqlite3/sqlite3.c	/^static void nodeGetCell($/;"	f	file:
nodeGetCoord	drivers/SQLite/sqlite3/sqlite3.c	/^static void nodeGetCoord($/;"	f	file:
nodeGetRowid	drivers/SQLite/sqlite3/sqlite3.c	/^static i64 nodeGetRowid($/;"	f	file:
nodeHash	drivers/SQLite/sqlite3/sqlite3.c	/^static int nodeHash(i64 iNode){$/;"	f	file:
nodeHashDelete	drivers/SQLite/sqlite3/sqlite3.c	/^static void nodeHashDelete(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashInsert	drivers/SQLite/sqlite3/sqlite3.c	/^static void nodeHashInsert(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashLookup	drivers/SQLite/sqlite3/sqlite3.c	/^static RtreeNode *nodeHashLookup(Rtree *pRtree, i64 iNode){$/;"	f	file:
nodeInsertCell	drivers/SQLite/sqlite3/sqlite3.c	/^nodeInsertCell($/;"	f	file:
nodeNew	drivers/SQLite/sqlite3/sqlite3.c	/^static RtreeNode *nodeNew(Rtree *pRtree, RtreeNode *pParent){$/;"	f	file:
nodeOverwriteCell	drivers/SQLite/sqlite3/sqlite3.c	/^static void nodeOverwriteCell($/;"	f	file:
nodeParentIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static int nodeParentIndex(Rtree *pRtree, RtreeNode *pNode, int *piIndex){$/;"	f	file:
nodePen_	drivers/qt/TeQtCanvas.h	/^	QPen		nodePen_;$/;"	m	class:TeQtCanvas
nodePixmap_	drivers/qt/TeQtCanvas.h	/^	QPixmap*	nodePixmap_;$/;"	m	class:TeQtCanvas
nodeReference	drivers/SQLite/sqlite3/sqlite3.c	/^static void nodeReference(RtreeNode *p){$/;"	f	file:
nodeRelease	drivers/SQLite/sqlite3/sqlite3.c	/^nodeRelease(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeRowidIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static int nodeRowidIndex($/;"	f	file:
nodeSize_	drivers/qt/TeQtCanvas.h	/^	int			nodeSize_;$/;"	m	class:TeQtCanvas
nodeStyle_	drivers/qt/TeQtCanvas.h	/^	int			nodeStyle_;$/;"	m	class:TeQtCanvas
nodeType_	kernel/TeViewNode.h	/^	int				nodeType_;$/;"	m	class:TeViewNodeParams
nodeWrite	drivers/SQLite/sqlite3/sqlite3.c	/^nodeWrite(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeZero	drivers/SQLite/sqlite3/sqlite3.c	/^static void nodeZero(Rtree *pRtree, RtreeNode *p){$/;"	f	file:
node_	kernel/TeRedBlackTree.h	/^					Node_i* node_;$/;"	m	class:TeREDBLACK::TeRBTree::internal_iterator
nodes	kernel/TeViewNode.h	/^	vector<TeViewNode*>& nodes()$/;"	f	class:TeViewTree
nodes_	kernel/TeViewNode.h	/^	vector<TeViewNode*> nodes_;$/;"	m	class:TeViewTree
nolockCheckReservedLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int nolockCheckReservedLock(sqlite3_file *NotUsed, int *pResOut){$/;"	f	file:
nolockClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int nolockClose(sqlite3_file *id) {$/;"	f	file:
nolockLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int nolockLock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
nolockUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^static int nolockUnlock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
noopMutexAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3_mutex *noopMutexAlloc(int id){ $/;"	f	file:
noopMutexEnd	drivers/SQLite/sqlite3/sqlite3.c	/^static int noopMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexEnter	drivers/SQLite/sqlite3/sqlite3.c	/^static void noopMutexEnter(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void noopMutexFree(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int noopMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexLeave	drivers/SQLite/sqlite3/sqlite3.c	/^static void noopMutexLeave(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexTry	drivers/SQLite/sqlite3/sqlite3.c	/^static int noopMutexTry(sqlite3_mutex *p){$/;"	f	file:
norm_	kernel/TeProxMatrixWeightsStrategy.h	/^	bool						norm_;$/;"	m	struct:TeProxMatrixWeightsParams
normalTriangle	kernel/TeTin.cpp	/^TeTin::normalTriangle(TeTinTriangle& t, std::vector<double> &nvector) \/\/by Eduilson (adaptado do SPRING)$/;"	f	class:TeTin
normalTriangle	kernel/TeTin.cpp	/^TeTin::normalTriangle(std::vector<TeTinVertex> vert, double* nvector) \/\/by Eduilson (adaptado do SPRING)$/;"	f	class:TeTin
normalize	image_processing/TePDIFilterMask.cpp	/^void TePDIFilterMask::normalize()$/;"	f	class:TePDIFilterMask
normalizeAddress	functions/TeAddressLocator.cpp	/^void TeAddressLocator::normalizeAddress(TeAddress& address, string& completeName)$/;"	f	class:TeAddressLocator
normalizeTPWeights	kernel/TeGeometricTransformation.cpp	/^bool TeGeometricTransformation::normalizeTPWeights( $/;"	f	class:TeGeometricTransformation
normalizeVector	kernel/TeTin.cpp	/^TeTin::normalizeVector(double* nvector)$/;"	f	class:TeTin
normalizeVector	kernel/TeTin.cpp	/^TeTin::normalizeVector(std::vector<double>& nvector)$/;"	f	class:TeTin
normalizeWindows_	image_processing/TePDIMMIOMatching.hpp	/^        bool normalizeWindows_;$/;"	m	struct:TePDIMMIOMatching::GenerateCorrelationFeaturesParams
not	drivers/SQLite/sqlite3/sqlite3.c	/^  int not;         \/* True if the NOT keyword is present *\/$/;"	m	struct:LikeOp	file:
notIndexed	drivers/SQLite/sqlite3/sqlite3.c	/^    u8 notIndexed;    \/* True if there is a NOT INDEXED clause *\/$/;"	m	struct:SrcList::SrcList_item	file:
notNull	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 notNull;      \/* True if there is a NOT NULL constraint *\/$/;"	m	struct:Column	file:
notUsed1	drivers/SQLite/sqlite3/sqlite3.c	/^    double notUsed1;            \/* Spacer *\/$/;"	m	union:sqlite3::__anon40	file:
notVisited	kernel/graph.h	/^	enum VertStatus {notVisited, visited, processed};$/;"	e	enum:br_stl::VertStatus
not_shared_flag_	kernel/TeSharedPtr.h	/^      mutable bool not_shared_flag_;$/;"	m	class:TeSharedPtr
notifyDestroy	drivers/GL/glcore.h	/^    void (*notifyDestroy)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
notifyDestroy	drivers/GL/internal/glcore.h	/^    void (*notifyDestroy)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
notifyResize	drivers/GL/glcore.h	/^    GLboolean (*notifyResize)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
notifyResize	drivers/GL/internal/glcore.h	/^    GLboolean (*notifyResize)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
notifyResultExt	drivers/Oracle/OCI/include/occiAQ.h	/^     void *notifyResultExt;$/;"	m	class:oracle::occi::aq::NotifyResult
notifySwapBuffers	drivers/GL/glcore.h	/^    void (*notifySwapBuffers)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
notifySwapBuffers	drivers/GL/internal/glcore.h	/^    void (*notifySwapBuffers)(__GLcontext *gc);$/;"	m	struct:__GLexportsRec
now	kernel/TeTime.cpp	/^time_t TeTime::now(void)$/;"	f	class:TeTime
now	kernel/TeTimeInterval.h	/^	void now(void) {t1_.now(); t2_.now();}$/;"	f	class:TeTimeInterval
nowValue	drivers/SQLite/sqlite3/sqlite3.c	/^  int nowValue[10];         \/* Current value *\/$/;"	m	struct:sqlite3StatType	file:
npartsX_	kernel/TeGridIndex.h	/^		int npartsX_;		\/\/!< Number of columns$/;"	m	class:TeSAM::TeGridIndex
npartsY_	kernel/TeGridIndex.h	/^		int npartsY_;		\/\/!< Number of lines$/;"	m	class:TeSAM::TeGridIndex
npersona_nzttWallet	drivers/Oracle/OCI/include/nzt.h	/^   ub4 npersona_nzttWallet;            \/* Number of personas *\/$/;"	m	struct:nzttWallet
npix	image_processing/TePDIEspecData.hpp	/^    long npix;              \/\/ Number of pixels = area$/;"	m	class:TePDIEspecData
npix	image_processing/TePDIRegion.hpp	/^    long npix;$/;"	m	class:TePDIRegion
nplanes_	kernel/TeDecoderTIFF.h	/^	unsigned int	nplanes_;	\/\/ number of planes or logical division of the data within the files$/;"	m	class:TeDecoderTIFF
nreg	image_processing/TePDICluster.hpp	/^    long nreg;$/;"	m	class:TePDICluster
nrhs	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon58	file:
nrow	kernel/TeMatrix.h	/^	int nrow;	\/\/ Number of rows$/;"	m	class:TeMatrix
nrtes_	drivers/GTM/TeGTM.h	/^	long gradcolor_, bcolor_, nwptstyles_, usercolor_, nwpts_, ntrcks_, nrtes_, n_maps_, n_tk_, labelcolor_;$/;"	m	class:TeGTMHeader
nstripsperplane_	kernel/TeDecoderTIFF.h	/^	unsigned long	nstripsperplane_;	\/\/ number of strips per plane of data$/;"	m	class:TeDecoderTIFF
ntps_nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^   ub4 ntps_nzttPersona;                   \/* Num of trusted identities *\/$/;"	m	struct:nzttPersona
ntrcks_	drivers/GTM/TeGTM.h	/^	long gradcolor_, bcolor_, nwptstyles_, usercolor_, nwpts_, ntrcks_, nrtes_, n_maps_, n_tk_, labelcolor_;$/;"	m	class:TeGTMHeader
nullRow	drivers/SQLite/sqlite3/sqlite3.c	/^  Bool nullRow;         \/* True if pointing to a row with no data *\/$/;"	m	struct:VdbeCursor	file:
null_	kernel/TeAttribute.h	/^	bool            null_;			\/\/!< flag to indicate that attribute can be a null value (true) or not (false)$/;"	m	struct:TeAttributeRep
nullifFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void nullifFunc($/;"	f	file:
nullvalue	drivers/SQLite/sqlite3/shell.c	/^  char nullvalue[20];    \/* The text to print when a NULL comes back from$/;"	m	struct:callback_data	file:
numAgents	drivers/Oracle/OCI/include/occiAQ.h	/^     unsigned int numAgents;$/;"	m	class:oracle::occi::aq::Listener
numAuxBuffers	drivers/GL/glcore.h	/^    GLint numAuxBuffers;$/;"	m	struct:__GLcontextModesRec
numAuxBuffers	drivers/GL/internal/glcore.h	/^    GLint numAuxBuffers;$/;"	m	struct:__GLcontextModesRec
numChar_	kernel/TeAttribute.h	/^	int				numChar_;   \/\/!< width of an attribute$/;"	m	struct:TeAttributeRep
numCol	drivers/Oracle/TeOCICursor.cpp	/^int TeOCICursor::numCol()  $/;"	f	class:TeOCICursor
numColls_	drivers/Oracle/TeOCICursor.h	/^	int					numColls_;  \/\/!< number of columns$/;"	m	class:TeOCICursor
numCols	drivers/qt/TeQtGridSource.h	/^	int numCols() const { return nCols_; }$/;"	f	class:TeQtGridSource
numCols	drivers/qt/TeQtLegendSource.h	/^	int numCols() const { return nCols_; }$/;"	f	class:TeQtLegendSource
numElemInstances	kernel/TeQuerier.cpp	/^TeQuerier::numElemInstances()$/;"	f	class:TeQuerier
numElemInstances	kernel/TeQuerierDBStr1.cpp	/^TeQuerierDBStr1::numElemInstances()$/;"	f	class:TeQuerierDBStr1
numElemInstances	kernel/TeQuerierDBStr2.cpp	/^TeQuerierDBStr2::numElemInstances()$/;"	f	class:TeQuerierDBStr2
numElemInstances	kernel/TeQuerierDBStr3.cpp	/^TeQuerierDBStr3::numElemInstances()$/;"	f	class:TeQuerierDBStr3
numElemInstances	kernel/TeQuerierImpl.h	/^	virtual int numElemInstances() { return 0;}$/;"	f	class:TeQuerierImpl
numElements	kernel/TeBaseSTInstanceSet.h	/^	virtual int numElements()$/;"	f	class:TeBaseSTInstanceSet
numElements_	kernel/TeCoverageParams.h	/^    int numElements_;               \/\/!< Number of elements of the coverage$/;"	m	class:TeCoverageParams
numFields	kernel/TeDatabase.h	/^	int numFields () $/;"	f	class:TeDatabasePortal
numFields_	kernel/TeDatabase.h	/^	int				numFields_;		\/\/!< the number of fields in this portal$/;"	m	class:TeDatabasePortal
numLayerObjects_	kernel/TeAbstractTheme.h	/^	int numLayerObjects_;$/;"	m	class:TeAbstractTheme
numObjects	drivers/qt/TeAppTheme.cpp	/^int TeAppTheme::numObjects() $/;"	f	class:TeAppTheme
numObjects	stat/TeStatDataStructures.cpp	/^int TeSTStatInstanceSet::numObjects() $/;"	f	class:TeSTStatInstanceSet
numObjects	stat/TeStatDataStructures.h	/^ 	int numObjects() $/;"	f	class:TeKernelGridSupport
numObjects_	kernel/TeFileTheme.h	/^	unsigned int		numObjects_;	\/\/ number of objects that the theme has access to$/;"	m	class:TeFileTheme
numObjects_	kernel/TeGeoDataDriver.h	/^	unsigned int	numObjects_; \/\/!< The number of objects in this dataSet$/;"	m	class:TeGeoDataDriver
numRects	drivers/GL/glcore.h	/^    GLint numRects;$/;"	m	struct:__GLdrawableRegionRec
numRects	drivers/GL/internal/glcore.h	/^    GLint numRects;$/;"	m	struct:__GLdrawableRegionRec
numReg_	stat/TeKernelFunctions.h	/^  int						numReg_;$/;"	m	class:TeStatKernelRatio
numReg_	stat/TeKernelFunctions.h	/^  int                  numReg_;$/;"	m	class:TeStatKernel
numRows	drivers/Oracle/TeOCICursor.cpp	/^int TeOCICursor::numRows()$/;"	f	class:TeOCICursor
numRows	drivers/qt/TeQtGridSource.h	/^	int numRows() const { return nRows_; }$/;"	f	class:TeQtGridSource
numRows	drivers/qt/TeQtLegendSource.h	/^	int numRows() const { return nRows_; }$/;"	f	class:TeQtLegendSource
numRows	kernel/TeDatabase.h	/^	int numRows () $/;"	f	class:TeDatabasePortal
numRowsToRetrieve_	drivers/PostgreSQL/TePGInterface.h	/^		int numRowsToRetrieve_;$/;"	m	class:TePGRecordset
numRows_	kernel/TeDatabase.h	/^	int				numRows_;		\/\/!< the number of rows in this portal$/;"	m	class:TeDatabasePortal
numSTInstance	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::numSTInstance()$/;"	f	class:TeBaseSTInstanceSet
numSTInstance	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::numSTInstance(TimeType& time)$/;"	f	class:TeBaseSTInstanceSet
numSTInstance	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::numSTInstance(const int& slice)$/;"	f	class:TeBaseSTInstanceSet
numSTInstance	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::numSTInstance(const string& objectId)$/;"	f	class:TeBaseSTInstanceSet
numTimeFrames	kernel/TeTemporalSeries.h	/^	int numTimeFrames() { return series_.size(); }$/;"	f	class:TeTemporalSeries
num_neighbours_	kernel/TeProxMatrixConstructionStrategy.h	/^	int							num_neighbours_;$/;"	m	struct:TeProxMatrixConstructionParams
num_rows	drivers/Oracle/OCI/include/odci.h	/^  OCIInd num_rows;$/;"	m	struct:ODCITabFuncStats_ind
num_rows	drivers/Oracle/OCI/include/odci.h	/^  OCINumber num_rows;$/;"	m	struct:ODCITabFuncStats
numberExt	drivers/Oracle/OCI/include/occiData.h	/^  void *numberExt;$/;"	m	class:oracle::occi::Number
numberIsNull	drivers/Oracle/OCI/include/occiData.h	/^  bool numberIsNull;$/;"	m	class:oracle::occi::Number
numberOfCursors_	drivers/qt/TeQtProgress.h	/^	int		numberOfCursors_;	\/\/<! Number of cursors that were pushed on application stack.$/;"	m	class:TeQtProgress
numberOfObjects	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::numberOfObjects () $/;"	f	class:TeGeneralizedProxMatrix
numberOfObjects	kernel/TeProxMatrixImplementation.h	/^	virtual int  numberOfObjects () {return graph_.size();}$/;"	f	class:TeProxMatrixGraphBreymann
numberOfOrdinates	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatialPortal::numberOfOrdinates()$/;"	f	class:TeOracleSpatialPortal
numberOfPixmaps	drivers/qt/TeQtCanvas.h	/^	int numberOfPixmaps() {return numberOfPixmaps_;}$/;"	f	class:TeQtCanvas
numberOfPixmaps	drivers/qt/TeQtCanvas.h	/^	void numberOfPixmaps(int n) {numberOfPixmaps_ = n;}$/;"	f	class:TeQtCanvas
numberOfPixmaps_	drivers/qt/TeQtCanvas.h	/^	int			numberOfPixmaps_;$/;"	m	class:TeQtCanvas
numberOfSelectedBlocks	drivers/MrSID/TeDecoderMrSID.h	/^	int numberOfSelectedBlocks() $/;"	f	class:TeDecoderMrSID
numberOfSelectedBlocks	kernel/TeDecoder.cpp	/^int TeDecoder::numberOfSelectedBlocks()$/;"	f	class:TeDecoder
numberOfSelectedBlocks	kernel/TeDecoderDatabase.h	/^	int numberOfSelectedBlocks()$/;"	f	class:TeDecoderDatabase
numberOfSelectedBlocks	kernel/TeRaster.cpp	/^int TeRaster::numberOfSelectedBlocks()$/;"	f	class:TeRaster
number_	drivers/GTM/TeGTM.h	/^	unsigned char number_;$/;"	m	class:TeGTMUserIcons
numerOfSlices	kernel/TeGeneralizedProxMatrix.h	/^	int numerOfSlices () {return total_slices_;}$/;"	f	class:TeGeneralizedProxMatrix
nwpts_	drivers/GTM/TeGTM.h	/^	long gradcolor_, bcolor_, nwptstyles_, usercolor_, nwpts_, ntrcks_, nrtes_, n_maps_, n_tk_, labelcolor_;$/;"	m	class:TeGTMHeader
nwptstyles_	drivers/GTM/TeGTM.h	/^	long gradcolor_, bcolor_, nwptstyles_, usercolor_, nwpts_, ntrcks_, nrtes_, n_maps_, n_tk_, labelcolor_;$/;"	m	class:TeGTMHeader
nzVar	drivers/SQLite/sqlite3/sqlite3.c	/^  int nzVar;           \/* Number of available slots in azVar[] *\/$/;"	m	struct:Parse	file:
nzVar	drivers/SQLite/sqlite3/sqlite3.c	/^  ynVar nzVar;            \/* Number of entries in azVar[] *\/$/;"	m	struct:Vdbe	file:
nzctx	drivers/Oracle/OCI/include/nzt.h	/^   typedef struct nzctx nzctx;$/;"	t	typeref:struct:nzctx
nzerror	drivers/Oracle/OCI/include/nzerror.h	/^typedef enum nzerror$/;"	g
nzerror	drivers/Oracle/OCI/include/nzerror.h	/^} nzerror;$/;"	t	typeref:enum:nzerror
nzosContext	drivers/Oracle/OCI/include/nzt.h	/^   typedef struct nzosContext nzosContext;$/;"	t	typeref:struct:nzosContext
nzpkcs11_Info	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzpkcs11_Info nzpkcs11_Info;$/;"	t	typeref:struct:nzpkcs11_Info
nzssEntry	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzssEntry nzssEntry; \/* For secretstore *\/$/;"	t	typeref:struct:nzssEntry
nzstrc	drivers/Oracle/OCI/include/nzt.h	/^   typedef struct nzstrc nzstrc;$/;"	t	typeref:struct:nzstrc
nzttB64Cert	drivers/Oracle/OCI/include/nzt.h	/^struct nzttB64Cert$/;"	s
nzttB64Cert	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzttB64Cert nzttB64Cert;$/;"	t	typeref:struct:nzttB64Cert
nzttBufferBlock	drivers/Oracle/OCI/include/nzt.h	/^struct nzttBufferBlock$/;"	s
nzttBufferBlock	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzttBufferBlock nzttBufferBlock;$/;"	t	typeref:struct:nzttBufferBlock
nzttCipherType	drivers/Oracle/OCI/include/nzt.h	/^enum nzttCipherType $/;"	g
nzttCipherType	drivers/Oracle/OCI/include/nzt.h	/^typedef enum nzttCipherType nzttCipherType;$/;"	t	typeref:enum:nzttCipherType
nzttID	drivers/Oracle/OCI/include/nzt.h	/^typedef ub1 nzttID[16];$/;"	t
nzttIdentType	drivers/Oracle/OCI/include/nzt.h	/^enum nzttIdentType $/;"	g
nzttIdentType	drivers/Oracle/OCI/include/nzt.h	/^typedef enum nzttIdentType nzttIdentType;$/;"	t	typeref:enum:nzttIdentType
nzttIdentity	drivers/Oracle/OCI/include/nzt.h	/^struct nzttIdentity$/;"	s
nzttIdentity	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzttIdentity nzttIdentity;$/;"	t	typeref:struct:nzttIdentity
nzttIdentityDesc	drivers/Oracle/OCI/include/nzt.h	/^struct nzttIdentityDesc$/;"	s
nzttIdentityDesc	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzttIdentityDesc nzttIdentityDesc;$/;"	t	typeref:struct:nzttIdentityDesc
nzttIdentityPrivate	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzttIdentityPrivate nzttIdentityPrivate;$/;"	t	typeref:struct:nzttIdentityPrivate
nzttKPUsage	drivers/Oracle/OCI/include/nzt.h	/^typedef ub4 nzttKPUsage;$/;"	t
nzttPKCS7ProtInfo	drivers/Oracle/OCI/include/nzt.h	/^struct nzttPKCS7ProtInfo$/;"	s
nzttPKCS7ProtInfo	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzttPKCS7ProtInfo nzttPKCS7ProtInfo;$/;"	t	typeref:struct:nzttPKCS7ProtInfo
nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^struct nzttPersona$/;"	s
nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzttPersona nzttPersona;$/;"	t	typeref:struct:nzttPersona
nzttPersonaDesc	drivers/Oracle/OCI/include/nzt.h	/^struct nzttPersonaDesc$/;"	s
nzttPersonaDesc	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzttPersonaDesc nzttPersonaDesc;$/;"	t	typeref:struct:nzttPersonaDesc
nzttPersonaPrivate	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzttPersonaPrivate nzttPersonaPrivate;$/;"	t	typeref:struct:nzttPersonaPrivate
nzttPolicy	drivers/Oracle/OCI/include/nzt.h	/^enum nzttPolicy$/;"	g
nzttPolicy	drivers/Oracle/OCI/include/nzt.h	/^typedef enum nzttPolicy nzttPolicy;$/;"	t	typeref:enum:nzttPolicy
nzttProtInfo	drivers/Oracle/OCI/include/nzt.h	/^typedef union nzttProtInfo nzttProtInfo;$/;"	t	typeref:union:nzttProtInfo
nzttProtInfo	drivers/Oracle/OCI/include/nzt.h	/^union nzttProtInfo$/;"	u
nzttState	drivers/Oracle/OCI/include/nzt.h	/^enum nzttState$/;"	g
nzttState	drivers/Oracle/OCI/include/nzt.h	/^typedef enum nzttState nzttState;$/;"	t	typeref:enum:nzttState
nzttTStamp	drivers/Oracle/OCI/include/nzt.h	/^typedef ub1 nzttTStamp[4];$/;"	t
nzttUsage	drivers/Oracle/OCI/include/nzt.h	/^enum nzttUsage$/;"	g
nzttUsage	drivers/Oracle/OCI/include/nzt.h	/^typedef enum nzttUsage nzttUsage;$/;"	t	typeref:enum:nzttUsage
nzttValState	drivers/Oracle/OCI/include/nzt.h	/^enum nzttValState$/;"	g
nzttValState	drivers/Oracle/OCI/include/nzt.h	/^typedef enum nzttValState nzttValState;$/;"	t	typeref:enum:nzttValState
nzttVersion	drivers/Oracle/OCI/include/nzt.h	/^enum nzttVersion$/;"	g
nzttVersion	drivers/Oracle/OCI/include/nzt.h	/^typedef enum nzttVersion nzttVersion;$/;"	t	typeref:enum:nzttVersion
nzttWallet	drivers/Oracle/OCI/include/nzt.h	/^struct nzttWallet$/;"	s
nzttWallet	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzttWallet nzttWallet;$/;"	t	typeref:struct:nzttWallet
nzttWalletObj	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzttWalletObj nzttWalletObj; \/* For wallet object *\/$/;"	t	typeref:struct:nzttWalletObj
nzttWalletPrivate	drivers/Oracle/OCI/include/nzt.h	/^typedef struct nzttWalletPrivate nzttWalletPrivate;$/;"	t	typeref:struct:nzttWalletPrivate
nzttcef	drivers/Oracle/OCI/include/nzt.h	/^enum nzttcef$/;"	g
nzttcef	drivers/Oracle/OCI/include/nzt.h	/^typedef enum nzttcef nzttcef;$/;"	t	typeref:enum:nzttcef
nzttces	drivers/Oracle/OCI/include/nzt.h	/^enum nzttces $/;"	g
nzttces	drivers/Oracle/OCI/include/nzt.h	/^typedef enum nzttces nzttces;$/;"	t	typeref:enum:nzttces
nztttdufmt	drivers/Oracle/OCI/include/nzt.h	/^enum nztttdufmt$/;"	g
nztttdufmt	drivers/Oracle/OCI/include/nzt.h	/^typedef enum nztttdufmt nztttdufmt;$/;"	t	typeref:enum:nztttdufmt
nzttwrl	drivers/Oracle/OCI/include/nzt.h	/^enum nzttwrl $/;"	g
nzttwrl	drivers/Oracle/OCI/include/nzt.h	/^typedef enum nzttwrl nzttwrl;$/;"	t	typeref:enum:nzttwrl
objBoxInCanvas	drivers/qt/TePlotTheme.h	/^bool objBoxInCanvas(TeAppTheme* appTheme, Canvas *canvas, set<string>& drawSet, TeGeomRep repType, TeBox& bout, double tol)$/;"	f
objHeader	drivers/Oracle/OCI/include/occiObjects.h	/^   dvoid *objHeader;$/;"	m	struct:oracle::occi::AnyDataCtx
objHeader	drivers/Oracle/OCI/include/occiObjects.h	/^  dvoid *objHeader;$/;"	m	class:oracle::occi::RefImpl
objHeader_	drivers/Oracle/OCI/include/occiObjects.h	/^        dvoid *objHeader_;$/;"	m	class:oracle::occi::PObject
objId	kernel/TeQuerierParams.h	/^	virtual string objId() { return objId_; }$/;"	f	class:TeQuerierParams
objId_	kernel/TeQuerierParams.h	/^	string					objId_;		\/\/!< object identification$/;"	m	class:TeQuerierParams
objLegendMap_	kernel/TeAbstractTheme.h	/^	map<string, int>	objLegendMap_;					\/\/ object legend$/;"	m	class:TeAbstractTheme
objOwnLegendMap_	kernel/TeAbstractTheme.h	/^	map<string, int>	objOwnLegendMap_;				\/\/ object own legend$/;"	m	class:TeAbstractTheme
objStatusMap_	kernel/TeAbstractTheme.h	/^	map<string, int> objStatusMap_;$/;"	m	class:TeAbstractTheme
obj_ptr_	drivers/spl/PluginsParametersContainer.h	/^      TeSharedPtr< ObjectT > obj_ptr_;$/;"	m	class:PPCNode
obj_ptr_	kernel/TeMultiContainer.h	/^      ObjectT* obj_ptr_;$/;"	m	class:TeMCNode
obj_type_str_	kernel/TeMultiContainer.h	/^      std::string obj_type_str_;      $/;"	m	class:TeMCNode
objectId	kernel/TeBaseSTInstance.h	/^	virtual string objectId () $/;"	f	class:TeBaseSTInstance
objectId	kernel/TeBaseSTInstance.h	/^	virtual void objectId (const string& id) $/;"	f	class:TeBaseSTInstance
objectId	kernel/TeCoord2D.h	/^	void objectId(const string& \/* id *\/ ) $/;"	f	class:TeCoord2D
objectId	kernel/TeGeometry.h	/^	string objectId() const$/;"	f	class:TeLine2D
objectId	kernel/TeGeometry.h	/^	string objectId() const$/;"	f	class:TePoint
objectId	kernel/TeGeometry.h	/^	virtual string objectId() const$/;"	f	class:TeGeomComposite
objectId	kernel/TeGeometry.h	/^	virtual string objectId() const$/;"	f	class:TeGeometry
objectId	kernel/TeGeometry.h	/^	virtual void objectId ( const string& id )$/;"	f	class:TeGeometry
objectId	kernel/TeGeometry.h	/^	virtual void objectId (const string& id )$/;"	f	class:TeGeomComposite
objectId	kernel/TeGeometry.h	/^	void objectId (const string& id )$/;"	f	class:TeLine2D
objectId	kernel/TeGeometry.h	/^	void objectId (const string& id )$/;"	f	class:TePoint
objectId	kernel/TeQuerierImpl.h	/^	string objectId() { return params_->objId();}$/;"	f	class:TeQuerierImpl
objectIdPos_	drivers/qt/TeQtGrid.h	/^	int						objectIdPos_;$/;"	m	class:TeQtGrid
objectIdToInstances_	kernel/TeBaseSTInstanceSet.h	/^	map<string, vector<int> >		objectIdToInstances_;$/;"	m	class:TeBaseSTInstanceSet
objectId_	kernel/TeGeometry.h	/^	string	objectId_;	\/\/!<  The unique object identification associated to a geometry$/;"	m	class:TeGeometry
objectId_	kernel/TeRasterParams.h	/^	string 		objectId_;	\/\/!< identification of an object associated to this raster geometry$/;"	m	class:TeRasterParams
objectId_	kernel/TeTemporalSeries.h	/^	string			objectId_;$/;"	m	class:TeTSParams
objectMap_	drivers/qt/TeQtGrid.h	/^	map<string, ObjectInfo>	objectMap_;$/;"	m	class:TeQtGrid
objectSet_	kernel/TeAbstractTheme.h	/^	set<string> objectSet_;$/;"	m	class:TeAbstractTheme
object_id_	kernel/TeBaseSTInstance.h	/^	string					object_id_;		$/;"	m	class:TeBaseSTInstance
objects	kernel/TeProxMatrixConstructionStrategy.h	/^	T* objects()  { return objects_; } $/;"	f	class:TeProxMatrixConstructionStrategy
objects	kernel/TeProxMatrixConstructionStrategy.h	/^	TeSTElementSet* objects() { return objects_; }$/;"	f	class:TeProxMatrixClosedNetworkStrategy
objects2_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeSTElementSet*		objects2_;$/;"	m	class:TeProxMatrixChooseOneTopologyStrategy
objects2_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeSTElementSet*		objects2_;$/;"	m	class:TeProxMatrixKeepInBothTopologyStrategy
objects2_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeSTElementSet*		objects2_;$/;"	m	class:TeProxMatrixLocalTopologyStrategy
objects2_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeSTElementSet*		objects2_;$/;"	m	class:TeProxMatrixOpenNetworkStrategy2
objects_	kernel/TeProxMatrixConstructionStrategy.h	/^	T*   objects_;$/;"	m	class:TeProxMatrixConstructionStrategy
objects_vector_	drivers/spl/PluginsParametersContainer.h	/^      VectorT objects_vector_;    $/;"	m	class:PluginsParametersContainer
objs_	stat/TeStatDataStructures.h	/^    vector<TeSTStatInstance >	objs_;	$/;"	m	class:TeSTStatInstanceSet
occi	drivers/Oracle/OCI/include/occiAQ.h	/^namespace occi {$/;"	n	namespace:oracle
occi	drivers/Oracle/OCI/include/occiCommon.h	/^namespace occi {$/;"	n	namespace:oracle
occi	drivers/Oracle/OCI/include/occiControl.h	/^namespace occi {$/;"	n	namespace:oracle
occi	drivers/Oracle/OCI/include/occiData.h	/^namespace occi {$/;"	n	namespace:oracle
occi	drivers/Oracle/OCI/include/occiObjects.h	/^namespace occi {$/;"	n	namespace:oracle
occiSession	drivers/Oracle/OCI/include/occiObjects.h	/^   ConnectionImpl *occiSession;$/;"	m	struct:oracle::occi::AnyDataCtx
occiSession_	drivers/Oracle/OCI/include/occiObjects.h	/^        ConnectionImpl  *occiSession_;$/;"	m	class:oracle::occi::PObject
ociAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  enum ociAttrType { OCI_UB1, $/;"	g	class:oracle::occi::MetaData
oci_func_tab	drivers/Oracle/OCI/include/ocidem.h	/^static CONST text  *oci_func_tab[] =  {(text *) "not used",$/;"	v
ocidatetime	drivers/Oracle/OCI/include/occiData.h	/^   OCIDateTime *ocidatetime;$/;"	m	class:oracle::occi::Timestamp
ocienv	drivers/Oracle/OCI/include/occiData.h	/^   OCIEnv *ocienv;$/;"	m	class:oracle::occi::IntervalDS
ocienv	drivers/Oracle/OCI/include/occiData.h	/^   OCIEnv *ocienv;$/;"	m	class:oracle::occi::IntervalYM
ocienv	drivers/Oracle/OCI/include/occiData.h	/^   OCIEnv *ocienv;$/;"	m	class:oracle::occi::Timestamp
ociinter	drivers/Oracle/OCI/include/occiData.h	/^   OCIInterval *ociinter;$/;"	m	class:oracle::occi::IntervalDS
ociinter	drivers/Oracle/OCI/include/occiData.h	/^   OCIInterval *ociinter;$/;"	m	class:oracle::occi::IntervalYM
ocitab	drivers/Oracle/OCI/include/ocidef.h	/^struct  ocitab$/;"	s
ocitab	drivers/Oracle/OCI/include/ocidef.h	/^typedef struct ocitab ocitab;$/;"	t	typeref:struct:ocitab
ocitbl	drivers/Oracle/OCI/include/ocidef.h	/^externref CONST_DATA ocitab ocitbl[];$/;"	v
ocitv2	drivers/Oracle/OCI/include/ocidef.h	/^   b2   ocitv2;                          \/* Version 2 equivalent return code *\/$/;"	m	struct:ocitab
ocitv3	drivers/Oracle/OCI/include/ocidef.h	/^   b2   ocitv3;                                   \/* Version 3\/4 return code *\/$/;"	m	struct:ocitab
ocixmldbparam	drivers/Oracle/OCI/include/ocixmldb.h	/^typedef struct ocixmldbparam$/;"	s
ocixmldbparam	drivers/Oracle/OCI/include/ocixmldb.h	/^} ocixmldbparam;$/;"	t	typeref:struct:ocixmldbparam
ocixmldbpname	drivers/Oracle/OCI/include/ocixmldb.h	/^} ocixmldbpname;$/;"	t	typeref:enum:__anon90
offX	kernel/TeProjection.h	/^	double	offX() { return GPoffx; }	 $/;"	f	class:TeProjection
offY	kernel/TeProjection.h	/^	double	offY() { return GPoffy;	 }$/;"	f	class:TeProjection
offset	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned long long offset;        \/* offset to first byte to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
offset	drivers/qt/TeQtCanvas.h	/^	QPoint offset() {return QPoint(contentsX(), contentsY());}$/;"	f	class:TeQtCanvas
offset_	kernel/TeRasterParams.h	/^	int offset_;			\/\/!< offset $/;"	m	class:TeRasterParams
offset_	kernel/TeRasterTransform.h	/^	double gain_, offset_;$/;"	m	class:TeRasterTransform
offsetof	drivers/SQLite/sqlite3/sqlite3.c	7672;"	d	file:
offx	kernel/TeProjection.h	/^	double	offx;	     \/\/!< X (projection coordinate) offset (m)$/;"	m	struct:TeProjectionParams
offy	kernel/TeProjection.h	/^	double	offy;	     \/\/!< Y (projection coordinate) offset (m)$/;"	m	struct:TeProjectionParams
ogrDS_	drivers/gdal/TeOGRDriver.h	/^	OGRDataSource* ogrDS_;  \/\/!< A pointer to OGR Data Source.$/;"	m	class:TeOGRDriver
ogrLayer_	drivers/gdal/TeOGRDataSet.h	/^	OGRLayer*		ogrLayer_;	\/\/!< A pointer to first OGR Layer on DataSource. \/\/ TODO: revision is necessary.$/;"	m	class:TeOGRDataSet
ogrLayer_	drivers/gdal/TeOGRDriver.h	/^	OGRLayer* ogrLayer_;	\/\/!< A pointer to first OGR Layer on DataSource. \/\/ TODO: revision is necessary.$/;"	m	class:TeOGRDriver
okOnePass	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 okOnePass;        \/* Ok to use one-pass algorithm for UPDATE or DELETE *\/$/;"	m	struct:WhereInfo	file:
okPushButton_clicked	drivers/qt/ui/urlWindow.ui.h	/^void URLWindow::okPushButton_clicked()$/;"	f	class:URLWindow
oldLockingContext	drivers/SQLite/sqlite3/sqlite3.c	/^  void *oldLockingContext;     \/* Original lockingcontext to restore on close *\/$/;"	m	struct:proxyLockingContext	file:
oldmask	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 oldmask;         \/* Mask of old.* columns referenced *\/$/;"	m	struct:Parse	file:
omit	drivers/SQLite/sqlite3/sqlite3.c	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
omit	drivers/SQLite/sqlite3/sqlite3.h	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
onError	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 onError;      \/* OE_Abort, OE_Ignore, OE_Replace, or OE_None *\/$/;"	m	struct:Index	file:
onErrorText	drivers/SQLite/sqlite3/sqlite3.c	/^static const char *onErrorText(int onError){$/;"	f	file:
onIsolineSegment	kernel/TeTin.cpp	/^TeTin::onIsolineSegment(long e, TeTinVertex& vert)$/;"	f	class:TeTin
onSameSide	kernel/TeTin.cpp	/^TeTin::onSameSide(TeCoord2D pt1, TeCoord2D pt2, TeCoord2D fseg, TeCoord2D lseg)$/;"	f	class:TeTin
onSegment	kernel/TeTin.cpp	/^TeTin::onSegment(TeCoord2D pt, TeCoord2D fseg, TeCoord2D lseg, double tol)$/;"	f	class:TeTin
oneEdge	kernel/TeTin.h	/^	long oneEdge () $/;"	f	class:TeTinVertex
oneEdgeWithVertex	kernel/TeTin.cpp	/^TeTin::oneEdgeWithVertex(long v)$/;"	f	class:TeTin
oneEdge_	kernel/TeTin.h	/^	long         oneEdge_;$/;"	m	class:TeTinVertex
oneTriangleWithVertex	kernel/TeTin.cpp	/^TeTin::oneTriangleWithVertex(long v)$/;"	f	class:TeTin
one_input_line	drivers/SQLite/sqlite3/shell.c	/^static char *one_input_line(const char *zPrior, FILE *in){$/;"	f	file:
op	drivers/SQLite/sqlite3/sqlite3.c	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
op	drivers/SQLite/sqlite3/sqlite3.c	/^  int op;                         \/* Constraining operation *\/$/;"	m	struct:RtreeConstraint	file:
op	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 op, p5;            \/* Opcode and P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
op	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 op;                   \/* Split operator.  TK_AND or TK_OR *\/$/;"	m	struct:WhereClause	file:
op	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 op;                  \/* One of TK_DELETE, TK_UPDATE, TK_INSERT         *\/$/;"	m	struct:Trigger	file:
op	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 op;                 \/* One of: TK_UNION TK_ALL TK_INTERSECT TK_EXCEPT *\/$/;"	m	struct:Select	file:
op	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 op;                 \/* Operation performed by this node *\/$/;"	m	struct:Expr	file:
op	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 op;               \/* One of TK_DELETE, TK_UPDATE, TK_INSERT, TK_SELECT *\/$/;"	m	struct:TriggerStep	file:
op	drivers/SQLite/sqlite3/sqlite3.h	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
op1HasGreaterOrEqualPrecedence	image_processing/TePDIArithmetic.cpp	/^bool TePDIArithmetic::op1HasGreaterOrEqualPrecedence( const std::string& $/;"	f	class:TePDIArithmetic
op2	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 op2;                \/* If a TK_REGISTER, the original value of Expr.op *\/$/;"	m	struct:Expr	file:
opIterNext	drivers/SQLite/sqlite3/sqlite3.c	/^static Op *opIterNext(VdbeOpIter *p){$/;"	f	file:
opPrecedence	drivers/SQLite/sqlite3/sqlite3.c	/^static int opPrecedence(Fts3Expr *p){$/;"	f	file:
opcode	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOp	file:
opcode	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOpList	file:
open	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::open()  $/;"	f	class:TeOCICursor
open	drivers/PostgreSQL/TePGInterface.cpp	/^bool TePGConnection::open(PGconn* conn)$/;"	f	class:TePGConnection
open	drivers/PostgreSQL/TePGInterface.cpp	/^bool TePGConnection::open(const string& str_connection)$/;"	f	class:TePGConnection
open	drivers/PostgreSQL/TePGInterface.cpp	/^bool TePGRecordset::open(const string& str_qry, TePGConnection* con_x,$/;"	f	class:TePGRecordset
open	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	file:
open	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines
open16	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	file:
open16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines
openDatabase	drivers/SQLite/sqlite3/sqlite3.c	/^static int openDatabase($/;"	f	file:
openDirectory	drivers/SQLite/sqlite3/sqlite3.c	/^static int openDirectory(const char *zFilename, int *pFd){$/;"	f	file:
openDiskFilesVecSize_	image_processing/TePDIMatrix.hpp	/^      unsigned int openDiskFilesVecSize_;      $/;"	m	class:TePDIMatrix
openDiskFilesVec_	image_processing/TePDIMatrix.hpp	/^      OpenDiskFilesInfoNode* openDiskFilesVec_;$/;"	m	class:TePDIMatrix
openDiskFilesVec_	kernel/TeRasterMemManager.h	/^      OpenDiskFilesVecT openDiskFilesVec_;   $/;"	m	class:TeRasterMemManager
openFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  int openFlags;                      \/* The flags specified at open() *\/$/;"	m	struct:unixFile	file:
openFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 openFlags;         \/* Flags to sqlite3BtreeOpen() *\/$/;"	m	struct:BtShared	file:
openFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned int openFlags;       \/* Flags passed to sqlite3_vfs.xOpen() *\/$/;"	m	struct:sqlite3	file:
openPolicy_nzttWallet	drivers/Oracle/OCI/include/nzt.h	/^   nzttPolicy openPolicy_nzttWallet;      \/* open-policy of the wallet *\/$/;"	m	struct:nzttWallet
openRecordSets_	drivers/PostgreSQL/TePGInterface.cpp	/^int TePGRecordset::openRecordSets_ = 0;$/;"	m	class:TePGRecordset	file:
openRecordSets_	drivers/PostgreSQL/TePGInterface.h	/^		static int openRecordSets_;$/;"	m	class:TePGRecordset
openSql	drivers/qt/TeQtTable.cpp	/^void TeQtTable::openSql(TeDatabase* db, string& sql)$/;"	f	class:TeQtTable
openStatTable	drivers/SQLite/sqlite3/sqlite3.c	/^static void openStatTable($/;"	f	file:
openSubJournal	drivers/SQLite/sqlite3/sqlite3.c	/^static int openSubJournal(Pager *pPager){$/;"	f	file:
openTable	drivers/qt/TeQtTable.cpp	/^void TeQtTable::openTable (TeDatabase* db, string& table)$/;"	f	class:TeQtTable
openViewItems	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::openViewItems()$/;"	f	class:TeQtViewsListView
open_db	drivers/SQLite/sqlite3/shell.c	/^static void open_db(struct callback_data *p){$/;"	f	file:
open_v2	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines	file:
open_v2	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines
operator !=	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool operator != (const EventBufferIterator& i) const { return i.mIt != mIt; }$/;"	f	struct:ibpp_internals::EventBufferIterator
operator !=	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator!=(const Date& rv)	const { return mDate != rv.GetDate(); }$/;"	f	class:IBPP::Date
operator !=	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator!=(const Ptr& r) const	{ return mObject != r.mObject; }$/;"	f	class:IBPP::Ptr
operator !=	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator!=(const T* p) const	{ return mObject != p; }$/;"	f	class:IBPP::Ptr
operator !=	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator!=(const Time& rv)	const { return mTime != rv.GetTime(); }$/;"	f	class:IBPP::Time
operator !=	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator!=(const Timestamp& rv) const$/;"	f	class:IBPP::Timestamp
operator !=	drivers/Oracle/OCI/include/occiObjects.h	/^bool Ref<T>::operator != (const RefAny & refAnyR) const$/;"	f	class:oracle::occi::Ref
operator !=	drivers/Oracle/OCI/include/occiObjects.h	/^bool Ref<T>::operator !=(const Ref<T> &ref) const$/;"	f	class:oracle::occi::Ref
operator !=	drivers/spl/PluginsParametersContainer.h	/^bool PluginsParametersContainer< PluginsParametersContainerKeyT >::operator!=( $/;"	f	class:PluginsParametersContainer
operator !=	functions/TeCellAlgorithms.cpp	/^TeBoxRasterIterator::operator!=(const TeBoxRasterIterator& rhs) const$/;"	f	class:TeBoxRasterIterator
operator !=	functions/TeRasterIteratorSet.h	/^			bool operator!=(const iterator& rhs) const$/;"	f	class:RasterIteratorSet::iterator
operator !=	image_processing/TePDIParameters.cpp	/^bool TePDIParameters::operator!=( const TePDIParameters& ext_instance ) const$/;"	f	class:TePDIParameters
operator !=	kernel/TeBaseSTInstanceSet.h	/^			bool operator!=(const propertyIterator& rhs) const$/;"	f	class:TeBaseSTInstanceSet::propertyIterator
operator !=	kernel/TeBox.h	/^  bool operator!= (const TeBox& box) const$/;"	f	struct:TeBox
operator !=	kernel/TeCoord2D.h	/^	bool	operator!= (const TeCoord2D& cd) const $/;"	f	class:TeCoord2D
operator !=	kernel/TeCoverage.h	/^        bool operator!=(const iterator& rhs)$/;"	f	class:TeCoverage::iterator
operator !=	kernel/TeMultiContainer.h	/^bool TeMultiContainer< TeMultiContainerKeyT >::operator!=( $/;"	f	class:TeMultiContainer
operator !=	kernel/TeRaster.cpp	/^bool TeRaster::iterator::operator!=(const iterator& rhs) const$/;"	f	class:TeRaster::iterator
operator !=	kernel/TeRedBlackTree.h	/^					bool operator!=(const internal_iterator& other) const$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
operator !=	kernel/TeSharedPtr.h	/^      inline bool operator!=( const TeSharedPtr< T >& external ) const$/;"	f	class:TeSharedPtr
operator !=	stat/TeStatDataStructures.h	/^		bool operator!=(const iterator& rhs) const$/;"	f	class:TeKernelGridSupport::iterator
operator !=	stat/TeStatDataStructures.h	/^		bool operator!=(const iteratorPoly& rhs) const$/;"	f	class:TeKernelGridSupport::iteratorPoly
operator !=	stat/TeStatDataStructures.h	/^      bool operator!=(const iterator& rhs) const$/;"	f	class:TeSTStatInstanceSet::iterator
operator ()	drivers/qt/TeAddressNotifyFunctorWindow.h	/^		int operator()(const TeAddress& searchedAddress, vector<TeAddressDescription>& foundAddresses)$/;"	f	class:TeAdressNotifyFunctorWindow
operator ()	image_processing/TePDIMatrix.hpp	/^      inline ElementType& operator()( const unsigned int& line, $/;"	f	class:TePDIMatrix
operator ()	image_processing/TePDIMatrix.hpp	/^      inline const ElementType& operator()( const unsigned int& line, $/;"	f	class:TePDIMatrix
operator ()	kernel/TeCentroid.cpp	/^		bool operator()(TeCoordPair c1, TeCoordPair c2)$/;"	f	struct:x_dist
operator ()	kernel/TeCentroid.cpp	/^        bool operator()(TeCoord2D& pt1, TeCoord2D& pt2) { return pt1.x() < pt2.x(); }$/;"	f	struct:x_order
operator ()	kernel/TeCoverageDecoderCacheLRU.h	/^    bool operator()(const TeCoverageBlock<T>& block) const {$/;"	f	struct:TeBoxIntersectionPredicate
operator ()	kernel/TeCoverageImport.h	/^    bool operator() (SerializedPair<T>* s1, SerializedPair<T>* s2)$/;"	f	struct:CmpSerializedX
operator ()	kernel/TeCoverageImport.h	/^    bool operator() (SerializedPair<T>* s1, SerializedPair<T>* s2)$/;"	f	struct:CmpSerializedY
operator ()	kernel/TeDecoderVirtualMemory.h	/^inline bool TeDecoderVirtualMemory::TeBlockIndexMapFunc::operator()(const TeBlockIndex& idx1, const TeBlockIndex& idx2) const$/;"	f	class:TeDecoderVirtualMemory::TeBlockIndexMapFunc
operator ()	kernel/TeFragmentation.cpp	/^	bool operator()(const TeINTERSECTOR2::TeBoundaryIP& ip1, const TeINTERSECTOR2::TeBoundaryIP& ip2) const$/;"	f	struct:ipRedOrder
operator ()	kernel/TeFragmentation.cpp	/^	bool operator()(const TeINTERSECTOR2::TeBoundaryIP& ip1, const TeINTERSECTOR2::TeBoundaryIP& ip2) const$/;"	f	struct:ipRedOrder2
operator ()	kernel/TeFragmentation.cpp	/^	bool operator()(const TeIPAux& ip1, const TeIPAux& ip2) const$/;"	f	struct:sortDist
operator ()	kernel/TeGeometryAlgorithms.cpp	/^	bool operator()(T c1, T c2)$/;"	f	struct:xOrder
operator ()	kernel/TeGeometryAlgorithms.cpp	/^	bool operator()(const TeCoord2D& c1, const TeCoord2D& c2) const$/;"	f	struct:ThetaOrder
operator ()	kernel/TeMatrix.h	/^	inline double& operator()( int lin, int col ){ $/;"	f	class:TeMatrix
operator ()	kernel/TeMatrix.h	/^  inline const double& operator()( int lin, int col ) const {$/;"	f	class:TeMatrix
operator ()	kernel/TeOverlayUtils.cpp	/^	bool operator()(pair<unsigned int, TeCoord2D> p1, pair<unsigned int, TeCoord2D> p2) const$/;"	f	struct:TeSplitCoordSort
operator ()	kernel/TeOverlayUtils.h	/^	bool operator()(const TeCoord2D& c1, const TeCoord2D& c2) const$/;"	f	struct:TeOVERLAY::xyOrder
operator ()	kernel/TeOverlayUtils.h	/^	bool operator()(const TeINTERSECTOR2::TeSegIdInPolygonSet& ip1, const TeINTERSECTOR2::TeSegIdInPolygonSet& ip2) const$/;"	f	struct:TeOVERLAY::segOrder
operator ()	kernel/TeRaster.cpp	/^	void operator() (TeCoordPair& pair)$/;"	f	class:TeStrategic
operator ()	kernel/TeRepresentation.h	/^	bool operator()(const TeRepresentation* rep) const { return rep->geomRep_ == r; }$/;"	f	class:TeRepres_eq
operator ()	kernel/TeSparseMatrix.h	/^    long operator()(const pair<IndexType, IndexType>& p) const$/;"	f	class:PairHashFun
operator ()	kernel/TeTable.cpp	/^TeTable::operator () ( int row, int col )$/;"	f	class:TeTable
operator ()	kernel/TeTable.h	/^	string operator () ( int row, int col )$/;"	f	class:TeTableImpl
operator ()	kernel/dynpq.h	/^		bool operator()( T x,  T y) const$/;"	f	struct:br_stl::IterGreater
operator ()	utils/mtrand.h	/^  double operator()() {$/;"	f	class:MTRand
operator ()	utils/mtrand.h	/^  double operator()() {$/;"	f	class:MTRand53
operator ()	utils/mtrand.h	/^  double operator()() {$/;"	f	class:MTRand_closed
operator ()	utils/mtrand.h	/^  double operator()() {$/;"	f	class:MTRand_open
operator ()	utils/mtrand.h	/^  unsigned long operator()() { return rand_int32(); }$/;"	f	class:MTRand_int32
operator *	drivers/Oracle/OCI/include/occiObjects.h	/^T& Ref<T>::operator * ()$/;"	f	class:oracle::occi::Ref
operator *	drivers/Oracle/OCI/include/occiObjects.h	/^const T& Ref<T>::operator * () const$/;"	f	class:oracle::occi::Ref
operator *	functions/TeCellAlgorithms.cpp	/^TeBoxRasterIterator::operator*() $/;"	f	class:TeBoxRasterIterator
operator *	kernel/TeBaseSTInstanceSet.h	/^			double operator*()$/;"	f	class:TeBaseSTInstanceSet::propertyIterator
operator *	kernel/TeCoverage.h	/^        T operator*()$/;"	f	class:TeCoverage::iterator
operator *	kernel/TeMatrix.cpp	/^operator*(const TeMatrix& m,const TeMatrix& n)$/;"	f
operator *	kernel/TeMatrix.cpp	/^operator*(double f,const TeMatrix& m)$/;"	f
operator *	kernel/TeRaster.cpp	/^TeRaster::iterator::operator*()$/;"	f	class:TeRaster::iterator
operator *	kernel/TeRaster.cpp	/^TeRaster::iterator::operator*(int band)$/;"	f	class:TeRaster::iterator
operator *	kernel/TeRaster.cpp	/^TeRaster::iteratorPoly::operator*() $/;"	f	class:TeRaster::iteratorPoly
operator *	kernel/TeRaster.cpp	/^TeRaster::iteratorPoly::operator*(int band)$/;"	f	class:TeRaster::iteratorPoly
operator *	kernel/TeRedBlackTree.h	/^					typename Node_i::TeRedBlackNodeData& operator*() const$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
operator *	kernel/TeSharedPtr.h	/^      inline T& operator*() const$/;"	f	class:TeSharedPtr
operator *	stat/TeStatDataStructures.h	/^		TeGridElement& operator*() { return elem_; }$/;"	f	class:TeKernelGridSupport::iterator
operator *	stat/TeStatDataStructures.h	/^		TeGridElement& operator*() { return elem_; }$/;"	f	class:TeKernelGridSupport::iteratorPoly
operator *	stat/TeStatDataStructures.h	/^      TeSTStatInstance& operator*() { return *(it_); }$/;"	f	class:TeSTStatInstanceSet::iterator
operator *=	kernel/TeMatrix.cpp	/^TeMatrix::operator*=(double f)$/;"	f	class:TeMatrix
operator +	kernel/TeMatrix.cpp	/^operator+(const TeMatrix& m,const TeMatrix& n)$/;"	f
operator +	kernel/TeTime.cpp	/^TeTime::operator+(int delta)$/;"	f	class:TeTime
operator ++	drivers/Firebird/ibpp/core/_ibpp.h	/^	EventBufferIterator& operator++()$/;"	f	struct:ibpp_internals::EventBufferIterator
operator ++	functions/TeCellAlgorithms.cpp	/^TeBoxRasterIterator::operator++() $/;"	f	class:TeBoxRasterIterator
operator ++	functions/TeCellAlgorithms.cpp	/^TeBoxRasterIterator::operator++(int) $/;"	f	class:TeBoxRasterIterator
operator ++	functions/TeRasterIteratorSet.h	/^			iterator& operator++()$/;"	f	class:RasterIteratorSet::iterator
operator ++	kernel/TeBaseSTInstanceSet.h	/^			propertyIterator& operator++()$/;"	f	class:TeBaseSTInstanceSet::propertyIterator
operator ++	kernel/TeCoverage.h	/^        iterator operator++()$/;"	f	class:TeCoverage::iterator
operator ++	kernel/TeCoverage.h	/^        iterator operator++(int)$/;"	f	class:TeCoverage::iterator
operator ++	kernel/TeRaster.cpp	/^TeRaster::iterator::operator++()$/;"	f	class:TeRaster::iterator
operator ++	kernel/TeRaster.cpp	/^TeRaster::iterator::operator++(int)	$/;"	f	class:TeRaster::iterator
operator ++	kernel/TeRaster.cpp	/^TeRaster::iteratorPoly::operator++() \/\/prefix$/;"	f	class:TeRaster::iteratorPoly
operator ++	kernel/TeRaster.cpp	/^TeRaster::iteratorPoly::operator++(int)$/;"	f	class:TeRaster::iteratorPoly
operator ++	kernel/TeRedBlackTree.h	/^					internal_iterator operator++(int)	$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
operator ++	kernel/TeRedBlackTree.h	/^					internal_iterator& operator++()$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
operator ++	kernel/TeTime.cpp	/^TeTime::operator++() $/;"	f	class:TeTime
operator ++	stat/TeStatDataStructures.h	/^		iterator& operator++()$/;"	f	class:TeKernelGridSupport::iterator
operator ++	stat/TeStatDataStructures.h	/^		iteratorPoly& operator++()$/;"	f	class:TeKernelGridSupport::iteratorPoly
operator ++	stat/TeStatDataStructures.h	/^      iterator& operator++()$/;"	f	class:TeSTStatInstanceSet::iterator
operator +=	kernel/TeCoord2D.h	/^	void 	operator+=(const TeCoord2D& cd)	{x_ += cd.x_; y_ += cd.y_;}$/;"	f	class:TeCoord2D
operator +=	kernel/TeTime.cpp	/^TeTime::operator+=(int delta) $/;"	f	class:TeTime
operator -	kernel/TeMatrix.cpp	/^TeMatrix::operator-()$/;"	f	class:TeMatrix
operator -	kernel/TeMatrix.cpp	/^operator-(const TeMatrix& m,const TeMatrix& n)$/;"	f
operator -	kernel/TeTime.cpp	/^TeTime::operator-(const TeTime& other)$/;"	f	class:TeTime
operator --	kernel/TeRedBlackTree.h	/^					internal_iterator operator--(int)	$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
operator --	kernel/TeRedBlackTree.h	/^					internal_iterator& operator--()$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
operator -=	kernel/TeTime.cpp	/^TeTime::operator-=(int delta) $/;"	f	class:TeTime
operator ->	drivers/Firebird/ibpp/core/ibpp.h	/^		T* operator->() const				{ return mObject; }$/;"	f	class:IBPP::Ptr
operator ->	drivers/Oracle/OCI/include/occiObjects.h	/^T* Ref<T>::operator->()$/;"	f	class:oracle::occi::Ref
operator ->	drivers/Oracle/OCI/include/occiObjects.h	/^const T* Ref<T>::operator->() const$/;"	f	class:oracle::occi::Ref
operator ->	kernel/TeCoverage.h	/^        T* operator->()$/;"	f	class:TeCoverage::iterator
operator ->	kernel/TeRedBlackTree.h	/^					typename Node_i::TeRedBlackNodeData* operator->() const$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
operator ->	kernel/TeSharedPtr.h	/^      inline T* operator->() const$/;"	f	class:TeSharedPtr
operator ->	stat/TeStatDataStructures.h	/^		TeGridElement& operator->() { return elem_; }$/;"	f	class:TeKernelGridSupport::iterator
operator ->	stat/TeStatDataStructures.h	/^		TeGridElement& operator->() { return elem_; }$/;"	f	class:TeKernelGridSupport::iteratorPoly
operator <	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator<(const Date& rv) const { return mDate < rv.GetDate(); }$/;"	f	class:IBPP::Date
operator <	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator<(const Time& rv) const { return mTime < rv.GetTime(); }$/;"	f	class:IBPP::Time
operator <	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator<(const Timestamp& rv) const$/;"	f	class:IBPP::Timestamp
operator <	kernel/TeAbstractTheme.h	/^	virtual bool operator< (const TeAbstractTheme& r) const$/;"	f	class:TeAbstractTheme
operator <	kernel/TeAttribute.h	/^	bool	operator< (const TeAttributeRep& at) const $/;"	f	struct:TeAttributeRep
operator <	kernel/TeCoord2D.h	/^	bool	operator< (const TeCoord2D& cd) const $/;"	f	class:TeCoord2D
operator <	kernel/TeGeometricTransformation.h	/^          bool operator< ( const ExcTPDataNode& other ) const$/;"	f	class:TeGeometricTransformation::ExcTPDataNode
operator <	kernel/TeGeometricTransformation.h	/^          bool operator< ( const TPDataNode& other ) const$/;"	f	class:TeGeometricTransformation::TPDataNode
operator <	kernel/TeIntersector.cpp	/^	bool operator<(const TeIntersectionIndexKey& rhs) const$/;"	f	struct:TeIntersectionIndexKey
operator <	kernel/TeSharedPtr.h	/^      inline bool operator<( const TeSharedPtr< T >& external ) const$/;"	f	class:TeSharedPtr
operator <	kernel/TeTime.cpp	/^TeTime::operator<(const TeTime& time) const  $/;"	f	class:TeTime
operator <	kernel/TeTimeInterval.h	/^	bool operator<(const TeTimeInterval& other) const { return (this->t1_ < other.t1_ && this->t2_ < other.t2_); } $/;"	f	class:TeTimeInterval
operator <	kernel/graph.h	/^		bool operator<(const Empty&) const { return true;}$/;"	f	struct:br_stl::Empty
operator <	utils/TeColorUtils.h	/^	bool operator< (const ColorBar& cb) const$/;"	f	struct:ColorBar
operator <<	drivers/Firebird/ibpp/core/_ibpp.cpp	/^	std::ostream& operator<< (std::ostream& a, flush_debug_stream_type)$/;"	f	namespace:ibpp_internals
operator <<	drivers/Firebird/ibpp/core/_ibpp.h	/^	DebugStream& operator<< (std::ostream&(*)(std::ostream&)) { return *this; }$/;"	f	struct:ibpp_internals::DebugStream
operator <<	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::ostream& operator<< (const char* p)$/;"	f	struct:ibpp_internals::DebugStream
operator <<	drivers/Firebird/ibpp/core/_ibpp.h	/^	std::ostream& operator<< (const std::string& p)$/;"	f	struct:ibpp_internals::DebugStream
operator <<	drivers/Firebird/ibpp/core/_ibpp.h	/^	template<class T> DebugStream& operator<< (const T&) { return *this; }$/;"	f	struct:ibpp_internals::DebugStream
operator <<	kernel/TeGeometry.cpp	/^ostream& operator<<(ostream& os, TeNode& N)$/;"	f
operator <<	kernel/TeGeometry.cpp	/^ostream& operator<<(ostream& os, const TeArc& N)$/;"	f
operator <<	kernel/TeGeometry.h	/^	ostream& operator<<(ostream& os)$/;"	f	class:TeGeometry
operator <<	kernel/TeGeometry.h	/^	ostream& operator<<(ostream& os)$/;"	f	class:TeNode
operator <<	kernel/TeTime.cpp	/^std::ostream& operator<<(std::ostream& os, TeTime& N)$/;"	f
operator <<	kernel/graph.h	/^	inline std::ostream& operator<<(std::ostream& os, const Empty&) { return os;}$/;"	f	namespace:br_stl
operator <<	kernel/graph.h	/^	std::ostream& operator<<(std::ostream& os, Graph<VertexType,EdgeType>& G)$/;"	f	namespace:br_stl
operator <=	kernel/TeCoord2D.h	/^	bool  operator<= (const TeCoord2D& cd) const $/;"	f	class:TeCoord2D
operator <=	kernel/TeTime.cpp	/^TeTime::operator<=(const TeTime& time) const $/;"	f	class:TeTime
operator <=	utils/TeColorUtils.h	/^	bool operator<= (const ColorBar& cb) const$/;"	f	struct:ColorBar
operator =	drivers/Firebird/ibpp/core/_ibpp.h	/^	DebugStream& operator=(const DebugStream&) {return *this;}$/;"	f	struct:ibpp_internals::DebugStream
operator =	drivers/Firebird/ibpp/core/date.cpp	/^IBPP::Date& IBPP::Date::operator=(const IBPP::Date& assigned)$/;"	f	class:IBPP::Date
operator =	drivers/Firebird/ibpp/core/date.cpp	/^IBPP::Date& IBPP::Date::operator=(const IBPP::Timestamp& assigned)$/;"	f	class:IBPP::Date
operator =	drivers/Firebird/ibpp/core/dbkey.cpp	/^IBPP::DBKey& IBPP::DBKey::operator=(const IBPP::DBKey& assigned)$/;"	f	class:IBPP::DBKey
operator =	drivers/Firebird/ibpp/core/exception.cpp	/^ExceptionBase& ExceptionBase::operator=(const ExceptionBase& copied) throw()$/;"	f	class:ExceptionBase
operator =	drivers/Firebird/ibpp/core/exception.cpp	/^LogicExceptionImpl& LogicExceptionImpl::operator=(const LogicExceptionImpl& copied) throw()$/;"	f	class:LogicExceptionImpl
operator =	drivers/Firebird/ibpp/core/exception.cpp	/^SQLExceptionImpl& SQLExceptionImpl::operator=(const SQLExceptionImpl& copied) throw()$/;"	f	class:SQLExceptionImpl
operator =	drivers/Firebird/ibpp/core/exception.cpp	/^WrongTypeImpl& WrongTypeImpl::operator=(const WrongTypeImpl& copied) throw()$/;"	f	class:WrongTypeImpl
operator =	drivers/Firebird/ibpp/core/ibpp.h	/^		Ptr& operator=(T* p)$/;"	f	class:IBPP::Ptr
operator =	drivers/Firebird/ibpp/core/ibpp.h	/^		Ptr& operator=(const Ptr& r)$/;"	f	class:IBPP::Ptr
operator =	drivers/Firebird/ibpp/core/ibpp.h	/^		Timestamp& operator=(const Date& rv)		\/\/ Date Assignment operator$/;"	f	class:IBPP::Timestamp
operator =	drivers/Firebird/ibpp/core/ibpp.h	/^		Timestamp& operator=(const Time& rv)		\/\/ Time Assignment operator$/;"	f	class:IBPP::Timestamp
operator =	drivers/Firebird/ibpp/core/ibpp.h	/^		Timestamp& operator=(const Timestamp& rv)	\/\/ Timestamp Assignment operator$/;"	f	class:IBPP::Timestamp
operator =	drivers/Firebird/ibpp/core/ibpp.h	/^		User& operator=(const User& r)	{ copyfrom(r); return *this; }$/;"	f	class:IBPP::User
operator =	drivers/Firebird/ibpp/core/row.cpp	/^RowImpl& RowImpl::operator=(const RowImpl& copied)$/;"	f	class:RowImpl
operator =	drivers/Firebird/ibpp/core/time.cpp	/^IBPP::Time& IBPP::Time::operator=(const IBPP::Time& assigned)$/;"	f	class:IBPP::Time
operator =	drivers/Firebird/ibpp/core/time.cpp	/^IBPP::Time& IBPP::Time::operator=(const IBPP::Timestamp& assigned)$/;"	f	class:IBPP::Time
operator =	drivers/Oracle/OCI/include/occiObjects.h	/^Ref<T>& Ref<T>::operator=(const Ref<T> &src)$/;"	f	class:oracle::occi::Ref
operator =	drivers/Oracle/OCI/include/occiObjects.h	/^Ref<T>& Ref<T>::operator=(const RefAny &src)$/;"	f	class:oracle::occi::Ref
operator =	drivers/Oracle/OCI/include/occiObjects.h	/^Ref<T>& Ref<T>::operator=(const T *obj)$/;"	f	class:oracle::occi::Ref
operator =	drivers/qt/TeAppTheme.cpp	/^ TeAppTheme& TeAppTheme::operator =(const TeAppTheme& other)$/;"	f	class:TeAppTheme
operator =	drivers/spl/PluginsParametersContainer.h	/^PluginsParametersContainer< PluginsParametersContainerKeyT >::operator=( $/;"	f	class:PluginsParametersContainer
operator =	dtm/TeDTMAlgorithm.cpp	/^const TeDTMAlgorithm& TeDTMAlgorithm::operator=( $/;"	f	class:TeDTMAlgorithm
operator =	functions/TeSPRFile.h	/^	TeSPRFile& operator=(const TeSPRFile&){return *this;}$/;"	f	class:TeSPRFile
operator =	image_processing/TePDIAlgorithm.cpp	/^const TePDIAlgorithm& TePDIAlgorithm::operator=( $/;"	f	class:TePDIAlgorithm
operator =	image_processing/TePDIBatchGeoMosaic.cpp	/^TePDIBatchGeoMosaic::RastersListNodeT::operator=( const RastersListNodeT& $/;"	f	class:TePDIBatchGeoMosaic::RastersListNodeT
operator =	image_processing/TePDICluster.cpp	/^const TePDICluster& TePDICluster::operator=(const TePDICluster& clu)$/;"	f	class:TePDICluster
operator =	image_processing/TePDIFilterMask.cpp	/^void TePDIFilterMask::operator=( const TePDIFilterMask& external )$/;"	f	class:TePDIFilterMask
operator =	image_processing/TePDIHistogram.cpp	/^const TePDIHistogram& TePDIHistogram::operator=( $/;"	f	class:TePDIHistogram
operator =	image_processing/TePDIJointHistogram.cpp	/^const TePDIJointHistogram& TePDIJointHistogram::operator=( const $/;"	f	class:TePDIJointHistogram
operator =	image_processing/TePDIMatrix.hpp	/^  const TePDIMatrix< ElementType >& TePDIMatrix< ElementType >::operator=($/;"	f	class:TePDIMatrix
operator =	image_processing/TePDIPIManager.hpp	/^      const TePDIPIManager& operator=( const TePDIPIManager& ) $/;"	f	class:TePDIPIManager
operator =	image_processing/TePDIParameters.cpp	/^const TePDIParameters& TePDIParameters::operator=( $/;"	f	class:TePDIParameters
operator =	image_processing/TePDIRaster2Vector.hpp	/^      const TePDIRaster2VectorPolStruct& operator=( $/;"	f	class:TePDIRaster2VectorPolStruct
operator =	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme::operator= (const TeAbstractTheme& other)$/;"	f	class:TeAbstractTheme
operator =	kernel/TeAbstractTheme.h	/^	TeGrouping& operator= (const TeGrouping& other)$/;"	f	struct:TeGrouping
operator =	kernel/TeAttribute.h	/^	TeAttribute& operator= ( const TeAttribute& at )$/;"	f	struct:TeAttribute
operator =	kernel/TeAttribute.h	/^	TeAttributeRep& operator= ( const TeAttributeRep& at )$/;"	f	struct:TeAttributeRep
operator =	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::operator= (const TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>& other)$/;"	f	class:TeBaseSTInstanceSet
operator =	kernel/TeBox.h	/^	TeBox& operator=(const TeBox& rhs)$/;"	f	struct:TeBox
operator =	kernel/TeCommunicator.h	/^      const TeCommunicator< DataType >& operator=( $/;"	f	class:TeCommunicator
operator =	kernel/TeCoord2D.h	/^	TeCoord2D& operator= ( const TeCoord2D& cd )$/;"	f	class:TeCoord2D
operator =	kernel/TeCounted.h	/^	TeCounted& operator=(const TeCounted&){return *this;}$/;"	f	class:TeCounted
operator =	kernel/TeDatabase.cpp	/^TeDatabase& TeDatabase::operator=(const TeDatabase& other)$/;"	f	class:TeDatabase
operator =	kernel/TeDatabaseFactoryParams.cpp	/^const TeDatabaseFactoryParams& TeDatabaseFactoryParams::operator=( $/;"	f	class:TeDatabaseFactoryParams
operator =	kernel/TeDatum.cpp	/^TeDatum& TeDatum::operator=(const TeDatum& rhs)$/;"	f	class:TeDatum
operator =	kernel/TeDecoderVirtualMemory.cpp	/^TeMemoryPage::operator=(const TeMemoryPage& rhs)$/;"	f	class:TeMemoryPage
operator =	kernel/TeExternalTheme.cpp	/^TeExternalTheme& TeExternalTheme::operator=(TeExternalTheme& rhs)$/;"	f	class:TeExternalTheme
operator =	kernel/TeFileTheme.cpp	/^TeFileTheme& TeFileTheme::operator=(TeFileTheme& rhs)$/;"	f	class:TeFileTheme
operator =	kernel/TeGTParams.cpp	/^const TeGTParams& TeGTParams::operator=( $/;"	f	class:TeGTParams
operator =	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::operator=(const TeGeneralizedProxMatrix<Set>& pm) $/;"	f	class:TeGeneralizedProxMatrix
operator =	kernel/TeGeometricTransformation.h	/^          const ExcTPDataNode& operator=( const ExcTPDataNode& other )$/;"	f	class:TeGeometricTransformation::ExcTPDataNode
operator =	kernel/TeGeometricTransformation.h	/^          const TPDataNode& operator=( const TPDataNode& other )$/;"	f	class:TeGeometricTransformation::TPDataNode
operator =	kernel/TeGeometricTransformation.h	/^      const TeGeometricTransformation& operator=( $/;"	f	class:TeGeometricTransformation
operator =	kernel/TeGeometry.h	/^	TeGeomComposite& operator= ( const TeGeomComposite& other )$/;"	f	class:TeGeomComposite
operator =	kernel/TeGeometry.h	/^	TeGeomSingle& operator = ( const TeGeomSingle& other )$/;"	f	class:TeGeomSingle
operator =	kernel/TeGeometry.h	/^	TeText& operator= ( const TeText& other )$/;"	f	class:TeText
operator =	kernel/TeLayer.cpp	/^TeLayer::operator= ( const TeLayer& other )$/;"	f	class:TeLayer
operator =	kernel/TeLegendEntry.cpp	/^TeLegendEntry::operator = (const TeLegendEntry& leg)$/;"	f	class:TeLegendEntry
operator =	kernel/TeMappedMemory.h	/^      const TeMappedMemory& operator=( const TeMappedMemory& )$/;"	f	class:TeMappedMemory
operator =	kernel/TeMatrix.cpp	/^TeMatrix::operator=(const TeMatrix& m)$/;"	f	class:TeMatrix
operator =	kernel/TeMultiContainer.h	/^      const TeMCNodeInterface< TeMultiContainerKeyT >& operator=( $/;"	f	class:TeMCNodeInterface
operator =	kernel/TeMultiContainer.h	/^TeMultiContainer< TeMultiContainerKeyT >::operator=( $/;"	f	class:TeMultiContainer
operator =	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::operator= (const TeMultiGeometry& other)$/;"	f	class:TeMultiGeometry
operator =	kernel/TeMutex.h	/^      const TeMutex& operator=( const TeMutex& ) { return *this; };$/;"	f	class:TeMutex
operator =	kernel/TeNeighbours.cpp	/^TeNeighbours::operator= (const TeNeighbours& neigh)$/;"	f	class:TeNeighbours
operator =	kernel/TeNeighbours.cpp	/^TeProxMatrixAttributes::operator= (const TeProxMatrixAttributes& att)$/;"	f	class:TeProxMatrixAttributes
operator =	kernel/TeNetwork.h	/^	TeGraphNetwork& operator=(TeGraphNetwork& other)$/;"	f	class:TeGraphNetwork
operator =	kernel/TePieBar.h	/^	TePieBar& operator=(const TePieBar& pb)$/;"	f	class:TePieBar
operator =	kernel/TePolygonSetProperties.h	/^      const TePolygonSetProperties& operator=( const TePolygonSetProperties& )$/;"	f	class:TePolygonSetProperties
operator =	kernel/TeProgress.h	/^	TeProgress& operator=(const TeProgress&){return *this;}$/;"	f	class:TeProgress
operator =	kernel/TeProject.cpp	/^TeProject::operator= (const TeProject& other)$/;"	f	class:TeProject
operator =	kernel/TeProjection.cpp	/^TeProjection::operator=(const TeProjection& rhs)$/;"	f	class:TeProjection
operator =	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixChooseOneTopologyStrategy::operator= (const TeProxMatrixChooseOneTopologyStrategy& rhs)$/;"	f	class:TeProxMatrixChooseOneTopologyStrategy
operator =	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixClosedNetworkStrategy::operator= (const TeProxMatrixClosedNetworkStrategy& rhs)$/;"	f	class:TeProxMatrixClosedNetworkStrategy
operator =	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixKeepInBothTopologyStrategy::operator= (const TeProxMatrixKeepInBothTopologyStrategy& rhs)$/;"	f	class:TeProxMatrixKeepInBothTopologyStrategy
operator =	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixLocalAdjacencyStrategy::operator= (const TeProxMatrixLocalAdjacencyStrategy& rhs)$/;"	f	class:TeProxMatrixLocalAdjacencyStrategy
operator =	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixLocalTopologyStrategy::operator= (const TeProxMatrixLocalTopologyStrategy& rhs)$/;"	f	class:TeProxMatrixLocalTopologyStrategy
operator =	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixNearestNeighbourStrategy::operator= (const TeProxMatrixNearestNeighbourStrategy& rhs)$/;"	f	class:TeProxMatrixNearestNeighbourStrategy
operator =	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixOpenNetworkStrategy2:: operator= (const TeProxMatrixOpenNetworkStrategy2& rhs)$/;"	f	class:TeProxMatrixOpenNetworkStrategy2
operator =	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixOpenNetworkStrategy::operator= (const TeProxMatrixOpenNetworkStrategy& rhs)$/;"	f	class:TeProxMatrixOpenNetworkStrategy
operator =	kernel/TeProxMatrixConstructionStrategy.h	/^TeProxMatrixLocalDistanceStrategy<Set>::operator= (const TeProxMatrixLocalDistanceStrategy<Set>& rhs)$/;"	f	class:TeProxMatrixLocalDistanceStrategy
operator =	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann:: operator= (TeProxMatrixGraphBreymann& other)$/;"	f	class:TeProxMatrixGraphBreymann
operator =	kernel/TeQuerier.cpp	/^TeQuerier::operator=(const TeQuerier& other)$/;"	f	class:TeQuerier
operator =	kernel/TeQuerierImpl.cpp	/^TeQuerierImpl::operator= (const TeQuerierImpl& other)$/;"	f	class:TeQuerierImpl
operator =	kernel/TeQuerierParams.cpp	/^TeQuerierParams::operator=(const TeQuerierParams& rhs)$/;"	f	class:TeQuerierParams
operator =	kernel/TeRaster.h	/^	  const TeRaster& operator=( const TeRaster& ) { return *this; };	$/;"	f	class:TeRaster
operator =	kernel/TeRasterMemManager.h	/^      const TeRasterMemManager& operator=( const TeRasterMemManager& )$/;"	f	class:TeRasterMemManager
operator =	kernel/TeRasterParams.cpp	/^TeRasterParams::operator=(const TeRasterParams& rhs)$/;"	f	class:TeRasterParams
operator =	kernel/TeSemaphore.h	/^      const TeSemaphore& operator=( const TeSemaphore& ) { return *this; };$/;"	f	class:TeSemaphore
operator =	kernel/TeSharedPtr.h	/^  const TeSharedPtr< T >& TeSharedPtr< T >::operator=($/;"	f	class:TeSharedPtr
operator =	kernel/TeSingleton.h	/^	TeSingleton& operator=(const TeSingleton&){return *this;}$/;"	f	class:TeSingleton
operator =	kernel/TeSlice.h	/^	TeSlice& operator=(const TeSlice& slice)$/;"	f	class:TeSlice
operator =	kernel/TeSparseMatrix.h	/^    Reference operator=(const Reference rhs)$/;"	f	class:MatrixElement
operator =	kernel/TeSparseMatrix.h	/^    Reference operator=(const ValueType& x)$/;"	f	class:MatrixElement
operator =	kernel/TeTable.cpp	/^TeTable::operator=(const TeTable& rhs)$/;"	f	class:TeTable
operator =	kernel/TeTemporalSeries.cpp	/^TeTSEntry::operator=(const TeTSEntry& other)$/;"	f	class:TeTSEntry
operator =	kernel/TeTemporalSeries.cpp	/^TeTSParams::operator=(const TeTSParams& other)$/;"	f	class:TeTSParams
operator =	kernel/TeTemporalSeries.cpp	/^TeTemporalSeries::operator=(const TeTemporalSeries& other)$/;"	f	class:TeTemporalSeries
operator =	kernel/TeTheme.cpp	/^TeTheme::operator= (const TeTheme& other)$/;"	f	class:TeTheme
operator =	kernel/TeThreadSignal.h	/^      const TeThreadSignal& operator=( const TeThreadSignal& ) { return *this; };$/;"	f	class:TeThreadSignal
operator =	kernel/TeTime.cpp	/^TeTime::operator=(const TeTime& other)$/;"	f	class:TeTime
operator =	kernel/TeTimeInterval.h	/^	TeTimeInterval& operator=(const TeTimeInterval& t) {t1_ = t.t1_;  t2_ = t.t2_; intChronon_ = t.intChronon_; return (*this);}$/;"	f	class:TeTimeInterval
operator =	kernel/TeVisual.cpp	/^TeBaseVisualParams::operator=(const TeBaseVisualParams& vis)$/;"	f	class:TeBaseVisualParams
operator =	kernel/TeVisual.cpp	/^TeVisual::operator=(const TeVisual& vis)$/;"	f	class:TeVisual
operator =	kernel/TeVisual.h	/^	TeColor& operator= ( const TeColor& color )$/;"	f	struct:TeColor
operator =	stat/TeStatDataStructures.cpp	/^TeSTStatInstance::operator=(const TeSTStatInstance& other)$/;"	f	class:TeSTStatInstance
operator =	stat/TeStatDataStructures.cpp	/^TeSTStatInstanceSet::operator=(const TeSTStatInstanceSet& other)$/;"	f	class:TeSTStatInstanceSet
operator =	stat/TeStatDataStructures.h	/^		iterator& operator=(const iterator& other)$/;"	f	class:TeKernelGridSupport::iterator
operator =	stat/TeStatDataStructures.h	/^		iteratorPoly& operator=(const iteratorPoly& other)$/;"	f	class:TeKernelGridSupport::iteratorPoly
operator =	stat/TeStatDataStructures.h	/^      iterator& operator=(const iterator& other)$/;"	f	class:TeSTStatInstanceSet::iterator
operator =	utils/TeColorUtils.h	/^	ColorBar& operator= (const ColorBar& cb)$/;"	f	struct:ColorBar
operator ==	drivers/Firebird/ibpp/core/_ibpp.h	/^	bool operator == (const EventBufferIterator& i) const { return i.mIt == mIt; }$/;"	f	struct:ibpp_internals::EventBufferIterator
operator ==	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator==(const Date& rv)	const { return mDate == rv.GetDate(); }$/;"	f	class:IBPP::Date
operator ==	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator==(const Ptr& r) const	{ return mObject == r.mObject; }$/;"	f	class:IBPP::Ptr
operator ==	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator==(const T* p) const	{ return mObject == p; }$/;"	f	class:IBPP::Ptr
operator ==	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator==(const Time& rv)	const { return mTime == rv.GetTime(); }$/;"	f	class:IBPP::Time
operator ==	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator==(const Timestamp& rv) const$/;"	f	class:IBPP::Timestamp
operator ==	drivers/Oracle/OCI/include/occiObjects.h	/^bool Ref<T>::operator == (const RefAny & refAnyR) const$/;"	f	class:oracle::occi::Ref
operator ==	drivers/Oracle/OCI/include/occiObjects.h	/^bool Ref<T>::operator ==(const Ref<T> &ref) const$/;"	f	class:oracle::occi::Ref
operator ==	drivers/spl/PluginInfo.h	/^      bool operator==( const PluginInfo& external ) const$/;"	f	class:PluginInfo
operator ==	drivers/spl/PluginsParametersContainer.h	/^bool PluginsParametersContainer< PluginsParametersContainerKeyT >::operator==( $/;"	f	class:PluginsParametersContainer
operator ==	functions/TeCellAlgorithms.cpp	/^TeBoxRasterIterator::operator==(const TeBoxRasterIterator& rhs) const$/;"	f	class:TeBoxRasterIterator
operator ==	functions/TeRasterIteratorSet.h	/^			bool operator==(const iterator& rhs) const$/;"	f	class:RasterIteratorSet::iterator
operator ==	image_processing/TePDICluster.cpp	/^bool TePDICluster::operator==(TePDICluster clu)$/;"	f	class:TePDICluster
operator ==	image_processing/TePDIHistogram.cpp	/^bool TePDIHistogram::operator==( const TePDIHistogram& external ) const$/;"	f	class:TePDIHistogram
operator ==	image_processing/TePDIMixModelComponent.cpp	/^bool TePDIMixModelComponent::operator==( $/;"	f	class:TePDIMixModelComponent
operator ==	image_processing/TePDIMixModelComponentList.cpp	/^bool TePDIMixModelComponentList::operator==( $/;"	f	class:TePDIMixModelComponentList
operator ==	image_processing/TePDIMixModelSpectralBand.cpp	/^bool TePDIMixModelSpectralBand::operator==( $/;"	f	class:TePDIMixModelSpectralBand
operator ==	image_processing/TePDIMixModelSpectralBandList.cpp	/^bool TePDIMixModelSpectralBandList::operator==( $/;"	f	class:TePDIMixModelSpectralBandList
operator ==	image_processing/TePDIParameters.cpp	/^bool TePDIParameters::operator==( const TePDIParameters& ext_instance ) const$/;"	f	class:TePDIParameters
operator ==	kernel/TeAttribute.h	/^	bool operator== ( const TeAttributeRep& at )$/;"	f	struct:TeAttributeRep
operator ==	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::operator== (const TeBaseSTInstance<GeometryType, TimeType>& other)$/;"	f	class:TeBaseSTInstance
operator ==	kernel/TeBaseSTInstanceSet.h	/^			bool operator==(const propertyIterator& rhs) const$/;"	f	class:TeBaseSTInstanceSet::propertyIterator
operator ==	kernel/TeBox.h	/^	bool operator== (const TeBox& box) const $/;"	f	struct:TeBox
operator ==	kernel/TeCoord2D.h	/^	bool operator== (const TeCoord2D& cd) const $/;"	f	class:TeCoord2D
operator ==	kernel/TeCoord2D.h	/^  bool operator==( const TeCoordPair& external ) const$/;"	f	struct:TeCoordPair
operator ==	kernel/TeCoverage.h	/^        bool operator==(const iterator& rhs)$/;"	f	class:TeCoverage::iterator
operator ==	kernel/TeDatabase.h	/^	virtual bool operator== (const TeDatabase& other) const$/;"	f	class:TeDatabase
operator ==	kernel/TeDatabaseFactoryParams.cpp	/^bool TeDatabaseFactoryParams::operator==( $/;"	f	class:TeDatabaseFactoryParams
operator ==	kernel/TeDatum.h	/^	bool operator== (const TeDatum& dat) const $/;"	f	class:TeDatum
operator ==	kernel/TeDecoderVirtualMemory.h	/^	int operator==(const TeBlockIndex& idx2) const$/;"	f	class:TeBlockIndex
operator ==	kernel/TeGTParams.cpp	/^bool TeGTParams::operator==( const TeGTParams& external ) const$/;"	f	class:TeGTParams
operator ==	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::operator==(const TeGeneralizedProxMatrix<Set>& pm) const$/;"	f	class:TeGeneralizedProxMatrix
operator ==	kernel/TeGeometry.h	/^	bool operator== (const TeArc& other) const$/;"	f	class:TeArc
operator ==	kernel/TeGeometry.h	/^	bool operator== (const TeCell& other) const$/;"	f	class:TeCell
operator ==	kernel/TeGeometry.h	/^	bool operator== (const TeGeomComposite& other) const$/;"	f	class:TeGeomComposite
operator ==	kernel/TeGeometry.h	/^	bool operator== (const TeGeomSingle& other) const$/;"	f	class:TeGeomSingle
operator ==	kernel/TeGeometry.h	/^	bool operator== (const TeNode& node) const$/;"	f	class:TeNode
operator ==	kernel/TeGeometry.h	/^	bool operator== (const TeText& tx) const $/;"	f	class:TeText
operator ==	kernel/TeMatrix.cpp	/^TeMatrix::operator==(const TeMatrix& m) const$/;"	f	class:TeMatrix
operator ==	kernel/TeMultiContainer.h	/^      bool operator==( const TeMCNodeInterface< $/;"	f	class:TeMCNode
operator ==	kernel/TeMultiContainer.h	/^bool TeMultiContainer< TeMultiContainerKeyT >::operator==( $/;"	f	class:TeMultiContainer
operator ==	kernel/TeNeighbours.cpp	/^TeNeighbours:: operator== (const TeNeighbours& neigh)$/;"	f	class:TeNeighbours
operator ==	kernel/TeNeighbours.cpp	/^TeProxMatrixAttributes::operator==(const TeProxMatrixAttributes& att) const$/;"	f	class:TeProxMatrixAttributes
operator ==	kernel/TeProjection.cpp	/^TeProjection::operator== (const TeProjection& proj)$/;"	f	class:TeProjection
operator ==	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixChooseOneTopologyStrategy::operator== (const TeProxMatrixChooseOneTopologyStrategy& rhs) const   $/;"	f	class:TeProxMatrixChooseOneTopologyStrategy
operator ==	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixClosedNetworkStrategy::operator== (const TeProxMatrixClosedNetworkStrategy& other) const $/;"	f	class:TeProxMatrixClosedNetworkStrategy
operator ==	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixKeepInBothTopologyStrategy::operator== (const TeProxMatrixKeepInBothTopologyStrategy& rhs) const   $/;"	f	class:TeProxMatrixKeepInBothTopologyStrategy
operator ==	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixLocalAdjacencyStrategy::operator== (const TeProxMatrixLocalAdjacencyStrategy& rhs) const   $/;"	f	class:TeProxMatrixLocalAdjacencyStrategy
operator ==	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixLocalTopologyStrategy::operator== (const TeProxMatrixLocalTopologyStrategy& rhs) const   $/;"	f	class:TeProxMatrixLocalTopologyStrategy
operator ==	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixNearestNeighbourStrategy::operator== (const TeProxMatrixNearestNeighbourStrategy& s) const$/;"	f	class:TeProxMatrixNearestNeighbourStrategy
operator ==	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixOpenNetworkStrategy2:: operator== (const TeProxMatrixOpenNetworkStrategy2& other) const $/;"	f	class:TeProxMatrixOpenNetworkStrategy2
operator ==	kernel/TeProxMatrixConstructionStrategy.cpp	/^TeProxMatrixOpenNetworkStrategy::operator== (const TeProxMatrixOpenNetworkStrategy& other) const $/;"	f	class:TeProxMatrixOpenNetworkStrategy
operator ==	kernel/TeProxMatrixConstructionStrategy.h	/^	bool operator==(const TeProxMatrixConstructionParams& other) const$/;"	f	struct:TeProxMatrixConstructionParams
operator ==	kernel/TeProxMatrixConstructionStrategy.h	/^TeProxMatrixLocalDistanceStrategy<Set>::operator== (const TeProxMatrixLocalDistanceStrategy<Set>& s) const $/;"	f	class:TeProxMatrixLocalDistanceStrategy
operator ==	kernel/TeProxMatrixImplementation.h	/^	virtual bool operator== (const TeProxMatrixImplementation& ) const { return false; } $/;"	f	class:TeProxMatrixImplementation
operator ==	kernel/TeProxMatrixSlicingStrategy.h	/^	bool operator==(const TeProxMatrixSlicingParams& other) const$/;"	f	struct:TeProxMatrixSlicingParams
operator ==	kernel/TeProxMatrixSlicingStrategy.h	/^	virtual bool operator== (const TeProxMatrixSlicingStrategy& s) const {return (params_==s.params_);}$/;"	f	class:TeProxMatrixSlicingStrategy
operator ==	kernel/TeProxMatrixWeightsStrategy.h	/^	bool operator== (const TeProxMatrixWeightsParams& other) const$/;"	f	struct:TeProxMatrixWeightsParams
operator ==	kernel/TeProxMatrixWeightsStrategy.h	/^	virtual bool operator== (const TeProxMatrixWeightsStrategy& w) const {return (params_==w.params_);}$/;"	f	class:TeProxMatrixWeightsStrategy
operator ==	kernel/TeRaster.cpp	/^bool TeRaster::iterator::operator==(const iterator& rhs) const$/;"	f	class:TeRaster::iterator
operator ==	kernel/TeRedBlackTree.h	/^					bool operator==(const internal_iterator& other) const$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
operator ==	kernel/TeSharedPtr.h	/^      inline bool operator==( const TeSharedPtr< T >& external ) const$/;"	f	class:TeSharedPtr
operator ==	kernel/TeTime.cpp	/^TeTime::operator==(const TeTime& time) const$/;"	f	class:TeTime
operator ==	kernel/TeTimeInterval.h	/^	bool operator==(const TeTimeInterval& other) const { return (this->t1_ == other.t1_ && this->t2_ == other.t2_); } $/;"	f	class:TeTimeInterval
operator ==	kernel/TeTin.h	/^	bool operator== (const TeTinEdge& other) const$/;"	f	class:TeTinEdge
operator ==	kernel/TeTin.h	/^	bool operator== (const TeTinTriangle& other) const$/;"	f	class:TeTinTriangle
operator ==	kernel/TeTin.h	/^	bool operator== (const TeTinVertex& other) const$/;"	f	class:TeTinVertex
operator ==	kernel/TeVisual.cpp	/^TeBaseVisualParams::operator== (const TeBaseVisualParams& vis)$/;"	f	class:TeBaseVisualParams
operator ==	kernel/TeVisual.cpp	/^TeVisual::operator== (const TeVisual& vis)$/;"	f	class:TeVisual
operator ==	kernel/TeVisual.h	/^	bool operator== (const TeColor& color)$/;"	f	struct:TeColor
operator ==	stat/TeStatDataStructures.h	/^		bool operator==(const iterator& rhs) const$/;"	f	class:TeKernelGridSupport::iterator
operator ==	stat/TeStatDataStructures.h	/^		bool operator==(const iteratorPoly& rhs) const$/;"	f	class:TeKernelGridSupport::iteratorPoly
operator ==	stat/TeStatDataStructures.h	/^      bool operator==(const iterator& rhs) const$/;"	f	class:TeSTStatInstanceSet::iterator
operator >	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator>(const Date& rv) const { return mDate > rv.GetDate(); }$/;"	f	class:IBPP::Date
operator >	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator>(const Time& rv) const { return mTime > rv.GetTime(); }$/;"	f	class:IBPP::Time
operator >	drivers/Firebird/ibpp/core/ibpp.h	/^		bool operator>(const Timestamp& rv) const$/;"	f	class:IBPP::Timestamp
operator >	kernel/TeSharedPtr.h	/^      inline bool operator>( const TeSharedPtr< T >& external ) const$/;"	f	class:TeSharedPtr
operator >>	kernel/graph.h	/^	inline std::istream& operator>>(std::istream& is, Empty& ) { return is;}$/;"	f	namespace:br_stl
operator FILE*	kernel/TeStdFile.h	/^	operator FILE*() { return file_; }$/;"	f	class:TeStdFile
operator RefAny	drivers/Oracle/OCI/include/occiObjects.h	/^Ref<T>::operator RefAny () const$/;"	f	class:oracle::occi::Ref
operator ValueType	kernel/TeSparseMatrix.h	/^    operator ValueType () const  \/\/ type conversion operator$/;"	f	class:MatrixElement
operator []	image_processing/TePDIMatrix.hpp	/^      inline ElementType const* operator[]( const unsigned int& line ) const$/;"	f	class:TePDIMatrix
operator []	image_processing/TePDIMatrix.hpp	/^      inline ElementType* operator[]( const unsigned int& line )$/;"	f	class:TePDIMatrix
operator []	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::operator[](int i)$/;"	f	class:TeBaseSTInstance
operator []	kernel/TeComposite.h	/^	T& operator [] ( int i )$/;"	f	class:TeComposite
operator []	kernel/TeCoverage.h	/^        double operator[](int dimension)$/;"	f	class:TeCoverage::iterator
operator []	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::operator[](const string& object_id) $/;"	f	class:TeGeneralizedProxMatrix
operator []	kernel/TeGeometry.h	/^	T& operator [] ( int \/* i *\/) $/;"	f	class:TeGeomSingle
operator []	kernel/TeGeometry.h	/^	T& operator [] ( int i ) const$/;"	f	class:TeGeomComposite
operator []	kernel/TeMatrix.h	/^  inline double const* const operator[]( int lin ) const $/;"	f	class:TeMatrix
operator []	kernel/TeMatrix.h	/^  inline double* operator[]( int lin )$/;"	f	class:TeMatrix
operator []	kernel/TeNeighbours.cpp	/^TeNeighbours:: operator[](int n)$/;"	f	class:TeNeighbours
operator []	kernel/TeSparseMatrix.h	/^       MatrixElement operator[](size_type c)$/;"	f	class:TeSparseMatrix::Aux
operator []	kernel/TeSparseMatrix.h	/^   Aux operator[](size_type r)$/;"	f	class:TeSparseMatrix
operator []	kernel/TeTable.cpp	/^TeTable::operator [] (int i) const $/;"	f	class:TeTable
operator []	kernel/checkvec.h	/^			const_reference operator[](difference_type index) const {$/;"	f	class:br_stl::checkedVector
operator []	kernel/checkvec.h	/^		reference operator[](difference_type index) {$/;"	f	class:br_stl::checkedVector
operator []	kernel/graph.h	/^		vertex& operator[](int i)$/;"	f	class:br_stl::Graph
operatorMask	drivers/SQLite/sqlite3/sqlite3.c	/^static u16 operatorMask(int op){$/;"	f	file:
opflags	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 opflags;         \/* Mask of the OPFLG_* flags in opcodes.h *\/$/;"	m	struct:VdbeOp	file:
oppositeVertex	kernel/TeTin.cpp	/^TeTin::oppositeVertex(long t, long e)$/;"	f	class:TeTin
optimalPbufferHeight	drivers/GL/glcore.h	/^    GLint optimalPbufferHeight;  \/* Only for SGIX_pbuffer. *\/$/;"	m	struct:__GLcontextModesRec
optimalPbufferHeight	drivers/GL/glxint.h	/^    int optimalPbufferWidth, optimalPbufferHeight;  \/* for SGIX_pbuffer *\/$/;"	m	struct:__GLXFBConfigRec
optimalPbufferHeight	drivers/GL/internal/glcore.h	/^    GLint optimalPbufferHeight;  \/* Only for SGIX_pbuffer. *\/$/;"	m	struct:__GLcontextModesRec
optimalPbufferWidth	drivers/GL/glcore.h	/^    GLint optimalPbufferWidth;   \/* Only for SGIX_pbuffer. *\/$/;"	m	struct:__GLcontextModesRec
optimalPbufferWidth	drivers/GL/glxint.h	/^    int optimalPbufferWidth, optimalPbufferHeight;  \/* for SGIX_pbuffer *\/$/;"	m	struct:__GLXFBConfigRec
optimalPbufferWidth	drivers/GL/internal/glcore.h	/^    GLint optimalPbufferWidth;   \/* Only for SGIX_pbuffer. *\/$/;"	m	struct:__GLcontextModesRec
orTheme_	kernel/TeTemporalSeries.h	/^  	TeTheme*		orTheme_;		\/\/Pointer to the origin theme $/;"	m	class:TeTSParams
oracle	drivers/Oracle/OCI/include/occiAQ.h	/^namespace oracle {$/;"	n
oracle	drivers/Oracle/OCI/include/occiCommon.h	/^namespace oracle {$/;"	n
oracle	drivers/Oracle/OCI/include/occiControl.h	/^namespace oracle {$/;"	n
oracle	drivers/Oracle/OCI/include/occiData.h	/^namespace oracle {$/;"	n
oracle	drivers/Oracle/OCI/include/occiObjects.h	/^namespace oracle {$/;"	n
orasb8	drivers/Oracle/OCI/include/oratypes.h	/^ typedef signed \/*_int64*\/ int orasb8;$/;"	t
orasb8	drivers/Oracle/OCI/include/oratypes.h	101;"	d
oratext	drivers/Oracle/OCI/include/oratypes.h	/^  typedef  unsigned char oratext;$/;"	t
oratext	drivers/Oracle/OCI/include/oratypes.h	120;"	d
oraub8	drivers/Oracle/OCI/include/oratypes.h	/^ typedef unsigned  \/*_int64*\/ int oraub8;$/;"	t
oraub8	drivers/Oracle/OCI/include/oratypes.h	100;"	d
orconf	drivers/SQLite/sqlite3/sqlite3.c	/^  int orconf;             \/* Default ON CONFLICT policy *\/$/;"	m	struct:TriggerPrg	file:
orconf	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 orconf;           \/* OE_Rollback etc. *\/$/;"	m	struct:TriggerStep	file:
order	drivers/qt/TeQtCheckListItem.h	/^	int order()$/;"	f	class:TeQtCheckListItem
order	drivers/qt/TeQtCheckListItem.h	/^	void order(int order)$/;"	f	class:TeQtCheckListItem
orderByConsumed	drivers/SQLite/sqlite3/sqlite3.c	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info	file:
orderByConsumed	drivers/SQLite/sqlite3/sqlite3.h	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info
orderBy_	drivers/qt/TeQtGrid.h	/^	string					orderBy_;$/;"	m	class:TeQtGrid
orderBy_	drivers/qt/TeQtGridSource.h	/^	string orderBy_;$/;"	m	class:TeQtGridSource
orderEdges	kernel/TeTin.cpp	/^TeTin::orderEdges()$/;"	f	class:TeTin
order_	drivers/qt/TeQtCheckListItem.h	/^	int order_;$/;"	m	class:TeQtCheckListItem
order_	kernel/TeTable.h	/^	int					order_; \/\/ the table position relative to others in a join $/;"	m	class:TeTable
ordinates_	drivers/Oracle/TeOCIConnect.h	/^	OCIArray*		ordinates_;			\/\/!< stores the ordinates to insert into database 	$/;"	m	class:TeOCIConnection
ordinates_	drivers/Oracle/TeOCICursor.h	/^	OCIArray*				ordinates_;		\/\/!< store the ordinates to be used in a query (bind)$/;"	m	class:TeOCICursor
origImgXRescFact_	image_processing/TePDIMMIOMatching.hpp	/^          double origImgXRescFact_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
origImgYRescFact_	image_processing/TePDIMMIOMatching.hpp	/^          double origImgYRescFact_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
originX	drivers/MrSID/TeMrSID.cpp	/^double TeMrSIDReader::originX()$/;"	f	class:TeMrSIDReader
originY	drivers/MrSID/TeMrSID.cpp	/^double TeMrSIDReader::originY()$/;"	f	class:TeMrSIDReader
origin_	drivers/GTM/TeGTM.h	/^	double origin_, falseeast_, scale1_, falsenorthing_, axis_, flattening_;$/;"	m	class:TeGTMGridDatum
origin_	kernel/TeAttribute.h	/^	string				origin_;	\/\/!< origin of the intervals	$/;"	m	struct:TeAttribute
original_pixel	image_processing/TePDIBaatz.hpp	/^  struct segment_pixel *original_pixel; \/* pointer to original pixel of the segment *\/$/;"	m	struct:segment	typeref:struct:segment::segment_pixel
orphanTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^    u8 orphanTrigger;           \/* Last statement is orphaned TEMP trigger *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
os2Access	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2Access($/;"	f	file:
os2CheckReservedLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2CheckReservedLock( sqlite3_file *id, int *pOut ){$/;"	f	file:
os2Close	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2Close( sqlite3_file *id ){$/;"	f	file:
os2CurrentTime	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2CurrentTime( sqlite3_vfs *pVfs, double *prNow ){$/;"	f	file:
os2CurrentTimeInt64	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2CurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *piNow){$/;"	f	file:
os2Delete	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2Delete($/;"	f	file:
os2DeviceCharacteristics	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2DeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
os2DlClose	drivers/SQLite/sqlite3/sqlite3.c	/^static void os2DlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
os2DlClose	drivers/SQLite/sqlite3/sqlite3.c	24187;"	d	file:
os2DlError	drivers/SQLite/sqlite3/sqlite3.c	/^static void os2DlError(sqlite3_vfs *pVfs, int nBuf, char *zBufOut){$/;"	f	file:
os2DlError	drivers/SQLite/sqlite3/sqlite3.c	24185;"	d	file:
os2DlOpen	drivers/SQLite/sqlite3/sqlite3.c	/^static void *os2DlOpen(sqlite3_vfs *pVfs, const char *zFilename){$/;"	f	file:
os2DlOpen	drivers/SQLite/sqlite3/sqlite3.c	24184;"	d	file:
os2DlSym	drivers/SQLite/sqlite3/sqlite3.c	/^static void (*os2DlSym(sqlite3_vfs *pVfs, void *pHandle, const char *zSymbol))(void){$/;"	f	file:
os2DlSym	drivers/SQLite/sqlite3/sqlite3.c	24186;"	d	file:
os2File	drivers/SQLite/sqlite3/sqlite3.c	/^struct os2File {$/;"	s	file:
os2File	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct os2File os2File;         \/* The file structure *\/$/;"	t	typeref:struct:os2File	file:
os2FileControl	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2FileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
os2FileSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2FileSize( sqlite3_file *id, sqlite3_int64 *pSize ){$/;"	f	file:
os2FullPathname	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2FullPathname($/;"	f	file:
os2GetLastError	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2GetLastError(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
os2IoMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static const sqlite3_io_methods os2IoMethod = {$/;"	v	file:
os2Lock	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2Lock( sqlite3_file *id, int locktype ){$/;"	f	file:
os2MutexAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3_mutex *os2MutexAlloc(int iType){$/;"	f	file:
os2MutexEnd	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2MutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
os2MutexEnter	drivers/SQLite/sqlite3/sqlite3.c	/^static void os2MutexEnter(sqlite3_mutex *p){$/;"	f	file:
os2MutexFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void os2MutexFree(sqlite3_mutex *p){$/;"	f	file:
os2MutexHeld	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2MutexHeld(sqlite3_mutex *p){$/;"	f	file:
os2MutexInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2MutexInit(void){ return SQLITE_OK; }$/;"	f	file:
os2MutexLeave	drivers/SQLite/sqlite3/sqlite3.c	/^static void os2MutexLeave(sqlite3_mutex *p){$/;"	f	file:
os2MutexNotheld	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2MutexNotheld(sqlite3_mutex *p){$/;"	f	file:
os2MutexTrace	drivers/SQLite/sqlite3/sqlite3.c	/^static void os2MutexTrace(sqlite3_mutex *p, char *pAction){$/;"	f	file:
os2MutexTry	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2MutexTry(sqlite3_mutex *p){$/;"	f	file:
os2Open	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2Open($/;"	f	file:
os2OpenSharedMemory	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2OpenSharedMemory( os2File *fd, int szRegion ) {$/;"	f	file:
os2PurgeShmNodes	drivers/SQLite/sqlite3/sqlite3.c	/^static void os2PurgeShmNodes( int deleteFlag ) {$/;"	f	file:
os2Randomness	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2Randomness(sqlite3_vfs *pVfs, int nBuf, char *zBuf ){$/;"	f	file:
os2Read	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2Read($/;"	f	file:
os2SectorSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2SectorSize(sqlite3_file *id){$/;"	f	file:
os2ShmBarrier	drivers/SQLite/sqlite3/sqlite3.c	/^static void os2ShmBarrier($/;"	f	file:
os2ShmBarrier	drivers/SQLite/sqlite3/sqlite3.c	23805;"	d	file:
os2ShmEnterMutex	drivers/SQLite/sqlite3/sqlite3.c	/^static void os2ShmEnterMutex(void){$/;"	f	file:
os2ShmLeaveMutex	drivers/SQLite/sqlite3/sqlite3.c	/^static void os2ShmLeaveMutex(void){$/;"	f	file:
os2ShmLink	drivers/SQLite/sqlite3/sqlite3.c	/^struct os2ShmLink {$/;"	s	file:
os2ShmLink	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct os2ShmLink os2ShmLink;   \/* A connection to shared-memory *\/$/;"	t	typeref:struct:os2ShmLink	file:
os2ShmLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2ShmLock($/;"	f	file:
os2ShmLock	drivers/SQLite/sqlite3/sqlite3.c	23804;"	d	file:
os2ShmMap	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2ShmMap($/;"	f	file:
os2ShmMap	drivers/SQLite/sqlite3/sqlite3.c	23803;"	d	file:
os2ShmMutexHeld	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2ShmMutexHeld(void) {$/;"	f	file:
os2ShmNode	drivers/SQLite/sqlite3/sqlite3.c	/^struct os2ShmNode {$/;"	s	file:
os2ShmNode	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct os2ShmNode os2ShmNode;   \/* A shared descritive memory node *\/$/;"	t	typeref:struct:os2ShmNode	file:
os2ShmNodeList	drivers/SQLite/sqlite3/sqlite3.c	/^static os2ShmNode *os2ShmNodeList = NULL;$/;"	v	file:
os2ShmSystemLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2ShmSystemLock($/;"	f	file:
os2ShmUnmap	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2ShmUnmap($/;"	f	file:
os2ShmUnmap	drivers/SQLite/sqlite3/sqlite3.c	23806;"	d	file:
os2Sleep	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2Sleep( sqlite3_vfs *pVfs, int microsec ){$/;"	f	file:
os2Sync	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2Sync( sqlite3_file *id, int flags ){$/;"	f	file:
os2Truncate	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2Truncate( sqlite3_file *id, i64 nByte ){$/;"	f	file:
os2Unlock	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2Unlock( sqlite3_file *id, int locktype ){$/;"	f	file:
os2Write	drivers/SQLite/sqlite3/sqlite3.c	/^static int os2Write($/;"	f	file:
osAccess	drivers/SQLite/sqlite3/sqlite3.c	24930;"	d	file:
osClose	drivers/SQLite/sqlite3/sqlite3.c	24927;"	d	file:
osFallocate	drivers/SQLite/sqlite3/sqlite3.c	25006;"	d	file:
osFchmod	drivers/SQLite/sqlite3/sqlite3.c	24999;"	d	file:
osFcntl	drivers/SQLite/sqlite3/sqlite3.c	24956;"	d	file:
osFcntl	drivers/SQLite/sqlite3/sqlite3.c	25209;"	d	file:
osFcntl	drivers/SQLite/sqlite3/sqlite3.c	25210;"	d	file:
osFstat	drivers/SQLite/sqlite3/sqlite3.c	24946;"	d	file:
osFtruncate	drivers/SQLite/sqlite3/sqlite3.c	24953;"	d	file:
osGetcwd	drivers/SQLite/sqlite3/sqlite3.c	24933;"	d	file:
osLocaltime	drivers/SQLite/sqlite3/sqlite3.c	/^static int osLocaltime(time_t *t, struct tm *pTm){$/;"	f	file:
osOpen	drivers/SQLite/sqlite3/sqlite3.c	24924;"	d	file:
osOpenDirectory	drivers/SQLite/sqlite3/sqlite3.c	25012;"	d	file:
osPread	drivers/SQLite/sqlite3/sqlite3.c	24966;"	d	file:
osPread64	drivers/SQLite/sqlite3/sqlite3.c	24973;"	d	file:
osPwrite	drivers/SQLite/sqlite3/sqlite3.c	24983;"	d	file:
osPwrite64	drivers/SQLite/sqlite3/sqlite3.c	24991;"	d	file:
osRead	drivers/SQLite/sqlite3/sqlite3.c	24959;"	d	file:
osStat	drivers/SQLite/sqlite3/sqlite3.c	24936;"	d	file:
osUnlink	drivers/SQLite/sqlite3/sqlite3.c	25009;"	d	file:
osWrite	drivers/SQLite/sqlite3/sqlite3.c	24976;"	d	file:
ose	drivers/Oracle/OCI/include/ocidfn.h	/^    sword        ose;                                 \/* OSD dependent error *\/$/;"	m	struct:cda_def
ose	drivers/Oracle/OCI/include/ocidfn.h	/^    sword        ose;$/;"	m	struct:cda_head
other	drivers/GL/glcore.h	/^    void *other;	\/* implementation private data *\/$/;"	m	struct:__GLdrawableBufferRec
other	drivers/GL/glcore.h	/^    void *other;$/;"	m	struct:__GLdrawablePrivateRec
other	drivers/GL/glcore.h	/^    void *other;$/;"	m	struct:__GLimportsRec
other	drivers/GL/internal/glcore.h	/^    void *other;	\/* implementation private data *\/$/;"	m	struct:__GLdrawableBufferRec
other	drivers/GL/internal/glcore.h	/^    void *other;$/;"	m	struct:__GLdrawablePrivateRec
other	drivers/GL/internal/glcore.h	/^    void *other;$/;"	m	struct:__GLimportsRec
out	drivers/SQLite/sqlite3/shell.c	/^  FILE *out;             \/* Write results here *\/$/;"	m	struct:callback_data	file:
out	image_processing/TePDIHants.cpp	/^  fftw_complex *in, *out;$/;"	v
outMaximasListPtr_	image_processing/TePDIMMIOMatching.hpp	/^          MaximasListT* outMaximasListPtr_;$/;"	m	class:TePDIMMIOMatching::ExtractLocalMaximasParams
outMutex_	image_processing/TePDISAMClassifier.hpp	/^          TeMutex& outMutex_;$/;"	m	class:TePDISAMClassifier::SegThread
outOfCollectionLegend	kernel/TeAbstractTheme.h	/^	virtual TeLegendEntry& outOfCollectionLegend () $/;"	f	class:TeAbstractTheme
outOfCollectionLegend	kernel/TeAbstractTheme.h	/^	virtual void outOfCollectionLegend (TeLegendEntry &leg) $/;"	f	class:TeAbstractTheme
outOfCollectionLegend_	kernel/TeAbstractTheme.h	/^	TeLegendEntry		outOfCollectionLegend_;			\/\/group(-1) $/;"	m	class:TeAbstractTheme
outOfCollectionVisibility	drivers/qt/TeAppTheme.h	/^	bool outOfCollectionVisibility() $/;"	f	class:TeAppTheme
outOfCollectionVisibility	drivers/qt/TeAppTheme.h	/^	void outOfCollectionVisibility(bool v) $/;"	f	class:TeAppTheme
outOfCollectionVisibility_	drivers/qt/TeAppTheme.h	/^	bool			outOfCollectionVisibility_; $/;"	m	class:TeAppTheme
outRaster_	image_processing/TePDISAMClassifier.hpp	/^          TeRaster& outRaster_;$/;"	m	class:TePDISAMClassifier::SegThread
out_rem_strat_	kernel/TeGTParams.h	/^      OutRemStrategy out_rem_strat_;$/;"	m	class:TeGTParams
outerWidth	drivers/GL/glcore.h	/^    GLint outerWidth;$/;"	m	struct:__GLdrawableBufferRec
outerWidth	drivers/GL/internal/glcore.h	/^    GLint outerWidth;$/;"	m	struct:__GLdrawableBufferRec
outfile	drivers/SQLite/sqlite3/shell.c	/^  char outfile[FILENAME_MAX]; \/* Filename for *out *\/$/;"	m	struct:callback_data	file:
outputRasterPtr_	image_processing/TePDIParaSegBaatzStrategy.hpp	/^      TePDITypes::TePDIRasterPtrType outputRasterPtr_;$/;"	m	class:TePDIParaSegBaatzStrategy
outputRasterPtr_	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^      TePDITypes::TePDIRasterPtrType outputRasterPtr_;$/;"	m	class:TePDIParaSegRegGrowStrategy
outputRasterPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          TeRaster* outputRasterPtr_;    $/;"	m	class:TePDIParallelSegmenter::GroupDataThreadEntryParams
output_c_string	drivers/SQLite/sqlite3/shell.c	/^static void output_c_string(FILE *out, const char *z){$/;"	f	file:
output_csv	drivers/SQLite/sqlite3/shell.c	/^static void output_csv(struct callback_data *p, const char *z, int bSep){$/;"	f	file:
output_hex_blob	drivers/SQLite/sqlite3/shell.c	/^static void output_hex_blob(FILE *out, const void *pBlob, int nBlob){$/;"	f	file:
output_html_string	drivers/SQLite/sqlite3/shell.c	/^static void output_html_string(FILE *out, const char *z){$/;"	f	file:
output_quoted_string	drivers/SQLite/sqlite3/shell.c	/^static void output_quoted_string(FILE *out, const char *z){$/;"	f	file:
output_raster	image_processing/TePDIKMeansClas.hpp	/^  TePDITypes::TePDIRasterPtrType output_raster;$/;"	m	class:TePDIKMeansClas
overflow	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 overflow;      \/* True if integer overflow seen *\/$/;"	m	struct:SumCtx	file:
overload_function	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines	file:
overload_function	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines
overrideShellWidgetClass	drivers/GL/vms_x_fix.h	586;"	d
owner	drivers/Oracle/OCI/include/occiObjects.h	/^  bool owner;$/;"	m	class:oracle::occi::RefAny
owner	drivers/SQLite/sqlite3/sqlite3.c	/^  volatile DWORD owner;      \/* Thread holding this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
owner	drivers/SQLite/sqlite3/sqlite3.c	/^  volatile pthread_t owner;  \/* Thread that is within this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
ownershipRegion	drivers/GL/glcore.h	/^    __GLdrawableRegion ownershipRegion;$/;"	m	struct:__GLdrawablePrivateRec
ownershipRegion	drivers/GL/internal/glcore.h	/^    __GLdrawableRegion ownershipRegion;$/;"	m	struct:__GLdrawablePrivateRec
ownname	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SCHAR       ownname[32];            $/;"	m	struct:__anon63
ownname_length	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SHORT       ownname_length;         $/;"	m	struct:__anon63
p	drivers/SQLite/sqlite3/sqlite3.c	/^    void *p;               \/* Generic pointer *\/$/;"	m	union:VdbeOp::__anon39	file:
p	utils/mtrand.cpp	/^int MTRand_int32::p = 0;$/;"	m	class:MTRand_int32	file:
p	utils/mtrand.h	/^  static int p; \/\/ position in state array$/;"	m	class:MTRand_int32
p1	drivers/SQLite/sqlite3/sqlite3.c	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel	file:
p1	drivers/SQLite/sqlite3/sqlite3.c	/^  int p1;             \/* First operand *\/$/;"	m	struct:VdbeOp	file:
p1	drivers/SQLite/sqlite3/sqlite3.c	/^  signed char p1;     \/* First operand *\/$/;"	m	struct:VdbeOpList	file:
p2	drivers/SQLite/sqlite3/sqlite3.c	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel	file:
p2	drivers/SQLite/sqlite3/sqlite3.c	/^  int p2;             \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOp	file:
p2	drivers/SQLite/sqlite3/sqlite3.c	/^  signed char p2;     \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOpList	file:
p3	drivers/SQLite/sqlite3/sqlite3.c	/^  int p3;             \/* The third parameter *\/$/;"	m	struct:VdbeOp	file:
p3	drivers/SQLite/sqlite3/sqlite3.c	/^  signed char p3;     \/* Third parameter *\/$/;"	m	struct:VdbeOpList	file:
p4	drivers/SQLite/sqlite3/sqlite3.c	/^  } p4;$/;"	m	struct:VdbeOp	typeref:union:VdbeOp::__anon39	file:
p4type	drivers/SQLite/sqlite3/sqlite3.c	/^  signed char p4type; \/* One of the P4_xxx constants for p4 *\/$/;"	m	struct:VdbeOp	file:
p5	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 op, p5;            \/* Opcode and P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
p5	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 p5;              \/* Fifth parameter is an unsigned character *\/$/;"	m	struct:VdbeOp	file:
pAggInfo	drivers/SQLite/sqlite3/sqlite3.c	/^  AggInfo *pAggInfo;     \/* Used by TK_AGG_COLUMN and TK_AGG_FUNCTION *\/$/;"	m	struct:Expr	file:
pAggInfo	drivers/SQLite/sqlite3/sqlite3.c	/^  AggInfo *pAggInfo;   \/* Information about aggregates at this level *\/$/;"	m	struct:NameContext	file:
pAinc	drivers/SQLite/sqlite3/sqlite3.c	/^  AutoincInfo *pAinc;  \/* Information about AUTOINCREMENT counters *\/$/;"	m	struct:Parse	file:
pAndInfo	drivers/SQLite/sqlite3/sqlite3.c	/^    WhereAndInfo *pAndInfo; \/* Extra information if eOperator==WO_AND *\/$/;"	m	union:WhereTerm::__anon55	file:
pAppData	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods	file:
pAppData	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs	file:
pAppData	drivers/SQLite/sqlite3/sqlite3.h	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods
pAppData	drivers/SQLite/sqlite3/sqlite3.h	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs
pArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pArg;                \/* First arg to busy callback *\/$/;"	m	struct:BusyHandler	file:
pArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods	file:
pArg	drivers/SQLite/sqlite3/sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods
pAuthArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pAuthArg;               \/* 1st argument to the access auth function *\/$/;"	m	struct:sqlite3	file:
pAux	drivers/SQLite/sqlite3/sqlite3.c	/^    void *pAux;                   \/* Aux data for the i-th argument *\/$/;"	m	struct:VdbeFunc::AuxData	file:
pAux	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pAux;                          \/* pAux passed to create_module() *\/$/;"	m	struct:Module	file:
pBackup	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_backup *pBackup;    \/* Pointer to list of ongoing backup processes *\/$/;"	m	struct:Pager	file:
pBlob	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_blob *pBlob;            \/* If not NULL, blob handle to read node *\/$/;"	m	struct:Fts3SegReader	file:
pBlockingConnection	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *pBlockingConnection; \/* Connection that caused SQLITE_LOCKED *\/$/;"	m	struct:sqlite3	file:
pBottom_	drivers/qt/TeQtTextEdit.h	/^	QPoint				pBottom_;$/;"	m	class:TeQtTextEdit
pBt	drivers/SQLite/sqlite3/sqlite3.c	/^  BtShared *pBt;            \/* The BtShared this cursor points to *\/$/;"	m	struct:BtCursor	file:
pBt	drivers/SQLite/sqlite3/sqlite3.c	/^  BtShared *pBt;       \/* Pointer to BtShared that this page is part of *\/$/;"	m	struct:MemPage	file:
pBt	drivers/SQLite/sqlite3/sqlite3.c	/^  BtShared *pBt;     \/* Sharable content of this btree *\/$/;"	m	struct:Btree	file:
pBt	drivers/SQLite/sqlite3/sqlite3.c	/^  BtShared *pBt;    \/* The tree being checked out *\/$/;"	m	struct:IntegrityCk	file:
pBt	drivers/SQLite/sqlite3/sqlite3.c	/^  Btree *pBt;           \/* Separate file holding temporary table *\/$/;"	m	struct:VdbeCursor	file:
pBt	drivers/SQLite/sqlite3/sqlite3.c	/^  Btree *pBt;          \/* The B*Tree structure for this database file *\/$/;"	m	struct:Db	file:
pBtree	drivers/SQLite/sqlite3/sqlite3.c	/^  Btree *pBtree;            \/* The Btree to which this cursor belongs *\/$/;"	m	struct:BtCursor	file:
pBtree	drivers/SQLite/sqlite3/sqlite3.c	/^  Btree *pBtree;        \/* Btree handle holding this lock *\/$/;"	m	struct:BtLock	file:
pBusyHandlerArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pBusyHandlerArg;      \/* Context argument for xBusyHandler *\/$/;"	m	struct:Pager	file:
pCache	drivers/SQLite/sqlite3/sqlite3.c	/^  PCache *pCache;                \/* Cache that owns this page *\/$/;"	m	struct:PgHdr	file:
pCache	drivers/SQLite/sqlite3/sqlite3.c	/^  PCache1 *pCache;               \/* Cache that currently owns this page *\/$/;"	m	struct:PgHdr1	file:
pCache	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_pcache *pCache;             \/* Pluggable cache module *\/$/;"	m	struct:PCache	file:
pCell	drivers/SQLite/sqlite3/sqlite3.c	/^    u8 *pCell;          \/* Pointers to the body of the overflow cell *\/$/;"	m	struct:MemPage::_OvflCell	file:
pCell	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 *pCell;     \/* Pointer to the start of cell content *\/$/;"	m	struct:CellInfo	file:
pCenter_	drivers/qt/TeQtTextEdit.h	/^	QPoint				pCenter_;$/;"	m	class:TeQtTextEdit
pCheck	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pCheck;        \/* The AND of all CHECK constraints *\/$/;"	m	struct:Table	file:
pChunk	drivers/SQLite/sqlite3/sqlite3.c	/^  FileChunk *pChunk;              \/* Specific chunk into which cursor points *\/$/;"	m	struct:FilePoint	file:
pChunk	drivers/SQLite/sqlite3/sqlite3.c	/^  struct RowSetChunk *pChunk;    \/* List of all chunk allocations *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetChunk	file:
pCodec	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pCodec;               \/* First argument to xCodec... methods *\/$/;"	m	struct:Pager	file:
pColl	drivers/SQLite/sqlite3/sqlite3.c	/^    CollSeq *pColl;        \/* Used when p4type is P4_COLLSEQ *\/$/;"	m	union:VdbeOp::__anon39	file:
pColl	drivers/SQLite/sqlite3/sqlite3.c	/^  CollSeq *pColl;        \/* The collation type of the column or 0 *\/$/;"	m	struct:Expr	file:
pColl	drivers/SQLite/sqlite3/sqlite3.c	/^  CollSeq *pColl;       \/* Collating sequence *\/$/;"	m	struct:sqlite3_context	file:
pCollNeededArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pCollNeededArg;$/;"	m	struct:sqlite3	file:
pColumns	drivers/SQLite/sqlite3/sqlite3.c	/^  IdList *pColumns;       \/* If this is an UPDATE OF <column-list> trigger,$/;"	m	struct:Trigger	file:
pCommitArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pCommitArg;                 \/* Argument to xCommitCallback() *\/   $/;"	m	struct:sqlite3	file:
pContext	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
pContext	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pContext;$/;"	m	struct:RtreeGeomCallback	file:
pContext	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pContext;$/;"	m	struct:RtreeMatchArg	file:
pContext	drivers/SQLite/sqlite3/sqlite3.h	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry
pCsr	drivers/SQLite/sqlite3/sqlite3.c	/^  BtCursor *pCsr;         \/* Cursor pointing at blob row *\/$/;"	m	struct:Incrblob	file:
pCsr	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Cursor *pCsr;               \/* Cursor snippet is being generated from *\/$/;"	m	struct:SnippetIter	file:
pCsr	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Cursor *pCsr;               \/* FTS3 Cursor *\/$/;"	m	struct:LoadDoclistCtx	file:
pCsr	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Cursor *pCsr;$/;"	m	struct:TermOffsetCtx	file:
pCtx	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_context *pCtx;              \/* Write error message here *\/$/;"	m	struct:ParseContext	file:
pCurrent	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_syscall_ptr pCurrent; \/* Current value of the system call *\/$/;"	m	struct:unix_syscall	file:
pCursor	drivers/SQLite/sqlite3/sqlite3.c	/^  BtCursor *pCursor;    \/* A list of all open cursors *\/$/;"	m	struct:BtShared	file:
pCursor	drivers/SQLite/sqlite3/sqlite3.c	/^  BtCursor *pCursor;    \/* The cursor structure of the backend *\/$/;"	m	struct:VdbeCursor	file:
pCursor	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Cursor *pCursor;            \/* FTS3 Cursor *\/$/;"	m	struct:MatchInfo	file:
pData	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pData;                   \/* Content of this page *\/$/;"	m	struct:PgHdr	file:
pDbFd	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_file *pDbFd;       \/* File handle for the database file *\/$/;"	m	struct:Wal	file:
pDbPage	drivers/SQLite/sqlite3/sqlite3.c	/^  DbPage *pDbPage;     \/* Pager page handle *\/$/;"	m	struct:MemPage	file:
pDef	drivers/SQLite/sqlite3/sqlite3.c	/^    FuncDef *pDef;      \/* Used only when flags==MEM_Agg *\/$/;"	m	union:Mem::__anon49	file:
pDefault	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_syscall_ptr pDefault; \/* Default value *\/$/;"	m	struct:unix_syscall	file:
pDeferred	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3DeferredToken *pDeferred;   \/* Deferred search tokens, if any *\/$/;"	m	struct:Fts3Cursor	file:
pDeferred	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3DeferredToken *pDeferred;   \/* Deferred token object for this token *\/$/;"	m	struct:Fts3PhraseToken	file:
pDelFrame	drivers/SQLite/sqlite3/sqlite3.c	/^  VdbeFrame *pDelFrame;   \/* List of frame objects to free on VM reset *\/$/;"	m	struct:Vdbe	file:
pDeleteNode	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *pDeleteNode;$/;"	m	struct:Rtree	file:
pDeleteParent	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *pDeleteParent;$/;"	m	struct:Rtree	file:
pDeleteRowid	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *pDeleteRowid;$/;"	m	struct:Rtree	file:
pDeleted	drivers/SQLite/sqlite3/sqlite3.c	/^  RtreeNode *pDeleted;$/;"	m	struct:Rtree	file:
pDest	drivers/SQLite/sqlite3/sqlite3.c	/^  Btree *pDest;            \/* Destination b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pDestDb	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3* pDestDb;        \/* Destination database handle *\/$/;"	m	struct:sqlite3_backup	file:
pDestructor	drivers/SQLite/sqlite3/sqlite3.c	/^  FuncDestructor *pDestructor;   \/* Reference counted destructor function *\/$/;"	m	struct:FuncDef	file:
pDflt	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pDflt;     \/* Default value of this column *\/$/;"	m	struct:Column	file:
pDfltColl	drivers/SQLite/sqlite3/sqlite3.c	/^  CollSeq *pDfltColl;           \/* The default collating sequence (BINARY) *\/$/;"	m	struct:sqlite3	file:
pDirty	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDirty	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr *pDirty;                 \/* Transient list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyNext	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr *pDirtyNext;             \/* Next element in list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyPrev	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr *pDirtyPrev;             \/* Previous element in list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyTail	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDisconnect	drivers/SQLite/sqlite3/sqlite3.c	/^  VTable *pDisconnect;    \/* Disconnect these in next sqlite3_prepare() *\/$/;"	m	struct:sqlite3	file:
pEList	drivers/SQLite/sqlite3/sqlite3.c	/^  ExprList *pEList;      \/* The fields of the result *\/$/;"	m	struct:Select	file:
pEList	drivers/SQLite/sqlite3/sqlite3.c	/^  ExprList *pEList;    \/* Optional list of named expressions *\/$/;"	m	struct:NameContext	file:
pEnd	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pEnd;             \/* First byte past end of available space *\/$/;"	m	struct:Lookaside	file:
pEnd	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pStart, *pEnd;           \/* Bounds of pagecache malloc range *\/$/;"	m	struct:PCacheGlobal	file:
pEntry	drivers/SQLite/sqlite3/sqlite3.c	/^  struct RowSetEntry *pEntry;    \/* List of entries using pRight *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pErr	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_value *pErr;          \/* Most recent error message *\/$/;"	m	struct:sqlite3	file:
pExpr	drivers/SQLite/sqlite3/sqlite3.c	/^    Expr *pExpr;             \/* Expression encoding the function *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
pExpr	drivers/SQLite/sqlite3/sqlite3.c	/^    Expr *pExpr;             \/* The original expression *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
pExpr	drivers/SQLite/sqlite3/sqlite3.c	/^    Expr *pExpr;           \/* The list of expressions *\/$/;"	m	struct:ExprList::ExprList_item	file:
pExpr	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pExpr;            \/* Pointer to the subexpression that is this term *\/$/;"	m	struct:WhereTerm	file:
pExpr	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pExpr;          \/* The expression parse tree *\/$/;"	m	struct:ExprSpan	file:
pExpr	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Expr *pExpr;                \/* Parsed MATCH query string *\/$/;"	m	struct:Fts3Cursor	file:
pExpr	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Expr *pExpr;                \/* Pointer to phrase expression *\/$/;"	m	struct:LcsIterator	file:
pExprList	drivers/SQLite/sqlite3/sqlite3.c	/^  ExprList *pExprList; \/* SET clause for UPDATE.  VALUES clause for INSERT *\/$/;"	m	struct:TriggerStep	file:
pExtra	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pExtra;                  \/* Extra content *\/$/;"	m	struct:PgHdr	file:
pFKey	drivers/SQLite/sqlite3/sqlite3.c	/^  FKey *pFKey;         \/* Linked list of all foreign keys in this table *\/$/;"	m	struct:Table	file:
pFile	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_file *pFile;            \/* File iterator is reading from *\/$/;"	m	struct:VdbeSorterIter	file:
pFiller	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pFiller;      \/* So that sizeof(Mem) is a multiple of 8 *\/$/;"	m	struct:Mem	file:
pFilter	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3SegFilter *pFilter;         \/* Pointer to filter object *\/$/;"	m	struct:Fts3MultiSegReader	file:
pFirst	drivers/SQLite/sqlite3/sqlite3.c	/^  FileChunk *pFirst;              \/* Head of in-memory chunk-list *\/$/;"	m	struct:MemJournal	file:
pFirst	drivers/SQLite/sqlite3/sqlite3.c	/^  os2ShmLink *pFirst;        \/* First os2ShmLink object pointing to this *\/$/;"	m	struct:os2ShmNode	file:
pFirst	drivers/SQLite/sqlite3/sqlite3.c	/^  struct MemBlockHdr *pFirst;$/;"	m	struct:__anon50	typeref:struct:__anon50::MemBlockHdr	file:
pFirst	drivers/SQLite/sqlite3/sqlite3.c	/^  unixShm *pFirst;           \/* All unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
pFirst	drivers/SQLite/sqlite3/sqlite3.c	/^  winShm *pFirst;            \/* All winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
pFrame	drivers/SQLite/sqlite3/sqlite3.c	/^    VdbeFrame *pFrame;  \/* Used when flags==MEM_Frame *\/$/;"	m	union:Mem::__anon49	file:
pFrame	drivers/SQLite/sqlite3/sqlite3.c	/^  VdbeFrame *pFrame;      \/* Parent frame *\/$/;"	m	struct:Vdbe	file:
pFree	drivers/SQLite/sqlite3/sqlite3.c	/^  LookasideSlot *pFree;   \/* List of available buffers *\/$/;"	m	struct:Lookaside	file:
pFree	drivers/SQLite/sqlite3/sqlite3.c	/^  PgFreeslot *pFree;             \/* Free page blocks *\/$/;"	m	struct:PCacheGlobal	file:
pFree	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pFree;            \/* Free this when deleting the vdbe *\/$/;"	m	struct:Vdbe	file:
pFresh	drivers/SQLite/sqlite3/sqlite3.c	/^  struct RowSetEntry *pFresh;    \/* Source of new entry objects *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pFrom	drivers/SQLite/sqlite3/sqlite3.c	/^  Table *pFrom;     \/* Table containing the REFERENCES clause (aka: Child) *\/$/;"	m	struct:FKey	file:
pFts3Tab	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Table *pFts3Tab;$/;"	m	struct:Fts3auxTable	file:
pFunc	drivers/SQLite/sqlite3/sqlite3.c	/^    FuncDef *pFunc;          \/* The aggregate function implementation *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
pFunc	drivers/SQLite/sqlite3/sqlite3.c	/^    FuncDef *pFunc;        \/* Used when p4type is P4_FUNCDEF *\/$/;"	m	union:VdbeOp::__anon39	file:
pFunc	drivers/SQLite/sqlite3/sqlite3.c	/^  FuncDef *pFunc;               \/* The definition of the function *\/$/;"	m	struct:VdbeFunc	file:
pFunc	drivers/SQLite/sqlite3/sqlite3.c	/^  FuncDef *pFunc;       \/* Pointer to function information.  MUST BE FIRST *\/$/;"	m	struct:sqlite3_context	file:
pGeom	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_rtree_geometry *pGeom;  \/* Constraint callback argument for a MATCH *\/$/;"	m	struct:RtreeConstraint	file:
pGroup	drivers/SQLite/sqlite3/sqlite3.c	/^  PGroup *pGroup;                     \/* PGroup this cache belongs to *\/$/;"	m	struct:PCache1	file:
pGroupBy	drivers/SQLite/sqlite3/sqlite3.c	/^  ExprList *pGroupBy;     \/* The group by clause *\/$/;"	m	struct:AggInfo	file:
pGroupBy	drivers/SQLite/sqlite3/sqlite3.c	/^  ExprList *pGroupBy;    \/* The GROUP BY clause *\/$/;"	m	struct:Select	file:
pHasContent	drivers/SQLite/sqlite3/sqlite3.c	/^  Bitvec *pHasContent;  \/* Set of pages moved to free-list this transaction *\/$/;"	m	struct:BtShared	file:
pHash	drivers/SQLite/sqlite3/sqlite3.c	/^  FuncDef *pHash;      \/* Next with a different name but the same hash *\/$/;"	m	struct:FuncDef	file:
pHaving	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pHaving;         \/* The HAVING clause *\/$/;"	m	struct:Select	file:
pHead	drivers/SQLite/sqlite3/sqlite3.c	/^  char *pHead;                    \/* Position list data following iHead *\/$/;"	m	struct:SnippetPhrase	file:
pHeap	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pHeap;                      \/* Heap storage space *\/$/;"	m	struct:Sqlite3Config	file:
pI64	drivers/SQLite/sqlite3/sqlite3.c	/^    i64 *pI64;             \/* Used when p4type is P4_INT64 *\/$/;"	m	union:VdbeOp::__anon39	file:
pId	drivers/SQLite/sqlite3/sqlite3.c	/^  struct vxworksFileId *pId;          \/* Unique file ID *\/$/;"	m	struct:unixFile	typeref:struct:unixFile::vxworksFileId	file:
pId	drivers/SQLite/sqlite3/sqlite3.c	/^  struct vxworksFileId *pId;  \/* Unique file ID for vxworks. *\/$/;"	m	struct:unixFileId	typeref:struct:unixFileId::vxworksFileId	file:
pIdList	drivers/SQLite/sqlite3/sqlite3.c	/^  IdList *pIdList;     \/* Column names for INSERT *\/$/;"	m	struct:TriggerStep	file:
pIdx	drivers/SQLite/sqlite3/sqlite3.c	/^    Index *pIdx;                   \/* Index when WHERE_INDEXED is true *\/$/;"	m	union:WherePlan::__anon44	file:
pIdxInfo	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_index_info *pIdxInfo;  \/* Index info for n-th source table *\/$/;"	m	struct:WhereLevel	file:
pImpl_	kernel/TeGeometry.h	/^	TeComposite<T> * pImpl_; $/;"	m	class:TeGeomComposite
pImpl_	kernel/TeTable.h	/^	TeTableImpl* pImpl_;		\/\/ the rows of a table$/;"	m	class:TeTable
pInJournal	drivers/SQLite/sqlite3/sqlite3.c	/^  Bitvec *pInJournal;         \/* One bit for each page in the database file *\/$/;"	m	struct:Pager	file:
pInSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^  Bitvec *pInSavepoint;        \/* Set of pages in this savepoint *\/$/;"	m	struct:PagerSavepoint	file:
pIndex	drivers/SQLite/sqlite3/sqlite3.c	/^    Index *pIndex;    \/* Index structure corresponding to zIndex, if any *\/$/;"	m	struct:SrcList::SrcList_item	file:
pIndex	drivers/SQLite/sqlite3/sqlite3.c	/^  Index *pIndex;       \/* List of SQL indexes on this table. *\/$/;"	m	struct:Table	file:
pInitMutex	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *pInitMutex;        \/* Mutex used by sqlite3_initialize() *\/$/;"	m	struct:Sqlite3Config	file:
pInode	drivers/SQLite/sqlite3/sqlite3.c	/^  unixInodeInfo *pInode;              \/* Info about locks on this inode *\/$/;"	m	struct:unixFile	file:
pInode	drivers/SQLite/sqlite3/sqlite3.c	/^  unixInodeInfo *pInode;     \/* unixInodeInfo that owns this SHM node *\/$/;"	m	struct:unixShmNode	file:
pInput	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *pInput;          \/* input we are tokenizing *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pIter	drivers/SQLite/sqlite3/sqlite3.c	/^  UBreakIterator *pIter;      \/* ICU break-iterator object *\/$/;"	m	struct:IcuCursor	file:
pKey	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *pKey; int nKey;  \/* Key associated with this element *\/$/;"	m	struct:HashElem	file:
pKey	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pKey;      \/* Saved key that was cursor's last known position *\/$/;"	m	struct:BtCursor	file:
pKey	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
pKeyInfo	drivers/SQLite/sqlite3/sqlite3.c	/^    KeyInfo *pKeyInfo;     \/* Used when p4type is P4_KEYINFO *\/$/;"	m	union:VdbeOp::__anon39	file:
pKeyInfo	drivers/SQLite/sqlite3/sqlite3.c	/^  KeyInfo *pKeyInfo;    \/* Info about index keys needed by index cursors *\/$/;"	m	struct:VdbeCursor	file:
pKeyInfo	drivers/SQLite/sqlite3/sqlite3.c	/^  KeyInfo *pKeyInfo;  \/* Collation and sort-order information *\/$/;"	m	struct:UnpackedRecord	file:
pKeyInfo	drivers/SQLite/sqlite3/sqlite3.c	/^  struct KeyInfo *pKeyInfo; \/* Argument passed to comparison function *\/$/;"	m	struct:BtCursor	typeref:struct:BtCursor::KeyInfo	file:
pLast	drivers/SQLite/sqlite3/sqlite3.c	/^  TriggerStep *pLast;  \/* Last element in link-list. Valid for 1st elem only *\/$/;"	m	struct:TriggerStep	file:
pLast	drivers/SQLite/sqlite3/sqlite3.c	/^  struct MemBlockHdr *pLast;$/;"	m	struct:__anon50	typeref:struct:__anon50::MemBlockHdr	file:
pLast	drivers/SQLite/sqlite3/sqlite3.c	/^  struct RowSetEntry *pLast;     \/* Last entry on the pEntry list *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pLeft	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pLeft;           \/* Left subnode *\/$/;"	m	struct:Expr	file:
pLeft	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Expr *pLeft;           \/* Left operand *\/$/;"	m	struct:Fts3Expr	file:
pLeft	drivers/SQLite/sqlite3/sqlite3.c	/^  struct RowSetEntry *pLeft;    \/* Left subtree (smaller entries) *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pLeft_	drivers/qt/TeQtTextEdit.h	/^	QPoint				pLeft_;$/;"	m	class:TeQtTextEdit
pLeftmost	drivers/SQLite/sqlite3/sqlite3.c	/^  SegmentNode *pLeftmost;         \/* Pointer to left-most node of this depth *\/$/;"	m	struct:SegmentNode	file:
pLimit	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pLimit;          \/* LIMIT expression. NULL means not used. *\/$/;"	m	struct:Select	file:
pLimit	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pLimit;    \/* The LIMIT expression.  NULL if there is no limit *\/$/;"	m	struct:LimitVal	file:
pList	drivers/SQLite/sqlite3/sqlite3.c	/^    ExprList *pList;     \/* Function arguments or in "<expr> IN (<expr-list)" *\/$/;"	m	union:Expr::__anon43	file:
pList	drivers/SQLite/sqlite3/sqlite3.c	/^  PendingList *pList;             \/* Doclist is assembled here *\/$/;"	m	struct:Fts3DeferredToken	file:
pList	drivers/SQLite/sqlite3/sqlite3.c	/^  char *pList;                    \/* Pointer to start of phrase position list *\/$/;"	m	struct:SnippetPhrase	file:
pList	drivers/SQLite/sqlite3/sqlite3.c	/^  char *pList;                    \/* Position-list *\/$/;"	m	struct:TermOffset	file:
pList	drivers/SQLite/sqlite3/sqlite3.c	/^  char *pList;                   \/* Pointer to position list following iDocid *\/$/;"	m	struct:Fts3Doclist	file:
pLock	drivers/SQLite/sqlite3/sqlite3.c	/^  BtLock *pLock;        \/* List of locks held on this shared-btree struct *\/$/;"	m	struct:BtShared	file:
pLog	drivers/SQLite/sqlite3/shell.c	/^  FILE *pLog;            \/* Write log output here *\/$/;"	m	struct:callback_data	file:
pLogArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pLogArg;                       \/* First argument to xLog() *\/$/;"	m	struct:Sqlite3Config	file:
pLruHead	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr1 *pLruHead, *pLruTail;   \/* LRU list of unpinned pages *\/$/;"	m	struct:PGroup	file:
pLruNext	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr1 *pLruNext;              \/* Next in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pLruPrev	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr1 *pLruPrev;              \/* Previous in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pLruTail	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr1 *pLruHead, *pLruTail;   \/* LRU list of unpinned pages *\/$/;"	m	struct:PGroup	file:
pMap	drivers/SQLite/sqlite3/sqlite3.c	/^    void *pMap;$/;"	m	struct:winShmNode::ShmRegion	file:
pMaskSet	drivers/SQLite/sqlite3/sqlite3.c	/^  WhereMaskSet *pMaskSet;  \/* Mapping of table cursor numbers to bitmasks *\/$/;"	m	struct:WhereClause	file:
pMem	drivers/SQLite/sqlite3/sqlite3.c	/^    Mem *pMem;             \/* Used when p4type is P4_MEM *\/$/;"	m	union:VdbeOp::__anon39	file:
pMem	drivers/SQLite/sqlite3/sqlite3.c	/^  Mem *pMem;            \/* Memory cell used to store aggregate context *\/$/;"	m	struct:sqlite3_context	file:
pMethod	drivers/SQLite/sqlite3/sqlite3.c	/^  const sqlite3_io_methods *pMethod;  \/* Always the first entry *\/$/;"	m	struct:os2File	file:
pMethod	drivers/SQLite/sqlite3/sqlite3.c	/^  const sqlite3_io_methods *pMethod; \/*** Must be first ***\/$/;"	m	struct:winFile	file:
pMethod	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_io_methods *pMethod;    \/* I\/O methods on journal files *\/$/;"	m	struct:JournalFile	file:
pMethod	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_io_methods *pMethod;    \/* Parent class. MUST BE FIRST *\/$/;"	m	struct:MemJournal	file:
pMethod	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_io_methods const *pMethod;  \/* Always the first entry *\/$/;"	m	struct:unixFile	file:
pMethods	drivers/SQLite/sqlite3/sqlite3.c	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods	file:
pMethods	drivers/SQLite/sqlite3/sqlite3.h	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods
pMod	drivers/SQLite/sqlite3/sqlite3.c	/^  Module *pMod;             \/* Pointer to module implementation *\/$/;"	m	struct:VTable	file:
pModule	drivers/SQLite/sqlite3/sqlite3.c	/^  const sqlite3_module *pModule;       \/* Callback pointers *\/$/;"	m	struct:Module	file:
pModule	drivers/SQLite/sqlite3/sqlite3.c	/^  const sqlite3_module *pModule;     \/* Module for cursor pVtabCursor *\/$/;"	m	struct:VdbeCursor	file:
pModule	drivers/SQLite/sqlite3/sqlite3.c	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab	file:
pModule	drivers/SQLite/sqlite3/sqlite3.c	/^  const sqlite3_tokenizer_module *pModule;  \/* The module for this tokenizer *\/$/;"	m	struct:sqlite3_tokenizer	file:
pModule	drivers/SQLite/sqlite3/sqlite3.h	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab
pNC	drivers/SQLite/sqlite3/sqlite3.c	/^    NameContext *pNC;                          \/* Naming context *\/$/;"	m	union:Walker::__anon48	file:
pName	drivers/SQLite/sqlite3/sqlite3.c	/^  const Token *pName; \/* Name of the container - used for error messages *\/$/;"	m	struct:DbFixer	file:
pNewTable	drivers/SQLite/sqlite3/sqlite3.c	/^  Table *pNewTable;    \/* A table being constructed by CREATE TABLE *\/$/;"	m	struct:Parse	file:
pNewTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^  Trigger *pNewTrigger;     \/* Trigger under construct by a CREATE TRIGGER *\/$/;"	m	struct:Parse	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  AutoincInfo *pNext;   \/* Next info block in a list of them all *\/$/;"	m	struct:AutoincInfo	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  BtCursor *pNext, *pPrev;  \/* Forms a linked list of all cursors *\/$/;"	m	struct:BtCursor	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  BtLock *pNext;        \/* Next in BtShared.pLock list *\/$/;"	m	struct:BtLock	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  BtShared *pNext;      \/* Next on a list of sharable BtShared structs *\/$/;"	m	struct:BtShared	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  Btree *pNext;      \/* List of other sharable Btrees from the same db *\/$/;"	m	struct:Btree	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  FileChunk *pNext;               \/* Next chunk in the journal *\/$/;"	m	struct:FileChunk	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3DeferredToken *pNext;       \/* Next in list of deferred tokens *\/$/;"	m	struct:Fts3DeferredToken	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  FuncDef *pNext;      \/* Next function with same name *\/$/;"	m	struct:FuncDef	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  Index *pNext;    \/* The next index associated with the same table *\/$/;"	m	struct:Index	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  LookasideSlot *pNext;    \/* Next buffer in the list of free buffers *\/$/;"	m	struct:LookasideSlot	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  NameContext *pNext;  \/* Next outer name context.  NULL for outermost *\/$/;"	m	struct:NameContext	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  PgFreeslot *pNext;  \/* Next free slot *\/$/;"	m	struct:PgFreeslot	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr1 *pNext;                 \/* Next in hash table chain *\/$/;"	m	struct:PgHdr1	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  RtreeNode *pNext;                 \/* Next node in this hash chain *\/$/;"	m	struct:RtreeNode	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  Savepoint *pNext;                   \/* Parent savepoint (if any) *\/$/;"	m	struct:Savepoint	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  Select *pNext;         \/* Next select to the left in a compound *\/$/;"	m	struct:Select	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  SorterRecord *pNext;$/;"	m	struct:SorterRecord	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  SubProgram *pNext;            \/* Next sub-program already visited *\/$/;"	m	struct:SubProgram	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  Trigger *pNext;         \/* Next trigger associated with the table *\/$/;"	m	struct:Trigger	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  TriggerPrg *pNext;      \/* Next entry in Parse.pTriggerPrg list *\/$/;"	m	struct:TriggerPrg	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  TriggerStep *pNext;  \/* Next in the link-list *\/$/;"	m	struct:TriggerStep	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  UnixUnusedFd *pNext;      \/* Next unused file descriptor on same file *\/$/;"	m	struct:UnixUnusedFd	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  VTable *pNext;            \/* Next in linked list (see above) *\/$/;"	m	struct:VTable	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  os2ShmLink *pNext;         \/* Next os2Shm with the same os2ShmNode *\/$/;"	m	struct:os2ShmLink	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  os2ShmNode *pNext;         \/* Next in list of all os2ShmNode objects *\/$/;"	m	struct:os2ShmNode	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_backup *pNext;   \/* Next backup associated with source pager *\/$/;"	m	struct:sqlite3_backup	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::MemBlockHdr	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  struct ScratchFreeslot *pNext;   \/* Next unused scratch buffer *\/$/;"	m	struct:ScratchFreeslot	typeref:struct:ScratchFreeslot::ScratchFreeslot	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  struct vxworksFileId *pNext;  \/* Next in a list of them all *\/$/;"	m	struct:vxworksFileId	typeref:struct:vxworksFileId::vxworksFileId	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  unixInodeInfo *pNext;           \/* List of all unixInodeInfo objects *\/$/;"	m	struct:unixInodeInfo	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  unixShm *pNext;            \/* Next unixShm with the same unixShmNode *\/$/;"	m	struct:unixShm	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  winShm *pNext;             \/* Next winShm with the same winShmNode *\/$/;"	m	struct:winShm	file:
pNext	drivers/SQLite/sqlite3/sqlite3.c	/^  winShmNode *pNext;         \/* Next in list of all winShmNode objects *\/$/;"	m	struct:winShmNode	file:
pNext	drivers/SQLite/sqlite3/sqlite3.h	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs
pNextBlocked	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *pNextBlocked;        \/* Next in list of all blocked connections *\/$/;"	m	struct:sqlite3	file:
pNextChunk	drivers/SQLite/sqlite3/sqlite3.c	/^  struct RowSetChunk *pNextChunk;        \/* Next chunk on list of them all *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetChunk	file:
pNextDocid	drivers/SQLite/sqlite3/sqlite3.c	/^  char *pNextDocid;              \/* Pointer to next docid *\/$/;"	m	struct:Fts3Doclist	file:
pNextFrom	drivers/SQLite/sqlite3/sqlite3.c	/^  FKey *pNextFrom;  \/* Next foreign key in pFrom *\/$/;"	m	struct:FKey	file:
pNextId	drivers/SQLite/sqlite3/sqlite3.c	/^  char *pNextId;                  \/* Pointer into the body of aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
pNextTo	drivers/SQLite/sqlite3/sqlite3.c	/^  FKey *pNextTo;    \/* Next foreign key on table named zTo *\/$/;"	m	struct:FKey	file:
pNextZombie	drivers/SQLite/sqlite3/sqlite3.c	/^  Table *pNextZombie;  \/* Next on the Parse.pZombieTab list *\/$/;"	m	struct:Table	file:
pNode	drivers/SQLite/sqlite3/sqlite3.c	/^  RtreeNode *pNode;                 \/* Node cursor is currently pointing at *\/$/;"	m	struct:RtreeCursor	file:
pNumBytes	drivers/libjpeg/jmemdstsrc.h	/^  unsigned int *pNumBytes;			\/* number of bytes in the buffer *\/$/;"	m	struct:__anon36
pOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pOffset;         \/* OFFSET expression. NULL means not used. *\/$/;"	m	struct:Select	file:
pOffset	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pOffset;   \/* The OFFSET expression.  NULL if there is none *\/$/;"	m	struct:LimitVal	file:
pOffsetList	drivers/SQLite/sqlite3/sqlite3.c	/^  char *pOffsetList;$/;"	m	struct:Fts3SegReader	file:
pOldMethod	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_io_methods const *pOldMethod;     \/* Original I\/O methods for close *\/$/;"	m	struct:proxyLockingContext	file:
pOn	drivers/SQLite/sqlite3/sqlite3.c	/^    Expr *pOn;        \/* The ON clause of a join *\/$/;"	m	struct:SrcList::SrcList_item	file:
pOrInfo	drivers/SQLite/sqlite3/sqlite3.c	/^    WhereOrInfo *pOrInfo;   \/* Extra information if eOperator==WO_OR *\/$/;"	m	union:WhereTerm::__anon55	file:
pOrderBy	drivers/SQLite/sqlite3/sqlite3.c	/^  ExprList *pOrderBy;    \/* The ORDER BY clause *\/$/;"	m	struct:Select	file:
pOut	kernel/graph.h	/^		std::ostream* pOut;$/;"	m	class:br_stl::Graph
pOuter	drivers/SQLite/sqlite3/sqlite3.c	/^  WhereClause *pOuter;     \/* Outer conjunction *\/$/;"	m	struct:WhereClause	file:
pPCache	drivers/SQLite/sqlite3/sqlite3.c	/^  PCache *pPCache;            \/* Pointer to page cache object *\/$/;"	m	struct:Pager	file:
pPage	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pPage;                      \/* Page cache memory *\/$/;"	m	struct:Sqlite3Config	file:
pPage1	drivers/SQLite/sqlite3/sqlite3.c	/^  MemPage *pPage1;      \/* First page of the database *\/$/;"	m	struct:BtShared	file:
pPage1	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr *pPage1;                      \/* Reference to page 1 *\/$/;"	m	struct:PCache	file:
pPager	drivers/SQLite/sqlite3/sqlite3.c	/^  Pager *pPager;                 \/* The pager this page is part of *\/$/;"	m	struct:PgHdr	file:
pPager	drivers/SQLite/sqlite3/sqlite3.c	/^  Pager *pPager;        \/* The page cache *\/$/;"	m	struct:BtShared	file:
pPager	drivers/SQLite/sqlite3/sqlite3.c	/^  Pager *pPager;    \/* The associated pager.  Also accessible by pBt->pPager *\/$/;"	m	struct:IntegrityCk	file:
pParent	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Expr *pParent;         \/* pParent->pLeft==this or pParent->pRight==this *\/$/;"	m	struct:Fts3Expr	file:
pParent	drivers/SQLite/sqlite3/sqlite3.c	/^  RtreeNode *pParent;               \/* Parent node *\/$/;"	m	struct:RtreeNode	file:
pParent	drivers/SQLite/sqlite3/sqlite3.c	/^  SegmentNode *pParent;           \/* Parent node (or NULL for root node) *\/$/;"	m	struct:SegmentNode	file:
pParent	drivers/SQLite/sqlite3/sqlite3.c	/^  VdbeFrame *pParent;     \/* Parent of this frame, or NULL if parent is main *\/$/;"	m	struct:VdbeFrame	file:
pParse	drivers/SQLite/sqlite3/sqlite3.c	/^  Parse *pParse;                            \/* Parser context.  *\/$/;"	m	struct:Walker	file:
pParse	drivers/SQLite/sqlite3/sqlite3.c	/^  Parse *pParse;              \/* The Parse structure *\/$/;"	m	struct:AuthContext	file:
pParse	drivers/SQLite/sqlite3/sqlite3.c	/^  Parse *pParse;           \/* The parser context *\/$/;"	m	struct:WhereClause	file:
pParse	drivers/SQLite/sqlite3/sqlite3.c	/^  Parse *pParse;       \/* Parsing and code generating context *\/$/;"	m	struct:WhereInfo	file:
pParse	drivers/SQLite/sqlite3/sqlite3.c	/^  Parse *pParse;       \/* The parser *\/$/;"	m	struct:NameContext	file:
pParse	drivers/SQLite/sqlite3/sqlite3.c	/^  Parse *pParse;      \/* The parsing context.  Error messages written here *\/$/;"	m	struct:DbFixer	file:
pPhrase	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Phrase *pPhrase;            \/* The phrase the token belongs to *\/$/;"	m	struct:Fts3TokenAndCost	file:
pPhrase	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Phrase *pPhrase;       \/* Valid if eType==FTSQUERY_PHRASE *\/$/;"	m	struct:Fts3Expr	file:
pPrev	drivers/SQLite/sqlite3/sqlite3.c	/^  BtCursor *pNext, *pPrev;  \/* Forms a linked list of all cursors *\/$/;"	m	struct:BtCursor	file:
pPrev	drivers/SQLite/sqlite3/sqlite3.c	/^  Btree *pPrev;      \/* Back pointer of the same list *\/$/;"	m	struct:Btree	file:
pPrev	drivers/SQLite/sqlite3/sqlite3.c	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe	file:
pPrev	drivers/SQLite/sqlite3/sqlite3.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::	file:
pPrev	drivers/SQLite/sqlite3/sqlite3.c	/^  unixInodeInfo *pPrev;           \/*    .... doubly linked *\/$/;"	m	struct:unixInodeInfo	file:
pPrevTo	drivers/SQLite/sqlite3/sqlite3.c	/^  FKey *pPrevTo;    \/* Previous foreign key on table named zTo *\/$/;"	m	struct:FKey	file:
pPrior	drivers/SQLite/sqlite3/sqlite3.c	/^  Select *pPrior;        \/* Prior select in a compound select statement *\/$/;"	m	struct:Select	file:
pProfileArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pProfileArg;                        \/* Argument to profile function *\/$/;"	m	struct:sqlite3	file:
pProgram	drivers/SQLite/sqlite3/sqlite3.c	/^    SubProgram *pProgram;  \/* Used when p4type is P4_SUBPROGRAM *\/$/;"	m	union:VdbeOp::__anon39	file:
pProgram	drivers/SQLite/sqlite3/sqlite3.c	/^  SubProgram *pProgram;   \/* Linked list of all sub-programs used by VM *\/$/;"	m	struct:Vdbe	file:
pProgram	drivers/SQLite/sqlite3/sqlite3.c	/^  SubProgram *pProgram;   \/* Program implementing pTrigger\/orconf *\/$/;"	m	struct:TriggerPrg	file:
pProgressArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pProgressArg;           \/* Argument to the progress callback *\/$/;"	m	struct:sqlite3	file:
pRead	drivers/SQLite/sqlite3/sqlite3.c	/^  char *pRead;                    \/* Cursor used to iterate through aDoclist *\/$/;"	m	struct:LcsIterator	file:
pReadNode	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *pReadNode;$/;"	m	struct:Rtree	file:
pReadParent	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *pReadParent;$/;"	m	struct:Rtree	file:
pReadRowid	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *pReadRowid;$/;"	m	struct:Rtree	file:
pReal	drivers/SQLite/sqlite3/sqlite3.c	/^    double *pReal;         \/* Used when p4type is P4_REAL *\/$/;"	m	union:VdbeOp::__anon39	file:
pReal	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_file *pReal;            \/* The "real" underlying file descriptor *\/$/;"	m	struct:JournalFile	file:
pRecord	drivers/SQLite/sqlite3/sqlite3.c	/^  SorterRecord *pRecord;          \/* Head of in-memory record list *\/$/;"	m	struct:VdbeSorter	file:
pReprepare	drivers/SQLite/sqlite3/sqlite3.c	/^  Vdbe *pReprepare;    \/* VM being reprepared (sqlite3Reprepare()) *\/$/;"	m	struct:Parse	file:
pResultSet	drivers/SQLite/sqlite3/sqlite3.c	/^  Mem *pResultSet;        \/* Pointer to an array of results *\/$/;"	m	struct:Vdbe	file:
pRight	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pRight;          \/* Right subnode *\/$/;"	m	struct:Expr	file:
pRight	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Expr *pRight;          \/* Right operand *\/$/;"	m	struct:Fts3Expr	file:
pRight	drivers/SQLite/sqlite3/sqlite3.c	/^  SegmentNode *pRight;            \/* Pointer to right-sibling *\/$/;"	m	struct:SegmentNode	file:
pRight	drivers/SQLite/sqlite3/sqlite3.c	/^  struct RowSetEntry *pRight;   \/* Right subtree (larger entries) or list *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pRight_	drivers/qt/TeQtTextEdit.h	/^	QPoint				pRight_;$/;"	m	class:TeQtTextEdit
pRightmost	drivers/SQLite/sqlite3/sqlite3.c	/^  Select *pRightmost;    \/* Right-most select in a compound select statement *\/$/;"	m	struct:Select	file:
pRollbackArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pRollbackArg;               \/* Argument to xRollbackCallback() *\/   $/;"	m	struct:sqlite3	file:
pRoot	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3Expr *pRoot;                \/* Root of NEAR\/AND cluster *\/$/;"	m	struct:Fts3TokenAndCost	file:
pRowSet	drivers/SQLite/sqlite3/sqlite3.c	/^    RowSet *pRowSet;    \/* Used only when flags==MEM_RowSet *\/$/;"	m	union:Mem::__anon49	file:
pSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^  Savepoint *pSavepoint;        \/* List of active savepoints *\/$/;"	m	struct:sqlite3	file:
pSchema	drivers/SQLite/sqlite3/sqlite3.c	/^  Schema *pSchema;        \/* Schema containing the trigger *\/$/;"	m	struct:Trigger	file:
pSchema	drivers/SQLite/sqlite3/sqlite3.c	/^  Schema *pSchema;     \/* Pointer to database schema (possibly shared) *\/$/;"	m	struct:Db	file:
pSchema	drivers/SQLite/sqlite3/sqlite3.c	/^  Schema *pSchema;     \/* Schema that contains this table *\/$/;"	m	struct:Table	file:
pSchema	drivers/SQLite/sqlite3/sqlite3.c	/^  Schema *pSchema; \/* Schema containing this index *\/$/;"	m	struct:Index	file:
pSchema	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pSchema;        \/* Pointer to space allocated by sqlite3BtreeSchema() *\/$/;"	m	struct:BtShared	file:
pScopyFrom	drivers/SQLite/sqlite3/sqlite3.c	/^  Mem *pScopyFrom;    \/* This Mem is a shallow copy of pScopyFrom *\/$/;"	m	struct:Mem	file:
pScratch	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pScratch;                   \/* Scratch memory *\/$/;"	m	struct:Sqlite3Config	file:
pScratchEnd	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pScratchEnd;$/;"	m	struct:Mem0Global	file:
pScratchFree	drivers/SQLite/sqlite3/sqlite3.c	/^  ScratchFreeslot *pScratchFree;$/;"	m	struct:Mem0Global	file:
pSegcsr	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3MultiSegReader *pSegcsr;    \/* Segment-reader for this token *\/$/;"	m	struct:Fts3PhraseToken	file:
pSegments	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_blob *pSegments;        \/* Blob handle open on %_segments table *\/$/;"	m	struct:Fts3Table	file:
pSelect	drivers/SQLite/sqlite3/sqlite3.c	/^    Select *pSelect;     \/* Used for sub-selects and "<expr> IN (<select>)" *\/$/;"	m	union:Expr::__anon43	file:
pSelect	drivers/SQLite/sqlite3/sqlite3.c	/^    Select *pSelect;  \/* A SELECT statement used in place of a table name *\/$/;"	m	struct:SrcList::SrcList_item	file:
pSelect	drivers/SQLite/sqlite3/sqlite3.c	/^  Select *pSelect;     \/* NULL for tables.  Points to definition if a view. *\/$/;"	m	struct:Table	file:
pSelect	drivers/SQLite/sqlite3/sqlite3.c	/^  Select *pSelect;     \/* SELECT statment or RHS of INSERT INTO .. SELECT ... *\/$/;"	m	struct:TriggerStep	file:
pSem	drivers/SQLite/sqlite3/sqlite3.c	/^  sem_t *pSem;                    \/* Named POSIX semaphore *\/$/;"	m	struct:unixInodeInfo	file:
pSeqTab	drivers/SQLite/sqlite3/sqlite3.c	/^  Table *pSeqTab;      \/* The sqlite_sequence table used by AUTOINCREMENT *\/$/;"	m	struct:Schema	file:
pShm	drivers/SQLite/sqlite3/sqlite3.c	/^  unixShm *pShm;                      \/* Shared memory segment information *\/$/;"	m	struct:unixFile	file:
pShm	drivers/SQLite/sqlite3/sqlite3.c	/^  winShm *pShm;           \/* Instance of shared memory on this file *\/$/;"	m	struct:winFile	file:
pShmLink	drivers/SQLite/sqlite3/sqlite3.c	/^  os2ShmLink *pShmLink;     \/* Instance of shared memory on this file *\/$/;"	m	struct:os2File	file:
pShmNode	drivers/SQLite/sqlite3/sqlite3.c	/^  os2ShmNode *pShmNode;      \/* The underlying os2ShmNode object *\/$/;"	m	struct:os2ShmLink	file:
pShmNode	drivers/SQLite/sqlite3/sqlite3.c	/^  unixShmNode *pShmNode;          \/* Shared memory associated with this inode *\/$/;"	m	struct:unixInodeInfo	file:
pShmNode	drivers/SQLite/sqlite3/sqlite3.c	/^  unixShmNode *pShmNode;     \/* The underlying unixShmNode object *\/$/;"	m	struct:unixShm	file:
pShmNode	drivers/SQLite/sqlite3/sqlite3.c	/^  winShmNode *pShmNode;      \/* The underlying winShmNode object *\/$/;"	m	struct:winShm	file:
pSorter	drivers/SQLite/sqlite3/sqlite3.c	/^  VdbeSorter *pSorter;  \/* Sorter object for OP_SorterOpen cursors *\/$/;"	m	struct:VdbeCursor	file:
pSrc	drivers/SQLite/sqlite3/sqlite3.c	/^  Btree *pSrc;             \/* Source b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pSrc	drivers/SQLite/sqlite3/sqlite3.c	/^  SrcList *pSrc;         \/* The FROM clause *\/$/;"	m	struct:Select	file:
pSrcDb	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3* pSrcDb;         \/* Source database handle *\/$/;"	m	struct:sqlite3_backup	file:
pSrcList	drivers/SQLite/sqlite3/sqlite3.c	/^  SrcList *pSrcList;   \/* One or more tables used to resolve names *\/$/;"	m	struct:NameContext	file:
pStart	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pStart, *pEnd;           \/* Bounds of pagecache malloc range *\/$/;"	m	struct:PCacheGlobal	file:
pStart	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pStart;           \/* First byte of available memory space *\/$/;"	m	struct:Lookaside	file:
pStmt	drivers/SQLite/sqlite3/shell.c	/^  sqlite3_stmt *pStmt;   \/* Current statement if any. *\/$/;"	m	struct:callback_data	file:
pStmt	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Prepared statement in use by the cursor *\/$/;"	m	struct:Fts3Cursor	file:
pStmt	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *pStmt;    \/* Statement holding cursor open *\/$/;"	m	struct:Incrblob	file:
pStress	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pStress;                      \/* Argument to xStress *\/$/;"	m	struct:PCache	file:
pSynced	drivers/SQLite/sqlite3/sqlite3.c	/^  PgHdr *pSynced;                     \/* Last synced page in dirty page list *\/$/;"	m	struct:PCache	file:
pTab	drivers/SQLite/sqlite3/sqlite3.c	/^    Table *pTab;             \/* Source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
pTab	drivers/SQLite/sqlite3/sqlite3.c	/^    Table *pTab;      \/* An SQL table corresponding to zName *\/$/;"	m	struct:SrcList::SrcList_item	file:
pTab	drivers/SQLite/sqlite3/sqlite3.c	/^  Table *pTab;           \/* Table for TK_COLUMN expressions. *\/$/;"	m	struct:Expr	file:
pTab	drivers/SQLite/sqlite3/sqlite3.c	/^  Table *pTab;          \/* Table this info block refers to *\/$/;"	m	struct:AutoincInfo	file:
pTab	drivers/SQLite/sqlite3/sqlite3.c	/^  Table *pTab;$/;"	m	struct:VtabCtx	file:
pTabList	drivers/SQLite/sqlite3/sqlite3.c	/^  SrcList *pTabList;             \/* List of tables in the join *\/$/;"	m	struct:WhereInfo	file:
pTabSchema	drivers/SQLite/sqlite3/sqlite3.c	/^  Schema *pTabSchema;     \/* Schema containing the table *\/$/;"	m	struct:Trigger	file:
pTable	drivers/SQLite/sqlite3/sqlite3.c	/^  Table *pTable;   \/* The SQL table being indexed *\/$/;"	m	struct:Index	file:
pTail	drivers/SQLite/sqlite3/sqlite3.c	/^  char *pTail;                    \/* Position list data following iTail *\/$/;"	m	struct:SnippetPhrase	file:
pTargetData	drivers/libjpeg/jmemdstsrc.h	/^  JOCTET **pTargetData;				\/* memory buffer for jpeg output *\/$/;"	m	struct:__anon36
pTemp1	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_file *pTemp1;           \/* PMA file 1 *\/$/;"	m	struct:VdbeSorter	file:
pTerm	drivers/SQLite/sqlite3/sqlite3.c	/^    struct WhereTerm *pTerm;       \/* WHERE clause term for OR-search *\/$/;"	m	union:WherePlan::__anon44	typeref:struct:WherePlan::__anon44::WhereTerm	file:
pTmpSpace	drivers/SQLite/sqlite3/sqlite3.c	/^  char *pTmpSpace;            \/* Pager.pageSize bytes of space for tmp use *\/$/;"	m	struct:Pager	file:
pTmpSpace	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 *pTmpSpace;        \/* BtShared.pageSize bytes of space for tmp use *\/$/;"	m	struct:BtShared	file:
pToken	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3PhraseToken *pToken;        \/* Pointer to corresponding expr token *\/$/;"	m	struct:Fts3DeferredToken	file:
pToken	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3PhraseToken *pToken;        \/* The token itself *\/$/;"	m	struct:Fts3TokenAndCost	file:
pToken	drivers/SQLite/sqlite3/sqlite3.c	/^  char *pToken;                \/* storage for current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pTokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;       \/* Tokenizer for this cursor. *\/$/;"	m	struct:sqlite3_tokenizer_cursor	file:
pTokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;      \/* Tokenizer module *\/$/;"	m	struct:ParseContext	file:
pTokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;  \/* tokenizer for inserts and queries *\/$/;"	m	struct:Fts3Table	file:
pTop_	drivers/qt/TeQtTextEdit.h	/^	QPoint				pTop_;$/;"	m	class:TeQtTextEdit
pToplevel	drivers/SQLite/sqlite3/sqlite3.c	/^  Parse *pToplevel;    \/* Parse structure for main program (or NULL) *\/$/;"	m	struct:Parse	file:
pTraceArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pTraceArg;                          \/* Argument to the trace function *\/$/;"	m	struct:sqlite3	file:
pTree	drivers/SQLite/sqlite3/sqlite3.c	/^  SegmentNode *pTree;             \/* Pointer to interior tree structure *\/$/;"	m	struct:SegmentWriter	file:
pTree	drivers/SQLite/sqlite3/sqlite3.c	/^  struct RowSetEntry *pTree;     \/* Binary tree of entries *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pTrig	drivers/SQLite/sqlite3/sqlite3.c	/^  Trigger *pTrig;      \/* The trigger that this step is a part of *\/$/;"	m	struct:TriggerStep	file:
pTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^  Trigger *pTrigger;      \/* Trigger this program was coded from *\/$/;"	m	struct:TriggerPrg	file:
pTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^  Trigger *pTrigger;   \/* List of triggers stored in pSchema *\/$/;"	m	struct:Table	file:
pTrigger	drivers/SQLite/sqlite3/sqlite3.c	84179;"	d	file:
pTrigger	drivers/SQLite/sqlite3/sqlite3.c	88257;"	d	file:
pTrigger	drivers/SQLite/sqlite3/sqlite3.c	99187;"	d	file:
pTriggerPrg	drivers/SQLite/sqlite3/sqlite3.c	/^  TriggerPrg *pTriggerPrg;    \/* Linked list of coded triggers *\/$/;"	m	struct:Parse	file:
pTriggerTab	drivers/SQLite/sqlite3/sqlite3.c	/^  Table *pTriggerTab;  \/* Table triggers are being coded for *\/$/;"	m	struct:Parse	file:
pUnlockArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pUnlockArg;                     \/* Argument to xUnlockNotify *\/$/;"	m	struct:sqlite3	file:
pUnlockConnection	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3 *pUnlockConnection;           \/* Connection to watch for unlock *\/$/;"	m	struct:sqlite3	file:
pUnpacked	drivers/SQLite/sqlite3/sqlite3.c	/^  UnpackedRecord *pUnpacked;      \/* Used to unpack keys *\/$/;"	m	struct:VdbeSorter	file:
pUnused	drivers/SQLite/sqlite3/sqlite3.c	/^  UnixUnusedFd *pUnused;              \/* Pre-allocated UnixUnusedFd *\/$/;"	m	struct:unixFile	file:
pUnused	drivers/SQLite/sqlite3/sqlite3.c	/^  UnixUnusedFd *pUnused;          \/* Unused file descriptors to close *\/$/;"	m	struct:unixInodeInfo	file:
pUpdateArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pUpdateArg;$/;"	m	struct:sqlite3	file:
pUser	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
pUser	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pUser;          \/* First argument to xCmp() *\/$/;"	m	struct:CollSeq	file:
pUser	drivers/SQLite/sqlite3/sqlite3.h	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry
pUserData	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pUserData;     \/* User data parameter *\/$/;"	m	struct:FuncDef	file:
pUserData	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pUserData;$/;"	m	struct:FuncDestructor	file:
pUsing	drivers/SQLite/sqlite3/sqlite3.c	/^    IdList *pUsing;   \/* The USING clause of a join *\/$/;"	m	struct:SrcList::SrcList_item	file:
pVTable	drivers/SQLite/sqlite3/sqlite3.c	/^  VTable *pVTable;     \/* List of VTable objects. *\/$/;"	m	struct:Table	file:
pVTable	drivers/SQLite/sqlite3/sqlite3.c	/^  VTable *pVTable;$/;"	m	struct:VtabCtx	file:
pVal	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pVal;$/;"	m	struct:SorterRecord	file:
pVdbe	drivers/SQLite/sqlite3/sqlite3.c	/^  Vdbe *pVdbe;         \/* An engine for executing database bytecode *\/$/;"	m	struct:Parse	file:
pVdbe	drivers/SQLite/sqlite3/sqlite3.c	/^  struct Vdbe *pVdbe;           \/* List of active virtual machines *\/$/;"	m	struct:sqlite3	typeref:struct:sqlite3::Vdbe	file:
pVdbeFunc	drivers/SQLite/sqlite3/sqlite3.c	/^    VdbeFunc *pVdbeFunc;   \/* Used when p4type is P4_VDBEFUNC *\/$/;"	m	union:VdbeOp::__anon39	file:
pVdbeFunc	drivers/SQLite/sqlite3/sqlite3.c	/^  VdbeFunc *pVdbeFunc;  \/* Auxilary data, if created. *\/$/;"	m	struct:sqlite3_context	file:
pVfs	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vfs *pVfs;              \/* The "real" underlying VFS *\/$/;"	m	struct:JournalFile	file:
pVfs	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vfs *pVfs;            \/* OS Interface *\/$/;"	m	struct:sqlite3	file:
pVfs	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vfs *pVfs;          \/* OS functions to use for IO *\/$/;"	m	struct:Pager	file:
pVfs	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vfs *pVfs;         \/* The VFS used to create pDbFd *\/$/;"	m	struct:Wal	file:
pVfs	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vfs *pVfs;      \/* The VFS used to open this file *\/$/;"	m	struct:winFile	file:
pVtab	drivers/SQLite/sqlite3/sqlite3.c	/^    VTable *pVtab;         \/* Used when p4type is P4_VTAB *\/$/;"	m	union:VdbeOp::__anon39	file:
pVtab	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vtab *pVtab;      \/* Pointer to vtab instance *\/$/;"	m	struct:VTable	file:
pVtab	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor	file:
pVtab	drivers/SQLite/sqlite3/sqlite3.h	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor
pVtabCtx	drivers/SQLite/sqlite3/sqlite3.c	/^  VtabCtx *pVtabCtx;            \/* Context for active vtab connect\/create *\/$/;"	m	struct:sqlite3	file:
pVtabCursor	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vtab_cursor *pVtabCursor;  \/* The cursor for a virtual table *\/$/;"	m	struct:VdbeCursor	file:
pVtabIdx	drivers/SQLite/sqlite3/sqlite3.c	/^    sqlite3_index_info *pVtabIdx;  \/* Virtual table index to use *\/$/;"	m	union:WherePlan::__anon44	file:
pWC	drivers/SQLite/sqlite3/sqlite3.c	/^  WhereClause *pWC;       \/* The clause this term is part of *\/$/;"	m	struct:WhereTerm	file:
pWC	drivers/SQLite/sqlite3/sqlite3.c	/^  struct WhereClause *pWC;       \/* Decomposition of the WHERE clause *\/$/;"	m	struct:WhereInfo	typeref:struct:WhereInfo::WhereClause	file:
pWal	drivers/SQLite/sqlite3/sqlite3.c	/^  Wal *pWal;                  \/* Write-ahead log used by "journal_mode=wal" *\/$/;"	m	struct:Pager	file:
pWalArg	drivers/SQLite/sqlite3/sqlite3.c	/^  void *pWalArg;$/;"	m	struct:sqlite3	file:
pWalFd	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_file *pWalFd;      \/* File handle for WAL file *\/$/;"	m	struct:Wal	file:
pWhen	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pWhen;            \/* The WHEN clause of the expression (may be NULL) *\/$/;"	m	struct:Trigger	file:
pWhere	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pWhere;          \/* The WHERE clause *\/$/;"	m	struct:Select	file:
pWhere	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr *pWhere;        \/* The WHERE clause for DELETE or UPDATE steps *\/$/;"	m	struct:TriggerStep	file:
pWriteNode	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *pWriteNode;$/;"	m	struct:Rtree	file:
pWriteParent	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *pWriteParent;$/;"	m	struct:Rtree	file:
pWriteRowid	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_stmt *pWriteRowid;$/;"	m	struct:Rtree	file:
pWriter	drivers/SQLite/sqlite3/sqlite3.c	/^  Btree *pWriter;       \/* Btree with currently open write transaction *\/$/;"	m	struct:BtShared	file:
pZombieTab	drivers/SQLite/sqlite3/sqlite3.c	/^  Table *pZombieTab;      \/* List of Table objects to delete after code gen *\/$/;"	m	struct:Parse	file:
p_	drivers/qt/TeQtColorBar.h	/^	QPoint	p_;$/;"	m	class:TeQtColorBar
p_	drivers/qt/TeQtFrame.h	/^    QPoint	p_;$/;"	m	class:TeQtFrame
p_	drivers/qwt/TeQwtPlotPicker.h	/^    QPoint p_;$/;"	m	class:TeQwtPlotPicker
pa_	drivers/qt/TeQtColorBar.h	/^	QPoint	pa_;$/;"	m	class:TeQtColorBar
pad	drivers/GL/glx.h	/^    long pad[24];$/;"	m	union:__GLXEvent
pad	drivers/GL/glxproto.h	/^    BYTE pad;$/;"	m	struct:__anon127
pad1	drivers/GL/glxproto.h	/^    CARD8	pad1;$/;"	m	struct:__anon109
pageCache_	kernel/TeDecoderVirtualMemory.h	/^	vector<TeMemoryPage*> pageCache_;$/;"	m	class:TeDecoderVirtualMemory
pageHash	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 pageHash;                  \/* Hash of page content *\/$/;"	m	struct:PgHdr	file:
pageInJournal	drivers/SQLite/sqlite3/sqlite3.c	/^static int pageInJournal(PgHdr *pPg){$/;"	f	file:
pageReinit	drivers/SQLite/sqlite3/sqlite3.c	/^static void pageReinit(DbPage *pData){$/;"	f	file:
pageSize	drivers/SQLite/sqlite3/sqlite3.c	/^  int pageSize;               \/* Number of bytes in a page *\/$/;"	m	struct:Pager	file:
pageSize	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 pageSize;         \/* Total number of bytes on a page *\/$/;"	m	struct:BtShared	file:
pageSize	kernel/TeDecoderVirtualMemory.cpp	/^TeMemoryPage::pageSize()$/;"	f	class:TeMemoryPage
pageSizeFixed	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 pageSizeFixed;     \/* True if the page size can no longer be changed *\/$/;"	m	struct:BtShared	file:
pagerBeginReadTransaction	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerBeginReadTransaction(Pager *pPager){$/;"	f	file:
pagerBeginReadTransaction	drivers/SQLite/sqlite3/sqlite3.c	38114;"	d	file:
pagerExclusiveLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerExclusiveLock(Pager *pPager){$/;"	f	file:
pagerLockDb	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerLockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerOpenWal	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerOpenWal(Pager *pPager){$/;"	f	file:
pagerOpenWalIfPresent	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerOpenWalIfPresent(Pager *pPager){$/;"	f	file:
pagerOpenWalIfPresent	drivers/SQLite/sqlite3/sqlite3.c	38113;"	d	file:
pagerOpentemp	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerOpentemp($/;"	f	file:
pagerPagecount	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerPagecount(Pager *pPager, Pgno *pnPage){$/;"	f	file:
pagerPlaybackSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerPlaybackSavepoint(Pager *pPager, PagerSavepoint *pSavepoint){$/;"	f	file:
pagerReportSize	drivers/SQLite/sqlite3/sqlite3.c	/^static void pagerReportSize(Pager *pPager){$/;"	f	file:
pagerReportSize	drivers/SQLite/sqlite3/sqlite3.c	39379;"	d	file:
pagerRollbackWal	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerRollbackWal(Pager *pPager){$/;"	f	file:
pagerRollbackWal	drivers/SQLite/sqlite3/sqlite3.c	38111;"	d	file:
pagerStress	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerStress(void *p, PgHdr *pPg){$/;"	f	file:
pagerSyncHotJournal	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerSyncHotJournal(Pager *pPager){$/;"	f	file:
pagerUndoCallback	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerUndoCallback(void *pCtx, Pgno iPg){$/;"	f	file:
pagerUnlockAndRollback	drivers/SQLite/sqlite3/sqlite3.c	/^static void pagerUnlockAndRollback(Pager *pPager){$/;"	f	file:
pagerUnlockDb	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerUnlockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerUnlockIfUnused	drivers/SQLite/sqlite3/sqlite3.c	/^static void pagerUnlockIfUnused(Pager *pPager){$/;"	f	file:
pagerUseWal	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerUseWal(Pager *pPager){$/;"	f	file:
pagerUseWal	drivers/SQLite/sqlite3/sqlite3.c	38110;"	d	file:
pagerWalFrames	drivers/SQLite/sqlite3/sqlite3.c	/^static int pagerWalFrames($/;"	f	file:
pagerWalFrames	drivers/SQLite/sqlite3/sqlite3.c	38112;"	d	file:
pager_cksum	drivers/SQLite/sqlite3/sqlite3.c	/^static u32 pager_cksum(Pager *pPager, const u8 *aData){$/;"	f	file:
pager_datahash	drivers/SQLite/sqlite3/sqlite3.c	/^static u32 pager_datahash(int nByte, unsigned char *pData){$/;"	f	file:
pager_datahash	drivers/SQLite/sqlite3/sqlite3.c	38495;"	d	file:
pager_delmaster	drivers/SQLite/sqlite3/sqlite3.c	/^static int pager_delmaster(Pager *pPager, const char *zMaster){$/;"	f	file:
pager_end_transaction	drivers/SQLite/sqlite3/sqlite3.c	/^static int pager_end_transaction(Pager *pPager, int hasMaster){$/;"	f	file:
pager_error	drivers/SQLite/sqlite3/sqlite3.c	/^static int pager_error(Pager *pPager, int rc){$/;"	f	file:
pager_incr_changecounter	drivers/SQLite/sqlite3/sqlite3.c	/^static int pager_incr_changecounter(Pager *pPager, int isDirectMode){$/;"	f	file:
pager_lookup	drivers/SQLite/sqlite3/sqlite3.c	/^static PgHdr *pager_lookup(Pager *pPager, Pgno pgno){$/;"	f	file:
pager_open_journal	drivers/SQLite/sqlite3/sqlite3.c	/^static int pager_open_journal(Pager *pPager){$/;"	f	file:
pager_pagehash	drivers/SQLite/sqlite3/sqlite3.c	/^static u32 pager_pagehash(PgHdr *pPage){$/;"	f	file:
pager_pagehash	drivers/SQLite/sqlite3/sqlite3.c	38496;"	d	file:
pager_playback	drivers/SQLite/sqlite3/sqlite3.c	/^static int pager_playback(Pager *pPager, int isHot){$/;"	f	file:
pager_playback_one_page	drivers/SQLite/sqlite3/sqlite3.c	/^static int pager_playback_one_page($/;"	f	file:
pager_reset	drivers/SQLite/sqlite3/sqlite3.c	/^static void pager_reset(Pager *pPager){$/;"	f	file:
pager_set_pagehash	drivers/SQLite/sqlite3/sqlite3.c	/^static void pager_set_pagehash(PgHdr *pPage){$/;"	f	file:
pager_set_pagehash	drivers/SQLite/sqlite3/sqlite3.c	38497;"	d	file:
pager_truncate	drivers/SQLite/sqlite3/sqlite3.c	/^static int pager_truncate(Pager *pPager, Pgno nPage){$/;"	f	file:
pager_unlock	drivers/SQLite/sqlite3/sqlite3.c	/^static void pager_unlock(Pager *pPager){$/;"	f	file:
pager_wait_on_lock	drivers/SQLite/sqlite3/sqlite3.c	/^static int pager_wait_on_lock(Pager *pPager, int locktype){$/;"	f	file:
pager_write	drivers/SQLite/sqlite3/sqlite3.c	/^static int pager_write(PgHdr *pPg){$/;"	f	file:
pager_write_changecounter	drivers/SQLite/sqlite3/sqlite3.c	/^static void pager_write_changecounter(PgHdr *pPg){$/;"	f	file:
pager_write_pagelist	drivers/SQLite/sqlite3/sqlite3.c	/^static int pager_write_pagelist(Pager *pPager, PgHdr *pList){$/;"	f	file:
pagesQueue_	kernel/TeDecoderVirtualMemory.h	/^	queue<TeBlockIndex> pagesQueue_; $/;"	m	class:TeDecoderVirtualMemory
paint	drivers/qt/TeQtGrid.cpp	/^void TeQtGridItem::paint(QPainter* p, const QColorGroup& cg,$/;"	f	class:TeQtGridItem
paint2D	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::paint2D()$/;"	f	class:TeQtGLWidget
paint3D	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::paint3D()$/;"	f	class:TeQtGLWidget
paintCell	drivers/qt/TeQtBigTable.cpp	/^void TeQtBigTable::paintCell(QPainter *painter, int row, int col,$/;"	f	class:TeQtBigTable
paintCell	drivers/qt/TeQtCheckListItem.h	/^	virtual void paintCell(QPainter* p, const QColorGroup& cg, int column, int width, int align)$/;"	f	class:TeQtCheckListItem
paintCell	drivers/qt/TeQtLegendItem.cpp	/^void TeQtLegendItem::paintCell(QPainter* p, const QColorGroup& \/* cg *\/, int \/* column *\/, int width , int align)$/;"	f	class:TeQtLegendItem
paintEvent	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::paintEvent(QPaintEvent*)$/;"	f	class:TeQtColorBar
paintEvent	drivers/qt/TeQtFrame.cpp	/^void TeQtFrame::paintEvent(QPaintEvent*)$/;"	f	class:TeQtFrame
paintGL	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::paintGL()$/;"	f	class:TeQtGLWidget
painter_	drivers/qt/TeQtCanvas.h	/^	QPainter	painter_;$/;"	m	class:TeQtCanvas
painter_	drivers/qt/TeQtGraph.h	/^	QPainter	painter_;$/;"	m	class:TeQtGraphPlot
painter_	drivers/qwt/TeQwtPlotPicker.h	/^	QPainter painter_;$/;"	m	class:TeQwtPlotPicker
pairs	kernel/TeCoverageDecoder.h	/^    std::vector<TeGeomValuePair<T> > pairs; \/\/!< vector of geometry-value pairs$/;"	m	struct:TeCoverageBlock
paramdsc	drivers/Firebird/ibpp/core/ibase.h	/^typedef struct paramdsc {$/;"	s
paramhp	drivers/Oracle/OCI/include/occiControl.h	/^  const OCIParam* paramhp;$/;"	m	class:oracle::occi::MetaData
params	kernel/TeDecoder.cpp	/^TeRasterParams& TeDecoder::params()$/;"	f	class:TeDecoder
params	kernel/TeProjection.cpp	/^TeProjection::params () const$/;"	f	class:TeProjection
params	kernel/TeProjection.cpp	/^TeSatelliteProjection::params () const$/;"	f	class:TeSatelliteProjection
params	kernel/TeQuerier.cpp	/^TeQuerier::params() $/;"	f	class:TeQuerier
params	kernel/TeQuerierImpl.h	/^	TeQuerierParams* params() { return params_; }$/;"	f	class:TeQuerierImpl
params	kernel/TeRaster.h	/^inline TeRasterParams& TeRaster::params()$/;"	f	class:TeRaster
params	kernel/TeRaster.h	/^inline const TeRasterParams& TeRaster::params() const$/;"	f	class:TeRaster
params_	drivers/qt/TeQtCanvas.h	/^	TeRasterParams	params_;$/;"	m	class:TeQtCanvas
params_	dtm/TeDTMAlgorithm.h	/^      mutable TeDTMParameters params_;$/;"	m	class:TeDTMAlgorithm
params_	image_processing/TePDIAlgorithm.hpp	/^      mutable TePDIParameters params_;$/;"	m	class:TePDIAlgorithm
params_	image_processing/TePDIParaSegStrategy.hpp	/^      TePDIParaSegStrategyParams params_;$/;"	m	class:TePDIParaSegStrategy
params_	kernel/TeBlockLoader.h	/^    TeBlockLoaderParams params_;$/;"	m	class:TeBlockLoader
params_	kernel/TeConnectionPool.h	/^    TeDatabaseFactoryParams params_;		 \/\/!< Connection details to create new connections. (Set on initialization)$/;"	m	class:TeConnectionPool
params_	kernel/TeCoverage.h	/^    TeCoverageParams& params_; \/\/!< stores information about this coverage$/;"	m	class:TeCoverage
params_	kernel/TeCoverageDecoder.h	/^    TeCoverageParams& params_;  \/\/!< Coverage parameters.$/;"	m	class:TeCoverageDecoder
params_	kernel/TeDecoder.h	/^	TeRasterParams  params_;	$/;"	m	class:TeDecoder
params_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeProxMatrixConstructionParams  params_;$/;"	m	class:TeProxMatrixConstructionStrategy
params_	kernel/TeProxMatrixSlicingStrategy.h	/^	TeProxMatrixSlicingParams params_; $/;"	m	class:TeProxMatrixSlicingStrategy
params_	kernel/TeProxMatrixWeightsStrategy.h	/^	TeProxMatrixWeightsParams params_; $/;"	m	class:TeProxMatrixWeightsStrategy
params_	kernel/TeQuerierImpl.h	/^	TeQuerierParams*				params_;$/;"	m	class:TeQuerierImpl
params_	kernel/TeRaster.h	/^	TeRasterParams  params_;	\/\/!< structure that describes all information about a raster $/;"	m	class:TeRaster
params_	kernel/TeVisual.h	/^	TeBaseVisualParams	params_;$/;"	m	class:TeVisual
paramvary	drivers/Firebird/ibpp/core/ibase.h	/^typedef struct paramvary {$/;"	s
parent	kernel/TeViewNode.h	/^	virtual TeViewNode* parent()$/;"	f	class:TeViewNode
parentId	kernel/TeViewNode.h	/^	virtual int parentId()$/;"	f	class:TeViewNode
parentId	kernel/TeViewNode.h	/^	virtual void parentId(int i) $/;"	f	class:TeViewNode
parentWrite	drivers/SQLite/sqlite3/sqlite3.c	/^static int parentWrite(Rtree *pRtree, sqlite3_int64 iNode, sqlite3_int64 iPar){$/;"	f	file:
parent_	kernel/TeRedBlackTree.h	/^			TeRedBlackNode* parent_;$/;"	m	class:TeREDBLACK::TeRedBlackNode
parent_	stat/TeStatDataStructures.h	/^	TeRaster* parent_;$/;"	m	class:TeGridElement
parseCell	drivers/SQLite/sqlite3/sqlite3.c	49041;"	d	file:
parseDateOrTime	drivers/SQLite/sqlite3/sqlite3.c	/^static int parseDateOrTime($/;"	f	file:
parseError	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 parseError;       \/* True after a parsing error.  Ticket #1794 *\/$/;"	m	struct:Parse	file:
parseHhMmSs	drivers/SQLite/sqlite3/sqlite3.c	/^static int parseHhMmSs(const char *zDate, DateTime *p){$/;"	f	file:
parseModifier	drivers/SQLite/sqlite3/sqlite3.c	/^static int parseModifier(sqlite3_context *pCtx, const char *zMod, DateTime *p){$/;"	f	file:
parseTimezone	drivers/SQLite/sqlite3/sqlite3.c	/^static int parseTimezone(const char *zDate, DateTime *p){$/;"	f	file:
parseYyyyMmDd	drivers/SQLite/sqlite3/sqlite3.c	/^static int parseYyyyMmDd(const char *zDate, DateTime *p){$/;"	f	file:
parse_hex	drivers/PostgreSQL/TePGInterface.cpp	/^inline unsigned char parse_hex(char *str)$/;"	f
partNum_	kernel/TeIntersector.cpp	/^	unsigned int partNum_;$/;"	m	struct:TeIntersectionIndexKey	file:
participationType	drivers/GL/glxext.h	/^      participationType;$/;"	m	struct:__anon95
partition_	kernel/TeRTree.h	/^			int partition_[MAXNODES + 1];	\/\/!< Auxiliary partition vector.$/;"	m	struct:TeSAM::TeRTree::TePartitionVars
password	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR *password;				\/* the user's password *\/$/;"	m	struct:__anon65
password	drivers/Firebird/ibpp/core/ibpp.h	/^		std::string password;$/;"	m	class:IBPP::User
password	kernel/TeDatabase.h	/^	string	password () $/;"	f	class:TeDatabase
password_	kernel/TeConnection.h	/^	std::string	password_;				\/\/!< User password$/;"	m	class:TeConnection
password_	kernel/TeDatabase.h	/^        std::string				password_;				\/\/!< user password$/;"	m	class:TeDatabase
password_	kernel/TeDatabaseFactoryParams.h	/^      std::string password_;	\/\/!< User password.$/;"	m	class:TeDatabaseFactoryParams
patch	drivers/GL/dri_interface.h	/^    int    patch;        \/**< Patch-level. *\/$/;"	m	struct:__DRIversionRec
patch	drivers/GL/internal/dri_interface.h	/^    int    patch;        \/**< Patch-level. *\/$/;"	m	struct:__DRIversionRec
pattern	kernel/TeGraph.cpp	/^ 	unsigned char pattern;      \/* color of pattern in outermost window *\/$/;"	m	struct:Txtc	file:
patternCompare	drivers/SQLite/sqlite3/sqlite3.c	/^static int patternCompare($/;"	f	file:
pause	drivers/qt/TeQtAnimaThread.h	/^	bool pause() {return pause_;}$/;"	f	class:TeQtAnimaThread
pause	drivers/qt/TeQtAnimaThread.h	/^	void pause(bool b) {pause_ = b;}$/;"	f	class:TeQtAnimaThread
pauseButton_clicked	drivers/qt/ui/animation.ui.h	/^void Animation::pauseButton_clicked()$/;"	f	class:Animation
pauseFrame	drivers/qt/TeQtAnimaThread.h	/^	int pauseFrame(int pf) {return pauseFrame_ = pf;}$/;"	f	class:TeQtAnimaThread
pauseFrame_	drivers/qt/TeQtAnimaThread.h	/^	int			pauseFrame_;$/;"	m	class:TeQtAnimaThread
pause_	drivers/qt/TeQtAnimaThread.h	/^	bool		pause_;$/;"	m	class:TeQtAnimaThread
payload	drivers/Oracle/OCI/include/occiAQ.h	/^     void *payload;$/;"	m	class:oracle::occi::aq::NotifyResult
payloadLen	drivers/Oracle/OCI/include/occiAQ.h	/^     unsigned int payloadLen;$/;"	m	class:oracle::occi::aq::NotifyResult
payloadSize	drivers/SQLite/sqlite3/sqlite3.c	/^  int payloadSize;      \/* Total number of bytes in the record *\/$/;"	m	struct:VdbeCursor	file:
pb	image_processing/TePDIHants.cpp	/^  fftw_plan pf, pb; \/\/ forward (fft),  backward (ifft)$/;"	v
pc	drivers/SQLite/sqlite3/sqlite3.c	/^  int pc;                 \/* Program Counter in parent (calling) frame *\/$/;"	m	struct:VdbeFrame	file:
pc	drivers/SQLite/sqlite3/sqlite3.c	/^  int pc;                 \/* The program counter *\/$/;"	m	struct:Vdbe	file:
pcache	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_pcache_methods pcache;    \/* Low-level page-cache interface *\/$/;"	m	struct:Sqlite3Config	file:
pcache1	drivers/SQLite/sqlite3/sqlite3.c	35945;"	d	file:
pcache1Alloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *pcache1Alloc(int nByte){$/;"	f	file:
pcache1AllocPage	drivers/SQLite/sqlite3/sqlite3.c	/^static PgHdr1 *pcache1AllocPage(PCache1 *pCache){$/;"	f	file:
pcache1Cachesize	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcache1Cachesize(sqlite3_pcache *p, int nMax){$/;"	f	file:
pcache1Create	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3_pcache *pcache1Create(int szPage, int bPurgeable){$/;"	f	file:
pcache1Destroy	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcache1Destroy(sqlite3_pcache *p){$/;"	f	file:
pcache1EnforceMaxPage	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcache1EnforceMaxPage(PGroup *pGroup){$/;"	f	file:
pcache1EnterMutex	drivers/SQLite/sqlite3/sqlite3.c	35965;"	d	file:
pcache1Fetch	drivers/SQLite/sqlite3/sqlite3.c	/^static void *pcache1Fetch(sqlite3_pcache *p, unsigned int iKey, int createFlag){$/;"	f	file:
pcache1Free	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcache1Free(void *p){$/;"	f	file:
pcache1FreePage	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcache1FreePage(PgHdr1 *p){$/;"	f	file:
pcache1Init	drivers/SQLite/sqlite3/sqlite3.c	/^static int pcache1Init(void *NotUsed){$/;"	f	file:
pcache1LeaveMutex	drivers/SQLite/sqlite3/sqlite3.c	35966;"	d	file:
pcache1MemSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int pcache1MemSize(void *p){$/;"	f	file:
pcache1Pagecount	drivers/SQLite/sqlite3/sqlite3.c	/^static int pcache1Pagecount(sqlite3_pcache *p){$/;"	f	file:
pcache1PinPage	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcache1PinPage(PgHdr1 *pPage){$/;"	f	file:
pcache1Rekey	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcache1Rekey($/;"	f	file:
pcache1RemoveFromHash	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcache1RemoveFromHash(PgHdr1 *pPage){$/;"	f	file:
pcache1ResizeHash	drivers/SQLite/sqlite3/sqlite3.c	/^static int pcache1ResizeHash(PCache1 *p){$/;"	f	file:
pcache1Shutdown	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcache1Shutdown(void *NotUsed){$/;"	f	file:
pcache1Truncate	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcache1Truncate(sqlite3_pcache *p, unsigned int iLimit){$/;"	f	file:
pcache1TruncateUnsafe	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcache1TruncateUnsafe($/;"	f	file:
pcache1UnderMemoryPressure	drivers/SQLite/sqlite3/sqlite3.c	/^static int pcache1UnderMemoryPressure(PCache1 *pCache){$/;"	f	file:
pcache1Unpin	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcache1Unpin(sqlite3_pcache *p, void *pPg, int reuseUnlikely){$/;"	f	file:
pcache1_g	drivers/SQLite/sqlite3/sqlite3.c	/^} pcache1_g;$/;"	v	typeref:struct:PCacheGlobal	file:
pcacheAddToDirtyList	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcacheAddToDirtyList(PgHdr *pPage){$/;"	f	file:
pcacheCheckSynced	drivers/SQLite/sqlite3/sqlite3.c	/^static int pcacheCheckSynced(PCache *pCache){$/;"	f	file:
pcacheMergeDirtyList	drivers/SQLite/sqlite3/sqlite3.c	/^static PgHdr *pcacheMergeDirtyList(PgHdr *pA, PgHdr *pB){$/;"	f	file:
pcacheRemoveFromDirtyList	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcacheRemoveFromDirtyList(PgHdr *pPage){$/;"	f	file:
pcacheSortDirtyList	drivers/SQLite/sqlite3/sqlite3.c	/^static PgHdr *pcacheSortDirtyList(PgHdr *pIn){$/;"	f	file:
pcacheUnpin	drivers/SQLite/sqlite3/sqlite3.c	/^static void pcacheUnpin(PgHdr *p){$/;"	f	file:
pctx	drivers/Oracle/OCI/include/cdemodp0.h	/^struct pctx$/;"	s
penStyleMap_	drivers/qt/TeQtCanvas.h	/^	map<TeLnBasicType, Qt::PenStyle> penStyleMap_;$/;"	m	class:TeQtCanvas
penStyleMap_	drivers/qt/TeQtGraph.h	/^	map<TeLnBasicType, Qt::PenStyle> penStyleMap_;$/;"	m	class:TeQtGraphPlot
penStyleMap_	drivers/qt/TeQtLegendSource.h	/^    map<TeLnBasicType, Qt::PenStyle> penStyleMap_;$/;"	m	class:TeQtLegendSource
penStyleMap_	drivers/qt/TeQtViewsListView.h	/^	map<TeLnBasicType, Qt::PenStyle>		penStyleMap_;$/;"	m	class:TeQtViewsListView
peo	drivers/Oracle/OCI/include/ocidfn.h	/^    ub2          peo;                                  \/* parse error offset *\/$/;"	m	struct:cda_def
peo	drivers/Oracle/OCI/include/ocidfn.h	/^    ub2          peo;$/;"	m	struct:cda_head
perimeter	image_processing/TePDIBaatz.hpp	/^  float perimeter; \/*number of border pixels *\/$/;"	m	struct:segment
perimeter	image_processing/TePDIBaatz.hpp	/^  float perimeter; \/*number of border pixels in merged segment, neighbour plus original *\/$/;"	m	struct:segment_neighbor
persistenceType_	kernel/TeCoverageParams.h	/^    TeCoveragePersistenceType persistenceType_; \/\/!< Type of data persistence$/;"	m	class:TeCoverageParams
persona_nzttWallet	drivers/Oracle/OCI/include/nzt.h	/^   nzttPersona *persona_nzttWallet;       \/* List of personas in wallet *\/$/;"	m	struct:nzttWallet
pf	image_processing/TePDIHants.cpp	/^  fftw_plan pf, pb; \/\/ forward (fft),  backward (ifft)$/;"	v
pgConnection_	drivers/PostgreSQL/TePostgreSQLConnection.h	/^    TePGConnection* pgConnection_; \/\/!< Internal pg connection interface.$/;"	m	class:TePostgreSQLConnection
pg_connection_	drivers/PostgreSQL/TePGInterface.h	/^        PGconn *pg_connection_;	\/\/ A pointer to a connection$/;"	m	class:TePGConnection
pg_recordset_	drivers/PostgreSQL/TePGInterface.h	/^        PGresult *pg_recordset_;$/;"	m	class:TePGRecordset
pgno	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno pgno;                     \/* Page number for this page *\/$/;"	m	struct:PgHdr	file:
pgno	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno pgno;           \/* Page number for this page *\/$/;"	m	struct:MemPage	file:
pgnoRoot	drivers/SQLite/sqlite3/sqlite3.c	/^  Pgno pgnoRoot;            \/* The root page of this tree *\/$/;"	m	struct:BtCursor	file:
pheight_	drivers/qt/TeQtGraph.h	/^	int	pheight_;$/;"	m	class:TeQtGraphPlot
photometric_	kernel/TeRasterParams.h	/^	vector<TeRasterPhotometricInterpretation>   photometric_;	\/\/!< photometric interpretation$/;"	m	class:TeRasterParams
pi_manager_	image_processing/TePDIAlgorithm.hpp	/^      TePDIPIManager pi_manager_;      $/;"	m	class:TePDIAlgorithm
pickBranch	kernel/TeRTree.h	/^int TeRTree<DATATYPE, MAXNODES, MINNODES>::pickBranch(const TeBox& rect, TeRTreeNodeType* node) const$/;"	f	class:TeSAM::TeRTree
pickSeeds	kernel/TeRTree.h	/^void TeRTree<DATATYPE, MAXNODES, MINNODES>::pickSeeds(TePartitionVars& p) const$/;"	f	class:TeSAM::TeRTree
pieAttr_	drivers/qt/TeAppTheme.h	/^	string			pieAttr_;$/;"	m	class:TeAppTheme
pieBrush_	drivers/qt/TeQtCanvas.h	/^	QBrush		pieBrush_;$/;"	m	class:TeQtCanvas
pieColor_	drivers/qt/TeQtCanvas.h	/^	QColor		pieColor_;$/;"	m	class:TeQtCanvas
pieDiameter	drivers/qt/TeAppTheme.h	/^	double pieDiameter() { return pieDiameter_; };$/;"	f	class:TeAppTheme
pieDiameter	drivers/qt/TeAppTheme.h	/^	void pieDiameter(double n) { pieDiameter_ = n; };$/;"	f	class:TeAppTheme
pieDiameter_	drivers/qt/TeAppTheme.h	/^	double			pieDiameter_;$/;"	m	class:TeAppTheme
pieDimAttribute	drivers/qt/TeAppTheme.h	/^	string pieDimAttribute() { return pieAttr_; }$/;"	f	class:TeAppTheme
pieDimAttribute	drivers/qt/TeAppTheme.h	/^	void pieDimAttribute(const string& s) { pieAttr_ = s; }$/;"	f	class:TeAppTheme
pieLegends	kernel/TeGraph.cpp	/^TeGraphPlot :: pieLegends ()$/;"	f	class:TeGraphPlot
pieMaxDiameter	drivers/qt/TeAppTheme.h	/^	double pieMaxDiameter() { return pieMaxDiameter_; };$/;"	f	class:TeAppTheme
pieMaxDiameter	drivers/qt/TeAppTheme.h	/^	void pieMaxDiameter(double n) { pieMaxDiameter_ = n; };$/;"	f	class:TeAppTheme
pieMaxDiameter_	drivers/qt/TeAppTheme.h	/^	double			pieMaxDiameter_;$/;"	m	class:TeAppTheme
pieMinDiameter	drivers/qt/TeAppTheme.h	/^	double pieMinDiameter() { return pieMinDiameter_; };$/;"	f	class:TeAppTheme
pieMinDiameter	drivers/qt/TeAppTheme.h	/^	void pieMinDiameter(double n) { pieMinDiameter_ = n; };$/;"	f	class:TeAppTheme
pieMinDiameter_	drivers/qt/TeAppTheme.h	/^	double			pieMinDiameter_;$/;"	m	class:TeAppTheme
pieceCnt_pctx	drivers/Oracle/OCI/include/cdemodp0.h	/^  ub4   pieceCnt_pctx;                            \/* count of partial pieces *\/$/;"	m	struct:pctx
pigeonhole	kernel/TeRTree.h	/^void TeRTree<DATATYPE, MAXNODES, MINNODES>::pigeonhole(TePartitionVars& p) const$/;"	f	class:TeSAM::TeRTree
pinVectorOfRefs	drivers/Oracle/OCI/include/occiControl.h	/^void pinVectorOfRefs( const Connection *conn,$/;"	f	namespace:oracle::occi
pipeName	drivers/GL/glxext.h	/^    char    pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];$/;"	m	struct:__anon94
pipeName	drivers/GL/glxext.h	/^    char    pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];$/;"	m	struct:__anon95
pipeName	drivers/GL/glxext.h	/^    char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];$/;"	m	struct:__anon96
pipeName	drivers/GL/glxext.h	/^    char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];$/;"	m	struct:__anon97
pis	kernel/TeProjection.h	/^	double  pis;         \/\/!< Y-coordinate of sub-satellite point (used in Satellite)$/;"	m	struct:TeProjectionParams
pixel2World	drivers/MrSID/TeMrSID.cpp	/^void TeMrSIDReader::pixel2World(int ix, int iy, double& wx, double& wy)$/;"	f	class:TeMrSIDReader
pixelOffsets1_	image_processing/TePDIBlender.hpp	/^      std::vector< double > pixelOffsets1_;$/;"	m	class:TePDIBlender
pixelOffsets2_	image_processing/TePDIBlender.hpp	/^      std::vector< double > pixelOffsets2_;$/;"	m	class:TePDIBlender
pixelScales1_	image_processing/TePDIBlender.hpp	/^      std::vector< double > pixelScales1_;$/;"	m	class:TePDIBlender
pixelScales2_	image_processing/TePDIBlender.hpp	/^      std::vector< double > pixelScales2_;$/;"	m	class:TePDIBlender
pixelSize	drivers/qt/TeQtCanvas.h	/^	double pixelSize () { return (xmax_-xmin_)\/(double)width_; }$/;"	f	class:TeQtCanvas
pixelToValue	kernel/TeGraph.cpp	/^TeGraphPlot :: pixelToValue(int x_pixel, int y_pixel, Real& x_value, Real& y_value)$/;"	f	class:TeGraphPlot
pixel_id	image_processing/TePDIBaatz.hpp	/^  unsigned long int pixel_id; \/* pixel id *\/$/;"	m	struct:segment_pixel
pixel_list	image_processing/TePDIBaatz.hpp	/^  struct segment_pixel *pixel_list; \/* list of indexes of the segment's pixels *\/$/;"	m	struct:segment	typeref:struct:segment::segment_pixel
pixels	image_processing/TePDIMixModelComponent.hpp	/^		map<unsigned int, double> pixels;$/;"	m	class:TePDIMixModelComponent
pixelsNumber_	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^          double pixelsNumber_;       $/;"	m	class:TePDIParaSegRegGrowStrategy::Segment
pixmap0_	drivers/qt/TeQtCanvas.h	/^	QPixmap*	pixmap0_;$/;"	m	class:TeQtCanvas
pixmap1_	drivers/qt/TeQtCanvas.h	/^	QPixmap*	pixmap1_;$/;"	m	class:TeQtCanvas
pixmap2_	drivers/qt/TeQtCanvas.h	/^	QPixmap*	pixmap2_;$/;"	m	class:TeQtCanvas
pixmapMode	drivers/GL/glcore.h	/^    GLint pixmapMode;$/;"	m	struct:__GLcontextModesRec
pixmapMode	drivers/GL/internal/glcore.h	/^    GLint pixmapMode;$/;"	m	struct:__GLcontextModesRec
pixmap_	drivers/qt/TeQtGraph.h	/^	QPixmap*	pixmap_;$/;"	m	class:TeQtGraphPlot
pjs	kernel/TeProjection.h	/^	double  pjs;         \/\/!< X-coordinate of sub-satellite point (used in Satellite)$/;"	m	struct:TeProjectionParams
pkcs7_nzttProtInfo	drivers/Oracle/OCI/include/nzt.h	/^   nzttPKCS7ProtInfo pkcs7_nzttProtInfo;$/;"	m	union:nzttProtInfo
pkgAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId pkgAttrId[PKG_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
pkgAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType pkgAttrType[PKG_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
plan	drivers/SQLite/sqlite3/sqlite3.c	/^  WherePlan plan;       \/* query plan for this element of the FROM clause *\/$/;"	m	struct:WhereLevel	file:
plan	drivers/SQLite/sqlite3/sqlite3.c	/^  WherePlan plan;    \/* The lookup strategy *\/$/;"	m	struct:WhereCost	file:
planar_	kernel/TeDecoderTIFF.h	/^	unsigned short	planar_;	\/\/ storage organization : PLANARCONFIG_CONTIG or PLANARCONFIG_SEPARATE$/;"	m	class:TeDecoderTIFF
playButton_clicked	drivers/qt/ui/animation.ui.h	/^void Animation::playButton_clicked()$/;"	f	class:Animation
playDir	drivers/qt/ui/animation.ui.h	/^void Animation::playDir( QString \/* dir *\/)$/;"	f	class:Animation
playingScrollBar_valueChanged	drivers/qt/ui/animation.ui.h	/^void Animation::playingScrollBar_valueChanged( int f)$/;"	f	class:Animation
plot	drivers/qt/TeQtGraph.cpp	/^void TePlotWidget::plot ()$/;"	f	class:TePlotWidget
plot	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::plot ()$/;"	f	class:TeQtGraphPlot
plotArc	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotArc (TeArc &arc)$/;"	f	class:TeQtCanvas
plotArrow	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotArrow(QPointArray a)$/;"	f	class:TeQtCanvas
plotCell	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotCell (TeCell &cell, const bool& restoreBackground)$/;"	f	class:TeQtCanvas
plotCurves	kernel/TeGraph.cpp	/^TeGraphPlot :: plotCurves ( int with_simbols)$/;"	f	class:TeGraphPlot
plotGraphicScale	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotGraphicScale(TeVisual& visual, double offsetX, double offsetY, double unitConv, const string& dunit)$/;"	f	class:TeQtCanvas
plotInit	kernel/TeGraph.cpp	/^TeGraphPlot :: plotInit(int pixels_above, int pixels_below, int pixels_left, int pixels_right)$/;"	f	class:TeGraphPlot
plotLegend	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotLegend (QPoint p, const QPixmap* pix, string tx)$/;"	f	class:TeQtCanvas
plotLegend	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotLegend (const QPoint& p, TeLegendEntry* leg, const string& tx)$/;"	f	class:TeQtCanvas
plotLegend	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotLegend (const QPoint& p, const TeColor& cor, const string& tx)$/;"	f	class:TeQtCanvas
plotLine	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotLine (TeLine2D &line)$/;"	f	class:TeQtCanvas
plotMark	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotMark(QPoint &p, int s, int w)$/;"	f	class:TeQtCanvas
plotMiddleLineArrow	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotMiddleLineArrow(QPoint ptBegin, QPoint ptEnd)$/;"	f	class:TeQtCanvas
plotMiddleLineArrow	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotMiddleLineArrow(const TeLine2D &lne, QPointArray a)$/;"	f	class:TeQtCanvas
plotNode	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotNode (TeNode &pt)$/;"	f	class:TeQtCanvas
plotOnPixmap	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::plotOnPixmap ()$/;"	f	class:TeQtGraphPlot
plotOnPixmap0	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotOnPixmap0 ()$/;"	f	class:TeQtCanvas
plotOnPixmap1	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotOnPixmap1 ()$/;"	f	class:TeQtCanvas
plotOnPixmap2	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotOnPixmap2 ()$/;"	f	class:TeQtCanvas
plotOnWindow	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotOnWindow ()$/;"	f	class:TeQtCanvas
plotOnWindow	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::plotOnWindow ()$/;"	f	class:TeQtGraphPlot
plotPie	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotPie (double x, double y, double w, double h, double a, double alen)$/;"	f	class:TeQtCanvas
plotPieBars	drivers/qt/TePlotTheme.h	/^void plotPieBars(TeAppTheme *appTheme, Canvas *canvas, Progress *progress, TeBox ebox = TeBox())$/;"	f
plotPoint	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotPoint (const TeCoord2D &pt)$/;"	f	class:TeQtCanvas
plotPoint	drivers/qt/TeQtCanvas.h	/^	void plotPoint (const TePoint &p){ plotPoint(p.location()); }$/;"	f	class:TeQtCanvas
plotPolygon	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotPolygon (const TePolygon &poly, const bool& restoreBackground)$/;"	f	class:TeQtCanvas
plotRaster	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotRaster(TeRaster* raster, TeRasterTransform* transf, TeQtProgress *progress)$/;"	f	class:TeQtCanvas
plotRect	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotRect (QRect& rect)$/;"	f	class:TeQtCanvas
plotRect	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotRect (double x, double y, double w, double h, int transp, bool legend)$/;"	f	class:TeQtCanvas
plotRectangle	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::plotRectangle (int x, int y, int dx, int dy)$/;"	f	class:TeQtGraphPlot
plotSymbol	kernel/TeGraph.cpp	/^TeGraphPlot :: plotSymbol(Real x_value, Real y_value, int symbol, int w, int h, int curve)$/;"	f	class:TeGraphPlot
plotTVData	drivers/spl/PluginParameters.cpp	/^void PluginParameters::plotTVData() const$/;"	f	class:PluginParameters
plotTVDataFPT	drivers/spl/PluginParameters.h	/^      typedef void (*plotTVDataFPT)( $/;"	t	class:PluginParameters
plotTVDataFP_	drivers/spl/PluginParameters.h	/^      plotTVDataFPT plotTVDataFP_;$/;"	m	class:PluginParameters
plotText	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotText (const TeCoord2D &pt, const string &str, double angle, double \/*alignh*\/, double \/*alignv*\/)$/;"	f	class:TeQtCanvas
plotText	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotText (const TeText& tx, const TeVisual& visual)$/;"	f	class:TeQtCanvas
plotTextRects	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotTextRects (TeText& tx, TeVisual visual)$/;"	f	class:TeQtCanvas
plotTextWV	drivers/qt/TePlotTheme.h	/^void plotTextWV(TeAppTheme *appTheme, Canvas *canvas, string query, Progress *progress)$/;"	f
plotTexts	drivers/qt/TePlotTheme.h	/^void plotTexts(TeAppTheme *appTheme, Canvas *canvas, string query, Progress *progress)$/;"	f
plotXorPolyline	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotXorPolyline (QPointArray& PA, bool cdev)$/;"	f	class:TeQtCanvas
plotXorTextDistance	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::plotXorTextDistance(vector<QPointArray> xorPointArrayVec, double unitConv, string unit)$/;"	f	class:TeQtCanvas
plot_axes	kernel/TeGraph.cpp	/^TeGraphPlot :: plot_axes(void)$/;"	f	class:TeGraphPlot
plot_curve	kernel/TeGraph.cpp	/^TeGraphPlot :: plot_curve(Real_Vector x, Real_Vector y,int points,TeColor c)$/;"	f	class:TeGraphPlot
plot_grid	kernel/TeGraph.cpp	/^void TeGraphPlot :: plot_grid(void)$/;"	f	class:TeGraphPlot
plot_horiz	kernel/TeGraph.cpp	/^TeGraphPlot :: plot_horiz(char *text, int y, int w)$/;"	f	class:TeGraphPlot
plot_labels	kernel/TeGraph.cpp	/^int TeGraphPlot :: plot_labels(void)$/;"	f	class:TeGraphPlot
plot_point	kernel/TeGraph.cpp	/^TeGraphPlot :: plot_point(Real x_value, Real y_value, int pen_status)$/;"	f	class:TeGraphPlot
plot_ticks	kernel/TeGraph.cpp	/^TeGraphPlot :: plot_ticks(void)$/;"	f	class:TeGraphPlot
plot_title	kernel/TeGraph.cpp	/^int TeGraphPlot :: plot_title(char *text)$/;"	f	class:TeGraphPlot
plot_xaxis	kernel/TeGraph.cpp	/^int TeGraphPlot :: plot_xaxis(char *text)$/;"	f	class:TeGraphPlot
plot_yaxis	kernel/TeGraph.cpp	/^TeGraphPlot :: plot_yaxis(char *text)$/;"	f	class:TeGraphPlot
pluginServerHandlerPtr_	drivers/spl/PluginsManager.h	/^      void* pluginServerHandlerPtr_;$/;"	m	class:PluginsManager
plugin_build_number_	drivers/spl/PluginInfo.h	/^      std::string plugin_build_number_;      $/;"	m	class:PluginInfo
plugin_description_	drivers/spl/PluginInfo.h	/^      std::string plugin_description_;           $/;"	m	class:PluginInfo
plugin_interface_version_	drivers/spl/PluginInfo.h	/^      std::string plugin_interface_version_;$/;"	m	class:PluginInfo
plugin_major_version_	drivers/spl/PluginInfo.h	/^      std::string plugin_major_version_;      $/;"	m	class:PluginInfo
plugin_minor_version_	drivers/spl/PluginInfo.h	/^      std::string plugin_minor_version_;           $/;"	m	class:PluginInfo
plugin_name_	drivers/spl/PluginInfo.h	/^      std::string plugin_name_;$/;"	m	class:PluginInfo
plugin_type_	drivers/spl/PluginInfo.h	/^      std::string plugin_type_;$/;"	m	class:PluginInfo
plugin_url_	drivers/spl/PluginInfo.h	/^      std::string plugin_url_;           $/;"	m	class:PluginInfo
plugin_vendor_	drivers/spl/PluginInfo.h	/^      std::string plugin_vendor_;      $/;"	m	class:PluginInfo
plugin_vendor_email_	drivers/spl/PluginInfo.h	/^      std::string plugin_vendor_email_;              $/;"	m	class:PluginInfo
pnBytesFreed	drivers/SQLite/sqlite3/sqlite3.c	/^  int *pnBytesFreed;            \/* If not NULL, increment this in DbFree() *\/$/;"	m	struct:sqlite3	file:
pobjectExt	drivers/Oracle/OCI/include/occiObjects.h	/^        void *pobjectExt;$/;"	m	class:oracle::occi::PObject
point3dListFilter	kernel/TeTin.cpp	/^TeTin::point3dListFilter(TeTinVertexSet vertSet, double tol)$/;"	f	class:TeTin
pointColor_	drivers/qt/TeQtCanvas.h	/^	QColor		pointColor_;$/;"	m	class:TeQtCanvas
pointPen_	drivers/qt/TeQtCanvas.h	/^	QPen		pointPen_;$/;"	m	class:TeQtCanvas
pointPixmap_	drivers/qt/TeQtCanvas.h	/^	QPixmap*	pointPixmap_;$/;"	m	class:TeQtCanvas
pointSize_	drivers/qt/TeQtCanvas.h	/^	int			pointSize_;$/;"	m	class:TeQtCanvas
pointStyle_	drivers/qt/TeQtCanvas.h	/^	int			pointStyle_;$/;"	m	class:TeQtCanvas
pointToSegmentDistance	kernel/TeTin.cpp	/^TeTin::pointToSegmentDistance(TeCoord2D fseg, TeCoord2D lseg, TeCoord2D pt, TeCoord2D& pti)$/;"	f	class:TeTin
point_visible	kernel/TeGraph.cpp	/^TeGraphPlot :: point_visible(Real x, Real y)$/;"	f	class:TeGraphPlot
pointer	drivers/spl/PluginsParametersContainer.h	/^      typedef TeSharedPtr< PluginsParametersContainer< PluginsParametersContainerKeyT > > pointer;$/;"	t	class:PluginsParametersContainer
pointer	image_processing/TePDIAlgorithm.hpp	/^      typedef TeSharedPtr< TePDIAlgorithm > pointer;$/;"	t	class:TePDIAlgorithm
pointer	image_processing/TePDIAlgorithmFactory.hpp	/^      typedef TeSharedPtr< TePDIAlgorithmFactory > pointer;$/;"	t	class:TePDIAlgorithmFactory
pointer	image_processing/TePDIBlender.hpp	/^      typedef TeSharedPtr< TePDIBlender > pointer;$/;"	t	class:TePDIBlender
pointer	image_processing/TePDIBufferedFilter.hpp	/^      typedef TeSharedPtr< TePDIBufferedFilter > pointer;$/;"	t	class:TePDIBufferedFilter
pointer	image_processing/TePDIEMClas.hpp	/^      typedef TeSharedPtr< TePDIEMClas > pointer;$/;"	t	class:TePDIEMClas
pointer	image_processing/TePDIFilterMask.hpp	/^      typedef TeSharedPtr< TePDIFilterMask > pointer;$/;"	t	class:TePDIFilterMask
pointer	image_processing/TePDIFusionIndexes.hpp	/^      typedef TeSharedPtr< TePDIFusionIndexes > pointer;$/;"	t	class:TePDIFusionIndexes
pointer	image_processing/TePDIGeneralizedIHSFusion.hpp	/^      typedef TeSharedPtr< TePDIGeneralizedIHSFusion > pointer;$/;"	t	class:TePDIGeneralizedIHSFusion
pointer	image_processing/TePDIHistogram.hpp	/^      typedef TeSharedPtr< TePDIHistogram > pointer;$/;"	t	class:TePDIHistogram
pointer	image_processing/TePDIInterpolator.hpp	/^      typedef TeSharedPtr< TePDIInterpolator > pointer;$/;"	t	class:TePDIInterpolator
pointer	image_processing/TePDIIsosegClas.hpp	/^    typedef TeSharedPtr< TePDIIsosegClas > pointer;$/;"	t	class:TePDIIsosegClas
pointer	image_processing/TePDIKMeansClas.hpp	/^    typedef TeSharedPtr< TePDIKMeansClas > pointer;$/;"	t	class:TePDIKMeansClas
pointer	image_processing/TePDILevelRemap.hpp	/^      typedef TeSharedPtr< TePDILevelRemap > pointer;$/;"	t	class:TePDILevelRemap
pointer	image_processing/TePDILinearFilter.hpp	/^      typedef TeSharedPtr< TePDILinearFilter > pointer;$/;"	t	class:TePDILinearFilter
pointer	image_processing/TePDIMatrix.hpp	/^      typedef TeSharedPtr< TePDIMatrix< ElementType > > pointer;$/;"	t	class:TePDIMatrix
pointer	image_processing/TePDIMixModelStrategy.hpp	/^      typedef TeSharedPtr< TePDIMixModelStrategy > pointer;$/;"	t	class:TePDIMixModelStrategy
pointer	image_processing/TePDIParameters.hpp	/^      typedef TeSharedPtr< TePDIParameters > pointer;$/;"	t	class:TePDIParameters
pointer	image_processing/TePDIPrincoMixModelStrategy.hpp	/^ 		typedef TeSharedPtr< TePDIPrincoMixModelStrategy > pointer;$/;"	t	class:TePDIPrincoMixModelStrategy
pointer	image_processing/TePDIRadarFilter.hpp	/^      typedef TeSharedPtr< TePDIRadarFilter > pointer;$/;"	t	class:TePDIRadarFilter
pointer	image_processing/TePDIRadarFrostFilter.hpp	/^      typedef TeSharedPtr< TePDIRadarFrostFilter > pointer;$/;"	t	class:TePDIRadarFrostFilter
pointer	image_processing/TePDIRadarGammaFilter.hpp	/^      typedef TeSharedPtr< TePDIRadarGammaFilter > pointer;$/;"	t	class:TePDIRadarGammaFilter
pointer	image_processing/TePDIRadarKuanFilter.hpp	/^      typedef TeSharedPtr< TePDIRadarKuanFilter > pointer;$/;"	t	class:TePDIRadarKuanFilter
pointer	image_processing/TePDIRadarLeeFilter.hpp	/^      typedef TeSharedPtr< TePDIRadarLeeFilter > pointer;$/;"	t	class:TePDIRadarLeeFilter
pointer	image_processing/TePDIRaster2Vector.hpp	/^    typedef TeSharedPtr< TePDIRaster2Vector > pointer;$/;"	t	class:TePDIRaster2Vector
pointer	image_processing/TePDIRgbPalette.hpp	/^      typedef TeSharedPtr< TePDIRgbPalette > pointer;$/;"	t	class:TePDIRgbPalette
pointer	image_processing/TePDIRgbPaletteNode.hpp	/^      typedef TeSharedPtr< TePDIRgbPaletteNode > pointer;$/;"	t	class:TePDIRgbPaletteNode
pointer	image_processing/TePDISensorSimulator.hpp	/^      typedef TeSharedPtr< TePDISensorSimulator > pointer;$/;"	t	class:TePDISensorSimulator
pointer	image_processing/TePDIStatistic.hpp	/^      typedef TeSharedPtr< TePDIStatistic > pointer;$/;"	t	class:TePDIStatistic
pointer	image_processing/TePDIStrategy.hpp	/^      typedef TeSharedPtr< TePDIStrategy > pointer;$/;"	t	class:TePDIStrategy
pointer	image_processing/TePDIStrategyFactory.hpp	/^      typedef TeSharedPtr< TePDIStrategyFactory > pointer;$/;"	t	class:TePDIStrategyFactory
pointer	kernel/TeGTParams.h	/^      typedef TeSharedPtr< TeGTParams > pointer;    $/;"	t	class:TeGTParams
pointer	kernel/TeGeometricTransformation.h	/^      typedef TeSharedPtr< TeGeometricTransformation > pointer;$/;"	t	class:TeGeometricTransformation
pointer	kernel/TeMappedMemory.h	/^      typedef TeSharedPtr< TeMappedMemory > pointer;$/;"	t	class:TeMappedMemory
pointer	kernel/TeMultiContainer.h	/^      typedef TeSharedPtr< TeMultiContainer< TeMultiContainerKeyT > > pointer;$/;"	t	class:TeMultiContainer
pointer	kernel/TeThreadFunctor.h	/^    typedef TeSharedPtr< TeThreadFunctor > pointer;         $/;"	t	class:TeThreadFunctor
pointingColor_	drivers/qt/TeQtGLWidget.h	/^	QColor pointingColor_;$/;"	m	class:TeQtGLWidget
pointingLegend	kernel/TeAbstractTheme.h	/^	virtual TeLegendEntry& pointingLegend () $/;"	f	class:TeAbstractTheme
pointingLegend	kernel/TeAbstractTheme.h	/^	virtual void pointingLegend (TeLegendEntry &leg) $/;"	f	class:TeAbstractTheme
pointingLegend_	kernel/TeAbstractTheme.h	/^	TeLegendEntry		pointingLegend_;				\/\/group(-4) $/;"	m	class:TeAbstractTheme
points_	kernel/TeMultiGeometry.h	/^	TePointSet			points_;$/;"	m	class:TeMultiGeometry
polId_	kernel/TeIntersector.h	/^	unsigned int polId_;	\/\/!<  The polygon id, when used in a polygonset.$/;"	m	struct:TeINTERSECTOR2::TeSegIdInPolygonSet
polNum_	kernel/TeIntersector.cpp	/^	unsigned int polNum_;$/;"	m	struct:TeIntersectionIndexKey	file:
polSet_	kernel/TePolygonSetProperties.h	/^      const TePolygonSet& polSet_;$/;"	m	class:TePolygonSetProperties
poly_	image_processing/TePDIRaster2Vector.hpp	/^      TePolygon poly_;$/;"	m	class:TePDIRaster2VectorPolStruct
poly_	kernel/TeRaster.h	/^			TePolygon			poly_;$/;"	m	class:TeRaster::iteratorPoly
polygonBrush_	drivers/qt/TeQtCanvas.h	/^	QBrush		polygonBrush_;$/;"	m	class:TeQtCanvas
polygonBrush_	drivers/qt/TeQtGraph.h	/^	QBrush		polygonBrush_;$/;"	m	class:TeQtGraphPlot
polygonColor_	drivers/qt/TeQtCanvas.h	/^	QColor		polygonColor_;$/;"	m	class:TeQtCanvas
polygonColor_	drivers/qt/TeQtGraph.h	/^	QColor		polygonColor_;$/;"	m	class:TeQtGraphPlot
polygonFromBox	kernel/TeBox.cpp	/^TePolygon polygonFromBox( const TeBox& bb )$/;"	f
polygonMap_	drivers/qt/TeAppTheme.h	/^	map<int, TePolygon> polygonMap_;$/;"	m	struct:RepMap
polygonPen_	drivers/qt/TeQtCanvas.h	/^	QPen		polygonPen_;$/;"	m	class:TeQtCanvas
polygonTransparency_	drivers/qt/TeQtCanvas.h	/^	int			polygonTransparency_;$/;"	m	class:TeQtCanvas
polygons_	kernel/TeMultiGeometry.h	/^	TePolygonSet		polygons_;$/;"	m	class:TeMultiGeometry
polygonset_	image_processing/TePDIHaralick.hpp	/^      TePDITypes::TePDIPolygonSetPtrType polygonset_;$/;"	m	class:TePDIHaralick
polygonset_	image_processing/TePDIStatistic.hpp	/^      TePDITypes::TePDIPolygonSetPtrType polygonset_;$/;"	m	class:TePDIStatistic
pop	kernel/dynpq.h	/^	void dynamic_priority_queue<key_type>::pop()$/;"	f	class:br_stl::dynamic_priority_queue
populateAppThemeTable	drivers/qt/TeApplicationUtils.cpp	/^bool populateAppThemeTable(TeDatabase* db, const string& tableName)$/;"	f
populateCollection	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::populateCollection(std::string \/* objectId *\/, const bool& \/* sincronize *\/)$/;"	f	class:TeExternalTheme
populateCollection	kernel/TeTheme.cpp	/^TeTheme::populateCollection(std::string objectId, const bool& sincronize)$/;"	f	class:TeTheme
populateCollectionAux	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::populateCollectionAux(std::string \/* objectId *\/)$/;"	f	class:TeExternalTheme
populateCollectionAux	kernel/TeTheme.cpp	/^TeTheme::populateCollectionAux(std::string objectId)$/;"	f	class:TeTheme
populateDatabase	kernel/TeCoverageImport.h	/^populateDatabase(TeLayer* layer, const std::string& coverageId, std::vector<std::vector<SerializedPair<T> > >& groups)$/;"	f
populateDatumTable	kernel/TeDatabase.cpp	/^void TeDatabase::populateDatumTable()$/;"	f	class:TeDatabase
populateTable	drivers/gdal/TeOGRExportImportFunctions.cpp	/^bool populateTable(TeTable& tb, std::vector<std::string> props)$/;"	f
popupCanvas	drivers/qt/TeQtCanvas.h	/^	QPopupMenu* popupCanvas() { return popupCanvas_; }$/;"	f	class:TeQtCanvas
popupCanvas_	drivers/qt/TeQtCanvas.h	/^	QPopupMenu* popupCanvas_;$/;"	m	class:TeQtCanvas
popupHorizHeader	drivers/qt/TeQtGrid.h	/^	QPopupMenu* popupHorizHeader()$/;"	f	class:TeQtGrid
popupHorizHeader_	drivers/qt/TeQtGrid.h	/^	QPopupMenu				*popupHorizHeader_;$/;"	m	class:TeQtGrid
popupItem	drivers/qt/TeQtDatabasesListView.h	/^	TeQtCheckListItem *popupItem()$/;"	f	class:TeQtDatabasesListView
popupItem	drivers/qt/TeQtViewsListView.h	/^	TeQtCheckListItem *popupItem()$/;"	f	class:TeQtViewsListView
popupItem_	drivers/qt/TeQtDatabasesListView.h	/^	TeQtCheckListItem	*popupItem_;$/;"	m	class:TeQtDatabasesListView
popupItem_	drivers/qt/TeQtViewsListView.h	/^	TeQtCheckListItem*	popupItem_;$/;"	m	class:TeQtViewsListView
popupMenu_	drivers/qt/TeQtColorBar.h	/^	QPopupMenu popupMenu_;$/;"	m	class:TeQtColorBar
popupMenu_	drivers/qt/TeQtDatabasesListView.h	/^	QPopupMenu			*popupMenu_;$/;"	m	class:TeQtDatabasesListView
popupMenu_	drivers/qt/TeQtViewsListView.h	/^	QPopupMenu*			popupMenu_;$/;"	m	class:TeQtViewsListView
popupVertHeader	drivers/qt/TeQtGrid.h	/^	QPopupMenu* popupVertHeader()$/;"	f	class:TeQtGrid
popupVertHeader_	drivers/qt/TeQtGrid.h	/^	QPopupMenu				*popupVertHeader_;$/;"	m	class:TeQtGrid
popupViewport	drivers/qt/TeQtGrid.h	/^	QPopupMenu* popupViewport()$/;"	f	class:TeQtGrid
popupViewport_	drivers/qt/TeQtGrid.h	/^	QPopupMenu				*popupViewport_;$/;"	m	class:TeQtGrid
portNumber	kernel/TeDatabase.h	/^	int	portNumber () $/;"	f	class:TeDatabase
portNumber_	kernel/TeConnection.h	/^    int portNumber_;	        		\/\/!< Port number$/;"	m	class:TeConnection
portNumber_	kernel/TeDatabase.h	/^	int					portNumber_;			\/\/!< port number$/;"	m	class:TeDatabase
port_	kernel/TeDatabaseFactoryParams.h	/^      int port_;				\/\/!< Port number for network connection.$/;"	m	class:TeDatabaseFactoryParams
portal2GridRowVec	drivers/qt/TeQtGridSource.h	/^	vector<int>& portal2GridRowVec() { return portal2GridRowVec_; }$/;"	f	class:TeQtGridSource
portal2GridRowVec_	drivers/qt/TeQtGridSource.h	/^	vector<int>	portal2GridRowVec_;$/;"	m	class:TeQtGridSource
portalRow2UniqueIdVector_	drivers/qt/TeQtGrid.h	/^	vector<string>			portalRow2UniqueIdVector_;$/;"	m	class:TeQtGrid
portal_	drivers/qt/TeQtGrid.h	/^	TeDatabasePortal		*portal_;$/;"	m	class:TeQtGrid
portal_	drivers/qt/TeQtGridSource.h	/^	TeDatabasePortal* portal_;$/;"	m	class:TeQtGridSource
portal_	drivers/qt/TeQtTable.h	/^	TeDatabasePortal	*portal_;$/;"	m	class:TeQtTable
portal_	kernel/TeBlockLoader.h	/^    TeDatabasePortal* portal_;$/;"	m	class:TeBlockLoader
portals_	kernel/TeQuerierDB.h	/^	vector<TeDatabasePortal*>	portals_;		$/;"	m	class:TeQuerierDB
porterClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int porterClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
porterCreate	drivers/SQLite/sqlite3/sqlite3.c	/^static int porterCreate($/;"	f	file:
porterDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^static int porterDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
porterIdChar	drivers/SQLite/sqlite3/sqlite3.c	/^static const char porterIdChar[] = {$/;"	v	file:
porterNext	drivers/SQLite/sqlite3/sqlite3.c	/^static int porterNext($/;"	f	file:
porterOpen	drivers/SQLite/sqlite3/sqlite3.c	/^static int porterOpen($/;"	f	file:
porterTokenizerModule	drivers/SQLite/sqlite3/sqlite3.c	/^static const sqlite3_tokenizer_module porterTokenizerModule = {$/;"	v	file:
porter_stemmer	drivers/SQLite/sqlite3/sqlite3.c	/^static void porter_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
porter_tokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct porter_tokenizer {$/;"	s	file:
porter_tokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^} porter_tokenizer;$/;"	t	typeref:struct:porter_tokenizer	file:
porter_tokenizer_cursor	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct porter_tokenizer_cursor {$/;"	s	file:
porter_tokenizer_cursor	drivers/SQLite/sqlite3/sqlite3.c	/^} porter_tokenizer_cursor;$/;"	t	typeref:struct:porter_tokenizer_cursor	file:
posSegments_	kernel/TeRaster.h	/^			int					posSegments_;$/;"	m	class:TeRaster::iteratorPoly
posixOpen	drivers/SQLite/sqlite3/sqlite3.c	/^static int posixOpen(const char *zFile, int flags, int mode){$/;"	f	file:
posixUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^static int posixUnlock(sqlite3_file *id, int eFileLock, int handleNFSUnlock){$/;"	f	file:
post	kernel/TeSemaphore.h	/^      inline void post()$/;"	f	class:TeSemaphore
ppNextElem	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3HashElem **ppNextElem;$/;"	m	struct:Fts3SegReader	file:
precision	kernel/TePrecision.h	/^	double	precision ()$/;"	f	class:TePrecision
precision_	kernel/TePrecision.h	/^	double precision_;	\/\/!< Stores the precision.$/;"	m	class:TePrecision
prefix	drivers/SQLite/sqlite3/sqlite3.c	/^  etByte prefix;           \/* Offset into aPrefix[] of the prefix string *\/$/;"	m	struct:et_info	file:
prepare	drivers/Oracle/TeOCIConnect.cpp	/^bool TeOCIConnection::prepare(const string& stmt)$/;"	f	class:TeOCIConnection
prepare	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::prepare(const string& stmt)$/;"	f	class:TeOCICursor
prepare	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	file:
prepare	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines
prepare16	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	file:
prepare16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines
prepare16_v2	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	file:
prepare16_v2	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines
prepare_v2	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	file:
prepare_v2	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines
prepositionsVector_	functions/TeAddressLocator.h	/^		vector<string> prepositionsVector_;			\/\/!< Vector with default prepositions for street names$/;"	m	class:TeAddressLocator
prereqAll	drivers/SQLite/sqlite3/sqlite3.c	/^  Bitmask prereqAll;      \/* Bitmask of tables referenced by pExpr *\/$/;"	m	struct:WhereTerm	file:
prereqRight	drivers/SQLite/sqlite3/sqlite3.c	/^  Bitmask prereqRight;    \/* Bitmask of tables used by pExpr->pRight *\/$/;"	m	struct:WhereTerm	file:
pressedPosition_	drivers/qt/TeQtViewsListView.h	/^	QPoint				pressedPosition_;$/;"	m	class:TeQtViewsListView
pressedThemeItem_	drivers/qt/TeQtViewsListView.h	/^	TeQtThemeItem		*pressedThemeItem_;$/;"	m	class:TeQtViewsListView
prev	drivers/SQLite/sqlite3/sqlite3.c	/^      u32 prev;       \/* Index in mem3.aPool[] of previous free chunk *\/$/;"	m	struct:Mem3Block::__anon51::__anon53	file:
prev	drivers/SQLite/sqlite3/sqlite3.c	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem	file:
prev	drivers/SQLite/sqlite3/sqlite3.c	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem	file:
prev	drivers/SQLite/sqlite3/sqlite3.c	/^  int prev;       \/* Index of previous free chunk *\/$/;"	m	struct:Mem5Link	file:
prevSize	drivers/SQLite/sqlite3/sqlite3.c	/^      u32 prevSize;   \/* Size of previous chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon51::__anon52	file:
previous_mode_data	drivers/SQLite/sqlite3/shell.c	/^struct previous_mode_data {$/;"	s	file:
previous_segment	image_processing/TePDIBaatz.hpp	/^  struct segment *previous_segment; \/* previous not deleted segment *\/$/;"	m	struct:segment	typeref:struct:segment::segment
previous_unused_segment	image_processing/TePDIBaatz.hpp	/^  struct segment *previous_unused_segment; \/* previous unused segment *\/$/;"	m	struct:segment	typeref:struct:segment::segment
pri	kernel/TeProjection.h	/^	double  pri;         \/\/!< Sensor angle resolution along y axis (rad) (used in Satellite)$/;"	m	struct:TeProjectionParams
primaryKeys	kernel/TeTable.cpp	/^TeTable::primaryKeys(vector<string>& keys)$/;"	f	class:TeTable
print	drivers/gdal/TeGDALDecoder.cpp	/^void TeGDALDriverInfo::print() const$/;"	f	class:TeGDALDriverInfo
print	kernel/TeGeoFileInfo.cpp	/^void TeGeoFileInfo::print() const$/;"	f	class:TeGeoFileInfo
print	kernel/TeProjection.cpp	/^TeProjection::print ( FILE* file_ )$/;"	f	class:TeProjection
printProperties	kernel/TePolygonSetProperties.cpp	/^void TePolygonSetProperties::printProperties( int polIndex )$/;"	f	class:TePolygonSetProperties
printPushButton_clicked	drivers/qt/ui/help.ui.h	/^void Help::printPushButton_clicked()$/;"	f	class:Help
printTokens	image_processing/TePDIArithmetic.cpp	/^void TePDIArithmetic::printTokens( const std::vector< std::string >& input ) $/;"	f	class:TePDIArithmetic
print_file	kernel/TeGraph.cpp	/^	char print_file[13];$/;"	m	struct:Opt	file:
print_pager_state	drivers/SQLite/sqlite3/sqlite3.c	/^static char *print_pager_state(Pager *p){$/;"	f	file:
printer	kernel/TeGraph.cpp	/^	char printer[9];$/;"	m	struct:Opt	file:
printerFactor	drivers/qt/TeQtCanvas.h	/^	double printerFactor() {return printerFactor_;}$/;"	f	class:TeQtCanvas
printerFactor_	drivers/qt/TeQtCanvas.h	/^	double	printerFactor_;$/;"	m	class:TeQtCanvas
printer_port	kernel/TeGraph.cpp	/^	char printer_port[5];$/;"	m	struct:Opt	file:
priority	kernel/TeViewNode.h	/^	virtual int		priority() const { return viewNodeParams_.priority_; }$/;"	f	class:TeViewNode
priority	kernel/TeViewNode.h	/^	virtual void	priority(int i) { viewNodeParams_.priority_ = i; }$/;"	f	class:TeViewNode
priority_	kernel/TeViewNode.h	/^	int				priority_;$/;"	m	class:TeViewNodeParams
priv_nzttPersonaDesc	drivers/Oracle/OCI/include/nzt.h	/^   ub1 *priv_nzttPersonaDesc;             \/* Private information *\/$/;"	m	struct:nzttPersonaDesc
privatePtr	drivers/GL/glcore.h	/^    void *privatePtr;$/;"	m	struct:__GLdrawableBufferRec
privatePtr	drivers/GL/glcore.h	/^    void *privatePtr;$/;"	m	struct:__GLdrawablePrivateRec
privatePtr	drivers/GL/internal/glcore.h	/^    void *privatePtr;$/;"	m	struct:__GLdrawableBufferRec
privatePtr	drivers/GL/internal/glcore.h	/^    void *privatePtr;$/;"	m	struct:__GLdrawablePrivateRec
private_nzttIdentity	drivers/Oracle/OCI/include/nzt.h	/^   nzttIdentityPrivate *private_nzttIdentity;  \/* Opaque part of identity *\/$/;"	m	struct:nzttIdentity
private_nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^   nzttPersonaPrivate *private_nzttPersona;   \/* Opaque part of persona *\/$/;"	m	struct:nzttPersona
private_nzttWallet	drivers/Oracle/OCI/include/nzt.h	/^   nzttWalletPrivate *private_nzttWallet; \/* Private wallet information *\/$/;"	m	struct:nzttWallet
privlen_nzttPersonaDesc	drivers/Oracle/OCI/include/nzt.h	/^   ub4 privlen_nzttPersonaDesc;        \/* Length of private info (key)*\/$/;"	m	struct:nzttPersonaDesc
prj	kernel/TeProjection.h	/^	double  prj;         \/\/!< Sensor angle resolution along x axis (rad) (used in Satellite)$/;"	m	struct:TeProjectionParams
prl_nzttPersonaDesc	drivers/Oracle/OCI/include/nzt.h	/^   text *prl_nzttPersonaDesc;             \/* PRL for storage *\/$/;"	m	struct:nzttPersonaDesc
prllen_nzttPersonaDesc	drivers/Oracle/OCI/include/nzt.h	/^   ub4 prllen_nzttPersonaDesc;         \/* Length of PRL *\/$/;"	m	struct:nzttPersonaDesc
procDist	functions/TeCellAlgorithms.cpp	/^struct procDist$/;"	s	file:
process_input	drivers/SQLite/sqlite3/shell.c	/^static int process_input(struct callback_data *p, FILE *in){$/;"	f	file:
process_sqliterc	drivers/SQLite/sqlite3/shell.c	/^static int process_sqliterc($/;"	f	file:
processed	kernel/graph.h	/^	enum VertStatus {notVisited, visited, processed};$/;"	e	enum:br_stl::VertStatus
productIdentification_	kernel/TeAbstractFactory.h	/^	PRODUCTIDTYPE  productIdentification_;$/;"	m	class:TeAbstractFactory
profile	drivers/SQLite/sqlite3/sqlite3.c	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines	file:
profile	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines
progEnabled_	image_processing/TePDISAMClassifier.hpp	/^          bool progEnabled_;$/;"	m	class:TePDISAMClassifier::SegThread
prog_intef_ptr_	image_processing/TePDIPIManager.hpp	/^      TeProgressBase* prog_intef_ptr_;$/;"	m	class:TePDIPIManager
progressEnabled_	image_processing/TePDIJointHistogram.hpp	/^      bool progressEnabled_;$/;"	m	class:TePDIJointHistogram
progressEnabled_	image_processing/TePDIMMIOMatching.hpp	/^          bool progressEnabled_;$/;"	m	class:TePDIMMIOMatching::CalcCCorrelationMtxParams
progressEnabled_	image_processing/TePDIMMIOMatching.hpp	/^          bool progressEnabled_;$/;"	m	class:TePDIMMIOMatching::ExtractLocalMaximasParams
progressEnabled_	image_processing/TePDIMMIOMatching.hpp	/^        bool progressEnabled_;$/;"	m	struct:TePDIMMIOMatching::GenerateCorrelationFeaturesParams
progressEnabled_	image_processing/TePDIParallelSegmenter.hpp	/^          bool progressEnabled_;         $/;"	m	class:TePDIParallelSegmenter::GroupDataThreadEntryParams
progressEnabled_	image_processing/TePDIParallelSegmenter.hpp	/^          bool progressEnabled_;  $/;"	m	class:TePDIParallelSegmenter::SegmenterThreadEntryParams
progress_	image_processing/TePDIArithmetic.hpp	/^      mutable TePDIPIManager progress_;$/;"	m	class:TePDIArithmetic
progress_	image_processing/TePDICorrelationMatching.hpp	/^          TePDIPIManager& progress_;$/;"	m	class:TePDICorrelationMatching::CorrThread
progress_enabled_	dtm/TeDTMAlgorithm.h	/^      bool progress_enabled_;$/;"	m	class:TeDTMAlgorithm
progress_enabled_	image_processing/TePDIAlgorithm.hpp	/^      bool progress_enabled_;$/;"	m	class:TePDIAlgorithm
progress_enabled_	image_processing/TePDIMMIOMatching.hpp	/^          bool progress_enabled_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
progress_handler	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
progress_handler	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
progress_int_enabled_	image_processing/TePDIHistogram.hpp	/^      bool progress_int_enabled_;$/;"	m	class:TePDIHistogram
progress_interface_enabled_	image_processing/TePDIStrategy.hpp	/^      mutable bool progress_interface_enabled_;$/;"	m	class:TePDIStrategy
proj_	kernel/TeView.h	/^	TeProjection*   proj_;$/;"	m	class:TeView
projectExist	kernel/TeDatabase.cpp	/^bool TeDatabase::projectExist(const string& projectName)$/;"	f	class:TeDatabase
projectMap	kernel/TeDatabase.h	/^	TeProjectMap&  projectMap ()$/;"	f	class:TeDatabase
projectMap	kernel/TeMetaModelCache.h	/^		TeProjectMap&  projectMap ()$/;"	f	class:TeMetaModelCache
projectMap_	kernel/TeMetaModelCache.h	/^        TeProjectMap		projectMap_;		\/\/!< project map$/;"	m	class:TeMetaModelCache
projection	drivers/qt/TeQtCanvas.h	/^	TeProjection* projection() { return canvasProjection_; }$/;"	f	class:TeQtCanvas
projection	kernel/TeLayer.h	/^	virtual TeProjection* projection()$/;"	f	class:TeLayer
projection	kernel/TeRaster.h	/^inline TeProjection* TeRaster::projection() $/;"	f	class:TeRaster
projection	kernel/TeRasterParams.cpp	/^TeRasterParams::projection(TeProjection* proj)$/;"	f	class:TeRasterParams
projection	kernel/TeRasterParams.h	/^	TeProjection* projection()$/;"	f	class:TeRasterParams
projection	kernel/TeView.h	/^	virtual TeProjection* projection () { return proj_; }$/;"	f	class:TeView
projection	kernel/TeView.h	/^	virtual void projection (TeProjection* p) { proj_ = p; }$/;"	f	class:TeView
projection_	kernel/TeCoverageParams.h	/^    TeProjection* projection_;      \/\/!< Projection used in a coverage$/;"	m	class:TeCoverageParams
projection_	kernel/TeFileTheme.h	/^	TeProjection*		projection_;	\/\/ spatial reference of the objects in the file$/;"	m	class:TeFileTheme
projection_	kernel/TeLayer.h	/^	TeProjection*	projection_;		\/\/!< layer projection$/;"	m	class:TeLayer
projection_	kernel/TeRasterParams.h	/^	TeProjection* projection_;	\/\/!< raster projection$/;"	m	class:TeRasterParams
promotePointedObjectsSlot	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::promotePointedObjectsSlot()$/;"	f	class:TeQtGrid
promoteQueriedObjectsSlot	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::promoteQueriedObjectsSlot()$/;"	f	class:TeQtGrid
properties	kernel/TeBaseSTInstance.h	/^	virtual void properties(TePropertyVector& p)$/;"	f	class:TeBaseSTInstance
properties_	kernel/TeBaseSTInstance.h	/^	vector<string>			properties_;	$/;"	m	class:TeBaseSTInstance
propertyIterator	kernel/TeBaseSTInstanceSet.h	/^			propertyIterator (TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>* setIt,$/;"	f	class:TeBaseSTInstanceSet::propertyIterator
propertyIterator	kernel/TeBaseSTInstanceSet.h	/^			propertyIterator (typename vector<InstanceType>::iterator it,$/;"	f	class:TeBaseSTInstanceSet::propertyIterator
propertyIterator	kernel/TeBaseSTInstanceSet.h	/^	class propertyIterator$/;"	c	class:TeBaseSTInstanceSet
proto_add_user	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef int			ISC_EXPORT proto_add_user (ISC_STATUS *, USER_SEC_DATA *);$/;"	t	namespace:ibpp_internals
proto_array_get_slice	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_array_get_slice (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_array_lookup_bounds	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_array_lookup_bounds (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_array_put_slice	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_array_put_slice (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_attach_database	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS ISC_EXPORT proto_attach_database (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_blob_info	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_blob_info (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_cancel_blob	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_cancel_blob (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_cancel_events	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_cancel_events (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_close_blob	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_close_blob (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_commit_retaining	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_commit_retaining (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_commit_transaction	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_commit_transaction (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_create_blob2	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_create_blob2 (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_create_database	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS ISC_EXPORT proto_create_database (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_database_info	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_database_info (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_decode_date	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef void        ISC_EXPORT proto_decode_date (ISC_QUAD *,$/;"	t	namespace:ibpp_internals
proto_decode_sql_date	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef void        ISC_EXPORT proto_decode_sql_date (ISC_DATE *,$/;"	t	namespace:ibpp_internals
proto_decode_sql_time	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef void        ISC_EXPORT proto_decode_sql_time (ISC_TIME *,$/;"	t	namespace:ibpp_internals
proto_decode_timestamp	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef void        ISC_EXPORT proto_decode_timestamp (ISC_TIMESTAMP *,$/;"	t	namespace:ibpp_internals
proto_delete_user	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef int			ISC_EXPORT proto_delete_user (ISC_STATUS *, USER_SEC_DATA *);$/;"	t	namespace:ibpp_internals
proto_detach_database	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_detach_database (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_drop_database	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_drop_database (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_dsql_allocate_statement	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_dsql_allocate_statement (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_dsql_describe	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_dsql_describe (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_dsql_describe_bind	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_dsql_describe_bind (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_dsql_execute	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_dsql_execute (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_dsql_execute2	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_dsql_execute2 (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_dsql_execute_immediate	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_dsql_execute_immediate (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_dsql_fetch	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_dsql_fetch (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_dsql_free_statement	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_dsql_free_statement (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_dsql_prepare	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_dsql_prepare (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_dsql_set_cursor_name	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_dsql_set_cursor_name (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_dsql_sql_info	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_dsql_sql_info (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_encode_date	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef void        ISC_EXPORT proto_encode_date (void *,$/;"	t	namespace:ibpp_internals
proto_encode_sql_date	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef void        ISC_EXPORT proto_encode_sql_date (void *,$/;"	t	namespace:ibpp_internals
proto_encode_sql_time	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef void        ISC_EXPORT proto_encode_sql_time (void *,$/;"	t	namespace:ibpp_internals
proto_encode_timestamp	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef void        ISC_EXPORT proto_encode_timestamp (void *,$/;"	t	namespace:ibpp_internals
proto_get_segment	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_get_segment (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_interprete	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_interprete (char *,$/;"	t	namespace:ibpp_internals
proto_modify_user	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef int			ISC_EXPORT proto_modify_user (ISC_STATUS *, USER_SEC_DATA *);$/;"	t	namespace:ibpp_internals
proto_open_blob2	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_open_blob2 (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_put_segment	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_put_segment (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_que_events	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_que_events (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_rollback_retaining	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_rollback_retaining (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_rollback_transaction	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_rollback_transaction (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_service_attach	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_service_attach (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_service_detach	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_service_detach (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_service_query	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_service_query (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_service_start	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS ISC_EXPORT proto_service_start (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_sql_interprete	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef void        ISC_EXPORT proto_sql_interprete (short,$/;"	t	namespace:ibpp_internals
proto_sqlcode	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_LONG    ISC_EXPORT proto_sqlcode (ISC_STATUS *);$/;"	t	namespace:ibpp_internals
proto_start_multiple	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_STATUS  ISC_EXPORT proto_start_multiple (ISC_STATUS *,$/;"	t	namespace:ibpp_internals
proto_vax_integer	drivers/Firebird/ibpp/core/_ibpp.h	/^typedef ISC_LONG    ISC_EXPORT proto_vax_integer (char *,$/;"	t	namespace:ibpp_internals
protocol	drivers/Firebird/ibpp/core/ibase.h	/^	int protocol;				\/* protocol to use for connection *\/$/;"	m	struct:__anon65
proxyBreakConchLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyBreakConchLock(unixFile *pFile, uuid_t myHostID){$/;"	f	file:
proxyCheckReservedLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
proxyClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyClose(sqlite3_file *id) {$/;"	f	file:
proxyConchLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyConchLock(unixFile *pFile, uuid_t myHostID, int lockType){$/;"	f	file:
proxyCreateConchPathname	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyCreateConchPathname(char *dbPath, char **pConchPath){$/;"	f	file:
proxyCreateLockPath	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyCreateLockPath(const char *lockPath){$/;"	f	file:
proxyCreateUnixFile	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyCreateUnixFile($/;"	f	file:
proxyFileControl	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
proxyGetDbPathForUnixFile	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyGetDbPathForUnixFile(unixFile *pFile, char *dbPath){$/;"	f	file:
proxyGetHostID	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyGetHostID(unsigned char *pHostID, int *pError){$/;"	f	file:
proxyGetLockPath	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyGetLockPath(const char *dbPath, char *lPath, size_t maxLen){$/;"	f	file:
proxyLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
proxyLockingContext	drivers/SQLite/sqlite3/sqlite3.c	/^struct proxyLockingContext {$/;"	s	file:
proxyLockingContext	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct proxyLockingContext proxyLockingContext;$/;"	t	typeref:struct:proxyLockingContext	file:
proxyReleaseConch	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyReleaseConch(unixFile *pFile){$/;"	f	file:
proxyTakeConch	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyTakeConch(unixFile *pFile){$/;"	f	file:
proxyTransformUnixFile	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyTransformUnixFile(unixFile *pFile, const char *path) {$/;"	f	file:
proxyUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^static int proxyUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
prs	kernel/TeProjection.h	/^	double  prs;         \/\/!< Radius of satellite orbit (m) (used in Satellite)$/;"	m	struct:TeProjectionParams
pscn	kernel/TeProjection.h	/^	double  pscn;        \/\/!< Scanning mode: 0-WE\/NS, 1-SN\/EW (used in Satellite)$/;"	m	struct:TeProjectionParams
pseudoTableReg	drivers/SQLite/sqlite3/sqlite3.c	/^  int pseudoTableReg;   \/* Register holding pseudotable content. *\/$/;"	m	struct:VdbeCursor	file:
pt1	kernel/TeCoord2D.h	/^	TeCoord2D pt1;	\/\/!< First coordinate value.$/;"	m	struct:TeCoordPair
pt2	kernel/TeCoord2D.h	/^	TeCoord2D pt2;	\/\/!< Second coordinate value.$/;"	m	struct:TeCoordPair
ptAngle	kernel/TeVisual.h	/^	virtual int   ptAngle() $/;"	f	class:TeVisual
ptAngle	kernel/TeVisual.h	/^	virtual void  ptAngle(int p) $/;"	f	class:TeVisual
ptAngle_	kernel/TeVisual.h	/^	int			ptAngle_;				$/;"	m	class:TeBaseVisualParams
pt_	functions/TeAddressLocator.h	/^	TeCoord2D pt_;					\/\/!< point location of the address$/;"	m	struct:TeAddressDescription
pthreadMutexAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3_mutex *pthreadMutexAlloc(int iType){$/;"	f	file:
pthreadMutexEnd	drivers/SQLite/sqlite3/sqlite3.c	/^static int pthreadMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexEnter	drivers/SQLite/sqlite3/sqlite3.c	/^static void pthreadMutexEnter(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void pthreadMutexFree(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexHeld	drivers/SQLite/sqlite3/sqlite3.c	/^static int pthreadMutexHeld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int pthreadMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexLeave	drivers/SQLite/sqlite3/sqlite3.c	/^static void pthreadMutexLeave(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexNotheld	drivers/SQLite/sqlite3/sqlite3.c	/^static int pthreadMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexTry	drivers/SQLite/sqlite3/sqlite3.c	/^static int pthreadMutexTry(sqlite3_mutex *p){$/;"	f	file:
pthread_attr_create	drivers/GL/vms_x_fix.h	692;"	d
pthread_attr_delete	drivers/GL/vms_x_fix.h	693;"	d
pthread_attr_destroy	drivers/GL/vms_x_fix.h	694;"	d
pthread_attr_getdetach_np	drivers/GL/vms_x_fix.h	695;"	d
pthread_attr_getguardsize_np	drivers/GL/vms_x_fix.h	696;"	d
pthread_attr_getinheritsched	drivers/GL/vms_x_fix.h	697;"	d
pthread_attr_getprio	drivers/GL/vms_x_fix.h	698;"	d
pthread_attr_getsched	drivers/GL/vms_x_fix.h	699;"	d
pthread_attr_getschedparam	drivers/GL/vms_x_fix.h	700;"	d
pthread_attr_getschedpolicy	drivers/GL/vms_x_fix.h	821;"	d
pthread_attr_getstacksize	drivers/GL/vms_x_fix.h	701;"	d
pthread_attr_init	drivers/GL/vms_x_fix.h	702;"	d
pthread_attr_setdetach_np	drivers/GL/vms_x_fix.h	703;"	d
pthread_attr_setdetachstate	drivers/GL/vms_x_fix.h	704;"	d
pthread_attr_setguardsize_np	drivers/GL/vms_x_fix.h	705;"	d
pthread_attr_setinheritsched	drivers/GL/vms_x_fix.h	706;"	d
pthread_attr_setprio	drivers/GL/vms_x_fix.h	707;"	d
pthread_attr_setsched	drivers/GL/vms_x_fix.h	708;"	d
pthread_attr_setschedparam	drivers/GL/vms_x_fix.h	709;"	d
pthread_attr_setschedpolicy	drivers/GL/vms_x_fix.h	710;"	d
pthread_attr_setstacksize	drivers/GL/vms_x_fix.h	711;"	d
pthread_cancel	drivers/GL/vms_x_fix.h	712;"	d
pthread_cancel_e	drivers/GL/vms_x_fix.h	713;"	d
pthread_cond_broadcast	drivers/GL/vms_x_fix.h	714;"	d
pthread_cond_destroy	drivers/GL/vms_x_fix.h	715;"	d
pthread_cond_init	drivers/GL/vms_x_fix.h	716;"	d
pthread_cond_sig_preempt_int_np	drivers/GL/vms_x_fix.h	717;"	d
pthread_cond_signal	drivers/GL/vms_x_fix.h	718;"	d
pthread_cond_signal_int_np	drivers/GL/vms_x_fix.h	719;"	d
pthread_cond_timedwait	drivers/GL/vms_x_fix.h	720;"	d
pthread_cond_wait	drivers/GL/vms_x_fix.h	721;"	d
pthread_condattr_create	drivers/GL/vms_x_fix.h	722;"	d
pthread_condattr_delete	drivers/GL/vms_x_fix.h	723;"	d
pthread_condattr_init	drivers/GL/vms_x_fix.h	724;"	d
pthread_create	drivers/GL/vms_x_fix.h	725;"	d
pthread_delay_np	drivers/GL/vms_x_fix.h	726;"	d
pthread_detach	drivers/GL/vms_x_fix.h	727;"	d
pthread_equal	drivers/GL/vms_x_fix.h	728;"	d
pthread_exc_fetch_fp_np	drivers/GL/vms_x_fix.h	729;"	d
pthread_exc_handler_np	drivers/GL/vms_x_fix.h	730;"	d
pthread_exc_pop_ctx_np	drivers/GL/vms_x_fix.h	731;"	d
pthread_exc_push_ctx_np	drivers/GL/vms_x_fix.h	732;"	d
pthread_exc_savecontext_np	drivers/GL/vms_x_fix.h	733;"	d
pthread_exit	drivers/GL/vms_x_fix.h	734;"	d
pthread_get_expiration_np	drivers/GL/vms_x_fix.h	735;"	d
pthread_getprio	drivers/GL/vms_x_fix.h	736;"	d
pthread_getschedparam	drivers/GL/vms_x_fix.h	737;"	d
pthread_getscheduler	drivers/GL/vms_x_fix.h	738;"	d
pthread_getspecific	drivers/GL/vms_x_fix.h	739;"	d
pthread_getunique_np	drivers/GL/vms_x_fix.h	740;"	d
pthread_join	drivers/GL/vms_x_fix.h	741;"	d
pthread_join32	drivers/GL/vms_x_fix.h	742;"	d
pthread_key_create	drivers/GL/vms_x_fix.h	744;"	d
pthread_key_delete	drivers/GL/vms_x_fix.h	822;"	d
pthread_keycreate	drivers/GL/vms_x_fix.h	743;"	d
pthread_kill	drivers/GL/vms_x_fix.h	745;"	d
pthread_lock_global_np	drivers/GL/vms_x_fix.h	746;"	d
pthread_mutex_destroy	drivers/GL/vms_x_fix.h	747;"	d
pthread_mutex_init	drivers/GL/vms_x_fix.h	748;"	d
pthread_mutex_lock	drivers/GL/vms_x_fix.h	749;"	d
pthread_mutex_trylock	drivers/GL/vms_x_fix.h	750;"	d
pthread_mutex_unlock	drivers/GL/vms_x_fix.h	751;"	d
pthread_mutexattr_create	drivers/GL/vms_x_fix.h	752;"	d
pthread_mutexattr_delete	drivers/GL/vms_x_fix.h	753;"	d
pthread_mutexattr_destroy	drivers/GL/vms_x_fix.h	754;"	d
pthread_mutexattr_getkind_np	drivers/GL/vms_x_fix.h	755;"	d
pthread_mutexattr_init	drivers/GL/vms_x_fix.h	756;"	d
pthread_mutexattr_setkind_np	drivers/GL/vms_x_fix.h	757;"	d
pthread_mutexattr_settype_np	drivers/GL/vms_x_fix.h	758;"	d
pthread_once	drivers/GL/vms_x_fix.h	759;"	d
pthread_resume_np	drivers/GL/vms_x_fix.h	760;"	d
pthread_self	drivers/GL/vms_x_fix.h	761;"	d
pthread_setasynccancel	drivers/GL/vms_x_fix.h	762;"	d
pthread_setcancel	drivers/GL/vms_x_fix.h	763;"	d
pthread_setcancelstate	drivers/GL/vms_x_fix.h	764;"	d
pthread_setprio	drivers/GL/vms_x_fix.h	765;"	d
pthread_setschedparam	drivers/GL/vms_x_fix.h	766;"	d
pthread_setscheduler	drivers/GL/vms_x_fix.h	767;"	d
pthread_setspecific	drivers/GL/vms_x_fix.h	768;"	d
pthread_suspend_np	drivers/GL/vms_x_fix.h	769;"	d
pthread_testcancel	drivers/GL/vms_x_fix.h	770;"	d
pthread_unlock_global_np	drivers/GL/vms_x_fix.h	771;"	d
pthread_yield	drivers/GL/vms_x_fix.h	772;"	d
pthread_yield_np	drivers/GL/vms_x_fix.h	773;"	d
ptr	drivers/Oracle/OCI/include/occiAQ.h	/^     Ptr<AgentImpl> ptr;$/;"	m	class:oracle::occi::aq::Agent
ptr	drivers/Oracle/OCI/include/occiAQ.h	/^     Ptr<ConsumerImpl> ptr; $/;"	m	class:oracle::occi::aq::Consumer
ptr	drivers/Oracle/OCI/include/occiAQ.h	/^     Ptr<MessageImpl> ptr;$/;"	m	class:oracle::occi::aq::Message
ptr	drivers/Oracle/OCI/include/occiAQ.h	/^     Ptr<ProducerImpl> ptr; $/;"	m	class:oracle::occi::aq::Producer
ptr	drivers/Oracle/OCI/include/occiAQ.h	/^    Ptr<SubscriptionImpl> ptr;$/;"	m	class:oracle::occi::aq::Subscription
ptr	drivers/Oracle/OCI/include/occiObjects.h	/^T* Ref<T>::ptr()$/;"	f	class:oracle::occi::Ref
ptr	drivers/Oracle/OCI/include/occiObjects.h	/^const T* Ref<T>::ptr() const$/;"	f	class:oracle::occi::Ref
ptr_	drivers/Oracle/OCI/include/occiControl.h	/^  Ptr<SQLExceptionImpl> ptr_;$/;"	m	class:oracle::occi::SQLException
ptr_	drivers/Oracle/OCI/include/occiData.h	/^  Ptr<BytesImpl> ptr_;$/;"	m	class:oracle::occi::Bytes
ptrmapGet	drivers/SQLite/sqlite3/sqlite3.c	/^static int ptrmapGet(BtShared *pBt, Pgno key, u8 *pEType, Pgno *pPgno){$/;"	f	file:
ptrmapGet	drivers/SQLite/sqlite3/sqlite3.c	48928;"	d	file:
ptrmapPageno	drivers/SQLite/sqlite3/sqlite3.c	/^static Pgno ptrmapPageno(BtShared *pBt, Pgno pgno){$/;"	f	file:
ptrmapPut	drivers/SQLite/sqlite3/sqlite3.c	/^static void ptrmapPut(BtShared *pBt, Pgno key, u8 eType, Pgno parent, int *pRC){$/;"	f	file:
ptrmapPut	drivers/SQLite/sqlite3/sqlite3.c	48927;"	d	file:
ptrmapPutOvflPtr	drivers/SQLite/sqlite3/sqlite3.c	/^static void ptrmapPutOvflPtr(MemPage *pPage, u8 *pCell, int *pRC){$/;"	f	file:
ptrmapPutOvflPtr	drivers/SQLite/sqlite3/sqlite3.c	48929;"	d	file:
ptsdist_	kernel/TeTin.h	/^	double				ptsdist_;		\/\/! Distance between points of isoline$/;"	m	class:TeTin
pub	drivers/libjpeg/jmemdstsrc.h	/^	struct jpeg_source_mgr pub;   $/;"	m	struct:__anon37	typeref:struct:__anon37::jpeg_source_mgr
pub	drivers/libjpeg/jmemdstsrc.h	/^  struct jpeg_destination_mgr pub;	\/* public fields *\/$/;"	m	struct:__anon36	typeref:struct:__anon36::jpeg_destination_mgr
pub_nzttIdentityDesc	drivers/Oracle/OCI/include/nzt.h	/^   ub1 *pub_nzttIdentityDesc;             \/* Type specific identity *\/$/;"	m	struct:nzttIdentityDesc
publen_nzttIdentityDesc	drivers/Oracle/OCI/include/nzt.h	/^   ub4 publen_nzttIdentityDesc;        \/* Length of identity *\/$/;"	m	struct:nzttIdentityDesc
push	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::push(TeQtTextEdit t)$/;"	f	class:TeQtMultiTextEdit
pushOntoSorter	drivers/SQLite/sqlite3/sqlite3.c	/^static void pushOntoSorter($/;"	f	file:
put2byte	drivers/SQLite/sqlite3/sqlite3.c	47802;"	d	file:
put32bits	drivers/SQLite/sqlite3/sqlite3.c	38354;"	d	file:
put4byte	drivers/SQLite/sqlite3/sqlite3.c	47804;"	d	file:
putColorOnGrid	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::putColorOnGrid(set<string> uidSet, set<string> oidSet, string operation, string \/* attrQuery *\/)     $/;"	f	class:TeQtGrid
putColorOnLegend	drivers/qt/TeQtLegendSource.cpp	/^void TeQtLegendSource::putColorOnLegend(string& groupingColors, bool invertColor)$/;"	f	class:TeQtLegendSource
putColorOnLegend	drivers/qt/TeQtLegendSource.cpp	/^void TeQtLegendSource::putColorOnLegend(vector<ColorBar>& iColorVec, vector<ColorBar>& iColorBVec)$/;"	f	class:TeQtLegendSource
putRasterBlock	drivers/gdal/TeGDALDecoder.cpp	/^bool TeGDALDecoder::putRasterBlock(const TeBlockIndex& \/*index*\/, void* \/*buf*\/, long \/*bsize*\/)$/;"	f	class:TeGDALDecoder
putRasterBlock	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::putRasterBlock(const TeBlockIndex& index, void *block, long bsize)$/;"	f	class:TeDecoderDatabase
putRasterBlock	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::putRasterBlock(const string& index, void *block, long bsize)$/;"	f	class:TeDecoderDatabase
putRasterBlock	kernel/TeDecoderFile.cpp	/^TeDecoderFile::putRasterBlock(const TeBlockIndex& index, void *buf, long bsize)$/;"	f	class:TeDecoderFile
putVarint	drivers/SQLite/sqlite3/sqlite3.c	11627;"	d	file:
putVarint32	drivers/SQLite/sqlite3/sqlite3.c	11625;"	d	file:
putb	drivers/Firebird/ibpp/core/ibase.h	220;"	d
putbx	drivers/Firebird/ibpp/core/ibase.h	221;"	d
pwidth_	drivers/qt/TeQtGraph.h	/^	int	pwidth_;$/;"	m	class:TeQtGraphPlot
pyaw	kernel/TeProjection.h	/^	double  pyaw;        \/\/!< Grid orientation, i.e., angle in radians between the increasing y axis and the meridian of the sub-satellite point along the direction of increasing latitude (used in Satellite)$/;"	m	struct:TeProjectionParams
pyramid_	image_processing/TePDIMallatWavelets.hpp	/^      mutable std::vector< TePDIMatrix< TePDIMatrix< double > > > pyramid_;    $/;"	m	class:TePDIMallatWavelets
pzErrMsg	drivers/SQLite/sqlite3/sqlite3.c	/^  char **pzErrMsg;    \/* Error message stored here *\/$/;"	m	struct:__anon47	file:
qimage_	drivers/qt/TeQtCanvas.h	/^	QImage		qimage_;$/;"	m	class:TeQtCanvas
qtmain_widget_ptr_	drivers/spl/PluginParameters.h	/^      QMainWindow* qtmain_widget_ptr_;$/;"	m	class:PluginParameters
qualityFactor_	kernel/TeDecoderJPEG.h	/^  unsigned int qualityFactor_; $/;"	m	class:TeDecoderJPEG
quality_	drivers/qt/TeQtGLWidget.h	/^	int quality_;$/;"	m	class:TeQtGLWidget
quallen_nzttIdentityDesc	drivers/Oracle/OCI/include/nzt.h	/^   ub4 quallen_nzttIdentityDesc;       \/* Length of trust qualifier *\/$/;"	m	struct:nzttIdentityDesc
query	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebirdPortal::query (const string &q, TeCursorLocation \/*l*\/, TeCursorType  \/*t*\/, TeCursorEditType e, TeCursorDataType \/*dt*\/)$/;"	f	class:TeFirebirdPortal
query	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQLPortal::query (const string &q, TeCursorLocation \/* l *\/, TeCursorType \/* t *\/, TeCursorEditType \/* e *\/, TeCursorDataType \/*dt*\/)$/;"	f	class:TeMySQLPortal
query	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::query(const string& query)$/;"	f	class:TeOCICursor
query	drivers/Oracle/TeOCIOracle.cpp	/^bool TeOCIOraclePortal::query (const string &q,TeCursorLocation \/* l *\/ , TeCursorType \/* t *\/, TeCursorEditType \/* e *\/, TeCursorDataType \/* dt *\/)  \/\/Ok$/;"	f	class:TeOCIOraclePortal
query	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQLPortal::query(const string &qry, TeCursorLocation l, TeCursorType t, TeCursorEditType \/* e *\/, TeCursorDataType dt)$/;"	f	class:TePostgreSQLPortal
query	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLitePortal::query(const string &qry, TeCursorLocation l, TeCursorType t, TeCursorEditType e, TeCursorDataType dt)$/;"	f	class:TeSQLitePortal
query	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::query (const string &qry, TeCursorLocation l, TeCursorType \/* t *\/, TeCursorEditType  e , TeCursorDataType \/* dt *\/  )$/;"	f	class:TeAdoPortal
query	drivers/ado/TeAdoFireBird.cpp	/^TeFireBirdPortal::query (const string &qry, TeCursorLocation l, TeCursorType t, TeCursorEditType e )$/;"	f	class:TeFireBirdPortal
query	drivers/ado/TeAdoOracle.cpp	/^TeOraclePortal::query (const string &qry, TeCursorLocation l, TeCursorType \/* t *\/, TeCursorEditType \/* e *\/, TeCursorDataType \/*dt *\/ )$/;"	f	class:TeOraclePortal
queryAddresses	functions/TeAddressLocator.cpp	/^void TeAddressLocator::queryAddresses(const string& strSQL, bool& queryExecuted, vector<TeAddressDescription>& addressesFound)$/;"	f	class:TeAddressLocator
queryAndPointingLegend	kernel/TeAbstractTheme.h	/^	virtual TeLegendEntry& queryAndPointingLegend () $/;"	f	class:TeAbstractTheme
queryAndPointingLegend	kernel/TeAbstractTheme.h	/^	virtual void queryAndPointingLegend (TeLegendEntry &leg) $/;"	f	class:TeAbstractTheme
queryAndPointingLegend_	kernel/TeAbstractTheme.h	/^	TeLegendEntry		queryAndPointingLegend_;		\/\/group(-6)$/;"	m	class:TeAbstractTheme
queryFrameTracking	drivers/GL/dri_interface.h	/^    int (*queryFrameTracking)(__DRInativeDisplay *dpy, void *drawablePrivate,$/;"	m	struct:__DRIdrawableRec
queryFrameTracking	drivers/GL/internal/dri_interface.h	/^    int (*queryFrameTracking)(__DRInativeDisplay *dpy, void *drawablePrivate,$/;"	m	struct:__DRIdrawableRec
queryLegend	kernel/TeAbstractTheme.h	/^	virtual TeLegendEntry& queryLegend () $/;"	f	class:TeAbstractTheme
queryLegend	kernel/TeAbstractTheme.h	/^	virtual void queryLegend (TeLegendEntry &leg) $/;"	f	class:TeAbstractTheme
queryLegend_	kernel/TeAbstractTheme.h	/^	TeLegendEntry		queryLegend_;					\/\/group(-5) $/;"	m	class:TeAbstractTheme
querySDO	drivers/Oracle/TeOCICursor.cpp	/^bool TeOCICursor::querySDO(const string& query)$/;"	f	class:TeOCICursor
querySDO	drivers/Oracle/TeOracleSpatial.cpp	/^bool TeOracleSpatialPortal::querySDO (const string &q)  $/;"	f	class:TeOracleSpatialPortal
querySharedCacheTableLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int querySharedCacheTableLock(Btree *p, Pgno iTab, u8 eLock){$/;"	f	file:
querySharedCacheTableLock	drivers/SQLite/sqlite3/sqlite3.c	48166;"	d	file:
queryTestTokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^static int queryTestTokenizer($/;"	f	file:
queryTokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^int queryTokenizer($/;"	f	file:
queryType	drivers/Oracle/TeOCIConnect.cpp	/^int TeOCIConnection::queryType()  $/;"	f	class:TeOCIConnection
queryType	drivers/Oracle/TeOCICursor.cpp	/^int TeOCICursor::queryType()  $/;"	f	class:TeOCICursor
query_	drivers/Firebird/TeFirebird.h	/^				query_;$/;"	m	class:TeFirebirdPortal
quinticInterpolation	kernel/TeTin.cpp	/^TeTin::quinticInterpolation(TeRaster*& grid, int interpolator)$/;"	f	class:TeTin
quoteFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void quoteFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
r	drivers/SQLite/sqlite3/sqlite3.c	/^    double r;       \/* Value if eType is SQLITE_FLOAT *\/$/;"	m	union:IndexSample::__anon41	file:
r	drivers/SQLite/sqlite3/sqlite3.c	/^  double r;           \/* Real value *\/$/;"	m	struct:Mem	file:
r	kernel/TeRepresentation.h	/^	TeGeomRep r;$/;"	m	class:TeRepres_eq
r1Histogram_	image_processing/TePDIJointHistogram.hpp	/^      TePDIHistogram r1Histogram_;$/;"	m	class:TePDIJointHistogram
r2Histogram_	image_processing/TePDIJointHistogram.hpp	/^      TePDIHistogram r2Histogram_;$/;"	m	class:TePDIJointHistogram
rCost	drivers/SQLite/sqlite3/sqlite3.c	/^  double rCost;      \/* Overall cost of pursuing this search strategy *\/$/;"	m	struct:WhereCost	file:
rSum	drivers/SQLite/sqlite3/sqlite3.c	/^  double rSum;      \/* Floating point sum *\/$/;"	m	struct:SumCtx	file:
rTree_	kernel/TeBaseSTInstanceSet.h	/^	TeSAM::TeRTree<int>*			rTree_;		$/;"	m	class:TeBaseSTInstanceSet
rValue	drivers/SQLite/sqlite3/sqlite3.c	/^  double rValue;                  \/* Constraint value. *\/$/;"	m	struct:RtreeConstraint	file:
radius	kernel/TeDatum.h	/^	double radius() const$/;"	f	class:TeDatum
radius	kernel/TeDatum.h	/^	void radius(const double rd) $/;"	f	class:TeDatum
radius1_	stat/TeKernelFunctions.h	/^  double					        radius1_;$/;"	m	class:TeStatKernelRatio
radius2_	stat/TeKernelFunctions.h	/^  double				        	radius2_;$/;"	m	class:TeStatKernelRatio
radiusValue1_	stat/TeKernelParams.h	/^	double					radiusValue1_;			\/\/ radius value if the kernel is not adaptative $/;"	m	struct:TeKernelParams
radiusValue2_	stat/TeKernelParams.h	/^	double					radiusValue2_;			\/\/ radius value if the kernel is not adaptative $/;"	m	struct:TeKernelParams
radius_	stat/TeKernelFunctions.h	/^  double               radius_;$/;"	m	class:TeStatKernel
raise	drivers/Firebird/ibpp/core/exception.cpp	/^void ExceptionBase::raise(const std::string& context, const char* message, va_list argptr)$/;"	f	class:ExceptionBase
ramLinesIndexesVecSize_	image_processing/TePDIMatrix.hpp	/^      unsigned int ramLinesIndexesVecSize_;      $/;"	m	class:TePDIMatrix
ramLinesIndexesVec_	image_processing/TePDIMatrix.hpp	/^      unsigned int* ramLinesIndexesVec_;$/;"	m	class:TePDIMatrix
ramTilesIndexesVec_	kernel/TeRasterMemManager.h	/^      std::vector< unsigned int > ramTilesIndexesVec_;$/;"	m	class:TeRasterMemManager
rand_int32	utils/mtrand.h	/^inline unsigned long MTRand_int32::rand_int32() { \/\/ generate 32 bit random int$/;"	f	class:MTRand_int32
randomAccessIterator	kernel/dynpq.h	/^		typedef typename std::vector<key_type>::iterator randomAccessIterator;$/;"	t	class:br_stl::dynamic_priority_queue
randomBlob	drivers/SQLite/sqlite3/sqlite3.c	/^static void randomBlob($/;"	f	file:
randomByte	drivers/SQLite/sqlite3/sqlite3.c	/^static u8 randomByte(void){$/;"	f	file:
randomFill	drivers/SQLite/sqlite3/sqlite3.c	/^static void randomFill(char *pBuf, int nByte){$/;"	f	file:
randomFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void randomFunc($/;"	f	file:
randomness	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines	file:
randomness	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines
range	image_processing/TePDIHants.cpp	/^  double *range;$/;"	v
range_	kernel/TeRasterTransform.h	/^		std::vector<double> range_;$/;"	m	class:TeRasterTransform
ransacRemotion	kernel/TeGeometricTransformation.cpp	/^bool TeGeometricTransformation::ransacRemotion( $/;"	f	class:TeGeometricTransformation
ranval	image_processing/TePDIBaatz.cpp	/^float ranval(float low, $/;"	f
raster	functions/TeCellAlgorithms.h	/^		TeRaster* raster;$/;"	m	class:TeBoxRasterIterator
raster	kernel/TeLayer.cpp	/^TeLayer::raster( TeRaster* raster)$/;"	f	class:TeLayer
raster	kernel/TeLayer.cpp	/^TeLayer::raster(const string& objectId, const char& mode)$/;"	f	class:TeLayer
raster	stat/TeStatDataStructures.h	/^	TeRaster* raster()$/;"	f	class:TeKernelGridSupport
raster1ChannelsVec_	image_processing/TePDIBlender.hpp	/^      std::vector< unsigned int > raster1ChannelsVec_;$/;"	m	class:TePDIBlender
raster1Ptr_	image_processing/TePDIBlender.hpp	/^      TePDITypes::TePDIRasterPtrType raster1Ptr_;$/;"	m	class:TePDIBlender
raster2ChannelsVec_	image_processing/TePDIBlender.hpp	/^      std::vector< unsigned int > raster2ChannelsVec_;$/;"	m	class:TePDIBlender
raster2Ptr_	image_processing/TePDIBlender.hpp	/^      TePDITypes::TePDIRasterPtrType raster2Ptr_;$/;"	m	class:TePDIBlender
raster2Tiff	image_processing/TePDICorrelationMatching.cpp	/^void TePDICorrelationMatching::raster2Tiff( $/;"	f	class:TePDICorrelationMatching
raster2Tiff	image_processing/TePDIMIMatching.cpp	/^void TePDIMIMatching::raster2Tiff( $/;"	f	class:TePDIMIMatching
raster2Tiff	image_processing/TePDIOFMatching.cpp	/^void TePDIOFMatching::raster2Tiff( $/;"	f	class:TePDIOFMatching
rasterBand_	image_processing/TePDIArithmetic.hpp	/^          unsigned int rasterBand_;$/;"	m	class:TePDIArithmetic::ExecStackElement
rasterChn_	image_processing/TePDIRasterRUBuffer.hpp	/^      unsigned int rasterChn_;$/;"	m	class:TePDIRasterRUBuffer
rasterCompare	image_processing/TePDIUtils.cpp	/^  bool rasterCompare( TePDITypes::TePDIRasterPtrType& raster1,$/;"	f	namespace:TePDIUtils
rasterImp_	stat/TeStatDataStructures.h	/^	TeRaster* rasterImp_;$/;"	m	class:TeKernelGridSupport
rasterIn_	kernel/TeRasterRemap.h	/^	TeRaster*	rasterIn_;		\/\/!< input raster$/;"	m	class:TeRasterRemap
rasterIn_	kernel/TeRasterTransform.h	/^	TeRaster* rasterIn_;			$/;"	m	class:TeRasterTransform
rasterMaxGray_	image_processing/TePDIHaralick.hpp	/^          double rasterMaxGray_;$/;"	m	class:TePDIHaralick::GLCMMatrixCacheNodeT
rasterMinGray_	image_processing/TePDIHaralick.hpp	/^          double rasterMinGray_;$/;"	m	class:TePDIHaralick::GLCMMatrixCacheNodeT
rasterOut_	kernel/TeRasterRemap.h	/^	TeRaster*	rasterOut_;		\/\/!< output raster$/;"	m	class:TeRasterRemap
rasterOut_	kernel/TeRasterTransform.h	/^	TeRaster* rasterOut_;$/;"	m	class:TeRasterTransform
rasterPtr_	image_processing/TePDIArithmetic.hpp	/^          TePDITypes::TePDIRasterPtrType rasterPtr_;$/;"	m	class:TePDIArithmetic::ExecStackElement
rasterPtr_	image_processing/TePDIBatchGeoMosaic.hpp	/^          TePDITypes::TePDIRasterPtrType rasterPtr_;$/;"	m	class:TePDIBatchGeoMosaic::RastersListNodeT
rasterPtr_	image_processing/TePDIRasterRUBuffer.hpp	/^      TeRaster* rasterPtr_;$/;"	m	class:TePDIRasterRUBuffer
rasterVisual	kernel/TeAbstractTheme.h	/^	virtual TeRasterTransform* rasterVisual() $/;"	f	class:TeAbstractTheme
rasterVisual	kernel/TeAbstractTheme.h	/^	virtual void rasterVisual(TeRasterTransform* r) $/;"	f	class:TeAbstractTheme
rasterVisual_	kernel/TeAbstractTheme.h	/^	TeRasterTransform*	rasterVisual_;$/;"	m	class:TeAbstractTheme
raster_	image_processing/TePDIRaster2Vector.hpp	/^      TePDITypes::TePDIRasterPtrType raster_;$/;"	m	class:TePDIRaster2Vector
raster_	kernel/TeFileTheme.h	/^	TeRaster*			raster_;		\/\/ a pointer to a raster file$/;"	m	class:TeFileTheme
raster_	kernel/TeLayer.h	/^	TeRaster*	raster_;				\/\/!< layer raster representation$/;"	m	class:TeLayer
raster_	kernel/TeRaster.cpp	/^	TeRaster*		raster_;$/;"	m	class:TeStrategic	file:
raster_	kernel/TeRaster.h	/^			TeRaster* raster_;$/;"	m	class:TeRaster::iterator
raster_channel_	image_processing/TePDIRaster2Vector.hpp	/^      unsigned int raster_channel_;$/;"	m	class:TePDIRaster2Vector
raster_mean	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::raster_mean(TePDITypes::TePDIRasterPtrType raster, int band, double& mean)$/;"	f	class:TePDIFusionIndexes
raster_uses_dummy_	image_processing/TePDIInterpolator.hpp	/^      bool raster_uses_dummy_;$/;"	m	class:TePDIInterpolator
raster_uses_dummy_	image_processing/TePDIRaster2Vector.hpp	/^      bool raster_uses_dummy_;$/;"	m	class:TePDIRaster2Vector
rasters_	image_processing/TePDIStatistic.hpp	/^      TePDITypes::TePDIRasterVectorType rasters_;$/;"	m	class:TePDIStatistic
rasters_difference	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::rasters_difference(TePDITypes::TePDIRasterPtrType raster1, int band1, TePDITypes::TePDIRasterPtrType raster2, int band2, TePDITypes::TePDIRasterPtrType raster_diff, int band_diff)$/;"	f	class:TePDIFusionIndexes
rate_	drivers/qt/TeQtAnimaThread.h	/^	int			rate_;$/;"	m	class:TeQtAnimaThread
rawPtr_	drivers/Oracle/OCI/include/occiCommon.h	/^const T* rawPtr_;$/;"	m	class:oracle::occi::ConstPtr
rbegin	kernel/TeComposite.h	/^	reverse_iterator rbegin(void) $/;"	f	class:TeComposite
rbegin	kernel/TeGeometry.h	/^	typename TeComposite<T>::reverse_iterator rbegin()$/;"	f	class:TeGeomComposite
rc	drivers/Oracle/OCI/include/ocidfn.h	/^    ub2          rc;                                       \/* V7 return code *\/$/;"	m	struct:cda_def
rc	drivers/Oracle/OCI/include/ocidfn.h	/^    ub2          rc;$/;"	m	struct:cda_head
rc	drivers/SQLite/sqlite3/sqlite3.c	/^  int rc;                  \/* Backup process error code *\/$/;"	m	struct:sqlite3_backup	file:
rc	drivers/SQLite/sqlite3/sqlite3.c	/^  int rc;                 \/* Value to return *\/$/;"	m	struct:Vdbe	file:
rc	drivers/SQLite/sqlite3/sqlite3.c	/^  int rc;              \/* Return code from execution *\/$/;"	m	struct:Parse	file:
rc	drivers/SQLite/sqlite3/sqlite3.c	/^  int rc;             \/* Result code stored here *\/$/;"	m	struct:__anon47	file:
rc	drivers/SQLite/sqlite3/sqlite3.c	/^  int rc;            \/* Return code from sqlite3_exec() *\/$/;"	m	struct:TabResult	file:
rcs1	drivers/Oracle/OCI/include/ocidfn.h	/^    ub1          rcs1;                                        \/* filler area *\/$/;"	m	struct:cda_def
rcs1	drivers/Oracle/OCI/include/ocidfn.h	/^    ub1          rcs1;$/;"	m	struct:cda_head
rcs2	drivers/Oracle/OCI/include/ocidfn.h	/^    ub1          rcs2;                                           \/* reserved *\/$/;"	m	struct:cda_def
rcs2	drivers/Oracle/OCI/include/ocidfn.h	/^    ub1          rcs2;$/;"	m	struct:cda_head
rcs3	drivers/Oracle/OCI/include/ocidfn.h	/^    sword        rcs3;                                           \/* reserved *\/$/;"	m	struct:cda_def
rcs3	drivers/Oracle/OCI/include/ocidfn.h	/^    sword        rcs3;$/;"	m	struct:cda_head
rcs4	drivers/Oracle/OCI/include/ocidfn.h	/^           ub4    rcs4;$/;"	m	struct:cda_def::__anon87::__anon88
rcs4	drivers/Oracle/OCI/include/ocidfn.h	/^           ub4    rcs4;$/;"	m	struct:cda_head::__anon85::__anon86
rcs5	drivers/Oracle/OCI/include/ocidfn.h	/^           ub2    rcs5;$/;"	m	struct:cda_def::__anon87::__anon88
rcs5	drivers/Oracle/OCI/include/ocidfn.h	/^           ub2    rcs5;$/;"	m	struct:cda_head::__anon85::__anon86
rcs6	drivers/Oracle/OCI/include/ocidfn.h	/^           ub1    rcs6;$/;"	m	struct:cda_def::__anon87::__anon88
rcs6	drivers/Oracle/OCI/include/ocidfn.h	/^           ub1    rcs6;$/;"	m	struct:cda_head::__anon85::__anon86
rcs7	drivers/Oracle/OCI/include/ocidfn.h	/^        ub4    rcs7;$/;"	m	struct:cda_def::__anon87
rcs7	drivers/Oracle/OCI/include/ocidfn.h	/^        ub4    rcs7;$/;"	m	struct:cda_head::__anon85
rcs8	drivers/Oracle/OCI/include/ocidfn.h	/^        ub2    rcs8;$/;"	m	struct:cda_def::__anon87
rcs8	drivers/Oracle/OCI/include/ocidfn.h	/^        ub2    rcs8;$/;"	m	struct:cda_head::__anon85
rcs9	drivers/Oracle/OCI/include/ocidfn.h	/^    ub1          rcs9[CDA_SIZE - sizeof (struct cda_head)];        \/* filler *\/$/;"	m	struct:cda_def
rcsp	drivers/Oracle/OCI/include/ocidfn.h	/^    dvoid        *rcsp;                          \/* pointer to reserved area *\/$/;"	m	struct:cda_def
rcsp	drivers/Oracle/OCI/include/ocidfn.h	/^    dvoid        *rcsp;$/;"	m	struct:cda_head
rd	drivers/Oracle/OCI/include/ocidfn.h	/^        } rd;$/;"	m	struct:cda_def::__anon87	typeref:struct:cda_def::__anon87::__anon88
rd	drivers/Oracle/OCI/include/ocidfn.h	/^        } rd;$/;"	m	struct:cda_head::__anon85	typeref:struct:cda_head::__anon85::__anon86
rd	kernel/TeDatum.cpp	/^	double rd;$/;"	m	struct:SphParam	file:
rd_	kernel/TeDatum.h	/^	double	rd_,		\/\/!< Earth equatorial radius (m) $/;"	m	class:TeDatum
read32bits	drivers/SQLite/sqlite3/sqlite3.c	/^static int read32bits(sqlite3_file *fd, i64 offset, u32 *pRes){$/;"	f	file:
readAll	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readAll()$/;"	f	class:TeAsciiFile
readAngle	kernel/TeAsciiFile.cpp	/^double TeAsciiFile::readAngle(const std::string &value)$/;"	f	class:TeAsciiFile
readBlob	drivers/Oracle/TeOCICursor.cpp	/^TeOCICursor::readBlob(double **buffer)$/;"	f	class:TeOCICursor
readBlob	drivers/Oracle/TeOCICursor.cpp	/^TeOCICursor::readBlob(double *buffer, unsigned int& bufsize)$/;"	f	class:TeOCICursor
readBlob	drivers/Oracle/TeOCICursor.cpp	/^TeOCICursor::readBlob(unsigned char* buffer, unsigned int& bufsize, const string& blobCol)$/;"	f	class:TeOCICursor
readBlob	drivers/Oracle/TeOCICursor.cpp	/^TeOCICursor::readBlob(unsigned char* buffer, unsigned int& bufsize, unsigned int& blobCol)$/;"	f	class:TeOCICursor
readBox	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readBox() $/;"	f	class:TeAsciiFile
readChar	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readChar()$/;"	f	class:TeAsciiFile
readCoord	drivers/SQLite/sqlite3/sqlite3.c	/^static void readCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
readCoord2D	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readCoord2D ()$/;"	f	class:TeAsciiFile
readCoordPairVect2CSV	kernel/TeAsciiFile.cpp	/^bool TeAsciiFile::readCoordPairVect2CSV( TeCoordPairVect& coordsVec )$/;"	f	class:TeAsciiFile
readDbPage	drivers/SQLite/sqlite3/sqlite3.c	/^static int readDbPage(PgHdr *pPg){$/;"	f	file:
readFile	kernel/TeDecoderASCIIGrid.cpp	/^TeDecoderASCIIGrid::readFile(const string& filename)$/;"	f	class:TeDecoderASCIIGrid
readFile	kernel/TeDecoderSPR.cpp	/^TeDecoderSPR::readFile(const string& filename)$/;"	f	class:TeDecoderSPR
readFloat	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readFloat ()$/;"	f	class:TeAsciiFile
readFloatCSV	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readFloatCSV ( const char del )$/;"	f	class:TeAsciiFile
readFont	kernel/TeAsciiFile.cpp	/^std::string TeAsciiFile::readFont()$/;"	f	class:TeAsciiFile
readGTM	drivers/GTM/TeGTM.cpp	/^void TeGTM::readGTM()$/;"	f	class:TeGTM
readGTMGridDatum	drivers/GTM/TeGTM.cpp	/^void TeGTMGridDatum::readGTMGridDatum(FILE* file)$/;"	f	class:TeGTMGridDatum
readGTMHeader	drivers/GTM/TeGTM.cpp	/^void TeGTMHeader::readGTMHeader(FILE* file)$/;"	f	class:TeGTMHeader
readGTMInformationImages	drivers/GTM/TeGTM.cpp	/^void TeGTMInformationImages::readGTMInformationImages(FILE* file)$/;"	f	class:TeGTMInformationImages
readGTMLayers	drivers/GTM/TeGTM.cpp	/^void TeGTMLayers::readGTMLayers(FILE *file)$/;"	f	class:TeGTMLayers
readGTMRoutes	drivers/GTM/TeGTM.cpp	/^void TeGTMRoutes::readGTMRoutes(FILE *file)$/;"	f	class:TeGTMRoutes
readGTMTrackLogStyles	drivers/GTM/TeGTM.cpp	/^void TeGTMTrackLogStyles::readGTMTrackLogStyles(FILE *file)$/;"	f	class:TeGTMTrackLogStyles
readGTMTrackLogs	drivers/GTM/TeGTM.cpp	/^void TeGTMTrackLogs::readGTMTrackLogs(FILE* file)$/;"	f	class:TeGTMTrackLogs
readGTMUserIcons	drivers/GTM/TeGTM.cpp	/^void TeGTMUserIcons::readGTMUserIcons(FILE *file)$/;"	f	class:TeGTMUserIcons
readGTMWaypoints	drivers/GTM/TeGTM.cpp	/^void TeGTMWaypoints::readGTMWaypoints(FILE* file)$/;"	f	class:TeGTMWaypoints
readGTMWaypointsStyles	drivers/GTM/TeGTM.cpp	/^void TeGTMWaypointsStyles::readGTMWaypointsStyles(FILE* file)$/;"	f	class:TeGTMWaypointsStyles
readInt	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readInt ()$/;"	f	class:TeAsciiFile
readInt16	drivers/SQLite/sqlite3/sqlite3.c	/^static int readInt16(u8 *p){$/;"	f	file:
readInt64	drivers/SQLite/sqlite3/sqlite3.c	/^static i64 readInt64(u8 *p){$/;"	f	file:
readIntCSV	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readIntCSV ( const char del )$/;"	f	class:TeAsciiFile
readJournalHdr	drivers/SQLite/sqlite3/sqlite3.c	/^static int readJournalHdr($/;"	f	file:
readLine	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readLine ()$/;"	f	class:TeAsciiFile
readLock	drivers/SQLite/sqlite3/sqlite3.c	/^  i16 readLock;              \/* Which read lock is being held.  -1 for none *\/$/;"	m	struct:Wal	file:
readLut	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::readLut()$/;"	f	class:TeDecoderTIFF
readMasterJournal	drivers/SQLite/sqlite3/sqlite3.c	/^static int readMasterJournal(sqlite3_file *pJrnl, char *zMaster, u32 nMaster){$/;"	f	file:
readMetadataInformation	drivers/MrSID/TeDecoderMrSID.cpp	/^TeDecoderMrSID::readMetadataInformation()$/;"	f	class:TeDecoderMrSID
readNStringCSV	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readNStringCSV ( vector<string>& strlist, unsigned int n, const char sep)$/;"	f	class:TeAsciiFile
readOnly	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 readOnly;                \/* True for a read-only database *\/$/;"	m	struct:Pager	file:
readOnly	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 readOnly;               \/* WAL_RDWR, WAL_RDONLY, or WAL_SHM_RDONLY *\/$/;"	m	struct:Wal	file:
readOnly	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 readOnly;            \/* True for read-only statements *\/$/;"	m	struct:Vdbe	file:
readOnly	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 readOnly;          \/* True if the underlying file is readonly *\/$/;"	m	struct:BtShared	file:
readParameters	kernel/TeDecoderASCIIGrid.cpp	/^TeDecoderASCIIGrid::readParameters()$/;"	f	class:TeDecoderASCIIGrid
readParameters	kernel/TeDecoderSPR.cpp	/^TeDecoderSPR::readParameters()$/;"	f	class:TeDecoderSPR
readParametersFile	kernel/TeRasterParams.cpp	/^TeRasterParams::readParametersFile()$/;"	f	class:TeRasterParams
readProjection	drivers/MrSID/TeDecoderMrSID.cpp	/^TeDecoderMrSID::readProjection()$/;"	f	class:TeDecoderMrSID
readQuotedChar	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readQuotedChar()$/;"	f	class:TeAsciiFile
readQuotedString	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readQuotedString()$/;"	f	class:TeAsciiFile
readString	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readString ()$/;"	f	class:TeAsciiFile
readStringCSV	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readStringCSV( const char del, bool skip, const char skip_char )$/;"	f	class:TeAsciiFile
readStringCSVNoQuote	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readStringCSVNoQuote( const char del )$/;"	f	class:TeAsciiFile
readStringCSVNoSpace	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readStringCSVNoSpace( const char del )$/;"	f	class:TeAsciiFile
readStringList	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readStringList ( vector<string>& strlist )$/;"	f	class:TeAsciiFile
readStringListCSV	kernel/TeAsciiFile.cpp	/^TeAsciiFile::readStringListCSV ( vector<string>& strlist, const char sep)$/;"	f	class:TeAsciiFile
readStrip	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::readStrip(unsigned long strip)$/;"	f	class:TeDecoderTIFF
readTiffDirectory	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::readTiffDirectory()$/;"	f	class:TeDecoderTIFF
readTileImageContig	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::readTileImageContig(unsigned long tiler) $/;"	f	class:TeDecoderTIFF
read_history	drivers/SQLite/sqlite3/shell.c	62;"	d	file:
readline	drivers/SQLite/sqlite3/shell.c	60;"	d	file:
readpoint	drivers/SQLite/sqlite3/sqlite3.c	/^  FilePoint readpoint;            \/* Pointer to the end of the last xRead() *\/$/;"	m	struct:MemJournal	file:
readsTable	drivers/SQLite/sqlite3/sqlite3.c	/^static int readsTable(Parse *p, int iStartAddr, int iDb, Table *pTab){$/;"	f	file:
realConnect	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::realConnect(const string& host, const string& user, const string& password, const string& database, int port)$/;"	f	class:TePostgreSQL
realNumberValue_	image_processing/TePDIArithmetic.hpp	/^          double realNumberValue_;$/;"	m	class:TePDIArithmetic::ExecStackElement
realloc	drivers/GL/glcore.h	/^    void *(*realloc)(__GLcontext *gc, void *oldAddr, size_t newSize);$/;"	m	struct:__GLimportsRec
realloc	drivers/GL/glcore.h	/^    void *(*realloc)(void *oldAddr, size_t newSize);$/;"	m	struct:__GLdrawablePrivateRec
realloc	drivers/GL/internal/glcore.h	/^    void *(*realloc)(__GLcontext *gc, void *oldAddr, size_t newSize);$/;"	m	struct:__GLimportsRec
realloc	drivers/GL/internal/glcore.h	/^    void *(*realloc)(void *oldAddr, size_t newSize);$/;"	m	struct:__GLdrawablePrivateRec
realloc	drivers/SQLite/sqlite3/sqlite3.c	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines	file:
realloc	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines
rebuildSpatialIndex	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::rebuildSpatialIndex(const string &table)$/;"	f	class:TeOracleSpatial
recombineSeed	kernel/TeGeometricTransformation.cpp	/^bool TeGeometricTransformation::recombineSeed( std::vector<unsigned int>& seed, $/;"	f	class:TeGeometricTransformation
recomputeSlicing	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::recomputeSlicing ()$/;"	f	class:TeGeneralizedProxMatrix
recomputeWeights	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::recomputeWeights ()$/;"	f	class:TeGeneralizedProxMatrix
recordCount	drivers/PostgreSQL/TePGInterface.h	/^        int recordCount(void) const$/;"	f	class:TePGRecordset
recordSetId_	drivers/PostgreSQL/TePGInterface.h	/^		int recordSetId_;$/;"	m	class:TePGRecordset
recset_	drivers/ado/TeAdoDB.h	/^	ADODB::_RecordsetPtr	recset_;$/;"	m	class:TeAdoPortal
rectArea	kernel/TeRTree.h	/^		double rectArea(const TeBox& b) const$/;"	f	class:TeSAM::TeRTree
rectBrush_	drivers/qt/TeQtCanvas.h	/^	QBrush		rectBrush_;$/;"	m	class:TeQtCanvas
rectColor_	drivers/qt/TeQtCanvas.h	/^	QColor		rectColor_;$/;"	m	class:TeQtCanvas
rect_	drivers/qwt/TeQwtPlotPicker.h	/^	QRect rect_;$/;"	m	class:TeQwtPlotPicker
rect_	kernel/TeRTree.h	/^			TeBox rect_;	\/\/!<	Bounding box for branch or object (if this is a leaf).$/;"	m	struct:TeSAM::TeRTreeNode::TeRTreeBranch
rectangular_	drivers/GTM/TeGTM.h	/^	bool rectangular_, truegrid_, usernegrit_, useritalic_, usersublin_, usertachado_, map_;$/;"	m	class:TeGTMHeader
rects	drivers/GL/glcore.h	/^    __GLregionRect *rects;$/;"	m	struct:__GLdrawableRegionRec
rects	drivers/GL/internal/glcore.h	/^    __GLregionRect *rects;$/;"	m	struct:__GLdrawableRegionRec
redBits	drivers/GL/glcore.h	/^    GLint redBits, greenBits, blueBits, alphaBits;	\/* bits per comp *\/$/;"	m	struct:__GLcontextModesRec
redBits	drivers/GL/glxint.h	/^    GLint redBits, greenBits, blueBits, alphaBits;$/;"	m	struct:__GLXFBConfigRec
redBits	drivers/GL/internal/glcore.h	/^    GLint redBits, greenBits, blueBits, alphaBits;	\/* bits per comp *\/$/;"	m	struct:__GLcontextModesRec
redMask	drivers/GL/glcore.h	/^    GLuint redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLcontextModesRec
redMask	drivers/GL/glxint.h	/^    GLuint redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLXFBConfigRec
redMask	drivers/GL/glxint.h	/^    unsigned long redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLXvisualConfigRec
redMask	drivers/GL/internal/glcore.h	/^    GLuint redMask, greenMask, blueMask, alphaMask;$/;"	m	struct:__GLcontextModesRec
redPartNum_	kernel/TeIntersector.h	/^	unsigned int redPartNum_;		\/\/!< Line number in a polygon that a red segment belongs.$/;"	m	struct:TeINTERSECTOR2::TeBoundaryIP
redPolNum_	kernel/TeIntersector.h	/^	unsigned int redPolNum_;		\/\/!< Polygon number in a vector of polygons that a segment belongs.$/;"	m	struct:TeINTERSECTOR2::TeBoundaryIP
redSegNum_	kernel/TeIntersector.h	/^	unsigned int redSegNum_;		\/\/!< Red segment number.$/;"	m	struct:TeINTERSECTOR2::TeBoundaryIP
redSize	drivers/GL/glxint.h	/^    int redSize, greenSize, blueSize, alphaSize;$/;"	m	struct:__GLXvisualConfigRec
red_	image_processing/TePDIRgbPaletteNode.hpp	/^      unsigned int red_;$/;"	m	class:TePDIRgbPaletteNode
red_	kernel/TeVisual.h	/^	int red_;$/;"	m	struct:TeColor
red_size	drivers/GL/directfbgl.h	/^     int        red_size;$/;"	m	struct:__anon175
ref	drivers/Oracle/OCI/include/occiObjects.h	/^  OCIRef *ref;$/;"	m	class:oracle::occi::RefAny
ref	drivers/Oracle/OCI/include/occiObjects.h	/^  OCIRef *ref;$/;"	m	class:oracle::occi::RefImpl
ref	functions/TeCellAlgorithms.cpp	/^	TeCellSet::iterator ref;$/;"	m	struct:cellDist	file:
refCount	kernel/TeCounted.h	/^	int refCount()$/;"	f	class:TeCounted
refCount_	kernel/TeCounted.h	/^	int refCount_; 	\/\/!< the number of references to this class$/;"	m	class:TeCounted
refCount_	kernel/TeTable.h	/^	int refCount_;$/;"	m	class:TeTableImpl
refDataVector_	image_processing/TePDISAMClassifier.hpp	/^          const std::vector< ClassReferenceData >& refDataVector_;$/;"	m	class:TePDISAMClassifier::SegThread
refPol_	image_processing/TePDITileIndexer.hpp	/^    const TePolygon& refPol_;$/;"	m	class:TePDITileIndexer
refThemeItemForVis_	drivers/qt/TeQtViewsListView.h	/^	TeQtCheckListItem	*refThemeItemForVis_;  \/\/reference theme item for visibility of another one$/;"	m	class:TeQtViewsListView
refanyExt	drivers/Oracle/OCI/include/occiObjects.h	/^  void *refanyExt;$/;"	m	class:oracle::occi::RefAny
reference	kernel/checkvec.h	/^		typedef typename checkedVector::reference reference;$/;"	t	class:br_stl::checkedVector
referenceLayer_	functions/TeAddressLocator.h	/^		TeLayer* referenceLayer_;					\/\/!< Ther layer used as reference for geocoding $/;"	m	class:TeAddressLocator
reference_	kernel/TeSharedPtr.h	/^      mutable T* reference_;$/;"	m	class:TeSharedPtr
referencesOtherTables	drivers/SQLite/sqlite3/sqlite3.c	/^static int referencesOtherTables($/;"	f	file:
references_	drivers/Oracle/OCI/include/occiCommon.h	/^    unsigned long references_;$/;"	m	class:oracle::occi::RefCounted
refineAttributeWhere	drivers/qt/TeAppTheme.h	/^	string refineAttributeWhere() { return refineAttributeWhere_; }$/;"	f	class:TeAppTheme
refineAttributeWhere	drivers/qt/TeAppTheme.h	/^	void refineAttributeWhere(const string& s) { refineAttributeWhere_ = s; }$/;"	f	class:TeAppTheme
refineAttributeWhere_	drivers/qt/TeAppTheme.h	/^	string			refineAttributeWhere_;$/;"	m	class:TeAppTheme
refineFoundedLocationsByNeighBorhood	functions/TeAddressLocator.cpp	/^void TeAddressLocator::refineFoundedLocationsByNeighBorhood(const TeAddress& address, vector<TeAddressDescription>& addressesFound)$/;"	f	class:TeAddressLocator
refineFoundedLocationsByNumberNeighboor	functions/TeAddressLocator.cpp	/^void TeAddressLocator::refineFoundedLocationsByNumberNeighboor(const TeAddress& address, vector<TeAddressDescription>& addressesFound)$/;"	f	class:TeAddressLocator
refineFoundedLocationsByNumberZipCode	functions/TeAddressLocator.cpp	/^void TeAddressLocator::refineFoundedLocationsByNumberZipCode(const TeAddress& address, vector<TeAddressDescription>& addressesFound)$/;"	f	class:TeAddressLocator
refineFoundedLocationsByZipCode	functions/TeAddressLocator.cpp	/^void TeAddressLocator::refineFoundedLocationsByZipCode(const TeAddress& address, vector<TeAddressDescription>& addressesFound)$/;"	f	class:TeAddressLocator
refineSpatialWhere	drivers/qt/TeAppTheme.h	/^	string refineSpatialWhere() { return refineSpatialWhere_; }$/;"	f	class:TeAppTheme
refineSpatialWhere	drivers/qt/TeAppTheme.h	/^	void refineSpatialWhere(const string& s) { refineSpatialWhere_ = s; }$/;"	f	class:TeAppTheme
refineSpatialWhere_	drivers/qt/TeAppTheme.h	/^	string			refineSpatialWhere_;$/;"	m	class:TeAppTheme
refineTemporalWhere	drivers/qt/TeAppTheme.h	/^	string refineTemporalWhere() { return refineTemporalWhere_; }$/;"	f	class:TeAppTheme
refineTemporalWhere	drivers/qt/TeAppTheme.h	/^	void refineTemporalWhere(const string& t) { refineTemporalWhere_ = t; }$/;"	f	class:TeAppTheme
refineTemporalWhere_	drivers/qt/TeAppTheme.h	/^	string			refineTemporalWhere_;$/;"	m	class:TeAppTheme
refresh	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::refresh()$/;"	f	class:TeQtGrid
refresh	kernel/TeQuerier.cpp	/^TeQuerier::refresh(TeQuerierParams& params)$/;"	f	class:TeQuerier
regCtr	drivers/SQLite/sqlite3/sqlite3.c	/^  int regCtr;           \/* Memory register holding the rowid counter *\/$/;"	m	struct:AutoincInfo	file:
regReturn	drivers/SQLite/sqlite3/sqlite3.c	/^    int regReturn;    \/* Register holding return address of addrFillSub *\/$/;"	m	struct:SrcList::SrcList_item	file:
regRoot	drivers/SQLite/sqlite3/sqlite3.c	/^  int regRoot;         \/* Register holding root page number for new objects *\/$/;"	m	struct:Parse	file:
regRowid	drivers/SQLite/sqlite3/sqlite3.c	/^  int regRowid;        \/* Register holding rowid of CREATE TABLE entry *\/$/;"	m	struct:Parse	file:
region_class	image_processing/TePDIRegion.hpp	/^    int region_class;$/;"	m	class:TePDIRegion
regions	image_processing/TePDIIsosegClas.hpp	/^    multimap<double, TePDIRegion, greater<double> > regions;$/;"	m	class:TePDIIsosegClas
registerGDALGTiffTagExtender	kernel/TeDecoderTIFF.cpp	/^static void registerGDALGTiffTagExtender()$/;"	f	file:
registerPAMDecoder	drivers/PAMDecoder/TeDecoderPAM.cpp	/^bool registerPAMDecoder()$/;"	f
registerTokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^int registerTokenizer($/;"	f	file:
registerTrace	drivers/SQLite/sqlite3/sqlite3.c	/^static void registerTrace(FILE *out, int iReg, Mem *p){$/;"	f	file:
register_result	drivers/PAMDecoder/TeDecoderPAM.h	/^  static bool register_result = registerPAMDecoder();$/;"	m	namespace:__anon177
rehash	drivers/SQLite/sqlite3/sqlite3.c	/^static int rehash(Hash *pH, unsigned int new_size){$/;"	f	file:
reindexDatabases	drivers/SQLite/sqlite3/sqlite3.c	/^static void reindexDatabases(Parse *pParse, char const *zColl){$/;"	f	file:
reindexTable	drivers/SQLite/sqlite3/sqlite3.c	/^static void reindexTable(Parse *pParse, Table *pTab, char const *zColl){$/;"	f	file:
reinsertNodeContent	drivers/SQLite/sqlite3/sqlite3.c	/^static int reinsertNodeContent(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
reject	drivers/qt/ui/help.ui.h	/^void Help::reject()$/;"	f	class:Help
relatedAttribute	kernel/TeTable.h	/^	string relatedAttribute()$/;"	f	class:TeTable
relatedAttribute	kernel/TeTable.h	/^	void relatedAttribute(const string& columnName)$/;"	f	class:TeTable
relatedAttribute_	kernel/TeTable.h	/^	string  relatedAttribute_;	\/\/ column name of table which this is related$/;"	m	class:TeTable
relatedTableId	kernel/TeTable.h	/^	int relatedTableId()$/;"	f	class:TeTable
relatedTableId	kernel/TeTable.h	/^	void relatedTableId(int id)$/;"	f	class:TeTable
relatedTableId_	kernel/TeTable.h	/^ 	int		relatedTableId_;	\/\/ id of a table to which this is related	$/;"	m	class:TeTable
relatedTableName	kernel/TeTable.h	/^	string relatedTableName()$/;"	f	class:TeTable
relatedTableName	kernel/TeTable.h	/^	void relatedTableName(string tableName)$/;"	f	class:TeTable
relatedTableName_	kernel/TeTable.h	/^ 	string	relatedTableName_;	\/\/ name of a table to which this is related	$/;"	m	class:TeTable
relationMSet	kernel/TeDatabase.h	/^	multiset<int>& relationMSet () $/;"	f	class:TeDatabase
relationMSet	kernel/TeMetaModelCache.h	/^		multiset<int>& relationMSet () $/;"	f	class:TeMetaModelCache
relationMSet_	kernel/TeMetaModelCache.h	/^        multiset<int>		relationMSet_;		\/\/!< multiset of relations between tables$/;"	m	class:TeMetaModelCache
relation_	image_processing/TePDIBlender.hpp	/^      short relation_;$/;"	m	class:TePDIBlender
releaseAllSavepoints	drivers/SQLite/sqlite3/sqlite3.c	/^static void releaseAllSavepoints(Pager *pPager){$/;"	f	file:
releaseConnection	kernel/TeConnectionPool.cpp	/^void TeConnectionPool::releaseConnection(TeConnection* conn)$/;"	f	class:TeConnectionPool
releaseCursor	drivers/PostgreSQL/TePGInterface.h	/^		static void releaseCursor(const int& idToRelease)$/;"	f	class:TePGRecordset
releaseInodeInfo	drivers/SQLite/sqlite3/sqlite3.c	/^static void releaseInodeInfo(unixFile *pFile){$/;"	f	file:
releaseMemArray	drivers/SQLite/sqlite3/sqlite3.c	/^static void releaseMemArray(Mem *p, int N){$/;"	f	file:
releasePage	drivers/SQLite/sqlite3/sqlite3.c	/^static void releasePage(MemPage *pPage){$/;"	f	file:
release_count_	kernel/TeThreadSignal.h	/^        volatile int release_count_;$/;"	m	class:TeThreadSignal
release_memory	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines	file:
release_memory	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines
relname	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SCHAR       relname[32];            $/;"	m	struct:__anon63
relname_length	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SHORT       relname_length;         $/;"	m	struct:__anon63
reloadLayerEditionTime	kernel/TeLayer.cpp	/^bool TeLayer::reloadLayerEditionTime()$/;"	f	class:TeLayer
reloadPortal	drivers/qt/TeQtGridSource.cpp	/^bool TeQtGridSource::reloadPortal(bool updateGrid2PortalColRelation)$/;"	f	class:TeQtGridSource
reloadTableSchema	drivers/SQLite/sqlite3/sqlite3.c	/^static void reloadTableSchema(Parse *pParse, Table *pTab, const char *zName){$/;"	f	file:
relocatePage	drivers/SQLite/sqlite3/sqlite3.c	/^static int relocatePage($/;"	f	file:
remap	kernel/TeRasterRemap.cpp	/^bool TeRasterRemap::remap()$/;"	f	class:TeRasterRemap
remap_func_3_ptr_type	image_processing/TePDILevelRemap.hpp	/^      typedef double (*remap_func_3_ptr_type)( double, double, double );$/;"	t	class:TePDILevelRemap
remap_func_4_ptr_type	image_processing/TePDILevelRemap.hpp	/^      typedef double (*remap_func_4_ptr_type)( double, double, double,$/;"	t	class:TePDILevelRemap
remoteDbId_	kernel/TeExternalTheme.h	/^        int remoteDbId_;$/;"	m	class:TeExternalTheme
remoteTheme_	kernel/TeExternalTheme.h	/^		TeTheme* remoteTheme_;$/;"	m	class:TeExternalTheme
remove	kernel/TeMultiContainer.h	/^void TeMultiContainer< TeMultiContainerKeyT >::remove( $/;"	f	class:TeMultiContainer
remove	kernel/TePieBar.h	/^	void remove()$/;"	f	class:TePieBar
remove	kernel/TeRTree.h	/^		bool remove(const TeBox& rect, const DATATYPE& data)$/;"	f	class:TeSAM::TeRTree
remove	kernel/TeRTree.h	/^bool TeRTree<DATATYPE, MAXNODES, MINNODES>::remove(const TeBox& rect, const DATATYPE& data, TeRTreeNodeType** root)$/;"	f	class:TeSAM::TeRTree
remove	kernel/TeView.h	/^	virtual TeViewNode* remove (int id)$/;"	f	class:TeView
remove	kernel/TeView.h	/^	virtual TeViewNode* remove(string name)$/;"	f	class:TeView
remove	kernel/TeViewNode.cpp	/^TeViewTree::remove (const string& name)$/;"	f	class:TeViewTree
remove	kernel/TeViewNode.h	/^	virtual TeViewNode* remove (const string& \/*name*\/) { return 0; }$/;"	f	class:TeViewNode
remove2	kernel/TeRTree.h	/^bool TeRTree<DATATYPE, MAXNODES, MINNODES>::remove2(const TeBox& rect, const DATATYPE& data, TeRTreeNodeType* n, vector<TeRTreeNodeType*>& ee)$/;"	f	class:TeSAM::TeRTree
removeAlias	drivers/qt/TeAppTheme.cpp	/^void TeAppTheme::removeAlias(string attribute)$/;"	f	class:TeAppTheme
removeAllAlias	drivers/qt/TeAppTheme.cpp	/^void TeAppTheme::removeAllAlias()$/;"	f	class:TeAppTheme
removeAllFiles	kernel/TeTempFilesRemover.cpp	/^void TeTempFilesRemover::removeAllFiles()$/;"	f	class:TeTempFilesRemover
removeAttributeTable	kernel/TeLayer.cpp	/^TeLayer::removeAttributeTable(string tableName)$/;"	f	class:TeLayer
removeBlob	drivers/PostgreSQL/TePGInterface.h	/^		bool removeBlob(const Oid& blobId) { return lo_unlink(pg_connection_, blobId) == 1; }$/;"	f	class:TePGConnection
removeCharts	drivers/qt/TeQtThemeItem.cpp	/^void TeQtThemeItem::removeCharts()$/;"	f	class:TeQtThemeItem
removeColorSlot	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::removeColorSlot()$/;"	f	class:TeQtColorBar
removeComponent	image_processing/TePDIMixModelComponentList.cpp	/^bool TePDIMixModelComponentList::removeComponent(unsigned int cn)$/;"	f	class:TePDIMixModelComponentList
removeDatabase	kernel/TeDBConnectionsPool.cpp	/^void TeDBConnectionsPool::removeDatabase(const int& dbId)$/;"	f	class:TeDBConnectionsPool
removeDuplicatedCoords	kernel/TeGeometryAlgorithms.cpp	/^void removeDuplicatedCoords(vector<TeCoord2D>& coordSet)$/;"	f
removeElementGivenHash	drivers/SQLite/sqlite3/sqlite3.c	/^static void removeElementGivenHash($/;"	f	file:
removeFile	kernel/TeTempFilesRemover.cpp	/^void TeTempFilesRemover::removeFile( const std::string& fullFileName )$/;"	f	class:TeTempFilesRemover
removeFileName	kernel/TeTempFilesRemover.cpp	/^void TeTempFilesRemover::removeFileName( const std::string& fullFileName )$/;"	f	class:TeTempFilesRemover
removeFromBlockedList	drivers/SQLite/sqlite3/sqlite3.c	/^static void removeFromBlockedList(sqlite3 *db){$/;"	f	file:
removeFromSharingList	drivers/SQLite/sqlite3/sqlite3.c	/^static int removeFromSharingList(BtShared *pBt){$/;"	f	file:
removeGeometries	kernel/TeLayer.cpp	/^bool TeLayer::removeGeometries(const std::vector<int>& vecGeomIds, const TeGeomRep& rep)$/;"	f	class:TeLayer
removeGeometry	drivers/Oracle/TeOracleSpatial.cpp	/^bool TeOracleSpatial::removeGeometry(const string& tableName, const TeGeomRep& rep, const int& geomId)$/;"	f	class:TeOracleSpatial
removeGeometry	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::removeGeometry(const string& tableName, const TeGeomRep& rep, const int& geomId)$/;"	f	class:TePostGIS
removeGeometry	kernel/TeDatabase.cpp	/^bool TeDatabase::removeGeometry(const string& tableName, const TeGeomRep& rep, const int& geomId)$/;"	f	class:TeDatabase
removeGeometry	kernel/TeLayer.cpp	/^TeLayer::removeGeometry (TeGeomRep repType, const string& tName)$/;"	f	class:TeLayer
removeHifen	functions/TeAddressLocator.cpp	/^void TeAddressLocator::removeHifen(string& zipCode) const$/;"	f	class:TeAddressLocator
removeHifenFromCentroid_	functions/TeAddressLocator.h	/^		bool removeHifenFromCentroid_;				\/\/!< If true the hifen is removed in zip code from the centroid table$/;"	m	class:TeAddressLocator
removeHifen_	functions/TeAddressLocator.h	/^		bool removeHifen_;							\/\/!< If true the hifen is removed in zip code$/;"	m	class:TeAddressLocator
removeID	kernel/TeViewNode.cpp	/^TeViewTree::removeID (int id) $/;"	f	class:TeViewTree
removeID	kernel/TeViewNode.h	/^	virtual TeViewNode* removeID (int \/* id *\/) { return 0; }$/;"	f	class:TeViewNode
removeInvalidChars	utils/TeWKTGeometryDecoder.cpp	/^string removeInvalidChars(const string& wkt)$/;"	f
removeItem	drivers/qt/TeQtDatabasesListView.cpp	/^void TeQtDatabasesListView::removeItem(QListViewItem *item)$/;"	f	class:TeQtDatabasesListView
removeItem	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::removeItem(QListViewItem *item)$/;"	f	class:TeQtViewsListView
removeLegends	drivers/qt/TeQtThemeItem.cpp	/^void TeQtThemeItem::removeLegends()$/;"	f	class:TeQtThemeItem
removeNode	drivers/SQLite/sqlite3/sqlite3.c	/^static int removeNode(Rtree *pRtree, RtreeNode *pNode, int iHeight){$/;"	f	file:
removeObject	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::removeObject (const string& object_id)$/;"	f	class:TeGeneralizedProxMatrix
removeObject	kernel/TeProxMatrixImplementation.h	/^	virtual bool removeObject (const string& ) { return false; }$/;"	f	class:TeProxMatrixImplementation
removeObjectsWithoutGeometries	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::removeObjectsWithoutGeometries(TeGeomRep geomRep)$/;"	f	class:TeExternalTheme
removeObjectsWithoutGeometries	kernel/TeTheme.cpp	/^bool TeTheme::removeObjectsWithoutGeometries(TeGeomRep geomRep)$/;"	f	class:TeTheme
removePixel	image_processing/TePDIMixModelComponent.cpp	/^bool TePDIMixModelComponent::removePixel(unsigned int bn)$/;"	f	class:TePDIMixModelComponent
removePixel	image_processing/TePDIMixModelComponentList.cpp	/^bool TePDIMixModelComponentList::removePixel(unsigned int cn, unsigned int bn)$/;"	f	class:TePDIMixModelComponentList
removePointingColor	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::removePointingColor()$/;"	f	class:TeAbstractTheme
removePointingColorSlot	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::removePointingColorSlot()$/;"	f	class:TeQtGrid
removeProperty	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::removeProperty(TeAttributeRep& attr)$/;"	f	class:TeBaseSTInstanceSet
removePropertyValue	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::removePropertyValue(const int& i)$/;"	f	class:TeBaseSTInstance
removeQueryColor	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::removeQueryColor()$/;"	f	class:TeAbstractTheme
removeQueryColorSlot	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::removeQueryColorSlot()$/;"	f	class:TeQtGrid
removeRasterVisual	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::removeRasterVisual()$/;"	f	class:TeAbstractTheme
removeSpecialCharacters	functions/TeAddressLocator.cpp	/^void TeAddressLocator::removeSpecialCharacters(string& str) const$/;"	f	class:TeAddressLocator
removeThemeItem	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::removeThemeItem(TeAppTheme* appTheme)$/;"	f	class:TeQtViewsListView
removeThemeItem	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::removeThemeItem(int themeId)$/;"	f	class:TeQtViewsListView
removeThemeTable	kernel/TeDatabase.cpp	/^TeDatabase::removeThemeTable(TeTheme *theme, int tableOrder)$/;"	f	class:TeDatabase
removeThemeTable	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::removeThemeTable(unsigned int index)$/;"	f	class:TeExternalTheme
removeThemeTable	kernel/TeTheme.cpp	/^TeTheme::removeThemeTable(unsigned int index)$/;"	f	class:TeTheme
removeViewItem	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::removeViewItem(TeView *view)$/;"	f	class:TeQtViewsListView
remove_segment	image_processing/TePDIBaatz.cpp	/^void remove_segment(struct segment *aux_segment, $/;"	f
renameParentFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void renameParentFunc($/;"	f	file:
renameTableFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void renameTableFunc($/;"	f	file:
renameTriggerFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void renameTriggerFunc($/;"	f	file:
rend	kernel/TeComposite.h	/^    reverse_iterator rend(void) $/;"	f	class:TeComposite
rend	kernel/TeGeometry.h	/^	typename TeComposite<T>::reverse_iterator rend()$/;"	f	class:TeGeomComposite
renderLogMsg	drivers/SQLite/sqlite3/sqlite3.c	/^static void renderLogMsg(int iErrCode, const char *zFormat, va_list ap){$/;"	f	file:
renderType	drivers/GL/glcore.h	/^    GLint renderType;$/;"	m	struct:__GLcontextModesRec
renderType	drivers/GL/glxint.h	/^    int renderType;$/;"	m	struct:__GLXFBConfigRec
renderType	drivers/GL/glxproto.h	/^    CARD32	renderType;$/;"	m	struct:GLXCreateContextWithConfigSGIX
renderType	drivers/GL/glxproto.h	/^    CARD32	renderType;$/;"	m	struct:GLXCreateNewContext
renderType	drivers/GL/internal/glcore.h	/^    GLint renderType;$/;"	m	struct:__GLcontextModesRec
rep	kernel/TeComputeAttributeStrategies.h	/^		TeGeomRep rep;$/;"	m	class:TeComputeSpatialStrategy
repVector_	kernel/TeLayer.h	/^	TeRepresPointerVector repVector_;	\/\/!< vector of representations associated to this layer$/;"	m	class:TeLayer
rep_	kernel/TeAttribute.h	/^	TeAttributeRep	rep_;		\/\/!< representation of attribute	$/;"	m	struct:TeAttribute
rep_	kernel/TeGeoDataDriver.h	/^	int				rep_; \/\/!< The representation of the dataSet$/;"	m	class:TeGeoDataDriver
rep_	kernel/TeQuerierDBStr3.h	/^	TeGeomRep		rep_;$/;"	m	class:TeQuerierDBStr3
replaceFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void replaceFunc($/;"	f	file:
reprojectRaster	image_processing/TePDIUtils.cpp	/^  bool reprojectRaster( TeRaster& input_raster,$/;"	f	namespace:TePDIUtils
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXBindSwapBarrierSGIX
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXChangeDrawableAttributes
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXClientInfo
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXCopyContext
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXCreateContext
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXCreateContextWithConfigSGIX
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXCreateGLXPixmap
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXCreateGLXPixmapWithConfigSGIX
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXCreateNewContext
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXCreatePbuffer
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXCreatePixmap
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXCreateWindow
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXDestroyContext
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXDestroyGLXPixmap
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXDestroyPbuffer
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXDestroyPixmap
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXDestroyWindow
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXGetDrawableAttributes
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXGetFBConfigs
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXGetFBConfigsSGIX
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXGetVisualConfigs
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXIsDirect
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXJoinSwapGroupSGIX
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXMakeContextCurrent
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXMakeCurrent
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXMakeCurrentReadSGI
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXQueryContext
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXQueryContextInfoEXT
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXQueryExtensionsString
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXQueryMaxSwapBarriersSGIX
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXQueryServerString
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXQueryVersion
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXRender
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXRenderLarge
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXSingle
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXSwapBuffers
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXUseXFont
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXVendorPrivate
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXVendorPrivateWithReply
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXWaitGL
reqType	drivers/GL/glxproto.h	/^    CARD8	reqType;$/;"	m	struct:GLXWaitX
reqType	drivers/GL/glxproto.h	/^    CARD8       reqType;$/;"	m	struct:GLXDestroyHyperpipeConfigSGIX
reqType	drivers/GL/glxproto.h	/^    CARD8       reqType;$/;"	m	struct:GLXHyperpipeConfigSGIX
reqType	drivers/GL/glxproto.h	/^    CARD8       reqType;$/;"	m	struct:GLXQueryHyperpipeConfigSGIX
reqType	drivers/GL/glxproto.h	/^    CARD8       reqType;$/;"	m	struct:GLXQueryHyperpipeNetworkSGIX
requestQueue_	kernel/TeConnectionPool.h	/^    std::vector<unsigned int> requestQueue_; \/\/!< A wait queue for get connections.$/;"	m	class:TeConnectionPool
require	kernel/TeAssertions.h	31;"	d
resX	drivers/MrSID/TeMrSID.cpp	/^double TeMrSIDReader::resX()$/;"	f	class:TeMrSIDReader
resX	kernel/TeGeometry.h	/^	double resX () const$/;"	f	class:TeCellSet
resX	kernel/TeGeometry.h	/^	void resX (double reX) $/;"	f	class:TeCellSet
resX_	kernel/TeGeometry.h	/^	double	resX_;	\/\/!< the X resolution of a set of cells$/;"	m	class:TeCellSet
resX_	kernel/TeRepresentation.h	/^	double	resX_;			\/\/!< the x resolution of the layer cell set geometry$/;"	m	struct:TeRepresentation
resY	drivers/MrSID/TeMrSID.cpp	/^double TeMrSIDReader::resY()$/;"	f	class:TeMrSIDReader
resY	kernel/TeGeometry.h	/^	double resY () const$/;"	f	class:TeCellSet
resY	kernel/TeGeometry.h	/^	void resY (double reY) $/;"	f	class:TeCellSet
resY_	kernel/TeGeometry.h	/^	double	resY_;	\/\/!< the Y resolution of a set of cells$/;"	m	class:TeCellSet
resY_	kernel/TeRepresentation.h	/^	double	resY_;			\/\/!< the y resolution of the layer cell set geometry$/;"	m	struct:TeRepresentation
resample	kernel/TeRasterRemap.cpp	/^bool TeRasterRemap::resample ()$/;"	f	class:TeRasterRemap
resampleRasterByLinsCols	image_processing/TePDIUtils.cpp	/^  bool resampleRasterByLinsCols( $/;"	f	namespace:TePDIUtils
resampleRasterByRes	image_processing/TePDIUtils.cpp	/^  bool resampleRasterByRes( const TePDITypes::TePDIRasterPtrType& input_raster,$/;"	f	namespace:TePDIUtils
resampleRasterByResLinsCols	image_processing/TePDIIHSWaveletFusion.cpp	/^bool TePDIIHSWaveletFusion::resampleRasterByResLinsCols( $/;"	f	class:TePDIIHSWaveletFusion
resampleRasterByResLinsCols	image_processing/TePDIPCAWaveletFusion.cpp	/^bool TePDIPCAWaveletFusion::resampleRasterByResLinsCols( $/;"	f	class:TePDIPCAWaveletFusion
resampleRasterByResLinsCols	image_processing/TePDIWaveletAtrousFusion.cpp	/^bool TePDIWaveletAtrousFusion::resampleRasterByResLinsCols( $/;"	f	class:TePDIWaveletAtrousFusion
resampleRasterByResLinsCols	image_processing/TePDIWiSpeRFusion.cpp	/^bool TePDIWiSpeRFusion::resampleRasterByResLinsCols( $/;"	f	class:TePDIWiSpeRFusion
reserva1_	drivers/GTM/TeGTM.h	/^	unsigned char lock_, view_, reserva1_;$/;"	m	class:TeGTMLayers
reserva2_	drivers/GTM/TeGTM.h	/^	short index_, reserva2_;$/;"	m	class:TeGTMLayers
reserve	kernel/TeComposite.h	/^	void reserve(int nelem)$/;"	f	class:TeComposite
reserve	kernel/TeGeometry.h	/^	void reserve(int nelem)$/;"	f	class:TeGeomComposite
reserved	drivers/SQLite/sqlite3/sqlite3.c	/^  int reserved;$/;"	m	struct:afpLockingContext	file:
reserved1	drivers/GL/glxproto.h	/^    CARD8	reserved1;$/;"	m	struct:GLXCreateContext
reserved1	drivers/GL/glxproto.h	/^    CARD8	reserved1;$/;"	m	struct:GLXCreateContextWithConfigSGIX
reserved1	drivers/GL/glxproto.h	/^    CARD8	reserved1;$/;"	m	struct:GLXCreateNewContext
reset	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
reset	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
reset	drivers/qt/TeQtProgress.h	/^	void reset()$/;"	f	class:TeQtProgress
reset	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::reset()$/;"	f	class:TeQtViewsListView
reset	dtm/TeDTMAlgorithm.cpp	/^bool TeDTMAlgorithm::reset( const TeDTMParameters& params )$/;"	f	class:TeDTMAlgorithm
reset	image_processing/TePDIBlender.cpp	/^void TePDIBlender::reset()$/;"	f	class:TePDIBlender
reset	image_processing/TePDIFilterMask.cpp	/^void TePDIFilterMask::reset( unsigned int width, double gain )$/;"	f	class:TePDIFilterMask
reset	image_processing/TePDIHistogram.cpp	/^bool TePDIHistogram::reset($/;"	f	class:TePDIHistogram
reset	image_processing/TePDIInterpolator.cpp	/^bool TePDIInterpolator::reset( const TeSharedPtr< TeRaster >& input_raster,$/;"	f	class:TePDIInterpolator
reset	image_processing/TePDIMtxDoubleAdpt.hpp	/^      inline bool reset( unsigned int lines, unsigned int columns )$/;"	f	class:TePDIMtxDoubleAdpt
reset	image_processing/TePDIRaster2Vector.hpp	/^      void reset( const TePolygon& p, const int& v, $/;"	f	class:TePDIRaster2VectorPolStruct
reset	image_processing/TePDIRasterRUBuffer.cpp	/^bool TePDIRasterRUBuffer::reset( TeRaster& inputRaster, $/;"	f	class:TePDIRasterRUBuffer
reset	kernel/TeGTParams.cpp	/^void TeGTParams::reset()$/;"	f	class:TeGTParams
reset	kernel/TeGeometricTransformation.cpp	/^bool TeGeometricTransformation::reset( const TeGTParams& newparams )$/;"	f	class:TeGeometricTransformation
reset	kernel/TeGraph.cpp	/^TeGraphPlot :: reset()$/;"	f	class:TeGraphPlot
reset	kernel/TeMappedMemory.cpp	/^bool TeMappedMemory::reset( const std::string& filename, $/;"	f	class:TeMappedMemory
reset	kernel/TeMappedMemory.cpp	/^bool TeMappedMemory::reset( const std::string& filename, bool enabled )$/;"	f	class:TeMappedMemory
reset	kernel/TeMappedMemory.cpp	/^bool TeMappedMemory::reset( unsigned long int size, bool enabled )$/;"	f	class:TeMappedMemory
reset	kernel/TeMappedMemory.cpp	/^void TeMappedMemory::reset()$/;"	f	class:TeMappedMemory
reset	kernel/TeRasterMemManager.cpp	/^bool TeRasterMemManager::reset( unsigned int bands, unsigned int tilesPerBand,$/;"	f	class:TeRasterMemManager
reset	kernel/TeSharedPtr.h	/^      inline void reset( T* pointer )$/;"	f	class:TeSharedPtr
reset	kernel/TeSharedPtr.h	/^      inline void reset()$/;"	f	class:TeSharedPtr
reset	kernel/TeSharedPtr.h	/^  void TeSharedPtr< T >::reset( T* pointer, bool not_shared_flag )$/;"	f	class:TeSharedPtr
reset	kernel/TeStdIOProgress.cpp	/^void TeStdIOProgress::reset()$/;"	f	class:TeStdIOProgress
resetAccumulator	drivers/SQLite/sqlite3/sqlite3.c	/^static void resetAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
resetAll	drivers/qt/TeQtViewItem.cpp	/^TeQtViewItem::resetAll()$/;"	f	class:TeQtViewItem
resetCount	image_processing/TePDICluster.cpp	/^void TePDICluster::resetCount()$/;"	f	class:TePDICluster
resetGrouping	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme::resetGrouping ()$/;"	f	class:TeAbstractTheme
resetMemory	kernel/TeDecoderMemory.cpp	/^TeDecoderMemory::resetMemory()$/;"	f	class:TeDecoderMemory
resetWaitCursor	drivers/qt/TeWaitCursor.cpp	/^void TeWaitCursor::resetWaitCursor ()$/;"	f	class:TeWaitCursor
reset_conv_buf	image_processing/TePDIBufferedFilter.cpp	/^void TePDIBufferedFilter::reset_conv_buf( unsigned int lines, unsigned int columns )$/;"	f	class:TePDIBufferedFilter
reset_maskmatrix	image_processing/TePDIBufferedFilter.cpp	/^void TePDIBufferedFilter::reset_maskmatrix( TePDIFilterMask::pointer& mask )$/;"	f	class:TePDIBufferedFilter
reset_pixels	image_processing/TePDIBaatz.cpp	/^void reset_pixels(struct segment_neighbor *curr_neighbor, $/;"	f
reset_unused_segments_list	image_processing/TePDIBaatz.cpp	/^void reset_unused_segments_list(unsigned long int num_segments, $/;"	f
resize	drivers/GL/glcore.h	/^    GLboolean (*resize)(__GLdrawableBuffer *buf,$/;"	m	struct:__GLdrawableBufferRec
resize	drivers/GL/glcore.h	/^    GLboolean (*resize)(__GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawablePrivateRec
resize	drivers/GL/internal/glcore.h	/^    GLboolean (*resize)(__GLdrawableBuffer *buf,$/;"	m	struct:__GLdrawableBufferRec
resize	drivers/GL/internal/glcore.h	/^    GLboolean (*resize)(__GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawablePrivateRec
resize	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::resize (int w, int h)$/;"	f	class:TeQtGraphPlot
resizeData	drivers/qt/TeQtBigTable.h	/^	void resizeData(int) {}$/;"	f	class:TeQtBigTable
resizeEvent	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::resizeEvent ( QResizeEvent * e)$/;"	f	class:TeQtCanvas
resizeEvent	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::resizeEvent(QResizeEvent*)$/;"	f	class:TeQtColorBar
resizeGL	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::resizeGL( int w, int h )$/;"	f	class:TeQtGLWidget
resizeToTiling	kernel/TeRasterParams.cpp	/^TeRasterParams::resizeToTiling(TeBox& bb, int bWidth, int bHeight)$/;"	f	class:TeRasterParams
resolution_	kernel/TeRasterParams.h	/^	int resolution_;		\/\/! resolution level $/;"	m	class:TeRasterParams
resolveAlias	drivers/SQLite/sqlite3/sqlite3.c	/^static void resolveAlias($/;"	f	file:
resolveAsName	drivers/SQLite/sqlite3/sqlite3.c	/^static int resolveAsName($/;"	f	file:
resolveAttachExpr	drivers/SQLite/sqlite3/sqlite3.c	/^static int resolveAttachExpr(NameContext *pName, Expr *pExpr)$/;"	f	file:
resolveCompoundOrderBy	drivers/SQLite/sqlite3/sqlite3.c	/^static int resolveCompoundOrderBy($/;"	f	file:
resolveExprStep	drivers/SQLite/sqlite3/sqlite3.c	/^static int resolveExprStep(Walker *pWalker, Expr *pExpr){$/;"	f	file:
resolveOrderByTermToExprList	drivers/SQLite/sqlite3/sqlite3.c	/^static int resolveOrderByTermToExprList($/;"	f	file:
resolveOrderGroupBy	drivers/SQLite/sqlite3/sqlite3.c	/^static int resolveOrderGroupBy($/;"	f	file:
resolveOutOfRangeError	drivers/SQLite/sqlite3/sqlite3.c	/^static void resolveOutOfRangeError($/;"	f	file:
resolveP2Values	drivers/SQLite/sqlite3/sqlite3.c	/^static void resolveP2Values(Vdbe *p, int *pMaxFuncArgs){$/;"	f	file:
resolveSelectStep	drivers/SQLite/sqlite3/sqlite3.c	/^static int resolveSelectStep(Walker *pWalker, Select *p){$/;"	f	file:
resolve_backslashes	drivers/SQLite/sqlite3/shell.c	/^static void resolve_backslashes(char *z){$/;"	f	file:
restoreArea_	drivers/qwt/TeQwtPlotPicker.h	/^	bool restoreArea_;$/;"	m	class:TeQwtPlotPicker
restoreCursorPosition	drivers/SQLite/sqlite3/sqlite3.c	48780;"	d	file:
result	drivers/MySQL/TeMySQL.h	/^    st_mysql_res* result()$/;"	f	class:TeMySQLPortal
result	kernel/TeRaster.cpp	/^	TeCoordPairVect result() const {return SegOut_;}$/;"	f	class:TeStrategic
resultIdPos_	drivers/qt/TeQtGrid.h	/^	int						resultIdPos_;$/;"	m	class:TeQtGrid
result_	drivers/Firebird/TeFirebird.h	/^	IBPP::Statement result_;$/;"	m	class:TeFirebirdPortal
result_	drivers/MySQL/TeMySQL.h	/^	st_mysql_res*		result_;$/;"	m	class:TeMySQLPortal
result_blob	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_blob	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_double	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines	file:
result_double	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines
result_error	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines
result_error16	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines
result_error_code	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error_code	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_error_nomem	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_error_nomem	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_error_toobig	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_error_toobig	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_int	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_int	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_int64	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	file:
result_int64	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines
result_null	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_null	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_text	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16be	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16be	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16le	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16le	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_value	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
result_value	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
result_zeroblob	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_zeroblob	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
resx_	image_processing/TePDIRaster2Vector.hpp	/^      double resx_;$/;"	m	class:TePDIRaster2Vector
resx_	kernel/TeRasterParams.h	/^	double	resx_,			\/\/!< horizontal resolution$/;"	m	class:TeRasterParams
resy_	image_processing/TePDIRaster2Vector.hpp	/^      double resy_;$/;"	m	class:TePDIRaster2Vector
resy_	kernel/TeRasterParams.h	/^		resy_;			\/\/!< vertical resolution	$/;"	m	class:TeRasterParams
retRangeStart	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned long long retRangeStart; \/* nbr of 1st byte locked if successful *\/$/;"	m	struct:ByteRangeLockPB2	file:
retrieve	kernel/TeViewNode.h	/^	virtual TeViewNode* retrieve (int i) $/;"	f	class:TeViewTree
retrieve	kernel/TeViewNode.h	/^	virtual TeViewNode* retrieve (int)  { return 0; }$/;"	f	class:TeViewNode
retrieveDataFromFile	kernel/TeFileTheme.cpp	/^bool TeFileTheme::retrieveDataFromFile()$/;"	f	class:TeFileTheme
retrive	drivers/spl/PluginsParametersContainer.h	/^bool PluginsParametersContainer< PluginsParametersContainerKeyT >::retrive($/;"	f	class:PluginsParametersContainer
retrive	kernel/TeMultiContainer.h	/^bool TeMultiContainer< TeMultiContainerKeyT >::retrive($/;"	f	class:TeMultiContainer
retryIoerr	drivers/SQLite/sqlite3/sqlite3.c	/^static int retryIoerr(int *pnRetry){$/;"	f	file:
returnSingleInt	drivers/SQLite/sqlite3/sqlite3.c	/^static void returnSingleInt(Parse *pParse, const char *zLabel, i64 value){$/;"	f	file:
returnValue_	image_processing/TePDICorrelationMatching.hpp	/^          volatile bool returnValue_;$/;"	m	class:TePDICorrelationMatching::CorrThread
returnValue_	image_processing/TePDIMMIOMatching.hpp	/^          volatile bool returnValue_;$/;"	m	class:TePDIMMIOMatching::CalcCCorrelationMtxParams
returnValue_	image_processing/TePDIMMIOMatching.hpp	/^          volatile bool returnValue_;$/;"	m	class:TePDIMMIOMatching::ExtractLocalMaximasParams
returnValue_	image_processing/TePDIMMIOMatching.hpp	/^          volatile bool returnValue_;$/;"	m	class:TePDIMMIOMatching::LoadImageParams
returnValue_	image_processing/TePDIMMIOMatching.hpp	/^        volatile bool returnValue_;$/;"	m	struct:TePDIMMIOMatching::GenerateCorrelationFeaturesParams
returnValue_	image_processing/TePDISAMClassifier.hpp	/^          volatile bool returnValue_;$/;"	m	class:TePDISAMClassifier::SegThread
reverse_iterator	kernel/TeComposite.h	/^	typedef typename vector<T>::reverse_iterator reverse_iterator;$/;"	t	class:TeComposite
reverse_iterator	kernel/TeGeometry.h	/^	typedef typename TeComposite<T>::reverse_iterator reverse_iterator;$/;"	t	class:TeGeomComposite
rewind	kernel/TeStdFile.cpp	/^TeStdFile::rewind()$/;"	f	class:TeStdFile
rgb2Hsv	utils/TeColorUtils.cpp	/^void rgb2Hsv(const TeColor& c, int& h, int& s, int& v)$/;"	f
rgb2ihs	image_processing/TePDIIHSWaveletFusion.cpp	/^void TePDIIHSWaveletFusion::rgb2ihs(double *rgb, double *ihs)$/;"	f	class:TePDIIHSWaveletFusion
rgbBits	drivers/GL/glcore.h	/^    GLint rgbBits;		\/* total bits for rgb *\/$/;"	m	struct:__GLcontextModesRec
rgbBits	drivers/GL/internal/glcore.h	/^    GLint rgbBits;		\/* total bits for rgb *\/$/;"	m	struct:__GLcontextModesRec
rgbMode	drivers/GL/glcore.h	/^    GLboolean rgbMode;$/;"	m	struct:__GLcontextModesRec
rgbMode	drivers/GL/glxint.h	/^    GLboolean rgbMode;$/;"	m	struct:__GLXFBConfigRec
rgbMode	drivers/GL/internal/glcore.h	/^    GLboolean rgbMode;$/;"	m	struct:__GLcontextModesRec
rgba	drivers/GL/glxint.h	/^    Bool rgba;$/;"	m	struct:__GLXvisualConfigRec
rgbmap_	kernel/TeRasterTransform.h	/^	map<TeRGBChannels,short> rgbmap_;$/;"	m	class:TeRasterTransform
rid	drivers/Oracle/OCI/include/ocidfn.h	/^    } rid;$/;"	m	struct:cda_def	typeref:struct:cda_def::__anon87
rid	drivers/Oracle/OCI/include/ocidfn.h	/^    } rid;$/;"	m	struct:cda_head	typeref:struct:cda_head::__anon85
right	kernel/TeTin.h	/^	long right ()$/;"	f	class:TeTinEdge
rightMouseWasClicked_	drivers/qt/TeQtDatabasesListView.h	/^	bool				rightMouseWasClicked_;$/;"	m	class:TeQtDatabasesListView
rightMouseWasClicked_	drivers/qt/TeQtViewsListView.h	/^	bool				rightMouseWasClicked_;$/;"	m	class:TeQtViewsListView
rightNeighborhood_	functions/TeAddressLocator.h	/^	string rightNeighborhood_;		\/\/!< The field name for the right location neighborhood$/;"	m	struct:TeAddressMetadata
rightNeighborhood_	functions/TeAddressLocator.h	/^	string rightNeighborhood_;		\/\/!< The right location neighborhood$/;"	m	struct:TeAddressDescription
rightZipCode_	functions/TeAddressLocator.h	/^	string rightZipCode_;			\/\/!< The field name for the right location zip code$/;"	m	struct:TeAddressMetadata
rightZipCode_	functions/TeAddressLocator.h	/^	string rightZipCode_;			\/\/!< The right location zip code$/;"	m	struct:TeAddressDescription
right_	kernel/TeKdTree.h	/^		TeAdaptativeKdTreeNode* right_;$/;"	m	class:TeSAM::TeAdaptativeKdTreeNode
right_	kernel/TeKdTree.h	/^		TeKdTreeNode* right_;$/;"	m	class:TeSAM::TeKdTreeNode
right_	kernel/TeRedBlackTree.h	/^			TeRedBlackNode* right_;$/;"	m	class:TeREDBLACK::TeRedBlackNode
right_	kernel/TeTin.h	/^	long	left_, right_;$/;"	m	class:TeTinEdge
rimplPtr	drivers/Oracle/OCI/include/occiObjects.h	/^  RefImpl  *rimplPtr;$/;"	m	class:oracle::occi::Ref
rmax_	kernel/TeRasterTransform.h	/^	double rmin_, rmax_;$/;"	m	class:TeRasterTransform
rmin_	kernel/TeRasterTransform.h	/^	double rmin_, rmax_;$/;"	m	class:TeRasterTransform
rmse_index	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::rmse_index(TePDITypes::TePDIRasterPtrType original, int original_band, TePDITypes::TePDIRasterPtrType fused, int fused_band, TeSharedPtr<double> rmse)$/;"	f	class:TePDIFusionIndexes
rname_	drivers/GTM/TeGTM.h	/^	char* wname_, *wcomment_, *rname_;\/\/wname deve ser char[10]$/;"	m	class:TeGTMRoutes
robust_close	drivers/SQLite/sqlite3/sqlite3.c	/^static void robust_close(unixFile *pFile, int h, int lineno){$/;"	f	file:
robust_flock	drivers/SQLite/sqlite3/sqlite3.c	/^static int robust_flock(int fd, int op){$/;"	f	file:
robust_flock	drivers/SQLite/sqlite3/sqlite3.c	26671;"	d	file:
robust_ftruncate	drivers/SQLite/sqlite3/sqlite3.c	/^static int robust_ftruncate(int h, sqlite3_int64 sz){$/;"	f	file:
robust_open	drivers/SQLite/sqlite3/sqlite3.c	/^static int robust_open(const char *z, int f, int m){$/;"	f	file:
rollBackTransaction	drivers/PostgreSQL/TePGInterface.cpp	/^bool TePGConnection::rollBackTransaction(void)$/;"	f	class:TePGConnection
rollbackTransaction	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::rollbackTransaction()$/;"	f	class:TeFirebird
rollbackTransaction	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::rollbackTransaction()$/;"	f	class:TeMySQL
rollbackTransaction	drivers/Oracle/TeOCIOracle.cpp	/^bool TeOCIOracle::rollbackTransaction()$/;"	f	class:TeOCIOracle
rollbackTransaction	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::rollbackTransaction()$/;"	f	class:TePostgreSQL
rollbackTransaction	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::rollbackTransaction()$/;"	f	class:TeSQLite
rollbackTransaction	drivers/ado/TeAdoDB.cpp	/^bool TeAdo::rollbackTransaction()$/;"	f	class:TeAdo
rollbackTransaction	kernel/TeDatabase.cpp	/^TeDatabase::rollbackTransaction()$/;"	f	class:TeDatabase
rollback_hook	drivers/SQLite/sqlite3/sqlite3.c	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
rollback_hook	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
roolUp	image_processing/TePDIRasterRUBuffer.cpp	/^bool TePDIRasterRUBuffer::roolUp()$/;"	f	class:TePDIRasterRUBuffer
root	kernel/TeView.h	/^	virtual TeViewTree* root () { return &viewTree_; }$/;"	f	class:TeView
root_	kernel/TeKdTree.h	/^		KdTreeNode* root_;$/;"	m	class:TeSAM::TeBasicKdTree
root_	kernel/TeRTree.h	/^		TeRTreeNodeType* root_;		\/\/!< Pointer to root node$/;"	m	class:TeSAM::TeRTree
root_	kernel/TeRedBlackTree.h	/^			NODE* root_;	\/\/!< Tree's root.			$/;"	m	class:TeREDBLACK::TeRBTree
rotatePolygon	kernel/TePolygonSetProperties.cpp	/^TePolygon TePolygonSetProperties::rotatePolygon( unsigned int polIndex, double angle )$/;"	f	class:TePolygonSetProperties
roundFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void roundFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
routeAttributeList	drivers/GTM/TeGTM.cpp	/^void TeGTM::routeAttributeList(TeAttributeList& attList)$/;"	f	class:TeGTM
routeTable_	drivers/GTM/TeGTM.h	/^	TeTable routeTable_;$/;"	m	class:TeGTM
routesLayer	drivers/GTM/TeGTM.h	/^	std::map<std::string, std::vector<TePoint> > routesLayer;$/;"	m	class:TeGTM
routes_	drivers/GTM/TeGTM.h	/^	vector<TeGTMRoutes*> routes_;$/;"	m	class:TeGTM
row	kernel/TeSparseMatrix.h	/^    IndexType row, column;$/;"	m	class:MatrixElement
rowSetListToTree	drivers/SQLite/sqlite3/sqlite3.c	/^static struct RowSetEntry *rowSetListToTree(struct RowSetEntry *pList){$/;"	f	file:
rowSetMerge	drivers/SQLite/sqlite3/sqlite3.c	/^static struct RowSetEntry *rowSetMerge($/;"	f	file:
rowSetNDeepTree	drivers/SQLite/sqlite3/sqlite3.c	/^static struct RowSetEntry *rowSetNDeepTree($/;"	f	file:
rowSetSort	drivers/SQLite/sqlite3/sqlite3.c	/^static void rowSetSort(RowSet *p){$/;"	f	file:
rowSetToList	drivers/SQLite/sqlite3/sqlite3.c	/^static void rowSetToList(RowSet *p){$/;"	f	file:
rowSetTreeToList	drivers/SQLite/sqlite3/sqlite3.c	/^static void rowSetTreeToList($/;"	f	file:
rowToEdit_	drivers/qt/TeQtGrid.h	/^	int						rowToEdit_;$/;"	m	class:TeQtGrid
row_	drivers/MySQL/TeMySQL.h	/^  char**		row_;$/;"	m	class:TeMySQLPortal
row_Cur_	drivers/Oracle/TeOCICursor.h	/^	int					row_Cur_;		\/\/!< absolute current row index in the memory buffer$/;"	m	class:TeOCICursor
row_Index_	drivers/Oracle/TeOCICursor.h	/^	short				row_Index_;		\/\/!< relative current row index in the memory buffer$/;"	m	class:TeOCICursor
row_pctx	drivers/Oracle/OCI/include/cdemodp0.h	/^  ub4   row_pctx;                               \/* which row in column array *\/$/;"	m	struct:pctx
rowid	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 rowid;          \/* Used by UNPACKED_PREFIX_SEARCH *\/$/;"	m	struct:UnpackedRecord	file:
rowidIsValid	drivers/SQLite/sqlite3/sqlite3.c	/^  Bool rowidIsValid;    \/* True if lastRowid is valid *\/$/;"	m	struct:VdbeCursor	file:
rowidWrite	drivers/SQLite/sqlite3/sqlite3.c	/^static int rowidWrite(Rtree *pRtree, sqlite3_int64 iRowid, sqlite3_int64 iNode){$/;"	f	file:
rows	kernel/TeSparseMatrix.h	/^    size_type rows, columns;$/;"	m	class:TeSparseMatrix
rows_Fetched_	drivers/Oracle/TeOCICursor.h	/^	int					rows_Fetched_;	\/\/!< number of rows fetched from database$/;"	m	class:TeOCICursor
rows_Mem_	drivers/Oracle/TeOCICursor.h	/^	int					rows_Mem_;		\/\/!< number of rows on memory buffer - client side$/;"	m	class:TeOCICursor
rowsperstrip_	kernel/TeDecoderTIFF.h	/^	unsigned long	rowsperstrip_;	\/\/ number of rows per strip$/;"	m	class:TeDecoderTIFF
rpIgnoreChecksums	drivers/Firebird/ibpp/core/ibpp.h	/^		rpReadOnly = 0x100, rpIgnoreChecksums = 0x200, rpKillShadows = 0x400$/;"	e	enum:IBPP::RPF
rpKillShadows	drivers/Firebird/ibpp/core/ibpp.h	/^		rpReadOnly = 0x100, rpIgnoreChecksums = 0x200, rpKillShadows = 0x400$/;"	e	enum:IBPP::RPF
rpMendRecords	drivers/Firebird/ibpp/core/ibpp.h	/^		rpMendRecords = 0x1, rpValidatePages = 0x2, rpValidateFull = 0x4,$/;"	e	enum:IBPP::RPF
rpReadOnly	drivers/Firebird/ibpp/core/ibpp.h	/^		rpReadOnly = 0x100, rpIgnoreChecksums = 0x200, rpKillShadows = 0x400$/;"	e	enum:IBPP::RPF
rpValidateFull	drivers/Firebird/ibpp/core/ibpp.h	/^		rpMendRecords = 0x1, rpValidatePages = 0x2, rpValidateFull = 0x4,$/;"	e	enum:IBPP::RPF
rpValidatePages	drivers/Firebird/ibpp/core/ibpp.h	/^		rpMendRecords = 0x1, rpValidatePages = 0x2, rpValidateFull = 0x4,$/;"	e	enum:IBPP::RPF
rpc	drivers/Oracle/OCI/include/ocidfn.h	/^    ub4          rpc;                                \/* rows processed count *\/$/;"	m	struct:cda_def
rpc	drivers/Oracle/OCI/include/ocidfn.h	/^    ub4          rpc;$/;"	m	struct:cda_head
rtreeBestIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
rtreeBoxIntersects	kernel/TeRTree.h	/^		bool rtreeBoxIntersects(const TeBox& bx1, const TeBox& bx2) const$/;"	f	class:TeSAM::TeRTree
rtreeClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeColumn	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
rtreeConnect	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeConnect($/;"	f	file:
rtreeCreate	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeCreate($/;"	f	file:
rtreeDeleteRowid	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeDeleteRowid(Rtree *pRtree, sqlite3_int64 iDelete){$/;"	f	file:
rtreeDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeDestroy(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeDisconnect	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeEof	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeFilter	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeFilter($/;"	f	file:
rtreeInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeInit($/;"	f	file:
rtreeInsertCell	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeInsertCell($/;"	f	file:
rtreeModule	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3_module rtreeModule = {$/;"	v	file:
rtreeNext	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeNext(sqlite3_vtab_cursor *pVtabCursor){$/;"	f	file:
rtreeOpen	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
rtreePolygons_	image_processing/TePDIRaster2Vector.hpp	/^      TeSAM::TeRTree<unsigned int, 8, 4>*    rtreePolygons_;$/;"	m	class:TePDIRaster2Vector
rtreeReference	drivers/SQLite/sqlite3/sqlite3.c	/^static void rtreeReference(Rtree *pRtree){$/;"	f	file:
rtreeRelease	drivers/SQLite/sqlite3/sqlite3.c	/^static void rtreeRelease(Rtree *pRtree){$/;"	f	file:
rtreeRename	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeRename(sqlite3_vtab *pVtab, const char *zNewName){$/;"	f	file:
rtreeRowid	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeRowid(sqlite3_vtab_cursor *pVtabCursor, sqlite_int64 *pRowid){$/;"	f	file:
rtreeSqlInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeSqlInit($/;"	f	file:
rtreeUpdate	drivers/SQLite/sqlite3/sqlite3.c	/^static int rtreeUpdate($/;"	f	file:
rtreedepth	drivers/SQLite/sqlite3/sqlite3.c	/^static void rtreedepth(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
rtreenode	drivers/SQLite/sqlite3/sqlite3.c	/^static void rtreenode(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
run	drivers/qt/TeQtAnimaThread.cpp	/^void TeQtAnimaThread::run()$/;"	f	class:TeQtAnimaThread
run	image_processing/TePDICorrelationMatching.cpp	/^void TePDICorrelationMatching::CorrThread::run()$/;"	f	class:TePDICorrelationMatching::CorrThread
run	image_processing/TePDISAMClassifier.cpp	/^void TePDISAMClassifier::SegThread::run()$/;"	f	class:TePDISAMClassifier::SegThread
run	kernel/TeThreadFunctor.cpp	/^void TeThreadFunctor::run()$/;"	f	class:TeThreadFunctor
runOnlyOnce	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 runOnlyOnce;         \/* Automatically expire on reset *\/$/;"	m	struct:Vdbe	file:
runPlugin	drivers/spl/PluginsManager.cpp	/^bool PluginsManager::runPlugin( const PluginInfo& pinfo ) const$/;"	f	class:PluginsManager
run_schema_dump_query	drivers/SQLite/sqlite3/shell.c	/^static int run_schema_dump_query($/;"	f	file:
run_table_dump_query	drivers/SQLite/sqlite3/shell.c	/^static int run_table_dump_query($/;"	f	file:
runningJobsList_	kernel/TeThreadJobsManager.h	/^      JobsListT runningJobsList_;$/;"	m	struct:TeThreadJobsManager::InternalManagerDataStruct
s	drivers/SQLite/sqlite3/sqlite3.c	/^  Mem s;                \/* The return value is stored here *\/$/;"	m	struct:sqlite3_context	file:
s	drivers/SQLite/sqlite3/sqlite3.c	/^  double s;          \/* Seconds *\/$/;"	m	struct:DateTime	file:
s	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char s[256];          \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
sArg	drivers/SQLite/sqlite3/sqlite3.c	/^  Token sArg;                \/* Complete text of a module argument *\/$/;"	m	struct:Parse	file:
sBegin	drivers/SQLite/sqlite3/shell.c	/^static struct rusage sBegin;$/;"	v	typeref:struct:rusage	file:
sColMap	drivers/SQLite/sqlite3/sqlite3.c	/^  struct sColMap {  \/* Mapping of columns in pFrom to columns in zTo *\/$/;"	s	struct:FKey	file:
sLastToken	drivers/SQLite/sqlite3/sqlite3.c	/^  Token sLastToken;    \/* The last token parsed *\/$/;"	m	struct:Parse	file:
sNameToken	drivers/SQLite/sqlite3/sqlite3.c	/^  Token sNameToken;    \/* Token with unqualified schema object name *\/$/;"	m	struct:Parse	file:
s_	utils/TeColorUtils.h	/^	int		s_;$/;"	m	struct:ColorBar
safety_level	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 safety_level;     \/* How aggressive at syncing data to disk *\/$/;"	m	struct:Db	file:
sampleBuffers	drivers/GL/glcore.h	/^    GLint sampleBuffers;$/;"	m	struct:__GLcontextModesRec
sampleBuffers	drivers/GL/internal/glcore.h	/^    GLint sampleBuffers;$/;"	m	struct:__GLcontextModesRec
samples	drivers/GL/glcore.h	/^    GLint samples;$/;"	m	struct:__GLcontextModesRec
samples	drivers/GL/internal/glcore.h	/^    GLint samples;$/;"	m	struct:__GLcontextModesRec
samplesMatrix_	image_processing/TePDISAMClassifier.hpp	/^          TePDIMatrix< double > samplesMatrix_;$/;"	m	class:TePDISAMClassifier::ClassSpectralSamples
samplesMeansVec_	image_processing/TePDISAMClassifier.hpp	/^          std::vector< double > samplesMeansVec_;$/;"	m	class:TePDISAMClassifier::ClassReferenceData
save	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::save()$/;"	f	class:TeExternalTheme
save	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::save(TeDatabase* db, const bool& copyExternalCollection)  $/;"	f	class:TeExternalTheme
save	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::save(const bool& copyExternalCollection)$/;"	f	class:TeExternalTheme
save	kernel/TeFileTheme.cpp	/^bool TeFileTheme::save()$/;"	f	class:TeFileTheme
save	kernel/TePieBar.h	/^	void save()$/;"	f	class:TePieBar
save	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::save()$/;"	f	class:TeSFSTheme
save	kernel/TeTheme.cpp	/^TeTheme::save()$/;"	f	class:TeTheme
saveAllCursors	drivers/SQLite/sqlite3/sqlite3.c	/^static int saveAllCursors(BtShared *pBt, Pgno iRoot, BtCursor *pExcept){$/;"	f	file:
saveAttributeTable	kernel/TeLayer.cpp	/^TeLayer::saveAttributeTable(TeTable& table)$/;"	f	class:TeLayer
saveCentroidLabel	drivers/qt/TeApplicationUtils.cpp	/^bool saveCentroidLabel(TeDatabase* db, const TePolygonSet& polys, const std::string& collTable)$/;"	f
saveCursorPosition	drivers/SQLite/sqlite3/sqlite3.c	/^static int saveCursorPosition(BtCursor *pCur){$/;"	f	file:
saveData	kernel/TeDecoderASCIIGrid.cpp	/^TeDecoderASCIIGrid::saveData(TeAsciiFile& pFile)$/;"	f	class:TeDecoderASCIIGrid
saveData	kernel/TeDecoderSPR.cpp	/^TeDecoderSPR::saveData(TeAsciiFile& pFile)$/;"	f	class:TeDecoderSPR
saveExternalDBConnection	kernel/TeDBConnectionsPool.cpp	/^void TeDBConnectionsPool::saveExternalDBConnection(TeDatabase* mainDb, $/;"	f	class:TeDBConnectionsPool
saveGALFile	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::saveGALFile (const string& name, map<string, string>* ids) $/;"	f	class:TeGeneralizedProxMatrix
saveGALFile	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::saveGALFile (const string& name, vector<string>* ids) $/;"	f	class:TeGeneralizedProxMatrix
saveGALFile	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::saveGALFile (const string& name, map<string, string>* ids)$/;"	f	class:TeProxMatrixGraphBreymann
saveGALFile	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::saveGALFile (const string& name, vector<string>* ids)$/;"	f	class:TeProxMatrixGraphBreymann
saveGWTFile	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::saveGWTFile (const string& name, map<string, string>* ids) $/;"	f	class:TeGeneralizedProxMatrix
saveGWTFile	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::saveGWTFile (const string& name, vector<string>* ids) $/;"	f	class:TeGeneralizedProxMatrix
saveGWTFile	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::saveGWTFile (const string& name, map<string, string>* ids)$/;"	f	class:TeProxMatrixGraphBreymann
saveGWTFile	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::saveGWTFile (const string& name, vector<string>* ids)$/;"	f	class:TeProxMatrixGraphBreymann
saveGrouping	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::saveGrouping(TeSelectedObjects selectedObjects)$/;"	f	class:TeExternalTheme
saveGrouping	kernel/TeFileTheme.cpp	/^bool TeFileTheme::saveGrouping(TeSelectedObjects )$/;"	f	class:TeFileTheme
saveGrouping	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::saveGrouping(TeSelectedObjects selectedObjects)$/;"	f	class:TeSFSTheme
saveGrouping	kernel/TeTheme.cpp	/^TeTheme::saveGrouping(TeDatabase* db, TeSelectedObjects)$/;"	f	class:TeTheme
saveGrouping	kernel/TeTheme.cpp	/^TeTheme::saveGrouping(TeSelectedObjects selectedObjects)$/;"	f	class:TeTheme
saveLUTTable	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::saveLUTTable()$/;"	f	class:TeDecoderDatabase
saveLegendInCollection	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::saveLegendInCollection(TeDatabase* db, TeSelectedObjects \/* selectedObjects *\/, std::string objectId)$/;"	f	class:TeExternalTheme
saveLegendInCollection	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::saveLegendInCollection(TeSelectedObjects selectedObjects, std::string objectId)$/;"	f	class:TeExternalTheme
saveLegendInCollection	kernel/TeTheme.cpp	/^TeTheme::saveLegendInCollection(TeDatabase* db, TeSelectedObjects selectedObjects, std::string objectId)$/;"	f	class:TeTheme
saveLegendInCollection	kernel/TeTheme.cpp	/^TeTheme::saveLegendInCollection(TeSelectedObjects selectedObjects, std::string objectId)$/;"	f	class:TeTheme
saveLineInBlob	drivers/Firebird/TeFirebird.cpp	/^void saveLineInBlob(IBPP::Blob& blob, TeLinearRing& ring)$/;"	f
saveLut	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::saveLut()$/;"	f	class:TeDecoderTIFF
saveMetadata	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::saveMetadata(TeDatabase* dstDB)$/;"	f	class:TeExternalTheme
saveMetadata	kernel/TeFileTheme.cpp	/^bool TeFileTheme::saveMetadata(TeDatabase* localDb_)$/;"	f	class:TeFileTheme
saveMetadata	kernel/TeSFSTheme.cpp	/^bool TeSFSTheme::saveMetadata(TeDatabase* database)$/;"	f	class:TeSFSTheme
saveMetadata	kernel/TeTheme.h	/^	virtual bool saveMetadata(TeDatabase*) { return true; } $/;"	f	class:TeTheme
saveObjectStatus	drivers/qt/TeApplicationUtils.cpp	/^bool saveObjectStatus(TeAppTheme *appTheme, set<string>& objectSet, map<string, ObjectInfo>& objectMap)$/;"	f
savePushButton_clicked	drivers/qt/ui/mediaDescription.ui.h	/^void MediaDescription::savePushButton_clicked()$/;"	f	class:MediaDescription
saveTIN	kernel/TeTin.cpp	/^TeTin::saveTIN(TeDatabase* db, TeLayer* layer, TePolygonSet& ps,$/;"	f	class:TeTin
saveTINdb	kernel/TeTin.cpp	/^TeTin::saveTINdb(TeDatabase* db, TeProjection* proj, string& outlayername, string& tablename)$/;"	f	class:TeTin
saveTINdb	kernel/TeTin.cpp	/^TeTin::saveTINdb(TeDatabase* db, string& outlayername, string& tablename)$/;"	f	class:TeTin
saveTextFile	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::saveTextFile (const string& name, map<string, string>* ids) $/;"	f	class:TeGeneralizedProxMatrix
saveTextFile	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::saveTextFile (const string& name, vector<string>* ids) $/;"	f	class:TeGeneralizedProxMatrix
saveTextFile	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::saveTextFile (const string& name, map<string, string>* ids)$/;"	f	class:TeProxMatrixGraphBreymann
saveTextFile	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::saveTextFile (const string& name, vector<string>* ids)$/;"	f	class:TeProxMatrixGraphBreymann
saveVertexTIN	kernel/TeTin.cpp	/^TeTin::saveVertexTIN(TeDatabase* db, TeLayer* layer, TePointSet& ps,$/;"	f	class:TeTin
saveVertexTINdb	kernel/TeTin.cpp	/^TeTin::saveVertexTINdb(TeDatabase* db, string& outlayername, string& tablename)$/;"	f	class:TeTin
save_err_msg	drivers/SQLite/sqlite3/shell.c	/^static char *save_err_msg($/;"	f	file:
savedNQueryLoop	drivers/SQLite/sqlite3/sqlite3.c	/^  double savedNQueryLoop;        \/* pParse->nQueryLoop outside the WHERE loop *\/$/;"	m	struct:WhereInfo	file:
saved_cnt	drivers/SQLite/sqlite3/sqlite3.c	/^static int saved_cnt;$/;"	v	file:
sb1	drivers/Oracle/OCI/include/oratypes.h	/^typedef   signed char  sb1;                  $/;"	t
sb1	drivers/Oracle/OCI/include/oratypes.h	37;"	d
sb2	drivers/Oracle/OCI/include/oratypes.h	/^typedef   signed short    sb2;   $/;"	t
sb2	drivers/Oracle/OCI/include/oratypes.h	56;"	d
sb2ind	drivers/Oracle/TeOCICursor.h	/^struct TLORACLE_DLL sb2ind$/;"	s
sb4	drivers/Oracle/OCI/include/oratypes.h	/^typedef   signed int  sb4;                   $/;"	t
sb4	drivers/Oracle/OCI/include/oratypes.h	76;"	d
sb8	drivers/Oracle/OCI/include/oratypes.h	/^ typedef orasb8 sb8;$/;"	t
sb8	drivers/Oracle/OCI/include/oratypes.h	99;"	d
sbig_ora	drivers/Oracle/OCI/include/oratypes.h	/^typedef   signed _int64 sbig_ora;     $/;"	t
sbig_ora	drivers/Oracle/OCI/include/oratypes.h	/^typedef   signed long  sbig_ora;             $/;"	t
sbig_ora	drivers/Oracle/OCI/include/oratypes.h	222;"	d
sbig_ora	drivers/Oracle/OCI/include/oratypes.h	241;"	d
sbind	drivers/Oracle/TeOCICursor.h	/^	sb2		sbind[MAX_ROWS];$/;"	m	struct:sb2ind
sc_	kernel/TeGeneralizedProxMatrix.h	/^	TeProxMatrixConstructionStrategy<Set>* sc_;   $/;"	m	class:TeGeneralizedProxMatrix
scalarFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void scalarFunc($/;"	f	file:
scale	kernel/TeCoord2D.h	/^	void	scale ( const double xscale, const double yscale )$/;"	f	class:TeCoord2D
scale	kernel/TeProjection.h	/^	double  scale()  { return GPscale;   }$/;"	f	class:TeProjection
scale	kernel/TeProjection.h	/^	double  scale;       \/\/!< projection scale (used in UTM)$/;"	m	struct:TeProjectionParams
scale1_	drivers/GTM/TeGTM.h	/^	double origin_, falseeast_, scale1_, falsenorthing_, axis_, flattening_;$/;"	m	class:TeGTMGridDatum
scale1_	drivers/GTM/TeGTM.h	/^	float scale1_;$/;"	m	class:TeGTMWaypointsStyles
scaleApx	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::scaleApx(double scale)$/;"	f	class:TeQtCanvas
scaleApx	drivers/qt/TeQtCanvas.h	/^	double scaleApx() {return scaleApx_;}$/;"	f	class:TeQtCanvas
scaleApx_	drivers/qt/TeQtCanvas.h	/^	double	scaleApx_;$/;"	m	class:TeQtCanvas
scale_	drivers/qt/TeQtCanvas.h	/^	int		scale_;$/;"	m	class:TeQtCanvas
scale_	drivers/qt/TeQtGLWidget.h	/^	GLfloat scale_;$/;"	m	class:TeQtGLWidget
scale_	kernel/TeAttribute.h	/^	TeMeasurementScale  scale_;	\/\/!< scale of measurement$/;"	m	struct:TeAttribute
scales	kernel/TeDatabase.cpp	/^static const int scales [] =$/;"	v	file:
scatter	drivers/qwt/TeQwtPlotPicker.h	/^        scatter,$/;"	e	enum:TeQwtPlotPicker::CursorMode
schemaAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId schemaAttrId[SCHEMA_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
schemaAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType schemaAttrType[SCHEMA_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
schemaIsValid	drivers/SQLite/sqlite3/sqlite3.c	/^static void schemaIsValid(Parse *pParse){$/;"	f	file:
schema_cookie	drivers/SQLite/sqlite3/sqlite3.c	/^  int schema_cookie;   \/* Database schema version number for this file *\/$/;"	m	struct:Schema	file:
scratchAllocOut	drivers/SQLite/sqlite3/sqlite3.c	/^static int scratchAllocOut = 0;$/;"	v	file:
screen	drivers/GL/glcore.h	/^    GLint screen;$/;"	m	struct:__GLcontextModesRec
screen	drivers/GL/glxint.h	/^    int screen;$/;"	m	struct:__GLXFBConfigRec
screen	drivers/GL/internal/glcore.h	/^    GLint screen;$/;"	m	struct:__GLcontextModesRec
screenConfigs	drivers/GL/dri_interface.h	/^    void *screenConfigs;$/;"	m	struct:__DRIscreenRec
screenConfigs	drivers/GL/internal/dri_interface.h	/^    void *screenConfigs;$/;"	m	struct:__DRIscreenRec
scrollToAnchor	drivers/qt/ui/help.ui.h	/^void Help::scrollToAnchor( const QString &name)$/;"	f	class:Help
scrollToNextPointedObjectSlot	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::scrollToNextPointedObjectSlot()$/;"	f	class:TeQtGrid
scrollToNextQueriedObjectSlot	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::scrollToNextQueriedObjectSlot()$/;"	f	class:TeQtGrid
scrollToPrevPointedObjectSlot	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::scrollToPrevPointedObjectSlot()$/;"	f	class:TeQtGrid
scrollToPrevQueriedObjectSlot	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::scrollToPrevQueriedObjectSlot()$/;"	f	class:TeQtGrid
sdArray	drivers/Firebird/ibpp/core/ibpp.h	/^	enum SDT {sdArray, sdBlob, sdDate, sdTime, sdTimestamp, sdString,$/;"	e	enum:IBPP::SDT
sdBlob	drivers/Firebird/ibpp/core/ibpp.h	/^	enum SDT {sdArray, sdBlob, sdDate, sdTime, sdTimestamp, sdString,$/;"	e	enum:IBPP::SDT
sdDate	drivers/Firebird/ibpp/core/ibpp.h	/^	enum SDT {sdArray, sdBlob, sdDate, sdTime, sdTimestamp, sdString,$/;"	e	enum:IBPP::SDT
sdDouble	drivers/Firebird/ibpp/core/ibpp.h	/^		sdSmallint, sdInteger, sdLargeint, sdFloat, sdDouble};$/;"	e	enum:IBPP::SDT
sdFloat	drivers/Firebird/ibpp/core/ibpp.h	/^		sdSmallint, sdInteger, sdLargeint, sdFloat, sdDouble};$/;"	e	enum:IBPP::SDT
sdInteger	drivers/Firebird/ibpp/core/ibpp.h	/^		sdSmallint, sdInteger, sdLargeint, sdFloat, sdDouble};$/;"	e	enum:IBPP::SDT
sdLargeint	drivers/Firebird/ibpp/core/ibpp.h	/^		sdSmallint, sdInteger, sdLargeint, sdFloat, sdDouble};$/;"	e	enum:IBPP::SDT
sdSmallint	drivers/Firebird/ibpp/core/ibpp.h	/^		sdSmallint, sdInteger, sdLargeint, sdFloat, sdDouble};$/;"	e	enum:IBPP::SDT
sdString	drivers/Firebird/ibpp/core/ibpp.h	/^	enum SDT {sdArray, sdBlob, sdDate, sdTime, sdTimestamp, sdString,$/;"	e	enum:IBPP::SDT
sdTime	drivers/Firebird/ibpp/core/ibpp.h	/^	enum SDT {sdArray, sdBlob, sdDate, sdTime, sdTimestamp, sdString,$/;"	e	enum:IBPP::SDT
sdTimestamp	drivers/Firebird/ibpp/core/ibpp.h	/^	enum SDT {sdArray, sdBlob, sdDate, sdTime, sdTimestamp, sdString,$/;"	e	enum:IBPP::SDT
sdo_elem_info	drivers/Oracle/TeOCICursor.h	/^   OCIArray        *sdo_elem_info;$/;"	m	struct:sdo_geometry
sdo_elem_info	drivers/Oracle/TeOCICursor.h	/^   OCIInd                    sdo_elem_info;$/;"	m	struct:SDO_GEOMETRY_ind
sdo_geometry	drivers/Oracle/TeOCICursor.h	/^struct TLORACLE_DLL sdo_geometry$/;"	s
sdo_gtype	drivers/Oracle/TeOCICursor.h	/^   OCIInd                    sdo_gtype;$/;"	m	struct:SDO_GEOMETRY_ind
sdo_gtype	drivers/Oracle/TeOCICursor.h	/^   OCINumber       sdo_gtype;$/;"	m	struct:sdo_geometry
sdo_ordinates	drivers/Oracle/TeOCICursor.h	/^   OCIArray        *sdo_ordinates;$/;"	m	struct:sdo_geometry
sdo_ordinates	drivers/Oracle/TeOCICursor.h	/^   OCIInd                    sdo_ordinates;$/;"	m	struct:SDO_GEOMETRY_ind
sdo_point	drivers/Oracle/TeOCICursor.h	/^   sdo_point_type  sdo_point;$/;"	m	struct:sdo_geometry
sdo_point	drivers/Oracle/TeOCICursor.h	/^   struct sdo_point_type_ind sdo_point;$/;"	m	struct:SDO_GEOMETRY_ind	typeref:struct:SDO_GEOMETRY_ind::sdo_point_type_ind
sdo_point_type	drivers/Oracle/TeOCICursor.h	/^struct TLORACLE_DLL sdo_point_type$/;"	s
sdo_point_type	drivers/Oracle/TeOCICursor.h	/^typedef struct sdo_point_type sdo_point_type;$/;"	t	typeref:struct:sdo_point_type
sdo_point_type_ind	drivers/Oracle/TeOCICursor.h	/^struct TLORACLE_DLL sdo_point_type_ind$/;"	s
sdo_point_type_ind	drivers/Oracle/TeOCICursor.h	/^typedef struct sdo_point_type_ind sdo_point_type_ind;$/;"	t	typeref:struct:sdo_point_type_ind
sdo_srid	drivers/Oracle/TeOCICursor.h	/^   OCIInd                    sdo_srid;$/;"	m	struct:SDO_GEOMETRY_ind
sdo_srid	drivers/Oracle/TeOCICursor.h	/^   OCINumber       sdo_srid;$/;"	m	struct:sdo_geometry
seachSubImagesNmb_	image_processing/TePDIMMIOMatching.hpp	/^          unsigned seachSubImagesNmb_; \/\/ Number of sub-images to seach.$/;"	m	class:TePDIMMIOMatching::ExtractLocalMaximasParams
search	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::search(const TeBox& b, std::vector<int>& result)$/;"	f	class:TeBaseSTInstanceSet
search	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::search(const TeBox& b, vector<InstanceType* >& result)$/;"	f	class:TeBaseSTInstanceSet
search	kernel/TeKdTree.h	/^		void search(const TeBox& rect, vector<KdTreeNode*>& report) const$/;"	f	class:TeSAM::TeAdaptativeKdTree
search	kernel/TeKdTree.h	/^		void search(const TeBox& rect, vector<KdTreeNode*>& report) const$/;"	f	class:TeSAM::TeKdTree
search	kernel/TeKdTree.h	/^void TeAdaptativeKdTree<KdTreeNode>::search(const TeBox& rect, KdTreeNode* node, vector<KdTreeNode*>& report) const$/;"	f	class:TeSAM::TeAdaptativeKdTree
search	kernel/TeKdTree.h	/^void TeAdaptativeKdTree<KdTreeNode>::search(const TeBox& rect, vector<kdDataItem>& report) const$/;"	f	class:TeSAM::TeAdaptativeKdTree
search	kernel/TeKdTree.h	/^void TeKdTree<KdTreeNode>::search(const TeBox& rect, KdTreeNode* node, const char& level, vector<KdTreeNode*>& report) const$/;"	f	class:TeSAM::TeKdTree
search	kernel/TeRTree.h	/^		int search(const TeBox& rect, vector<DATATYPE>& report) const$/;"	f	class:TeSAM::TeRTree
search	kernel/TeRTree.h	/^void TeRTree<DATATYPE, MAXNODES, MINNODES>::search(const TeBox& rect, TeRTreeNodeType* node, vector<DATATYPE>& report, int& foundObjs) const$/;"	f	class:TeSAM::TeRTree
search	kernel/TeSTEvent.cpp	/^bool TeSTEventSet::search(const TeBox& b, vector<TeSTEvent* >& result)$/;"	f	class:TeSTEventSet
sec_dba_password_spec	drivers/Firebird/ibpp/core/ibase.h	797;"	d
sec_dba_user_name_spec	drivers/Firebird/ibpp/core/ibase.h	796;"	d
sec_first_name_spec	drivers/Firebird/ibpp/core/ibase.h	793;"	d
sec_flags	drivers/Firebird/ibpp/core/ibase.h	/^	short sec_flags;			\/* which fields are specified *\/$/;"	m	struct:__anon65
sec_gid_spec	drivers/Firebird/ibpp/core/ibase.h	789;"	d
sec_group_name_spec	drivers/Firebird/ibpp/core/ibase.h	792;"	d
sec_last_name_spec	drivers/Firebird/ibpp/core/ibase.h	795;"	d
sec_middle_name_spec	drivers/Firebird/ibpp/core/ibase.h	794;"	d
sec_password_spec	drivers/Firebird/ibpp/core/ibase.h	791;"	d
sec_protocol_local	drivers/Firebird/ibpp/core/ibase.h	802;"	d
sec_protocol_netbeui	drivers/Firebird/ibpp/core/ibase.h	800;"	d
sec_protocol_spx	drivers/Firebird/ibpp/core/ibase.h	801;"	d
sec_protocol_tcpip	drivers/Firebird/ibpp/core/ibase.h	799;"	d
sec_server_spec	drivers/Firebird/ibpp/core/ibase.h	790;"	d
sec_uid_spec	drivers/Firebird/ibpp/core/ibase.h	788;"	d
second	kernel/TeTime.h	/^	int second() const {return ts_.tm_sec;} $/;"	f	class:TeTime
sectorSize	drivers/SQLite/sqlite3/sqlite3.c	/^  DWORD sectorSize;       \/* Sector size of the device file is on *\/$/;"	m	struct:winFile	file:
sectorSize	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 sectorSize;             \/* Assumed sector size during rollback *\/$/;"	m	struct:Pager	file:
secureDelete	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 secureDelete;      \/* True if secure_delete is enabled *\/$/;"	m	struct:BtShared	file:
securePolicy_nzttWallet	drivers/Oracle/OCI/include/nzt.h	/^   nzttPolicy securePolicy_nzttWallet;    \/* secured-policy of the wallet *\/$/;"	m	struct:nzttWallet
seed	utils/mtrand.cpp	/^void MTRand_int32::seed(const unsigned long* array, int size) { \/\/ init by array$/;"	f	class:MTRand_int32
seed	utils/mtrand.cpp	/^void MTRand_int32::seed(unsigned long s) {  \/\/ init by 32 bit seed$/;"	f	class:MTRand_int32
seekAndRead	drivers/SQLite/sqlite3/sqlite3.c	/^static int seekAndRead(unixFile *id, sqlite3_int64 offset, void *pBuf, int cnt){$/;"	f	file:
seekAndWrite	drivers/SQLite/sqlite3/sqlite3.c	/^static int seekAndWrite(unixFile *id, i64 offset, const void *pBuf, int cnt){$/;"	f	file:
seekResult	drivers/SQLite/sqlite3/sqlite3.c	/^  int seekResult;$/;"	m	struct:VdbeCursor	file:
seekWinFile	drivers/SQLite/sqlite3/sqlite3.c	/^static int seekWinFile(winFile *pFile, sqlite3_int64 iOffset){$/;"	f	file:
seenInterrupt	drivers/SQLite/sqlite3/shell.c	/^static volatile int seenInterrupt = 0;$/;"	v	file:
segId_	kernel/TeIntersector.h	/^	unsigned int segId_;	\/\/!<  The segment id into a specified line.$/;"	m	struct:TeINTERSECTOR2::TeSegIdInPolygonSet
segNum_	kernel/TeIntersector.cpp	/^	unsigned int segNum_;$/;"	m	struct:TeIntersectionIndexKey	file:
segOrder	kernel/TeOverlayUtils.h	/^struct TL_DLL segOrder$/;"	s	namespace:TeOVERLAY
segParams_	image_processing/TePDIParaSegBaatzStrategy.hpp	/^      TePDIParameters segParams_;$/;"	m	class:TePDIParaSegBaatzStrategy
segParams_	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^      TePDIParameters segParams_;$/;"	m	class:TePDIParaSegRegGrowStrategy
segPtr_	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^        TePDIParaSegSegment const* segPtr_;$/;"	m	class:TePDIParaSegRegGrowStrategy::MergingSegmentInfo
segment	image_processing/TePDIBaatz.hpp	/^struct segment $/;"	s
segment_neighbor	image_processing/TePDIBaatz.hpp	/^struct segment_neighbor $/;"	s
segment_pixel	image_processing/TePDIBaatz.hpp	/^struct segment_pixel $/;"	s
segmentation	image_processing/TePDIBaatz.cpp	/^float segmentation(\/\/float **input_image, $/;"	f
segmentation_parameters	image_processing/TePDIBaatz.hpp	/^struct segmentation_parameters $/;"	s
segmenterThreadEntry	image_processing/TePDIParallelSegmenter.cpp	/^bool TePDIParallelSegmenter::segmenterThreadEntry(void* paramsPtr)$/;"	f	class:TePDIParallelSegmenter
segmenter_	image_processing/TePDIParaSegBaatzStrategy.hpp	/^      TePDIBaatz segmenter_;$/;"	m	class:TePDIParaSegBaatzStrategy
segmenter_	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^      TePDIRegGrowSeg segmenter_;$/;"	m	class:TePDIParaSegRegGrowStrategy
segmentsIdsCounterPtr_	image_processing/TePDIParaSegStrategyParams.hpp	/^      TePDIParaSegSegment::SegIdDataType volatile* segmentsIdsCounterPtr_;$/;"	m	class:TePDIParaSegStrategyParams::TePDIParaSegSegment
segmentsIdsCounterPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          TePDIParaSegSegment::SegIdDataType volatile* segmentsIdsCounterPtr_;$/;"	m	class:TePDIParallelSegmenter::GroupDataThreadEntryParams::TePDIParaSegSegment
segmentsIdsCounterPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          TePDIParaSegSegment::SegIdDataType volatile* segmentsIdsCounterPtr_;$/;"	m	class:TePDIParallelSegmenter::SegmenterThreadEntryParams::TePDIParaSegSegment
segments_	kernel/TeRaster.h	/^			TeCoordPairVect		segments_;$/;"	m	class:TeRaster::iteratorPoly
segsBlocksMatrixPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          SegmentsBlocksMatrixT* segsBlocksMatrixPtr_;$/;"	m	class:TePDIParallelSegmenter::GroupDataThreadEntryParams
segsBlocksMatrixPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          SegmentsBlocksMatrixT* segsBlocksMatrixPtr_;$/;"	m	class:TePDIParallelSegmenter::SegmenterThreadEntryParams
segsPtrsMatrix_	image_processing/TePDIParaSegSegmentsBlock.hpp	/^      SegmentsPointersMatrixT segsPtrsMatrix_;$/;"	m	class:TePDIParaSegSegmentsBlock
selFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 selFlags;          \/* Various SF_* values *\/$/;"	m	struct:Select	file:
selIni_	drivers/qt/TeQtGLWidget.h	/^	int selIni_;$/;"	m	class:TeQtGLWidget
selMode	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::selMode()$/;"	f	class:TeQtMultiTextEdit
selMode	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::selMode(bool m)$/;"	f	class:TeQtMultiTextEdit
selMode_	drivers/qt/TeQtTextEdit.h	/^	bool				 selMode_;$/;"	m	class:TeQtMultiTextEdit
selectAddColumnTypeAndCollation	drivers/SQLite/sqlite3/sqlite3.c	/^static void selectAddColumnTypeAndCollation($/;"	f	file:
selectAddSubqueryTypeInfo	drivers/SQLite/sqlite3/sqlite3.c	/^static int selectAddSubqueryTypeInfo(Walker *pWalker, Select *p){$/;"	f	file:
selectAllVisible_	drivers/qt/TeAddressNotifyFunctorWindow.h	/^		bool selectAllVisible_;$/;"	m	class:TeAdressNotifyFunctorWindow
selectArea	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::selectArea(int lev, double& x0, double& y0, double& x1, double& y1)$/;"	f	class:TeMrSIDReader
selectBlocks	drivers/MrSID/TeDecoderMrSID.cpp	/^bool TeDecoderMrSID::selectBlocks(TeBox& bbox, int resLevel, TeRasterParams& parBlock) $/;"	f	class:TeDecoderMrSID
selectBlocks	kernel/TeCoverageDecoderCacheLRU.h	/^    virtual void selectBlocks(const TePolygon& poly, const TeSpatialRelation relation, std::vector<TeCoverageBlock<T> >& selected, std::set<int>& dontSelect)$/;"	f	class:TeCoverageDecoderCacheLRU
selectBlocks	kernel/TeCoverageDecoderDatabase.h	/^    void selectBlocks(const TePolygon& poly, const TeSpatialRelation relation, std::vector<TeCoverageBlock<T> >& selected, std::set<int>& dontSelect)$/;"	f	class:TeCoverageDecoderDatabase
selectBlocks	kernel/TeDecoder.cpp	/^bool TeDecoder::selectBlocks(TeBox& \/* bb *\/, int \/* resFac *\/, TeRasterParams& \/*parBlock*\/)  $/;"	f	class:TeDecoder
selectBlocks	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::selectBlocks(TeBox& bb, int resFac, TeRasterParams& parBlock)  $/;"	f	class:TeDecoderDatabase
selectBlocks	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::selectBlocks(TeBox& bb, int resFac, TeRasterParams& parBlock, const std::string& blockId)  $/;"	f	class:TeDecoderDatabase
selectBlocks	kernel/TeRaster.cpp	/^bool TeRaster::selectBlocks(TeBox& bb, int resFac, TeRasterParams& parBlock) $/;"	f	class:TeRaster
selectCellSet	kernel/TeDatabase.cpp	/^TeDatabase::selectCellSet (const int& layerId, const string& table, const string& criteria, TeCellSet &cs)$/;"	f	class:TeDatabase
selectColumnsFromExprList	drivers/SQLite/sqlite3/sqlite3.c	/^static int selectColumnsFromExprList($/;"	f	file:
selectExpander	drivers/SQLite/sqlite3/sqlite3.c	/^static int selectExpander(Walker *pWalker, Select *p){$/;"	f	file:
selectFirst_	drivers/qt/TeAddressNotifyFunctorWindow.h	/^		bool selectFirst_;$/;"	m	class:TeAdressNotifyFunctorWindow
selectFromHexaedro	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::selectFromHexaedro()$/;"	f	class:TeQtGLWidget
selectGeomValuePairs	kernel/TeCoverage.h	/^    std::vector<TeGeomValuePair<T> >& selectGeomValuePairs(const TePolygon& poly, const TeSpatialRelation relation)$/;"	f	class:TeCoverage
selectGeomValuePairs	kernel/TeCoverageDecoder.h	/^    virtual void selectGeomValuePairs(const TePolygon& poly, const TeSpatialRelation relation, std::vector<TeGeomValuePair<T> >& selected)$/;"	f	class:TeCoverageDecoder
selectInnerLoop	drivers/SQLite/sqlite3/sqlite3.c	/^static void selectInnerLoop($/;"	f	file:
selectItem	drivers/qt/TeQtDatabasesListView.cpp	/^void TeQtDatabasesListView::selectItem(QListViewItem *item)$/;"	f	class:TeQtDatabasesListView
selectItem	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::selectItem(QListViewItem *item)$/;"	f	class:TeQtViewsListView
selectLayerItem	drivers/qt/TeQtDatabasesListView.cpp	/^void TeQtDatabasesListView::selectLayerItem(TeLayer *layer)$/;"	f	class:TeQtDatabasesListView
selectLineSet	kernel/TeDatabase.cpp	/^TeDatabase::selectLineSet (const string& table, const string& criteria, TeLineSet &ls)$/;"	f	class:TeDatabase
selectNodeIsConstant	drivers/SQLite/sqlite3/sqlite3.c	/^static int selectNodeIsConstant(Walker *pWalker, Select *NotUsed){$/;"	f	file:
selectOpName	drivers/SQLite/sqlite3/sqlite3.c	/^static const char *selectOpName(int id){$/;"	f	file:
selectPointSet	kernel/TeDatabase.cpp	/^TeDatabase::selectPointSet (const string& table, const string& criteria, TePointSet &ps)$/;"	f	class:TeDatabase
selectPolygonSet	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::selectPolygonSet (const string& table, const string& criteria, TePolygonSet &ps)$/;"	f	class:TeOracleSpatial
selectPolygonSet	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::selectPolygonSet(const string& table, const string& criteria, TePolygonSet& ps)$/;"	f	class:TePostGIS
selectPolygonSet	kernel/TeDatabase.cpp	/^TeDatabase::selectPolygonSet (const string& table, const string& criteria, TePolygonSet &ps)$/;"	f	class:TeDatabase
selectTable	kernel/TeDatabase.cpp	/^TeDatabase::selectTable (const string& tableName, const string& criteria, TeTable &table)$/;"	f	class:TeDatabase
selectTextSet	kernel/TeDatabase.cpp	/^TeDatabase::selectTextSet (const string& table, const string& criteria, TeTextSet &ts)$/;"	f	class:TeDatabase
selectViewItem	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::selectViewItem(TeView *view)$/;"	f	class:TeQtViewsListView
selectedObjects_	drivers/qt/TeQtGLWidget.h	/^	int selectedObjects_;$/;"	m	class:TeQtGLWidget
selectedObjs	kernel/TeQuerierParams.h	/^	virtual TeSelectedObjects selectedObjs() { return selectedObjs_; }$/;"	f	class:TeQuerierParams
selectedObjs_	kernel/TeQuerierParams.h	/^	TeSelectedObjects		selectedObjs_;  \/\/!< if the querier must load only the instances pointed or queried$/;"	m	class:TeQuerierParams
selection_box	kernel/TeBlockLoader.h	/^    TeBox selection_box;$/;"	m	struct:__anon30
semCheckReservedLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int semCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
semClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int semClose(sqlite3_file *id) {$/;"	f	file:
semHandlerPtr_	kernel/TeSemaphore.h	/^        HANDLE semHandlerPtr_;    $/;"	m	class:TeSemaphore
semHandlerPtr_	kernel/TeSemaphore.h	/^        sem_t* semHandlerPtr_;$/;"	m	class:TeSemaphore
semLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int semLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
semName_	kernel/TeSemaphore.h	/^      std::string semName_;$/;"	m	class:TeSemaphore
semUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^static int semUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
semantic_	kernel/TeAttribute.h	/^	string	semantic_;			\/\/!< reference in a Ontology database (e.g., entry in WordNet )	$/;"	m	struct:TeAttribute
send	kernel/TeCommunicator.h	/^  void  TeCommunicator< DataType >::send( const DataType& data ) const$/;"	f	class:TeCommunicator
send_event	drivers/GL/glx.h	/^    Bool send_event;		\/* true if this came for SendEvent request *\/$/;"	m	struct:__anon176
send_event	drivers/GL/glxext.h	/^    Bool send_event;		  \/* true if this came for SendEvent request *\/$/;"	m	struct:__anon93
sensor	image_processing/TePDIMixModelSpectralBand.hpp	/^		unsigned int	sensor;$/;"	m	class:TePDIMixModelSpectralBand
separator	drivers/SQLite/sqlite3/shell.c	/^  char separator[20];    \/* Separator character for MODE_List *\/$/;"	m	struct:callback_data	file:
separator	functions/TeSPRFile.h	/^	char separator ()$/;"	f	class:TeSPRFile
separator	kernel/TeTable.h	/^	char separator ()$/;"	f	class:TeTable
separator_	functions/TeSPRFile.h	/^	char	separator_;$/;"	m	class:TeSPRFile
separator_	kernel/TeTable.h	/^	char                separator_;		\/\/ in case of CSV table $/;"	m	class:TeTable
seqAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId seqAttrId[SEQ_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
seqAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType seqAttrType[SEQ_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
seqCount	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 seqCount;         \/* Sequence counter *\/$/;"	m	struct:VdbeCursor	file:
sequenceCont_	drivers/Oracle/TeOCIOracle.h	/^	long				sequenceCont_;	\/\/!< sequential number used to improve the data insertion$/;"	m	class:TeOCIOracle
sequenceName_	drivers/Oracle/TeOCIOracle.h	/^	string				sequenceName_;  \/\/!< sequence name used to improve the data insertion$/;"	m	class:TeOCIOracle
sergas_index	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::sergas_index(TePDITypes::TePDIRasterVectorType original_rasters, std::vector<int> original_bands, TePDITypes::TePDIRasterPtrType pan_raster, int pan_band, TePDITypes::TePDIRasterVectorType fused_rasters, std::vector<int> fused_bands, double low_resolution, double high_resolution, TeSharedPtr<double> ergas)$/;"	f	class:TePDIFusionIndexes
serial	drivers/GL/glx.h	/^    unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon176
serial	drivers/GL/glxext.h	/^    unsigned long serial;	  \/* # of last request processed by server *\/$/;"	m	struct:__anon93
series_	kernel/TeTemporalSeries.h	/^	vector<TeTSEntry> 	series_; \/\/! serie$/;"	m	class:TeTemporalSeries
server	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR *server;				\/* server to administer *\/$/;"	m	struct:__anon65
sesn	drivers/Oracle/OCI/include/occiControl.h	/^  const ConnectionImpl* sesn;$/;"	m	class:oracle::occi::MetaData
sessp	drivers/Oracle/OCI/include/occiObjects.h	/^  const ConnectionImpl *sessp;$/;"	m	class:oracle::occi::RefAny
sessp	drivers/Oracle/OCI/include/occiObjects.h	/^  const ConnectionImpl *sessp;$/;"	m	class:oracle::occi::RefImpl
set	image_processing/TePDIFilterMask.cpp	/^void TePDIFilterMask::set( unsigned int line, unsigned int column,$/;"	f	class:TePDIFilterMask
setAdaptativeParameters	kernel/TeProjectiveGT.cpp	/^void TeProjectiveGT::setAdaptativeParameters( $/;"	f	class:TeProjectiveGT
setAddressLocatorMetadata	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::setAddressLocatorMetadata(const TeAddressMetadata& m)$/;"	f	class:TeAddressLocator
setAlias	drivers/qt/TeAppTheme.cpp	/^bool TeAppTheme::setAlias(string attr, string attAlias)$/;"	f	class:TeAppTheme
setAlignment	drivers/GTM/TeGTM.h	/^	void setAlignment(unsigned char alignment){alignment_ = alignment;};$/;"	f	class:TeGTMWaypointsStyles
setAlignmentHoriz	kernel/TeGeometry.h	/^	void setAlignmentHoriz (double alig) $/;"	f	class:TeText
setAlignmentVert	kernel/TeGeometry.h	/^	void setAlignmentVert (double alig) $/;"	f	class:TeText
setAlphaBufferToTransparent	drivers/qt/TeDecoderQtImage.cpp	/^TeDecoderQtImage::setAlphaBufferToTransparent()$/;"	f	class:TeDecoderQtImage
setAngle	kernel/TeGeometry.h	/^	void setAngle (double angle) $/;"	f	class:TeText
setAnimaParams	drivers/qt/ui/animation.ui.h	/^void Animation::setAnimaParams(QString& animaDir, TeQtCanvas* canvas)$/;"	f	class:Animation
setAnimation	drivers/qt/TeQtAnimaThread.cpp	/^void TeQtAnimaThread::setAnimation(Animation* a, QDir d)$/;"	f	class:TeQtAnimaThread
setArcColor	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setArcColor (int r, int g, int b)$/;"	f	class:TeQtCanvas
setArcStyle	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setArcStyle (int s, int w )$/;"	f	class:TeQtCanvas
setAttTables	kernel/TeExternalTheme.cpp	/^bool TeExternalTheme::setAttTables(TeAttrTableVector& attrs)$/;"	f	class:TeExternalTheme
setAttTables	kernel/TeTheme.cpp	/^TeTheme::setAttTables(TeAttrTableVector& attrs)$/;"	f	class:TeTheme
setAttrList	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::setAttrList(TeSharedPtr<TeAttributeList>& attList)$/;"	f	class:TeBaseSTInstance
setAttrList	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::setAttrList(const TeAttributeList& attList)$/;"	f	class:TeBaseSTInstance
setAttributeList	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::setAttributeList(const TeAttributeList& attrs)$/;"	f	class:TeBaseSTInstanceSet
setAttributeList	kernel/TeTable.h	/^	void setAttributeList ( const TeAttributeList& attList)$/;"	f	class:TeTable
setAttributeValue	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::setAttributeValue (const string& object_id, const int& i, const string& val, TimeType& time, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
setAttributeValue	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::setAttributeValue (const string& object_id, const int& i, const string& val, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
setAttributeValue	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::setAttributeValue (const string& object_id, const string& attr_name,  const string& val, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
setAttributeValue	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::setAttributeValue (const string& object_id, const string& attr_name, const string& val, TimeType& time, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
setAutoMaxSimulJobs	kernel/TeThreadJobsManager.cpp	/^void TeThreadJobsManager::setAutoMaxSimulJobs()$/;"	f	class:TeThreadJobsManager
setAvailability	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setAvailability(const bool& availability)$/;"	f	class:TeAbstractTheme
setAxis	drivers/GTM/TeGTM.h	/^	void setAxis(double axis){axis_ = axis;};$/;"	f	class:TeGTMGridDatum
setBChannelMapping	kernel/TeRasterTransform.h	/^	void setBChannelMapping(short bIn, TeRGBChannels bOut)$/;"	f	class:TeRasterTransform
setBackcolor	drivers/GTM/TeGTM.h	/^	void setBackcolor(long backcolor){backcolor_ = backcolor;};$/;"	f	class:TeGTMWaypointsStyles
setBackground	drivers/GTM/TeGTM.h	/^	void setBackground(bool background){background_ = background;};$/;"	f	class:TeGTMWaypointsStyles
setBandName	kernel/TeRasterParams.cpp	/^TeRasterParams::setBandName(string name, int band)$/;"	f	class:TeRasterParams
setBasic	kernel/TeVisual.cpp	/^TeBaseVisualParams::setBasic (TeBaseVisualParams &vis)$/;"	f	class:TeBaseVisualParams
setBasic	kernel/TeVisual.cpp	/^TeVisual::setBasic (TeVisual &vis)$/;"	f	class:TeVisual
setBcolor	drivers/GTM/TeGTM.h	/^	void setBcolor(long bcolor){bcolor_ = bcolor;};$/;"	f	class:TeGTMHeader
setBlob	drivers/GTM/TeGTM.h	/^	void setBlob(char* blob){blob_ = blob;};$/;"	f	class:TeGTMInformationImages
setBorder	drivers/GTM/TeGTM.h	/^	void setBorder(unsigned char border){border_ = border;};$/;"	f	class:TeGTMWaypointsStyles
setBoundingBox	kernel/TeCoverageParams.h	/^    void setBoundingBox(TeBox& boundingBox)$/;"	f	class:TeCoverageParams
setBox	kernel/TeBaseSTInstanceSet.h	/^	virtual void setBox(const TeBox& b)$/;"	f	class:TeBaseSTInstanceSet
setBox	kernel/TeGeometry.h	/^	void setBox ( const TeBox & box )$/;"	f	class:TeGeometry
setBox	kernel/TeGridIndex.h	/^		void setBox(const TeBox& b)$/;"	f	class:TeSAM::TeGridIndex
setBox	kernel/TeKdTree.h	/^		void setBox(const TeBox& mbr)$/;"	f	class:TeSAM::TeBasicKdTree
setBox	kernel/TeRTree.h	/^		void setBox(const TeBox& mbr)$/;"	f	class:TeSAM::TeRTree
setBucketSize	kernel/TeKdTree.h	/^		void setBucketSize(const unsigned int& size)$/;"	f	class:TeSAM::TeAdaptativeKdTree
setCacheNTiles	kernel/TeDecoderVirtualMemory.cpp	/^void TeDecoderVirtualMemory::setCacheNTiles(int n)$/;"	f	class:TeDecoderVirtualMemory
setCacheSize	kernel/TeDecoderVirtualMemory.cpp	/^void TeDecoderVirtualMemory::setCacheSize(int size)$/;"	f	class:TeDecoderVirtualMemory
setCanvas	drivers/qt/ui/animation.ui.h	/^void Animation::setCanvas( TeQtCanvas* canvas )$/;"	f	class:Animation
setCaption	drivers/qt/TeQtProgress.h	/^	 void setCaption(const string& cap)$/;"	f	class:TeQtProgress
setCaption	kernel/TeStdIOProgress.cpp	/^void TeStdIOProgress::setCaption(const string& cap)$/;"	f	class:TeStdIOProgress
setCell	drivers/qt/TeQtGridSource.cpp	/^void TeQtGridSource::setCell(int row, int col, const QVariant &v)$/;"	f	class:TeQtGridSource
setCell	drivers/qt/TeQtLegendSource.cpp	/^void TeQtLegendSource::setCell(int row, int col, const QVariant &v)$/;"	f	class:TeQtLegendSource
setCellContentFromEditor	drivers/qt/TeQtBigTable.cpp	/^void TeQtBigTable::setCellContentFromEditor(int row, int col)$/;"	f	class:TeQtBigTable
setCentroidAddressMetadata	functions/TeAddressLocator.h	/^		void setCentroidAddressMetadata(const TeCentroidAddressMetadata& cMetadata)$/;"	f	class:TeAddressLocator
setChildPtrmaps	drivers/SQLite/sqlite3/sqlite3.c	/^static int setChildPtrmaps(MemPage *pPage){$/;"	f	file:
setChildPtrmaps	drivers/SQLite/sqlite3/sqlite3.c	51157;"	d	file:
setClientEncoding	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::setClientEncoding(const std::string& characterSet)$/;"	f	class:TeMySQL
setClientEncoding	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::setClientEncoding(const std::string& characterSet)$/;"	f	class:TePostgreSQL
setClientEncoding	kernel/TeDatabase.h	/^   virtual bool setClientEncoding(const std::string& \/*characterSet*\/)$/;"	f	class:TeDatabase
setClipRect	drivers/GL/glcore.h	/^    void (*setClipRect)(__GLdrawablePrivate *glPriv, $/;"	m	struct:__GLdrawablePrivateRec
setClipRect	drivers/GL/internal/glcore.h	/^    void (*setClipRect)(__GLdrawablePrivate *glPriv, $/;"	m	struct:__GLdrawablePrivateRec
setClipRegion	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setClipRegion(QRegion region)$/;"	f	class:TeQtCanvas
setClipRegion	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setClipRegion(int x, int y, int w, int h)$/;"	f	class:TeQtCanvas
setClipping	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setClipping(bool enable)$/;"	f	class:TeQtCanvas
setCode	drivers/GTM/TeGTM.h	/^	void setCode(char* code){code_ = code;};$/;"	f	class:TeGTMHeader
setColLin	stat/TeStatDataStructures.h	/^	void setColLin(int col, int lin)$/;"	f	class:TeGridElement
setColor	drivers/GTM/TeGTM.h	/^	void setColor(long color){color_ = color;};$/;"	f	class:TeGTMLayers
setColor	drivers/GTM/TeGTM.h	/^	void setColor(long color){color_ = color;};$/;"	f	class:TeGTMWaypointsStyles
setColor	drivers/qt/TeQtGrid.h	/^	void setColor(QColor& c)$/;"	f	class:TeQtGridItem
setColorBar	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::setColorBar(const vector<ColorBar>& colorBarVec)$/;"	f	class:TeQtColorBar
setColorBar	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::setColorBar(const vector<TeColor>& colorVec)$/;"	f	class:TeQtColorBar
setColorBarFromNames	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::setColorBarFromNames(string colors)$/;"	f	class:TeQtColorBar
setColorCurve	kernel/TeGraph.cpp	/^TeGraphPlot :: setColorCurve(int c,int r, int g, int b)$/;"	f	class:TeGraphPlot
setColorGrid	kernel/TeGraph.cpp	/^TeGraphPlot :: setColorGrid(int r, int g, int b)$/;"	f	class:TeGraphPlot
setColorLine	kernel/TeGraph.cpp	/^TeGraphPlot :: setColorLine(int r, int g, int b)$/;"	f	class:TeGraphPlot
setColorSymbol	kernel/TeGraph.cpp	/^TeGraphPlot :: setColorSymbol(int r, int g, int b, int curve, int w, int h)$/;"	f	class:TeGraphPlot
setColorText	kernel/TeGraph.cpp	/^TeGraphPlot :: setColorText(int r, int g, int b)$/;"	f	class:TeGraphPlot
setColumn	kernel/TeDatabaseIndex.cpp	/^void TeDatabaseIndex::setColumn(const std::string& column)$/;"	f	class:TeDatabaseIndex
setColumns	kernel/TeDatabaseIndex.cpp	/^void TeDatabaseIndex::setColumns(const std::vector<std::string>& columns)$/;"	f	class:TeDatabaseIndex
setComments	drivers/GTM/TeGTM.h	/^	void setComments(char* comments){comments_ = comments;};$/;"	f	class:TeGTMInformationImages
setCompressionMode	kernel/TeRasterParams.cpp	/^TeRasterParams::setCompressionMode(TeRasterParams::TeRasterCompressionMode cmode, int band)$/;"	f	class:TeRasterParams
setConnection	drivers/Firebird/TeFirebird.cpp	/^void TeFirebird::setConnection(TeConnection* c)$/;"	f	class:TeFirebird
setConnection	drivers/PostgreSQL/TePostgreSQL.cpp	/^void TePostgreSQL::setConnection(TeConnection* c)$/;"	f	class:TePostgreSQL
setConnection	kernel/TeDatabase.cpp	/^void TeDatabase::setConnection(TeConnection* c)$/;"	f	class:TeDatabase
setConnectionAttributes	kernel/TeProxMatrixImplementation.cpp	/^TeProxMatrixGraphBreymann::setConnectionAttributes (const string& object_id1, const string& object_id2, const TeProxMatrixAttributes& attr)$/;"	f	class:TeProxMatrixGraphBreymann
setContrastB	kernel/TeRasterTransform.h	/^	void setContrastB(double cB)$/;"	f	class:TeRasterTransform
setContrastG	kernel/TeRasterTransform.h	/^	void setContrastG(double cG)$/;"	f	class:TeRasterTransform
setContrastM	kernel/TeRasterTransform.h	/^	void setContrastM(double cM)$/;"	f	class:TeRasterTransform
setContrastR	kernel/TeRasterTransform.h	/^	void setContrastR(double cR)$/;"	f	class:TeRasterTransform
setCoriml	drivers/GTM/TeGTM.h	/^	void setCoriml(unsigned char coriml){coriml_ = coriml;};$/;"	f	class:TeGTMHeader
setCoverageId	kernel/TeCoverageParams.h	/^    void setCoverageId(std::string& coverageId)$/;"	f	class:TeCoverageParams
setCoverageTable	kernel/TeCoverageParams.h	/^    void setCoverageTable(std::string& coverageTable)$/;"	f	class:TeCoverageParams
setCreateSupport	drivers/gdal/TeGDALDecoder.cpp	/^void TeGDALDriverInfo::setCreateSupport(bool b)$/;"	f	class:TeGDALDriverInfo
setCreateSupport	kernel/TeGeoFileInfo.cpp	/^void TeGeoFileInfo::setCreateSupport(bool b)$/;"	f	class:TeGeoFileInfo
setCreationTime	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setCreationTime(const TeTime& creationTime)$/;"	f	class:TeAbstractTheme
setCurrentBox	kernel/TeView.h	/^	virtual void setCurrentBox (const TeBox& b) { currentBox_ = b; }$/;"	f	class:TeView
setCurrentConstructionStrategy	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::setCurrentConstructionStrategy (TeProxMatrixConstructionStrategy<Set>* sc)  $/;"	f	class:TeGeneralizedProxMatrix
setCurrentSlicingStrategy	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::setCurrentSlicingStrategy (TeProxMatrixSlicingStrategy* ss) $/;"	f	class:TeGeneralizedProxMatrix
setCurrentTheme	kernel/TeView.h	/^	virtual void setCurrentTheme (const int& id) { currentTheme_ = id; }$/;"	f	class:TeView
setCurrentThemeAppPtr	drivers/spl/PluginParameters.cpp	/^void PluginParameters::setCurrentThemeAppPtr(TeAppTheme* appTheme)$/;"	f	class:PluginParameters
setCurrentThemeAppPtrFPT	drivers/spl/PluginParameters.h	/^      typedef void (*setCurrentThemeAppPtrFPT)( $/;"	t	class:PluginParameters
setCurrentThemeAppPtrFP_	drivers/spl/PluginParameters.h	/^      setCurrentThemeAppPtrFPT setCurrentThemeAppPtrFP_;$/;"	m	class:PluginParameters
setCurrentViewId	kernel/TeProject.cpp	/^TeProject::setCurrentViewId(int viewId)$/;"	f	class:TeProject
setCurrentViewIndex	kernel/TeProject.h	/^	virtual void setCurrentViewIndex(int index)$/;"	f	class:TeProject
setCurrentWeightsStrategy	kernel/TeGeneralizedProxMatrix.h	/^TeGeneralizedProxMatrix<Set>::setCurrentWeightsStrategy (TeProxMatrixWeightsStrategy* sw) $/;"	f	class:TeGeneralizedProxMatrix
setDB	drivers/qt/TeQtCanvas.h	/^	void setDB (TeDatabase* db) { db_ = db; }$/;"	f	class:TeQtCanvas
setDB	kernel/TeDecoderDatabase.h	/^	void setDB (TeDatabase* db) $/;"	f	class:TeDecoderDatabase
setDBMS	kernel/TeConnection.cpp	/^void TeConnection::setDBMS(const std::string& name)$/;"	f	class:TeConnection
setData	drivers/Firebird/TeFirebird.h	/^	bool setData (int \/* field *\/, string \/* val *\/)$/;"	f	class:TeFirebirdPortal
setData	drivers/MySQL/TeMySQL.h	/^    bool setData (int \/* field *\/, string \/* val *\/)$/;"	f	class:TeMySQLPortal
setData	kernel/TeKdTree.h	/^		void setData(const NodeData& data)$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
setData	kernel/TeKdTree.h	/^		void setData(const NodeData& data)$/;"	f	class:TeSAM::TeKdTreeNode
setDataDriver	kernel/TeFileTheme.cpp	/^void TeFileTheme::setDataDriver(TeGeoDataDriver* dataDriver)$/;"	f	class:TeFileTheme
setDataProjection	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setDataProjection ( TeProjection* proj )$/;"	f	class:TeQtCanvas
setDataSource	drivers/qt/TeQtBigTable.cpp	/^void TeQtBigTable::setDataSource(TeQtDataSource *dSource)$/;"	f	class:TeQtBigTable
setDataType	kernel/TeRasterParams.cpp	/^TeRasterParams::setDataType(TeDataType type, int band)$/;"	f	class:TeRasterParams
setDatabase	kernel/TeCoverageParams.h	/^    void setDatabase(TeDatabase* database)$/;"	f	class:TeCoverageParams
setDatabase	kernel/TeLayer.h	/^	virtual void setDatabase(TeDatabase* db)$/;"	f	class:TeLayer
setDatabase	kernel/TeProject.h	/^	virtual void setDatabase(TeDatabase* db)$/;"	f	class:TeProject
setDatabaseName	kernel/TeConnection.cpp	/^void TeConnection::setDatabaseName(const std::string& name)$/;"	f	class:TeConnection
setDateTimeToCurrent	drivers/SQLite/sqlite3/sqlite3.c	/^static int setDateTimeToCurrent(sqlite3_context *context, DateTime *p){$/;"	f	file:
setDatum	drivers/GTM/TeGTM.cpp	/^short TeGTM::setDatum(TeDatum datum)$/;"	f	class:TeGTM
setDatum	kernel/TeProjection.h	/^	void setDatum(const TeDatum& datum)$/;"	f	class:TeProjection
setDecoder	kernel/TeCoverageInterpolator.h	/^    virtual void setDecoder(TeCoverageDecoder<T>* decoder)$/;"	f	class:TeCoverageInterpolator
setDecoder	kernel/TeCoverageInterpolatorNN.h	/^    virtual void setDecoder(TeCoverageDecoder<T>* decoder)$/;"	f	class:TeCoverageInterpolatorNN
setDecoder	kernel/TeRaster.cpp	/^void TeRaster::setDecoder( TeDecoder* dec )$/;"	f	class:TeRaster
setDefaultMedia	drivers/qt/TeApplicationUtils.cpp	/^bool setDefaultMedia(TeDatabase* db, TeLayer* layer, const string& objectId, const string& mediaName, const string& mediaTable)$/;"	f
setDefaultPluginsParameters	drivers/spl/PluginsManager.cpp	/^void PluginsManager::setDefaultPluginsParameters( const PluginParameters& pp )$/;"	f	class:PluginsManager
setDescription	kernel/TeGeoFileInfo.cpp	/^void TeGeoFileInfo::setDescription(const std::string& d)$/;"	f	class:TeGeoFileInfo
setDescription	kernel/TeProject.h	/^	virtual void setDescription(const string& desc) $/;"	f	class:TeProject
setDestBand	kernel/TeRasterTransform.h	/^	void setDestBand(short n)$/;"	f	class:TeRasterTransform
setDestPgsz	drivers/SQLite/sqlite3/sqlite3.c	/^static int setDestPgsz(sqlite3_backup *p){$/;"	f	file:
setDestinationProjection	kernel/TeProjection.h	/^	void setDestinationProjection (TeProjection* proj)$/;"	f	class:TeProjection
setDimensions	kernel/TeCoverageParams.h	/^    void setDimensions(std::vector<TeCoverageDimension>& dimensions)$/;"	f	class:TeCoverageParams
setDiscriminator	kernel/TeKdTree.h	/^		void setDiscriminator(const char& d)$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
setDoubleProperty	stat/TeStatDataStructures.h	/^	bool setDoubleProperty(int idx , double value) $/;"	f	class:TeGridElement
setDoubleProperty	stat/TeStatDataStructures.h	/^    bool setDoubleProperty(unsigned int idx, double value) $/;"	f	class:TeSTStatInstance
setDspl	drivers/GTM/TeGTM.h	/^	void setDspl(unsigned char dspl){dspl_ = dspl;};$/;"	f	class:TeGTMRoutes
setDspl	drivers/GTM/TeGTM.h	/^	void setDspl(unsigned char dspl){dspl_ = dspl;};$/;"	f	class:TeGTMWaypoints
setDspl	drivers/GTM/TeGTM.h	/^	void setDspl(unsigned char dspl){dspl_ = dspl;};$/;"	f	class:TeGTMWaypointsStyles
setDummy	kernel/TeRasterParams.cpp	/^TeRasterParams::setDummy(double dummy, int band)$/;"	f	class:TeRasterParams
setDx	drivers/GTM/TeGTM.h	/^	void setDx(short dx){dx_ = dx;};$/;"	f	class:TeGTMGridDatum
setDy	drivers/GTM/TeGTM.h	/^	void setDy(short dy){dy_ = dy;};$/;"	f	class:TeGTMGridDatum
setDz	drivers/GTM/TeGTM.h	/^	void setDz(short dz){dz_ = dz;};$/;"	f	class:TeGTMGridDatum
setEdgeValue	kernel/graph.h	/^	bool Graph<VertexType,EdgeType>::setEdgeValue(const VertexType& e1,$/;"	f	class:br_stl::Graph
setEdges	kernel/TeTin.h	/^	void setEdges (long first, long second, long third)$/;"	f	class:TeTinTriangle
setEditable	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setEditable(const bool& editable)$/;"	f	class:TeAbstractTheme
setEditionTime	kernel/TeLayer.cpp	/^void TeLayer::setEditionTime(const TeTime& editionTime)$/;"	f	class:TeLayer
setElement	drivers/MrSID/TeDecoderMrSID.h	/^	bool setElement(int \/*col*\/, int \/*lin*\/, double \/*val*\/, int \/*band=0*\/) $/;"	f	class:TeDecoderMrSID
setElement	drivers/gdal/TeGDALDecoder.cpp	/^bool TeGDALDecoder::setElement(int col, int lin, double val, int band)$/;"	f	class:TeGDALDecoder
setElement	drivers/qt/TeDecoderQtImage.cpp	/^TeDecoderQtImage::setElement (int col, int lin, double val,int band )$/;"	f	class:TeDecoderQtImage
setElement	kernel/TeDecoderASCIIGrid.cpp	/^TeDecoderASCIIGrid::setElement (int col, int lin, double val,int band)$/;"	f	class:TeDecoderASCIIGrid
setElement	kernel/TeDecoderJPEG.cpp	/^TeDecoderJPEG::setElement (int col, int lin, double val,int band)$/;"	f	class:TeDecoderJPEG
setElement	kernel/TeDecoderMemory.cpp	/^TeDecoderMemory::setElement (int col, int lin, double val,int band)$/;"	f	class:TeDecoderMemory
setElement	kernel/TeDecoderMemoryMap.cpp	/^TeDecoderMemoryMap::setElement (int col,int lin, double val, int band)$/;"	f	class:TeDecoderMemoryMap
setElement	kernel/TeDecoderSPR.cpp	/^TeDecoderSPR::setElement (int col,int lin, double val, int band)$/;"	f	class:TeDecoderSPR
setElement	kernel/TeDecoderSmartMem.h	/^  inline bool setElement (int col,int lin, double val, int band=0)$/;"	f	class:TeDecoderSmartMem
setElement	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::setElement(int col, int lin, double val, int band)$/;"	f	class:TeDecoderTIFF
setElement	kernel/TeDecoderVirtualMemory.cpp	/^TeDecoderVirtualMemory::setElement(int col, int lin, double val,int band)$/;"	f	class:TeDecoderVirtualMemory
setElement	kernel/TeRaster.cpp	/^bool TeRaster::setElement (int col, int lin, double val,int band)$/;"	f	class:TeRaster
setElement	kernel/TeRaster.cpp	/^bool TeRaster::setElement(int col, int lin, double Rval, double Gval, double Bval, unsigned int transp) $/;"	f	class:TeRaster
setElementRGB	drivers/qt/TeDecoderQtImage.cpp	/^TeDecoderQtImage::setElementRGB(int col, int lin, double Rval, double Gval, double Bval, unsigned int \/*transp*\/)$/;"	f	class:TeDecoderQtImage
setElementRGB	kernel/TeDecoder.cpp	/^bool TeDecoder::setElementRGB(int col, int lin, double Rval, double Gval, double Bval, unsigned int)$/;"	f	class:TeDecoder
setElement_TeBIT	kernel/TeDecoderSmartMem.h	/^  inline void setElement_TeBIT( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
setElement_TeCHAR	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::setElement_TeCHAR(const long& pos, const double& val)$/;"	f	class:TeDecoderMemory
setElement_TeCHAR	kernel/TeDecoderSmartMem.h	/^  inline void setElement_TeCHAR( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
setElement_TeDOUBLE	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::setElement_TeDOUBLE(const long& pos, const double& val)$/;"	f	class:TeDecoderMemory
setElement_TeDOUBLE	kernel/TeDecoderSmartMem.h	/^  inline void setElement_TeDOUBLE( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
setElement_TeFLOAT	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::setElement_TeFLOAT(const long& pos, const double& val)$/;"	f	class:TeDecoderMemory
setElement_TeFLOAT	kernel/TeDecoderSmartMem.h	/^  inline void setElement_TeFLOAT( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
setElement_TeINTEGER	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::setElement_TeINTEGER(const long& pos, const double& val)$/;"	f	class:TeDecoderMemory
setElement_TeINTEGER	kernel/TeDecoderSmartMem.h	/^  inline void setElement_TeINTEGER( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
setElement_TeLONG	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::setElement_TeLONG(const long& pos, const double& val)$/;"	f	class:TeDecoderMemory
setElement_TeLONG	kernel/TeDecoderSmartMem.h	/^  inline void setElement_TeLONG( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
setElement_TeSHORT	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::setElement_TeSHORT(const long& pos, const double& val)$/;"	f	class:TeDecoderMemory
setElement_TeSHORT	kernel/TeDecoderSmartMem.h	/^  inline void setElement_TeSHORT( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
setElement_TeUNSIGNEDCHAR	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::setElement_TeUNSIGNEDCHAR(const long& pos, const double& val)$/;"	f	class:TeDecoderMemory
setElement_TeUNSIGNEDCHAR	kernel/TeDecoderSmartMem.h	/^  inline void setElement_TeUNSIGNEDCHAR( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
setElement_TeUNSIGNEDLONG	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::setElement_TeUNSIGNEDLONG(const long& pos, const double& val)$/;"	f	class:TeDecoderMemory
setElement_TeUNSIGNEDLONG	kernel/TeDecoderSmartMem.h	/^  inline void setElement_TeUNSIGNEDLONG( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
setElement_TeUNSIGNEDSHORT	kernel/TeDecoderMemory.cpp	/^inline void TeDecoderMemory::setElement_TeUNSIGNEDSHORT(const long& pos, const double& val)$/;"	f	class:TeDecoderMemory
setElement_TeUNSIGNEDSHORT	kernel/TeDecoderSmartMem.h	/^  inline void setElement_TeUNSIGNEDSHORT( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
setEnabledSlot	drivers/qwt/TeQwtPlotZoomer.cpp	/^void TeQwtPlotZoomer::setEnabledSlot(bool b)$/;"	f	class:TeQwtPlotZoomer
setEqualSpace	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::setEqualSpace()$/;"	f	class:TeQtColorBar
setExtension	drivers/gdal/TeGDALDecoder.cpp	/^void TeGDALDriverInfo::setExtension(const std::string& e)$/;"	f	class:TeGDALDriverInfo
setExtension	kernel/TeGeoFileInfo.cpp	/^void TeGeoFileInfo::setExtension(const std::string& e)$/;"	f	class:TeGeoFileInfo
setFBConnection	drivers/Firebird/TeFirebirdConnection.cpp	/^void TeFirebirdConnection::setFBConnection(IBPP::Database* conn)$/;"	f	class:TeFirebirdConnection
setFacename	drivers/GTM/TeGTM.h	/^	void setFacename(char* facename){facename_ = facename;};$/;"	f	class:TeGTMWaypointsStyles
setFalseeast	drivers/GTM/TeGTM.h	/^	void setFalseeast(double falseeast){falseeast_ = falseeast;};$/;"	f	class:TeGTMGridDatum
setFalsenorthing	drivers/GTM/TeGTM.h	/^	void setFalsenorthing(double falsenorthing){falsenorthing_ = falsenorthing;};$/;"	f	class:TeGTMGridDatum
setFileName	kernel/TeCoverageParams.h	/^    void setFileName(std::string& fileName)$/;"	f	class:TeCoverageParams
setFileName	kernel/TeFileTheme.cpp	/^void TeFileTheme::setFileName(const std::string& fileName)$/;"	f	class:TeFileTheme
setFillAreaColor	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::setFillAreaColor (TeColor c)$/;"	f	class:TeQtGraphPlot
setFillParams	kernel/TeQuerierParams.cpp	/^TeQuerierParams::setFillParams(bool loadGeom, TeGroupingAttr attrG)$/;"	f	class:TeQuerierParams
setFillParams	kernel/TeQuerierParams.cpp	/^TeQuerierParams::setFillParams(bool loadGeom, bool loadAllAttr, vector<string> loadAttr)$/;"	f	class:TeQuerierParams
setFinalTime	kernel/TeTimeInterval.h	/^	time_t setFinalTime (int y, int m, int d, int h = 0, int min = 0, int s = 0) $/;"	f	class:TeTimeInterval
setFlattening	drivers/GTM/TeGTM.h	/^	void setFlattening(double flattening){flattening_ = flattening;};$/;"	f	class:TeGTMGridDatum
setFullName	drivers/gdal/TeGDALDecoder.cpp	/^void TeGDALDriverInfo::setFullName(const std::string& n)$/;"	f	class:TeGDALDriverInfo
setGain	kernel/TeRasterTransform.h	/^	void setGain(double g) $/;"	f	class:TeRasterTransform
setGeoKeys	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::setGeoKeys()$/;"	f	class:TeDecoderTIFF
setGeometry	kernel/TeBaseSTInstance.h	/^	virtual void setGeometry(const GeometryType& g)$/;"	f	class:TeBaseSTInstance
setGeometry	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::setGeometry(const string& object_id, GeometryType& geom, TimeType& time, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
setGeometry	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::setGeometry(const string& object_id, GeometryType& geom, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
setGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::setGeometry(const TeCellSet& result)		$/;"	f	class:TeMultiGeometry
setGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::setGeometry(const TeLineSet& result)     $/;"	f	class:TeMultiGeometry
setGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::setGeometry(const TePointSet& result)	$/;"	f	class:TeMultiGeometry
setGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::setGeometry(const TePolygonSet& result) $/;"	f	class:TeMultiGeometry
setGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::setGeometry(const TeTextSet& result)		$/;"	f	class:TeMultiGeometry
setGeometry	kernel/TeMultiGeometry.cpp	/^TeMultiGeometry::setGeometry(vector<TeGeometry*>& result)$/;"	f	class:TeMultiGeometry
setGeometry	kernel/TeSTElementSet.cpp	/^TeSTElementSet::setGeometry(const string& object_id, const TeCellSet& geomSet, TeTimeInterval time)$/;"	f	class:TeSTElementSet
setGeometry	kernel/TeSTElementSet.cpp	/^TeSTElementSet::setGeometry(const string& object_id, const TeLineSet& geomSet, TeTimeInterval time)$/;"	f	class:TeSTElementSet
setGeometry	kernel/TeSTElementSet.cpp	/^TeSTElementSet::setGeometry(const string& object_id, const TePointSet& geomSet, TeTimeInterval time)$/;"	f	class:TeSTElementSet
setGeometry	kernel/TeSTElementSet.cpp	/^TeSTElementSet::setGeometry(const string& object_id, const TePolygonSet& geomSet, TeTimeInterval time)$/;"	f	class:TeSTElementSet
setGeometry	kernel/TeSTElementSet.cpp	/^TeSTElementSet::setGeometry(const string& object_id, const TeTextSet& geomSet, TeTimeInterval time)$/;"	f	class:TeSTElementSet
setGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::setGeometry(const TeCellSet& result)$/;"	f	class:TeSTInstance
setGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::setGeometry(const TeLineSet& result)$/;"	f	class:TeSTInstance
setGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::setGeometry(const TeMultiGeometry& result)$/;"	f	class:TeSTInstance
setGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::setGeometry(const TePointSet& result)$/;"	f	class:TeSTInstance
setGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::setGeometry(const TePolygonSet& result)$/;"	f	class:TeSTInstance
setGeometry	kernel/TeSTInstance.cpp	/^TeSTInstance::setGeometry(const TeTextSet& result)$/;"	f	class:TeSTInstance
setGheight	drivers/GTM/TeGTM.h	/^	void setGheight(float gheight){gheight_ = gheight;};$/;"	f	class:TeGTMInformationImages
setGposx	drivers/GTM/TeGTM.h	/^	void setGposx(float gposx){gposx_ = gposx;};$/;"	f	class:TeGTMInformationImages
setGposy	drivers/GTM/TeGTM.h	/^	void setGposy(float gposy){gposy_ = gposy;};$/;"	f	class:TeGTMInformationImages
setGradcolor	drivers/GTM/TeGTM.h	/^	void setGradcolor(long gradcolor){gradcolor_ = gradcolor;};$/;"	f	class:TeGTMHeader
setGradfont	drivers/GTM/TeGTM.h	/^	void setGradfont(char* gradfont){gradfont_ = gradfont;};$/;"	f	class:TeGTMHeader
setGradnum	drivers/GTM/TeGTM.h	/^	void setGradnum(unsigned char gradnum){gradnum_ = gradnum;};$/;"	f	class:TeGTMHeader
setGridColorsVec	drivers/qt/TeQtGridSource.cpp	/^void TeQtGridSource::setGridColorsVec()$/;"	f	class:TeQtGridSource
setGridSize	kernel/TeGraph.cpp	/^TeGraphPlot :: setGridSize(int s)$/;"	f	class:TeGraphPlot
setGridSize	kernel/TeGraph.cpp	/^TeGraphPlot :: setGridSize(int xma, int yma, int xmi, int ymi )$/;"	f	class:TeGraphPlot
setGroupingColors	drivers/qt/TeQtLegendSource.h	/^	void setGroupingColors(const QString& gc)$/;"	f	class:TeQtLegendSource
setGroupingParams	drivers/qt/TeQtLegendSource.cpp	/^void TeQtLegendSource::setGroupingParams(const TeGrouping& gParams)$/;"	f	class:TeQtLegendSource
setGroupingVisual	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme::setGroupingVisual(int n, TeGeomRepVisualMap& vismap)$/;"	f	class:TeAbstractTheme
setGroupingVisual	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme::setGroupingVisual(int n, TeVisual* visual, TeGeomRep rep)$/;"	f	class:TeAbstractTheme
setGwidth	drivers/GTM/TeGTM.h	/^	void setGwidth(float gwidth){gwidth_ = gwidth;};$/;"	f	class:TeGTMInformationImages
setHeight	drivers/GTM/TeGTM.h	/^	void setHeight(long height){height_ = height;};$/;"	f	class:TeGTMWaypointsStyles
setHeight	kernel/TeGeometry.h	/^	void setHeight (double height) $/;"	f	class:TeText
setHost	kernel/TeConnection.cpp	/^void TeConnection::setHost(const std::string& host)$/;"	f	class:TeConnection
setHostObj	kernel/TeCommunicator.h	/^  void TeCommunicator< DataType >::setHostObj( void* host_obj_ptr,$/;"	f	class:TeCommunicator
setIco	drivers/GTM/TeGTM.h	/^	void setIco(short ico){ico_ = ico;};$/;"	f	class:TeGTMRoutes
setIco	drivers/GTM/TeGTM.h	/^	void setIco(short ico){ico_ = ico;};$/;"	f	class:TeGTMWaypoints
setIconnum	drivers/GTM/TeGTM.h	/^	void setIconnum(float iconnum){iconnum_ = iconnum;};$/;"	f	class:TeGTMHeader
setId	drivers/gdal/TeGDALDecoder.cpp	/^void TeGDALDriverInfo::setId(const std::string& id)$/;"	f	class:TeGDALDriverInfo
setId	kernel/TeConnection.cpp	/^void TeConnection::setId(const unsigned int& id)$/;"	f	class:TeConnection
setId	kernel/TeGeoFileInfo.cpp	/^void TeGeoFileInfo::setId(const std::string& id)$/;"	f	class:TeGeoFileInfo
setId	kernel/TeProject.h	/^	virtual void setId(int id) $/;"	f	class:TeProject
setId	kernel/TeTable.h	/^	void setId(int n) { id_ = n; }$/;"	f	class:TeTable
setImagelen	drivers/GTM/TeGTM.h	/^	void setImagelen(long imagelen){imagelen_ = imagelen;};$/;"	f	class:TeGTMInformationImages
setIndex	drivers/GTM/TeGTM.h	/^	void setIndex(short index){index_ = index;};$/;"	f	class:TeGTMLayers
setIndexName	kernel/TeDatabaseIndex.cpp	/^void TeDatabaseIndex::setIndexName(const std::string& name)$/;"	f	class:TeDatabaseIndex
setInitialTime	kernel/TeTimeInterval.h	/^	time_t setInitialTime (int y, int m, int d, int h = 0, int min = 0, int s = 0)$/;"	f	class:TeTimeInterval
setInput	kernel/TeRasterRemap.h	/^	void setInput(TeRaster* rasterIn)$/;"	f	class:TeRasterRemap
setInterpolation	kernel/TeRasterRemap.h	/^	void setInterpolation(int interpolation)$/;"	f	class:TeRasterRemap
setIsPrimaryKey	kernel/TeDatabaseIndex.cpp	/^void TeDatabaseIndex::setIsPrimaryKey(bool isPk)$/;"	f	class:TeDatabaseIndex
setIt_	kernel/TeBaseSTInstanceSet.h	/^			TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>* setIt_; $/;"	m	class:TeBaseSTInstanceSet::propertyIterator
setItalic	drivers/GTM/TeGTM.h	/^	void setItalic(unsigned char italic){italic_ = italic;};$/;"	f	class:TeGTMWaypointsStyles
setItem	drivers/qt/TeQtBigTable.h	/^	void setItem(int, int, QTableItem *) {}$/;"	f	class:TeQtBigTable
setJoinExpr	drivers/SQLite/sqlite3/sqlite3.c	/^static void setJoinExpr(Expr *p, int iTable){$/;"	f	file:
setKey	kernel/TeKdTree.h	/^		void setKey(const NodeKey& k)$/;"	f	class:TeSAM::TeKdTreeNode
setKey	kernel/TeKdTree.h	/^		void setKey(const double& k)$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
setLabelcolor	drivers/GTM/TeGTM.h	/^	void setLabelcolor(long labelcolor){labelcolor_ = labelcolor;};$/;"	f	class:TeGTMHeader
setLabelsize	drivers/GTM/TeGTM.h	/^	void setLabelsize(short labelsize){labelsize_ = labelsize;};$/;"	f	class:TeGTMHeader
setLatitude	drivers/GTM/TeGTM.h	/^	void setLatitude(double latitude){latitude_ = latitude;};$/;"	f	class:TeGTMRoutes
setLatitude	drivers/GTM/TeGTM.h	/^	void setLatitude(double latitude){latitude_ = latitude;};$/;"	f	class:TeGTMTrackLogs
setLatitude	drivers/GTM/TeGTM.h	/^	void setLatitude(double latitude){latitude_ = latitude;};$/;"	f	class:TeGTMWaypoints
setLayer	kernel/TeBaseSTInstanceSet.h	/^	virtual void setLayer(TeLayer* l)$/;"	f	class:TeBaseSTInstanceSet
setLayerBox	kernel/TeLayer.cpp	/^TeLayer::setLayerBox(const TeBox& box)$/;"	f	class:TeLayer
setLayerId	kernel/TeCoverageParams.h	/^    void setLayerId(const int layerId)$/;"	f	class:TeCoverageParams
setLayers	drivers/GTM/TeGTM.h	/^	void setLayers(float layers){layers_ = layers;};$/;"	f	class:TeGTMHeader
setLeft	kernel/TeKdTree.h	/^		void setLeft(TeAdaptativeKdTreeNode* node)$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
setLeft	kernel/TeKdTree.h	/^		void setLeft(TeKdTreeNode* node)$/;"	f	class:TeSAM::TeKdTreeNode
setLegend	kernel/TeRasterTransform.h	/^	void setLegend(TeLegendEntryVector legend)$/;"	f	class:TeRasterTransform
setLegends	drivers/qt/TeQtLegendSource.cpp	/^void TeQtLegendSource::setLegends(const vector<TeLegendEntry>& inLegVec)$/;"	f	class:TeQtLegendSource
setLegendsForObjects	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::setLegendsForObjects()$/;"	f	class:TeExternalTheme
setLegendsForObjects	kernel/TeFileTheme.cpp	/^void TeFileTheme::setLegendsForObjects()$/;"	f	class:TeFileTheme
setLegendsForObjects	kernel/TeSFSTheme.cpp	/^void TeSFSTheme::setLegendsForObjects()$/;"	f	class:TeSFSTheme
setLegendsForObjects	kernel/TeTheme.cpp	/^TeTheme::setLegendsForObjects()$/;"	f	class:TeTheme
setLightingMode	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::setLightingMode( int )$/;"	f	class:TeQtGLWidget
setLikeOptFlag	drivers/SQLite/sqlite3/sqlite3.c	/^static void setLikeOptFlag(sqlite3 *db, const char *zName, u8 flagVal){$/;"	f	file:
setLineAttributes	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::setLineAttributes(TeColor c, int \/* s *\/, int w)$/;"	f	class:TeQtGraphPlot
setLineColor	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setLineColor (int r, int g, int b)$/;"	f	class:TeQtCanvas
setLineStyle	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setLineStyle (int s, int w)$/;"	f	class:TeQtCanvas
setLinearTransfParameters	kernel/TeRasterTransform.h	/^	void setLinearTransfParameters(double vmin, double vmax, double rmin, double rmax)$/;"	f	class:TeRasterTransform
setLinkName	kernel/TeTable.h	/^	void setLinkName ( const string& linkName ) { attLink_ = linkName;}$/;"	f	class:TeTable
setLoadAttrs	kernel/TeQuerierParams.h	/^	virtual void setLoadAttrs(const vector<string>& vec) { loadAttrNames_ = vec; }$/;"	f	class:TeQuerierParams
setLocalDatabase	kernel/TeFileTheme.cpp	/^void TeFileTheme::setLocalDatabase(TeDatabase* db)$/;"	f	class:TeFileTheme
setLocalDatabase	kernel/TeSFSTheme.cpp	/^void TeSFSTheme::setLocalDatabase(TeDatabase* database)$/;"	f	class:TeSFSTheme
setLocation	kernel/TeGeometry.h	/^	void setLocation(const TeCoord2D& l)$/;"	f	class:TeText
setLock	drivers/GTM/TeGTM.h	/^	void setLock(unsigned char lock){lock_ = lock;};$/;"	f	class:TeGTMLayers
setLock	drivers/Oracle/OCI/include/occiObjects.h	/^void Ref<T>::setLock (LockOptions lckOption)$/;"	f	class:oracle::occi::Ref
setLongitude	drivers/GTM/TeGTM.h	/^	void setLongitude(double longitude){longitude_ = longitude;};$/;"	f	class:TeGTMRoutes
setLongitude	drivers/GTM/TeGTM.h	/^	void setLongitude(double longitude){longitude_ = longitude;};$/;"	f	class:TeGTMTrackLogs
setLongitude	drivers/GTM/TeGTM.h	/^	void setLongitude(double longitude){longitude_ = longitude;};$/;"	f	class:TeGTMWaypoints
setLutSize	kernel/TeRasterTransform.h	/^	void setLutSize(int n)$/;"	f	class:TeRasterTransform
setLutTableName	kernel/TeRasterTransform.h	/^	void setLutTableName(const std::string& tableName)$/;"	f	class:TeRasterTransform
setMap	drivers/GTM/TeGTM.h	/^	void setMap(bool map){map_ = map;};$/;"	f	class:TeGTMHeader
setMaster	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 setMaster;               \/* True if a m-j name has been written to jrnl *\/$/;"	m	struct:Pager	file:
setMatrix	stat/TeMSVFactory.h	/^	void setMatrix(TeMatrix* m) {MSVmatrix_ = m;}$/;"	f	class:TeMSV
setMaxSimulJobs	kernel/TeThreadJobsManager.cpp	/^void TeThreadJobsManager::setMaxSimulJobs( unsigned long int maxSimulJobs )$/;"	f	class:TeThreadJobsManager
setMaxTime	kernel/TeBaseSTInstanceSet.h	/^	virtual void setMaxTime(TimeType& t)$/;"	f	class:TeBaseSTInstanceSet
setMaxlat	drivers/GTM/TeGTM.h	/^	void setMaxlat(float maxlat){maxlat_ = maxlat;};$/;"	f	class:TeGTMHeader
setMaxlon	drivers/GTM/TeGTM.h	/^	void setMaxlon(float maxlon){maxlon_ = maxlon;};$/;"	f	class:TeGTMHeader
setMessage	drivers/qt/TeQtProgress.h	/^	void setMessage(const string& text)$/;"	f	class:TeQtProgress
setMessage	kernel/TeStdIOProgress.cpp	/^void TeStdIOProgress::setMessage(const string& text)$/;"	f	class:TeStdIOProgress
setMetamap	drivers/GTM/TeGTM.h	/^	void setMetamap(unsigned char metamapa){metamapa_ = metamapa;};$/;"	f	class:TeGTMInformationImages
setMetax	drivers/GTM/TeGTM.h	/^	void setMetax(float metax){metax_ = metax;};$/;"	f	class:TeGTMInformationImages
setMetay	drivers/GTM/TeGTM.h	/^	void setMetay(float metay){metay_ = metay;};$/;"	f	class:TeGTMInformationImages
setMinTime	kernel/TeBaseSTInstanceSet.h	/^	virtual void setMinTime(TimeType& t)$/;"	f	class:TeBaseSTInstanceSet
setMinlat	drivers/GTM/TeGTM.h	/^	void setMinlat(float minlat){minlat_ = minlat;};$/;"	f	class:TeGTMHeader
setMinlon	drivers/GTM/TeGTM.h	/^	void setMinlon(float minlon){minlon_ = minlon;};$/;"	f	class:TeGTMHeader
setMode	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setMode (CursorMode m)$/;"	f	class:TeQtCanvas
setNLinesNColumns	kernel/TeRasterParams.cpp	/^TeRasterParams::setNLinesNColumns(int nlines, int ncolumns)$/;"	f	class:TeRasterParams
setN_maps	drivers/GTM/TeGTM.h	/^	void setN_maps(long n_maps){n_maps_ = n_maps;};$/;"	f	class:TeGTMHeader
setN_tk	drivers/GTM/TeGTM.h	/^	void setN_tk(long n_tk){n_tk_ = n_tk;};$/;"	f	class:TeGTMHeader
setName	drivers/GTM/TeGTM.h	/^	void setName(char* name){name_ = name;};$/;"	f	class:TeGTMLayers
setName	drivers/GTM/TeGTM.h	/^	void setName(char* name){name_ = name;};$/;"	f	class:TeGTMUserIcons
setName	drivers/GTM/TeGTM.h	/^	void setName(char* name){name_ = name;};$/;"	f	class:TeGTMWaypoints
setName	kernel/TeProject.h	/^	virtual void setName(const string& name) $/;"	f	class:TeProject
setName_map	drivers/GTM/TeGTM.h	/^	void setName_map(char* name_map){name_map_ = name_map;};$/;"	f	class:TeGTMInformationImages
setNavigationParameters	kernel/TeRasterParams.cpp	/^TeRasterParams::setNavigationParameters(const vector<double>& nwf)$/;"	f	class:TeRasterParams
setNdatum	drivers/GTM/TeGTM.h	/^	void setNdatum(short ndatum){ndatum_ = ndatum;};$/;"	f	class:TeGTMGridDatum
setNdatum	drivers/GTM/TeGTM.h	/^	void setNdatum(unsigned char ndatum){ndatum_ = ndatum;};$/;"	f	class:TeGTMHeader
setNewdatum	drivers/GTM/TeGTM.h	/^	void setNewdatum(char* newdatum){newdatum_ = newdatum;};$/;"	f	class:TeGTMHeader
setNgrid	drivers/GTM/TeGTM.h	/^	void setNgrid(short ngrid){ngrid_ = ngrid;};$/;"	f	class:TeGTMGridDatum
setNodeColor	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setNodeColor (int r, int g, int b)$/;"	f	class:TeQtCanvas
setNodeStyle	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setNodeStyle (int s, int w)$/;"	f	class:TeQtCanvas
setNodes	kernel/TeGeometry.h	/^	void setNodes (TeNode& from, TeNode& to)$/;"	f	class:TeArc
setNrtes	drivers/GTM/TeGTM.h	/^	void setNrtes(long nrtes){nrtes_ = nrtes;};$/;"	f	class:TeGTMHeader
setNtracks	drivers/GTM/TeGTM.h	/^	void setNtracks(long ntrcks){ntrcks_ = ntrcks;};$/;"	f	class:TeGTMHeader
setNull	drivers/Oracle/OCI/include/occiObjects.h	/^void Ref<T>::setNull()$/;"	f	class:oracle::occi::Ref
setNumElements	kernel/TeCoverageParams.h	/^    void setNumElements(const int numElements)$/;"	f	class:TeCoverageParams
setNumber	drivers/GTM/TeGTM.h	/^	void setNumber(unsigned char number){number_ = number;};$/;"	f	class:TeGTMUserIcons
setNumberOfObjects	kernel/TeFileTheme.cpp	/^void TeFileTheme::setNumberOfObjects(unsigned int n)$/;"	f	class:TeFileTheme
setNwpts	drivers/GTM/TeGTM.h	/^	void setNwpts(long nwpts){nwpts_ = nwpts;};$/;"	f	class:TeGTMHeader
setNwptstyles	drivers/GTM/TeGTM.h	/^	void setNwptstyles(long nwptstyles){nwptstyles_ = nwptstyles;};$/;"	f	class:TeGTMHeader
setObjPtr	drivers/spl/PluginsParametersContainer.h	/^      void setObjPtr( const TeSharedPtr< ObjectT >& ptr ) $/;"	f	class:PPCNode
setObjPtr	kernel/TeMultiContainer.h	/^      void setObjPtr( ObjectT* ptr ) $/;"	f	class:TeMCNode
setObjectGridStatusMap	kernel/TeExternalTheme.cpp	/^TeExternalTheme::setObjectGridStatusMap(const std::string objId, const int uniqueId, const int status)$/;"	f	class:TeExternalTheme
setObjectId	kernel/TeBaseSTInstance.h	/^	virtual void setObjectId (const string& id) $/;"	f	class:TeBaseSTInstance
setObjectLegendStatusMap	kernel/TeExternalTheme.cpp	/^TeExternalTheme::setObjectLegendStatusMap(const std::string objId, const int status)$/;"	f	class:TeExternalTheme
setObjectsToDefaultStatus	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setObjectsToDefaultStatus()$/;"	f	class:TeAbstractTheme
setOffset	kernel/TeRasterTransform.h	/^	void setOffset(double o) $/;"	f	class:TeRasterTransform
setOn	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::setOn(QCheckListItem *item, bool visible)$/;"	f	class:TeQtViewsListView
setOneEdge	kernel/TeTin.h	/^	void setOneEdge (long oneEdge) $/;"	f	class:TeTinVertex
setOpenViewItem	drivers/qt/TeQtViewsListView.h	/^	void setOpenViewItem(QCheckListItem *checkListItem, bool visible)$/;"	f	class:TeQtViewsListView
setOptmizedReprojection	kernel/TeRasterRemap.h	/^  void setOptmizedReprojection( bool enabled )$/;"	f	class:TeRasterRemap
setOrder	kernel/TeTable.h	/^	void setOrder(int n) { order_ = n; }$/;"	f	class:TeTable
setOrigin	drivers/GTM/TeGTM.h	/^	void setOrigin(double origin){origin_ = origin;};$/;"	f	class:TeGTMGridDatum
setOutput	kernel/TeRasterRemap.h	/^	void setOutput(TeRaster* rasterOut)$/;"	f	class:TeRasterRemap
setOwnLegendsForObjects	kernel/TeFileTheme.cpp	/^void TeFileTheme::setOwnLegendsForObjects()$/;"	f	class:TeFileTheme
setOwnLegendsForObjects	kernel/TeSFSTheme.cpp	/^void TeSFSTheme::setOwnLegendsForObjects()$/;"	f	class:TeSFSTheme
setOwnLegendsForObjects	kernel/TeTheme.cpp	/^TeTheme::setOwnLegendsForObjects()$/;"	f	class:TeTheme
setPGConnection	drivers/PostgreSQL/TePostgreSQLConnection.cpp	/^void TePostgreSQLConnection::setPGConnection(TePGConnection* conn)$/;"	f	class:TePostgreSQLConnection
setParameters	image_processing/TePDIParaSegBaatzStrategy.cpp	/^bool TePDIParaSegBaatzStrategy::setParameters( $/;"	f	class:TePDIParaSegBaatzStrategy
setParameters	image_processing/TePDIParaSegRegGrowStrategy.cpp	/^bool TePDIParaSegRegGrowStrategy::setParameters( $/;"	f	class:TePDIParaSegRegGrowStrategy
setParameters	kernel/TeThreadFunctor.cpp	/^void TeThreadFunctor::setParameters(const TeThreadParameters& params)$/;"	f	class:TeThreadFunctor
setParametersPtr	kernel/TeThreadFunctor.cpp	/^void TeThreadFunctor::setParametersPtr( void* userParamsPtr )$/;"	f	class:TeThreadFunctor
setParams	kernel/TeQuerierParams.cpp	/^TeQuerierParams::setParams(TeLayer* layer)$/;"	f	class:TeQuerierParams
setParams	kernel/TeQuerierParams.cpp	/^TeQuerierParams::setParams(TeTheme* theme, TeChronon chr)$/;"	f	class:TeQuerierParams
setParams	kernel/TeQuerierParams.cpp	/^TeQuerierParams::setParams(TeTheme* theme, const string& objId, TeChronon chr)$/;"	f	class:TeQuerierParams
setParams	kernel/TeQuerierParams.cpp	/^TeQuerierParams::setParams(const string& fileName, TeChronon chr)$/;"	f	class:TeQuerierParams
setParent	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setParent (TeViewNode* )$/;"	f	class:TeAbstractTheme
setParent	kernel/TeViewNode.h	/^	virtual void setParent ( TeViewNode* node )$/;"	f	class:TeViewNode
setPassword	kernel/TeConnection.cpp	/^void TeConnection::setPassword(const std::string& psw)$/;"	f	class:TeConnection
setPen	drivers/qwt/TeQwtPlotPicker.h	/^	void setPen(QPen p) {painter_.setPen(p);}$/;"	f	class:TeQwtPlotPicker
setPendingFd	drivers/SQLite/sqlite3/sqlite3.c	/^static void setPendingFd(unixFile *pFile){$/;"	f	file:
setPersistenceType	kernel/TeCoverageParams.h	/^    void setPersistenceType(const TeCoveragePersistenceType persistenceType)$/;"	f	class:TeCoverageParams
setPhotometric	kernel/TeRasterParams.cpp	/^TeRasterParams::setPhotometric(TeRasterParams::TeRasterPhotometricInterpretation photom, int band)$/;"	f	class:TeRasterParams
setPieColor	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setPieColor (int r, int g, int b)$/;"	f	class:TeQtCanvas
setPinnedObject	drivers/Oracle/OCI/include/occiObjects.h	/^void Ref<T>::setPinnedObject( PObject *objPtr)$/;"	f	class:oracle::occi::Ref
setPluginMetadata	drivers/spl/PluginParameters.cpp	/^void PluginParameters::setPluginMetadata(const PluginMetadata& pluginMetadata) const$/;"	f	class:PluginParameters
setPluginMetadataFPT	drivers/spl/PluginParameters.h	/^	  typedef void (*setPluginMetadataFPT)( $/;"	t	class:PluginParameters
setPluginMetadataFP_	drivers/spl/PluginParameters.h	/^	  setPluginMetadataFPT setPluginMetadataFP_;$/;"	m	class:PluginParameters
setPointColor	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setPointColor (int r, int g, int b)$/;"	f	class:TeQtCanvas
setPointStyle	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setPointStyle (int s, int w)$/;"	f	class:TeQtCanvas
setPolygonColor	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setPolygonColor (int r, int g, int b)$/;"	f	class:TeQtCanvas
setPolygonLineColor	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setPolygonLineColor (int r, int g, int b)$/;"	f	class:TeQtCanvas
setPolygonLineStyle	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setPolygonLineStyle (int s, int w)$/;"	f	class:TeQtCanvas
setPolygonStyle	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setPolygonStyle (int s, int t)$/;"	f	class:TeQtCanvas
setPopupItem	drivers/qt/TeQtDatabasesListView.h	/^    void setPopupItem(TeQtCheckListItem* item)$/;"	f	class:TeQtDatabasesListView
setPopupItem	drivers/qt/TeQtViewsListView.h	/^    void setPopupItem(TeQtCheckListItem* item)$/;"	f	class:TeQtViewsListView
setPortNumber	kernel/TeConnection.cpp	/^void TeConnection::setPortNumber(const int& portNumber)$/;"	f	class:TeConnection
setPortal	drivers/qt/TeQtGridSource.cpp	/^bool TeQtGridSource::setPortal(TeAppTheme* theme)$/;"	f	class:TeQtGridSource
setPrecision	kernel/TePrecision.h	/^	void setPrecision ( double precision )$/;"	f	class:TePrecision
setPrefetch	drivers/Oracle/OCI/include/occiObjects.h	/^void Ref<T>::setPrefetch (const OCCI_STD_NAMESPACE::string &schemaName,$/;"	f	class:oracle::occi::Ref
setPrefetch	drivers/Oracle/OCI/include/occiObjects.h	/^void Ref<T>::setPrefetch (const OCCI_STD_NAMESPACE::string &typeName,$/;"	f	class:oracle::occi::Ref
setPrefetch	drivers/Oracle/OCI/include/occiObjects.h	/^void Ref<T>::setPrefetch (const UString &schemaName,$/;"	f	class:oracle::occi::Ref
setPrefetch	drivers/Oracle/OCI/include/occiObjects.h	/^void Ref<T>::setPrefetch (unsigned int depth)$/;"	f	class:oracle::occi::Ref
setPriority	kernel/TeThread.cpp	/^bool TeThread::setPriority(TeThreadPriority newPriority)$/;"	f	class:TeThread
setProgress	drivers/qt/TeQtProgress.h	/^	void setProgress(int steps)$/;"	f	class:TeQtProgress
setProgress	kernel/TeStdIOProgress.cpp	/^void TeStdIOProgress::setProgress(int steps)$/;"	f	class:TeStdIOProgress
setProgressInterf	kernel/TeProgress.cpp	/^void TeProgress::setProgressInterf( TeProgressBase* interf )$/;"	f	class:TeProgress
setProjection	drivers/GTM/TeGTM.cpp	/^TeProjection* TeGTM::setProjection(TeProjection* proj)$/;"	f	class:TeGTM
setProjection	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setProjection ( TeProjection* proj )$/;"	f	class:TeQtCanvas
setProjection	kernel/TeCoverageParams.h	/^    void setProjection(TeProjection* projection)$/;"	f	class:TeCoverageParams
setProjection	kernel/TeLayer.cpp	/^TeLayer::setProjection ( TeProjection* proj )$/;"	f	class:TeLayer
setProperties	kernel/TeBaseSTInstance.h	/^	virtual void setProperties(const vector<string>& p) $/;"	f	class:TeBaseSTInstance
setProperties	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::setProperties(TePropertyVector& p)$/;"	f	class:TeBaseSTInstance
setProperties	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::setProperties (const string& object_id, const vector<string>& values, TimeType& time, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
setProperties	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::setProperties (const string& object_id, const vector<string>& values, const int& slice)$/;"	f	class:TeBaseSTInstanceSet
setPropertyValue	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::setPropertyValue (const int& i, const string& val)$/;"	f	class:TeBaseSTInstance
setPropertyValue	kernel/TeBaseSTInstance.h	/^TeBaseSTInstance<GeometryType, TimeType>::setPropertyValue (const string& name, const string& val)$/;"	f	class:TeBaseSTInstance
setPropertyValue	stat/TeStatDataStructures.h	/^	bool setPropertyValue(const string& \/* name *\/, const string&  value) $/;"	f	class:TeGridElement
setQualityFactor	kernel/TeDecoderJPEG.cpp	/^void TeDecoderJPEG::setQualityFactor( unsigned int qualityFactor )$/;"	f	class:TeDecoderJPEG
setRGBmap	kernel/TeRasterTransform.h	/^	void setRGBmap (map<TeRGBChannels,short>& rgbmap)$/;"	f	class:TeRasterTransform
setROI	kernel/TeRasterRemap.cpp	/^bool TeRasterRemap::setROI(TeBox& roi)$/;"	f	class:TeRasterRemap
setRaster	stat/TeStatDataStructures.h	/^	void setRaster(TeRaster* rst)$/;"	f	class:TeGridElement
setRasterFile	kernel/TeFileTheme.cpp	/^void TeFileTheme::setRasterFile(const std::string& fileName)$/;"	f	class:TeFileTheme
setRasterIn	kernel/TeRasterTransform.h	/^	void setRasterIn(TeRaster* rIn)$/;"	f	class:TeRasterTransform
setRasterOut	kernel/TeRasterTransform.h	/^	void setRasterOut(TeRaster* rOut)$/;"	f	class:TeRasterTransform
setRect	drivers/qwt/TeQwtPlotPicker.h	/^	void setRect(const QRect& r) {rect_ = r;}$/;"	f	class:TeQwtPlotPicker
setRectColor	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setRectColor (int r, int g, int b)$/;"	f	class:TeQtCanvas
setRectangular	drivers/GTM/TeGTM.h	/^	void setRectangular(bool rectangular){rectangular_ = rectangular;};$/;"	f	class:TeGTMHeader
setRemoteDatabase	kernel/TeSFSTheme.cpp	/^void TeSFSTheme::setRemoteDatabase(TeDatabase* remoteDb)$/;"	f	class:TeSFSTheme
setRemoteDatabaseId	kernel/TeSFSTheme.cpp	/^void TeSFSTheme::setRemoteDatabaseId(const int& remoteDbId)$/;"	f	class:TeSFSTheme
setRemoteDbId	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::setRemoteDbId(const int& removeDbId)$/;"	f	class:TeExternalTheme
setRemoteTheme	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::setRemoteTheme(TeTheme* theme)$/;"	f	class:TeExternalTheme
setReplaceSpecialChars	functions/TeAddressLocator.h	/^		void setReplaceSpecialChars(const bool& r)$/;"	f	class:TeAddressLocator
setReserva1	drivers/GTM/TeGTM.h	/^	void setReserva1(unsigned char reserva1){reserva1_ = reserva1;};$/;"	f	class:TeGTMLayers
setReserva2	drivers/GTM/TeGTM.h	/^	void setReserva2(short reserva2){reserva2_ = reserva2;};$/;"	f	class:TeGTMLayers
setResolution	kernel/TeGridIndex.h	/^		void setResolution(const double& resX, const double& resY)$/;"	f	class:TeSAM::TeGridIndex
setResultStrOrError	drivers/SQLite/sqlite3/sqlite3.c	/^static void setResultStrOrError($/;"	f	file:
setRight	kernel/TeKdTree.h	/^		void setRight(TeAdaptativeKdTreeNode* node)$/;"	f	class:TeSAM::TeAdaptativeKdTreeNode
setRight	kernel/TeKdTree.h	/^		void setRight(TeKdTreeNode* node)$/;"	f	class:TeSAM::TeKdTreeNode
setRname	drivers/GTM/TeGTM.h	/^	void setRname(char* rname){rname_ = rname;};$/;"	f	class:TeGTMRoutes
setSFSTableInfo	kernel/TeSFSTheme.cpp	/^void TeSFSTheme::setSFSTableInfo(const std::string& tableName, const std::string& columnName)$/;"	f	class:TeSFSTheme
setSTObjects	kernel/TeProxMatrixConstructionStrategy.h	/^TeProxMatrixConstructionStrategy<T>::setSTObjects (T*  objects, TeGeomRep  geomRep)$/;"	f	class:TeProxMatrixConstructionStrategy
setScale	kernel/TeGraph.cpp	/^TeGraphPlot :: setScale(Real x1, Real x2 , Real y1, Real y2)$/;"	f	class:TeGraphPlot
setScale1	drivers/GTM/TeGTM.h	/^	void setScale1(double scale1){scale1_ = scale1;};$/;"	f	class:TeGTMGridDatum
setScale1	drivers/GTM/TeGTM.h	/^	void setScale1(float scale1){scale1_ = scale1;};$/;"	f	class:TeGTMWaypointsStyles
setSectorSize	drivers/SQLite/sqlite3/sqlite3.c	/^static void setSectorSize(Pager *pPager){$/;"	f	file:
setSelecetObjs	kernel/TeQuerierParams.h	/^	virtual void setSelecetObjs(TeSelectedObjects so) { selectedObjs_ = so; }$/;"	f	class:TeQuerierParams
setSeparator	functions/TeSPRFile.h	/^	void setSeparator ( const char& c )$/;"	f	class:TeSPRFile
setSeparator	kernel/TeTable.h	/^	void setSeparator ( const char& c )$/;"	f	class:TeTable
setSharedCacheTableLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int setSharedCacheTableLock(Btree *p, Pgno iTable, u8 eLock){$/;"	f	file:
setSharedCacheTableLock	drivers/SQLite/sqlite3/sqlite3.c	48167;"	d	file:
setSize	drivers/GTM/TeGTM.h	/^	void setSize(long size){size_ = size;};$/;"	f	class:TeGTMUserIcons
setSlice	kernel/TeBaseSTInstance.h	/^	virtual void setSlice (int s) $/;"	f	class:TeBaseSTInstance
setSlice	kernel/TeLegendEntry.h	/^	void setSlice(const TeSlice& sl)$/;"	f	class:TeLegendEntry
setSourceDatabase	kernel/TeExternalTheme.cpp	/^void TeExternalTheme::setSourceDatabase(TeDatabase* srcDB)$/;"	f	class:TeExternalTheme
setSpatialRest	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme::setSpatialRest(TeBox& box, TeGeomRep rep, TeSpatialRelation relation)$/;"	f	class:TeAbstractTheme
setSpatialRest	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme::setSpatialRest(TeGeometry* geom, TeGeomRep rep, TeSpatialRelation relation)$/;"	f	class:TeAbstractTheme
setSpatialRest	kernel/TeQuerierParams.cpp	/^TeQuerierParams::setSpatialRest(TeBox& box, int relation, TeGeomRep rep)$/;"	f	class:TeQuerierParams
setSpatialRest	kernel/TeQuerierParams.cpp	/^TeQuerierParams::setSpatialRest(TeGeometry* geom, int relation, TeGeomRep rep)$/;"	f	class:TeQuerierParams
setSpatialRest	kernel/TeTheme.cpp	/^TeTheme::setSpatialRest(TeBox& box, TeGeomRep rep, TeSpatialRelation relation)$/;"	f	class:TeTheme
setSpatialRest	kernel/TeTheme.cpp	/^TeTheme::setSpatialRest(TeGeometry* geom, TeGeomRep rep, TeSpatialRelation relation)$/;"	f	class:TeTheme
setSplitChar	functions/TeAddressLocator.h	/^		void setSplitChar(const string& splitChar)$/;"	f	class:TeAddressLocator
setSrcBand	kernel/TeRasterTransform.h	/^	void setSrcBand(short n)$/;"	f	class:TeRasterTransform
setStartFunctPtr	kernel/TeThreadFunctor.cpp	/^void TeThreadFunctor::setStartFunctPtr( TeThreadStartFunctT1 startFuncPtr )$/;"	f	class:TeThreadFunctor
setStartFunctPtr	kernel/TeThreadFunctor.cpp	/^void TeThreadFunctor::setStartFunctPtr( TeThreadStartFunctT2 startFuncPtr )$/;"	f	class:TeThreadFunctor
setStatus	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setStatus(vector<string>& oidVec, vector<string>& itemVec, int status)$/;"	f	class:TeAbstractTheme
setStatusForItemsAddedByPointing	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setStatusForItemsAddedByPointing(vector<string>& itemVec)$/;"	f	class:TeAbstractTheme
setStatusForItemsAddedByQuerying	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setStatusForItemsAddedByQuerying(set<string>& oidSet, vector<string>& uidVec)$/;"	f	class:TeAbstractTheme
setStatusForItemsFilteredByQuerying	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setStatusForItemsFilteredByQuerying(set<string>& oidSet, vector<string>& uidVec)$/;"	f	class:TeAbstractTheme
setStatusForItemsToggled	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setStatusForItemsToggled(set<string>& oidSet, vector<string>& uidVec)$/;"	f	class:TeAbstractTheme
setStatusForNewItemsPointed	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setStatusForNewItemsPointed(vector<string>& itemVec)$/;"	f	class:TeAbstractTheme
setStatusForNewItemsQueried	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setStatusForNewItemsQueried(set<string>& oidSet, vector<string>& uidVec)$/;"	f	class:TeAbstractTheme
setStatusForNewObjectsPointed	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setStatusForNewObjectsPointed(set<string>& oidSet)$/;"	f	class:TeAbstractTheme
setStatusForObjectToggled	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setStatusForObjectToggled(string oid)$/;"	f	class:TeAbstractTheme
setStatusForObjectsAddedByPointing	kernel/TeAbstractTheme.cpp	/^void TeAbstractTheme::setStatusForObjectsAddedByPointing(set<string>& oidSet)$/;"	f	class:TeAbstractTheme
setStrikeout	drivers/GTM/TeGTM.h	/^	void setStrikeout(unsigned char strikeout){strikeout_ = strikeout;};$/;"	f	class:TeGTMWaypointsStyles
setSymbolType	kernel/TeGraph.cpp	/^TeGraphPlot :: setSymbolType(int type, int curve)$/;"	f	class:TeGraphPlot
setTSEntryValue	kernel/TeTemporalSeries.cpp	/^TeTemporalSeries::setTSEntryValue(unsigned int frame, double val, TeTSDataType type)$/;"	f	class:TeTemporalSeries
setTableType	kernel/TeTable.cpp	/^TeTable::setTableType( TeAttrTableType attType, int relatedTableId, const string& relatedAttribute)$/;"	f	class:TeTable
setTalt	drivers/GTM/TeGTM.h	/^	void setTalt(float talt){talt_ = talt;};$/;"	f	class:TeGTMTrackLogs
setTcolor	drivers/GTM/TeGTM.h	/^	void setTcolor(long tcolor){tcolor_ = tcolor;};$/;"	f	class:TeGTMTrackLogStyles
setTdate	drivers/GTM/TeGTM.h	/^	void setTdate(long tdate){tdate_ = tdate;};$/;"	f	class:TeGTMRoutes
setTdate	drivers/GTM/TeGTM.h	/^	void setTdate(long tdate){tdate_ = tdate;};$/;"	f	class:TeGTMTrackLogs
setTextAttributes	drivers/qt/TePlotTheme.h	/^void setTextAttributes(TeAppTheme* appTheme, Canvas* canvas, TeText tx)$/;"	f
setTextColor	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setTextColor (int r, int g, int b)$/;"	f	class:TeQtCanvas
setTextColor	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::setTextColor (TeColor c)$/;"	f	class:TeQtGraphPlot
setTextSize	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setTextSize (int size)$/;"	f	class:TeQtCanvas
setTextStyle	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setTextStyle (string& family, int size, bool bold, bool italic )$/;"	f	class:TeQtCanvas
setTextValue	kernel/TeGeometry.h	/^	void setTextValue (const string &text) $/;"	f	class:TeText
setTheme	kernel/TeBaseSTInstanceSet.h	/^	virtual void setTheme(TeTheme* t)$/;"	f	class:TeBaseSTInstanceSet
setThemeBox	kernel/TeAbstractTheme.h	/^	virtual void setThemeBox(const TeBox& box)$/;"	f	class:TeAbstractTheme
setThemeItemAsInvalid	drivers/qt/TeQtThemeItem.cpp	/^void TeQtThemeItem::setThemeItemAsInvalid()$/;"	f	class:TeQtThemeItem
setThemeProjection	kernel/TeFileTheme.cpp	/^void TeFileTheme::setThemeProjection(TeProjection* proj)$/;"	f	class:TeFileTheme
setThemeProjection	kernel/TeSFSTheme.cpp	/^void TeSFSTheme::setThemeProjection(TeProjection* proj)$/;"	f	class:TeSFSTheme
setTime	kernel/TeBaseSTInstance.h	/^	virtual void setTime (const TimeType& t) $/;"	f	class:TeBaseSTInstance
setTimeOut	kernel/TeConnectionPool.cpp	/^void TeConnectionPool::setTimeOut(const clock_t t)$/;"	f	class:TeConnectionPool
setTlabel	drivers/GTM/TeGTM.h	/^	void setTlabel(unsigned char tlabel){tlabel_ = tlabel;};$/;"	f	class:TeGTMTrackLogStyles
setTlayer	drivers/GTM/TeGTM.h	/^	void setTlayer(short tlayer){tlayer_ = tlayer;};$/;"	f	class:TeGTMTrackLogStyles
setTname	drivers/GTM/TeGTM.h	/^	void setTname(char* tname){tname_ = tname;};$/;"	f	class:TeGTMTrackLogStyles
setTnum	drivers/GTM/TeGTM.h	/^	void setTnum(unsigned char tnum){tnum_ = tnum;};$/;"	f	class:TeGTMInformationImages
setTnum	drivers/GTM/TeGTM.h	/^	void setTnum(unsigned char tnum){tnum_ = tnum;};$/;"	f	class:TeGTMRoutes
setTnum	drivers/GTM/TeGTM.h	/^	void setTnum(unsigned char tnum){tnum_ = tnum;};$/;"	f	class:TeGTMTrackLogs
setTolerances	kernel/TeTin.cpp	/^TeTin::setTolerances(double minedgesize, double isoTol, double ptsdist, double breaklineTol)$/;"	f	class:TeTin
setTotalSteps	drivers/qt/TeQtProgress.h	/^	void setTotalSteps (int steps)$/;"	f	class:TeQtProgress
setTotalSteps	kernel/TeStdIOProgress.cpp	/^void TeStdIOProgress::setTotalSteps(int n)$/;"	f	class:TeStdIOProgress
setTransfFunction	kernel/TeRasterTransform.cpp	/^void TeRasterTransform::setTransfFunction(TeRasterTransfFunctions func)$/;"	f	class:TeRasterTransform
setTransfFunction	kernel/TeRasterTransform.h	/^	void setTransfFunction(TeRasterTransform::TransformFunction transfFuncPtr)$/;"	f	class:TeRasterTransform
setTransformation	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::setTransformation(double xmin, double xmax, double ymin, double ymax, bool extend)$/;"	f	class:TeQtCanvas
setTransformer	kernel/TeRasterRemap.h	/^	void setTransformer(TeRasterTransform* transf)$/;"	f	class:TeRasterRemap
setTransparency	drivers/qt/TeDecoderQtImage.h	/^	void setTransparency(int t)$/;"	f	class:TeDecoderQtImage
setTransparency	kernel/TeRasterTransform.h	/^	void setTransparency(unsigned int transp)$/;"	f	class:TeRasterTransform
setTriangles	kernel/TeTin.h	/^	void setTriangles (long left, long right)$/;"	f	class:TeTinEdge
setTruegrid	drivers/GTM/TeGTM.h	/^	void setTruegrid(bool truegrid){truegrid_ = truegrid;};$/;"	f	class:TeGTMHeader
setTscale	drivers/GTM/TeGTM.h	/^	void setTscale(float tscale){tscale_ = tscale;};$/;"	f	class:TeGTMTrackLogStyles
setTtype	drivers/GTM/TeGTM.h	/^	void setTtype(unsigned char ttype){ttype_ = ttype;};$/;"	f	class:TeGTMTrackLogStyles
setType	kernel/TeTin.h	/^	void setType (TeTinEdgeType type) $/;"	f	class:TeTinEdge
setType	kernel/TeTin.h	/^	void setType (TeTinVertexType type) $/;"	f	class:TeTinVertex
setUniqueId	kernel/TeBaseSTInstance.h	/^	virtual void setUniqueId (const vector<string>& id) $/;"	f	class:TeBaseSTInstance
setUniqueName	kernel/TeTable.h	/^	void setUniqueName ( const string& uniqueName ) { attUnique_ = uniqueName; }	$/;"	f	class:TeTable
setUpDownBar	drivers/qt/TeQtColorBar.h	/^	void	setUpDownBar(bool b) {upDown_ = b;}$/;"	f	class:TeQtColorBar
setUser	kernel/TeConnection.cpp	/^void TeConnection::setUser(const std::string& user)$/;"	f	class:TeConnection
setUsercolor	drivers/GTM/TeGTM.h	/^	void setUsercolor(long usercolor){usercolor_ = usercolor;};$/;"	f	class:TeGTMHeader
setUserfont	drivers/GTM/TeGTM.h	/^	void setUserfont(char* userfont){userfont_ = userfont;};$/;"	f	class:TeGTMHeader
setUseritalic	drivers/GTM/TeGTM.h	/^	void setUseritalic(bool useritalic){useritalic_ = useritalic;};$/;"	f	class:TeGTMHeader
setUsernegrit	drivers/GTM/TeGTM.h	/^	void setUsernegrit(bool usernegrit){usernegrit_ = usernegrit;};$/;"	f	class:TeGTMHeader
setUsernum	drivers/GTM/TeGTM.h	/^	void setUsernum(unsigned char usernum){usernum_ = usernum;};$/;"	f	class:TeGTMHeader
setUsersublin	drivers/GTM/TeGTM.h	/^	void setUsersublin(bool usersublin){usersublin_ = usersublin;};$/;"	f	class:TeGTMHeader
setUsertachado	drivers/GTM/TeGTM.h	/^	void setUsertachado(bool usertachado){usertachado_ = usertachado;};$/;"	f	class:TeGTMHeader
setUsingCollection	kernel/TeTheme.cpp	/^void TeTheme::setUsingCollection(const bool& usingCollection)$/;"	f	class:TeTheme
setVal	kernel/TeDecoderVirtualMemory.cpp	/^TeMemoryPage::setVal(int col,int lin,int nCols, double val)$/;"	f	class:TeMemoryPage
setValue	image_processing/TePDIMtxDoubleAdpt.hpp	/^      inline void setValue( const unsigned int& lin, $/;"	f	class:TePDIMtxDoubleAdpt
setValue	kernel/TeBaseSTInstanceSet.h	/^			void setValue(const double& val)$/;"	f	class:TeBaseSTInstanceSet::propertyIterator
setValue	kernel/TeDecoderSmartMem.h	/^  inline void setValue( const int& col, const int& lin, $/;"	f	class:TeDecoderSmartMem
setValue	kernel/TeTable.cpp	/^TeTable::setValue (int row, int col, string& val)$/;"	f	class:TeTable
setValue	kernel/TeTable.h	/^	void setValue (int row, int col, string& val)$/;"	f	class:TeTableImpl
setVector	drivers/Oracle/OCI/include/occiControl.h	/^void setVector( Statement *stmt, unsigned int index, $/;"	f	namespace:oracle::occi
setVector	drivers/Oracle/OCI/include/occiControl.h	/^void setVector( Statement *stmt, unsigned int index, const OCCI_STD_NAMESPACE::$/;"	f	namespace:oracle::occi
setVector	drivers/Oracle/OCI/include/occiObjects.h	/^ void setVector(AnyData &any, const OCCI_STD_NAMESPACE::vector< Ref<T> > &vect)$/;"	f	namespace:oracle::occi
setVector	drivers/Oracle/OCI/include/occiObjects.h	/^ void setVector(AnyData &any, const OCCI_STD_NAMESPACE::vector<T*> &vect)$/;"	f	namespace:oracle::occi
setVector	drivers/Oracle/OCI/include/occiObjects.h	/^ void setVector(AnyData &any, const OCCI_STD_NAMESPACE::vector<T> &vect) $/;"	f	namespace:oracle::occi
setVectorOfRefs	drivers/Oracle/OCI/include/occiControl.h	/^void setVectorOfRefs( Statement *stmt, unsigned int index, $/;"	f	namespace:oracle::occi
setVectorOfRefs	drivers/Oracle/OCI/include/occiObjects.h	/^ void setVectorOfRefs(AnyData &any, $/;"	f	namespace:oracle::occi
setVersion	drivers/GTM/TeGTM.h	/^	void setVersion(short version){version_ = version;};$/;"	f	class:TeGTMHeader
setVerticalBar	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::setVerticalBar(bool b)$/;"	f	class:TeQtColorBar
setVerticalEdition	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::setVerticalEdition(bool flag)$/;"	f	class:TeQtGrid
setVertices	kernel/TeTin.h	/^	void setVertices (long from, long to)$/;"	f	class:TeTinEdge
setView	drivers/GTM/TeGTM.h	/^	void setView(unsigned char view){view_ = view;};$/;"	f	class:TeGTMLayers
setView	drivers/qt/TeQtCanvas.cpp	/^bool TeQtCanvas::setView(int w, int h, QPaintDevice *pd)$/;"	f	class:TeQtCanvas
setView	drivers/qt/TeQtViewItem.h	/^	void setView(TeView *view)$/;"	f	class:TeQtViewItem
setViewAngle	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::setViewAngle( int a )$/;"	f	class:TeQtGLWidget
setVisColumn	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::setVisColumn(bool vis, int col)$/;"	f	class:TeQtGrid
setVisible	drivers/DXF/tedxflayer.cpp	/^void TeDXFLayer::setVisible(const bool & value) $/;"	f	class:TeDXFLayer
setVisual	kernel/TeLegendEntry.cpp	/^TeLegendEntry::setVisual(TeVisual& vis, TeGeomRep rep) $/;"	f	class:TeLegendEntry
setVisual	kernel/TeLegendEntry.cpp	/^TeLegendEntry::setVisual(TeVisual* vis, TeGeomRep rep) $/;"	f	class:TeLegendEntry
setVisualDefault	kernel/TeAbstractTheme.h	/^	virtual void setVisualDefault (TeVisual* visual, TeGeomRep rep)$/;"	f	class:TeAbstractTheme
setVisualOutOfCollection	kernel/TeAbstractTheme.h	/^	virtual void setVisualOutOfCollection (TeVisual* visual, TeGeomRep rep)$/;"	f	class:TeAbstractTheme
setVisualPointing	kernel/TeAbstractTheme.h	/^	virtual void setVisualPointing (TeVisual* visual, TeGeomRep rep)$/;"	f	class:TeAbstractTheme
setVisualQuery	kernel/TeAbstractTheme.h	/^	virtual void setVisualQuery (TeVisual* visual, TeGeomRep rep)$/;"	f	class:TeAbstractTheme
setVisualQueryAndPointing	kernel/TeAbstractTheme.h	/^	virtual void setVisualQueryAndPointing (TeVisual* visual, TeGeomRep rep)$/;"	f	class:TeAbstractTheme
setVisualWithoutDataConnection	kernel/TeAbstractTheme.h	/^	virtual void setVisualWithoutDataConnection (TeVisual* visual, TeGeomRep rep)$/;"	f	class:TeAbstractTheme
setVwt	drivers/GTM/TeGTM.h	/^	void setVwt(unsigned char vwt){vwt_ = vwt;};$/;"	f	class:TeGTMHeader
setWaitCursor	drivers/qt/TeWaitCursor.cpp	/^void TeWaitCursor::setWaitCursor ()$/;"	f	class:TeWaitCursor
setWalt	drivers/GTM/TeGTM.h	/^	void setWalt(float walt){walt_ = walt;};$/;"	f	class:TeGTMRoutes
setWalt	drivers/GTM/TeGTM.h	/^	void setWalt(float walt){walt_ = walt;};$/;"	f	class:TeGTMWaypoints
setWcomment	drivers/GTM/TeGTM.h	/^	void setWcomment(char* wcomment){wcomment_ = wcomment;};$/;"	f	class:TeGTMRoutes
setWdate	drivers/GTM/TeGTM.h	/^	void setWdate(long wdate){wdate_ = wdate;};$/;"	f	class:TeGTMWaypoints
setWeight	drivers/GTM/TeGTM.h	/^	void setWeight(long weight){weight_ = weight;};$/;"	f	class:TeGTMWaypointsStyles
setWlayer	drivers/GTM/TeGTM.h	/^	void setWlayer(short wlayer){wlayer_ = wlayer;};$/;"	f	class:TeGTMRoutes
setWlayer	drivers/GTM/TeGTM.h	/^	void setWlayer(short wlayer){wlayer_ = wlayer;};$/;"	f	class:TeGTMWaypoints
setWli	drivers/GTM/TeGTM.h	/^	void setWli(unsigned char wli){wli_ = wli;};$/;"	f	class:TeGTMHeader
setWname	drivers/GTM/TeGTM.h	/^	void setWname(char* wname){wname_ = wname;};$/;"	f	class:TeGTMRoutes
setWname	drivers/GTM/TeGTM.h	/^	void setWname(char* wname){wname_ = wname;};$/;"	f	class:TeGTMWaypoints
setWorld	drivers/qt/TeQtCanvas.cpp	/^bool TeQtCanvas::setWorld(TeBox b, int w, int h, QPaintDevice *pd)$/;"	f	class:TeQtCanvas
setWptnum	drivers/GTM/TeGTM.h	/^	void setWptnum(unsigned char wptnum){wptnum_ = wptnum;};$/;"	f	class:TeGTMHeader
setWrot	drivers/GTM/TeGTM.h	/^	void setWrot(short wrot){wrot_ = wrot;};$/;"	f	class:TeGTMRoutes
setWrot	drivers/GTM/TeGTM.h	/^	void setWrot(short wrot){wrot_ = wrot;};$/;"	f	class:TeGTMWaypoints
setXOffset	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::setXOffset( int offset )$/;"	f	class:TeQtGLWidget
setXRotation	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::setXRotation( int degrees )$/;"	f	class:TeQtGLWidget
setXSize	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::setXSize( int size )$/;"	f	class:TeQtGLWidget
setXY	kernel/TeCoord2D.h	/^	void setXY(const double& xVal, const double& yVal )$/;"	f	class:TeCoord2D
setYOffset	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::setYOffset( int offset )$/;"	f	class:TeQtGLWidget
setYRotation	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::setYRotation( int degrees )$/;"	f	class:TeQtGLWidget
setYSize	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::setYSize( int size )$/;"	f	class:TeQtGLWidget
setZOffset	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::setZOffset( int offset )$/;"	f	class:TeQtGLWidget
setZRotation	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::setZRotation( int degrees )$/;"	f	class:TeQtGLWidget
setZSize	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::setZSize( int size )$/;"	f	class:TeQtGLWidget
set_Dissimilatiry	stat/TeTreeMinimum.h	/^	void set_Dissimilatiry (const double Dissimilarity)$/;"	f	class:TeMSTGraphLink
set_authorizer	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,$/;"	m	struct:sqlite3_api_routines	file:
set_authorizer	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,$/;"	m	struct:sqlite3_api_routines
set_auxdata	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
set_auxdata	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines
set_font	kernel/TeGraph.cpp	/^int set_font(int)$/;"	f
set_table_name	drivers/SQLite/sqlite3/shell.c	/^static void set_table_name(struct callback_data *p, const char *zName){$/;"	f	file:
setelement_ptr_	kernel/TeDecoderMemory.h	/^	SetEleFunctPtrT setelement_ptr_;$/;"	m	class:TeDecoderMemory
setelement_ptrs_vec_	kernel/TeDecoderSmartMem.h	/^  SetEleFunctPtrT* setelement_ptrs_vec_;$/;"	m	class:TeDecoderSmartMem
setlabelFont	drivers/GTM/TeGTM.h	/^	void setlabelFont(char* labelfont){labelfont_ = labelfont;};$/;"	f	class:TeGTMHeader
setunderline	drivers/GTM/TeGTM.h	/^	void setunderline(unsigned char underline){underline_ = underline;};$/;"	f	class:TeGTMWaypointsStyles
setupLookaside	drivers/SQLite/sqlite3/sqlite3.c	/^static int setupLookaside(sqlite3 *db, void *pBuf, int sz, int cnt){$/;"	f	file:
sfsThemeFactory	kernel/TeSFSTheme.h	/^  static TeSFSThemeFactory sfsThemeFactory;$/;"	m	namespace:__anon24
sga_address_kusmem	drivers/Oracle/OCI/include/kusapi.h	/^    ub1 *sga_address_kusmem;    \/* SGA memory address *\/$/;"	m	struct:kusmem
sharable	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 sharable;       \/* True if we can share pBt with another db *\/$/;"	m	struct:Btree	file:
shareContext	drivers/GL/glcore.h	/^    GLboolean (*shareContext)(__GLcontext *gc, __GLcontext *gcShare);$/;"	m	struct:__GLexportsRec
shareContext	drivers/GL/internal/glcore.h	/^    GLboolean (*shareContext)(__GLcontext *gc, __GLcontext *gcShare);$/;"	m	struct:__GLexportsRec
shared	drivers/SQLite/sqlite3/sqlite3.c	/^  winceLock *shared;      \/* Global shared lock memory for the file  *\/$/;"	m	struct:winFile	file:
sharedByte	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned long long sharedByte;  \/* for AFP simulated shared lock *\/$/;"	m	struct:unixInodeInfo	file:
sharedCacheEnabled	drivers/SQLite/sqlite3/sqlite3.c	/^  int sharedCacheEnabled;           \/* true if shared-cache mode enabled *\/$/;"	m	struct:Sqlite3Config	file:
sharedLockByte	drivers/SQLite/sqlite3/sqlite3.c	/^  short sharedLockByte;   \/* Randomly chosen byte used as a shared lock *\/$/;"	m	struct:winFile	file:
sharedMask	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:unixShm	file:
sharedMask	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:winShm	file:
sharedMask	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:os2ShmLink	file:
sharedMask	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 sharedMask;             \/* Mask of shared locks held *\/$/;"	m	struct:unixShmNode	file:
shellLog	drivers/SQLite/sqlite3/shell.c	/^static void shellLog(void *pArg, int iErrCode, const char *zMsg){$/;"	f	file:
shellWidgetClass	drivers/GL/vms_x_fix.h	587;"	d
shell_callback	drivers/SQLite/sqlite3/shell.c	/^static int shell_callback(void *pArg, int nArg, char **azArg, char **azCol, int *aiType){$/;"	f	file:
shell_exec	drivers/SQLite/sqlite3/shell.c	/^static int shell_exec($/;"	f	file:
shellstaticFunc	drivers/SQLite/sqlite3/shell.c	/^static void shellstaticFunc($/;"	f	file:
shift	kernel/TeTimeInterval.cpp	/^TeTimeInterval :: shift (const std::string& t)$/;"	f	class:TeTimeInterval
shiftKeyPressed_	drivers/qt/TeQtGrid.h	/^	bool					shiftKeyPressed_;$/;"	m	class:TeQtGrid
shiftMinus	kernel/TeTimeInterval.cpp	/^TeTimeInterval :: shiftMinus (int delta)$/;"	f	class:TeTimeInterval
shiftPlus	kernel/TeTimeInterval.cpp	/^TeTimeInterval :: shiftPlus (int delta)$/;"	f	class:TeTimeInterval
shift_histogram_flag_	image_processing/TePDIMallatWavelets.hpp	/^      bool shift_histogram_flag_;$/;"	m	class:TePDIMallatWavelets
shmBaseName	drivers/SQLite/sqlite3/sqlite3.c	/^  char shmBaseName[1];       \/* Name of the memory object !!! must last !!! *\/$/;"	m	struct:os2ShmNode	file:
show	drivers/qwt/TeQwtPlotPicker.cpp	/^void TeQwtPlotPicker::show(bool b)$/;"	f	class:TeQwtPlotPicker
showCanvasLegend	drivers/qt/TeAppTheme.h	/^	bool showCanvasLegend()$/;"	f	class:TeAppTheme
showCanvasLegend	drivers/qt/TeAppTheme.h	/^	void showCanvasLegend(bool cl)$/;"	f	class:TeAppTheme
showCanvasLegend_	drivers/qt/TeAppTheme.h	/^	bool			showCanvasLegend_;		\/\/to show or not the legend in the canvas$/;"	m	class:TeAppTheme
showCursor	drivers/qwt/TeQwtPlot.h	/^	void showCursor(bool b) {cursor_->show(b);}$/;"	f	class:TeQwtPlot
showDatabases	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::showDatabases (const string&\/* host*\/, const string&\/* user*\/, const string& \/*password*\/, vector<string>& \/*dbNames*\/, int \/*port*\/)$/;"	f	class:TeFirebird
showDatabases	drivers/MySQL/TeMySQL.cpp	/^bool TeMySQL::showDatabases (const string& host, const string& user, const string& password, vector<string>& dbNames, int port)$/;"	f	class:TeMySQL
showDatabases	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::showDatabases(const string& host, const string& user, const string& password, vector<string>& dbNames, int port)$/;"	f	class:TePostGIS
showDatabases	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::showDatabases(const string& host, const string& user, const string& password, vector<string>& dbNames, int port)$/;"	f	class:TePostgreSQL
showDatabases	kernel/TeDatabase.h	/^	virtual bool showDatabases (const string& \/* host *\/, const string& \/* user *\/, const string& \/* password *\/, vector<string>& \/* dbNames *\/ , int \/* port *\/ = -1)$/;"	f	class:TeDatabase
showFrame	drivers/qt/TeQtAnimaThread.cpp	/^void TeQtAnimaThread::showFrame(int i)$/;"	f	class:TeQtAnimaThread
showGridInformation	drivers/qt/TeQtGrid.h	/^	bool showGridInformation() { return showGridInformation_;}$/;"	f	class:TeQtGrid
showGridInformation	drivers/qt/TeQtGrid.h	/^	void showGridInformation(bool b) { showGridInformation_ = b;}$/;"	f	class:TeQtGrid
showGridInformation_	drivers/qt/TeQtGrid.h	/^	bool					showGridInformation_;$/;"	m	class:TeQtGrid
showHeader	drivers/SQLite/sqlite3/shell.c	/^  int showHeader;        \/* True to show column names in List or Column mode *\/$/;"	m	struct:callback_data	file:
showHeader	drivers/SQLite/sqlite3/shell.c	/^  int showHeader;$/;"	m	struct:previous_mode_data	file:
showProgress_	kernel/TeRasterRemap.h	/^	bool showProgress_;$/;"	m	class:TeRasterRemap
showSequence	kernel/showseq.h	/^void showSequence(const Container& s, const char* sep = " ",$/;"	f	namespace:br_stl
show_	drivers/qwt/TeQwtPlotPicker.h	/^	bool show_;$/;"	m	class:TeQwtPlotPicker
show_err	kernel/TeGraph.cpp	/^void show_err (char const* \/* mess *\/)$/;"	f
shpFileName_	drivers/shapelib/TeDriverSHPDBF.h	/^	std::string shpFileName_;$/;"	m	class:TeShapefileDriver
sidImageFile_	drivers/MrSID/TeMrSID.h	/^	LizardTech::MrSIDImageReader*	sidImageFile_;$/;"	m	class:TeMrSIDReader
sidNav_	drivers/MrSID/TeMrSID.h	/^	LizardTech::LTINavigator*		sidNav_;$/;"	m	class:TeMrSIDReader
signalData_	drivers/spl/PluginsSignal.h	/^		PluginsParametersContainer<PluginsSignalDatatype> signalData_;	\/\/!< Signal data.$/;"	m	class:PluginsSignal
signalPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          TeThreadSignal* signalPtr_;      $/;"	m	class:TePDIParallelSegmenter::GroupDataThreadEntryParams
signalPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          TeThreadSignal* signalPtr_;$/;"	m	class:TePDIParallelSegmenter::SegmenterThreadEntryParams
signalType_	drivers/spl/PluginsSignal.h	/^		PluginsSignalType signalType_;							\/\/!< Signal type.$/;"	m	class:PluginsSignal
signal_emitter_	drivers/spl/PluginParameters.h	/^      TeCommunicator<PluginsSignal>* signal_emitter_;$/;"	m	class:PluginParameters
signed	drivers/GL/gl.h	117;"	d
simpleClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int simpleClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
simpleCreate	drivers/SQLite/sqlite3/sqlite3.c	/^static int simpleCreate($/;"	f	file:
simpleDelim	drivers/SQLite/sqlite3/sqlite3.c	/^static int simpleDelim(simple_tokenizer *t, unsigned char c){$/;"	f	file:
simpleDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^static int simpleDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
simpleNext	drivers/SQLite/sqlite3/sqlite3.c	/^static int simpleNext($/;"	f	file:
simpleOpen	drivers/SQLite/sqlite3/sqlite3.c	/^static int simpleOpen($/;"	f	file:
simpleTokenizerModule	drivers/SQLite/sqlite3/sqlite3.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule = {$/;"	v	file:
simple_tokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct simple_tokenizer {$/;"	s	file:
simple_tokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^} simple_tokenizer;$/;"	t	typeref:struct:simple_tokenizer	file:
simple_tokenizer_cursor	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct simple_tokenizer_cursor {$/;"	s	file:
simple_tokenizer_cursor	drivers/SQLite/sqlite3/sqlite3.c	/^} simple_tokenizer_cursor;$/;"	t	typeref:struct:simple_tokenizer_cursor	file:
simplex	image_processing/TePDISimplex.cpp	/^double simplex(double (*func)(double[]), double start[],int n, double EPSILON, double scale, int MAX_IT) {$/;"	f
size	drivers/GL/dri_interface.h	/^    int size;               \/**< Framebuffer size, in bytes. *\/$/;"	m	struct:__DRIframebufferRec
size	drivers/GL/glcore.h	/^    GLuint size;$/;"	m	struct:__GLdrawableBufferRec
size	drivers/GL/internal/dri_interface.h	/^    int size;               \/**< Framebuffer size, in bytes. *\/$/;"	m	struct:__DRIframebufferRec
size	drivers/GL/internal/glcore.h	/^    GLuint size;$/;"	m	struct:__GLdrawableBufferRec
size	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::size()$/;"	f	class:TeQtMultiTextEdit
size	image_processing/TePDIHistogram.cpp	/^unsigned int TePDIHistogram::size() const$/;"	f	class:TePDIHistogram
size	image_processing/TePDIJointHistogram.cpp	/^unsigned int TePDIJointHistogram::size() const$/;"	f	class:TePDIJointHistogram
size	kernel/TeComposite.h	/^	size_t size() const$/;"	f	class:TeComposite
size	kernel/TeCoverageImport.h	/^    unsigned long size;$/;"	m	struct:SerializedPair
size	kernel/TeGeoDataSet.cpp	/^unsigned int TeGeoDataSet::size() const$/;"	f	class:TeGeoDataSet
size	kernel/TeGeometry.h	/^	unsigned int size() const { return 1; }$/;"	f	class:TeGeomSingle
size	kernel/TeGeometry.h	/^	unsigned int size() const$/;"	f	class:TeGeomComposite
size	kernel/TeGeometry.h	/^	virtual unsigned int size() const$/;"	f	class:TeGeometry
size	kernel/TeGridIndex.h	/^		unsigned int size() const$/;"	f	class:TeSAM::TeGridIndex
size	kernel/TeKdTree.h	/^		const unsigned int& size(void) const$/;"	f	class:TeSAM::TeBasicKdTree
size	kernel/TeMappedMemory.cpp	/^unsigned long int TeMappedMemory::size() const$/;"	f	class:TeMappedMemory
size	kernel/TeNeighbours.h	/^	int size() const  { return _neigh.size();}$/;"	f	class:TeNeighbours
size	kernel/TeRTree.h	/^		const unsigned int& size(void) const$/;"	f	class:TeSAM::TeRTree
size	kernel/TeSparseMatrix.h	/^   size_type size()       const { return C.size();}$/;"	f	class:TeSparseMatrix
size	kernel/TeTable.cpp	/^TeTable::size () const$/;"	f	class:TeTable
size	kernel/TeView.h	/^	virtual unsigned int size()$/;"	f	class:TeView
size	kernel/TeViewNode.h	/^	unsigned int size()$/;"	f	class:TeViewTree
size	kernel/TeVisual.h	/^	virtual int	size ()  $/;"	f	class:TeVisual
size	kernel/TeVisual.h	/^	virtual void size (int s)  $/;"	f	class:TeVisual
size	kernel/dynpq.h	/^		size_type size() const { return csize;}$/;"	f	class:br_stl::dynamic_priority_queue
size	kernel/graph.h	/^		size_t size() const  { return C.size();}$/;"	f	class:br_stl::Graph
size4x	drivers/SQLite/sqlite3/sqlite3.c	/^      u32 size4x;     \/* 4x the size of current chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon51::__anon52	file:
sizeTriangles	kernel/TeTin.h	/^	int sizeTriangles() $/;"	f	class:TeTin
sizeValue_	kernel/TeVisual.h	/^	int			sizeValue_;	$/;"	m	class:TeBaseVisualParams
sizeVertex	kernel/TeTin.h	/^	int sizeVertex()$/;"	f	class:TeTin
size_	drivers/GTM/TeGTM.h	/^	long size_;$/;"	m	class:TeGTMUserIcons
size_	kernel/TeDecoderASCIIGrid.h	/^	long size_;$/;"	m	class:TeDecoderASCIIGrid
size_	kernel/TeDecoderJPEG.h	/^	long size_;$/;"	m	class:TeDecoderJPEG
size_	kernel/TeDecoderMemory.h	/^	unsigned int size_;$/;"	m	class:TeDecoderMemory
size_	kernel/TeDecoderVirtualMemory.h	/^	unsigned long size_;	\/\/<! Page number of elements$/;"	m	class:TeMemoryPage
size_	kernel/TeGeoDataSet.h	/^	unsigned int size_; \/\/!< The number of geographical objects on the dataSet$/;"	m	class:TeGeoDataSet
size_	kernel/TeGridIndex.h	/^		unsigned int size_;	\/\/!< Number of elements in the grid (if one element intersects more than one grid cell, they will count many times).$/;"	m	class:TeSAM::TeGridIndex
size_	kernel/TeKdTree.h	/^		unsigned int size_;		$/;"	m	class:TeSAM::TeBasicKdTree
size_	kernel/TeRTree.h	/^		mutable unsigned int size_;			\/\/!< The size of R-Tree (number of nodes)		$/;"	m	class:TeSAM::TeRTree
size_	kernel/TeRasterMemManager.h	/^          unsigned int size_;$/;"	m	class:TeRasterMemManager::DiskTileData
size_type	kernel/TeSparseMatrix.h	/^    typedef IndexType size_type;$/;"	t	class:TeSparseMatrix
size_type	kernel/checkvec.h	/^		typedef typename checkedVector::size_type size_type;$/;"	t	class:br_stl::checkedVector
size_type	kernel/dynpq.h	/^		typedef typename std::vector<key_type>::size_type size_type;$/;"	t	class:br_stl::dynamic_priority_queue
sizecol_	image_processing/TePDIRegGrowSeg.hpp	/^      int sizecol_;    $/;"	m	class:TePDIRegGrowSeg
sizelin_	image_processing/TePDIRegGrowSeg.hpp	/^      int             sizelin_;$/;"	m	class:TePDIRegGrowSeg
sjfd	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_file *sjfd;         \/* File descriptor for sub-journal *\/$/;"	m	struct:Pager	file:
skipChildren	kernel/TeViewTreeIterator.cpp	/^void TeViewTreeIterator::skipChildren()$/;"	f	class:TeViewTreeIterator
skipChildren	kernel/TeViewTreeIterator.cpp	/^void TeViewTreeRevIterator::skipChildren()$/;"	f	class:TeViewTreeRevIterator
skipNext	drivers/SQLite/sqlite3/sqlite3.c	/^  int skipNext;    \/* Prev() is noop if negative. Next() is noop if positive *\/$/;"	m	struct:BtCursor	file:
skip_input_data	drivers/libjpeg/jmemsrc.c	/^skip_input_data (j_decompress_ptr cinfo, long num_bytes)$/;"	f
sleep	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines	file:
sleep	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines
sleep	drivers/qt/TeQtAnimaThread.cpp	/^void TeQtAnimaThread::sleep(int t)$/;"	f	class:TeQtAnimaThread
slice	kernel/TeBaseSTInstance.h	/^	virtual int slice()$/;"	f	class:TeBaseSTInstance
slice	kernel/TeBaseSTInstance.h	/^	virtual void slice (int s) $/;"	f	class:TeBaseSTInstance
slice	kernel/TeLegendEntry.h	/^	TeSlice& slice()$/;"	f	class:TeLegendEntry
sliceToInstances_	kernel/TeBaseSTInstanceSet.h	/^	map<int, vector<int> >			sliceToInstances_;$/;"	m	class:TeBaseSTInstanceSet
sliceVector	kernel/TeGraph.h	/^	TeLegendEntryVector* sliceVector;\/* vector of TeLegendEntry *\/$/;"	m	class:TeGraphPlot
slice_	kernel/TeBaseSTInstance.h	/^	int						slice_;		$/;"	m	class:TeBaseSTInstance
slice_	kernel/TeLegendEntry.h	/^	TeSlice				slice_;$/;"	m	class:TeLegendEntry
slicingParams	kernel/TeProxMatrixSlicingStrategy.h	/^	TeProxMatrixSlicingParams& slicingParams() { return params_; }$/;"	f	class:TeProxMatrixSlicingStrategy
slopeTriangle	kernel/TeTin.cpp	/^TeTin::slopeTriangle(TeTinTriangle& t,double &slope, char slopetype)$/;"	f	class:TeTin
slopeaspectPoint	kernel/TeTin.cpp	/^TeTin::slopeaspectPoint(TeCoord2D &pt,double &s,double &a)$/;"	f	class:TeTin
smallMatrix_	image_processing/TePDICorrelationMatching.hpp	/^          ImgMatrixT& smallMatrix_;          $/;"	m	class:TePDICorrelationMatching::CorrThread
snow	kernel/TeGraph.cpp	/^	char snow[4];$/;"	m	struct:Opt	file:
snprintf	drivers/SQLite/sqlite3/sqlite3.c	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
snprintf	drivers/SQLite/sqlite3/sqlite3ext.h	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines
softHeapLimitEnforcer	drivers/SQLite/sqlite3/sqlite3.c	/^static void softHeapLimitEnforcer($/;"	f	file:
soft_heap_limit	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines	file:
soft_heap_limit	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines
soft_heap_limit64	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
soft_heap_limit64	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
solveEllipse	kernel/TePolygonSetProperties.cpp	/^vector<double> solveEllipse( vector<double> A )$/;"	f
sort	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::sort(vector<int> cols, string order)$/;"	f	class:TeQtGrid
sort	kernel/TeView.h	/^	virtual void sort() $/;"	f	class:TeView
sort	kernel/TeViewNode.cpp	/^TeViewTree::sort()$/;"	f	class:TeViewTree
sort	kernel/TeViewNode.h	/^	virtual void sort() {}$/;"	f	class:TeViewNode
sortAscOrderSlot	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::sortAscOrderSlot()    $/;"	f	class:TeQtGrid
sortByDistance	drivers/qt/TeQtColorBar.cpp	/^void TeQtColorBar::sortByDistance()$/;"	f	class:TeQtColorBar
sortColumns	drivers/qt/TeQtGridSource.cpp	/^void TeQtGridSource::sortColumns(const vector<int>& gridColsVec, const string& order)$/;"	f	class:TeQtGridSource
sortDescOrderSlot	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::sortDescOrderSlot()    $/;"	f	class:TeQtGrid
sortDist	kernel/TeFragmentation.cpp	/^	sortDist(const TeCoord2D& c)$/;"	f	struct:sortDist
sortDist	kernel/TeFragmentation.cpp	/^struct sortDist$/;"	s	file:
sortOrder	drivers/SQLite/sqlite3/sqlite3.c	/^    u8 sortOrder;          \/* 1 for DESC or 0 for ASC *\/$/;"	m	struct:ExprList::ExprList_item	file:
sortingIdx	drivers/SQLite/sqlite3/sqlite3.c	/^  int sortingIdx;         \/* Cursor number of the sorting index *\/$/;"	m	struct:AggInfo	file:
sortingIdxPTab	drivers/SQLite/sqlite3/sqlite3.c	/^  int sortingIdxPTab;     \/* Cursor number of pseudo-table *\/$/;"	m	struct:AggInfo	file:
sound	kernel/TeGraph.cpp	/^	char sound[4];$/;"	m	struct:Opt	file:
soundexFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void soundexFunc($/;"	f	file:
sourceDB_	kernel/TeExternalTheme.h	/^        TeDatabase* sourceDB_;$/;"	m	class:TeExternalTheme
sourceid	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *(*sourceid)(void);$/;"	m	struct:sqlite3_api_routines	file:
sourceid	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const char *(*sourceid)(void);$/;"	m	struct:sqlite3_api_routines
sourceidFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void sourceidFunc($/;"	f	file:
sp	image_processing/TePDIBaatz.hpp	/^  float sp; \/* scale parameter *\/$/;"	m	struct:segmentation_parameters
spanBinaryExpr	drivers/SQLite/sqlite3/sqlite3.c	/^  static void spanBinaryExpr($/;"	f	file:
spanExpr	drivers/SQLite/sqlite3/sqlite3.c	/^  static void spanExpr(ExprSpan *pOut, Parse *pParse, int op, Token *pValue){$/;"	f	file:
spanSet	drivers/SQLite/sqlite3/sqlite3.c	/^  static void spanSet(ExprSpan *pOut, Token *pStart, Token *pEnd){$/;"	f	file:
spanUnaryPostfix	drivers/SQLite/sqlite3/sqlite3.c	/^  static void spanUnaryPostfix($/;"	f	file:
spanUnaryPrefix	drivers/SQLite/sqlite3/sqlite3.c	/^  static void spanUnaryPrefix($/;"	f	file:
sparseMatrix	kernel/TeSparseMatrix.h	/^    sparseMatrix(size_type r, size_type c)$/;"	f	class:TeSparseMatrix
spatOper_	kernel/TeTemporalSeries.h	/^  	TeStatisticType		spatOper_; 		\/\/! operator to spatial grouping - to group instances to each object $/;"	m	class:TeTSParams
spatialRelation	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::spatialRelation(const string& actGeomTable, TeGeomRep \/* actRep *\/, TeGeometry* geom, TeDatabasePortal *portal, int relate, const string& actCollTable) $/;"	f	class:TeOracleSpatial
spatialRelation	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::spatialRelation(const string& actGeomTable, TeGeomRep \/* actRep *\/, TeKeys& actIdsIn, TeDatabasePortal *portal, int relate, const string& actCollTable)$/;"	f	class:TeOracleSpatial
spatialRelation	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::spatialRelation(const string& actGeomTable, TeGeomRep \/* actRep *\/, TeKeys& actIdsIn, TeKeys& actIdsOut, int relate, const string& actCollTable)$/;"	f	class:TeOracleSpatial
spatialRelation	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::spatialRelation(const string& actGeomTable, TeGeomRep \/* actRep *\/, TeKeys& actIdsIn, const string& visGeomTable, TeGeomRep \/* visRep *\/, TeDatabasePortal *portal, int relate, const string& visCollTable)$/;"	f	class:TeOracleSpatial
spatialRelation	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::spatialRelation(const string& actGeomTable, TeGeomRep \/* actRep *\/, TeKeys& actIdsIn, const string& visGeomTable, TeGeomRep \/* visRep *\/, TeKeys& visIdsOut, int relate, const string& visCollTable)$/;"	f	class:TeOracleSpatial
spatialRelation	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::spatialRelation(const string& actGeomTable, TeGeomRep actRep, TeGeometry* geom, TeKeys& actIdsOut, int relate, const string& actCollTable)$/;"	f	class:TeOracleSpatial
spatialRelation	kernel/TeAbstractTheme.h	/^	virtual TeSpatialRelation	spatialRelation() { return spatialRelation_;}$/;"	f	class:TeAbstractTheme
spatialRelation	kernel/TeAbstractTheme.h	/^	virtual void spatialRelation(TeSpatialRelation s) {spatialRelation_=s;}$/;"	f	class:TeAbstractTheme
spatialRelation	kernel/TeDatabase.cpp	/^TeDatabase::spatialRelation(const string& actGeomTable, TeGeomRep actRep, TeGeometry* geom, TeDatabasePortal *portal, int relate, const string& actCollTable)$/;"	f	class:TeDatabase
spatialRelation	kernel/TeDatabase.cpp	/^TeDatabase::spatialRelation(const string& actGeomTable, TeGeomRep actRep, TeGeometry* geom, TeKeys& actIdsOut, int relate, const string& actCollTable)$/;"	f	class:TeDatabase
spatialRelation	kernel/TeDatabase.cpp	/^TeDatabase::spatialRelation(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIdsIn, TeDatabasePortal *portal, int relate, const string& actCollTable)$/;"	f	class:TeDatabase
spatialRelation	kernel/TeDatabase.cpp	/^TeDatabase::spatialRelation(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIdsIn, TeKeys& actIdsOut, int relate, const string& actCollTable)$/;"	f	class:TeDatabase
spatialRelation	kernel/TeDatabase.cpp	/^TeDatabase::spatialRelation(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIdsIn, const string& visGeomTable, TeGeomRep visRep, TeDatabasePortal *portal, int relate, const string& visCollTable)$/;"	f	class:TeDatabase
spatialRelation	kernel/TeDatabase.cpp	/^TeDatabase::spatialRelation(const string& actGeomTable, TeGeomRep actRep, TeKeys& actIdsIn, const string& visGeomTable, TeGeomRep visRep, TeKeys& visIdsOut, int relate, const string& visCollTable, TeDatabase* dbVis)$/;"	f	class:TeDatabase
spatialRelation	kernel/TeQuerierParams.h	/^	virtual int spatialRelation() { return spatialRelation_; }$/;"	f	class:TeQuerierParams
spatialRelation_	kernel/TeAbstractTheme.h	/^	TeSpatialRelation	spatialRelation_;$/;"	m	class:TeAbstractTheme
spatialRelation_	kernel/TeQuerierParams.h	/^	int						spatialRelation_;	\/\/!< spatial relation used by spatial restriction$/;"	m	class:TeQuerierParams
spatialRest	kernel/TeAbstractTheme.h	/^	virtual string spatialRest() { return generateSpatialRest_; }$/;"	f	class:TeAbstractTheme
spatialRest	kernel/TeAbstractTheme.h	/^	virtual void spatialRest(const string& s) { generateSpatialRest_ = s; };$/;"	f	class:TeAbstractTheme
spatial_correlation_coefficient_index	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::spatial_correlation_coefficient_index(TePDITypes::TePDIRasterPtrType fused_raster, int fused_band, TePDITypes::TePDIRasterPtrType pan_raster, int pan_band, TeSharedPtr<double> scc)$/;"	f	class:TePDIFusionIndexes
split	image_processing/TePDIKMeansClas.cpp	/^bool TePDIKMeansClas::split()$/;"	f	class:TePDIKMeansClas
splitAddress	functions/TeAddressLocator.cpp	/^void TeAddressLocator::splitAddress(TeAddress& add)$/;"	f	class:TeAddressLocator
splitChar_	functions/TeAddressLocator.h	/^		string splitChar_;							\/\/!< Used to split address name and number$/;"	m	class:TeAddressLocator
splitLeft	image_processing/TePDICluster.cpp	/^TePDICluster TePDICluster::splitLeft()const$/;"	f	class:TePDICluster
splitNode	kernel/TeRTree.h	/^void TeRTree<DATATYPE, MAXNODES, MINNODES>::splitNode(TeRTreeNodeType* node, TeRTreeBranch* branch, TeRTreeNodeType** newNode) const$/;"	f	class:TeSAM::TeRTree
splitNodeGuttman	drivers/SQLite/sqlite3/sqlite3.c	/^static int splitNodeGuttman($/;"	f	file:
splitNodeStartree	drivers/SQLite/sqlite3/sqlite3.c	/^static int splitNodeStartree($/;"	f	file:
splitRight	image_processing/TePDICluster.cpp	/^TePDICluster TePDICluster::splitRight()const$/;"	f	class:TePDICluster
splitSerialized	kernel/TeCoverageImport.h	/^splitSerialized(std::vector<SerializedPair<T>* >& src,$/;"	f
sprintf	drivers/GL/glcore.h	/^    int (CAPI *sprintf)(__GLcontext *gc, char *str, const char *fmt, ...);$/;"	m	struct:__GLimportsRec
sprintf	drivers/GL/internal/glcore.h	/^    int (CAPI *sprintf)(__GLcontext *gc, char *str, const char *fmt, ...);$/;"	m	struct:__GLimportsRec
sql	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
sql	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
sqlAttList	kernel/TeExternalTheme.cpp	/^TeAttributeList TeExternalTheme::sqlAttList()$/;"	f	class:TeExternalTheme
sqlAttList	kernel/TeTheme.h	/^	virtual TeAttributeList sqlAttList() { return sqlAttList_;}$/;"	f	class:TeTheme
sqlAttList_	kernel/TeTheme.h	/^	TeAttributeList	sqlAttList_;$/;"	m	class:TeTheme
sqlFrom	kernel/TeExternalTheme.cpp	/^string TeExternalTheme::sqlFrom()$/;"	f	class:TeExternalTheme
sqlFrom	kernel/TeQuerierDB.cpp	/^TeQuerierDB::sqlFrom(string geomTable)$/;"	f	class:TeQuerierDB
sqlFrom	kernel/TeTheme.h	/^	virtual string	sqlFrom() { return sqlFrom_;}$/;"	f	class:TeTheme
sqlFrom_	kernel/TeTheme.h	/^	string	sqlFrom_;		$/;"	m	class:TeTheme
sqlGridFrom	kernel/TeExternalTheme.cpp	/^string TeExternalTheme::sqlGridFrom(const string& geomTable)$/;"	f	class:TeExternalTheme
sqlGridFrom	kernel/TeTheme.cpp	/^TeTheme::sqlGridFrom(const string& geomTable)$/;"	f	class:TeTheme
sqlGridFrom_	kernel/TeTheme.h	/^	string	sqlGridFrom_;$/;"	m	class:TeTheme
sqlGridJoin	kernel/TeExternalTheme.cpp	/^string TeExternalTheme::sqlGridJoin()$/;"	f	class:TeExternalTheme
sqlGridJoin	kernel/TeTheme.h	/^	virtual string sqlGridJoin() { return sqlGridJoin_; }$/;"	f	class:TeTheme
sqlGridJoin_	kernel/TeTheme.h	/^	string	sqlGridJoin_;$/;"	m	class:TeTheme
sqlJoin	kernel/TeExternalTheme.cpp	/^string TeExternalTheme::sqlJoin()$/;"	f	class:TeExternalTheme
sqlJoin	kernel/TeTheme.h	/^	virtual string	sqlJoin() { return sqlJoin_;}$/;"	f	class:TeTheme
sqlJoin_	drivers/qt/TeQtGrid.h	/^	string					sqlJoin_;$/;"	m	class:TeQtGrid
sqlJoin_	kernel/TeTheme.h	/^	string	sqlJoin_;$/;"	m	class:TeTheme
sqlNumAttList	kernel/TeExternalTheme.cpp	/^TeAttributeList TeExternalTheme::sqlNumAttList()$/;"	f	class:TeExternalTheme
sqlNumAttList	kernel/TeTheme.h	/^	virtual TeAttributeList sqlNumAttList() { return sqlNumAttList_;}$/;"	f	class:TeTheme
sqlNumAttList_	kernel/TeTheme.h	/^	TeAttributeList	sqlNumAttList_;		$/;"	m	class:TeTheme
sqlOut	kernel/yyTemporal.cpp	/^char sqlOut[1000];$/;"	v
sqlOutLex	kernel/lexTemporal.cpp	/^char sqlOutLex[1000];$/;"	v
sqlWhere	kernel/TeTheme.h	/^	virtual string&	sqlWhere() { return sqlWhere_;}$/;"	f	class:TeTheme
sqlWhereRestrictions	kernel/TeExternalTheme.cpp	/^string TeExternalTheme::sqlWhereRestrictions(TeRepresentation* \/* rep *\/)$/;"	f	class:TeExternalTheme
sqlWhereRestrictions	kernel/TeQuerierDB.cpp	/^TeQuerierDB::sqlWhereRestrictions(TeRepresentation* rep)$/;"	f	class:TeQuerierDB
sqlWhereRestrictions	kernel/TeTheme.cpp	/^TeTheme::sqlWhereRestrictions(TeRepresentation* rep)$/;"	f	class:TeTheme
sqlWhere_	kernel/TeTheme.h	/^	string sqlWhere_;$/;"	m	class:TeTheme
sql_	drivers/qt/TeQtGrid.h	/^	string					sql_;$/;"	m	class:TeQtGrid
sqld	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SHORT       sqld;                           $/;"	m	struct:__anon64
sqldabc	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_LONG        sqldabc;                        $/;"	m	struct:__anon64
sqldaid	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SCHAR       sqldaid[8];                     $/;"	m	struct:__anon64
sqldata	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SCHAR*      sqldata;                        $/;"	m	struct:__anon63
sqlind	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SHORT*      sqlind;                         $/;"	m	struct:__anon63
sqlite3	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3 {$/;"	s	file:
sqlite3	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3	file:
sqlite3	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3
sqlite3AbsInt32	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AbsInt32(int x){$/;"	f
sqlite3AddCheckConstraint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddCheckConstraint($/;"	f
sqlite3AddCollateType	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddCollateType(Parse *pParse, Token *pToken){$/;"	f
sqlite3AddColumn	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddColumn(Parse *pParse, Token *pName){$/;"	f
sqlite3AddColumnType	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddColumnType(Parse *pParse, Token *pType){$/;"	f
sqlite3AddDefaultValue	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddDefaultValue(Parse *pParse, ExprSpan *pSpan){$/;"	f
sqlite3AddInt64	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AddInt64(i64 *pA, i64 iB){$/;"	f
sqlite3AddNotNull	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddNotNull(Parse *pParse, int onError){$/;"	f
sqlite3AddPrimaryKey	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddPrimaryKey($/;"	f
sqlite3AffinityType	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char sqlite3AffinityType(const char *zIn){$/;"	f
sqlite3AlterBeginAddColumn	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterBeginAddColumn(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3AlterFinishAddColumn	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterFinishAddColumn(Parse *pParse, Token *pColDef){$/;"	f
sqlite3AlterFunctions	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterFunctions(void){$/;"	f
sqlite3AlterRenameTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterRenameTable($/;"	f
sqlite3AnalysisLoad	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AnalysisLoad(sqlite3 *db, int iDb){$/;"	f
sqlite3Analyze	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Analyze(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3ApiExit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ApiExit(sqlite3* db, int rc){$/;"	f
sqlite3Apis	drivers/SQLite/sqlite3/sqlite3.c	/^static const sqlite3_api_routines sqlite3Apis = { 0 };$/;"	v	file:
sqlite3Apis	drivers/SQLite/sqlite3/sqlite3.c	/^static const sqlite3_api_routines sqlite3Apis = {$/;"	v	file:
sqlite3ArrayAllocate	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ArrayAllocate($/;"	f
sqlite3AtoF	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AtoF(const char *z, double *pResult, int length, u8 enc){$/;"	f
sqlite3Atoi	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Atoi(const char *z){$/;"	f
sqlite3Atoi64	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Atoi64(const char *zNum, i64 *pNum, int length, u8 enc){$/;"	f
sqlite3Attach	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Attach(Parse *pParse, Expr *p, Expr *pDbname, Expr *pKey){$/;"	f
sqlite3AuthCheck	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AuthCheck($/;"	f
sqlite3AuthCheck	drivers/SQLite/sqlite3/sqlite3.c	11575;"	d	file:
sqlite3AuthContextPop	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthContextPop(AuthContext *pContext){$/;"	f
sqlite3AuthContextPop	drivers/SQLite/sqlite3/sqlite3.c	11577;"	d	file:
sqlite3AuthContextPush	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthContextPush($/;"	f
sqlite3AuthContextPush	drivers/SQLite/sqlite3/sqlite3.c	11576;"	d	file:
sqlite3AuthRead	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthRead($/;"	f
sqlite3AuthRead	drivers/SQLite/sqlite3/sqlite3.c	11574;"	d	file:
sqlite3AuthReadCol	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AuthReadCol($/;"	f
sqlite3AutoExtList	drivers/SQLite/sqlite3/sqlite3.c	/^static SQLITE_WSD struct sqlite3AutoExtList {$/;"	s	file:
sqlite3AutoExtList	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3AutoExtList sqlite3AutoExtList;$/;"	t	typeref:struct:sqlite3AutoExtList	file:
sqlite3AutoLoadExtensions	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoLoadExtensions(sqlite3 *db){$/;"	f
sqlite3Autoext	drivers/SQLite/sqlite3/sqlite3.c	/^} sqlite3Autoext = { 0, 0 };$/;"	v	typeref:struct:sqlite3AutoExtList	file:
sqlite3AutoincrementBegin	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoincrementBegin(Parse *pParse){$/;"	f
sqlite3AutoincrementBegin	drivers/SQLite/sqlite3/sqlite3.c	11417;"	d	file:
sqlite3AutoincrementEnd	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoincrementEnd(Parse *pParse){$/;"	f
sqlite3AutoincrementEnd	drivers/SQLite/sqlite3/sqlite3.c	11418;"	d	file:
sqlite3BackupRestart	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BackupRestart(sqlite3_backup *pBackup){$/;"	f
sqlite3BackupUpdate	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BackupUpdate(sqlite3_backup *pBackup, Pgno iPage, const u8 *aData){$/;"	f
sqlite3BeginBenignMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginBenignMalloc(void){$/;"	f
sqlite3BeginBenignMalloc	drivers/SQLite/sqlite3/sqlite3.c	11847;"	d	file:
sqlite3BeginParse	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginParse(Parse *pParse, int explainFlag){$/;"	f
sqlite3BeginTransaction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginTransaction(Parse *pParse, int type){$/;"	f
sqlite3BeginTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginTrigger($/;"	f
sqlite3BeginWriteOperation	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginWriteOperation(Parse *pParse, int setStatement, int iDb){$/;"	f
sqlite3BenignMallocHooks	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BenignMallocHooks($/;"	f
sqlite3BinaryCompareCollSeq	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3BinaryCompareCollSeq($/;"	f
sqlite3BitvecBuiltinTest	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecBuiltinTest(int sz, int *aOp){$/;"	f
sqlite3BitvecClear	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BitvecClear(Bitvec *p, u32 i, void *pBuf){$/;"	f
sqlite3BitvecCreate	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Bitvec *sqlite3BitvecCreate(u32 iSize){$/;"	f
sqlite3BitvecDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BitvecDestroy(Bitvec *p){$/;"	f
sqlite3BitvecSet	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecSet(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3BitvecSize(Bitvec *p){$/;"	f
sqlite3BitvecTest	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecTest(Bitvec *p, u32 i){$/;"	f
sqlite3BlockedList	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3 *SQLITE_WSD sqlite3BlockedList = 0;$/;"	v	file:
sqlite3BtreeBeginStmt	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeBeginStmt(Btree *p, int iStatement){$/;"	f
sqlite3BtreeBeginTrans	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeBeginTrans(Btree *p, int wrflag){$/;"	f
sqlite3BtreeCacheOverflow	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCacheOverflow(BtCursor *pCur){$/;"	f
sqlite3BtreeCheckpoint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCheckpoint(Btree *p, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3BtreeClearCursor	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeClearCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeClearTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClearTable(Btree *p, int iTable, int *pnChange){$/;"	f
sqlite3BtreeClose	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClose(Btree *p){$/;"	f
sqlite3BtreeCloseCursor	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCloseCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeCommit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommit(Btree *p){$/;"	f
sqlite3BtreeCommitPhaseOne	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommitPhaseOne(Btree *p, const char *zMaster){$/;"	f
sqlite3BtreeCommitPhaseTwo	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommitPhaseTwo(Btree *p, int bCleanup){$/;"	f
sqlite3BtreeCopyFile	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCopyFile(Btree *pTo, Btree *pFrom){$/;"	f
sqlite3BtreeCount	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCount(BtCursor *pCur, i64 *pnEntry){$/;"	f
sqlite3BtreeCreateTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCreateTable(Btree *p, int *piTable, int flags){$/;"	f
sqlite3BtreeCursor	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursor($/;"	f
sqlite3BtreeCursorHasMoved	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorHasMoved(BtCursor *pCur, int *pHasMoved){$/;"	f
sqlite3BtreeCursorIsValid	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorIsValid(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorSize(void){$/;"	f
sqlite3BtreeCursorZero	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCursorZero(BtCursor *p){$/;"	f
sqlite3BtreeData	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeData(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreeDataFetch	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3BtreeDataFetch(BtCursor *pCur, int *pAmt){$/;"	f
sqlite3BtreeDataSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDataSize(BtCursor *pCur, u32 *pSize){$/;"	f
sqlite3BtreeDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDelete(BtCursor *pCur){$/;"	f
sqlite3BtreeDropTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDropTable(Btree *p, int iTable, int *piMoved){$/;"	f
sqlite3BtreeEnter	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnter(Btree *p){$/;"	f
sqlite3BtreeEnter	drivers/SQLite/sqlite3/sqlite3.c	8168;"	d	file:
sqlite3BtreeEnterAll	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnterAll(sqlite3 *db){$/;"	f
sqlite3BtreeEnterAll	drivers/SQLite/sqlite3/sqlite3.c	8169;"	d	file:
sqlite3BtreeEnterCursor	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnterCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeEnterCursor	drivers/SQLite/sqlite3/sqlite3.c	8188;"	d	file:
sqlite3BtreeEof	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeEof(BtCursor *pCur){$/;"	f
sqlite3BtreeFirst	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeFirst(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeGetAutoVacuum	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetAutoVacuum(Btree *p){$/;"	f
sqlite3BtreeGetCachedRowid	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_int64 sqlite3BtreeGetCachedRowid(BtCursor *pCur){$/;"	f
sqlite3BtreeGetFilename	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3BtreeGetFilename(Btree *p){$/;"	f
sqlite3BtreeGetJournalname	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3BtreeGetJournalname(Btree *p){$/;"	f
sqlite3BtreeGetMeta	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeGetMeta(Btree *p, int idx, u32 *pMeta){$/;"	f
sqlite3BtreeGetPageSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetPageSize(Btree *p){$/;"	f
sqlite3BtreeGetReserve	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetReserve(Btree *p){$/;"	f
sqlite3BtreeHoldsAllMutexes	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeHoldsAllMutexes(sqlite3 *db){$/;"	f
sqlite3BtreeHoldsAllMutexes	drivers/SQLite/sqlite3/sqlite3.c	8193;"	d	file:
sqlite3BtreeHoldsMutex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeHoldsMutex(Btree *p){$/;"	f
sqlite3BtreeHoldsMutex	drivers/SQLite/sqlite3/sqlite3.c	8192;"	d	file:
sqlite3BtreeIncrVacuum	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIncrVacuum(Btree *p){$/;"	f
sqlite3BtreeInsert	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeInsert($/;"	f
sqlite3BtreeIntegrityCheck	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3BtreeIntegrityCheck($/;"	f
sqlite3BtreeIsInBackup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInBackup(Btree *p){$/;"	f
sqlite3BtreeIsInReadTrans	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInReadTrans(Btree *p){$/;"	f
sqlite3BtreeIsInTrans	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInTrans(Btree *p){$/;"	f
sqlite3BtreeKey	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeKey(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreeKeyFetch	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3BtreeKeyFetch(BtCursor *pCur, int *pAmt){$/;"	f
sqlite3BtreeKeySize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeKeySize(BtCursor *pCur, i64 *pSize){$/;"	f
sqlite3BtreeLast	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeLast(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeLastPage	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3BtreeLastPage(Btree *p){$/;"	f
sqlite3BtreeLeave	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeave(Btree *p){$/;"	f
sqlite3BtreeLeave	drivers/SQLite/sqlite3/sqlite3.c	8187;"	d	file:
sqlite3BtreeLeaveAll	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeaveAll(sqlite3 *db){$/;"	f
sqlite3BtreeLeaveAll	drivers/SQLite/sqlite3/sqlite3.c	8190;"	d	file:
sqlite3BtreeLeaveCursor	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeaveCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeLeaveCursor	drivers/SQLite/sqlite3/sqlite3.c	8189;"	d	file:
sqlite3BtreeLockTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeLockTable(Btree *p, int iTab, u8 isWriteLock){$/;"	f
sqlite3BtreeMaxPageCount	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeMaxPageCount(Btree *p, int mxPage){$/;"	f
sqlite3BtreeMovetoUnpacked	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeMovetoUnpacked($/;"	f
sqlite3BtreeNext	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeNext(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeOpen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeOpen($/;"	f
sqlite3BtreePager	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Pager *sqlite3BtreePager(Btree *p){$/;"	f
sqlite3BtreePrevious	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreePrevious(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreePutData	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreePutData(BtCursor *pCsr, u32 offset, u32 amt, void *z){$/;"	f
sqlite3BtreeRollback	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeRollback(Btree *p){$/;"	f
sqlite3BtreeSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSavepoint(Btree *p, int op, int iSavepoint){$/;"	f
sqlite3BtreeSchema	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3BtreeSchema(Btree *p, int nBytes, void(*xFree)(void *)){$/;"	f
sqlite3BtreeSchemaLocked	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSchemaLocked(Btree *p){$/;"	f
sqlite3BtreeSecureDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSecureDelete(Btree *p, int newFlag){$/;"	f
sqlite3BtreeSetAutoVacuum	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetAutoVacuum(Btree *p, int autoVacuum){$/;"	f
sqlite3BtreeSetCacheSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetCacheSize(Btree *p, int mxPage){$/;"	f
sqlite3BtreeSetCachedRowid	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeSetCachedRowid(BtCursor *pCur, sqlite3_int64 iRowid){$/;"	f
sqlite3BtreeSetPageSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetPageSize(Btree *p, int pageSize, int nReserve, int iFix){$/;"	f
sqlite3BtreeSetSafetyLevel	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetSafetyLevel($/;"	f
sqlite3BtreeSetVersion	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetVersion(Btree *pBtree, int iVersion){$/;"	f
sqlite3BtreeSharable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSharable(Btree *p){$/;"	f
sqlite3BtreeSharable	drivers/SQLite/sqlite3/sqlite3.c	8186;"	d	file:
sqlite3BtreeSyncDisabled	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSyncDisabled(Btree *p){$/;"	f
sqlite3BtreeTripAllCursors	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeTripAllCursors(Btree *pBtree, int errCode){$/;"	f
sqlite3BtreeUpdateMeta	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeUpdateMeta(Btree *p, int idx, u32 iMeta){$/;"	f
sqlite3CantopenError	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CantopenError(int lineno){$/;"	f
sqlite3ChangeCookie	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ChangeCookie(Parse *pParse, int iDb){$/;"	f
sqlite3CheckCollSeq	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CheckCollSeq(Parse *pParse, CollSeq *pColl){$/;"	f
sqlite3CheckObjectName	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CheckObjectName(Parse *pParse, const char *zName){$/;"	f
sqlite3Checkpoint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Checkpoint(sqlite3 *db, int iDb, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3ClearStatTables	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqlite3ClearStatTables($/;"	f	file:
sqlite3CloseExtensions	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CloseExtensions(sqlite3 *db){$/;"	f
sqlite3CloseExtensions	drivers/SQLite/sqlite3/sqlite3.c	11747;"	d	file:
sqlite3CloseSavepoints	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CloseSavepoints(sqlite3 *db){$/;"	f
sqlite3CodeDropTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeDropTable(Parse *pParse, Table *pTab, int iDb, int isView){$/;"	f
sqlite3CodeRowTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeRowTrigger($/;"	f
sqlite3CodeRowTrigger	drivers/SQLite/sqlite3/sqlite3.c	11557;"	d	file:
sqlite3CodeRowTriggerDirect	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeRowTriggerDirect($/;"	f
sqlite3CodeRowTriggerDirect	drivers/SQLite/sqlite3/sqlite3.c	11558;"	d	file:
sqlite3CodeSubselect	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CodeSubselect($/;"	f
sqlite3CodeVerifyNamedSchema	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeVerifyNamedSchema(Parse *pParse, const char *zDb){$/;"	f
sqlite3CodeVerifySchema	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeVerifySchema(Parse *pParse, int iDb){$/;"	f
sqlite3ColumnDefault	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ColumnDefault(Vdbe *v, Table *pTab, int i, int iReg){$/;"	f
sqlite3CommitInternalChanges	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CommitInternalChanges(sqlite3 *db){$/;"	f
sqlite3CommitTransaction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CommitTransaction(Parse *pParse){$/;"	f
sqlite3CompareAffinity	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char sqlite3CompareAffinity(Expr *pExpr, char aff2){$/;"	f
sqlite3CompleteInsertion	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CompleteInsertion($/;"	f
sqlite3Config	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SQLITE_WSD struct Sqlite3Config sqlite3Config = {$/;"	v	typeref:struct:Sqlite3Config
sqlite3Config	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SQLITE_WSD struct Sqlite3Config sqlite3Config;$/;"	v	typeref:struct:Sqlite3Config
sqlite3ConnectionBlocked	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionBlocked(sqlite3 *db, sqlite3 *pBlocker){$/;"	f
sqlite3ConnectionBlocked	drivers/SQLite/sqlite3/sqlite3.c	11886;"	d	file:
sqlite3ConnectionClosed	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionClosed(sqlite3 *db){$/;"	f
sqlite3ConnectionClosed	drivers/SQLite/sqlite3/sqlite3.c	11888;"	d	file:
sqlite3ConnectionUnlocked	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionUnlocked(sqlite3 *db){$/;"	f
sqlite3ConnectionUnlocked	drivers/SQLite/sqlite3/sqlite3.c	11887;"	d	file:
sqlite3CorruptError	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CorruptError(int lineno){$/;"	f
sqlite3Coverage	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Coverage(int x){$/;"	f
sqlite3CreateColumnExpr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol){$/;"	f
sqlite3CreateForeignKey	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CreateForeignKey($/;"	f
sqlite3CreateFunc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CreateFunc($/;"	f
sqlite3CreateIndex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3CreateIndex($/;"	f
sqlite3CreateView	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CreateView($/;"	f
sqlite3CtypeMap	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3CtypeMap[256] = {$/;"	v
sqlite3CtypeMap	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3CtypeMap[];$/;"	v
sqlite3DbFree	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DbFree(sqlite3 *db, void *p){$/;"	f
sqlite3DbMallocRaw	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocRaw(sqlite3 *db, int n){$/;"	f
sqlite3DbMallocSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbMallocSize(sqlite3 *db, void *p){$/;"	f
sqlite3DbMallocZero	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocZero(sqlite3 *db, int n){$/;"	f
sqlite3DbRealloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbRealloc(sqlite3 *db, void *p, int n){$/;"	f
sqlite3DbReallocOrFree	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbReallocOrFree(sqlite3 *db, void *p, int n){$/;"	f
sqlite3DbStrDup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3DbStrDup(sqlite3 *db, const char *z){$/;"	f
sqlite3DbStrNDup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3DbStrNDup(sqlite3 *db, const char *z, int n){$/;"	f
sqlite3DebugPrintf	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DebugPrintf(const char *zFormat, ...){$/;"	f
sqlite3DefaultMutex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex_methods const *sqlite3DefaultMutex(void){$/;"	f
sqlite3DefaultRowEst	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DefaultRowEst(Index *pIdx){$/;"	f
sqlite3DeferForeignKey	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeferForeignKey(Parse *pParse, int isDeferred){$/;"	f
sqlite3DeleteFrom	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteFrom($/;"	f
sqlite3DeleteIndexSamples	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteIndexSamples(sqlite3 *db, Index *pIdx){$/;"	f
sqlite3DeleteTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTable(sqlite3 *db, Table *pTable){$/;"	f
sqlite3DeleteTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTrigger(sqlite3 *db, Trigger *pTrigger){$/;"	f
sqlite3DeleteTrigger	drivers/SQLite/sqlite3/sqlite3.c	11554;"	d	file:
sqlite3DeleteTriggerStep	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTriggerStep(sqlite3 *db, TriggerStep *pTriggerStep){$/;"	f
sqlite3Dequote	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Dequote(char *z){$/;"	f
sqlite3Detach	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Detach(Parse *pParse, Expr *pDbname){$/;"	f
sqlite3DropIndex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropIndex(Parse *pParse, SrcList *pName, int ifExists){$/;"	f
sqlite3DropTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTable(Parse *pParse, SrcList *pName, int isView, int noErr){$/;"	f
sqlite3DropTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTrigger(Parse *pParse, SrcList *pName, int noErr){$/;"	f
sqlite3DropTriggerPtr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTriggerPtr(Parse *pParse, Trigger *pTrigger){$/;"	f
sqlite3DropTriggerPtr	drivers/SQLite/sqlite3/sqlite3.c	11555;"	d	file:
sqlite3EndBenignMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3EndBenignMalloc(void){$/;"	f
sqlite3EndBenignMalloc	drivers/SQLite/sqlite3/sqlite3.c	11848;"	d	file:
sqlite3EndTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3EndTable($/;"	f
sqlite3ErrStr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3ErrStr(int rc){$/;"	f
sqlite3Error	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Error(sqlite3 *db, int err_code, const char *zFormat, ...){$/;"	f
sqlite3ErrorMsg	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ErrorMsg(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3ExpirePreparedStatements	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExpirePreparedStatements(sqlite3 *db){$/;"	f
sqlite3Expr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3Expr($/;"	f
sqlite3ExprAffinity	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char sqlite3ExprAffinity(Expr *pExpr){$/;"	f
sqlite3ExprAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAlloc($/;"	f
sqlite3ExprAnalyzeAggList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAnalyzeAggList(NameContext *pNC, ExprList *pList){$/;"	f
sqlite3ExprAnalyzeAggregates	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAnalyzeAggregates(NameContext *pNC, Expr *pExpr){$/;"	f
sqlite3ExprAnd	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAnd(sqlite3 *db, Expr *pLeft, Expr *pRight){$/;"	f
sqlite3ExprAssignVarNumber	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAssignVarNumber(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprAttachSubtrees	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAttachSubtrees($/;"	f
sqlite3ExprCacheAffinityChange	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheAffinityChange(Parse *pParse, int iStart, int iCount){$/;"	f
sqlite3ExprCacheClear	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheClear(Parse *pParse){$/;"	f
sqlite3ExprCachePinRegister	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqlite3ExprCachePinRegister(Parse *pParse, int iReg){$/;"	f	file:
sqlite3ExprCachePop	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCachePop(Parse *pParse, int N){$/;"	f
sqlite3ExprCachePush	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCachePush(Parse *pParse){$/;"	f
sqlite3ExprCacheRemove	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheRemove(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ExprCacheStore	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheStore(Parse *pParse, int iTab, int iCol, int iReg){$/;"	f
sqlite3ExprCanBeNull	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCanBeNull(const Expr *p){$/;"	f
sqlite3ExprCheckHeight	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCheckHeight(Parse *pParse, int nHeight){$/;"	f
sqlite3ExprCheckHeight	drivers/SQLite/sqlite3/sqlite3.c	11875;"	d	file:
sqlite3ExprCode	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCode(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeAndCache	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeAndCache(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeConstants	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeConstants(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprCodeCopy	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeCopy(Parse *pParse, int iFrom, int iTo, int nReg){$/;"	f
sqlite3ExprCodeExprList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeExprList($/;"	f
sqlite3ExprCodeGetColumn	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeGetColumn($/;"	f
sqlite3ExprCodeGetColumnOfTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeGetColumnOfTable($/;"	f
sqlite3ExprCodeIN	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqlite3ExprCodeIN($/;"	f	file:
sqlite3ExprCodeIsNullJump	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeIsNullJump($/;"	f
sqlite3ExprCodeMove	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeMove(Parse *pParse, int iFrom, int iTo, int nReg){$/;"	f
sqlite3ExprCodeTarget	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeTarget(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeTemp	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeTemp(Parse *pParse, Expr *pExpr, int *pReg){$/;"	f
sqlite3ExprCollSeq	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3ExprCollSeq(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprCompare	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCompare(Expr *pA, Expr *pB){$/;"	f
sqlite3ExprDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprDelete(sqlite3 *db, Expr *p){$/;"	f
sqlite3ExprDup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprDup(sqlite3 *db, Expr *p, int flags){$/;"	f
sqlite3ExprFunction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprFunction(Parse *pParse, ExprList *pList, Token *pToken){$/;"	f
sqlite3ExprIfFalse	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfFalse(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprIfTrue	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfTrue(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprIsConstant	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstant(Expr *p){$/;"	f
sqlite3ExprIsConstantNotJoin	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstantNotJoin(Expr *p){$/;"	f
sqlite3ExprIsConstantOrFunction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstantOrFunction(Expr *p){$/;"	f
sqlite3ExprIsInteger	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsInteger(Expr *p, int *pValue){$/;"	f
sqlite3ExprListAppend	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE ExprList *sqlite3ExprListAppend($/;"	f
sqlite3ExprListCheckLength	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListCheckLength($/;"	f
sqlite3ExprListCompare	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprListCompare(ExprList *pA, ExprList *pB){$/;"	f
sqlite3ExprListDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListDelete(sqlite3 *db, ExprList *pList){$/;"	f
sqlite3ExprListDup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE ExprList *sqlite3ExprListDup(sqlite3 *db, ExprList *p, int flags){$/;"	f
sqlite3ExprListSetName	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetName($/;"	f
sqlite3ExprListSetSpan	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetSpan($/;"	f
sqlite3ExprNeedsNoAffinityChange	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprNeedsNoAffinityChange(const Expr *p, char aff){$/;"	f
sqlite3ExprSetColl	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprSetColl(Expr *pExpr, CollSeq *pColl){$/;"	f
sqlite3ExprSetCollByToken	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprSetCollByToken(Parse *pParse, Expr *pExpr, Token *pCollName){$/;"	f
sqlite3ExprSetHeight	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprSetHeight(Parse *pParse, Expr *p){$/;"	f
sqlite3ExprSetHeight	drivers/SQLite/sqlite3/sqlite3.c	11873;"	d	file:
sqlite3FileSuffix3	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FileSuffix3(const char *zBaseFilename, char *z){$/;"	f
sqlite3FileSuffix3	drivers/SQLite/sqlite3/sqlite3.c	11657;"	d	file:
sqlite3FindCollSeq	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3FindCollSeq($/;"	f
sqlite3FindDb	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindDb(sqlite3 *db, Token *pName){$/;"	f
sqlite3FindDbName	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindDbName(sqlite3 *db, const char *zName){$/;"	f
sqlite3FindFunction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE FuncDef *sqlite3FindFunction($/;"	f
sqlite3FindInIndex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindInIndex(Parse *pParse, Expr *pX, int *prNotFound){$/;"	f
sqlite3FindIndex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3FindIndex(sqlite3 *db, const char *zName, const char *zDb){$/;"	f
sqlite3FindTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3FindTable(sqlite3 *db, const char *zName, const char *zDatabase){$/;"	f
sqlite3FinishCoding	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FinishCoding(Parse *pParse){$/;"	f
sqlite3FinishTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FinishTrigger($/;"	f
sqlite3FixExpr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixExpr($/;"	f
sqlite3FixExprList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixExprList($/;"	f
sqlite3FixInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixInit($/;"	f
sqlite3FixSelect	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixSelect($/;"	f
sqlite3FixSrcList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixSrcList($/;"	f
sqlite3FixTriggerStep	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixTriggerStep($/;"	f
sqlite3FkActions	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkActions($/;"	f
sqlite3FkActions	drivers/SQLite/sqlite3/sqlite3.c	11819;"	d	file:
sqlite3FkCheck	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkCheck($/;"	f
sqlite3FkCheck	drivers/SQLite/sqlite3/sqlite3.c	11820;"	d	file:
sqlite3FkDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkDelete(sqlite3 *db, Table *pTab){$/;"	f
sqlite3FkDelete	drivers/SQLite/sqlite3/sqlite3.c	11828;"	d	file:
sqlite3FkDropTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkDropTable(Parse *pParse, SrcList *pName, Table *pTab){$/;"	f
sqlite3FkDropTable	drivers/SQLite/sqlite3/sqlite3.c	11821;"	d	file:
sqlite3FkOldmask	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3FkOldmask($/;"	f
sqlite3FkOldmask	drivers/SQLite/sqlite3/sqlite3.c	11822;"	d	file:
sqlite3FkReferences	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE FKey *sqlite3FkReferences(Table *pTab){$/;"	f
sqlite3FkRequired	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FkRequired($/;"	f
sqlite3FkRequired	drivers/SQLite/sqlite3/sqlite3.c	11823;"	d	file:
sqlite3Fts3AllSegdirs	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3AllSegdirs($/;"	f
sqlite3Fts3CacheDeferredDoclists	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3CacheDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3Corrupt	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Corrupt(){$/;"	f
sqlite3Fts3DeferToken	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3DeferToken($/;"	f
sqlite3Fts3DeferredTokenList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3DeferredTokenList($/;"	f
sqlite3Fts3Dequote	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Dequote(char *z){$/;"	f
sqlite3Fts3DoclistPrev	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3DoclistPrev($/;"	f
sqlite3Fts3EvalPhraseCleanup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3EvalPhraseCleanup(Fts3Phrase *pPhrase){$/;"	f
sqlite3Fts3EvalPhrasePoslist	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3Fts3EvalPhrasePoslist($/;"	f
sqlite3Fts3EvalPhraseStats	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3EvalPhraseStats($/;"	f
sqlite3Fts3ExprFree	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3ExprFree(Fts3Expr *p){$/;"	f
sqlite3Fts3ExprInitTestInterface	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ExprInitTestInterface(sqlite3* db){$/;"	f
sqlite3Fts3ExprParse	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ExprParse($/;"	f
sqlite3Fts3FirstFilter	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3FirstFilter($/;"	f
sqlite3Fts3FreeDeferredDoclists	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3FreeDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3FreeDeferredTokens	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3FreeDeferredTokens(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3GetVarint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3GetVarint(const char *p, sqlite_int64 *v){$/;"	f
sqlite3Fts3GetVarint32	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3GetVarint32(const char *p, int *pi){$/;"	f
sqlite3Fts3HashClear	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3HashClear(Fts3Hash *pH){$/;"	f
sqlite3Fts3HashFind	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Fts3HashFind(const Fts3Hash *pH, const void *pKey, int nKey){$/;"	f
sqlite3Fts3HashFindElem	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Fts3HashElem *sqlite3Fts3HashFindElem($/;"	f
sqlite3Fts3HashInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3HashInit(Fts3Hash *pNew, char keyClass, char copyKey){$/;"	f
sqlite3Fts3HashInsert	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Fts3HashInsert($/;"	f
sqlite3Fts3IcuTokenizerModule	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3IcuTokenizerModule($/;"	f
sqlite3Fts3Init	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Init(sqlite3 *db){$/;"	f
sqlite3Fts3InitAux	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitAux(sqlite3 *db){$/;"	f
sqlite3Fts3InitHashTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitHashTable($/;"	f
sqlite3Fts3InitTokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitTokenizer($/;"	f
sqlite3Fts3IsIdChar	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3IsIdChar(char c){$/;"	f
sqlite3Fts3Matchinfo	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Matchinfo($/;"	f
sqlite3Fts3MsrIncrNext	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrNext($/;"	f
sqlite3Fts3MsrIncrRestart	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrRestart(Fts3MultiSegReader *pCsr){$/;"	f
sqlite3Fts3MsrIncrStart	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrStart($/;"	f
sqlite3Fts3MsrOvfl	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrOvfl($/;"	f
sqlite3Fts3NextToken	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3Fts3NextToken(const char *zStr, int *pn){$/;"	f
sqlite3Fts3Offsets	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Offsets($/;"	f
sqlite3Fts3Optimize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Optimize(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsClear	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3PendingTermsClear(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsFlush	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3PendingTermsFlush(Fts3Table *p){$/;"	f
sqlite3Fts3PorterTokenizerModule	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3PorterTokenizerModule($/;"	f
sqlite3Fts3PutVarint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3PutVarint(char *p, sqlite_int64 v){$/;"	f
sqlite3Fts3ReadBlock	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ReadBlock($/;"	f
sqlite3Fts3ReadLock	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ReadLock(Fts3Table *p){$/;"	f
sqlite3Fts3SegReaderCursor	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderCursor($/;"	f
sqlite3Fts3SegReaderFinish	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegReaderFinish($/;"	f
sqlite3Fts3SegReaderFree	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegReaderFree(Fts3SegReader *pReader){$/;"	f
sqlite3Fts3SegReaderNew	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderNew($/;"	f
sqlite3Fts3SegReaderPending	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderPending($/;"	f
sqlite3Fts3SegReaderStart	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderStart($/;"	f
sqlite3Fts3SegReaderStep	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderStep($/;"	f
sqlite3Fts3SegmentsClose	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegmentsClose(Fts3Table *p){$/;"	f
sqlite3Fts3SelectDocsize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SelectDocsize($/;"	f
sqlite3Fts3SelectDoctotal	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SelectDoctotal($/;"	f
sqlite3Fts3SimpleTokenizerModule	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SimpleTokenizerModule($/;"	f
sqlite3Fts3Snippet	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Snippet($/;"	f
sqlite3Fts3UpdateMethod	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3UpdateMethod($/;"	f
sqlite3Fts3VarintLen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3VarintLen(sqlite3_uint64 v){$/;"	f
sqlite3FuncDefInsert	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FuncDefInsert($/;"	f
sqlite3GenerateConstraintChecks	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateConstraintChecks($/;"	f
sqlite3GenerateIndexKey	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GenerateIndexKey($/;"	f
sqlite3GenerateRowDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateRowDelete($/;"	f
sqlite3GenerateRowIndexDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateRowIndexDelete($/;"	f
sqlite3Get4byte	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3Get4byte(const u8 *p){$/;"	f
sqlite3GetBoolean	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetBoolean(const char *z){$/;"	f
sqlite3GetCollSeq	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3GetCollSeq($/;"	f
sqlite3GetFuncCollSeq	drivers/SQLite/sqlite3/sqlite3.c	/^static CollSeq *sqlite3GetFuncCollSeq(sqlite3_context *context){$/;"	f	file:
sqlite3GetInt32	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetInt32(const char *zNum, int *pValue){$/;"	f
sqlite3GetTempRange	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetTempRange(Parse *pParse, int nReg){$/;"	f
sqlite3GetTempReg	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetTempReg(Parse *pParse){$/;"	f
sqlite3GetToken	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetToken(const unsigned char *z, int *tokenType){$/;"	f
sqlite3GetVTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE VTable *sqlite3GetVTable(sqlite3 *db, Table *pTab){$/;"	f
sqlite3GetVTable	drivers/SQLite/sqlite3/sqlite3.c	11770;"	d	file:
sqlite3GetVarint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetVarint(const unsigned char *p, u64 *v){$/;"	f
sqlite3GetVarint32	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetVarint32(const unsigned char *p, u32 *v){$/;"	f
sqlite3GetVdbe	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Vdbe *sqlite3GetVdbe(Parse *pParse){$/;"	f
sqlite3GlobalConfig	drivers/SQLite/sqlite3/sqlite3.c	7876;"	d	file:
sqlite3GlobalConfig	drivers/SQLite/sqlite3/sqlite3.c	7882;"	d	file:
sqlite3GlobalFunctions	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SQLITE_WSD FuncDefHash sqlite3GlobalFunctions;$/;"	v
sqlite3HaltConstraint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3HaltConstraint(Parse *pParse, int onError, char *p4, int p4type){$/;"	f
sqlite3HashClear	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3HashClear(Hash *pH){$/;"	f
sqlite3HashFind	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HashFind(const Hash *pH, const char *pKey, int nKey){$/;"	f
sqlite3HashInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3HashInit(Hash *pNew){$/;"	f
sqlite3HashInsert	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HashInsert(Hash *pH, const char *pKey, int nKey, void *data){$/;"	f
sqlite3HeapNearlyFull	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeapNearlyFull(void){$/;"	f
sqlite3HexToBlob	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HexToBlob(sqlite3 *db, const char *z, int n){$/;"	f
sqlite3HexToInt	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3HexToInt(int h){$/;"	f
sqlite3Hooks	drivers/SQLite/sqlite3/sqlite3.c	/^} sqlite3Hooks = { 0, 0 };$/;"	v	typeref:struct:BenignMallocHooks	file:
sqlite3Hwtime	drivers/SQLite/sqlite3/sqlite3.c	/^  __inline__ sqlite_uint64 sqlite3Hwtime(void){$/;"	f
sqlite3Hwtime	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE   sqlite_uint64 sqlite3Hwtime(void){ return ((sqlite_uint64)0); }$/;"	f
sqlite3IcuInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IcuInit(sqlite3 *db){$/;"	f
sqlite3IdListAppend	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE IdList *sqlite3IdListAppend(sqlite3 *db, IdList *pList, Token *pToken){$/;"	f
sqlite3IdListDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3IdListDelete(sqlite3 *db, IdList *pList){$/;"	f
sqlite3IdListDup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE IdList *sqlite3IdListDup(sqlite3 *db, IdList *p){$/;"	f
sqlite3IdListIndex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IdListIndex(IdList *pList, const char *zName){$/;"	f
sqlite3IndexAffinityOk	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IndexAffinityOk(Expr *pExpr, char idx_affinity){$/;"	f
sqlite3IndexAffinityStr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3IndexAffinityStr(Vdbe *v, Index *pIdx){$/;"	f
sqlite3IndexKeyinfo	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE KeyInfo *sqlite3IndexKeyinfo(Parse *pParse, Index *pIdx){$/;"	f
sqlite3IndexedByLookup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IndexedByLookup(Parse *pParse, struct SrcList_item *pFrom){$/;"	f
sqlite3Init	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Init(sqlite3 *db, char **pzErrMsg){$/;"	f
sqlite3InitCallback	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3InitCallback(void *pInit, int argc, char **argv, char **NotUsed){$/;"	f
sqlite3InitInfo	drivers/SQLite/sqlite3/sqlite3.c	/^  struct sqlite3InitInfo {      \/* Information used during initialization *\/$/;"	s	struct:sqlite3	file:
sqlite3InitOne	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3InitOne(sqlite3 *db, int iDb, char **pzErrMsg){$/;"	f	file:
sqlite3Insert	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Insert($/;"	f
sqlite3IntTokens	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const Token sqlite3IntTokens[] = {$/;"	v
sqlite3IntTokens	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const Token sqlite3IntTokens[];$/;"	v
sqlite3InvalidFunction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3InvalidFunction($/;"	f
sqlite3InvokeBusyHandler	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3InvokeBusyHandler(BusyHandler *p){$/;"	f
sqlite3IoTrace	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void (*sqlite3IoTrace)(const char*, ...) = 0;$/;"	v
sqlite3IoTrace	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void (*sqlite3IoTrace)(const char*,...);$/;"	v
sqlite3IsEbcdicIdChar	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char sqlite3IsEbcdicIdChar[] = {$/;"	v
sqlite3IsEbcdicIdChar	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char sqlite3IsEbcdicIdChar[];$/;"	v
sqlite3IsLikeFunction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsLikeFunction(sqlite3 *db, Expr *pExpr, int *pIsNocase, char *aWc){$/;"	f
sqlite3IsMemJournal	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsMemJournal(sqlite3_file *pJfd){$/;"	f
sqlite3IsNaN	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsNaN(double x){$/;"	f
sqlite3IsNaN	drivers/SQLite/sqlite3/sqlite3.c	11330;"	d	file:
sqlite3IsNumericAffinity	drivers/SQLite/sqlite3/sqlite3.c	9865;"	d	file:
sqlite3IsReadOnly	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsReadOnly(Parse *pParse, Table *pTab, int viewOk){$/;"	f
sqlite3IsRowid	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsRowid(const char *z){$/;"	f
sqlite3Isalnum	drivers/SQLite/sqlite3/sqlite3.c	11245;"	d	file:
sqlite3Isalnum	drivers/SQLite/sqlite3/sqlite3.c	11253;"	d	file:
sqlite3Isalpha	drivers/SQLite/sqlite3/sqlite3.c	11246;"	d	file:
sqlite3Isalpha	drivers/SQLite/sqlite3/sqlite3.c	11254;"	d	file:
sqlite3Isdigit	drivers/SQLite/sqlite3/sqlite3.c	11247;"	d	file:
sqlite3Isdigit	drivers/SQLite/sqlite3/sqlite3.c	11255;"	d	file:
sqlite3Isspace	drivers/SQLite/sqlite3/sqlite3.c	11244;"	d	file:
sqlite3Isspace	drivers/SQLite/sqlite3/sqlite3.c	11252;"	d	file:
sqlite3Isxdigit	drivers/SQLite/sqlite3/sqlite3.c	11248;"	d	file:
sqlite3Isxdigit	drivers/SQLite/sqlite3/sqlite3.c	11256;"	d	file:
sqlite3JoinType	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JoinType(Parse *pParse, Token *pA, Token *pB, Token *pC){$/;"	f
sqlite3JournalCreate	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalCreate(sqlite3_file *p){$/;"	f
sqlite3JournalModename	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3JournalModename(int eMode){$/;"	f
sqlite3JournalOpen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalOpen($/;"	f
sqlite3JournalSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalSize(sqlite3_vfs *pVfs){$/;"	f
sqlite3JournalSize	drivers/SQLite/sqlite3/sqlite3.c	11861;"	d	file:
sqlite3KeywordCode	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3KeywordCode(const unsigned char *z, int n){$/;"	f
sqlite3LimitWhere	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3LimitWhere($/;"	f
sqlite3LoadExtension	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3LoadExtension($/;"	f	file:
sqlite3LocateCollSeq	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3LocateCollSeq(Parse *pParse, const char *zName){$/;"	f
sqlite3LocateTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3LocateTable($/;"	f
sqlite3LockAndPrepare	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3LockAndPrepare($/;"	f	file:
sqlite3MAppendf	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3MAppendf(sqlite3 *db, char *zStr, const char *zFormat, ...){$/;"	f
sqlite3MPrintf	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3MPrintf(sqlite3 *db, const char *zFormat, ...){$/;"	f
sqlite3Malloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Malloc(int n){$/;"	f
sqlite3MallocAlarm	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqlite3MallocAlarm(int nByte){$/;"	f	file:
sqlite3MallocEnd	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MallocEnd(void){$/;"	f
sqlite3MallocInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MallocInit(void){$/;"	f
sqlite3MallocSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MallocSize(void *p){$/;"	f
sqlite3MallocZero	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3MallocZero(int n){$/;"	f
sqlite3MaterializeView	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MaterializeView($/;"	f
sqlite3MayAbort	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MayAbort(Parse *pParse){$/;"	f
sqlite3MemCompare	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemCompare(const Mem *pMem1, const Mem *pMem2, const CollSeq *pColl){$/;"	f
sqlite3MemFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqlite3MemFree(void *pPrior){ return; }$/;"	f	file:
sqlite3MemFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqlite3MemFree(void *pPrior){$/;"	f	file:
sqlite3MemGetMemsys3	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetMemsys3(void){$/;"	f
sqlite3MemGetMemsys5	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetMemsys5(void){$/;"	f
sqlite3MemGetWin32	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetWin32(void){$/;"	f
sqlite3MemInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3MemInit(void *NotUsed){ return SQLITE_OK; }$/;"	f	file:
sqlite3MemInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3MemInit(void *NotUsed){$/;"	f	file:
sqlite3MemJournalOpen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemJournalOpen(sqlite3_file *pJfd){$/;"	f
sqlite3MemJournalSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemJournalSize(void){$/;"	f
sqlite3MemMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *sqlite3MemMalloc(int nByte){ return 0; }$/;"	f	file:
sqlite3MemMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *sqlite3MemMalloc(int nByte){$/;"	f	file:
sqlite3MemRealloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){ return 0; }$/;"	f	file:
sqlite3MemRealloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){$/;"	f	file:
sqlite3MemRoundup	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3MemRoundup(int n){ return n; }$/;"	f	file:
sqlite3MemRoundup	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3MemRoundup(int n){$/;"	f	file:
sqlite3MemSetDefault	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemShutdown	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqlite3MemShutdown(void *NotUsed){ return; }$/;"	f	file:
sqlite3MemShutdown	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqlite3MemShutdown(void *NotUsed){$/;"	f	file:
sqlite3MemSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3MemSize(void *p){$/;"	f	file:
sqlite3MemSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3MemSize(void *pPrior){ return 0; }$/;"	f	file:
sqlite3MemSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3MemSize(void *pPrior){$/;"	f	file:
sqlite3MemdebugBacktrace	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugBacktrace(int depth){$/;"	f
sqlite3MemdebugBacktraceCallback	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugBacktraceCallback(void (*xBacktrace)(int, int, void **)){$/;"	f
sqlite3MemdebugDump	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugDump(const char *zFilename){$/;"	f
sqlite3MemdebugHasType	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugHasType(void *p, u8 eType){$/;"	f
sqlite3MemdebugHasType	drivers/SQLite/sqlite3/sqlite3.c	11943;"	d	file:
sqlite3MemdebugMallocCount	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugMallocCount(){$/;"	f
sqlite3MemdebugNoType	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugNoType(void *p, u8 eType){$/;"	f
sqlite3MemdebugNoType	drivers/SQLite/sqlite3/sqlite3.c	11944;"	d	file:
sqlite3MemdebugSetType	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSetType(void *p, u8 eType){$/;"	f
sqlite3MemdebugSetType	drivers/SQLite/sqlite3/sqlite3.c	11942;"	d	file:
sqlite3MemdebugSettitle	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSettitle(const char *zTitle){$/;"	f
sqlite3MemdebugSync	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSync(){$/;"	f
sqlite3MemoryAlarm	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3MemoryAlarm($/;"	f	file:
sqlite3Memsys3Dump	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Memsys3Dump(const char *zFilename){$/;"	f
sqlite3Memsys5Dump	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Memsys5Dump(const char *zFilename){$/;"	f
sqlite3MemsysGetHeader	drivers/SQLite/sqlite3/sqlite3.c	/^static struct MemBlockHdr *sqlite3MemsysGetHeader(void *pAllocation){$/;"	f	file:
sqlite3MinimumFileFormat	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MinimumFileFormat(Parse *pParse, int iDb, int minFormat){$/;"	f
sqlite3MisuseError	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MisuseError(int lineno){$/;"	f
sqlite3MulInt64	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MulInt64(i64 *pA, i64 iB){$/;"	f
sqlite3MultiWrite	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MultiWrite(Parse *pParse){$/;"	f
sqlite3MutexAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex *sqlite3MutexAlloc(int id){$/;"	f
sqlite3MutexAlloc	drivers/SQLite/sqlite3/sqlite3.c	9332;"	d	file:
sqlite3MutexEnd	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MutexEnd(void){$/;"	f
sqlite3MutexEnd	drivers/SQLite/sqlite3/sqlite3.c	9334;"	d	file:
sqlite3MutexInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MutexInit(void){ $/;"	f
sqlite3MutexInit	drivers/SQLite/sqlite3/sqlite3.c	9333;"	d	file:
sqlite3NameFromToken	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3NameFromToken(sqlite3 *db, Token *pName){$/;"	f
sqlite3NestedParse	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3NestedParse(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3NoopMutex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex_methods const *sqlite3NoopMutex(void){$/;"	f
sqlite3OSTrace	drivers/SQLite/sqlite3/sqlite3.c	/^  int sqlite3OSTrace = SQLITE_DEBUG_OS_TRACE;$/;"	v
sqlite3OpcodeName	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3OpcodeName(int i){$/;"	f
sqlite3OpcodeProperty	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3OpcodeProperty[] = OPFLG_INITIALIZER;$/;"	v
sqlite3OpcodeProperty	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3OpcodeProperty[];$/;"	v
sqlite3OpenMasterTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OpenMasterTable(Parse *p, int iDb){$/;"	f
sqlite3OpenTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OpenTable($/;"	f
sqlite3OpenTableAndIndices	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OpenTableAndIndices($/;"	f
sqlite3OpenTempDatabase	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OpenTempDatabase(Parse *pParse){$/;"	f
sqlite3OsAccess	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsAccess($/;"	f
sqlite3OsCheckReservedLock	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f
sqlite3OsClose	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsClose(sqlite3_file *pId){$/;"	f
sqlite3OsCloseFree	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCloseFree(sqlite3_file *pFile){$/;"	f
sqlite3OsCurrentTimeInt64	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *pTimeOut){$/;"	f
sqlite3OsDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f
sqlite3OsDeviceCharacteristics	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsDeviceCharacteristics(sqlite3_file *id){$/;"	f
sqlite3OsDlClose	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f
sqlite3OsDlError	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsDlError(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsDlOpen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3OsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f
sqlite3OsDlSym	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void (*sqlite3OsDlSym(sqlite3_vfs *pVfs, void *pHdle, const char *zSym))(void){$/;"	f
sqlite3OsFileControl	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f
sqlite3OsFileSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFileSize(sqlite3_file *id, i64 *pSize){$/;"	f
sqlite3OsFullPathname	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFullPathname($/;"	f
sqlite3OsInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsInit(void){$/;"	f
sqlite3OsLock	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsLock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsOpen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsOpen($/;"	f
sqlite3OsOpenMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsOpenMalloc($/;"	f
sqlite3OsRandomness	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsRead	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsRead(sqlite3_file *id, void *pBuf, int amt, i64 offset){$/;"	f
sqlite3OsSectorSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSectorSize(sqlite3_file *id){$/;"	f
sqlite3OsShmBarrier	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsShmBarrier(sqlite3_file *id){$/;"	f
sqlite3OsShmLock	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmLock(sqlite3_file *id, int offset, int n, int flags){$/;"	f
sqlite3OsShmMap	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmMap($/;"	f
sqlite3OsShmUnmap	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmUnmap(sqlite3_file *id, int deleteFlag){$/;"	f
sqlite3OsSleep	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f
sqlite3OsSync	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSync(sqlite3_file *id, int flags){$/;"	f
sqlite3OsTruncate	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsTruncate(sqlite3_file *id, i64 size){$/;"	f
sqlite3OsUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsUnlock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsWrite	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsWrite(sqlite3_file *id, const void *pBuf, int amt, i64 offset){$/;"	f
sqlite3PCacheBufferSetup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PCacheBufferSetup(void *pBuf, int sz, int n){$/;"	f
sqlite3PCacheSetDefault	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PCacheSetDefault(void){$/;"	f
sqlite3PExpr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3PExpr($/;"	f
sqlite3PageFree	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PageFree(void *p){$/;"	f
sqlite3PageMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PageMalloc(int sz){$/;"	f
sqlite3PagerAcquire	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerAcquire($/;"	f
sqlite3PagerBackupPtr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_backup **sqlite3PagerBackupPtr(Pager *pPager){$/;"	f
sqlite3PagerBegin	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerBegin(Pager *pPager, int exFlag, int subjInMemory){$/;"	f
sqlite3PagerCacheStat	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerCacheStat(Pager *pPager, int eStat, int reset, int *pnVal){$/;"	f
sqlite3PagerCheckpoint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCheckpoint(Pager *pPager, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3PagerClearCache	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerClearCache(Pager *pPager){$/;"	f
sqlite3PagerClose	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerClose(Pager *pPager){$/;"	f
sqlite3PagerCloseWal	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCloseWal(Pager *pPager){$/;"	f
sqlite3PagerCodec	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerCodec(PgHdr *pPg){$/;"	f
sqlite3PagerCommitPhaseOne	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCommitPhaseOne($/;"	f
sqlite3PagerCommitPhaseTwo	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCommitPhaseTwo(Pager *pPager){$/;"	f
sqlite3PagerDontWrite	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerDontWrite(PgHdr *pPg){$/;"	f
sqlite3PagerExclusiveLock	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerExclusiveLock(Pager *pPager){$/;"	f
sqlite3PagerFile	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_file *sqlite3PagerFile(Pager *pPager){$/;"	f
sqlite3PagerFilename	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3PagerFilename(Pager *pPager){$/;"	f
sqlite3PagerGet	drivers/SQLite/sqlite3/sqlite3.c	8747;"	d	file:
sqlite3PagerGetCodec	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetCodec(Pager *pPager){$/;"	f
sqlite3PagerGetData	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetData(DbPage *pPg){$/;"	f
sqlite3PagerGetExtra	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetExtra(DbPage *pPg){$/;"	f
sqlite3PagerGetJournalMode	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerGetJournalMode(Pager *pPager){$/;"	f
sqlite3PagerIsMemdb	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerIsMemdb(Pager *pPager){$/;"	f
sqlite3PagerIsreadonly	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3PagerIsreadonly(Pager *pPager){$/;"	f
sqlite3PagerIswriteable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerIswriteable(DbPage *pPg){$/;"	f
sqlite3PagerJournalSizeLimit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3PagerJournalSizeLimit(Pager *pPager, i64 iLimit){$/;"	f
sqlite3PagerJournalname	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3PagerJournalname(Pager *pPager){$/;"	f
sqlite3PagerLockingMode	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerLockingMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerLookup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE DbPage *sqlite3PagerLookup(Pager *pPager, Pgno pgno){$/;"	f
sqlite3PagerMaxPageCount	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMaxPageCount(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerMemUsed	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMemUsed(Pager *pPager){$/;"	f
sqlite3PagerMovepage	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMovepage(Pager *pPager, DbPage *pPg, Pgno pgno, int isCommit){$/;"	f
sqlite3PagerNosync	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerNosync(Pager *pPager){$/;"	f
sqlite3PagerOkToChangeJournalMode	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOkToChangeJournalMode(Pager *pPager){$/;"	f
sqlite3PagerOpen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpen($/;"	f
sqlite3PagerOpenSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpenSavepoint(Pager *pPager, int nSavepoint){$/;"	f
sqlite3PagerOpenWal	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpenWal($/;"	f
sqlite3PagerPageRefcount	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerPageRefcount(DbPage *pPage){$/;"	f
sqlite3PagerPagecount	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerPagecount(Pager *pPager, int *pnPage){$/;"	f
sqlite3PagerPagenumber	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Pgno sqlite3PagerPagenumber(DbPage *pPg){$/;"	f
sqlite3PagerReadFileheader	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerReadFileheader(Pager *pPager, int N, unsigned char *pDest){$/;"	f
sqlite3PagerRef	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerRef(DbPage *pPg){$/;"	f
sqlite3PagerRefcount	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerRefcount(Pager *pPager){$/;"	f
sqlite3PagerRollback	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerRollback(Pager *pPager){$/;"	f
sqlite3PagerSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSavepoint(Pager *pPager, int op, int iSavepoint){$/;"	f
sqlite3PagerSetBusyhandler	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetBusyhandler($/;"	f
sqlite3PagerSetCachesize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetCachesize(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerSetCodec	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetCodec($/;"	f
sqlite3PagerSetJournalMode	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetJournalMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerSetPagesize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetPagesize(Pager *pPager, u32 *pPageSize, int nReserve){$/;"	f
sqlite3PagerSetSafetyLevel	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetSafetyLevel($/;"	f
sqlite3PagerSharedLock	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSharedLock(Pager *pPager){$/;"	f
sqlite3PagerStats	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int *sqlite3PagerStats(Pager *pPager){$/;"	f
sqlite3PagerSync	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSync(Pager *pPager){$/;"	f
sqlite3PagerTempSpace	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerTempSpace(Pager *pPager){$/;"	f
sqlite3PagerTruncateImage	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerTruncateImage(Pager *pPager, Pgno nPage){$/;"	f
sqlite3PagerUnref	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerUnref(DbPage *pPg){$/;"	f
sqlite3PagerVfs	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_vfs *sqlite3PagerVfs(Pager *pPager){$/;"	f
sqlite3PagerWalCallback	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalCallback(Pager *pPager){$/;"	f
sqlite3PagerWalSupported	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalSupported(Pager *pPager){$/;"	f
sqlite3PagerWrite	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWrite(DbPage *pDbPage){$/;"	f
sqlite3ParseToplevel	drivers/SQLite/sqlite3/sqlite3.c	11551;"	d	file:
sqlite3ParseToplevel	drivers/SQLite/sqlite3/sqlite3.c	11560;"	d	file:
sqlite3ParseUri	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ParseUri($/;"	f
sqlite3Parser	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Parser($/;"	f
sqlite3ParserARG_FETCH	drivers/SQLite/sqlite3/sqlite3.c	106136;"	d	file:
sqlite3ParserARG_PDECL	drivers/SQLite/sqlite3/sqlite3.c	106135;"	d	file:
sqlite3ParserARG_SDECL	drivers/SQLite/sqlite3/sqlite3.c	106134;"	d	file:
sqlite3ParserARG_STORE	drivers/SQLite/sqlite3/sqlite3.c	106137;"	d	file:
sqlite3ParserAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ParserAlloc(void *(*mallocProc)(size_t)){$/;"	f
sqlite3ParserFree	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserFree($/;"	f
sqlite3ParserStackPeak	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ParserStackPeak(void *p){$/;"	f
sqlite3ParserTOKENTYPE	drivers/SQLite/sqlite3/sqlite3.c	106113;"	d	file:
sqlite3ParserTrace	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f
sqlite3PcacheCleanAll	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheCleanAll(PCache *pCache){$/;"	f
sqlite3PcacheClear	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClear(PCache *pCache){$/;"	f
sqlite3PcacheClearSyncFlags	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClearSyncFlags(PCache *pCache){$/;"	f
sqlite3PcacheClose	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClose(PCache *pCache){$/;"	f
sqlite3PcacheDirtyList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE PgHdr *sqlite3PcacheDirtyList(PCache *pCache){$/;"	f
sqlite3PcacheDrop	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheDrop(PgHdr *p){$/;"	f
sqlite3PcacheFetch	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheFetch($/;"	f
sqlite3PcacheGetCachesize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheGetCachesize(PCache *pCache){$/;"	f
sqlite3PcacheInitialize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheInitialize(void){$/;"	f
sqlite3PcacheIterateDirty	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheIterateDirty(PCache *pCache, void (*xIter)(PgHdr *)){$/;"	f
sqlite3PcacheMakeClean	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMakeClean(PgHdr *p){$/;"	f
sqlite3PcacheMakeDirty	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMakeDirty(PgHdr *p){$/;"	f
sqlite3PcacheMove	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMove(PgHdr *p, Pgno newPgno){$/;"	f
sqlite3PcacheOpen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheOpen($/;"	f
sqlite3PcachePageRefcount	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcachePageRefcount(PgHdr *p){$/;"	f
sqlite3PcachePagecount	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcachePagecount(PCache *pCache){$/;"	f
sqlite3PcacheRef	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheRef(PgHdr *p){$/;"	f
sqlite3PcacheRefCount	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheRefCount(PCache *pCache){$/;"	f
sqlite3PcacheRelease	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheRelease(PgHdr *p){$/;"	f
sqlite3PcacheReleaseMemory	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheReleaseMemory(int nReq){$/;"	f
sqlite3PcacheSetCachesize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheSetCachesize(PCache *pCache, int mxPage){$/;"	f
sqlite3PcacheSetPageSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheSetPageSize(PCache *pCache, int szPage){$/;"	f
sqlite3PcacheShutdown	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheShutdown(void){$/;"	f
sqlite3PcacheSize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheSize(void){ return sizeof(PCache); }$/;"	f
sqlite3PcacheStats	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheStats($/;"	f
sqlite3PcacheTruncate	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheTruncate(PCache *pCache, Pgno pgno){$/;"	f
sqlite3PendingByte	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PendingByte = 0x40000000;$/;"	v
sqlite3PendingByte	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PendingByte;$/;"	v
sqlite3Pragma	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Pragma($/;"	f
sqlite3Prepare	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3Prepare($/;"	f	file:
sqlite3Prepare16	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3Prepare16($/;"	f	file:
sqlite3PrintExpr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrintExpr(Expr *p){$/;"	f
sqlite3PrintExprList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrintExprList(ExprList *pList){$/;"	f
sqlite3PrintSelect	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrintSelect(Select *p, int indent){$/;"	f
sqlite3Prng	drivers/SQLite/sqlite3/sqlite3.c	/^} sqlite3Prng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3PrngResetState	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrngResetState(void){$/;"	f
sqlite3PrngRestoreState	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrngRestoreState(void){$/;"	f
sqlite3PrngSaveState	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrngSaveState(void){$/;"	f
sqlite3PrngType	drivers/SQLite/sqlite3/sqlite3.c	/^static SQLITE_WSD struct sqlite3PrngType {$/;"	s	file:
sqlite3Put4byte	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Put4byte(unsigned char *p, u32 v){$/;"	f
sqlite3PutVarint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PutVarint(unsigned char *p, u64 v){$/;"	f
sqlite3PutVarint32	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PutVarint32(unsigned char *p, u32 v){$/;"	f
sqlite3ReadSchema	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ReadSchema(Parse *pParse){$/;"	f
sqlite3Realloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Realloc(void *pOld, int nBytes){$/;"	f
sqlite3RefillIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqlite3RefillIndex(Parse *pParse, Index *pIndex, int memRootPage){$/;"	f	file:
sqlite3RegisterBuiltinFunctions	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterBuiltinFunctions(sqlite3 *db){$/;"	f
sqlite3RegisterDateTimeFunctions	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterDateTimeFunctions(void){$/;"	f
sqlite3RegisterGlobalFunctions	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterGlobalFunctions(void){$/;"	f
sqlite3RegisterLikeFunctions	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterLikeFunctions(sqlite3 *db, int caseSensitive){$/;"	f
sqlite3Reindex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Reindex(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3ReleaseTempRange	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ReleaseTempRange(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ReleaseTempReg	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ReleaseTempReg(Parse *pParse, int iReg){$/;"	f
sqlite3Reprepare	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Reprepare(Vdbe *p){$/;"	f
sqlite3ResetInternalSchema	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResetInternalSchema(sqlite3 *db, int iDb){$/;"	f
sqlite3ResolveExprNames	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveExprNames( $/;"	f
sqlite3ResolveOrderGroupBy	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveOrderGroupBy($/;"	f
sqlite3ResolveSelectNames	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResolveSelectNames($/;"	f
sqlite3ResultSetOfSelect	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3ResultSetOfSelect(Parse *pParse, Select *pSelect){$/;"	f
sqlite3RollbackAll	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RollbackAll(sqlite3 *db){$/;"	f
sqlite3RollbackTransaction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RollbackTransaction(Parse *pParse){$/;"	f
sqlite3RootPageMoved	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RootPageMoved(sqlite3 *db, int iDb, int iFrom, int iTo){$/;"	f
sqlite3RowSetClear	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowSetClear(RowSet *p){$/;"	f
sqlite3RowSetInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE RowSet *sqlite3RowSetInit(sqlite3 *db, void *pSpace, unsigned int N){$/;"	f
sqlite3RowSetInsert	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowSetInsert(RowSet *p, i64 rowid){$/;"	f
sqlite3RowSetNext	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RowSetNext(RowSet *p, i64 *pRowid){$/;"	f
sqlite3RowSetTest	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RowSetTest(RowSet *pRowSet, u8 iBatch, sqlite3_int64 iRowid){$/;"	f
sqlite3RtreeInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RtreeInit(sqlite3 *db){$/;"	f
sqlite3RunParser	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RunParser(Parse *pParse, const char *zSql, char **pzErrMsg){$/;"	f
sqlite3RunVacuum	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RunVacuum(char **pzErrMsg, sqlite3 *db){$/;"	f
sqlite3SafetyCheckOk	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SafetyCheckOk(sqlite3 *db){$/;"	f
sqlite3SafetyCheckSickOrOk	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SafetyCheckSickOrOk(sqlite3 *db){$/;"	f
sqlite3SavedPrng	drivers/SQLite/sqlite3/sqlite3.c	/^static SQLITE_WSD struct sqlite3PrngType sqlite3SavedPrng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3Savepoint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Savepoint(Parse *pParse, int op, Token *pName){$/;"	f
sqlite3SchemaClear	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SchemaClear(void *p){$/;"	f
sqlite3SchemaGet	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Schema *sqlite3SchemaGet(sqlite3 *db, Btree *pBt){$/;"	f
sqlite3SchemaMutexHeld	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SchemaMutexHeld(sqlite3 *db, int iDb, Schema *pSchema){$/;"	f
sqlite3SchemaMutexHeld	drivers/SQLite/sqlite3/sqlite3.c	8194;"	d	file:
sqlite3SchemaToIndex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SchemaToIndex(sqlite3 *db, Schema *pSchema){$/;"	f
sqlite3ScratchFree	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ScratchFree(void *p){$/;"	f
sqlite3ScratchMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ScratchMalloc(int n){$/;"	f
sqlite3Select	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Select($/;"	f
sqlite3SelectAddTypeInfo	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqlite3SelectAddTypeInfo(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectDelete(sqlite3 *db, Select *p){$/;"	f
sqlite3SelectDestInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectDestInit(SelectDest *pDest, int eDest, int iParm){$/;"	f
sqlite3SelectDup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Select *sqlite3SelectDup(sqlite3 *db, Select *p, int flags){$/;"	f
sqlite3SelectExpand	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqlite3SelectExpand(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectExprHeight	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SelectExprHeight(Select *p){$/;"	f
sqlite3SelectExprHeight	drivers/SQLite/sqlite3/sqlite3.c	11874;"	d	file:
sqlite3SelectNew	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Select *sqlite3SelectNew($/;"	f
sqlite3SelectPrep	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectPrep($/;"	f
sqlite3SetString	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SetString(char **pz, sqlite3 *db, const char *zFormat, ...){$/;"	f
sqlite3SharedCacheList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v
sqlite3SharedCacheList	drivers/SQLite/sqlite3/sqlite3.c	/^static BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v	file:
sqlite3SrcListAppend	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListAppend($/;"	f
sqlite3SrcListAppendFromTerm	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListAppendFromTerm($/;"	f
sqlite3SrcListAssignCursors	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListAssignCursors(Parse *pParse, SrcList *pList){$/;"	f
sqlite3SrcListDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListDelete(sqlite3 *db, SrcList *pList){$/;"	f
sqlite3SrcListDup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListDup(sqlite3 *db, SrcList *p, int flags){$/;"	f
sqlite3SrcListEnlarge	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListEnlarge($/;"	f
sqlite3SrcListIndexedBy	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListIndexedBy(Parse *pParse, SrcList *p, Token *pIndexedBy){$/;"	f
sqlite3SrcListLookup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3SrcListLookup(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3SrcListShiftJoinType	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListShiftJoinType(SrcList *p){$/;"	f
sqlite3StackAllocRaw	drivers/SQLite/sqlite3/sqlite3.c	11298;"	d	file:
sqlite3StackAllocRaw	drivers/SQLite/sqlite3/sqlite3.c	11302;"	d	file:
sqlite3StackAllocZero	drivers/SQLite/sqlite3/sqlite3.c	11299;"	d	file:
sqlite3StackAllocZero	drivers/SQLite/sqlite3/sqlite3.c	11303;"	d	file:
sqlite3StackFree	drivers/SQLite/sqlite3/sqlite3.c	11300;"	d	file:
sqlite3StackFree	drivers/SQLite/sqlite3/sqlite3.c	11304;"	d	file:
sqlite3StartTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StartTable($/;"	f
sqlite3Stat	drivers/SQLite/sqlite3/sqlite3.c	/^} sqlite3Stat = { {0,}, {0,} };$/;"	v	typeref:struct:sqlite3StatType	file:
sqlite3StatType	drivers/SQLite/sqlite3/sqlite3.c	/^static SQLITE_WSD struct sqlite3StatType {$/;"	s	file:
sqlite3StatType	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3StatType sqlite3StatType;$/;"	t	typeref:struct:sqlite3StatType	file:
sqlite3StatusAdd	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusAdd(int op, int N){$/;"	f
sqlite3StatusSet	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusSet(int op, int X){$/;"	f
sqlite3StatusValue	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3StatusValue(int op){$/;"	f
sqlite3Step	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3Step(Vdbe *p){$/;"	f	file:
sqlite3StrAccumAppend	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumAppend(StrAccum *p, const char *z, int N){$/;"	f
sqlite3StrAccumFinish	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3StrAccumFinish(StrAccum *p){$/;"	f
sqlite3StrAccumInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumInit(StrAccum *p, char *zBase, int n, int mx){$/;"	f
sqlite3StrAccumReset	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumReset(StrAccum *p){$/;"	f
sqlite3StrICmp	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3StrICmp(const char *zLeft, const char *zRight){$/;"	f
sqlite3StrNICmp	drivers/SQLite/sqlite3/sqlite3.c	11265;"	d	file:
sqlite3Strlen30	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Strlen30(const char *z){$/;"	f
sqlite3SubInt64	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SubInt64(i64 *pA, i64 iB){$/;"	f
sqlite3TableAffinityStr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TableAffinityStr(Vdbe *v, Table *pTab){$/;"	f
sqlite3TableLock	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TableLock($/;"	f
sqlite3TableLock	drivers/SQLite/sqlite3/sqlite3.c	11753;"	d	file:
sqlite3TempInMemory	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3TempInMemory(const sqlite3 *db){$/;"	f
sqlite3Tolower	drivers/SQLite/sqlite3/sqlite3.c	11249;"	d	file:
sqlite3Tolower	drivers/SQLite/sqlite3/sqlite3.c	11257;"	d	file:
sqlite3Toupper	drivers/SQLite/sqlite3/sqlite3.c	11243;"	d	file:
sqlite3Toupper	drivers/SQLite/sqlite3/sqlite3.c	11251;"	d	file:
sqlite3TransferBindings	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3TransferBindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3TriggerColmask	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3TriggerColmask($/;"	f
sqlite3TriggerColmask	drivers/SQLite/sqlite3/sqlite3.c	11561;"	d	file:
sqlite3TriggerDeleteStep	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerDeleteStep($/;"	f
sqlite3TriggerInsertStep	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerInsertStep($/;"	f
sqlite3TriggerList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Trigger *sqlite3TriggerList(Parse *pParse, Table *pTab){$/;"	f
sqlite3TriggerList	drivers/SQLite/sqlite3/sqlite3.c	11559;"	d	file:
sqlite3TriggerSelectStep	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerSelectStep(sqlite3 *db, Select *pSelect){$/;"	f
sqlite3TriggerUpdateStep	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerUpdateStep($/;"	f
sqlite3TriggersExist	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Trigger *sqlite3TriggersExist($/;"	f
sqlite3TriggersExist	drivers/SQLite/sqlite3/sqlite3.c	11553;"	d	file:
sqlite3TwoPartName	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3TwoPartName($/;"	f
sqlite3UnlinkAndDeleteIndex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteIndex(sqlite3 *db, int iDb, const char *zIdxName){$/;"	f
sqlite3UnlinkAndDeleteTable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteTable(sqlite3 *db, int iDb, const char *zTabName){$/;"	f
sqlite3UnlinkAndDeleteTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteTrigger(sqlite3 *db, int iDb, const char *zName){$/;"	f
sqlite3UnlinkAndDeleteTrigger	drivers/SQLite/sqlite3/sqlite3.c	11556;"	d	file:
sqlite3Update	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Update($/;"	f
sqlite3UpperToLower	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3UpperToLower[] = {$/;"	v
sqlite3UpperToLower	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3UpperToLower[];$/;"	v
sqlite3Utf16ByteLen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf16ByteLen(const void *zIn, int nChar){$/;"	f
sqlite3Utf16to8	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3Utf16to8(sqlite3 *db, const void *z, int nByte, u8 enc){$/;"	f
sqlite3Utf8CharLen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf8CharLen(const char *zIn, int nByte){$/;"	f
sqlite3Utf8Read	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3Utf8Read($/;"	f
sqlite3Utf8Read	drivers/SQLite/sqlite3/sqlite3.c	84880;"	d	file:
sqlite3Utf8To8	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf8To8(unsigned char *zIn){$/;"	f
sqlite3Utf8Trans1	drivers/SQLite/sqlite3/sqlite3.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3Utf8to16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3Utf8to16(sqlite3 *db, u8 enc, char *z, int n, int *pnOut){$/;"	f
sqlite3UtfSelfTest	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UtfSelfTest(void){$/;"	f
sqlite3VMPrintf	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3VMPrintf(sqlite3 *db, const char *zFormat, va_list ap){$/;"	f
sqlite3VXPrintf	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VXPrintf($/;"	f
sqlite3Vacuum	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Vacuum(Parse *pParse){$/;"	f
sqlite3ValueApplyAffinity	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueApplyAffinity($/;"	f
sqlite3ValueBytes	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ValueBytes(sqlite3_value *pVal, u8 enc){$/;"	f
sqlite3ValueFree	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueFree(sqlite3_value *v){$/;"	f
sqlite3ValueFromExpr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ValueFromExpr($/;"	f
sqlite3ValueNew	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_value *sqlite3ValueNew(sqlite3 *db){$/;"	f
sqlite3ValueSetStr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueSetStr($/;"	f
sqlite3ValueText	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3ValueText(sqlite3_value* pVal, u8 enc){$/;"	f
sqlite3VarintLen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VarintLen(u64 v){$/;"	f
sqlite3VdbeAddOp0	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp0(Vdbe *p, int op){$/;"	f
sqlite3VdbeAddOp1	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp1(Vdbe *p, int op, int p1){$/;"	f
sqlite3VdbeAddOp2	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp2(Vdbe *p, int op, int p1, int p2){$/;"	f
sqlite3VdbeAddOp3	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp3(Vdbe *p, int op, int p1, int p2, int p3){$/;"	f
sqlite3VdbeAddOp4	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4($/;"	f
sqlite3VdbeAddOp4Int	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4Int($/;"	f
sqlite3VdbeAddOpList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOpList(Vdbe *p, int nOp, VdbeOpList const *aOp){$/;"	f
sqlite3VdbeAddParseSchemaOp	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeAddParseSchemaOp(Vdbe *p, int iDb, char *zWhere){$/;"	f
sqlite3VdbeAddopTrace	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddopTrace = 0;$/;"	v
sqlite3VdbeAllocUnpackedRecord	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE UnpackedRecord *sqlite3VdbeAllocUnpackedRecord($/;"	f
sqlite3VdbeAssertMayAbort	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAssertMayAbort(Vdbe *v, int mayAbort){$/;"	f
sqlite3VdbeChangeEncoding	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeChangeEncoding(Mem *pMem, int desiredEnc){$/;"	f
sqlite3VdbeChangeP1	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP1(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP2	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP2(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP3	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP3(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP4	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){$/;"	f
sqlite3VdbeChangeP5	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP5(Vdbe *p, u8 val){$/;"	f
sqlite3VdbeChangeToNoop	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeToNoop(Vdbe *p, int addr){$/;"	f
sqlite3VdbeCheckFk	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCheckFk(Vdbe *p, int deferred){$/;"	f
sqlite3VdbeCheckFk	drivers/SQLite/sqlite3/sqlite3.c	13028;"	d	file:
sqlite3VdbeCloseStatement	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCloseStatement(Vdbe *p, int eOp){$/;"	f
sqlite3VdbeComment	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeCountChanges	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeCountChanges(Vdbe *v){$/;"	f
sqlite3VdbeCreate	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Vdbe *sqlite3VdbeCreate(sqlite3 *db){$/;"	f
sqlite3VdbeCurrentAddr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCurrentAddr(Vdbe *p){$/;"	f
sqlite3VdbeCursorMoveto	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCursorMoveto(VdbeCursor *p){$/;"	f
sqlite3VdbeDb	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3 *sqlite3VdbeDb(Vdbe *v){$/;"	f
sqlite3VdbeDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeDelete(Vdbe *p){$/;"	f
sqlite3VdbeDeleteAuxData	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeDeleteAuxData(VdbeFunc *pVdbeFunc, int mask){$/;"	f
sqlite3VdbeDeleteObject	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeDeleteObject(sqlite3 *db, Vdbe *p){$/;"	f
sqlite3VdbeEnter	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeEnter(Vdbe *p){$/;"	f
sqlite3VdbeEnter	drivers/SQLite/sqlite3/sqlite3.c	13017;"	d	file:
sqlite3VdbeExec	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeExec($/;"	f
sqlite3VdbeExpandSql	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3VdbeExpandSql($/;"	f
sqlite3VdbeFinalize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeFinalize(Vdbe *p){$/;"	f
sqlite3VdbeFrameDelete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeFrameDelete(VdbeFrame *p){$/;"	f
sqlite3VdbeFrameRestore	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeFrameRestore(VdbeFrame *pFrame){$/;"	f
sqlite3VdbeFreeCursor	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeFreeCursor(Vdbe *p, VdbeCursor *pCx){$/;"	f
sqlite3VdbeGetOp	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeGetOp(Vdbe *p, int addr){$/;"	f
sqlite3VdbeGetValue	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE sqlite3_value *sqlite3VdbeGetValue(Vdbe *v, int iVar, u8 aff){$/;"	f
sqlite3VdbeHalt	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeHalt(Vdbe *p){$/;"	f
sqlite3VdbeIOTraceSql	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeIOTraceSql(Vdbe *p){$/;"	f
sqlite3VdbeIOTraceSql	drivers/SQLite/sqlite3/sqlite3.c	11906;"	d	file:
sqlite3VdbeIdxKeyCompare	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeIdxKeyCompare($/;"	f
sqlite3VdbeIdxRowid	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeIdxRowid(sqlite3 *db, BtCursor *pCur, i64 *rowid){$/;"	f
sqlite3VdbeIntValue	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3VdbeIntValue(Mem *pMem){$/;"	f
sqlite3VdbeIntegerAffinity	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeIntegerAffinity(Mem *pMem){$/;"	f
sqlite3VdbeJumpHere	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeJumpHere(Vdbe *p, int addr){$/;"	f
sqlite3VdbeLeave	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeLeave(Vdbe *p){$/;"	f
sqlite3VdbeLeave	drivers/SQLite/sqlite3/sqlite3.c	13018;"	d	file:
sqlite3VdbeLinkSubProgram	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeLinkSubProgram(Vdbe *pVdbe, SubProgram *p){$/;"	f
sqlite3VdbeList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeList($/;"	f
sqlite3VdbeMakeLabel	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMakeLabel(Vdbe *p){$/;"	f
sqlite3VdbeMakeReady	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMakeReady($/;"	f
sqlite3VdbeMemCopy	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemCopy(Mem *pTo, const Mem *pFrom){$/;"	f
sqlite3VdbeMemExpandBlob	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemExpandBlob(Mem *pMem){$/;"	f
sqlite3VdbeMemExpandBlob	drivers/SQLite/sqlite3/sqlite3.c	13041;"	d	file:
sqlite3VdbeMemFinalize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemFinalize(Mem *pMem, FuncDef *pFunc){$/;"	f
sqlite3VdbeMemFromBtree	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemFromBtree($/;"	f
sqlite3VdbeMemGrow	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemGrow(Mem *pMem, int n, int preserve){$/;"	f
sqlite3VdbeMemHandleBom	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemHandleBom(Mem *pMem){$/;"	f
sqlite3VdbeMemIntegerify	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemIntegerify(Mem *pMem){$/;"	f
sqlite3VdbeMemMakeWriteable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemMakeWriteable(Mem *pMem){$/;"	f
sqlite3VdbeMemMove	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemMove(Mem *pTo, Mem *pFrom){$/;"	f
sqlite3VdbeMemNulTerminate	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemNulTerminate(Mem *pMem){$/;"	f
sqlite3VdbeMemNumerify	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemNumerify(Mem *pMem){$/;"	f
sqlite3VdbeMemPrepareToChange	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemPrepareToChange(Vdbe *pVdbe, Mem *pMem){$/;"	f
sqlite3VdbeMemPrettyPrint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemPrettyPrint(Mem *pMem, char *zBuf){$/;"	f
sqlite3VdbeMemRealify	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemRealify(Mem *pMem){$/;"	f
sqlite3VdbeMemRelease	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemRelease(Mem *p){$/;"	f
sqlite3VdbeMemReleaseExternal	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemReleaseExternal(Mem *p){$/;"	f
sqlite3VdbeMemSetDouble	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetDouble(Mem *pMem, double val){$/;"	f
sqlite3VdbeMemSetDouble	drivers/SQLite/sqlite3/sqlite3.c	12965;"	d	file:
sqlite3VdbeMemSetInt64	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetInt64(Mem *pMem, i64 val){$/;"	f
sqlite3VdbeMemSetNull	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetNull(Mem *pMem){$/;"	f
sqlite3VdbeMemSetRowSet	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetRowSet(Mem *pMem){$/;"	f
sqlite3VdbeMemSetStr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemSetStr($/;"	f
sqlite3VdbeMemSetZeroBlob	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetZeroBlob(Mem *pMem, int n){$/;"	f
sqlite3VdbeMemShallowCopy	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemShallowCopy(Mem *pTo, const Mem *pFrom, int srcType){$/;"	f
sqlite3VdbeMemStoreType	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemStoreType(Mem *pMem){$/;"	f
sqlite3VdbeMemStringify	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemStringify(Mem *pMem, int enc){$/;"	f
sqlite3VdbeMemTooBig	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemTooBig(Mem *p){$/;"	f
sqlite3VdbeMemTranslate	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemTranslate(Mem *pMem, u8 desiredEnc){$/;"	f
sqlite3VdbeNoopComment	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeNoopComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeParameterIndex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeParameterIndex(Vdbe *p, const char *zName, int nName){$/;"	f
sqlite3VdbePrintOp	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbePrintOp(FILE *pOut, int pc, Op *pOp){$/;"	f
sqlite3VdbePrintSql	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbePrintSql(Vdbe *p){$/;"	f
sqlite3VdbeRealValue	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE double sqlite3VdbeRealValue(Mem *pMem){$/;"	f
sqlite3VdbeRecordCompare	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeRecordCompare($/;"	f
sqlite3VdbeRecordUnpack	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRecordUnpack($/;"	f
sqlite3VdbeReset	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeReset(Vdbe *p){$/;"	f
sqlite3VdbeResetStepResult	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeResetStepResult(Vdbe *p){$/;"	f
sqlite3VdbeResolveLabel	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeResolveLabel(Vdbe *p, int x){$/;"	f
sqlite3VdbeRewind	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRewind(Vdbe *p){$/;"	f
sqlite3VdbeRunOnlyOnce	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRunOnlyOnce(Vdbe *p){$/;"	f
sqlite3VdbeSerialGet	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialGet($/;"	f
sqlite3VdbeSerialPut	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialPut(u8 *buf, int nBuf, Mem *pMem, int file_format){$/;"	f
sqlite3VdbeSerialType	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialType(Mem *pMem, int file_format){$/;"	f
sqlite3VdbeSerialTypeLen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialTypeLen(u32 serial_type){$/;"	f
sqlite3VdbeSetChanges	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetChanges(sqlite3 *db, int nChange){$/;"	f
sqlite3VdbeSetColName	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSetColName($/;"	f
sqlite3VdbeSetNumCols	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetNumCols(Vdbe *p, int nResColumn){$/;"	f
sqlite3VdbeSetSql	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetSql(Vdbe *p, const char *z, int n, int isPrepareV2){$/;"	f
sqlite3VdbeSetVarmask	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetVarmask(Vdbe *v, int iVar){$/;"	f
sqlite3VdbeSorterClose	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSorterClose(sqlite3 *db, VdbeCursor *pCsr){$/;"	f
sqlite3VdbeSorterClose	drivers/SQLite/sqlite3/sqlite3.c	12998;"	d	file:
sqlite3VdbeSorterCompare	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterCompare($/;"	f
sqlite3VdbeSorterCompare	drivers/SQLite/sqlite3/sqlite3.c	13002;"	d	file:
sqlite3VdbeSorterInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterInit(sqlite3 *db, VdbeCursor *pCsr){$/;"	f
sqlite3VdbeSorterInit	drivers/SQLite/sqlite3/sqlite3.c	12996;"	d	file:
sqlite3VdbeSorterNext	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterNext(sqlite3 *db, VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterNext	drivers/SQLite/sqlite3/sqlite3.c	13001;"	d	file:
sqlite3VdbeSorterRewind	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterRewind(sqlite3 *db, VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterRewind	drivers/SQLite/sqlite3/sqlite3.c	13000;"	d	file:
sqlite3VdbeSorterRowkey	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterRowkey(VdbeCursor *pCsr, Mem *pOut){$/;"	f
sqlite3VdbeSorterRowkey	drivers/SQLite/sqlite3/sqlite3.c	12999;"	d	file:
sqlite3VdbeSorterWrite	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterWrite($/;"	f
sqlite3VdbeSorterWrite	drivers/SQLite/sqlite3/sqlite3.c	12997;"	d	file:
sqlite3VdbeSwap	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSwap(Vdbe *pA, Vdbe *pB){$/;"	f
sqlite3VdbeTakeOpArray	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeTakeOpArray(Vdbe *p, int *pnOp, int *pnMaxArg){$/;"	f
sqlite3VdbeTrace	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeTrace(Vdbe *p, FILE *trace){$/;"	f
sqlite3VdbeTransferError	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeTransferError(Vdbe *p){$/;"	f
sqlite3VdbeUsesBtree	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeUsesBtree(Vdbe *p, int i){$/;"	f
sqlite3ViewGetColumnNames	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ViewGetColumnNames(Parse *pParse, Table *pTable){$/;"	f
sqlite3ViewGetColumnNames	drivers/SQLite/sqlite3/sqlite3.c	11407;"	d	file:
sqlite3VtabArgExtend	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabArgExtend(Parse *pParse, Token *p){$/;"	f
sqlite3VtabArgInit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabArgInit(Parse *pParse){$/;"	f
sqlite3VtabBegin	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabBegin(sqlite3 *db, VTable *pVTab){$/;"	f
sqlite3VtabBeginParse	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabBeginParse($/;"	f
sqlite3VtabCallConnect	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallConnect(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabCallCreate	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallCreate(sqlite3 *db, int iDb, const char *zTab, char **pzErr){$/;"	f
sqlite3VtabCallDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallDestroy(sqlite3 *db, int iDb, const char *zTab){$/;"	f
sqlite3VtabClear	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabClear(sqlite3 *db, Table *p){$/;"	f
sqlite3VtabClear	drivers/SQLite/sqlite3/sqlite3.c	11761;"	d	file:
sqlite3VtabCommit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCommit(sqlite3 *db){$/;"	f
sqlite3VtabCommit	drivers/SQLite/sqlite3/sqlite3.c	11764;"	d	file:
sqlite3VtabFinishParse	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabFinishParse(Parse *pParse, Token *pEnd){$/;"	f
sqlite3VtabInSync	drivers/SQLite/sqlite3/sqlite3.c	11765;"	d	file:
sqlite3VtabInSync	drivers/SQLite/sqlite3/sqlite3.c	11781;"	d	file:
sqlite3VtabLock	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabLock(VTable *pVTab){$/;"	f
sqlite3VtabLock	drivers/SQLite/sqlite3/sqlite3.c	11766;"	d	file:
sqlite3VtabMakeWritable	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabMakeWritable(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabOverloadFunction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE FuncDef *sqlite3VtabOverloadFunction($/;"	f
sqlite3VtabRollback	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabRollback(sqlite3 *db){$/;"	f
sqlite3VtabRollback	drivers/SQLite/sqlite3/sqlite3.c	11763;"	d	file:
sqlite3VtabSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabSavepoint(sqlite3 *db, int op, int iSavepoint){$/;"	f
sqlite3VtabSavepoint	drivers/SQLite/sqlite3/sqlite3.c	11769;"	d	file:
sqlite3VtabSync	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabSync(sqlite3 *db, char **pzErrmsg){$/;"	f
sqlite3VtabSync	drivers/SQLite/sqlite3/sqlite3.c	11762;"	d	file:
sqlite3VtabUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabUnlock(VTable *pVTab){$/;"	f
sqlite3VtabUnlock	drivers/SQLite/sqlite3/sqlite3.c	11767;"	d	file:
sqlite3VtabUnlockList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabUnlockList(sqlite3 *db){$/;"	f
sqlite3VtabUnlockList	drivers/SQLite/sqlite3/sqlite3.c	11768;"	d	file:
sqlite3WalBeginReadTransaction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalBeginReadTransaction(Wal *pWal, int *pChanged){$/;"	f
sqlite3WalBeginReadTransaction	drivers/SQLite/sqlite3/sqlite3.c	37247;"	d	file:
sqlite3WalBeginWriteTransaction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalBeginWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalBeginWriteTransaction	drivers/SQLite/sqlite3/sqlite3.c	37251;"	d	file:
sqlite3WalCallback	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalCallback(Wal *pWal){$/;"	f
sqlite3WalCallback	drivers/SQLite/sqlite3/sqlite3.c	37258;"	d	file:
sqlite3WalCheckpoint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalCheckpoint($/;"	f
sqlite3WalCheckpoint	drivers/SQLite/sqlite3/sqlite3.c	37257;"	d	file:
sqlite3WalClose	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalClose($/;"	f
sqlite3WalClose	drivers/SQLite/sqlite3/sqlite3.c	37246;"	d	file:
sqlite3WalDbsize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE Pgno sqlite3WalDbsize(Wal *pWal){$/;"	f
sqlite3WalDbsize	drivers/SQLite/sqlite3/sqlite3.c	37250;"	d	file:
sqlite3WalDefaultHook	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalDefaultHook($/;"	f
sqlite3WalEndReadTransaction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalEndReadTransaction(Wal *pWal){$/;"	f
sqlite3WalEndReadTransaction	drivers/SQLite/sqlite3/sqlite3.c	37248;"	d	file:
sqlite3WalEndWriteTransaction	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalEndWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalEndWriteTransaction	drivers/SQLite/sqlite3/sqlite3.c	37252;"	d	file:
sqlite3WalExclusiveMode	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalExclusiveMode(Wal *pWal, int op){$/;"	f
sqlite3WalExclusiveMode	drivers/SQLite/sqlite3/sqlite3.c	37259;"	d	file:
sqlite3WalFrames	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalFrames($/;"	f
sqlite3WalFrames	drivers/SQLite/sqlite3/sqlite3.c	37256;"	d	file:
sqlite3WalHeapMemory	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalHeapMemory(Wal *pWal){$/;"	f
sqlite3WalHeapMemory	drivers/SQLite/sqlite3/sqlite3.c	37260;"	d	file:
sqlite3WalLimit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalLimit(Wal *pWal, i64 iLimit){$/;"	f
sqlite3WalLimit	drivers/SQLite/sqlite3/sqlite3.c	37245;"	d	file:
sqlite3WalOpen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalOpen($/;"	f
sqlite3WalOpen	drivers/SQLite/sqlite3/sqlite3.c	37244;"	d	file:
sqlite3WalRead	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalRead($/;"	f
sqlite3WalRead	drivers/SQLite/sqlite3/sqlite3.c	37249;"	d	file:
sqlite3WalSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalSavepoint(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepoint	drivers/SQLite/sqlite3/sqlite3.c	37254;"	d	file:
sqlite3WalSavepointUndo	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalSavepointUndo(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepointUndo	drivers/SQLite/sqlite3/sqlite3.c	37255;"	d	file:
sqlite3WalTrace	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalTrace = 0;$/;"	v
sqlite3WalUndo	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalUndo(Wal *pWal, int (*xUndo)(void *, Pgno), void *pUndoCtx){$/;"	f
sqlite3WalUndo	drivers/SQLite/sqlite3/sqlite3.c	37253;"	d	file:
sqlite3WalkExpr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkExpr(Walker *pWalker, Expr *pExpr){$/;"	f
sqlite3WalkExprList	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkExprList(Walker *pWalker, ExprList *p){$/;"	f
sqlite3WalkSelect	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelect(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectExpr	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelectExpr(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectFrom	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelectFrom(Walker *pWalker, Select *p){$/;"	f
sqlite3WhereBegin	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE WhereInfo *sqlite3WhereBegin($/;"	f
sqlite3WhereEnd	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereEnd(WhereInfo *pWInfo){$/;"	f
sqlite3WhereTrace	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereTrace = 0;$/;"	v
sqlite3XPrintf	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE void sqlite3XPrintf(StrAccum *p, const char *zFormat, ...){$/;"	f
sqlite3_aggregate_context	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_aggregate_context(sqlite3_context *p, int nByte){$/;"	f
sqlite3_aggregate_context	drivers/SQLite/sqlite3/sqlite3.c	89469;"	d	file:
sqlite3_aggregate_context	drivers/SQLite/sqlite3/sqlite3ext.h	253;"	d
sqlite3_aggregate_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_aggregate_count(sqlite3_context *p){$/;"	f
sqlite3_aggregate_count	drivers/SQLite/sqlite3/sqlite3.c	89471;"	d	file:
sqlite3_aggregate_count	drivers/SQLite/sqlite3/sqlite3ext.h	255;"	d
sqlite3_api_routines	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_api_routines {$/;"	s	file:
sqlite3_api_routines	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_api_routines sqlite3_api_routines;$/;"	t	typeref:struct:sqlite3_api_routines	file:
sqlite3_api_routines	drivers/SQLite/sqlite3/sqlite3ext.h	/^struct sqlite3_api_routines {$/;"	s
sqlite3_api_routines	drivers/SQLite/sqlite3/sqlite3ext.h	/^typedef struct sqlite3_api_routines sqlite3_api_routines;$/;"	t	typeref:struct:sqlite3_api_routines
sqlite3_auto_extension	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_auto_extension(void (*xInit)(void)){$/;"	f
sqlite3_backup	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_backup {$/;"	s	file:
sqlite3_backup	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup	file:
sqlite3_backup	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup
sqlite3_backup_finish	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_backup_finish(sqlite3_backup *p){$/;"	f
sqlite3_backup_finish	drivers/SQLite/sqlite3/sqlite3.c	89634;"	d	file:
sqlite3_backup_finish	drivers/SQLite/sqlite3/sqlite3ext.h	418;"	d
sqlite3_backup_init	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_backup *sqlite3_backup_init($/;"	f
sqlite3_backup_init	drivers/SQLite/sqlite3/sqlite3.c	89635;"	d	file:
sqlite3_backup_init	drivers/SQLite/sqlite3/sqlite3ext.h	419;"	d
sqlite3_backup_pagecount	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_backup_pagecount(sqlite3_backup *p){$/;"	f
sqlite3_backup_pagecount	drivers/SQLite/sqlite3/sqlite3.c	89636;"	d	file:
sqlite3_backup_pagecount	drivers/SQLite/sqlite3/sqlite3ext.h	420;"	d
sqlite3_backup_remaining	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_backup_remaining(sqlite3_backup *p){$/;"	f
sqlite3_backup_remaining	drivers/SQLite/sqlite3/sqlite3.c	89637;"	d	file:
sqlite3_backup_remaining	drivers/SQLite/sqlite3/sqlite3ext.h	421;"	d
sqlite3_backup_step	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_backup_step(sqlite3_backup *p, int nPage){$/;"	f
sqlite3_backup_step	drivers/SQLite/sqlite3/sqlite3.c	89638;"	d	file:
sqlite3_backup_step	drivers/SQLite/sqlite3/sqlite3ext.h	422;"	d
sqlite3_bind_blob	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_blob($/;"	f
sqlite3_bind_blob	drivers/SQLite/sqlite3/sqlite3.c	89473;"	d	file:
sqlite3_bind_blob	drivers/SQLite/sqlite3/sqlite3ext.h	257;"	d
sqlite3_bind_double	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_double(sqlite3_stmt *pStmt, int i, double rValue){$/;"	f
sqlite3_bind_double	drivers/SQLite/sqlite3/sqlite3.c	89474;"	d	file:
sqlite3_bind_double	drivers/SQLite/sqlite3/sqlite3ext.h	258;"	d
sqlite3_bind_int	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_int(sqlite3_stmt *p, int i, int iValue){$/;"	f
sqlite3_bind_int	drivers/SQLite/sqlite3/sqlite3.c	89475;"	d	file:
sqlite3_bind_int	drivers/SQLite/sqlite3/sqlite3ext.h	259;"	d
sqlite3_bind_int64	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_int64(sqlite3_stmt *pStmt, int i, sqlite_int64 iValue){$/;"	f
sqlite3_bind_int64	drivers/SQLite/sqlite3/sqlite3.c	89476;"	d	file:
sqlite3_bind_int64	drivers/SQLite/sqlite3/sqlite3ext.h	260;"	d
sqlite3_bind_null	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_null(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_null	drivers/SQLite/sqlite3/sqlite3.c	89477;"	d	file:
sqlite3_bind_null	drivers/SQLite/sqlite3/sqlite3ext.h	261;"	d
sqlite3_bind_parameter_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_parameter_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_bind_parameter_count	drivers/SQLite/sqlite3/sqlite3.c	89478;"	d	file:
sqlite3_bind_parameter_count	drivers/SQLite/sqlite3/sqlite3ext.h	262;"	d
sqlite3_bind_parameter_index	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_parameter_index(sqlite3_stmt *pStmt, const char *zName){$/;"	f
sqlite3_bind_parameter_index	drivers/SQLite/sqlite3/sqlite3.c	89479;"	d	file:
sqlite3_bind_parameter_index	drivers/SQLite/sqlite3/sqlite3ext.h	263;"	d
sqlite3_bind_parameter_name	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_bind_parameter_name(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_parameter_name	drivers/SQLite/sqlite3/sqlite3.c	89480;"	d	file:
sqlite3_bind_parameter_name	drivers/SQLite/sqlite3/sqlite3ext.h	264;"	d
sqlite3_bind_text	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_text( $/;"	f
sqlite3_bind_text	drivers/SQLite/sqlite3/sqlite3.c	89481;"	d	file:
sqlite3_bind_text	drivers/SQLite/sqlite3/sqlite3ext.h	265;"	d
sqlite3_bind_text16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_text16($/;"	f
sqlite3_bind_text16	drivers/SQLite/sqlite3/sqlite3.c	89482;"	d	file:
sqlite3_bind_text16	drivers/SQLite/sqlite3/sqlite3.c	89691;"	d	file:
sqlite3_bind_text16	drivers/SQLite/sqlite3/sqlite3ext.h	266;"	d
sqlite3_bind_value	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_value(sqlite3_stmt *pStmt, int i, const sqlite3_value *pValue){$/;"	f
sqlite3_bind_value	drivers/SQLite/sqlite3/sqlite3.c	89483;"	d	file:
sqlite3_bind_value	drivers/SQLite/sqlite3/sqlite3ext.h	267;"	d
sqlite3_bind_zeroblob	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_bind_zeroblob(sqlite3_stmt *pStmt, int i, int n){$/;"	f
sqlite3_bind_zeroblob	drivers/SQLite/sqlite3/sqlite3.c	89599;"	d	file:
sqlite3_bind_zeroblob	drivers/SQLite/sqlite3/sqlite3.c	89752;"	d	file:
sqlite3_bind_zeroblob	drivers/SQLite/sqlite3/sqlite3ext.h	383;"	d
sqlite3_blob	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob	file:
sqlite3_blob	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob
sqlite3_blob_bytes	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_blob_bytes(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_bytes	drivers/SQLite/sqlite3/sqlite3.c	89600;"	d	file:
sqlite3_blob_bytes	drivers/SQLite/sqlite3/sqlite3.c	89753;"	d	file:
sqlite3_blob_bytes	drivers/SQLite/sqlite3/sqlite3ext.h	384;"	d
sqlite3_blob_close	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_blob_close(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_close	drivers/SQLite/sqlite3/sqlite3.c	89601;"	d	file:
sqlite3_blob_close	drivers/SQLite/sqlite3/sqlite3.c	89754;"	d	file:
sqlite3_blob_close	drivers/SQLite/sqlite3/sqlite3ext.h	385;"	d
sqlite3_blob_open	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_blob_open($/;"	f
sqlite3_blob_open	drivers/SQLite/sqlite3/sqlite3.c	89602;"	d	file:
sqlite3_blob_open	drivers/SQLite/sqlite3/sqlite3.c	89755;"	d	file:
sqlite3_blob_open	drivers/SQLite/sqlite3/sqlite3ext.h	386;"	d
sqlite3_blob_read	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_blob_read(sqlite3_blob *pBlob, void *z, int n, int iOffset){$/;"	f
sqlite3_blob_read	drivers/SQLite/sqlite3/sqlite3.c	89603;"	d	file:
sqlite3_blob_read	drivers/SQLite/sqlite3/sqlite3.c	89756;"	d	file:
sqlite3_blob_read	drivers/SQLite/sqlite3/sqlite3ext.h	387;"	d
sqlite3_blob_reopen	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_blob_reopen(sqlite3_blob *pBlob, sqlite3_int64 iRow){$/;"	f
sqlite3_blob_reopen	drivers/SQLite/sqlite3/sqlite3.c	89655;"	d	file:
sqlite3_blob_reopen	drivers/SQLite/sqlite3/sqlite3.c	89758;"	d	file:
sqlite3_blob_reopen	drivers/SQLite/sqlite3/sqlite3ext.h	439;"	d
sqlite3_blob_write	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_blob_write(sqlite3_blob *pBlob, const void *z, int n, int iOffset){$/;"	f
sqlite3_blob_write	drivers/SQLite/sqlite3/sqlite3.c	89604;"	d	file:
sqlite3_blob_write	drivers/SQLite/sqlite3/sqlite3.c	89757;"	d	file:
sqlite3_blob_write	drivers/SQLite/sqlite3/sqlite3ext.h	388;"	d
sqlite3_busy_handler	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_busy_handler($/;"	f
sqlite3_busy_handler	drivers/SQLite/sqlite3/sqlite3.c	89484;"	d	file:
sqlite3_busy_handler	drivers/SQLite/sqlite3/sqlite3ext.h	268;"	d
sqlite3_busy_timeout	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_busy_timeout(sqlite3 *db, int ms){$/;"	f
sqlite3_busy_timeout	drivers/SQLite/sqlite3/sqlite3.c	89485;"	d	file:
sqlite3_busy_timeout	drivers/SQLite/sqlite3/sqlite3ext.h	269;"	d
sqlite3_callback	drivers/SQLite/sqlite3/sqlite3.c	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t	file:
sqlite3_callback	drivers/SQLite/sqlite3/sqlite3.h	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t
sqlite3_changes	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_changes(sqlite3 *db){$/;"	f
sqlite3_changes	drivers/SQLite/sqlite3/sqlite3.c	89486;"	d	file:
sqlite3_changes	drivers/SQLite/sqlite3/sqlite3ext.h	270;"	d
sqlite3_clear_bindings	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_clear_bindings(sqlite3_stmt *pStmt){$/;"	f
sqlite3_clear_bindings	drivers/SQLite/sqlite3/sqlite3.c	89598;"	d	file:
sqlite3_clear_bindings	drivers/SQLite/sqlite3/sqlite3ext.h	382;"	d
sqlite3_close	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_close(sqlite3 *db){$/;"	f
sqlite3_close	drivers/SQLite/sqlite3/sqlite3.c	89487;"	d	file:
sqlite3_close	drivers/SQLite/sqlite3/sqlite3ext.h	271;"	d
sqlite3_collation_needed	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_collation_needed($/;"	f
sqlite3_collation_needed	drivers/SQLite/sqlite3/sqlite3.c	89488;"	d	file:
sqlite3_collation_needed	drivers/SQLite/sqlite3/sqlite3ext.h	272;"	d
sqlite3_collation_needed16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_collation_needed16($/;"	f
sqlite3_collation_needed16	drivers/SQLite/sqlite3/sqlite3.c	89489;"	d	file:
sqlite3_collation_needed16	drivers/SQLite/sqlite3/sqlite3.c	89692;"	d	file:
sqlite3_collation_needed16	drivers/SQLite/sqlite3/sqlite3ext.h	273;"	d
sqlite3_column_blob	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_blob(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_blob	drivers/SQLite/sqlite3/sqlite3.c	89490;"	d	file:
sqlite3_column_blob	drivers/SQLite/sqlite3/sqlite3ext.h	274;"	d
sqlite3_column_bytes	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_column_bytes(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes	drivers/SQLite/sqlite3/sqlite3.c	89491;"	d	file:
sqlite3_column_bytes	drivers/SQLite/sqlite3/sqlite3ext.h	275;"	d
sqlite3_column_bytes16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_column_bytes16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes16	drivers/SQLite/sqlite3/sqlite3.c	89492;"	d	file:
sqlite3_column_bytes16	drivers/SQLite/sqlite3/sqlite3ext.h	276;"	d
sqlite3_column_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_column_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_column_count	drivers/SQLite/sqlite3/sqlite3.c	89493;"	d	file:
sqlite3_column_count	drivers/SQLite/sqlite3/sqlite3ext.h	277;"	d
sqlite3_column_database_name	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_column_database_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name	drivers/SQLite/sqlite3/sqlite3.c	89494;"	d	file:
sqlite3_column_database_name	drivers/SQLite/sqlite3/sqlite3.c	89677;"	d	file:
sqlite3_column_database_name	drivers/SQLite/sqlite3/sqlite3ext.h	278;"	d
sqlite3_column_database_name16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_database_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name16	drivers/SQLite/sqlite3/sqlite3.c	89495;"	d	file:
sqlite3_column_database_name16	drivers/SQLite/sqlite3/sqlite3.c	89678;"	d	file:
sqlite3_column_database_name16	drivers/SQLite/sqlite3/sqlite3.c	89710;"	d	file:
sqlite3_column_database_name16	drivers/SQLite/sqlite3/sqlite3ext.h	279;"	d
sqlite3_column_decltype	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_column_decltype(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype	drivers/SQLite/sqlite3/sqlite3.c	89496;"	d	file:
sqlite3_column_decltype	drivers/SQLite/sqlite3/sqlite3.c	89722;"	d	file:
sqlite3_column_decltype	drivers/SQLite/sqlite3/sqlite3ext.h	280;"	d
sqlite3_column_decltype16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_decltype16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype16	drivers/SQLite/sqlite3/sqlite3.c	89497;"	d	file:
sqlite3_column_decltype16	drivers/SQLite/sqlite3/sqlite3.c	89693;"	d	file:
sqlite3_column_decltype16	drivers/SQLite/sqlite3/sqlite3.c	89721;"	d	file:
sqlite3_column_decltype16	drivers/SQLite/sqlite3/sqlite3ext.h	281;"	d
sqlite3_column_double	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API double sqlite3_column_double(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_double	drivers/SQLite/sqlite3/sqlite3.c	89498;"	d	file:
sqlite3_column_double	drivers/SQLite/sqlite3/sqlite3ext.h	282;"	d
sqlite3_column_int	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_column_int(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int	drivers/SQLite/sqlite3/sqlite3.c	89499;"	d	file:
sqlite3_column_int	drivers/SQLite/sqlite3/sqlite3ext.h	283;"	d
sqlite3_column_int64	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite_int64 sqlite3_column_int64(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int64	drivers/SQLite/sqlite3/sqlite3.c	89500;"	d	file:
sqlite3_column_int64	drivers/SQLite/sqlite3/sqlite3ext.h	284;"	d
sqlite3_column_name	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_column_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name	drivers/SQLite/sqlite3/sqlite3.c	89501;"	d	file:
sqlite3_column_name	drivers/SQLite/sqlite3/sqlite3ext.h	285;"	d
sqlite3_column_name16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name16	drivers/SQLite/sqlite3/sqlite3.c	89502;"	d	file:
sqlite3_column_name16	drivers/SQLite/sqlite3/sqlite3.c	89694;"	d	file:
sqlite3_column_name16	drivers/SQLite/sqlite3/sqlite3ext.h	286;"	d
sqlite3_column_origin_name	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_column_origin_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name	drivers/SQLite/sqlite3/sqlite3.c	89503;"	d	file:
sqlite3_column_origin_name	drivers/SQLite/sqlite3/sqlite3.c	89681;"	d	file:
sqlite3_column_origin_name	drivers/SQLite/sqlite3/sqlite3ext.h	287;"	d
sqlite3_column_origin_name16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_origin_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name16	drivers/SQLite/sqlite3/sqlite3.c	89504;"	d	file:
sqlite3_column_origin_name16	drivers/SQLite/sqlite3/sqlite3.c	89682;"	d	file:
sqlite3_column_origin_name16	drivers/SQLite/sqlite3/sqlite3.c	89712;"	d	file:
sqlite3_column_origin_name16	drivers/SQLite/sqlite3/sqlite3ext.h	288;"	d
sqlite3_column_table_name	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_column_table_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name	drivers/SQLite/sqlite3/sqlite3.c	89505;"	d	file:
sqlite3_column_table_name	drivers/SQLite/sqlite3/sqlite3.c	89679;"	d	file:
sqlite3_column_table_name	drivers/SQLite/sqlite3/sqlite3ext.h	289;"	d
sqlite3_column_table_name16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_table_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name16	drivers/SQLite/sqlite3/sqlite3.c	89506;"	d	file:
sqlite3_column_table_name16	drivers/SQLite/sqlite3/sqlite3.c	89680;"	d	file:
sqlite3_column_table_name16	drivers/SQLite/sqlite3/sqlite3.c	89711;"	d	file:
sqlite3_column_table_name16	drivers/SQLite/sqlite3/sqlite3ext.h	290;"	d
sqlite3_column_text	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const unsigned char *sqlite3_column_text(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text	drivers/SQLite/sqlite3/sqlite3.c	89507;"	d	file:
sqlite3_column_text	drivers/SQLite/sqlite3/sqlite3ext.h	291;"	d
sqlite3_column_text16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_column_text16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text16	drivers/SQLite/sqlite3/sqlite3.c	89508;"	d	file:
sqlite3_column_text16	drivers/SQLite/sqlite3/sqlite3.c	89695;"	d	file:
sqlite3_column_text16	drivers/SQLite/sqlite3/sqlite3ext.h	292;"	d
sqlite3_column_type	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_column_type(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_type	drivers/SQLite/sqlite3/sqlite3.c	89509;"	d	file:
sqlite3_column_type	drivers/SQLite/sqlite3/sqlite3ext.h	293;"	d
sqlite3_column_value	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_value *sqlite3_column_value(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_value	drivers/SQLite/sqlite3/sqlite3.c	89510;"	d	file:
sqlite3_column_value	drivers/SQLite/sqlite3/sqlite3ext.h	294;"	d
sqlite3_commit_hook	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_commit_hook($/;"	f
sqlite3_commit_hook	drivers/SQLite/sqlite3/sqlite3.c	89511;"	d	file:
sqlite3_commit_hook	drivers/SQLite/sqlite3/sqlite3ext.h	295;"	d
sqlite3_compileoption_get	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_compileoption_get(int N){$/;"	f
sqlite3_compileoption_get	drivers/SQLite/sqlite3/sqlite3.c	89639;"	d	file:
sqlite3_compileoption_get	drivers/SQLite/sqlite3/sqlite3ext.h	423;"	d
sqlite3_compileoption_used	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_compileoption_used(const char *zOptName){$/;"	f
sqlite3_compileoption_used	drivers/SQLite/sqlite3/sqlite3.c	89640;"	d	file:
sqlite3_compileoption_used	drivers/SQLite/sqlite3/sqlite3ext.h	424;"	d
sqlite3_complete	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_complete(const char *zSql){$/;"	f
sqlite3_complete	drivers/SQLite/sqlite3/sqlite3.c	89512;"	d	file:
sqlite3_complete	drivers/SQLite/sqlite3/sqlite3.c	89716;"	d	file:
sqlite3_complete	drivers/SQLite/sqlite3/sqlite3ext.h	296;"	d
sqlite3_complete16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_complete16(const void *zSql){$/;"	f
sqlite3_complete16	drivers/SQLite/sqlite3/sqlite3.c	89513;"	d	file:
sqlite3_complete16	drivers/SQLite/sqlite3/sqlite3.c	89696;"	d	file:
sqlite3_complete16	drivers/SQLite/sqlite3/sqlite3.c	89717;"	d	file:
sqlite3_complete16	drivers/SQLite/sqlite3/sqlite3ext.h	297;"	d
sqlite3_config	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_config(int op, ...){$/;"	f
sqlite3_context	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_context {$/;"	s	file:
sqlite3_context	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context	file:
sqlite3_context	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context
sqlite3_context_db_handle	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite3 *sqlite3_context_db_handle(sqlite3_context *p){$/;"	f
sqlite3_context_db_handle	drivers/SQLite/sqlite3/sqlite3.c	89628;"	d	file:
sqlite3_context_db_handle	drivers/SQLite/sqlite3/sqlite3ext.h	412;"	d
sqlite3_create_collation	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_collation($/;"	f
sqlite3_create_collation	drivers/SQLite/sqlite3/sqlite3.c	89514;"	d	file:
sqlite3_create_collation	drivers/SQLite/sqlite3/sqlite3ext.h	298;"	d
sqlite3_create_collation16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_collation16($/;"	f
sqlite3_create_collation16	drivers/SQLite/sqlite3/sqlite3.c	89515;"	d	file:
sqlite3_create_collation16	drivers/SQLite/sqlite3/sqlite3.c	89697;"	d	file:
sqlite3_create_collation16	drivers/SQLite/sqlite3/sqlite3ext.h	299;"	d
sqlite3_create_collation_v2	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_collation_v2($/;"	f
sqlite3_create_collation_v2	drivers/SQLite/sqlite3/sqlite3.c	89605;"	d	file:
sqlite3_create_collation_v2	drivers/SQLite/sqlite3/sqlite3ext.h	389;"	d
sqlite3_create_function	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_function($/;"	f
sqlite3_create_function	drivers/SQLite/sqlite3/sqlite3.c	89516;"	d	file:
sqlite3_create_function	drivers/SQLite/sqlite3/sqlite3ext.h	300;"	d
sqlite3_create_function16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_function16($/;"	f
sqlite3_create_function16	drivers/SQLite/sqlite3/sqlite3.c	89517;"	d	file:
sqlite3_create_function16	drivers/SQLite/sqlite3/sqlite3.c	89698;"	d	file:
sqlite3_create_function16	drivers/SQLite/sqlite3/sqlite3ext.h	301;"	d
sqlite3_create_function_v2	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_function_v2($/;"	f
sqlite3_create_function_v2	drivers/SQLite/sqlite3/sqlite3.c	89641;"	d	file:
sqlite3_create_function_v2	drivers/SQLite/sqlite3/sqlite3ext.h	425;"	d
sqlite3_create_module	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_module($/;"	f
sqlite3_create_module	drivers/SQLite/sqlite3/sqlite3.c	89518;"	d	file:
sqlite3_create_module	drivers/SQLite/sqlite3/sqlite3.c	89730;"	d	file:
sqlite3_create_module	drivers/SQLite/sqlite3/sqlite3ext.h	302;"	d
sqlite3_create_module_v2	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_create_module_v2($/;"	f
sqlite3_create_module_v2	drivers/SQLite/sqlite3/sqlite3.c	89519;"	d	file:
sqlite3_create_module_v2	drivers/SQLite/sqlite3/sqlite3.c	89731;"	d	file:
sqlite3_create_module_v2	drivers/SQLite/sqlite3/sqlite3ext.h	303;"	d
sqlite3_current_time	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_current_time = 0;  \/* Fake system time in seconds since 1970. *\/$/;"	v
sqlite3_current_time	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_current_time = 0;$/;"	v
sqlite3_data_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_data_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_data_count	drivers/SQLite/sqlite3/sqlite3.c	89520;"	d	file:
sqlite3_data_count	drivers/SQLite/sqlite3/sqlite3ext.h	304;"	d
sqlite3_db_config	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_db_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_db_config	drivers/SQLite/sqlite3/sqlite3.c	89642;"	d	file:
sqlite3_db_config	drivers/SQLite/sqlite3/sqlite3ext.h	426;"	d
sqlite3_db_handle	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite3 *sqlite3_db_handle(sqlite3_stmt *pStmt){$/;"	f
sqlite3_db_handle	drivers/SQLite/sqlite3/sqlite3.c	89521;"	d	file:
sqlite3_db_handle	drivers/SQLite/sqlite3/sqlite3ext.h	305;"	d
sqlite3_db_mutex	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_mutex *sqlite3_db_mutex(sqlite3 *db){$/;"	f
sqlite3_db_mutex	drivers/SQLite/sqlite3/sqlite3.c	89643;"	d	file:
sqlite3_db_mutex	drivers/SQLite/sqlite3/sqlite3ext.h	427;"	d
sqlite3_db_status	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_db_status($/;"	f
sqlite3_db_status	drivers/SQLite/sqlite3/sqlite3.c	89644;"	d	file:
sqlite3_db_status	drivers/SQLite/sqlite3/sqlite3ext.h	428;"	d
sqlite3_debug_mutex	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_debug_mutex {$/;"	s	file:
sqlite3_debug_mutex	drivers/SQLite/sqlite3/sqlite3.c	/^} sqlite3_debug_mutex;$/;"	t	typeref:struct:sqlite3_debug_mutex	file:
sqlite3_declare_vtab	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_declare_vtab(sqlite3 *db, const char *zCreateTable){$/;"	f
sqlite3_declare_vtab	drivers/SQLite/sqlite3/sqlite3.c	89522;"	d	file:
sqlite3_declare_vtab	drivers/SQLite/sqlite3/sqlite3.c	89732;"	d	file:
sqlite3_declare_vtab	drivers/SQLite/sqlite3/sqlite3ext.h	306;"	d
sqlite3_destructor_type	drivers/SQLite/sqlite3/sqlite3.c	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t	file:
sqlite3_destructor_type	drivers/SQLite/sqlite3/sqlite3.h	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t
sqlite3_diskfull	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_diskfull = 0;$/;"	v
sqlite3_diskfull_pending	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_diskfull_pending = 0;$/;"	v
sqlite3_enable_load_extension	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_enable_load_extension(sqlite3 *db, int onoff){$/;"	f
sqlite3_enable_shared_cache	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_enable_shared_cache(int enable){$/;"	f
sqlite3_enable_shared_cache	drivers/SQLite/sqlite3/sqlite3.c	89523;"	d	file:
sqlite3_enable_shared_cache	drivers/SQLite/sqlite3/sqlite3.c	89738;"	d	file:
sqlite3_enable_shared_cache	drivers/SQLite/sqlite3/sqlite3ext.h	307;"	d
sqlite3_errcode	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_errcode(sqlite3 *db){$/;"	f
sqlite3_errcode	drivers/SQLite/sqlite3/sqlite3.c	89524;"	d	file:
sqlite3_errcode	drivers/SQLite/sqlite3/sqlite3ext.h	308;"	d
sqlite3_errmsg	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_errmsg(sqlite3 *db){$/;"	f
sqlite3_errmsg	drivers/SQLite/sqlite3/sqlite3.c	89525;"	d	file:
sqlite3_errmsg	drivers/SQLite/sqlite3/sqlite3ext.h	309;"	d
sqlite3_errmsg16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_errmsg16(sqlite3 *db){$/;"	f
sqlite3_errmsg16	drivers/SQLite/sqlite3/sqlite3.c	89526;"	d	file:
sqlite3_errmsg16	drivers/SQLite/sqlite3/sqlite3.c	89699;"	d	file:
sqlite3_errmsg16	drivers/SQLite/sqlite3/sqlite3ext.h	310;"	d
sqlite3_exec	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_exec($/;"	f
sqlite3_exec	drivers/SQLite/sqlite3/sqlite3.c	89527;"	d	file:
sqlite3_exec	drivers/SQLite/sqlite3/sqlite3ext.h	311;"	d
sqlite3_expired	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_expired(sqlite3_stmt *pStmt){$/;"	f
sqlite3_expired	drivers/SQLite/sqlite3/sqlite3.c	89529;"	d	file:
sqlite3_expired	drivers/SQLite/sqlite3/sqlite3ext.h	313;"	d
sqlite3_extended_errcode	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_extended_errcode(sqlite3 *db){$/;"	f
sqlite3_extended_errcode	drivers/SQLite/sqlite3/sqlite3.c	89645;"	d	file:
sqlite3_extended_errcode	drivers/SQLite/sqlite3/sqlite3ext.h	429;"	d
sqlite3_extended_result_codes	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_extended_result_codes(sqlite3 *db, int onoff){$/;"	f
sqlite3_extended_result_codes	drivers/SQLite/sqlite3/sqlite3.c	89629;"	d	file:
sqlite3_extended_result_codes	drivers/SQLite/sqlite3/sqlite3ext.h	413;"	d
sqlite3_extension_init	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_extension_init($/;"	f
sqlite3_file	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_file {$/;"	s	file:
sqlite3_file	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file	file:
sqlite3_file	drivers/SQLite/sqlite3/sqlite3.h	/^struct sqlite3_file {$/;"	s
sqlite3_file	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file
sqlite3_file_control	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_file_control(sqlite3 *db, const char *zDbName, int op, void *pArg){$/;"	f
sqlite3_file_control	drivers/SQLite/sqlite3/sqlite3.c	89606;"	d	file:
sqlite3_file_control	drivers/SQLite/sqlite3/sqlite3ext.h	390;"	d
sqlite3_finalize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_finalize(sqlite3_stmt *pStmt){$/;"	f
sqlite3_finalize	drivers/SQLite/sqlite3/sqlite3.c	89531;"	d	file:
sqlite3_finalize	drivers/SQLite/sqlite3/sqlite3ext.h	315;"	d
sqlite3_found_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_found_count = 0;$/;"	v
sqlite3_free	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_free(void *p){$/;"	f
sqlite3_free	drivers/SQLite/sqlite3/sqlite3.c	89532;"	d	file:
sqlite3_free	drivers/SQLite/sqlite3/sqlite3ext.h	316;"	d
sqlite3_free_table	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_free_table($/;"	f
sqlite3_free_table	drivers/SQLite/sqlite3/sqlite3.c	89533;"	d	file:
sqlite3_free_table	drivers/SQLite/sqlite3/sqlite3.c	89747;"	d	file:
sqlite3_free_table	drivers/SQLite/sqlite3/sqlite3ext.h	317;"	d
sqlite3_fts3_enable_parentheses	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_fts3_enable_parentheses = 0;$/;"	v
sqlite3_fts3_enable_parentheses	drivers/SQLite/sqlite3/sqlite3.c	120259;"	d	file:
sqlite3_fts3_enable_parentheses	drivers/SQLite/sqlite3/sqlite3.c	120261;"	d	file:
sqlite3_fullsync_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_fullsync_count = 0;$/;"	v
sqlite3_get_autocommit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_get_autocommit(sqlite3 *db){$/;"	f
sqlite3_get_autocommit	drivers/SQLite/sqlite3/sqlite3.c	89534;"	d	file:
sqlite3_get_autocommit	drivers/SQLite/sqlite3/sqlite3ext.h	318;"	d
sqlite3_get_auxdata	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_get_auxdata(sqlite3_context *pCtx, int iArg){$/;"	f
sqlite3_get_auxdata	drivers/SQLite/sqlite3/sqlite3.c	89535;"	d	file:
sqlite3_get_auxdata	drivers/SQLite/sqlite3/sqlite3ext.h	319;"	d
sqlite3_get_table	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_get_table($/;"	f
sqlite3_get_table	drivers/SQLite/sqlite3/sqlite3.c	89536;"	d	file:
sqlite3_get_table	drivers/SQLite/sqlite3/sqlite3.c	89748;"	d	file:
sqlite3_get_table	drivers/SQLite/sqlite3/sqlite3ext.h	320;"	d
sqlite3_get_table_cb	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3_get_table_cb(void *pArg, int nCol, char **argv, char **colv){$/;"	f	file:
sqlite3_global_recover	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_global_recover(void){$/;"	f
sqlite3_global_recover	drivers/SQLite/sqlite3/sqlite3.c	89538;"	d	file:
sqlite3_global_recover	drivers/SQLite/sqlite3/sqlite3ext.h	322;"	d
sqlite3_hostid_num	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_hostid_num = 0;$/;"	v
sqlite3_index_constraint	drivers/SQLite/sqlite3/sqlite3.c	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_constraint	drivers/SQLite/sqlite3/sqlite3.h	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info
sqlite3_index_constraint_usage	drivers/SQLite/sqlite3/sqlite3.c	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_constraint_usage	drivers/SQLite/sqlite3/sqlite3.h	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info
sqlite3_index_info	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_index_info {$/;"	s	file:
sqlite3_index_info	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info	file:
sqlite3_index_info	drivers/SQLite/sqlite3/sqlite3.h	/^struct sqlite3_index_info {$/;"	s
sqlite3_index_info	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info
sqlite3_index_orderby	drivers/SQLite/sqlite3/sqlite3.c	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_orderby	drivers/SQLite/sqlite3/sqlite3.h	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info
sqlite3_initialize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_initialize(void){$/;"	f
sqlite3_int64	drivers/SQLite/sqlite3/sqlite3.c	/^typedef sqlite_int64 sqlite3_int64;$/;"	t	file:
sqlite3_int64	drivers/SQLite/sqlite3/sqlite3.h	/^typedef sqlite_int64 sqlite3_int64;$/;"	t
sqlite3_interrupt	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_interrupt(sqlite3 *db){$/;"	f
sqlite3_interrupt	drivers/SQLite/sqlite3/sqlite3.c	89540;"	d	file:
sqlite3_interrupt	drivers/SQLite/sqlite3/sqlite3ext.h	324;"	d
sqlite3_interrupt_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_interrupt_count = 0;$/;"	v
sqlite3_io_error_benign	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_io_error_benign = 0;         \/* True if errors are benign *\/$/;"	v
sqlite3_io_error_hardhit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_io_error_hardhit = 0;        \/* Number of non-benign errors *\/$/;"	v
sqlite3_io_error_hit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_io_error_hit = 0;            \/* Total number of I\/O Errors *\/$/;"	v
sqlite3_io_error_pending	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_io_error_pending = 0;        \/* Count down to first I\/O error *\/$/;"	v
sqlite3_io_error_persist	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_io_error_persist = 0;        \/* True if I\/O errors persist *\/$/;"	v
sqlite3_io_methods	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_io_methods {$/;"	s	file:
sqlite3_io_methods	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods	file:
sqlite3_io_methods	drivers/SQLite/sqlite3/sqlite3.h	/^struct sqlite3_io_methods {$/;"	s
sqlite3_io_methods	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods
sqlite3_last_insert_rowid	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite_int64 sqlite3_last_insert_rowid(sqlite3 *db){$/;"	f
sqlite3_last_insert_rowid	drivers/SQLite/sqlite3/sqlite3.c	89541;"	d	file:
sqlite3_last_insert_rowid	drivers/SQLite/sqlite3/sqlite3ext.h	325;"	d
sqlite3_libversion	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_libversion(void){ return sqlite3_version; }$/;"	f
sqlite3_libversion	drivers/SQLite/sqlite3/sqlite3.c	89542;"	d	file:
sqlite3_libversion	drivers/SQLite/sqlite3/sqlite3ext.h	326;"	d
sqlite3_libversion_number	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_libversion_number(void){ return SQLITE_VERSION_NUMBER; }$/;"	f
sqlite3_libversion_number	drivers/SQLite/sqlite3/sqlite3.c	89543;"	d	file:
sqlite3_libversion_number	drivers/SQLite/sqlite3/sqlite3ext.h	327;"	d
sqlite3_like_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_like_count = 0;$/;"	v
sqlite3_limit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_limit(sqlite3 *db, int limitId, int newLimit){$/;"	f
sqlite3_limit	drivers/SQLite/sqlite3/sqlite3.c	89630;"	d	file:
sqlite3_limit	drivers/SQLite/sqlite3/sqlite3ext.h	414;"	d
sqlite3_load_extension	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_load_extension($/;"	f
sqlite3_log	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_log(int iErrCode, const char *zFormat, ...){$/;"	f
sqlite3_log	drivers/SQLite/sqlite3/sqlite3.c	89646;"	d	file:
sqlite3_log	drivers/SQLite/sqlite3/sqlite3ext.h	430;"	d
sqlite3_malloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_malloc(int n){$/;"	f
sqlite3_malloc	drivers/SQLite/sqlite3/sqlite3.c	89544;"	d	file:
sqlite3_malloc	drivers/SQLite/sqlite3/sqlite3ext.h	328;"	d
sqlite3_max_blobsize	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_max_blobsize = 0;$/;"	v
sqlite3_mem_methods	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_mem_methods {$/;"	s	file:
sqlite3_mem_methods	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods	file:
sqlite3_mem_methods	drivers/SQLite/sqlite3/sqlite3.h	/^struct sqlite3_mem_methods {$/;"	s
sqlite3_mem_methods	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods
sqlite3_memdebug_vfs_oom_test	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_memdebug_vfs_oom_test = 1;$/;"	v
sqlite3_memory_alarm	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_memory_alarm($/;"	f
sqlite3_memory_highwater	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_int64 sqlite3_memory_highwater(int resetFlag){$/;"	f
sqlite3_memory_highwater	drivers/SQLite/sqlite3/sqlite3.c	89607;"	d	file:
sqlite3_memory_highwater	drivers/SQLite/sqlite3/sqlite3ext.h	391;"	d
sqlite3_memory_used	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_int64 sqlite3_memory_used(void){$/;"	f
sqlite3_memory_used	drivers/SQLite/sqlite3/sqlite3.c	89608;"	d	file:
sqlite3_memory_used	drivers/SQLite/sqlite3/sqlite3ext.h	392;"	d
sqlite3_module	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_module {$/;"	s	file:
sqlite3_module	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module	file:
sqlite3_module	drivers/SQLite/sqlite3/sqlite3.h	/^struct sqlite3_module {$/;"	s
sqlite3_module	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module
sqlite3_mprintf	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_mprintf(const char *zFormat, ...){$/;"	f
sqlite3_mprintf	drivers/SQLite/sqlite3/sqlite3.c	89545;"	d	file:
sqlite3_mprintf	drivers/SQLite/sqlite3/sqlite3ext.h	329;"	d
sqlite3_mutex	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_mutex {$/;"	s	file:
sqlite3_mutex	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex	file:
sqlite3_mutex	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex
sqlite3_mutex_alloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_mutex *sqlite3_mutex_alloc(int id){$/;"	f
sqlite3_mutex_alloc	drivers/SQLite/sqlite3/sqlite3.c	89609;"	d	file:
sqlite3_mutex_alloc	drivers/SQLite/sqlite3/sqlite3.c	9325;"	d	file:
sqlite3_mutex_alloc	drivers/SQLite/sqlite3/sqlite3ext.h	393;"	d
sqlite3_mutex_enter	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_mutex_enter(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_enter	drivers/SQLite/sqlite3/sqlite3.c	89610;"	d	file:
sqlite3_mutex_enter	drivers/SQLite/sqlite3/sqlite3.c	9327;"	d	file:
sqlite3_mutex_enter	drivers/SQLite/sqlite3/sqlite3ext.h	394;"	d
sqlite3_mutex_free	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_mutex_free(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_free	drivers/SQLite/sqlite3/sqlite3.c	89611;"	d	file:
sqlite3_mutex_free	drivers/SQLite/sqlite3/sqlite3.c	9326;"	d	file:
sqlite3_mutex_free	drivers/SQLite/sqlite3/sqlite3ext.h	395;"	d
sqlite3_mutex_held	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_mutex_held(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_held	drivers/SQLite/sqlite3/sqlite3.c	9330;"	d	file:
sqlite3_mutex_leave	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_mutex_leave(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_leave	drivers/SQLite/sqlite3/sqlite3.c	89612;"	d	file:
sqlite3_mutex_leave	drivers/SQLite/sqlite3/sqlite3.c	9329;"	d	file:
sqlite3_mutex_leave	drivers/SQLite/sqlite3/sqlite3ext.h	396;"	d
sqlite3_mutex_methods	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_mutex_methods {$/;"	s	file:
sqlite3_mutex_methods	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods	file:
sqlite3_mutex_methods	drivers/SQLite/sqlite3/sqlite3.h	/^struct sqlite3_mutex_methods {$/;"	s
sqlite3_mutex_methods	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods
sqlite3_mutex_notheld	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_mutex_notheld(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_notheld	drivers/SQLite/sqlite3/sqlite3.c	9331;"	d	file:
sqlite3_mutex_try	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_mutex_try(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_try	drivers/SQLite/sqlite3/sqlite3.c	89613;"	d	file:
sqlite3_mutex_try	drivers/SQLite/sqlite3/sqlite3.c	9328;"	d	file:
sqlite3_mutex_try	drivers/SQLite/sqlite3/sqlite3ext.h	397;"	d
sqlite3_next_stmt	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_stmt *sqlite3_next_stmt(sqlite3 *pDb, sqlite3_stmt *pStmt){$/;"	f
sqlite3_next_stmt	drivers/SQLite/sqlite3/sqlite3.c	89631;"	d	file:
sqlite3_next_stmt	drivers/SQLite/sqlite3/sqlite3ext.h	415;"	d
sqlite3_open	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_open($/;"	f
sqlite3_open	drivers/SQLite/sqlite3/sqlite3.c	89546;"	d	file:
sqlite3_open	drivers/SQLite/sqlite3/sqlite3ext.h	330;"	d
sqlite3_open16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_open16($/;"	f
sqlite3_open16	drivers/SQLite/sqlite3/sqlite3.c	89547;"	d	file:
sqlite3_open16	drivers/SQLite/sqlite3/sqlite3.c	89700;"	d	file:
sqlite3_open16	drivers/SQLite/sqlite3/sqlite3ext.h	331;"	d
sqlite3_open_file_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_open_file_count = 0;$/;"	v
sqlite3_open_v2	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_open_v2($/;"	f
sqlite3_open_v2	drivers/SQLite/sqlite3/sqlite3.c	89614;"	d	file:
sqlite3_open_v2	drivers/SQLite/sqlite3/sqlite3ext.h	398;"	d
sqlite3_opentemp_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_opentemp_count = 0;$/;"	v
sqlite3_os_end	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_os_end(void){ $/;"	f
sqlite3_os_end	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_os_end(void){$/;"	f
sqlite3_os_init	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_os_init(void){ $/;"	f
sqlite3_os_init	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_os_init(void){$/;"	f
sqlite3_os_type	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_os_type = 0;$/;"	v
sqlite3_os_type	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqlite3_os_type = 0;$/;"	v	file:
sqlite3_overload_function	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_overload_function($/;"	f
sqlite3_overload_function	drivers/SQLite/sqlite3/sqlite3.c	89595;"	d	file:
sqlite3_overload_function	drivers/SQLite/sqlite3/sqlite3ext.h	379;"	d
sqlite3_pager_readdb_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_pager_readdb_count = 0;    \/* Number of full pages read from DB *\/$/;"	v
sqlite3_pager_writedb_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_pager_writedb_count = 0;   \/* Number of full pages written to DB *\/$/;"	v
sqlite3_pager_writej_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_pager_writej_count = 0;    \/* Number of pages written to journal *\/$/;"	v
sqlite3_pcache	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache	file:
sqlite3_pcache	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache
sqlite3_pcache_methods	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_pcache_methods {$/;"	s	file:
sqlite3_pcache_methods	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods	file:
sqlite3_pcache_methods	drivers/SQLite/sqlite3/sqlite3.h	/^struct sqlite3_pcache_methods {$/;"	s
sqlite3_pcache_methods	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods
sqlite3_prepare	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_prepare($/;"	f
sqlite3_prepare	drivers/SQLite/sqlite3/sqlite3.c	89548;"	d	file:
sqlite3_prepare	drivers/SQLite/sqlite3/sqlite3ext.h	332;"	d
sqlite3_prepare16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_prepare16($/;"	f
sqlite3_prepare16	drivers/SQLite/sqlite3/sqlite3.c	89549;"	d	file:
sqlite3_prepare16	drivers/SQLite/sqlite3/sqlite3.c	89701;"	d	file:
sqlite3_prepare16	drivers/SQLite/sqlite3/sqlite3ext.h	333;"	d
sqlite3_prepare16_v2	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_prepare16_v2($/;"	f
sqlite3_prepare16_v2	drivers/SQLite/sqlite3/sqlite3.c	89551;"	d	file:
sqlite3_prepare16_v2	drivers/SQLite/sqlite3/sqlite3.c	89597;"	d	file:
sqlite3_prepare16_v2	drivers/SQLite/sqlite3/sqlite3.c	89702;"	d	file:
sqlite3_prepare16_v2	drivers/SQLite/sqlite3/sqlite3ext.h	335;"	d
sqlite3_prepare16_v2	drivers/SQLite/sqlite3/sqlite3ext.h	381;"	d
sqlite3_prepare_v2	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_prepare_v2($/;"	f
sqlite3_prepare_v2	drivers/SQLite/sqlite3/sqlite3.c	89550;"	d	file:
sqlite3_prepare_v2	drivers/SQLite/sqlite3/sqlite3.c	89596;"	d	file:
sqlite3_prepare_v2	drivers/SQLite/sqlite3/sqlite3ext.h	334;"	d
sqlite3_prepare_v2	drivers/SQLite/sqlite3/sqlite3ext.h	380;"	d
sqlite3_profile	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_profile($/;"	f
sqlite3_profile	drivers/SQLite/sqlite3/sqlite3.c	89552;"	d	file:
sqlite3_profile	drivers/SQLite/sqlite3/sqlite3.c	89742;"	d	file:
sqlite3_profile	drivers/SQLite/sqlite3/sqlite3ext.h	336;"	d
sqlite3_progress_handler	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_progress_handler($/;"	f
sqlite3_progress_handler	drivers/SQLite/sqlite3/sqlite3.c	89553;"	d	file:
sqlite3_progress_handler	drivers/SQLite/sqlite3/sqlite3.c	89726;"	d	file:
sqlite3_progress_handler	drivers/SQLite/sqlite3/sqlite3ext.h	337;"	d
sqlite3_query_plan	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API char sqlite3_query_plan[BMS*2*40];  \/* Text of the join *\/$/;"	v
sqlite3_randomness	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_randomness(int N, void *pBuf){$/;"	f
sqlite3_randomness	drivers/SQLite/sqlite3/sqlite3.c	89627;"	d	file:
sqlite3_randomness	drivers/SQLite/sqlite3/sqlite3ext.h	411;"	d
sqlite3_realloc	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_realloc(void *pOld, int n){$/;"	f
sqlite3_realloc	drivers/SQLite/sqlite3/sqlite3.c	89554;"	d	file:
sqlite3_realloc	drivers/SQLite/sqlite3/sqlite3ext.h	338;"	d
sqlite3_release_memory	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_release_memory(int n){$/;"	f
sqlite3_release_memory	drivers/SQLite/sqlite3/sqlite3.c	89615;"	d	file:
sqlite3_release_memory	drivers/SQLite/sqlite3/sqlite3ext.h	399;"	d
sqlite3_reset	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_reset	drivers/SQLite/sqlite3/sqlite3.c	89555;"	d	file:
sqlite3_reset	drivers/SQLite/sqlite3/sqlite3ext.h	339;"	d
sqlite3_reset_auto_extension	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_reset_auto_extension(void){$/;"	f
sqlite3_result_blob	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_blob($/;"	f
sqlite3_result_blob	drivers/SQLite/sqlite3/sqlite3.c	89556;"	d	file:
sqlite3_result_blob	drivers/SQLite/sqlite3/sqlite3ext.h	340;"	d
sqlite3_result_double	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_double(sqlite3_context *pCtx, double rVal){$/;"	f
sqlite3_result_double	drivers/SQLite/sqlite3/sqlite3.c	89557;"	d	file:
sqlite3_result_double	drivers/SQLite/sqlite3/sqlite3ext.h	341;"	d
sqlite3_result_error	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_error(sqlite3_context *pCtx, const char *z, int n){$/;"	f
sqlite3_result_error	drivers/SQLite/sqlite3/sqlite3.c	89558;"	d	file:
sqlite3_result_error	drivers/SQLite/sqlite3/sqlite3ext.h	342;"	d
sqlite3_result_error16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_error16(sqlite3_context *pCtx, const void *z, int n){$/;"	f
sqlite3_result_error16	drivers/SQLite/sqlite3/sqlite3.c	89559;"	d	file:
sqlite3_result_error16	drivers/SQLite/sqlite3/sqlite3.c	89703;"	d	file:
sqlite3_result_error16	drivers/SQLite/sqlite3/sqlite3ext.h	343;"	d
sqlite3_result_error_code	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_error_code(sqlite3_context *pCtx, int errCode){$/;"	f
sqlite3_result_error_code	drivers/SQLite/sqlite3/sqlite3.c	89625;"	d	file:
sqlite3_result_error_code	drivers/SQLite/sqlite3/sqlite3ext.h	409;"	d
sqlite3_result_error_nomem	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_error_nomem(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_nomem	drivers/SQLite/sqlite3/sqlite3.c	89616;"	d	file:
sqlite3_result_error_nomem	drivers/SQLite/sqlite3/sqlite3ext.h	400;"	d
sqlite3_result_error_toobig	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_error_toobig(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_toobig	drivers/SQLite/sqlite3/sqlite3.c	89617;"	d	file:
sqlite3_result_error_toobig	drivers/SQLite/sqlite3/sqlite3ext.h	401;"	d
sqlite3_result_int	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_int(sqlite3_context *pCtx, int iVal){$/;"	f
sqlite3_result_int	drivers/SQLite/sqlite3/sqlite3.c	89560;"	d	file:
sqlite3_result_int	drivers/SQLite/sqlite3/sqlite3ext.h	344;"	d
sqlite3_result_int64	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_int64(sqlite3_context *pCtx, i64 iVal){$/;"	f
sqlite3_result_int64	drivers/SQLite/sqlite3/sqlite3.c	89561;"	d	file:
sqlite3_result_int64	drivers/SQLite/sqlite3/sqlite3ext.h	345;"	d
sqlite3_result_null	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_null(sqlite3_context *pCtx){$/;"	f
sqlite3_result_null	drivers/SQLite/sqlite3/sqlite3.c	89562;"	d	file:
sqlite3_result_null	drivers/SQLite/sqlite3/sqlite3ext.h	346;"	d
sqlite3_result_text	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_text($/;"	f
sqlite3_result_text	drivers/SQLite/sqlite3/sqlite3.c	89563;"	d	file:
sqlite3_result_text	drivers/SQLite/sqlite3/sqlite3ext.h	347;"	d
sqlite3_result_text16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_text16($/;"	f
sqlite3_result_text16	drivers/SQLite/sqlite3/sqlite3.c	89564;"	d	file:
sqlite3_result_text16	drivers/SQLite/sqlite3/sqlite3.c	89704;"	d	file:
sqlite3_result_text16	drivers/SQLite/sqlite3/sqlite3ext.h	348;"	d
sqlite3_result_text16be	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_text16be($/;"	f
sqlite3_result_text16be	drivers/SQLite/sqlite3/sqlite3.c	89565;"	d	file:
sqlite3_result_text16be	drivers/SQLite/sqlite3/sqlite3.c	89705;"	d	file:
sqlite3_result_text16be	drivers/SQLite/sqlite3/sqlite3ext.h	349;"	d
sqlite3_result_text16le	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_text16le($/;"	f
sqlite3_result_text16le	drivers/SQLite/sqlite3/sqlite3.c	89566;"	d	file:
sqlite3_result_text16le	drivers/SQLite/sqlite3/sqlite3.c	89706;"	d	file:
sqlite3_result_text16le	drivers/SQLite/sqlite3/sqlite3ext.h	350;"	d
sqlite3_result_value	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_value(sqlite3_context *pCtx, sqlite3_value *pValue){$/;"	f
sqlite3_result_value	drivers/SQLite/sqlite3/sqlite3.c	89567;"	d	file:
sqlite3_result_value	drivers/SQLite/sqlite3/sqlite3ext.h	351;"	d
sqlite3_result_zeroblob	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_result_zeroblob(sqlite3_context *pCtx, int n){$/;"	f
sqlite3_result_zeroblob	drivers/SQLite/sqlite3/sqlite3.c	89624;"	d	file:
sqlite3_result_zeroblob	drivers/SQLite/sqlite3/sqlite3ext.h	408;"	d
sqlite3_rollback_hook	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_rollback_hook($/;"	f
sqlite3_rollback_hook	drivers/SQLite/sqlite3/sqlite3.c	89568;"	d	file:
sqlite3_rollback_hook	drivers/SQLite/sqlite3/sqlite3ext.h	352;"	d
sqlite3_rtree_geometry	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_rtree_geometry {$/;"	s	file:
sqlite3_rtree_geometry	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry	file:
sqlite3_rtree_geometry	drivers/SQLite/sqlite3/sqlite3.h	/^struct sqlite3_rtree_geometry {$/;"	s
sqlite3_rtree_geometry	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry
sqlite3_rtree_geometry_callback	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_rtree_geometry_callback($/;"	f
sqlite3_search_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_search_count = 0;$/;"	v
sqlite3_set_authorizer	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_set_authorizer($/;"	f
sqlite3_set_authorizer	drivers/SQLite/sqlite3/sqlite3.c	89569;"	d	file:
sqlite3_set_authorizer	drivers/SQLite/sqlite3/sqlite3.c	89687;"	d	file:
sqlite3_set_authorizer	drivers/SQLite/sqlite3/sqlite3ext.h	353;"	d
sqlite3_set_auxdata	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_set_auxdata($/;"	f
sqlite3_set_auxdata	drivers/SQLite/sqlite3/sqlite3.c	89570;"	d	file:
sqlite3_set_auxdata	drivers/SQLite/sqlite3/sqlite3ext.h	354;"	d
sqlite3_shutdown	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_shutdown(void){$/;"	f
sqlite3_sleep	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_sleep(int ms){$/;"	f
sqlite3_sleep	drivers/SQLite/sqlite3/sqlite3.c	89618;"	d	file:
sqlite3_sleep	drivers/SQLite/sqlite3/sqlite3ext.h	402;"	d
sqlite3_snprintf	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_snprintf(int n, char *zBuf, const char *zFormat, ...){$/;"	f
sqlite3_snprintf	drivers/SQLite/sqlite3/sqlite3.c	89571;"	d	file:
sqlite3_snprintf	drivers/SQLite/sqlite3/sqlite3ext.h	355;"	d
sqlite3_soft_heap_limit	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_soft_heap_limit(int n){$/;"	f
sqlite3_soft_heap_limit	drivers/SQLite/sqlite3/sqlite3.c	89619;"	d	file:
sqlite3_soft_heap_limit	drivers/SQLite/sqlite3/sqlite3ext.h	403;"	d
sqlite3_soft_heap_limit64	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_int64 sqlite3_soft_heap_limit64(sqlite3_int64 n){$/;"	f
sqlite3_soft_heap_limit64	drivers/SQLite/sqlite3/sqlite3.c	89647;"	d	file:
sqlite3_soft_heap_limit64	drivers/SQLite/sqlite3/sqlite3ext.h	431;"	d
sqlite3_sort_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_sort_count = 0;$/;"	v
sqlite3_sourceid	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_sourceid(void){ return SQLITE_SOURCE_ID; }$/;"	f
sqlite3_sourceid	drivers/SQLite/sqlite3/sqlite3.c	89648;"	d	file:
sqlite3_sourceid	drivers/SQLite/sqlite3/sqlite3ext.h	432;"	d
sqlite3_sql	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_sql(sqlite3_stmt *pStmt){$/;"	f
sqlite3_sql	drivers/SQLite/sqlite3/sqlite3.c	89632;"	d	file:
sqlite3_sql	drivers/SQLite/sqlite3/sqlite3ext.h	416;"	d
sqlite3_status	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_status(int op, int *pCurrent, int *pHighwater, int resetFlag){$/;"	f
sqlite3_status	drivers/SQLite/sqlite3/sqlite3.c	89633;"	d	file:
sqlite3_status	drivers/SQLite/sqlite3/sqlite3ext.h	417;"	d
sqlite3_step	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_step(sqlite3_stmt *pStmt){$/;"	f
sqlite3_step	drivers/SQLite/sqlite3/sqlite3.c	89572;"	d	file:
sqlite3_step	drivers/SQLite/sqlite3/sqlite3ext.h	356;"	d
sqlite3_stmt	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt	file:
sqlite3_stmt	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt
sqlite3_stmt_readonly	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_stmt_readonly(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_status	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_stmt_status(sqlite3_stmt *pStmt, int op, int resetFlag){$/;"	f
sqlite3_stmt_status	drivers/SQLite/sqlite3/sqlite3.c	89649;"	d	file:
sqlite3_stmt_status	drivers/SQLite/sqlite3/sqlite3ext.h	433;"	d
sqlite3_strnicmp	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_strnicmp(const char *zLeft, const char *zRight, int N){$/;"	f
sqlite3_strnicmp	drivers/SQLite/sqlite3/sqlite3.c	89650;"	d	file:
sqlite3_strnicmp	drivers/SQLite/sqlite3/sqlite3ext.h	434;"	d
sqlite3_sync_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_sync_count = 0;$/;"	v
sqlite3_syscall_ptr	drivers/SQLite/sqlite3/sqlite3.c	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t	file:
sqlite3_syscall_ptr	drivers/SQLite/sqlite3/sqlite3.h	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t
sqlite3_table_column_metadata	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_table_column_metadata($/;"	f
sqlite3_table_column_metadata	drivers/SQLite/sqlite3/sqlite3.c	89573;"	d	file:
sqlite3_table_column_metadata	drivers/SQLite/sqlite3/sqlite3.c	89683;"	d	file:
sqlite3_table_column_metadata	drivers/SQLite/sqlite3/sqlite3ext.h	357;"	d
sqlite3_temp_directory	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_temp_directory = 0;$/;"	v
sqlite3_temp_directory	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_temp_directory;$/;"	v
sqlite3_temp_directory	drivers/SQLite/sqlite3/sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_temp_directory;$/;"	v
sqlite3_test_control	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_test_control(int op, ...){$/;"	f
sqlite3_test_control	drivers/SQLite/sqlite3/sqlite3.c	89626;"	d	file:
sqlite3_test_control	drivers/SQLite/sqlite3/sqlite3ext.h	410;"	d
sqlite3_thread_cleanup	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void sqlite3_thread_cleanup(void){$/;"	f
sqlite3_thread_cleanup	drivers/SQLite/sqlite3/sqlite3.c	89574;"	d	file:
sqlite3_thread_cleanup	drivers/SQLite/sqlite3/sqlite3ext.h	358;"	d
sqlite3_threadsafe	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_threadsafe(void){ return SQLITE_THREADSAFE; }$/;"	f
sqlite3_threadsafe	drivers/SQLite/sqlite3/sqlite3.c	89623;"	d	file:
sqlite3_threadsafe	drivers/SQLite/sqlite3/sqlite3ext.h	407;"	d
sqlite3_tokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_tokenizer {$/;"	s	file:
sqlite3_tokenizer	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_tokenizer sqlite3_tokenizer;$/;"	t	typeref:struct:sqlite3_tokenizer	file:
sqlite3_tokenizer_cursor	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_tokenizer_cursor {$/;"	s	file:
sqlite3_tokenizer_cursor	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_tokenizer_cursor sqlite3_tokenizer_cursor;$/;"	t	typeref:struct:sqlite3_tokenizer_cursor	file:
sqlite3_tokenizer_module	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_tokenizer_module {$/;"	s	file:
sqlite3_tokenizer_module	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_tokenizer_module sqlite3_tokenizer_module;$/;"	t	typeref:struct:sqlite3_tokenizer_module	file:
sqlite3_total_changes	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_total_changes(sqlite3 *db){$/;"	f
sqlite3_total_changes	drivers/SQLite/sqlite3/sqlite3.c	89575;"	d	file:
sqlite3_total_changes	drivers/SQLite/sqlite3/sqlite3ext.h	359;"	d
sqlite3_trace	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_trace(sqlite3 *db, void (*xTrace)(void*,const char*), void *pArg){$/;"	f
sqlite3_trace	drivers/SQLite/sqlite3/sqlite3.c	89576;"	d	file:
sqlite3_trace	drivers/SQLite/sqlite3/sqlite3.c	89743;"	d	file:
sqlite3_trace	drivers/SQLite/sqlite3/sqlite3ext.h	360;"	d
sqlite3_transfer_bindings	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_transfer_bindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3_transfer_bindings	drivers/SQLite/sqlite3/sqlite3.c	89578;"	d	file:
sqlite3_transfer_bindings	drivers/SQLite/sqlite3/sqlite3ext.h	362;"	d
sqlite3_uint64	drivers/SQLite/sqlite3/sqlite3.c	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t	file:
sqlite3_uint64	drivers/SQLite/sqlite3/sqlite3.h	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t
sqlite3_unlock_notify	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_unlock_notify($/;"	f
sqlite3_unlock_notify	drivers/SQLite/sqlite3/sqlite3.c	89651;"	d	file:
sqlite3_unlock_notify	drivers/SQLite/sqlite3/sqlite3ext.h	435;"	d
sqlite3_update_hook	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_update_hook($/;"	f
sqlite3_update_hook	drivers/SQLite/sqlite3/sqlite3.c	89580;"	d	file:
sqlite3_update_hook	drivers/SQLite/sqlite3/sqlite3ext.h	364;"	d
sqlite3_uri_parameter	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char *sqlite3_uri_parameter(const char *zFilename, const char *zParam){$/;"	f
sqlite3_user_data	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_user_data(sqlite3_context *p){$/;"	f
sqlite3_user_data	drivers/SQLite/sqlite3/sqlite3.c	89581;"	d	file:
sqlite3_user_data	drivers/SQLite/sqlite3/sqlite3ext.h	365;"	d
sqlite3_value	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem	file:
sqlite3_value	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem
sqlite3_value_blob	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_value_blob(sqlite3_value *pVal){$/;"	f
sqlite3_value_blob	drivers/SQLite/sqlite3/sqlite3.c	89582;"	d	file:
sqlite3_value_blob	drivers/SQLite/sqlite3/sqlite3ext.h	366;"	d
sqlite3_value_bytes	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_value_bytes(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes	drivers/SQLite/sqlite3/sqlite3.c	89583;"	d	file:
sqlite3_value_bytes	drivers/SQLite/sqlite3/sqlite3ext.h	367;"	d
sqlite3_value_bytes16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_value_bytes16(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes16	drivers/SQLite/sqlite3/sqlite3.c	89584;"	d	file:
sqlite3_value_bytes16	drivers/SQLite/sqlite3/sqlite3ext.h	368;"	d
sqlite3_value_double	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API double sqlite3_value_double(sqlite3_value *pVal){$/;"	f
sqlite3_value_double	drivers/SQLite/sqlite3/sqlite3.c	89585;"	d	file:
sqlite3_value_double	drivers/SQLite/sqlite3/sqlite3ext.h	369;"	d
sqlite3_value_int	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_value_int(sqlite3_value *pVal){$/;"	f
sqlite3_value_int	drivers/SQLite/sqlite3/sqlite3.c	89586;"	d	file:
sqlite3_value_int	drivers/SQLite/sqlite3/sqlite3ext.h	370;"	d
sqlite3_value_int64	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite_int64 sqlite3_value_int64(sqlite3_value *pVal){$/;"	f
sqlite3_value_int64	drivers/SQLite/sqlite3/sqlite3.c	89587;"	d	file:
sqlite3_value_int64	drivers/SQLite/sqlite3/sqlite3ext.h	371;"	d
sqlite3_value_numeric_type	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_value_numeric_type(sqlite3_value *pVal){$/;"	f
sqlite3_value_numeric_type	drivers/SQLite/sqlite3/sqlite3.c	89588;"	d	file:
sqlite3_value_numeric_type	drivers/SQLite/sqlite3/sqlite3ext.h	372;"	d
sqlite3_value_text	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const unsigned char *sqlite3_value_text(sqlite3_value *pVal){$/;"	f
sqlite3_value_text	drivers/SQLite/sqlite3/sqlite3.c	89589;"	d	file:
sqlite3_value_text	drivers/SQLite/sqlite3/sqlite3ext.h	373;"	d
sqlite3_value_text16	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_value_text16(sqlite3_value* pVal){$/;"	f
sqlite3_value_text16	drivers/SQLite/sqlite3/sqlite3.c	89590;"	d	file:
sqlite3_value_text16	drivers/SQLite/sqlite3/sqlite3.c	89707;"	d	file:
sqlite3_value_text16	drivers/SQLite/sqlite3/sqlite3ext.h	374;"	d
sqlite3_value_text16be	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_value_text16be(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16be	drivers/SQLite/sqlite3/sqlite3.c	89591;"	d	file:
sqlite3_value_text16be	drivers/SQLite/sqlite3/sqlite3.c	89708;"	d	file:
sqlite3_value_text16be	drivers/SQLite/sqlite3/sqlite3ext.h	375;"	d
sqlite3_value_text16le	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const void *sqlite3_value_text16le(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16le	drivers/SQLite/sqlite3/sqlite3.c	89592;"	d	file:
sqlite3_value_text16le	drivers/SQLite/sqlite3/sqlite3.c	89709;"	d	file:
sqlite3_value_text16le	drivers/SQLite/sqlite3/sqlite3ext.h	376;"	d
sqlite3_value_type	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_value_type(sqlite3_value* pVal){$/;"	f
sqlite3_value_type	drivers/SQLite/sqlite3/sqlite3.c	89593;"	d	file:
sqlite3_value_type	drivers/SQLite/sqlite3/sqlite3ext.h	377;"	d
sqlite3_version	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API const char sqlite3_version[] = SQLITE_VERSION;$/;"	v
sqlite3_version	drivers/SQLite/sqlite3/sqlite3.h	/^SQLITE_API SQLITE_EXTERN const char sqlite3_version[];$/;"	v
sqlite3_vfs	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_vfs {$/;"	s	file:
sqlite3_vfs	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs	file:
sqlite3_vfs	drivers/SQLite/sqlite3/sqlite3.h	/^struct sqlite3_vfs {$/;"	s
sqlite3_vfs	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs
sqlite3_vfs_find	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API sqlite3_vfs *sqlite3_vfs_find(const char *zVfs){$/;"	f
sqlite3_vfs_find	drivers/SQLite/sqlite3/sqlite3.c	89620;"	d	file:
sqlite3_vfs_find	drivers/SQLite/sqlite3/sqlite3ext.h	404;"	d
sqlite3_vfs_register	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_vfs_register(sqlite3_vfs *pVfs, int makeDflt){$/;"	f
sqlite3_vfs_register	drivers/SQLite/sqlite3/sqlite3.c	89621;"	d	file:
sqlite3_vfs_register	drivers/SQLite/sqlite3/sqlite3ext.h	405;"	d
sqlite3_vfs_unregister	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_vfs_unregister(sqlite3_vfs *pVfs){$/;"	f
sqlite3_vfs_unregister	drivers/SQLite/sqlite3/sqlite3.c	89622;"	d	file:
sqlite3_vfs_unregister	drivers/SQLite/sqlite3/sqlite3ext.h	406;"	d
sqlite3_vmprintf	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_vmprintf(const char *zFormat, va_list ap){$/;"	f
sqlite3_vmprintf	drivers/SQLite/sqlite3/sqlite3.c	89594;"	d	file:
sqlite3_vmprintf	drivers/SQLite/sqlite3/sqlite3ext.h	378;"	d
sqlite3_vsnprintf	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_vsnprintf(int n, char *zBuf, const char *zFormat, va_list ap){$/;"	f
sqlite3_vtab	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_vtab {$/;"	s	file:
sqlite3_vtab	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab	file:
sqlite3_vtab	drivers/SQLite/sqlite3/sqlite3.h	/^struct sqlite3_vtab {$/;"	s
sqlite3_vtab	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab
sqlite3_vtab_config	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_vtab_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_vtab_config	drivers/SQLite/sqlite3/sqlite3.c	89656;"	d	file:
sqlite3_vtab_config	drivers/SQLite/sqlite3/sqlite3.c	89733;"	d	file:
sqlite3_vtab_config	drivers/SQLite/sqlite3/sqlite3ext.h	440;"	d
sqlite3_vtab_cursor	drivers/SQLite/sqlite3/sqlite3.c	/^struct sqlite3_vtab_cursor {$/;"	s	file:
sqlite3_vtab_cursor	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor	file:
sqlite3_vtab_cursor	drivers/SQLite/sqlite3/sqlite3.h	/^struct sqlite3_vtab_cursor {$/;"	s
sqlite3_vtab_cursor	drivers/SQLite/sqlite3/sqlite3.h	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor
sqlite3_vtab_on_conflict	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_vtab_on_conflict(sqlite3 *db){$/;"	f
sqlite3_vtab_on_conflict	drivers/SQLite/sqlite3/sqlite3.c	89657;"	d	file:
sqlite3_vtab_on_conflict	drivers/SQLite/sqlite3/sqlite3.c	89734;"	d	file:
sqlite3_vtab_on_conflict	drivers/SQLite/sqlite3/sqlite3ext.h	441;"	d
sqlite3_wal_autocheckpoint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_wal_autocheckpoint(sqlite3 *db, int nFrame){$/;"	f
sqlite3_wal_autocheckpoint	drivers/SQLite/sqlite3/sqlite3.c	89652;"	d	file:
sqlite3_wal_autocheckpoint	drivers/SQLite/sqlite3/sqlite3ext.h	436;"	d
sqlite3_wal_checkpoint	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_wal_checkpoint(sqlite3 *db, const char *zDb){$/;"	f
sqlite3_wal_checkpoint	drivers/SQLite/sqlite3/sqlite3.c	89653;"	d	file:
sqlite3_wal_checkpoint	drivers/SQLite/sqlite3/sqlite3ext.h	437;"	d
sqlite3_wal_checkpoint_v2	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_wal_checkpoint_v2($/;"	f
sqlite3_wal_hook	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API void *sqlite3_wal_hook($/;"	f
sqlite3_wal_hook	drivers/SQLite/sqlite3/sqlite3.c	89654;"	d	file:
sqlite3_wal_hook	drivers/SQLite/sqlite3/sqlite3ext.h	438;"	d
sqlite3_win32_mbcs_to_utf8	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_win32_mbcs_to_utf8(const char *zFilename){$/;"	f
sqlite3_win32_utf8_to_mbcs	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API char *sqlite3_win32_utf8_to_mbcs(const char *zFilename){$/;"	f
sqlite3_xferopt_count	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_API int sqlite3_xferopt_count;$/;"	v
sqlite3one	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const int sqlite3one = 1;$/;"	v
sqlite3one	drivers/SQLite/sqlite3/sqlite3.c	/^SQLITE_PRIVATE const int sqlite3one;$/;"	v
sqliteAuthBadReturnCode	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqliteAuthBadReturnCode(Parse *pParse){$/;"	f	file:
sqliteDefaultBusyCallback	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqliteDefaultBusyCallback($/;"	f	file:
sqliteDeleteColumnNames	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqliteDeleteColumnNames(sqlite3 *db, Table *pTable){$/;"	f	file:
sqliteErrorFromPosixError	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqliteErrorFromPosixError(int posixError, int sqliteIOErr) {$/;"	f	file:
sqliteHashData	drivers/SQLite/sqlite3/sqlite3.c	7428;"	d	file:
sqliteHashFirst	drivers/SQLite/sqlite3/sqlite3.c	7426;"	d	file:
sqliteHashNext	drivers/SQLite/sqlite3/sqlite3.c	7427;"	d	file:
sqliteProcessJoin	drivers/SQLite/sqlite3/sqlite3.c	/^static int sqliteProcessJoin(Parse *pParse, Select *p){$/;"	f	file:
sqliteViewResetAll	drivers/SQLite/sqlite3/sqlite3.c	/^static void sqliteViewResetAll(sqlite3 *db, int idx){$/;"	f	file:
sqliteViewResetAll	drivers/SQLite/sqlite3/sqlite3.c	81292;"	d	file:
sqlite_int64	drivers/SQLite/sqlite3/sqlite3.c	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t	file:
sqlite_int64	drivers/SQLite/sqlite3/sqlite3.c	/^  typedef __int64 sqlite_int64;$/;"	t	file:
sqlite_int64	drivers/SQLite/sqlite3/sqlite3.c	/^  typedef long long int sqlite_int64;$/;"	t	file:
sqlite_int64	drivers/SQLite/sqlite3/sqlite3.h	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t
sqlite_int64	drivers/SQLite/sqlite3/sqlite3.h	/^  typedef __int64 sqlite_int64;$/;"	t
sqlite_int64	drivers/SQLite/sqlite3/sqlite3.h	/^  typedef long long int sqlite_int64;$/;"	t
sqlite_uint64	drivers/SQLite/sqlite3/sqlite3.c	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t	file:
sqlite_uint64	drivers/SQLite/sqlite3/sqlite3.c	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t	file:
sqlite_uint64	drivers/SQLite/sqlite3/sqlite3.c	/^  typedef unsigned long long int sqlite_uint64;$/;"	t	file:
sqlite_uint64	drivers/SQLite/sqlite3/sqlite3.h	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t
sqlite_uint64	drivers/SQLite/sqlite3/sqlite3.h	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t
sqlite_uint64	drivers/SQLite/sqlite3/sqlite3.h	/^  typedef unsigned long long int sqlite_uint64;$/;"	t
sqllen	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SHORT       sqllen;                         $/;"	m	struct:__anon63
sqln	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SHORT       sqln;                           $/;"	m	struct:__anon64
sqlname	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SCHAR       sqlname[32];            $/;"	m	struct:__anon63
sqlname_length	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SHORT       sqlname_length;         $/;"	m	struct:__anon63
sqlscale	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SHORT       sqlscale;                       $/;"	m	struct:__anon63
sqlsubtype	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SHORT       sqlsubtype;                     $/;"	m	struct:__anon63
sqltype	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SHORT       sqltype;                        $/;"	m	struct:__anon63
sqlvar	drivers/Firebird/ibpp/core/ibase.h	/^        XSQLVAR sqlvar[1];                      $/;"	m	struct:__anon64
srcHeight	drivers/GL/glxext.h	/^    int srcXOrigin, srcYOrigin, srcWidth, srcHeight;$/;"	m	struct:__anon96
srcWidth	drivers/GL/glxext.h	/^    int srcXOrigin, srcYOrigin, srcWidth, srcHeight;$/;"	m	struct:__anon96
srcXOrigin	drivers/GL/glxext.h	/^    int srcXOrigin, srcYOrigin, srcWidth, srcHeight;$/;"	m	struct:__anon96
srcYOrigin	drivers/GL/glxext.h	/^    int srcXOrigin, srcYOrigin, srcWidth, srcHeight;$/;"	m	struct:__anon96
srid	kernel/TeGeometry.h	/^	virtual int srid() const$/;"	f	class:TeGeometry
srid	kernel/TeGeometry.h	/^	virtual void srid(const int& srid)$/;"	f	class:TeGeometry
srid_	kernel/TeGeometry.h	/^	int		srid_;		\/\/!<  The srid associated to the geometry$/;"	m	class:TeGeometry
srvhp_	drivers/Oracle/TeOCIConnect.h	/^	OCIServer*		srvhp_;		\/\/!< service context OCI handle - represents a connection $/;"	m	class:TeOCIConnection
ss_	kernel/TeGeneralizedProxMatrix.h	/^	TeProxMatrixSlicingStrategy* ss_;   $/;"	m	class:TeGeneralizedProxMatrix
stDDL	drivers/Firebird/ibpp/core/ibpp.h	/^		stSelect, stInsert, stUpdate, stDelete,	stDDL, stExecProcedure,$/;"	e	enum:IBPP::STT
stDelete	drivers/Firebird/ibpp/core/ibpp.h	/^		stSelect, stInsert, stUpdate, stDelete,	stDDL, stExecProcedure,$/;"	e	enum:IBPP::STT
stExecProcedure	drivers/Firebird/ibpp/core/ibpp.h	/^		stSelect, stInsert, stUpdate, stDelete,	stDDL, stExecProcedure,$/;"	e	enum:IBPP::STT
stInsert	drivers/Firebird/ibpp/core/ibpp.h	/^		stSelect, stInsert, stUpdate, stDelete,	stDDL, stExecProcedure,$/;"	e	enum:IBPP::STT
stLat1	kernel/TeProjection.h	/^	double	stLat1() { return GPstlat1; }$/;"	f	class:TeProjection
stLat2	kernel/TeProjection.h	/^	double  stLat2() { return GPstlat2; }$/;"	f	class:TeProjection
stSavePoint	drivers/Firebird/ibpp/core/ibpp.h	/^		stSelectUpdate, stSetGenerator, stSavePoint};$/;"	e	enum:IBPP::STT
stSelect	drivers/Firebird/ibpp/core/ibpp.h	/^		stSelect, stInsert, stUpdate, stDelete,	stDDL, stExecProcedure,$/;"	e	enum:IBPP::STT
stSelectUpdate	drivers/Firebird/ibpp/core/ibpp.h	/^		stSelectUpdate, stSetGenerator, stSavePoint};$/;"	e	enum:IBPP::STT
stSetGenerator	drivers/Firebird/ibpp/core/ibpp.h	/^		stSelectUpdate, stSetGenerator, stSavePoint};$/;"	e	enum:IBPP::STT
stUnknown	drivers/Firebird/ibpp/core/ibpp.h	/^	enum STT {stUnknown, stUnsupported,$/;"	e	enum:IBPP::STT
stUnsupported	drivers/Firebird/ibpp/core/ibpp.h	/^	enum STT {stUnknown, stUnsupported,$/;"	e	enum:IBPP::STT
stUpdate	drivers/Firebird/ibpp/core/ibpp.h	/^		stSelect, stInsert, stUpdate, stDelete,	stDDL, stExecProcedure,$/;"	e	enum:IBPP::STT
standard_deviation_diff_index	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::standard_deviation_diff_index(TePDITypes::TePDIRasterPtrType original_raster, int original_band, TePDITypes::TePDIRasterPtrType fused_raster, int fused_band, TeSharedPtr<double> sdd)$/;"	f	class:TePDIFusionIndexes
star_oh	drivers/SQLite/sqlite3/sqlite3.c	/^static int star_oh(const char *z){$/;"	f	file:
start	kernel/TeThread.cpp	/^bool TeThread::start()$/;"	f	class:TeThread
startEndFlag	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char startEndFlag;       \/* 1=rel to end of fork, 0=rel to start *\/$/;"	m	struct:ByteRangeLockPB2	file:
startSession	kernel/TeErrorLog.cpp	/^TeErrorLog::startSession ( const string& errLogFileName)$/;"	f	class:TeErrorLog
startThread	kernel/TeThread.cpp	/^void* TeThread::startThread( void* threadPtr )$/;"	f	class:TeThread
startTime	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 startTime;          \/* Time when query started - used for profiling *\/$/;"	m	struct:Vdbe	file:
startX_	image_processing/TePDIParaSegSegmentsBlock.hpp	/^      unsigned int startX_;$/;"	m	class:TePDIParaSegSegmentsBlock
startY_	image_processing/TePDIParaSegSegmentsBlock.hpp	/^      unsigned int startY_;$/;"	m	class:TePDIParaSegSegmentsBlock
startingEdgeTest	image_processing/TePDIRaster2Vector.cpp	/^bool TePDIRaster2Vector::startingEdgeTest( const int& x, $/;"	f	class:TePDIRaster2Vector
stat3Get	drivers/SQLite/sqlite3/sqlite3.c	/^static void stat3Get($/;"	f	file:
stat3GetFuncdef	drivers/SQLite/sqlite3/sqlite3.c	/^static const FuncDef stat3GetFuncdef = {$/;"	v	file:
stat3Init	drivers/SQLite/sqlite3/sqlite3.c	/^static void stat3Init($/;"	f	file:
stat3InitFuncdef	drivers/SQLite/sqlite3/sqlite3.c	/^static const FuncDef stat3InitFuncdef = {$/;"	v	file:
stat3Push	drivers/SQLite/sqlite3/sqlite3.c	/^static void stat3Push($/;"	f	file:
stat3PushFuncdef	drivers/SQLite/sqlite3/sqlite3.c	/^static const FuncDef stat3PushFuncdef = {$/;"	v	file:
stat_	kernel/TeStatistics.h	/^	TeStatisticValMap	stat_;$/;"	m	struct:TeStatisticsDimension
state	drivers/PostgreSQL/TePGInterface.h	/^		bool state(void) const$/;"	f	class:TePGRecordset
state	drivers/PostgreSQL/TePGInterface.h	/^        bool state(void) const { return (PQstatus(pg_connection_) == CONNECTION_OK); }$/;"	f	class:TePGConnection
state	utils/mtrand.cpp	/^unsigned long MTRand_int32::state[n] = {0x0UL};$/;"	m	class:MTRand_int32	file:
state	utils/mtrand.h	/^  static unsigned long state[n]; \/\/ state vector array$/;"	m	class:MTRand_int32
stateChange	drivers/qt/TeQtThemeItem.cpp	/^void TeQtThemeItem::stateChange(bool visible)$/;"	f	class:TeQtThemeItem
state_nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^   nzttState state_nzttPersona;               \/* persona state-requested\/ready *\/$/;"	m	struct:nzttPersona
stateno	drivers/SQLite/sqlite3/sqlite3.c	/^  YYACTIONTYPE stateno;  \/* The state-number *\/$/;"	m	struct:yyStackEntry	file:
staticLocateMergingSegments	image_processing/TePDIParaSegRegGrowStrategy.cpp	/^bool TePDIParaSegRegGrowStrategy::staticLocateMergingSegments( $/;"	f	class:TePDIParaSegRegGrowStrategy
staticMergeSegments	image_processing/TePDIParaSegRegGrowStrategy.cpp	/^bool TePDIParaSegRegGrowStrategy::staticMergeSegments( $/;"	f	class:TePDIParaSegRegGrowStrategy
stats	kernel/TeStatistics.h	/^typedef vector<double>	stats;$/;"	t
statsOn	drivers/SQLite/sqlite3/shell.c	/^  int statsOn;           \/* True to display memory stats before each finalize *\/$/;"	m	struct:callback_data	file:
status	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines	file:
status	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines
status	kernel/TeRaster.h	/^inline bool TeRaster::status()$/;"	f	class:TeRaster
status	stat/TeStatDataStructures.h	/^	bool status()$/;"	f	class:TeKernelGridSupport
status_	drivers/qt/TeApplicationUtils.h	/^	int	status_;						\/\/ collection: c_object_status$/;"	m	struct:ObjectInfo
status_	image_processing/TePDIParaSegSegmentsBlock.hpp	/^      unsigned int status_;      $/;"	m	class:TePDIParaSegSegmentsBlock
status_	kernel/TeRasterParams.h	/^	TeRasterStatus 	status_;	\/\/! Status for reading and writing to raster	$/;"	m	class:TeRasterParams
std_color	image_processing/TePDIBaatz.hpp	/^  float std_color[NUM_BANDS]; \/* std of pixel colors of merged segment, one for each band *\/$/;"	m	struct:segment_neighbor
std_color	image_processing/TePDIBaatz.hpp	/^  float std_color[NUM_BANDS]; \/* std of pixel colors, one for each band *\/$/;"	m	struct:segment
stdin_is_interactive	drivers/SQLite/sqlite3/shell.c	/^static int stdin_is_interactive = 1;$/;"	v	file:
stem	drivers/SQLite/sqlite3/sqlite3.c	/^static int stem($/;"	f	file:
stencilBits	drivers/GL/glcore.h	/^    GLint stencilBits;$/;"	m	struct:__GLcontextModesRec
stencilBits	drivers/GL/glxint.h	/^    GLint stencilBits;$/;"	m	struct:__GLXFBConfigRec
stencilBits	drivers/GL/internal/glcore.h	/^    GLint stencilBits;$/;"	m	struct:__GLcontextModesRec
stencilBuffer	drivers/GL/glcore.h	/^    __GLdrawableBuffer stencilBuffer;$/;"	m	struct:__GLdrawablePrivateRec
stencilBuffer	drivers/GL/internal/glcore.h	/^    __GLdrawableBuffer stencilBuffer;$/;"	m	struct:__GLdrawablePrivateRec
stencilSize	drivers/GL/glxint.h	/^    int stencilSize;$/;"	m	struct:__GLXvisualConfigRec
stencil_size	drivers/GL/directfbgl.h	/^     int        stencil_size;$/;"	m	struct:__anon175
step	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
step	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
step_list	drivers/SQLite/sqlite3/sqlite3.c	/^  TriggerStep *step_list; \/* Link list of trigger program steps             *\/$/;"	m	struct:Trigger	file:
stereo	drivers/GL/directfbgl.h	/^     DFBBoolean stereo;$/;"	m	struct:__anon175
stereo	drivers/GL/glxint.h	/^    Bool stereo;$/;"	m	struct:__GLXvisualConfigRec
stereoMode	drivers/GL/glcore.h	/^    GLuint stereoMode;$/;"	m	struct:__GLcontextModesRec
stereoMode	drivers/GL/glxint.h	/^    GLboolean stereoMode;$/;"	m	struct:__GLXFBConfigRec
stereoMode	drivers/GL/internal/glcore.h	/^    GLuint stereoMode;$/;"	m	struct:__GLcontextModesRec
stifle_history	drivers/SQLite/sqlite3/shell.c	64;"	d	file:
stlat1	kernel/TeProjection.h	/^	double	stlat1;	     \/\/!< First standard parallel (rad)$/;"	m	struct:TeProjectionParams
stlat2	kernel/TeProjection.h	/^	double  stlat2;      \/\/!< Second standard paralel (rad)$/;"	m	struct:TeProjectionParams
stmt_status	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*stmt_status)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
stmt_status	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*stmt_status)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
stmthpToQuery_	drivers/Oracle/TeOCICursor.h	/^	OCIStmt*			stmthpToQuery_;		\/\/!< OCI statement handle to query$/;"	m	class:TeOCICursor
stmthp_	drivers/Oracle/TeOCIConnect.h	/^	OCIStmt*		stmthp_;	\/\/!< environment OCI handle - stores SQL statement$/;"	m	class:TeOCIConnection
stop	drivers/qt/TeQtAnimaThread.cpp	/^void TeQtAnimaThread::stop()$/;"	f	class:TeQtAnimaThread
stopButton_clicked	drivers/qt/ui/animation.ui.h	/^void Animation::stopButton_clicked()$/;"	f	class:Animation
stop_	drivers/qt/TeQtAnimaThread.h	/^	bool		stop_;$/;"	m	class:TeQtAnimaThread
store	drivers/spl/PluginsParametersContainer.h	/^void PluginsParametersContainer< PluginsParametersContainerKeyT >::store( $/;"	f	class:PluginsParametersContainer
store	kernel/TeMultiContainer.h	/^void TeMultiContainer< TeMultiContainerKeyT >::store( $/;"	f	class:TeMultiContainer
strHash	drivers/SQLite/sqlite3/sqlite3.c	/^static unsigned int strHash(const char *z, int nKey){$/;"	f	file:
stratNamePtr_	image_processing/TePDIParallelSegmenter.hpp	/^          std::string const* stratNamePtr_;$/;"	m	class:TePDIParallelSegmenter::GroupDataThreadEntryParams::std
stratNamePtr_	image_processing/TePDIParallelSegmenter.hpp	/^          std::string const* stratNamePtr_;$/;"	m	class:TePDIParallelSegmenter::SegmenterThreadEntryParams::std
stratParamsPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          TePDIParameters const* stratParamsPtr_;$/;"	m	class:TePDIParallelSegmenter::GroupDataThreadEntryParams
stratParamsPtr_	image_processing/TePDIParallelSegmenter.hpp	/^          TePDIParameters const* stratParamsPtr_;$/;"	m	class:TePDIParallelSegmenter::SegmenterThreadEntryParams
stratParams_	image_processing/TePDIParaSegStrategyFactoryParams.hpp	/^      TePDIParaSegStrategyParams stratParams_;      $/;"	m	class:TePDIParaSegStrategyFactoryParams
strateg	kernel/TeRaster.cpp	/^	void strateg(double xMin, double xMax, double y)$/;"	f	class:TePixelBBInterPoly
strateg	kernel/TeRaster.cpp	/^    void strateg(double xMin, double xMax, double y)$/;"	f	class:TePixelBoxInPoly
strategy_	kernel/TeProxMatrixConstructionStrategy.h	/^	TeGPMConstructionStrategy		strategy_;$/;"	m	struct:TeProxMatrixConstructionParams
strategy_	kernel/TeProxMatrixSlicingStrategy.h	/^	TeGPMSlicingStrategy		strategy_;$/;"	m	struct:TeProxMatrixSlicingParams
strategy_	kernel/TeProxMatrixWeightsStrategy.h	/^	TeGPMWeightsStrategy		strategy_;$/;"	m	struct:TeProxMatrixWeightsParams
strategy_	kernel/TeQuerierParams.h	/^	string					strategy_;		\/\/! querier strategy name$/;"	m	class:TeQuerierParams
strategy_	kernel/TeRaster.h	/^			TeStrategicIterator strategy_;$/;"	m	class:TeRaster::iteratorPoly
streamp	drivers/Oracle/OCI/include/occiData.h	/^    LobStreamImpl *streamp; $/;"	m	class:oracle::occi::Blob
streamp	drivers/Oracle/OCI/include/occiData.h	/^    LobStreamImpl *streamp; $/;"	m	class:oracle::occi::Clob
streamp	drivers/Oracle/OCI/include/occiData.h	/^    LobStreamImpl *streamp;$/;"	m	class:oracle::occi::Bfile
strftimeFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void strftimeFunc($/;"	f	file:
stride	drivers/GL/dri_interface.h	/^    int stride;             \/**< Number of bytes from one line to the next. *\/$/;"	m	struct:__DRIframebufferRec
stride	drivers/GL/internal/dri_interface.h	/^    int stride;             \/**< Number of bytes from one line to the next. *\/$/;"	m	struct:__DRIframebufferRec
strikeout_	drivers/GTM/TeGTM.h	/^	unsigned char dspl_, border_, italic_, underline_, strikeout_, alignment_;$/;"	m	class:TeGTMWaypointsStyles
string	drivers/Oracle/OCI/include/oratypes.h	/^typedef  oratext *string;        $/;"	t
stripsize_	kernel/TeDecoderTIFF.h	/^	unsigned long	stripsize_;	\/\/ number of bytes per strip$/;"	m	class:TeDecoderTIFF
strlen30	drivers/SQLite/sqlite3/shell.c	/^static int strlen30(const char *z){$/;"	f	file:
strnicmp	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*strnicmp)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
strnicmp	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*strnicmp)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines
structural_similarity_index	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::structural_similarity_index(TePDITypes::TePDIRasterPtrType original_raster, int original_band, TePDITypes::TePDIRasterPtrType fused_raster, int fused_band, TeSharedPtr<double> simm)$/;"	f	class:TePDIFusionIndexes
strxmov	drivers/MySQL/TeMySQL.cpp	/^char *strxmov(char *dst,const char *src, ...)$/;"	f
style	kernel/TeVisual.h	/^	virtual int	style() $/;"	f	class:TeVisual
style	kernel/TeVisual.h	/^	virtual void style(int s) $/;"	f	class:TeVisual
subBand_	kernel/TeRasterParams.h	/^	int subBand_;			\/\/! sub band identification $/;"	m	class:TeRasterParams
subjInMemory	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 subjInMemory;            \/* True to use in-memory sub-journals *\/$/;"	m	struct:Pager	file:
subjRequiresPage	drivers/SQLite/sqlite3/sqlite3.c	/^static int subjRequiresPage(PgHdr *pPg){$/;"	f	file:
subjournalPage	drivers/SQLite/sqlite3/sqlite3.c	/^static int subjournalPage(PgHdr *pPg){$/;"	f	file:
substExpr	drivers/SQLite/sqlite3/sqlite3.c	/^static Expr *substExpr($/;"	f	file:
substExprList	drivers/SQLite/sqlite3/sqlite3.c	/^static void substExprList($/;"	f	file:
substSelect	drivers/SQLite/sqlite3/sqlite3.c	/^static void substSelect($/;"	f	file:
substrFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void substrFunc($/;"	f	file:
success	drivers/GL/glxproto.h	/^    CARD8	success;$/;"	m	struct:__anon117
sucessors	kernel/graph.h	/^	int Graph<VertexType, EdgeType>::sucessors(int index) {$/;"	f	class:br_stl::Graph
sum	image_processing/TePDIEspecData.hpp	/^    std::vector<double> sum;            \/\/ Sum of pixels values$/;"	m	class:TePDIEspecData
sumFinalize	drivers/SQLite/sqlite3/sqlite3.c	/^static void sumFinalize(sqlite3_context *context){$/;"	f	file:
sumStep	drivers/SQLite/sqlite3/sqlite3.c	/^static void sumStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
sumbij	image_processing/TePDIEspecData.hpp	/^    std::vector<double> sumbij;         \/\/ sum of the produt of pixel values$/;"	m	class:TePDIEspecData
sup_	drivers/qt/TeQtColorBar.h	/^	int		limit_, inf_, sup_;$/;"	m	class:TeQtColorBar
supportThemeAttr_	stat/TeKernelParams.h	/^	string					supportThemeAttr_;		\/\/ attribute name of the support theme table that keeps the kernel results   	$/;"	m	struct:TeKernelParams
supportThemeId_	stat/TeKernelParams.h	/^	int						supportThemeId_;		\/\/ support theme id$/;"	m	struct:TeKernelParams
supportThemeName_	stat/TeKernelParams.h	/^	string					supportThemeName_;		\/\/ support theme name $/;"	m	struct:TeKernelParams
supportThemeTable_	stat/TeKernelParams.h	/^	string					supportThemeTable_;		\/\/ support theme table that keeps the kernel results $/;"	m	struct:TeKernelParams
suppressErr	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 suppressErr;               \/* Do not issue error messages if true *\/$/;"	m	struct:sqlite3	file:
svchp_	drivers/Oracle/TeOCIConnect.h	/^	OCISvcCtx*		svchp_;		\/\/!< service context OCI handle - defines a service$/;"	m	class:TeOCIConnection
sw_	kernel/TeGeneralizedProxMatrix.h	/^	TeProxMatrixWeightsStrategy* sw_;  $/;"	m	class:TeGeneralizedProxMatrix
swap	kernel/TeView.h	/^	virtual void swap( unsigned int i, unsigned int j)$/;"	f	class:TeView
swap	kernel/TeViewNode.cpp	/^TeViewTree::swap(unsigned int i, unsigned int j)$/;"	f	class:TeViewTree
swap	kernel/TeViewNode.h	/^	virtual void swap ( unsigned int, unsigned int ) {}$/;"	f	class:TeViewNode
swapBuffers	drivers/GL/dri_interface.h	/^    void (*swapBuffers)(__DRInativeDisplay *dpy, void *drawablePrivate);$/;"	m	struct:__DRIdrawableRec
swapBuffers	drivers/GL/internal/dri_interface.h	/^    void (*swapBuffers)(__DRInativeDisplay *dpy, void *drawablePrivate);$/;"	m	struct:__DRIdrawableRec
swapBuffersMSC	drivers/GL/dri_interface.h	/^    int64_t (*swapBuffersMSC)(__DRInativeDisplay *dpy, void *drawablePrivate,$/;"	m	struct:__DRIdrawableRec
swapBuffersMSC	drivers/GL/internal/dri_interface.h	/^    int64_t (*swapBuffersMSC)(__DRInativeDisplay *dpy, void *drawablePrivate,$/;"	m	struct:__DRIdrawableRec
swapColumns	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::swapColumns(int col1, int col2)$/;"	f	class:TeQtGrid
swapEdges	kernel/TeTin.cpp	/^TeTin::swapEdges( long t, long tv, long ai )$/;"	f	class:TeTin
swapLinePtr_	image_processing/TePDIMatrix.hpp	/^      mutable ElementType* swapLinePtr_;      $/;"	m	class:TePDIMatrix
swapMethod	drivers/GL/glcore.h	/^    GLint swapMethod;$/;"	m	struct:__GLcontextModesRec
swapMethod	drivers/GL/internal/glcore.h	/^    GLint swapMethod;$/;"	m	struct:__GLcontextModesRec
swapMixedEndianFloat	drivers/SQLite/sqlite3/sqlite3.c	60855;"	d	file:
swapMixedEndianFloat	drivers/SQLite/sqlite3/sqlite3.c	60857;"	d	file:
swapTilePtr_	kernel/TeRasterMemManager.h	/^      TilePtrT swapTilePtr_;$/;"	m	class:TeRasterMemManager
swapTriangles	kernel/TeTin.h	/^	void swapTriangles ()$/;"	f	class:TeTinEdge
swapVertices	kernel/TeTin.h	/^	void swapVertices ()$/;"	f	class:TeTinEdge
swap_	kernel/TeRasterParams.h	/^	bool swap_;			\/\/!< a flag to indicate that the values of the elements of the raster are swapped$/;"	m	class:TeRasterParams
swap_interval	drivers/GL/dri_interface.h	/^    unsigned swap_interval;$/;"	m	struct:__DRIdrawableRec
swap_interval	drivers/GL/internal/dri_interface.h	/^    unsigned swap_interval;$/;"	m	struct:__DRIdrawableRec
swappd	drivers/MySQL/TeMySQL.cpp	/^double swappd(double din)$/;"	f
swaps	kernel/TeUtils.h	/^	static inline short swaps(short value)$/;"	f
switchLockProxyPath	drivers/SQLite/sqlite3/sqlite3.c	/^static int switchLockProxyPath(unixFile *pFile, const char *path) {$/;"	f	file:
sword	drivers/Oracle/OCI/include/oratypes.h	/^typedef   signed int sword;                  $/;"	t
sword	drivers/Oracle/OCI/include/oratypes.h	198;"	d
symbId_	kernel/TeVisual.h	/^    int			symbId_;			$/;"	m	class:TeBaseVisualParams
symbol	kernel/TeGraph.cpp	/^	TeColor symbol[CURVES_LIMIT];\/* color of plot all lines    *\/$/;"	m	struct:Grc	file:
symbols	kernel/TeGraph.cpp	/^	char symbols[5];$/;"	m	struct:Opt	file:
symmtype_nzttPKCS7ProtInfo	drivers/Oracle/OCI/include/nzt.h	/^   nzttCipherType symmtype_nzttPKCS7ProtInfo;   \/* Symmetric cipher *\/$/;"	m	struct:nzttPKCS7ProtInfo
synAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId synAttrId[SYN_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
synAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType synAttrType[SYN_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
syncFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 syncFlags;               \/* SYNC_NORMAL or SYNC_FULL otherwise *\/$/;"	m	struct:Pager	file:
syncJournal	drivers/SQLite/sqlite3/sqlite3.c	/^static int syncJournal(Pager *pPager, int newHdr){$/;"	f	file:
synthCollSeq	drivers/SQLite/sqlite3/sqlite3.c	/^static int synthCollSeq(sqlite3 *db, CollSeq *pColl){$/;"	f	file:
sys$assign	drivers/GL/vms_x_fix.h	860;"	d
sys$bintim	drivers/GL/vms_x_fix.h	875;"	d
sys$crembx	drivers/GL/vms_x_fix.h	861;"	d
sys$dassgn	drivers/GL/vms_x_fix.h	862;"	d
sys$dclexh	drivers/GL/vms_x_fix.h	863;"	d
sys$getdviw	drivers/GL/vms_x_fix.h	864;"	d
sys$getsyiw	drivers/GL/vms_x_fix.h	865;"	d
sys$gettim	drivers/GL/vms_x_fix.h	876;"	d
sys$qio	drivers/GL/vms_x_fix.h	866;"	d
sys$qiow	drivers/GL/vms_x_fix.h	867;"	d
sys$setef	drivers/GL/vms_x_fix.h	868;"	d
sys$synch	drivers/GL/vms_x_fix.h	869;"	d
systemDateSep_	drivers/ado/TeAdoDB.h	/^	string			systemDateSep_;			\/\/!< date separator$/;"	m	class:TeAdo
systemDateTimeFormat	drivers/ado/TeAdoDB.cpp	/^TeAdo::systemDateTimeFormat(string& indAM, string& indPM, string& sepD, string& sepT)$/;"	f	class:TeAdo
systemDateTimeFormat_	drivers/ado/TeAdoDB.h	/^	string			systemDateTimeFormat_;  \/\/!< system format for date and time $/;"	m	class:TeAdo
systemIndAM_	drivers/ado/TeAdoDB.h	/^	string			systemIndAM_;			\/\/!< AM indicator for a 12 hour clock$/;"	m	class:TeAdo
systemIndPM_	drivers/ado/TeAdoDB.h	/^	string			systemIndPM_;			\/\/!< PM indicator for a 12 hour clock$/;"	m	class:TeAdo
systemTimeSep_	drivers/ado/TeAdoDB.h	/^	string			systemTimeSep_;			\/\/!< time separator$/;"	m	class:TeAdo
sz	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 sz;                 \/* Size of each buffer in bytes *\/$/;"	m	struct:Lookaside	file:
szAtom	drivers/SQLite/sqlite3/sqlite3.c	/^  int szAtom;      \/* Smallest possible allocation in bytes *\/$/;"	m	struct:Mem5Global	file:
szChunk	drivers/SQLite/sqlite3/sqlite3.c	/^  int szChunk;                        \/* Configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:unixFile	file:
szChunk	drivers/SQLite/sqlite3/sqlite3.c	/^  int szChunk;              \/* Chunk size configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:os2File	file:
szChunk	drivers/SQLite/sqlite3/sqlite3.c	/^  int szChunk;            \/* Chunk size configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:winFile	file:
szExtra	drivers/SQLite/sqlite3/sqlite3.c	/^  int szExtra;                        \/* Size of extra space for each page *\/$/;"	m	struct:PCache	file:
szLookaside	drivers/SQLite/sqlite3/sqlite3.c	/^  int szLookaside;                  \/* Default lookaside buffer size *\/$/;"	m	struct:Sqlite3Config	file:
szMaster	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 szMaster;$/;"	m	struct:Mem3Global	file:
szOsFile	drivers/SQLite/sqlite3/sqlite3.c	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs	file:
szOsFile	drivers/SQLite/sqlite3/sqlite3.h	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs
szPage	drivers/SQLite/sqlite3/sqlite3.c	/^  int szPage;                         \/* Size of allocated pages in bytes *\/$/;"	m	struct:PCache1	file:
szPage	drivers/SQLite/sqlite3/sqlite3.c	/^  int szPage;                         \/* Size of every page in this cache *\/$/;"	m	struct:PCache	file:
szPage	drivers/SQLite/sqlite3/sqlite3.c	/^  int szPage;                       \/* Size of each page in pPage[] *\/$/;"	m	struct:Sqlite3Config	file:
szPage	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 szPage;                     \/* Database page size in bytes. 1==64K *\/$/;"	m	struct:WalIndexHdr	file:
szPage	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 szPage;                \/* Database page size *\/$/;"	m	struct:Wal	file:
szRegion	drivers/SQLite/sqlite3/sqlite3.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:os2ShmNode	file:
szRegion	drivers/SQLite/sqlite3/sqlite3.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
szRegion	drivers/SQLite/sqlite3/sqlite3.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:winShmNode	file:
szScratch	drivers/SQLite/sqlite3/sqlite3.c	/^  int szScratch;                    \/* Size of each scratch buffer *\/$/;"	m	struct:Sqlite3Config	file:
szSlot	drivers/SQLite/sqlite3/sqlite3.c	/^  int szSlot;                    \/* Size of each free slot *\/$/;"	m	struct:PCacheGlobal	file:
sz_xGLXBindSwapBarrierSGIXReq	drivers/GL/glxproto.h	1056;"	d
sz_xGLXChangeDrawableAttributesReq	drivers/GL/glxproto.h	534;"	d
sz_xGLXClientInfoReq	drivers/GL/glxproto.h	401;"	d
sz_xGLXCopyContextReq	drivers/GL/glxproto.h	272;"	d
sz_xGLXCreateContextReq	drivers/GL/glxproto.h	212;"	d
sz_xGLXCreateContextWithConfigSGIXReq	drivers/GL/glxproto.h	1011;"	d
sz_xGLXCreateGLXPbufferReply	drivers/GL/glxproto.h	880;"	d
sz_xGLXCreateGLXPixmapReq	drivers/GL/glxproto.h	313;"	d
sz_xGLXCreateGLXPixmapWithConfigSGIXReq	drivers/GL/glxproto.h	1028;"	d
sz_xGLXCreateNewContextReq	drivers/GL/glxproto.h	459;"	d
sz_xGLXCreatePbufferReq	drivers/GL/glxproto.h	499;"	d
sz_xGLXCreatePixmapReq	drivers/GL/glxproto.h	430;"	d
sz_xGLXCreateWindowReq	drivers/GL/glxproto.h	550;"	d
sz_xGLXDestroyContextReq	drivers/GL/glxproto.h	223;"	d
sz_xGLXDestroyGLXPixmapReq	drivers/GL/glxproto.h	324;"	d
sz_xGLXDestroyHyperpipeConfigSGIXReply	drivers/GL/glxproto.h	1147;"	d
sz_xGLXDestroyHyperpipeConfigSGIXReq	drivers/GL/glxproto.h	1130;"	d
sz_xGLXDestroyPbufferReq	drivers/GL/glxproto.h	510;"	d
sz_xGLXDestroyPixmapReq	drivers/GL/glxproto.h	441;"	d
sz_xGLXDestroyWindowReq	drivers/GL/glxproto.h	561;"	d
sz_xGLXGetColorTableReply	drivers/GL/glxproto.h	914;"	d
sz_xGLXGetConvolutionFilterReply	drivers/GL/glxproto.h	647;"	d
sz_xGLXGetDrawableAttributesReply	drivers/GL/glxproto.h	897;"	d
sz_xGLXGetDrawableAttributesReq	drivers/GL/glxproto.h	521;"	d
sz_xGLXGetErrorReply	drivers/GL/glxproto.h	577;"	d
sz_xGLXGetFBConfigsReply	drivers/GL/glxproto.h	827;"	d
sz_xGLXGetFBConfigsReq	drivers/GL/glxproto.h	414;"	d
sz_xGLXGetFBConfigsSGIXReq	drivers/GL/glxproto.h	990;"	d
sz_xGLXGetHistogramReply	drivers/GL/glxproto.h	661;"	d
sz_xGLXGetMinmaxReply	drivers/GL/glxproto.h	675;"	d
sz_xGLXGetSeparableFilterReply	drivers/GL/glxproto.h	633;"	d
sz_xGLXGetTexImageReply	drivers/GL/glxproto.h	619;"	d
sz_xGLXGetVisualConfigsReply	drivers/GL/glxproto.h	717;"	d
sz_xGLXGetVisualConfigsReq	drivers/GL/glxproto.h	335;"	d
sz_xGLXHyperpipeConfigSGIXReply	drivers/GL/glxproto.h	1216;"	d
sz_xGLXHyperpipeConfigSGIXReq	drivers/GL/glxproto.h	1199;"	d
sz_xGLXIsDirectReply	drivers/GL/glxproto.h	733;"	d
sz_xGLXIsDirectReq	drivers/GL/glxproto.h	195;"	d
sz_xGLXJoinSwapGroupSGIXReq	drivers/GL/glxproto.h	1042;"	d
sz_xGLXMakeContextCurrentReply	drivers/GL/glxproto.h	861;"	d
sz_xGLXMakeContextCurrentReq	drivers/GL/glxproto.h	484;"	d
sz_xGLXMakeCurrentReadSGIReply	drivers/GL/glxproto.h	977;"	d
sz_xGLXMakeCurrentReadSGIReq	drivers/GL/glxproto.h	963;"	d
sz_xGLXMakeCurrentReply	drivers/GL/glxproto.h	591;"	d
sz_xGLXMakeCurrentReq	drivers/GL/glxproto.h	236;"	d
sz_xGLXQueryContextInfoEXTReply	drivers/GL/glxproto.h	948;"	d
sz_xGLXQueryContextInfoEXTReq	drivers/GL/glxproto.h	931;"	d
sz_xGLXQueryContextReply	drivers/GL/glxproto.h	844;"	d
sz_xGLXQueryContextReq	drivers/GL/glxproto.h	470;"	d
sz_xGLXQueryExtensionsStringReply	drivers/GL/glxproto.h	790;"	d
sz_xGLXQueryExtensionsStringReq	drivers/GL/glxproto.h	376;"	d
sz_xGLXQueryHyperpipeConfigSGIXReply	drivers/GL/glxproto.h	1181;"	d
sz_xGLXQueryHyperpipeConfigSGIXReq	drivers/GL/glxproto.h	1164;"	d
sz_xGLXQueryHyperpipeNetworkSGIXReply	drivers/GL/glxproto.h	1113;"	d
sz_xGLXQueryHyperpipeNetworkSGIXReq	drivers/GL/glxproto.h	1096;"	d
sz_xGLXQueryMaxSwapBarriersSGIXReply	drivers/GL/glxproto.h	1083;"	d
sz_xGLXQueryMaxSwapBarriersSGIXReq	drivers/GL/glxproto.h	1069;"	d
sz_xGLXQueryServerStringReply	drivers/GL/glxproto.h	808;"	d
sz_xGLXQueryServerStringReq	drivers/GL/glxproto.h	388;"	d
sz_xGLXQueryVersionReply	drivers/GL/glxproto.h	703;"	d
sz_xGLXQueryVersionReq	drivers/GL/glxproto.h	184;"	d
sz_xGLXReadPixelsReply	drivers/GL/glxproto.h	605;"	d
sz_xGLXRenderLargeReq	drivers/GL/glxproto.h	159;"	d
sz_xGLXRenderModeReply	drivers/GL/glxproto.h	689;"	d
sz_xGLXRenderReq	drivers/GL/glxproto.h	136;"	d
sz_xGLXSingleReply	drivers/GL/glxproto.h	752;"	d
sz_xGLXSingleReq	drivers/GL/glxproto.h	172;"	d
sz_xGLXSwapBuffersReq	drivers/GL/glxproto.h	284;"	d
sz_xGLXUseXFontReq	drivers/GL/glxproto.h	299;"	d
sz_xGLXVendorPrivReply	drivers/GL/glxproto.h	772;"	d
sz_xGLXVendorPrivateReq	drivers/GL/glxproto.h	350;"	d
sz_xGLXVendorPrivateWithReplyReq	drivers/GL/glxproto.h	365;"	d
sz_xGLXWaitGLReq	drivers/GL/glxproto.h	247;"	d
sz_xGLXWaitXReq	drivers/GL/glxproto.h	258;"	d
t1_	kernel/TeTimeInterval.h	/^	TeTime  t1_;$/;"	m	class:TeTimeInterval
t2_	kernel/TeTimeInterval.h	/^	TeTime  t2_;$/;"	m	class:TeTimeInterval
tRowcnt	drivers/SQLite/sqlite3/sqlite3.c	/^ typedef u32 tRowcnt;    \/* 32-bit is the default *\/$/;"	t	file:
tRowcnt	drivers/SQLite/sqlite3/sqlite3.c	/^ typedef u64 tRowcnt;    \/* 64-bit only if requested at compile-time *\/$/;"	t	file:
tabFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 tabFlags;         \/* Mask of TF_* values *\/$/;"	m	struct:Table	file:
tabSize	kernel/TeSparseMatrix.h	/^    long tabSize;$/;"	m	class:PairHashFun
tabSize	kernel/TeVisual.h	/^	virtual int	tabSize () $/;"	f	class:TeVisual
tabSize	kernel/TeVisual.h	/^	virtual void tabSize (int s) $/;"	f	class:TeVisual
tabSize_	kernel/TeVisual.h	/^	int			tabSize_;		$/;"	m	class:TeBaseVisualParams
table	drivers/SQLite/sqlite3/sqlite3.c	/^  char *table;            \/* The table or view to which the trigger applies *\/$/;"	m	struct:Trigger	file:
tableAndColumnIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static int tableAndColumnIndex($/;"	f	file:
tableAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId tableAttrId[TABLE_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
tableAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType tableAttrType[TABLE_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
tableExist	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::tableExist(const string& table)$/;"	f	class:TeFirebird
tableExist	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::tableExist(const string& table)$/;"	f	class:TeMySQL
tableExist	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::tableExist(const string& table)$/;"	f	class:TeOCIOracle
tableExist	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::tableExist(const string& table)$/;"	f	class:TePostgreSQL
tableExist	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::tableExist(const string& table)$/;"	f	class:TeSQLite
tableExist	drivers/ado/TeAdoDB.cpp	/^TeAdo::tableExist(const string& table)$/;"	f	class:TeAdo
tableExist	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::tableExist(const string& table)$/;"	f	class:TeFireBird
tableExist	drivers/ado/TeAdoOracle.cpp	/^TeOracle::tableExist(const string& table)$/;"	f	class:TeOracle
tableExist	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::tableExist(const string& table)$/;"	f	class:TeSqlServer
tableId_	functions/TeAddressLocator.h	/^	int tableId_;							\/\/!< The id of the table for geocoding$/;"	m	struct:TeGeocodeTableMetadata
tableId_	functions/TeAddressLocator.h	/^	int tableId_;					\/\/!< This value is a foreign key from te_layer_table indicates the table wich will be used for the address locator$/;"	m	struct:TeAddressMetadata
tableJoin	kernel/TeTable.cpp	/^string tableJoin(TeAttrTableVector& vecTable, string geomTable, string attrLink)$/;"	f
tableName	kernel/TeLayer.cpp	/^TeLayer::tableName(TeGeomRep rep) $/;"	f	class:TeLayer
tableName_	functions/TeAddressLocator.h	/^	string tableName_;						\/\/!< The table to be geocoding$/;"	m	struct:TeGeocodeTableMetadata
tableName_	functions/TeAddressLocator.h	/^	string tableName_;				\/\/!< The table to use for geocoding process$/;"	m	struct:TeAddressMetadata
tableName_	kernel/TeRepresentation.h	/^	std::string	tableName_;		\/\/!< name of the table that stores the geometries associated to this representation$/;"	m	struct:TeRepresentation
tableOfTrigger	drivers/SQLite/sqlite3/sqlite3.c	/^static Table *tableOfTrigger(Trigger *pTrigger){$/;"	f	file:
tableSize	kernel/TeSparseMatrix.h	/^    long tableSize() const$/;"	f	class:PairHashFun
tableType	kernel/TeTable.h	/^	TeAttrTableType tableType()$/;"	f	class:TeTable
tableVector_	drivers/qt/TeQtGrid.h	/^	vector<TeTable>			tableVector_;$/;"	m	class:TeQtGrid
table_column_metadata	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,$/;"	m	struct:sqlite3_api_routines	file:
table_column_metadata	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,$/;"	m	struct:sqlite3_api_routines
table_name	kernel/TeBlockLoader.h	/^    std::string table_name;$/;"	m	struct:__anon30
taken_	kernel/TeRTree.h	/^			int taken_[MAXNODES + 1];		\/\/!< Flag to indicate that entry is ok.$/;"	m	struct:TeSAM::TeRTree::TePartitionVars
talt_	drivers/GTM/TeGTM.h	/^	float talt_;$/;"	m	class:TeGTMTrackLogs
target	drivers/SQLite/sqlite3/sqlite3.c	/^  Token target;        \/* Target table for DELETE, UPDATE, INSERT *\/$/;"	m	struct:TriggerStep	file:
targetSrcList	drivers/SQLite/sqlite3/sqlite3.c	/^static SrcList *targetSrcList($/;"	f	file:
tblHash	drivers/SQLite/sqlite3/sqlite3.c	/^  Hash tblHash;        \/* All tables indexed by name *\/$/;"	m	struct:Schema	file:
tcolor_	drivers/GTM/TeGTM.h	/^	long tcolor_;$/;"	m	class:TeGTMTrackLogStyles
tdate_	drivers/GTM/TeGTM.h	/^	long tdate_;$/;"	m	class:TeGTMRoutes
tdate_	drivers/GTM/TeGTM.h	/^	long tdate_;$/;"	m	class:TeGTMTrackLogs
tdo_geometry_	drivers/Oracle/TeOCIConnect.h	/^	OCIType*		tdo_geometry_; 		\/\/!< describes the SDO_GEOMETRY type $/;"	m	class:TeOCIConnection
tdo_ordinates_	drivers/Oracle/TeOCIConnect.h	/^	OCIType*		tdo_ordinates_;		\/\/!< describes the SDO_ORDINATES type$/;"	m	class:TeOCIConnection
tePDIParaSegBaatzStrategyFactoryInstance_	image_processing/TePDIParaSegBaatzStrategyFactory.cpp	/^  TePDIParaSegBaatzStrategyFactory tePDIParaSegBaatzStrategyFactoryInstance_;$/;"	m	namespace:__anon9	file:
tePDIParaSegRegGrowStrategyFactoryInstance_	image_processing/TePDIParaSegRegGrowStrategyFactory.cpp	/^  TePDIParaSegRegGrowStrategyFactory tePDIParaSegRegGrowStrategyFactoryInstance_;$/;"	m	namespace:__anon16	file:
tePoint_	drivers/qt/TeAppTheme.h	/^	TePoint		tePoint_;$/;"	m	class:TeAppTheme
teProjInfo	kernel/TeProjection.cpp	/^const char* teProjInfo[]= {$/;"	v
teRing2Buffer	drivers/Firebird/TeFirebird.cpp	/^void teRing2Buffer(const TeLinearRing& line, char*& buffer, int& bufferSize)$/;"	f
te__next_back__	kernel/TeViewTreeIterator.h	191;"	d
te_fsec_t	drivers/PostgreSQL/TePGInterface.cpp	/^typedef int te_fsec_t;$/;"	t	file:
te_int64	drivers/PostgreSQL/TePGInterface.cpp	/^typedef long long int te_int64;$/;"	t	file:
te_pg_time_t	drivers/PostgreSQL/TePGInterface.cpp	/^typedef te_int64 te_pg_time_t;$/;"	t	file:
te_pg_tm	drivers/PostgreSQL/TePGInterface.cpp	/^struct te_pg_tm$/;"	s	file:
tempFile	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 tempFile;                \/* zFilename is a temporary file *\/$/;"	m	struct:Pager	file:
tempReg	drivers/SQLite/sqlite3/sqlite3.c	/^    u8 tempReg;           \/* iReg is a temp register that needs to be freed *\/$/;"	m	struct:Parse::yColCache	file:
tempSql	kernel/yyTemporal.cpp	/^char tempSql[1000];$/;"	v
temp_maskmatrix_	image_processing/TePDIBufferedFilter.hpp	/^      double** temp_maskmatrix_;$/;"	m	class:TePDIBufferedFilter
temp_maskmatrix_columns_	image_processing/TePDIBufferedFilter.hpp	/^      unsigned int temp_maskmatrix_columns_;$/;"	m	class:TePDIBufferedFilter
temp_maskmatrix_lines_	image_processing/TePDIBufferedFilter.hpp	/^      unsigned int temp_maskmatrix_lines_;$/;"	m	class:TePDIBufferedFilter
temp_store	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 temp_store;                \/* 1: file 2: memory 0: default *\/$/;"	m	struct:sqlite3	file:
temporalRest	kernel/TeAbstractTheme.h	/^	virtual string temporalRest() { return generateTemporalRest_; }$/;"	f	class:TeAbstractTheme
temporalRest	kernel/TeAbstractTheme.h	/^	virtual void temporalRest(const string& t) { generateTemporalRest_ = t; };$/;"	f	class:TeAbstractTheme
temporaryRepresentation	kernel/TeAbstractTheme.h	/^	int temporaryRepresentation(void) { return temporaryRepresentation_;}$/;"	f	class:TeAbstractTheme
temporaryRepresentation	kernel/TeAbstractTheme.h	/^	void temporaryRepresentation(int rep) { temporaryRepresentation_=rep;}$/;"	f	class:TeAbstractTheme
temporaryRepresentation_	kernel/TeAbstractTheme.h	/^	int			temporaryRepresentation_;$/;"	m	class:TeAbstractTheme
temporaryVisibility	kernel/TeAbstractTheme.h	/^	short temporaryVisibility(void) { return temporaryVisibility_;}$/;"	f	class:TeAbstractTheme
temporaryVisibility	kernel/TeAbstractTheme.h	/^	void temporaryVisibility(short state) { temporaryVisibility_=state;}$/;"	f	class:TeAbstractTheme
temporaryVisibility_	kernel/TeAbstractTheme.h	/^	short		temporaryVisibility_;$/;"	m	class:TeAbstractTheme
tepg_connection_	drivers/PostgreSQL/TePostgreSQL.h	/^		TePGConnection* tepg_connection_;$/;"	m	class:TePostgreSQL
tepg_connection_ref	drivers/PostgreSQL/TePostgreSQL.h	/^        TePGConnection* tepg_connection_ref;$/;"	m	class:TePostgreSQL
tepg_recordset_	drivers/PostgreSQL/TePostgreSQL.h	/^		TePGRecordset* tepg_recordset_;$/;"	m	class:TePostgreSQLPortal
teprogressbase_ptr_	drivers/spl/PluginParameters.h	/^      TeProgressBase* teprogressbase_ptr_;$/;"	m	class:PluginParameters
teqtcanvas_ptr_	drivers/spl/PluginParameters.h	/^      TeQtCanvas* teqtcanvas_ptr_;      $/;"	m	class:PluginParameters
teqtdatabaseslistview_ptr_	drivers/spl/PluginParameters.h	/^      TeQtDatabasesListView* teqtdatabaseslistview_ptr_;          $/;"	m	class:PluginParameters
teqtgrid_ptr_	drivers/spl/PluginParameters.h	/^      TeQtGrid* teqtgrid_ptr_;$/;"	m	class:PluginParameters
teqtviewslistview_ptr_	drivers/spl/PluginParameters.h	/^      TeQtViewsListView* teqtviewslistview_ptr_;          $/;"	m	class:PluginParameters
termCanDriveIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static int termCanDriveIndex($/;"	f	file:
term_destination	drivers/libjpeg/jmemdst.c	/^term_destination (j_compress_ptr cinfo)$/;"	f
term_source	drivers/libjpeg/jmemsrc.c	/^term_source (j_decompress_ptr cinfo)$/;"	f
testDelaunay	kernel/TeTin.cpp	/^TeTin::testDelaunay(long e)$/;"	f	class:TeTin
testDelaunay	kernel/TeTin.cpp	/^TeTin::testDelaunay(long t, long v)$/;"	f	class:TeTin
testDelaunay	kernel/TeTin.cpp	/^TeTin::testDelaunay(long t1, long t2, long t3)$/;"	f	class:TeTin
testDelaunay	kernel/TeTin.cpp	/^TeTin::testDelaunay(long t1, long t2, long t3, long t4)$/;"	f	class:TeTin
testDelaunayAt	kernel/TeTin.cpp	/^TeTin::testDelaunayAt(long t, long v, std::set<long>& triangles)$/;"	f	class:TeTin
testDelaunayForVertex	kernel/TeTin.cpp	/^TeTin::testDelaunayForVertex(long v, std::set<long>& triangles)$/;"	f	class:TeTin
testFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void testFunc($/;"	f	file:
testRtreeCell	drivers/SQLite/sqlite3/sqlite3.c	/^static int testRtreeCell(Rtree *pRtree, RtreeCursor *pCursor, int *pbEof){$/;"	f	file:
testRtreeEntry	drivers/SQLite/sqlite3/sqlite3.c	/^static int testRtreeEntry(Rtree *pRtree, RtreeCursor *pCursor, int *pbEof){$/;"	f	file:
testRtreeGeom	drivers/SQLite/sqlite3/sqlite3.c	/^static int testRtreeGeom($/;"	f	file:
testSmallerAngleAt	kernel/TeTin.cpp	/^TeTin::testSmallerAngleAt(long t, long v)$/;"	f	class:TeTin
test_control	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines	file:
test_control	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines
test_fts3_node_chunk_threshold	drivers/SQLite/sqlite3/sqlite3.c	/^int test_fts3_node_chunk_threshold = (4*1024)*4;$/;"	v
test_fts3_node_chunksize	drivers/SQLite/sqlite3/sqlite3.c	/^int test_fts3_node_chunksize = (4*1024);$/;"	v
testcase	drivers/SQLite/sqlite3/sqlite3.c	114490;"	d	file:
testcase	drivers/SQLite/sqlite3/sqlite3.c	464;"	d	file:
testcase	drivers/SQLite/sqlite3/sqlite3.c	466;"	d	file:
text	drivers/Oracle/OCI/include/oratypes.h	/^   typedef oratext text;$/;"	t
text	drivers/Oracle/OCI/include/oratypes.h	179;"	d
text	drivers/qt/TeQtBigTable.cpp	/^QString TeQtBigTable::text(int row, int col) const$/;"	f	class:TeQtBigTable
text	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::text(int i)$/;"	f	class:TeQtMultiTextEdit
text	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::text()$/;"	f	class:TeQtTextEdit
text	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::text(TeText t)$/;"	f	class:TeQtTextEdit
text	kernel/TeGraph.cpp	/^    TeColor text;                \/* color of plot text         *\/$/;"	m	struct:Grc	file:
textColor_	drivers/qt/TeQtCanvas.h	/^	QColor		textColor_;$/;"	m	class:TeQtCanvas
textExtent	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::textExtent (string &str, int &w, int &h, double \/* angle *\/)$/;"	f	class:TeQtGraphPlot
textFont_	drivers/qt/TeQtCanvas.h	/^	QFont		textFont_;$/;"	m	class:TeQtCanvas
textPen_	drivers/qt/TeQtCanvas.h	/^	QPen		textPen_;$/;"	m	class:TeQtCanvas
textPen_	drivers/qt/TeQtGraph.h	/^	QPen		textPen_;$/;"	m	class:TeQtGraphPlot
textRect	drivers/qt/TeQtCanvas.cpp	/^QRect TeQtCanvas::textRect(const TeText& tx, TeVisual visual)$/;"	f	class:TeQtCanvas
textSize_	drivers/qt/TeQtCanvas.h	/^	int			textSize_;$/;"	m	class:TeQtCanvas
textTable	drivers/qt/TeAppTheme.h	/^	string textTable() { return textTable_; }$/;"	f	class:TeAppTheme
textTable	drivers/qt/TeAppTheme.h	/^	void textTable(const string& t) { textTable_ = t; }$/;"	f	class:TeAppTheme
textTable_	drivers/qt/TeAppTheme.h	/^	string			textTable_;$/;"	m	class:TeAppTheme
textValue	kernel/TeGeometry.h	/^	string textValue () const$/;"	f	class:TeText
textValue_	kernel/TeGeometry.h	/^	string textValue_;$/;"	m	class:TeText
textVec_	drivers/qt/TeQtTextEdit.h	/^	vector<TeQtTextEdit> textVec_;$/;"	m	class:TeQtMultiTextEdit
text_	drivers/qt/TeQtTextEdit.h	/^	TeText				text_;$/;"	m	class:TeQtTextEdit
texts_	kernel/TeMultiGeometry.h	/^	TeTextSet			texts_;$/;"	m	class:TeMultiGeometry
tfAutoCommit	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TFF {tfIgnoreLimbo = 0x1, tfAutoCommit = 0x2, tfNoAutoUndo = 0x4};$/;"	e	enum:IBPP::TFF
tfIgnoreLimbo	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TFF {tfIgnoreLimbo = 0x1, tfAutoCommit = 0x2, tfNoAutoUndo = 0x4};$/;"	e	enum:IBPP::TFF
tfNoAutoUndo	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TFF {tfIgnoreLimbo = 0x1, tfAutoCommit = 0x2, tfNoAutoUndo = 0x4};$/;"	e	enum:IBPP::TFF
tfderivSet_	kernel/TeTin.h	/^	TeTinVertexSet		tfderivSet_;	\/\/! Triangles first derivatives vector$/;"	m	class:TeTin
theme	kernel/TeBaseSTInstance.h	/^	virtual TeTheme* theme() $/;"	f	class:TeBaseSTInstance
theme	kernel/TeBaseSTInstance.h	/^	virtual void theme(TeTheme*)  $/;"	f	class:TeBaseSTInstance
theme	kernel/TeBaseSTInstanceSet.h	/^	TeTheme* theme()$/;"	f	class:TeBaseSTInstanceSet
theme	kernel/TeComputeAttributeStrategies.h	/^		TeTheme* theme;$/;"	m	class:TeComputeSpatialStrategy
theme	kernel/TeLegendEntry.h	/^	int	theme () { return theme_; }$/;"	f	class:TeLegendEntry
theme	kernel/TeLegendEntry.h	/^	void theme (int i) { theme_ = i; }$/;"	f	class:TeLegendEntry
theme	kernel/TeQuerier.cpp	/^TeQuerier::theme()$/;"	f	class:TeQuerier
theme	kernel/TeQuerierDB.h	/^	TeTheme* theme() {	return params_->theme();	}$/;"	f	class:TeQuerierDB
theme	kernel/TeQuerierImpl.h	/^	TeTheme* theme() { return params_->theme();} $/;"	f	class:TeQuerierImpl
theme	kernel/TeQuerierParams.h	/^	virtual TeTheme* theme() { return theme_; }$/;"	f	class:TeQuerierParams
themeBox_	kernel/TeAbstractTheme.h	/^	TeBox	themeBox_;$/;"	m	class:TeAbstractTheme
themeExist	kernel/TeDatabase.cpp	/^TeDatabase::themeExist(const std::string &viewName, const std::string &userName, const std::string &themeName)$/;"	f	class:TeDatabase
themeExist	kernel/TeDatabase.cpp	/^TeDatabase::themeExist(string themeName)$/;"	f	class:TeDatabase
themeFactory	kernel/TeTheme.cpp	/^static TeThemeFactory themeFactory;$/;"	v	file:
themeFlag_	kernel/TeQuerierParams.h	/^	bool					themeFlag_;		\/\/!< if the theme is temporary$/;"	m	class:TeQuerierParams
themeId_	kernel/TePieBar.h	/^	int				themeId_;$/;"	m	class:TePieBar
themeMap	kernel/TeDatabase.h	/^	TeThemeMap&	themeMap () $/;"	f	class:TeDatabase
themeMap	kernel/TeMetaModelCache.h	/^		TeThemeMap&	themeMap () $/;"	f	class:TeMetaModelCache
themeMap_	kernel/TeMetaModelCache.h	/^        TeThemeMap			themeMap_;			\/\/!< theme map	$/;"	m	class:TeMetaModelCache
themeOpen_	drivers/qt/TeQtViewsListView.h	/^	bool				themeOpen_;$/;"	m	class:TeQtViewsListView
theme_	drivers/qt/TeAppTheme.h	/^	TeAbstractTheme* theme_;$/;"	m	class:TeAppTheme
theme_	drivers/qt/TeQtGLWidget.h	/^	TeTheme* theme_;$/;"	m	class:TeQtGLWidget
theme_	drivers/qt/TeQtGrid.h	/^	TeAppTheme		*theme_;$/;"	m	class:TeQtGrid
theme_	drivers/qt/TeQtGridSource.h	/^	TeAppTheme* theme_;$/;"	m	class:TeQtGridSource
theme_	drivers/qt/TeQtTextEdit.h	/^	TeTheme*			theme_;$/;"	m	class:TeQtTextEdit
theme_	kernel/TeBaseSTInstanceSet.h	/^	TeTheme*				theme_;$/;"	m	class:TeBaseSTInstanceSet
theme_	kernel/TeLegendEntry.h	/^	int					theme_;$/;"	m	class:TeLegendEntry
theme_	kernel/TeQuerierParams.h	/^	TeTheme*				theme_;			\/\/!< pointer to a source theme $/;"	m	class:TeQuerierParams
theme_id1_	kernel/TeProxMatrixConstructionStrategy.h	/^	int						theme_id1_;$/;"	m	struct:TeProxMatrixConstructionParams
theme_id2_	kernel/TeProxMatrixConstructionStrategy.h	/^	int						theme_id2_;$/;"	m	struct:TeProxMatrixConstructionParams
themes	kernel/TeView.h	/^	virtual vector<TeViewNode*>& themes()$/;"	f	class:TeView
this_lock_instance_	drivers/spl/PluginsParametersContainer.h	/^      mutable TeMutex this_lock_instance_;      $/;"	m	class:PluginsParametersContainer
this_lock_instance_	kernel/TeSharedPtr.h	/^      mutable TeMutex this_lock_instance_;$/;"	m	class:TeSharedPtr
threadAttr_	kernel/TeThread.h	/^		pthread_attr_t threadAttr_;		\/\/!< Pthread thread attributes.$/;"	m	class:TeThread
threadCurrPriority_	kernel/TeThread.h	/^    volatile TeThreadPriority threadCurrPriority_;   \/\/!< The current thread priority.$/;"	m	class:TeThread
threadFunction	kernel/TeThreadJobsManager.cpp	/^bool TeThreadJobsManager::threadFunction( void* parsPtr )$/;"	f	class:TeThreadJobsManager
threadHandler_	kernel/TeThread.h	/^    HANDLE threadHandler_;			\/\/!< Win32 thread handler.$/;"	m	class:TeThread
threadId_	kernel/TeThread.h	/^		LPDWORD threadId_;				\/\/!< Win32 thread ID$/;"	m	class:TeThread
threadId_	kernel/TeThread.h	/^		pthread_t threadId_;			\/\/!< Pthread thread ID.$/;"	m	class:TeThread
threadReturnValue_	kernel/TeThreadFunctor.h	/^		volatile bool threadReturnValue_;					\/\/!< User function return value.$/;"	m	class:TeThreadFunctor
threadStartFuncPtr1_	kernel/TeThreadFunctor.h	/^    TeThreadStartFunctT1 threadStartFuncPtr1_;	\/\/!< A pointer to the current user thread start function.$/;"	m	class:TeThreadFunctor
threadStartFuncPtr2_	kernel/TeThreadFunctor.h	/^    TeThreadStartFunctT2 threadStartFuncPtr2_; \/\/!< A pointer to the current user thread start function.$/;"	m	class:TeThreadFunctor
threadStatus_	kernel/TeThread.h	/^    volatile TeThreadStatus threadStatus_;			\/\/!< The current thread status variable.$/;"	m	class:TeThread
threadUserParams_	kernel/TeThreadFunctor.h	/^    TeThreadParameters threadUserParams_;		\/\/!< The current user parameters instance.$/;"	m	class:TeThreadFunctor
thread_cleanup	drivers/SQLite/sqlite3/sqlite3.c	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines	file:
thread_cleanup	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines
threadid	drivers/SQLite/sqlite3/sqlite3.c	24892;"	d	file:
threadid	drivers/SQLite/sqlite3/sqlite3.c	24894;"	d	file:
threadsList_	kernel/TeThreadJobsManager.h	/^      std::list< TeThreadFunctor* > threadsList_;$/;"	m	struct:TeThreadJobsManager::InternalManagerDataStruct
threshold	image_processing/TePDIIsosegClas.hpp	/^    double threshold;$/;"	m	class:TePDIIsosegClas
ticket_	kernel/TeConnectionPool.h	/^    unsigned int ticket_;                    \/\/!< A number used to control the get of connections.$/;"	m	class:TeConnectionPool
tiePointsWeights_	kernel/TeGTParams.h	/^      std::vector< double > tiePointsWeights_;            $/;"	m	class:TeGTParams
tiepoints_	kernel/TeGTParams.h	/^      std::vector< TeCoordPair > tiepoints_; $/;"	m	class:TeGTParams
tif	kernel/TeDecoderTIFF.h	/^	TIFF 	*tif;       		\/\/ TIFF directory structure$/;"	m	class:TeDecoderTIFF
tileIndex_	image_processing/TePDITileIndexer.hpp	/^    std::vector<TeTileSegIndex*> tileIndex_;$/;"	m	class:TePDITileIndexer
tile_indexer_dy_	image_processing/TePDIRaster2Vector.hpp	/^      double tile_indexer_dy_;$/;"	m	class:TePDIRaster2VectorPolStruct
tileh_	kernel/TeDecoderTIFF.h	/^	unsigned long	tilew_,tileh_;	\/\/ tile and height$/;"	m	class:TeDecoderTIFF
tilesPerBand_	kernel/TeRasterMemManager.h	/^      unsigned int tilesPerBand_;$/;"	m	class:TeRasterMemManager
tilesacross_	kernel/TeDecoderTIFF.h	/^	unsigned long	tilesacross_;	\/\/ number of tiles to compose a row of image$/;"	m	class:TeDecoderTIFF
tilew_	kernel/TeDecoderTIFF.h	/^	unsigned long	tilew_,tileh_;	\/\/ tile and height$/;"	m	class:TeDecoderTIFF
tiling_type_	kernel/TeRasterParams.h	/^	TeRasterTilingType	tiling_type_; \/\/!< raster tiling mode $/;"	m	class:TeRasterParams
time	kernel/TeTemporalSeries.h	/^	TeTimeInterval time(int frame) { return ((series_[frame-1]).time_); }$/;"	f	class:TeTemporalSeries
time2tm	drivers/PostgreSQL/TePGInterface.cpp	/^inline  int time2tm(te_int64 time, struct te_pg_tm * tm, te_fsec_t *fsec)$/;"	f
timeDiff	drivers/SQLite/sqlite3/shell.c	/^static double timeDiff(FILETIME *pStart, FILETIME *pEnd){$/;"	f	file:
timeDiff	drivers/SQLite/sqlite3/shell.c	/^static double timeDiff(struct timeval *pStart, struct timeval *pEnd){$/;"	f	file:
timeFramePortal_	kernel/TeQuerierDBStr2.h	/^	int				timeFramePortal_;  \/\/ the time frame appointed by the portal $/;"	m	class:TeQuerierDBStr2
timeFramePortal_	kernel/TeQuerierDBStr3.h	/^	int				timeFramePortal_;	\/\/ the time frame appointed by the portal $/;"	m	class:TeQuerierDBStr3
timeFrame_	kernel/TeTemporalSeries.h	/^	int					timeFrame_;  \/\/the time frame of the temporal series $/;"	m	class:TeTSEntry
timeFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void timeFunc($/;"	f	file:
timeIndex1_	kernel/TeQuerierDB.h	/^	vector<int>				timeIndex1_;$/;"	m	class:TeQuerierDB
timeIndex2_	kernel/TeQuerierDB.h	/^	vector<int>				timeIndex2_;$/;"	m	class:TeQuerierDB
timeInt	kernel/TeTemporalSeries.h	/^	int timeInt(int frame) { return ((series_[frame-1]).timeInt_); }$/;"	f	class:TeTemporalSeries
timeInt_	kernel/TeTemporalSeries.h	/^	int					timeInt_;$/;"	m	class:TeTSEntry
timeInterval	kernel/TeSTEvent.h	/^	virtual TeTimeInterval timeInterval () $/;"	f	class:TeSTEvent
timeInterval	kernel/TeSTInstance.h	/^	virtual TeTimeInterval timeInterval () $/;"	f	class:TeSTInstance
timeInterval	kernel/TeSTInstance.h	/^	virtual void timeInterval (const TeTimeInterval& t) $/;"	f	class:TeSTInstance
timeOper_	kernel/TeTemporalSeries.h	/^  	TeStatisticType		timeOper_; 		\/\/! operator to temporal grouping - to group objects in each time frame$/;"	m	class:TeTSParams
timeOut	drivers/Oracle/OCI/include/occiAQ.h	/^     int timeOut;$/;"	m	class:oracle::occi::aq::Listener
timeSeparator_	kernel/TeAttribute.h	/^	string				timeSeparator_;		\/\/!< time separator$/;"	m	struct:TeAttribute
timeSlice	drivers/GL/glxext.h	/^    int     timeSlice;$/;"	m	struct:__anon95
timeToInstances_	kernel/TeBaseSTInstanceSet.h	/^	map<TimeType, vector<int> >		timeToInstances_;$/;"	m	class:TeBaseSTInstanceSet
time_	kernel/TeBaseSTInstance.h	/^	TimeType				time_;		$/;"	m	class:TeBaseSTInstance
time_	kernel/TeTemporalSeries.h	/^	TeTimeInterval		time_;$/;"	m	class:TeTSEntry
time_	kernel/TeTemporalSeries.h	/^  	TeTimeInterval		time_;			\/\/! Date\/Time validy $/;"	m	class:TeTSParams
timestamp2tm	drivers/PostgreSQL/TePGInterface.cpp	/^bool timestamp2tm(te_int64 dt, int *tzp, struct te_pg_tm * tm, te_fsec_t *fsec, char **tzn)$/;"	f
timestampExt	drivers/Oracle/OCI/include/occiData.h	/^   void *timestampExt;$/;"	m	class:oracle::occi::Timestamp
timestamp_date	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_DATE timestamp_date;$/;"	m	struct:__anon59
timestamp_time	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_TIME timestamp_time;$/;"	m	struct:__anon59
title	kernel/TeGraph.h	/^	char title[TITLE_MAX+1];$/;"	m	struct:__anon27
title_font	kernel/TeGraph.h	/^	int title_font;        \/* font number to use for title *\/$/;"	m	class:TeGraphPlot
title_height	kernel/TeGraph.h	/^	int title_height;      \/* height of title characters *\/$/;"	m	class:TeGraphPlot
title_width	kernel/TeGraph.h	/^	int title_width;       \/* width of title characters *\/$/;"	m	class:TeGraphPlot
titlesVector_	functions/TeAddressLocator.h	/^		vector<string> titlesVector_;				\/\/!< Vector with default titles for street names$/;"	m	class:TeAddressLocator
tkCREATE	drivers/SQLite/sqlite3/sqlite3.c	110207;"	d	file:
tkEND	drivers/SQLite/sqlite3/sqlite3.c	110210;"	d	file:
tkEXPLAIN	drivers/SQLite/sqlite3/sqlite3.c	110206;"	d	file:
tkOTHER	drivers/SQLite/sqlite3/sqlite3.c	110204;"	d	file:
tkSEMI	drivers/SQLite/sqlite3/sqlite3.c	110202;"	d	file:
tkTEMP	drivers/SQLite/sqlite3/sqlite3.c	110208;"	d	file:
tkTRIGGER	drivers/SQLite/sqlite3/sqlite3.c	110209;"	d	file:
tkWS	drivers/SQLite/sqlite3/sqlite3.c	110203;"	d	file:
tlabel_	drivers/GTM/TeGTM.h	/^	unsigned char ttype_, tlabel_;$/;"	m	class:TeGTMTrackLogStyles
tlayer_	drivers/GTM/TeGTM.h	/^	short tlayer_;$/;"	m	class:TeGTMTrackLogStyles
tm_gmtoff	drivers/PostgreSQL/TePGInterface.cpp	/^	long int	tm_gmtoff;$/;"	m	struct:te_pg_tm	file:
tm_hour	drivers/PostgreSQL/TePGInterface.cpp	/^	int			tm_hour;$/;"	m	struct:te_pg_tm	file:
tm_isdst	drivers/PostgreSQL/TePGInterface.cpp	/^	int			tm_isdst;$/;"	m	struct:te_pg_tm	file:
tm_mday	drivers/PostgreSQL/TePGInterface.cpp	/^	int			tm_mday;$/;"	m	struct:te_pg_tm	file:
tm_min	drivers/PostgreSQL/TePGInterface.cpp	/^	int			tm_min;$/;"	m	struct:te_pg_tm	file:
tm_mon	drivers/PostgreSQL/TePGInterface.cpp	/^	int			tm_mon;			\/* origin 0, not 1 *\/$/;"	m	struct:te_pg_tm	file:
tm_sec	drivers/PostgreSQL/TePGInterface.cpp	/^	int			tm_sec;$/;"	m	struct:te_pg_tm	file:
tm_wday	drivers/PostgreSQL/TePGInterface.cpp	/^	int			tm_wday;$/;"	m	struct:te_pg_tm	file:
tm_yday	drivers/PostgreSQL/TePGInterface.cpp	/^	int			tm_yday;$/;"	m	struct:te_pg_tm	file:
tm_year	drivers/PostgreSQL/TePGInterface.cpp	/^	int			tm_year;		\/* relative to 1900 *\/$/;"	m	struct:te_pg_tm	file:
tm_zone	drivers/PostgreSQL/TePGInterface.cpp	/^	const char *tm_zone;$/;"	m	struct:te_pg_tm	file:
tmask	drivers/SQLite/sqlite3/sqlite3.c	88260;"	d	file:
tmpvdouble	image_processing/TePDIHants.cpp	/^  double *tmpvdouble, *tmpvdouble2, *filter, *components;$/;"	v
tmpvdouble2	image_processing/TePDIHants.cpp	/^  double *tmpvdouble, *tmpvdouble2, *filter, *components;$/;"	v
tmpvint	image_processing/TePDIHants.cpp	/^  int *tmpvint, *tmpvint2;$/;"	v
tmpvint2	image_processing/TePDIHants.cpp	/^  int *tmpvint, *tmpvint2;$/;"	v
tname_	drivers/GTM/TeGTM.h	/^	char* tname_;$/;"	m	class:TeGTMTrackLogStyles
tnum	drivers/SQLite/sqlite3/sqlite3.c	/^  int tnum;            \/* Root BTree node for this table (see note above) *\/$/;"	m	struct:Table	file:
tnum	drivers/SQLite/sqlite3/sqlite3.c	/^  int tnum;        \/* Page containing root of this index in database file *\/$/;"	m	struct:Index	file:
tnum_	drivers/GTM/TeGTM.h	/^	unsigned char dspl_, tnum_;$/;"	m	class:TeGTMRoutes
tnum_	drivers/GTM/TeGTM.h	/^	unsigned char metamapa_, tnum_;$/;"	m	class:TeGTMInformationImages
tnum_	drivers/GTM/TeGTM.h	/^	unsigned char tnum_;$/;"	m	class:TeGTMTrackLogs
to	kernel/TeLegendEntry.h	/^	string to()$/;"	f	class:TeLegendEntry
to	kernel/TeLegendEntry.h	/^	void to(string& s)$/;"	f	class:TeLegendEntry
to	kernel/TeTin.h	/^	long to () $/;"	f	class:TeTinEdge
toId	kernel/TeGeometry.h	/^	int toId () const$/;"	f	class:TeArc
toId	kernel/TeGeometry.h	/^	void toId (int i)$/;"	f	class:TeArc
toNode	kernel/TeGeometry.h	/^	TeNode& toNode () $/;"	f	class:TeArc
toString	image_processing/TePDIHistogram.cpp	/^std::string TePDIHistogram::toString() const$/;"	f	class:TePDIHistogram
toString	image_processing/TePDIJointHistogram.cpp	/^std::string TePDIJointHistogram::toString() const$/;"	f	class:TePDIJointHistogram
toUpper	drivers/Firebird/TeFirebird.cpp	/^string TeFirebird::toUpper(const string& value)$/;"	f	class:TeFirebird
toUpper	drivers/MySQL/TeMySQL.cpp	/^string TeMySQL::toUpper(const string& value)$/;"	f	class:TeMySQL
toUpper	drivers/Oracle/TeOCIOracle.cpp	/^string TeOCIOracle::toUpper(const string& value)$/;"	f	class:TeOCIOracle
toUpper	drivers/PostgreSQL/TePostgreSQL.cpp	/^string TePostgreSQL::toUpper(const string& value)$/;"	f	class:TePostgreSQL
toUpper	drivers/SQLite/TeSQLite.cpp	/^string TeSQLite::toUpper(const string& value)$/;"	f	class:TeSQLite
toUpper	drivers/ado/TeAdoDB.cpp	/^string TeAdo::toUpper(const string& value)$/;"	f	class:TeAdo
toUpper	drivers/ado/TeAdoSqlServer.cpp	/^string TeSqlServer::toUpper(const string& value)$/;"	f	class:TeSqlServer
to_	kernel/TeGeometry.h	/^	TeNode	from_, to_;$/;"	m	class:TeArc
to_	kernel/TeSlice.h	/^	string		to_;			\/\/! interval upper value$/;"	m	class:TeSlice
to_	kernel/TeTin.h	/^	long	from_, to_;$/;"	m	class:TeTinEdge
to_string	kernel/TeAgnostic.h	/^     std::string to_string( const T& data )$/;"	f	namespace:TeAgnostic
toggle	kernel/TeCommunicator.h	/^  void  TeCommunicator< DataType >::toggle( bool enabled_flag )$/;"	f	class:TeCommunicator
toggle	kernel/TeMappedMemory.cpp	/^bool TeMappedMemory::toggle( bool enabled )$/;"	f	class:TeMappedMemory
toggleProgInt	dtm/TeDTMAlgorithm.cpp	/^void TeDTMAlgorithm::toggleProgInt( bool enabled )$/;"	f	class:TeDTMAlgorithm
toggleProgress	image_processing/TePDIJointHistogram.cpp	/^void TePDIJointHistogram::toggleProgress( bool enabled )$/;"	f	class:TePDIJointHistogram
token	drivers/SQLite/sqlite3/sqlite3.c	/^  void *token;                  \/* id that may be used to recursive triggers *\/$/;"	m	struct:SubProgram	file:
token	drivers/SQLite/sqlite3/sqlite3.c	/^  void *token;            \/* Copy of SubProgram.token *\/$/;"	m	struct:VdbeFrame	file:
tokenize	functions/TeAddressLocator.cpp	/^void tokenize(const string& name, vector<string>& tokens)$/;"	f
tokenizeWKT	kernel/TeProjection.cpp	/^bool tokenizeWKT(char** wkt, vector<string>& tokens)$/;"	f
tolerance_	kernel/TeGTParams.h	/^      double tolerance_;$/;"	m	class:TeGTParams
tooBig	drivers/SQLite/sqlite3/sqlite3.c	/^  u8   tooBig;         \/* Becomes true if string size exceeds limits *\/$/;"	m	struct:StrAccum	file:
tooBig	kernel/TeCoord2D.h	/^	bool	tooBig ()$/;"	f	class:TeCoord2D
topIndex	kernel/dynpq.h	/^		index_type topIndex() const { return c.front() - first; }$/;"	f	class:br_stl::dynamic_priority_queue
topKey	kernel/dynpq.h	/^		const key_type& topKey() const { return *c.front(); }$/;"	f	class:br_stl::dynamic_priority_queue
topLeftResolutionSize	kernel/TeRasterParams.cpp	/^TeRasterParams::topLeftResolutionSize (double left, double top, $/;"	f	class:TeRasterParams
topLevelShellClassRec	drivers/GL/vms_x_fix.h	588;"	d
topLevelShellWidgetClass	drivers/GL/vms_x_fix.h	589;"	d
topoSort	kernel/Gra_algo.h	/^bool topoSort($/;"	f	namespace:br_stl
toprel_	kernel/TeProxMatrixConstructionStrategy.h	/^	int toprel_;$/;"	m	class:TeProxMatrixChooseOneTopologyStrategy
toprel_	kernel/TeProxMatrixConstructionStrategy.h	/^	int toprel_;$/;"	m	class:TeProxMatrixKeepInBothTopologyStrategy
toprel_	kernel/TeProxMatrixConstructionStrategy.h	/^	int toprel_;$/;"	m	class:TeProxMatrixLocalTopologyStrategy
totalAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  u64 totalAlloc;     \/* Total of all malloc calls - includes internal frag *\/$/;"	m	struct:Mem5Global	file:
totalArea	stat/TeStatDataStructures.h	/^	double totalArea() $/;"	f	class:TeKernelGridSupport
totalArea_	stat/TeKernelFunctions.h	/^  double				        	totalArea_;$/;"	m	class:TeStatKernelRatio
totalArea_	stat/TeKernelFunctions.h	/^  double               totalArea_;$/;"	m	class:TeStatKernel
totalColumns_	image_processing/TePDIMatrix.hpp	/^      unsigned int totalColumns_;     $/;"	m	class:TePDIMatrix
totalDistance_	drivers/qt/TeQtColorBar.h	/^	double	totalDistance_;$/;"	m	class:TeQtColorBar
totalExcess	drivers/SQLite/sqlite3/sqlite3.c	/^  u64 totalExcess;    \/* Total internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
totalFinalize	drivers/SQLite/sqlite3/sqlite3.c	/^static void totalFinalize(sqlite3_context *context){$/;"	f	file:
totalLines_	image_processing/TePDIMatrix.hpp	/^      unsigned int totalLines_;$/;"	m	class:TePDIMatrix
totalSteps_	kernel/TeStdIOProgress.h	/^	int totalSteps_;$/;"	m	class:TeStdIOProgress
totalTime	kernel/TeSTElementSet.cpp	/^TeSTElementSet::totalTime() $/;"	f	class:TeSTElementSet
totalTime	kernel/TeSTElementSet.cpp	/^TeSTElementSet::totalTime(TeTimeInterval t) $/;"	f	class:TeSTElementSet
total_changes	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
total_changes	drivers/SQLite/sqlite3/sqlite3.c	/^static void total_changes($/;"	f	file:
total_changes	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
total_regions	image_processing/TePDIIsosegClas.hpp	/^    int total_regions;$/;"	m	class:TePDIIsosegClas
total_slices_	kernel/TeGeneralizedProxMatrix.h	/^	int						total_slices_;$/;"	m	class:TeGeneralizedProxMatrix
total_steps_	image_processing/TePDIPIManager.hpp	/^      unsigned long int total_steps_;$/;"	m	class:TePDIPIManager
total_steps_	image_processing/TePDIPIManagerGlobalSettings.hpp	/^      volatile unsigned long int total_steps_;$/;"	m	class:TePDIPIManagerGlobalSettings
tp_	kernel/TeGeometricTransformation.h	/^          TeCoordPair tp_;$/;"	m	class:TeGeometricTransformation::ExcTPDataNode
tp_error_	kernel/TeGeometricTransformation.h	/^          double tp_error_;   $/;"	m	class:TeGeometricTransformation::ExcTPDataNode
tp_error_	kernel/TeGeometricTransformation.h	/^          double tp_error_;$/;"	m	class:TeGeometricTransformation::TPDataNode
tp_weight_	kernel/TeGeometricTransformation.h	/^          double tp_weight_;$/;"	m	class:TeGeometricTransformation::ExcTPDataNode
tpindex_	kernel/TeGeometricTransformation.h	/^          unsigned int tpindex_;$/;"	m	class:TeGeometricTransformation::TPDataNode
trProtectedRead	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TTR {trSharedWrite, trSharedRead, trProtectedWrite, trProtectedRead};$/;"	e	enum:IBPP::TTR
trProtectedWrite	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TTR {trSharedWrite, trSharedRead, trProtectedWrite, trProtectedRead};$/;"	e	enum:IBPP::TTR
trSharedRead	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TTR {trSharedWrite, trSharedRead, trProtectedWrite, trProtectedRead};$/;"	e	enum:IBPP::TTR
trSharedWrite	drivers/Firebird/ibpp/core/ibpp.h	/^	enum TTR {trSharedWrite, trSharedRead, trProtectedWrite, trProtectedRead};$/;"	e	enum:IBPP::TTR
tr_tm	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 tr_tm;               \/* One of TRIGGER_BEFORE, TRIGGER_AFTER *\/$/;"	m	struct:Trigger	file:
trace	drivers/SQLite/sqlite3/sqlite3.c	/^  FILE *trace;            \/* Write an execution trace here, if not NULL *\/$/;"	m	struct:Vdbe	file:
trace	drivers/SQLite/sqlite3/sqlite3.c	/^  int trace;                 \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
trace	drivers/SQLite/sqlite3/sqlite3.c	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines	file:
trace	drivers/SQLite/sqlite3/sqlite3.c	/^ int   trace;       \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
trace	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines
tracklogAttributeList	drivers/GTM/TeGTM.cpp	/^void TeGTM::tracklogAttributeList(TeAttributeList& attList)$/;"	f	class:TeGTM
tracklogTable_	drivers/GTM/TeGTM.h	/^	TeTable tracklogTable_;$/;"	m	class:TeGTM
tracklogsLayer	drivers/GTM/TeGTM.h	/^	std::map<std::string, std::vector<TePoint> > tracklogsLayer;$/;"	m	class:TeGTM
tracklogs_	drivers/GTM/TeGTM.h	/^	vector<TeGTMTrackLogs*> tracklogs_;$/;"	m	class:TeGTM
tracklogstyles_	drivers/GTM/TeGTM.h	/^	vector<TeGTMTrackLogStyles*> tracklogstyles_;$/;"	m	class:TeGTM
transCntrChng	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char transCntrChng;   \/* True if the transaction counter changed *\/$/;"	m	struct:unixFile	file:
transCommit	drivers/Oracle/TeOCIConnect.cpp	/^bool TeOCIConnection::transCommit()$/;"	f	class:TeOCIConnection
transPrt_	image_processing/TePDIBlender.hpp	/^      TeGeometricTransformation::pointer transPrt_;      $/;"	m	class:TePDIBlender
transRollback	drivers/Oracle/TeOCIConnect.cpp	/^bool TeOCIConnection::transRollback()$/;"	f	class:TeOCIConnection
transStart	drivers/Oracle/TeOCIConnect.cpp	/^bool TeOCIConnection::transStart()$/;"	f	class:TeOCIConnection
transactionCounter_	drivers/PostgreSQL/TePostgreSQL.h	/^		int transactionCounter_;$/;"	m	class:TePostgreSQL
transactionCounter_	kernel/TeDatabase.h	/^	int               transactionCounter_;\/\/!< counts how many nested transactions have been opened$/;"	m	class:TeDatabase
transaction_	drivers/Firebird/TeFirebird.h	/^	IBPP::Transaction transaction_;$/;"	m	class:TeFirebird
transaction_	drivers/Firebird/TeFirebird.h	/^	IBPP::Transaction transaction_;$/;"	m	class:TeFirebirdPortal
transfFuncPtr_	kernel/TeRasterTransform.h	/^	TransformFunction transfFuncPtr_;$/;"	m	class:TeRasterTransform
transferJoinMarkings	drivers/SQLite/sqlite3/sqlite3.c	/^static void transferJoinMarkings(Expr *pDerived, Expr *pBase){$/;"	f	file:
transferParseError	drivers/SQLite/sqlite3/sqlite3.c	/^static void transferParseError(Parse *pTo, Parse *pFrom){$/;"	f	file:
transfer_bindings	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
transfer_bindings	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
transformation_name_	kernel/TeGTParams.h	/^      std::string transformation_name_;$/;"	m	class:TeGTParams
transformer	kernel/TeRasterRemap.h	/^	TeRasterTransform* transformer()$/;"	f	class:TeRasterRemap
transformer_	kernel/TeRasterRemap.h	/^	TeRasterTransform* transformer_;	$/;"	m	class:TeRasterRemap
transientShellWidgetClass	drivers/GL/vms_x_fix.h	590;"	d
transp_	drivers/qt/TeDecoderQtImage.h	/^	unsigned int transp_;$/;"	m	class:TeDecoderQtImage
transp_	kernel/TeRasterTransform.h	/^	unsigned int transp_;$/;"	m	class:TeRasterTransform
transparency	kernel/TeVisual.h	/^	virtual int transparency()$/;"	f	class:TeVisual
transparency	kernel/TeVisual.h	/^	virtual void transparency(int t)$/;"	f	class:TeVisual
transparency_	kernel/TeVisual.h	/^	int			transparency_;		$/;"	m	class:TeBaseVisualParams
transparentAlpha	drivers/GL/glcore.h	/^    GLint transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLcontextModesRec
transparentAlpha	drivers/GL/glxint.h	/^    int transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLXFBConfigRec
transparentAlpha	drivers/GL/glxint.h	/^    int transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLXvisualConfigRec
transparentAlpha	drivers/GL/internal/glcore.h	/^    GLint transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLcontextModesRec
transparentBlue	drivers/GL/glcore.h	/^    GLint transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLcontextModesRec
transparentBlue	drivers/GL/glxint.h	/^    int transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLXFBConfigRec
transparentBlue	drivers/GL/glxint.h	/^    int transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLXvisualConfigRec
transparentBlue	drivers/GL/internal/glcore.h	/^    GLint transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLcontextModesRec
transparentGreen	drivers/GL/glcore.h	/^    GLint transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLcontextModesRec
transparentGreen	drivers/GL/glxint.h	/^    int transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLXFBConfigRec
transparentGreen	drivers/GL/glxint.h	/^    int transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLXvisualConfigRec
transparentGreen	drivers/GL/internal/glcore.h	/^    GLint transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLcontextModesRec
transparentIndex	drivers/GL/glcore.h	/^    GLint transparentIndex;$/;"	m	struct:__GLcontextModesRec
transparentIndex	drivers/GL/glxint.h	/^    int transparentIndex;$/;"	m	struct:__GLXFBConfigRec
transparentIndex	drivers/GL/glxint.h	/^    int transparentIndex;$/;"	m	struct:__GLXvisualConfigRec
transparentIndex	drivers/GL/internal/glcore.h	/^    GLint transparentIndex;$/;"	m	struct:__GLcontextModesRec
transparentPixel	drivers/GL/glcore.h	/^    GLint transparentPixel;$/;"	m	struct:__GLcontextModesRec
transparentPixel	drivers/GL/glxint.h	/^    int transparentPixel;	\/* visual_info extension *\/$/;"	m	struct:__GLXvisualConfigRec
transparentPixel	drivers/GL/internal/glcore.h	/^    GLint transparentPixel;$/;"	m	struct:__GLcontextModesRec
transparentRed	drivers/GL/glcore.h	/^    GLint transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLcontextModesRec
transparentRed	drivers/GL/glxint.h	/^    int transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLXFBConfigRec
transparentRed	drivers/GL/glxint.h	/^    int transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLXvisualConfigRec
transparentRed	drivers/GL/internal/glcore.h	/^    GLint transparentRed, transparentGreen, transparentBlue, transparentAlpha;$/;"	m	struct:__GLcontextModesRec
transparentType	drivers/GL/glxint.h	/^    int transparentType;$/;"	m	struct:__GLXFBConfigRec
tree	kernel/TeComputeAttributeStrategies.h	/^		KDTREE* tree;$/;"	m	class:TeMinimumDistanceStrategy
tree	kernel/TeViewTreeIterator.h	/^    TeViewTree* tree;$/;"	m	struct:TeViewTreeIterator::StackElem
tree	kernel/TeViewTreeIterator.h	/^    TeViewTree* tree;$/;"	m	struct:TeViewTreeRevIterator::StackElem
tree_	kernel/TeRedBlackTree.h	/^					TeRBTree<Node_i>* tree_;$/;"	m	class:TeREDBLACK::TeRBTree::internal_iterator
triEdges_	kernel/TeTin.h	/^	long	triEdges_[3];$/;"	m	class:TeTinTriangle
triangle	kernel/TeTin.h	/^	TeTinTriangle& triangle (long i)$/;"	f	class:TeTin
triangle3DPoints	kernel/TeTin.cpp	/^TeTin::triangle3DPoints(TeTinTriangle& t, TeCoord2D& pt0, TeCoord2D& pt1,$/;"	f	class:TeTin
triangle3DPoints	kernel/TeTin.h	/^	bool triangle3DPoints(long t, TeCoord2D& pt0, TeCoord2D& pt1, TeCoord2D& pt2,$/;"	f	class:TeTin
triangle3Neighbors	kernel/TeTin.cpp	/^TeTin::triangle3Neighbors(long t, long& neighbor0, long& neighbor1, long& neighbor2)$/;"	f	class:TeTin
triangleAt	kernel/TeTin.cpp	/^TeTin::triangleAt (TeCoord2D& pt)$/;"	f	class:TeTin
triangleAt	kernel/TeTin.cpp	/^TeTin::triangleAt(TeBox boxPt)$/;"	f	class:TeTin
triangleBegin	kernel/TeTin.h	/^	TeTinTriangleIterator triangleBegin()$/;"	f	class:TeTin
triangleContainsPoint	kernel/TeTin.cpp	/^TeTin::triangleContainsPoint(TeTinTriangle& t, TeCoord2D& pt) $/;"	f	class:TeTin
triangleContainsPoint	kernel/TeTin.h	/^	bool triangleContainsPoint(long t, TeCoord2D& pt)$/;"	f	class:TeTin
triangleEnd	kernel/TeTin.h	/^	TeTinTriangleIterator triangleEnd()$/;"	f	class:TeTin
triangleFirstDeriv	kernel/TeTin.cpp	/^TeTin::triangleFirstDeriv()$/;"	f	class:TeTin
triangleGradient	kernel/TeTin.cpp	/^TeTin::triangleGradient(TeTinTriangle& t, char gradtype, char slopetype)$/;"	f	class:TeTin
trianglePoints	kernel/TeTin.cpp	/^TeTin::trianglePoints(TeTinTriangle& t, TeCoord2D& pt0, TeCoord2D& pt1, TeCoord2D& pt2)$/;"	f	class:TeTin
trianglePoints	kernel/TeTin.h	/^	bool trianglePoints(long t, TeCoord2D& pt0, TeCoord2D& pt1, TeCoord2D& pt2)$/;"	f	class:TeTin
triangleSecondDeriv	kernel/TeTin.cpp	/^TeTin::triangleSecondDeriv()$/;"	f	class:TeTin
triangleSet_	kernel/TeTin.h	/^	TeTinTriangleSet	triangleSet_;	\/\/! Triangulation triangles vector$/;"	m	class:TeTin
triangleVertexAt	kernel/TeTin.cpp	/^TeTin::triangleVertexAt(long t, long vertex)$/;"	f	class:TeTin
triangleVertices	kernel/TeTin.cpp	/^TeTin::triangleVertices(TeTinTriangle& t, long& vertex0, long& vertex1, long& vertex2)$/;"	f	class:TeTin
triangleVertices	kernel/TeTin.h	/^	bool triangleVertices(long t, long& vertex0, long& vertex1, long& vertex2)$/;"	f	class:TeTin
trigHash	drivers/SQLite/sqlite3/sqlite3.c	/^  Hash trigHash;       \/* All triggers indexed by name *\/$/;"	m	struct:Schema	file:
triggerStepAllocate	drivers/SQLite/sqlite3/sqlite3.c	/^static TriggerStep *triggerStepAllocate($/;"	f	file:
trimFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void trimFunc($/;"	f	file:
truegrid_	drivers/GTM/TeGTM.h	/^	bool rectangular_, truegrid_, usernegrit_, useritalic_, usersublin_, usertachado_, map_;$/;"	m	class:TeGTMHeader
trustqual_nzttIdentityDesc	drivers/Oracle/OCI/include/nzt.h	/^   text *trustqual_nzttIdentityDesc;      \/* Trust qualifier *\/$/;"	m	struct:nzttIdentityDesc
tryLock	kernel/TeMutex.h	/^      inline bool tryLock()$/;"	f	class:TeMutex
ts_	kernel/TeQuerierImpl.h	/^	TeTemporalSeries*				ts_;			\/\/! temporal series$/;"	m	class:TeQuerierImpl
ts_	kernel/TeTime.h	/^    struct tm	ts_; 		\/\/ Unix time structure$/;"	m	class:TeTime	typeref:struct:TeTime::tm
tscale_	drivers/GTM/TeGTM.h	/^	float tscale_;$/;"	m	class:TeGTMTrackLogStyles
tsderivSet_	kernel/TeTin.h	/^	TeTinVertexSet		tsderivSet_;	\/\/! Triangles second derivatives vector$/;"	m	class:TeTin
ttoi	drivers/Firebird/ibpp/core/time.cpp	/^void IBPP::ttoi(int itime, int *h, int *m, int *s, int* t)$/;"	f	class:IBPP
ttype_	drivers/GTM/TeGTM.h	/^	unsigned char ttype_, tlabel_;$/;"	m	class:TeGTMTrackLogStyles
tuple	image_processing/TePDIKMeansClas.hpp	/^  vector<double> tuple;$/;"	m	class:TePDIKMeansClas
tuple_	image_processing/TePDIRegGrowSeg.hpp	/^      unsigned long   *tuple_;$/;"	m	class:TePDIRegGrowSeg
twiddle	utils/mtrand.h	/^inline unsigned long MTRand_int32::twiddle(unsigned long u, unsigned long v) {$/;"	f	class:MTRand_int32
twoNewTriangles	kernel/TeTin.cpp	/^TeTin::twoNewTriangles(long t, long v, std::set<long>& triangles)$/;"	f	class:TeTin
txnhp_	drivers/Oracle/TeOCIConnect.h	/^	OCITrans*		txnhp_;		\/\/!< service context OCI handle - controls the transactions $/;"	m	class:TeOCIConnection
typAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId typAttrId[TYP_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
typAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType typAttrType[TYP_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
type	drivers/GL/glxext.h	/^    int type;$/;"	m	struct:__anon93
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon100
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon101
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon102
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon103
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon104
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon105
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon106
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon107
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon108
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon109
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon110
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon111
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon112
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon113
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon114
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon115
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon116
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon117
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon118
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon120
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon121
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon122
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon98
type	drivers/GL/glxproto.h	/^    BYTE	type;			\/* X_Reply *\/$/;"	m	struct:__anon99
type	drivers/GL/glxproto.h	/^    BYTE	type;		       \/* X_Reply *\/$/;"	m	struct:__anon119
type	drivers/GL/glxproto.h	/^    BYTE        type;                   \/* X_Reply *\/$/;"	m	struct:__anon123
type	drivers/GL/glxproto.h	/^    BYTE        type;                   \/* X_Reply *\/$/;"	m	struct:__anon124
type	drivers/GL/glxproto.h	/^    BYTE        type;                   \/* X_Reply *\/$/;"	m	struct:__anon125
type	drivers/GL/glxproto.h	/^    BYTE        type;                   \/* X_Reply *\/$/;"	m	struct:__anon126
type	drivers/GL/glxproto.h	/^    BYTE type;$/;"	m	struct:__anon127
type	drivers/SQLite/sqlite3/sqlite3.c	/^  etByte type;             \/* Conversion paradigm *\/$/;"	m	struct:et_info	file:
type	drivers/SQLite/sqlite3/sqlite3.c	/^  u8  type;           \/* One of SQLITE_NULL, SQLITE_TEXT, SQLITE_INTEGER, etc *\/$/;"	m	struct:Mem	file:
type	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 type;              \/* One of the SQLITE_COLL_... values below *\/$/;"	m	struct:CollSeq	file:
type	drivers/SQLite/sqlite3/sqlite3.c	/^struct AttachKey { int type;  Token key; };$/;"	m	struct:AttachKey	file:
type	kernel/TeCoverageParams.h	/^    TeDataType type;    \/\/!< Data type of this dimension$/;"	m	struct:TeCoverageDimension
type	kernel/TeProxMatrixImplementation.h	/^	TeGPMImplementation type() {return type_;}$/;"	f	class:TeProxMatrixImplementation
type	kernel/TeTin.h	/^	TeTinEdgeType type () $/;"	f	class:TeTinEdge
type	kernel/TeTin.h	/^	TeTinVertexType type () $/;"	f	class:TeTinVertex
type	kernel/TeViewNode.h	/^	virtual int type() { return viewNodeParams_.nodeType_; };$/;"	f	class:TeViewNode
type	kernel/TeViewNode.h	/^	virtual void type(const int& t) { viewNodeParams_.nodeType_ = t; }$/;"	f	class:TeViewNode
type_	drivers/qt/TeQtCheckListItem.h	/^	ItemType type_;$/;"	m	class:TeQtCheckListItem
type_	kernel/TeAttribute.h	/^	TeAttrDataType  type_;		\/\/!< attribute type$/;"	m	struct:TeAttributeRep
type_	kernel/TeFragmentation.cpp	/^	int type_;	\/\/0 - Unico; 1 - Inicial de Overlap; 2 - Final de Overlap$/;"	m	struct:TeIPAux	file:
type_	kernel/TePieBar.h	/^	string			type_; \/\/ PIECHART or BARCHART$/;"	m	class:TePieBar
type_	kernel/TeProxMatrixImplementation.h	/^	TeGPMImplementation type_;$/;"	m	class:TeProxMatrixImplementation
type_	kernel/TeTable.h	/^	TeAttrTableType		type_;	\/\/ type of table$/;"	m	class:TeTable
type_	kernel/TeTemporalSeries.h	/^	TeTSDataType 		type_; $/;"	m	class:TeTSEntry
type_	kernel/TeTemporalSeries.h	/^	TeTSType			type_;			\/\/! type of the series$/;"	m	class:TeTSParams
type_	kernel/TeTin.h	/^	TeTinEdgeType type_;$/;"	m	class:TeTinEdge
type_	kernel/TeTin.h	/^	TeTinVertexType type_;$/;"	m	class:TeTinVertex
typeattrAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId typeattrAttrId[TYPEATTR_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
typeattrAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType typeattrAttrType[TYPEATTR_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
typemthdAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType typemthdAttrType[TYPEMTHD_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
typeofFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void typeofFunc($/;"	f	file:
typesVector_	functions/TeAddressLocator.h	/^		vector<string> typesVector_;				\/\/!< Vector with default types for street names$/;"	m	class:TeAddressLocator
typmethdAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId typmethdAttrId[TYPEMTHD_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
tz	drivers/SQLite/sqlite3/sqlite3.c	/^  int tz;            \/* Timezone offset in minutes *\/$/;"	m	struct:DateTime	file:
u	drivers/SQLite/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:Bitvec	typeref:union:Bitvec::__anon54	file:
u	drivers/SQLite/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:Expr	typeref:union:Expr::__anon42	file:
u	drivers/SQLite/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:IndexSample	typeref:union:IndexSample::__anon41	file:
u	drivers/SQLite/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:Mem	typeref:union:Mem::__anon49	file:
u	drivers/SQLite/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:Mem3Block	typeref:union:Mem3Block::__anon51	file:
u	drivers/SQLite/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:Walker	typeref:union:Walker::__anon48	file:
u	drivers/SQLite/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:WhereLevel	typeref:union:WhereLevel::__anon45	file:
u	drivers/SQLite/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:WherePlan	typeref:union:WherePlan::__anon44	file:
u	drivers/SQLite/sqlite3/sqlite3.c	/^  } u;$/;"	m	struct:WhereTerm	typeref:union:WhereTerm::__anon55	file:
u1	drivers/SQLite/sqlite3/sqlite3.c	/^  } u1;$/;"	m	struct:sqlite3	typeref:union:sqlite3::__anon40	file:
u16	drivers/SQLite/sqlite3/sqlite3.c	/^typedef UINT16_TYPE u16;           \/* 2-byte unsigned integer *\/$/;"	t	file:
u32	drivers/SQLite/sqlite3/sqlite3.c	/^typedef UINT32_TYPE u32;           \/* 4-byte unsigned integer *\/$/;"	t	file:
u32	drivers/SQLite/sqlite3/sqlite3.c	/^typedef unsigned int u32;         \/* 4-byte unsigned integer *\/$/;"	t	file:
u32	drivers/SQLite/sqlite3/sqlite3.c	/^typedef unsigned int u32;$/;"	t	file:
u64	drivers/SQLite/sqlite3/sqlite3.c	/^typedef sqlite3_uint64 u64;       \/* 8-byte unsigned integer *\/$/;"	t	file:
u64	drivers/SQLite/sqlite3/sqlite3.c	/^typedef sqlite_uint64 u64;         \/* 8-byte unsigned integer *\/$/;"	t	file:
u8	drivers/SQLite/sqlite3/sqlite3.c	/^typedef UINT8_TYPE u8;             \/* 1-byte unsigned integer *\/$/;"	t	file:
u8	drivers/SQLite/sqlite3/sqlite3.c	/^typedef unsigned char u8;         \/* 1-byte (or larger) unsigned integer *\/$/;"	t	file:
u8	drivers/SQLite/sqlite3/sqlite3.c	/^typedef unsigned char u8;$/;"	t	file:
ub1	drivers/Oracle/OCI/include/oratypes.h	/^typedef unsigned char  ub1;                   $/;"	t
ub1	drivers/Oracle/OCI/include/oratypes.h	36;"	d
ub2	drivers/Oracle/OCI/include/oratypes.h	/^typedef unsigned short    ub2;                $/;"	t
ub2	drivers/Oracle/OCI/include/oratypes.h	55;"	d
ub4	drivers/Oracle/OCI/include/oratypes.h	/^typedef unsigned int  ub4;                   $/;"	t
ub4	drivers/Oracle/OCI/include/oratypes.h	75;"	d
ub8	drivers/Oracle/OCI/include/oratypes.h	/^ typedef oraub8 ub8;$/;"	t
ub8	drivers/Oracle/OCI/include/oratypes.h	98;"	d
ubig_ora	drivers/Oracle/OCI/include/oratypes.h	/^typedef unsigned _int64 ubig_ora;     $/;"	t
ubig_ora	drivers/Oracle/OCI/include/oratypes.h	/^typedef unsigned long  ubig_ora;             $/;"	t
ubig_ora	drivers/Oracle/OCI/include/oratypes.h	221;"	d
ubig_ora	drivers/Oracle/OCI/include/oratypes.h	240;"	d
ucUtf8	drivers/SQLite/sqlite3/sqlite3.c	/^static UconvObject ucUtf8 = NULL; \/* convert between UTF-8 and UCS-2 *\/$/;"	v	file:
uclCp	drivers/SQLite/sqlite3/sqlite3.c	/^static UconvObject uclCp = NULL;  \/* convert between local codepage and UCS-2 *\/$/;"	v	file:
uid	drivers/Firebird/ibpp/core/ibase.h	/^	int uid;					\/* the user's id *\/$/;"	m	struct:__anon65
uid2PortalRowMap	drivers/qt/TeQtGridSource.h	/^	map<string, int>& uid2PortalRowMap() { return uid2PortalRowMap_; }$/;"	f	class:TeQtGridSource
uid2PortalRowMap_	drivers/qt/TeQtGridSource.h	/^	map<string, int> uid2PortalRowMap_;$/;"	m	class:TeQtGridSource
uint32_t	drivers/Firebird/ibpp/core/ibpp.h	/^	typedef unsigned __int32 uint32_t;$/;"	t
uint32_t	drivers/Firebird/ibpp/core/ibpp.h	/^	typedef unsigned int uint32_t;$/;"	t
uiqi_index	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::uiqi_index(TePDITypes::TePDIRasterPtrType original_raster, int original_band, TePDITypes::TePDIRasterPtrType fused_raster, int fused_band, TeSharedPtr<double> uiqi)$/;"	f	class:TePDIFusionIndexes
ulCol_	kernel/TeDecoderVirtualMemory.h	/^	int ulCol_;				\/\/<! Column index of the upper-left corner$/;"	m	class:TeMemoryPage
ulLin_	kernel/TeDecoderVirtualMemory.h	/^	int ulLin_;				\/\/<! Line index of the upper-left corner$/;"	m	class:TeMemoryPage
unLock	kernel/TeMutex.h	/^      inline void unLock()$/;"	f	class:TeMutex
unLockFlag	drivers/SQLite/sqlite3/sqlite3.c	/^  unsigned char unLockFlag;         \/* 1 = unlock, 0 = lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
unbindContext	drivers/GL/dri_interface.h	/^    GLboolean (*unbindContext)(__DRInativeDisplay *dpy, int scrn, __DRIid draw,$/;"	m	struct:__DRIcontextRec
unbindContext	drivers/GL/internal/dri_interface.h	/^    GLboolean (*unbindContext)(__DRInativeDisplay *dpy, int scrn, __DRIid draw,$/;"	m	struct:__DRIcontextRec
underline_	drivers/GTM/TeGTM.h	/^	unsigned char dspl_, border_, italic_, underline_, strikeout_, alignment_;$/;"	m	class:TeGTMWaypointsStyles
unicodeToMbcs	drivers/SQLite/sqlite3/sqlite3.c	/^static char *unicodeToMbcs(const WCHAR *zWideFilename){$/;"	f	file:
unicodeToUtf8	drivers/SQLite/sqlite3/sqlite3.c	/^static char *unicodeToUtf8(const WCHAR *zWideFilename){$/;"	f	file:
unique2ObjectMap_	drivers/qt/TeQtGrid.h	/^	map<string, string>		unique2ObjectMap_;$/;"	m	class:TeQtGrid
uniqueId	kernel/TeBaseSTInstance.h	/^	virtual string uniqueId (int index) $/;"	f	class:TeBaseSTInstance
uniqueId	kernel/TeBaseSTInstance.h	/^	virtual vector<string>& uniqueId () $/;"	f	class:TeBaseSTInstance
uniqueId	kernel/TeBaseSTInstance.h	/^	virtual void uniqueId (const vector<string>& ids) $/;"	f	class:TeBaseSTInstance
uniqueIdPos_	drivers/qt/TeQtGrid.h	/^	int						uniqueIdPos_;$/;"	m	class:TeQtGrid
uniqueIndex_	kernel/TeQuerierDB.h	/^	map<int, vector<int> >		uniqueIndex_; $/;"	m	class:TeQuerierDB
uniqueMap_	drivers/qt/TeApplicationUtils.h	/^	map<string, int> uniqueMap_;	\/\/ uniqueId to grid status (collection: grid_status)$/;"	m	struct:ObjectInfo
uniqueName	kernel/TeTable.h	/^	string uniqueName()$/;"	f	class:TeTable
uniqueNames_	kernel/TeQuerierDBStr1.h	/^	vector<string>				uniqueNames_;$/;"	m	class:TeQuerierDBStr1
unique_id_	kernel/TeBaseSTInstance.h	/^	vector<string>			unique_id_;	$/;"	m	class:TeBaseSTInstance
unit_	kernel/TeAttribute.h	/^	string	unit_;				\/\/!< measurement unit ( e.g., m ) if applicable$/;"	m	struct:TeAttribute
units	kernel/TeProjection.h	/^	string  units;       \/\/!< units$/;"	m	struct:TeProjectionParams
units	kernel/TeProjection.h	/^	string& units()$/;"	f	class:TeProjection
unixAccess	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixAccess($/;"	f	file:
unixCheckReservedLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
unixClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixClose(sqlite3_file *id){$/;"	f	file:
unixCurrentTime	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixCurrentTime(sqlite3_vfs *NotUsed, double *prNow){$/;"	f	file:
unixCurrentTimeInt64	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixCurrentTimeInt64(sqlite3_vfs *NotUsed, sqlite3_int64 *piNow){$/;"	f	file:
unixDelete	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixDelete($/;"	f	file:
unixDeviceCharacteristics	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixDeviceCharacteristics(sqlite3_file *NotUsed){$/;"	f	file:
unixDlClose	drivers/SQLite/sqlite3/sqlite3.c	/^static void unixDlClose(sqlite3_vfs *NotUsed, void *pHandle){$/;"	f	file:
unixDlClose	drivers/SQLite/sqlite3/sqlite3.c	29936;"	d	file:
unixDlError	drivers/SQLite/sqlite3/sqlite3.c	/^static void unixDlError(sqlite3_vfs *NotUsed, int nBuf, char *zBufOut){$/;"	f	file:
unixDlError	drivers/SQLite/sqlite3/sqlite3.c	29934;"	d	file:
unixDlOpen	drivers/SQLite/sqlite3/sqlite3.c	/^static void *unixDlOpen(sqlite3_vfs *NotUsed, const char *zFilename){$/;"	f	file:
unixDlOpen	drivers/SQLite/sqlite3/sqlite3.c	29933;"	d	file:
unixDlSym	drivers/SQLite/sqlite3/sqlite3.c	/^static void (*unixDlSym(sqlite3_vfs *NotUsed, void *p, const char*zSym))(void){$/;"	f	file:
unixDlSym	drivers/SQLite/sqlite3/sqlite3.c	29935;"	d	file:
unixEnterMutex	drivers/SQLite/sqlite3/sqlite3.c	/^static void unixEnterMutex(void){$/;"	f	file:
unixFile	drivers/SQLite/sqlite3/sqlite3.c	/^struct unixFile {$/;"	s	file:
unixFile	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct unixFile unixFile;$/;"	t	typeref:struct:unixFile	file:
unixFileControl	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
unixFileId	drivers/SQLite/sqlite3/sqlite3.c	/^struct unixFileId {$/;"	s	file:
unixFileLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixFileLock(unixFile *pFile, struct flock *pLock){$/;"	f	file:
unixFileSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixFileSize(sqlite3_file *id, i64 *pSize){$/;"	f	file:
unixFullPathname	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixFullPathname($/;"	f	file:
unixGetLastError	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixGetLastError(sqlite3_vfs *NotUsed, int NotUsed2, char *NotUsed3){$/;"	f	file:
unixGetSystemCall	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3_syscall_ptr unixGetSystemCall($/;"	f	file:
unixGetTempname	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixGetTempname(int nBuf, char *zBuf){$/;"	f	file:
unixInodeInfo	drivers/SQLite/sqlite3/sqlite3.c	/^struct unixInodeInfo {$/;"	s	file:
unixInodeInfo	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct unixInodeInfo unixInodeInfo;   \/* An i-node *\/$/;"	t	typeref:struct:unixInodeInfo	file:
unixLeaveMutex	drivers/SQLite/sqlite3/sqlite3.c	/^static void unixLeaveMutex(void){$/;"	f	file:
unixLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixLogError	drivers/SQLite/sqlite3/sqlite3.c	25602;"	d	file:
unixLogErrorAtLine	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixLogErrorAtLine($/;"	f	file:
unixMutexHeld	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixMutexHeld(void) {$/;"	f	file:
unixNextSystemCall	drivers/SQLite/sqlite3/sqlite3.c	/^static const char *unixNextSystemCall(sqlite3_vfs *p, const char *zName){$/;"	f	file:
unixOpen	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixOpen($/;"	f	file:
unixOpenSharedMemory	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixOpenSharedMemory(unixFile *pDbFd){$/;"	f	file:
unixRandomness	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixRandomness(sqlite3_vfs *NotUsed, int nBuf, char *zBuf){$/;"	f	file:
unixRead	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixRead($/;"	f	file:
unixSectorSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixSectorSize(sqlite3_file *NotUsed){$/;"	f	file:
unixSetSystemCall	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixSetSystemCall($/;"	f	file:
unixShm	drivers/SQLite/sqlite3/sqlite3.c	/^struct unixShm {$/;"	s	file:
unixShm	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct unixShm unixShm;               \/* Connection shared memory *\/$/;"	t	typeref:struct:unixShm	file:
unixShmBarrier	drivers/SQLite/sqlite3/sqlite3.c	/^static void unixShmBarrier($/;"	f	file:
unixShmBarrier	drivers/SQLite/sqlite3/sqlite3.c	28812;"	d	file:
unixShmLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixShmLock($/;"	f	file:
unixShmLock	drivers/SQLite/sqlite3/sqlite3.c	28811;"	d	file:
unixShmMap	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixShmMap($/;"	f	file:
unixShmMap	drivers/SQLite/sqlite3/sqlite3.c	28810;"	d	file:
unixShmNode	drivers/SQLite/sqlite3/sqlite3.c	/^struct unixShmNode {$/;"	s	file:
unixShmNode	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct unixShmNode unixShmNode;       \/* Shared memory instance *\/$/;"	t	typeref:struct:unixShmNode	file:
unixShmPurge	drivers/SQLite/sqlite3/sqlite3.c	/^static void unixShmPurge(unixFile *pFd){$/;"	f	file:
unixShmSystemLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixShmSystemLock($/;"	f	file:
unixShmUnmap	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixShmUnmap($/;"	f	file:
unixShmUnmap	drivers/SQLite/sqlite3/sqlite3.c	28813;"	d	file:
unixSleep	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixSleep(sqlite3_vfs *NotUsed, int microseconds){$/;"	f	file:
unixSync	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixSync(sqlite3_file *id, int flags){$/;"	f	file:
unixTempFileDir	drivers/SQLite/sqlite3/sqlite3.c	/^static const char *unixTempFileDir(void){$/;"	f	file:
unixTruncate	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixTruncate(sqlite3_file *id, i64 nByte){$/;"	f	file:
unixUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixWrite	drivers/SQLite/sqlite3/sqlite3.c	/^static int unixWrite($/;"	f	file:
unix_syscall	drivers/SQLite/sqlite3/sqlite3.c	/^static struct unix_syscall {$/;"	s	file:
unlikely	drivers/SQLite/sqlite3/sqlite3.c	535;"	d	file:
unlikely	drivers/SQLite/sqlite3/sqlite3.c	538;"	d	file:
unloadPlugins	drivers/spl/PluginsManager.cpp	/^void PluginsManager::unloadPlugins()$/;"	f	class:PluginsManager
unlock	drivers/GL/glcore.h	/^    void (*unlock)(__GLdrawableBuffer *buf, __GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawableBufferRec
unlock	drivers/GL/internal/glcore.h	/^    void (*unlock)(__GLdrawableBuffer *buf, __GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawableBufferRec
unlockBtreeIfUnused	drivers/SQLite/sqlite3/sqlite3.c	/^static void unlockBtreeIfUnused(BtShared *pBt){$/;"	f	file:
unlockBtreeMutex	drivers/SQLite/sqlite3/sqlite3.c	/^static void unlockBtreeMutex(Btree *p){$/;"	f	file:
unlockDP	drivers/GL/glcore.h	/^    void (*unlockDP)(__GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawablePrivateRec
unlockDP	drivers/GL/internal/glcore.h	/^    void (*unlockDP)(__GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawablePrivateRec
unlockReadLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int unlockReadLock( os2File *id ){$/;"	f	file:
unlockReadLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int unlockReadLock(winFile *pFile){$/;"	f	file:
unlock_notify	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*unlock_notify)(sqlite3*,void(*)(void**,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
unlock_notify	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*unlock_notify)(sqlite3*,void(*)(void**,int),void*);$/;"	m	struct:sqlite3_api_routines
unmarkDelete	drivers/Oracle/OCI/include/occiObjects.h	/^void Ref<T>::unmarkDelete ()$/;"	f	class:oracle::occi::Ref
unput	kernel/lexTemporal.cpp	161;"	d	file:
unselectAllItems	drivers/qt/TeQtDatabasesListView.cpp	/^void TeQtDatabasesListView::unselectAllItems()$/;"	f	class:TeQtDatabasesListView
unselectAllItems	drivers/qt/TeQtViewsListView.cpp	/^void TeQtViewsListView::unselectAllItems()$/;"	f	class:TeQtViewsListView
unselectChildren	drivers/qt/TeQtCheckListItem.cpp	/^void TeQtCheckListItem::unselectChildren()$/;"	f	class:TeQtCheckListItem
untestedTerms	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 untestedTerms;    \/* Not all WHERE terms resolved by outer loop *\/$/;"	m	struct:WhereInfo	file:
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon100
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon101
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon102
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon103
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon104
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon105
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon106
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon107
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon108
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon109
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon110
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon111
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon112
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon113
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon114
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon115
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon116
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon118
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon120
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon121
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon122
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon98
unused	drivers/GL/glxproto.h	/^    CARD8	unused;			\/* not used *\/$/;"	m	struct:__anon99
unused	drivers/GL/glxproto.h	/^    CARD8	unused;		       \/* not used *\/$/;"	m	struct:__anon119
unused	drivers/GL/glxproto.h	/^    CARD8       unused;                 \/* not used *\/$/;"	m	struct:__anon123
unused	drivers/GL/glxproto.h	/^    CARD8       unused;                 \/* not used *\/$/;"	m	struct:__anon124
unused	drivers/GL/glxproto.h	/^    CARD8       unused;                 \/* not used *\/$/;"	m	struct:__anon125
unused	drivers/GL/glxproto.h	/^    CARD8       unused;                 \/* not used *\/$/;"	m	struct:__anon126
unused	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 unused;                     \/* Unused (padding) field *\/$/;"	m	struct:WalIndexHdr	file:
upDown_	drivers/qt/TeQtColorBar.h	/^	bool	upDown_;$/;"	m	class:TeQtColorBar
up_conv_buf	image_processing/TePDIBufferedFilter.cpp	/^void TePDIBufferedFilter::up_conv_buf( TePDITypes::TePDIRasterPtrType& inRaster,$/;"	f	class:TePDIBufferedFilter
update	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::update()$/;"	f	class:TeQtGrid
update	drivers/qt/TeQtTable.cpp	/^void TeQtTable::update ()$/;"	f	class:TeQtTable
update	image_processing/TePDIJointHistogram.cpp	/^bool TePDIJointHistogram::update( TeRaster& inputRaster1, $/;"	f	class:TePDIJointHistogram
update	kernel/TeKdTree.h	/^void TeAdaptativeKdTree<KdTreeNode>::update(KdTreeNode* node, const kdKey& key, vector<kdDataItem>& report, vector<double>& sqrDists, TeBox& rect) const$/;"	f	class:TeSAM::TeAdaptativeKdTree
update8Bits	image_processing/TePDIJointHistogram.cpp	/^bool TePDIJointHistogram::update8Bits( TeRaster& inputRaster1, $/;"	f	class:TePDIJointHistogram
updateAccumulator	drivers/SQLite/sqlite3/sqlite3.c	/^static void updateAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
updateAddressMetadata	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::updateAddressMetadata(const TeAddressMetadata& metadata)$/;"	f	class:TeAddressLocator
updateAddressTable	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::updateAddressTable(const string& c1, const int& v1, TeGeocodeTableMetadata& tableMetadata, const string& objectId)$/;"	f	class:TeAddressLocator
updateAlias	drivers/qt/TeQtThemeItem.cpp	/^void TeQtThemeItem::updateAlias()$/;"	f	class:TeQtThemeItem
updateAppTheme	drivers/qt/TeApplicationUtils.cpp	/^bool updateAppTheme (TeDatabase* db, TeAppTheme* appTheme, const string& tableName)$/;"	f
updateArc	kernel/TeDatabase.cpp	/^TeDatabase::updateArc(const string& table, TeArc &arc)$/;"	f	class:TeDatabase
updateArcSet	kernel/TeDatabase.cpp	/^TeDatabase::updateArcSet	(const string& table, TeArcSet &as)$/;"	f	class:TeDatabase
updateAttributeTable	kernel/TeLayer.cpp	/^TeLayer::updateAttributeTable(TeTable& table)$/;"	f	class:TeLayer
updateBBox	drivers/ado/TeAdoDB.cpp	/^TeAdo::updateBBox(const string& tableName, const string& idName, int idValue, const TeBox& box)$/;"	f	class:TeAdo
updateBBox	drivers/ado/TeAdoOracle.cpp	/^bool TeOracle::updateBBox(const string& tableName, const string& idName, $/;"	f	class:TeOracle
updateBBox	kernel/TeDatabase.cpp	/^TeDatabase::updateBBox(const string& tableName, const string& keyColumnName, int keyValue, const TeBox& box)$/;"	f	class:TeDatabase
updateBox	kernel/TeBox.cpp	/^updateBox ( TeBox& box, const TeBox& other )$/;"	f
updateBox	kernel/TeBox.cpp	/^updateBox ( TeBox& box, const TeCoord2D& pt )$/;"	f
updateBox	kernel/TeBox.cpp	/^updateBox ( TeBox& box, const TeGeometry& geo )$/;"	f
updateCell	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::updateCell(const string& table, TeCell &cell)$/;"	f	class:TeOracleSpatial
updateCell	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::updateCell(const string& table, TeCell &c)$/;"	f	class:TePostGIS
updateCell	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::updateCell(const string& table, TeCell &c)$/;"	f	class:TePostgreSQL
updateCell	kernel/TeDatabase.cpp	/^TeDatabase::updateCell(const string& table, TeCell &c)$/;"	f	class:TeDatabase
updateCellSet	kernel/TeDatabase.cpp	/^TeDatabase::updateCellSet	(const string& table, TeCellSet &cs)$/;"	f	class:TeDatabase
updateCells	kernel/TeLayer.cpp	/^TeLayer::updateCells(TeCellSet& cellSet)$/;"	f	class:TeLayer
updateClipRegion	drivers/GL/glcore.h	/^    void (*updateClipRegion)(__GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawablePrivateRec
updateClipRegion	drivers/GL/internal/glcore.h	/^    void (*updateClipRegion)(__GLdrawablePrivate *glPriv);$/;"	m	struct:__GLdrawablePrivateRec
updateContents	drivers/qt/TeQtBigTable.cpp	/^void TeQtBigTable::updateContents()$/;"	f	class:TeQtBigTable
updateDB20To30	utils/TeUpdateDBVersion.cpp	/^bool updateDB20To30(TeDatabase* db, string& errorMessage)$/;"	f
updateDB301To302	utils/TeUpdateDBVersion.cpp	/^bool updateDB301To302(TeDatabase* db, string& errorMessage)$/;"	f
updateDB302To310	utils/TeUpdateDBVersion.cpp	/^bool updateDB302To310(TeDatabase* db, string& errorMessage)$/;"	f
updateDB30To301	utils/TeUpdateDBVersion.cpp	/^bool updateDB30To301(TeDatabase* db, string& errorMessage)$/;"	f
updateDB310To311	utils/TeUpdateDBVersion.cpp	/^bool updateDB310To311(TeDatabase* db, string& errorMessage)$/;"	f
updateDB311To320	utils/TeUpdateDBVersion.cpp	/^bool updateDB311To320(TeDatabase* db, string& errorMessage)$/;"	f
updateDB3201To331	utils/TeUpdateDBVersion.cpp	/^bool updateDB3201To331(TeDatabase* db, string& errorMessage)$/;"	f
updateDB320To3201	utils/TeUpdateDBVersion.cpp	/^bool updateDB320To3201(TeDatabase* db, string& errorMessage)$/;"	f
updateDB331To400	utils/TeUpdateDBVersion.cpp	/^bool updateDB331To400(TeDatabase* db, string& errorMessage)$/;"	f
updateDB400To412	utils/TeUpdateDBVersion.cpp	/^bool updateDB400To412(TeDatabase* db, string& errorMessage)$/;"	f
updateDBVersion	utils/TeUpdateDBVersion.cpp	/^bool updateDBVersion(TeDatabase* db, string& DBversion, string& errorMessage)$/;"	f
updateDatum	kernel/TeDatabase.cpp	/^bool TeDatabase::updateDatum(const TeDatum& datum)$/;"	f	class:TeDatabase
updateExcTPErrList	kernel/TeGeometricTransformation.cpp	/^void TeGeometricTransformation::updateExcTPErrList( $/;"	f	class:TeGeometricTransformation
updateFloat	image_processing/TePDIJointHistogram.cpp	/^bool TePDIJointHistogram::updateFloat( TeRaster& inputRaster1, $/;"	f	class:TePDIJointHistogram
updateFuncPtr	kernel/TeDecoderMemory.cpp	/^void TeDecoderMemory::updateFuncPtr()$/;"	f	class:TeDecoderMemory
updateFuncPtrVectors	kernel/TeDecoderSmartMem.cpp	/^void TeDecoderSmartMem::updateFuncPtrVectors()$/;"	f	class:TeDecoderSmartMem
updateGridColor	drivers/qt/TeApplicationUtils.cpp	/^bool updateGridColor(TeDatabase* db, int themeId, TeObjectSelectionMode sel, TeColor& color)$/;"	f
updateGrouping	kernel/TeDatabase.cpp	/^TeDatabase::updateGrouping (int themeId, const TeGrouping& grouping)$/;"	f	class:TeDatabase
updateInteger	image_processing/TePDIJointHistogram.cpp	/^bool TePDIJointHistogram::updateInteger( TeRaster& inputRaster1, $/;"	f	class:TePDIJointHistogram
updateKernelMetadata	drivers/qt/TeApplicationUtils.cpp	/^bool updateKernelMetadata(TeDatabase* db, TeKernelParams& kernelPar)$/;"	f
updateLayer	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::updateLayer(TeLayer *layer)$/;"	f	class:TeFirebird
updateLayer	drivers/ado/TeAdoDB.cpp	/^TeAdo::updateLayer(TeLayer* layer)$/;"	f	class:TeAdo
updateLayer	drivers/ado/TeAdoOracle.cpp	/^TeOracle::updateLayer(TeLayer *layer)$/;"	f	class:TeOracle
updateLayer	kernel/TeDatabase.cpp	/^TeDatabase::updateLayer(TeLayer *layer)$/;"	f	class:TeDatabase
updateLayerBox	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::updateLayerBox(TeLayer* layer)$/;"	f	class:TeFirebird
updateLayerBox	drivers/ado/TeAdoDB.cpp	/^TeAdo::updateLayerBox(TeLayer* layer)$/;"	f	class:TeAdo
updateLayerBox	drivers/ado/TeAdoOracle.cpp	/^TeOracle::updateLayerBox(TeLayer *layer)$/;"	f	class:TeOracle
updateLayerBox	kernel/TeDatabase.cpp	/^TeDatabase::updateLayerBox(TeLayer* layer)$/;"	f	class:TeDatabase
updateLayerBox	kernel/TeLayer.cpp	/^TeLayer::updateLayerBox()$/;"	f	class:TeLayer
updateLayerBox	kernel/TeLayer.cpp	/^TeLayer::updateLayerBox(const TeBox& box)$/;"	f	class:TeLayer
updateLayerEditionTime	kernel/TeLayer.cpp	/^bool TeLayer::updateLayerEditionTime(const bool& setEditionToNow)$/;"	f	class:TeLayer
updateLegend	kernel/TeDatabase.cpp	/^TeDatabase::updateLegend (TeLegendEntry *legend)$/;"	f	class:TeDatabase
updateLegend	kernel/TeDatabase.cpp	/^TeDatabase::updateLegend (vector<TeLegendEntry>& legVec)$/;"	f	class:TeDatabase
updateLine	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::updateLine (const string& table, TeLine2D &l)$/;"	f	class:TeFirebird
updateLine	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::updateLine (const string& table, TeLine2D &l)$/;"	f	class:TeMySQL
updateLine	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::updateLine(const string& table, TeLine2D &line)$/;"	f	class:TeOCIOracle
updateLine	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::updateLine(const string& table, TeLine2D &line)$/;"	f	class:TeOracleSpatial
updateLine	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::updateLine(const string& table, TeLine2D& l)$/;"	f	class:TePostGIS
updateLine	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::updateLine(const string& table, TeLine2D& l)$/;"	f	class:TePostgreSQL
updateLine	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::updateLine(const string& table, TeLine2D &l)$/;"	f	class:TeSQLite
updateLine	drivers/ado/TeAdoDB.cpp	/^TeAdo::updateLine (const string& table, TeLine2D &line)$/;"	f	class:TeAdo
updateLine	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::updateLine (const string& table, TeLine2D &line)$/;"	f	class:TeFireBird
updateLineSet	kernel/TeDatabase.cpp	/^TeDatabase::updateLineSet	(const string& table, TeLineSet &ls)$/;"	f	class:TeDatabase
updateLines	kernel/TeLayer.cpp	/^TeLayer::updateLines (TeLineSet& lineSet)$/;"	f	class:TeLayer
updateMapping	drivers/SQLite/sqlite3/sqlite3.c	/^static int updateMapping($/;"	f	file:
updateMaxBlobsize	drivers/SQLite/sqlite3/sqlite3.c	/^static void updateMaxBlobsize(Mem *p){$/;"	f	file:
updateMediaDescription	drivers/qt/TeApplicationUtils.cpp	/^bool updateMediaDescription(TeDatabase* db, const string& mediaName, const string& mediaTable, const string& desc)$/;"	f
updateNode	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::updateNode (const string& table, TeNode &node)$/;"	f	class:TeOracleSpatial
updateNode	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::updateNode(const string& table, TeNode& node)$/;"	f	class:TePostGIS
updateNode	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::updateNode(const string& table, TeNode &node)$/;"	f	class:TePostgreSQL
updateNode	drivers/ado/TeAdoDB.cpp	/^TeAdo::updateNode (const string& table, TeNode &node)$/;"	f	class:TeAdo
updateNode	kernel/TeDatabase.cpp	/^TeDatabase::updateNode(const string& table, TeNode &node)$/;"	f	class:TeDatabase
updateNodeSet	kernel/TeDatabase.cpp	/^TeDatabase::updateNodeSet	(const string& table, TeNodeSet &ns)$/;"	f	class:TeDatabase
updateNodesTrees	utils/TeDatabaseUtils.cpp	/^void updateNodesTrees(std::set<TeViewNode*>& orphanNodes, TeView* view)$/;"	f
updateParams	kernel/TeDecoder.cpp	/^void TeDecoder::updateParams(TeRasterParams& par)$/;"	f	class:TeDecoder
updateParams	kernel/TeRaster.cpp	/^void TeRaster::updateParams( TeRasterParams& par)$/;"	f	class:TeRaster
updatePieBarLocation	drivers/qt/TeApplicationUtils.cpp	/^bool updatePieBarLocation (TeDatabase* db, TeAppTheme* theme, TeCoord2D pt) $/;"	f
updatePluginParameters	drivers/spl/PluginParameters.cpp	/^void PluginParameters::updatePluginParameters( PluginParameters& pp ) const$/;"	f	class:PluginParameters
updatePluginParametersFPT	drivers/spl/PluginParameters.h	/^      typedef void (*updatePluginParametersFPT)( PluginParameters& );$/;"	t	class:PluginParameters
updatePluginParametersFP_	drivers/spl/PluginParameters.h	/^      updatePluginParametersFPT updatePluginParametersFP_;$/;"	m	class:PluginParameters
updatePoint	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::updatePoint (const string& table, TePoint &point)$/;"	f	class:TeOracleSpatial
updatePoint	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::updatePoint(const string& table, TePoint &p)$/;"	f	class:TePostGIS
updatePoint	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::updatePoint(const string& table, TePoint &p)$/;"	f	class:TePostgreSQL
updatePoint	drivers/ado/TeAdoDB.cpp	/^TeAdo::updatePoint (const string& table, TePoint &p)$/;"	f	class:TeAdo
updatePoint	kernel/TeDatabase.cpp	/^TeDatabase::updatePoint(const string& table, TePoint &p)$/;"	f	class:TeDatabase
updatePointLocation	drivers/qt/TeApplicationUtils.cpp	/^bool updatePointLocation (TeDatabase* db, TeAppTheme* theme, TeCoord2D pt) $/;"	f
updatePointSet	kernel/TeDatabase.cpp	/^TeDatabase::updatePointSet (const string& table, TePointSet &ps)$/;"	f	class:TeDatabase
updatePoints	kernel/TeLayer.cpp	/^TeLayer::updatePoints (TePointSet& pointSet)$/;"	f	class:TeLayer
updatePolygon	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::updatePolygon (const string& table, TePolygon &poly )$/;"	f	class:TeFirebird
updatePolygon	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::updatePolygon (const string& table, TePolygon &poly )$/;"	f	class:TeMySQL
updatePolygon	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::updatePolygon (const string& table, TePolygon &poly)$/;"	f	class:TeOCIOracle
updatePolygon	drivers/Oracle/TeOracleSpatial.cpp	/^TeOracleSpatial::updatePolygon (const string& table, TePolygon &poly)$/;"	f	class:TeOracleSpatial
updatePolygon	drivers/PostgreSQL/TePostGIS.cpp	/^bool TePostGIS::updatePolygon(const string& table, TePolygon &p)$/;"	f	class:TePostGIS
updatePolygon	drivers/PostgreSQL/TePostgreSQL.cpp	/^bool TePostgreSQL::updatePolygon(const string& table, TePolygon &p)$/;"	f	class:TePostgreSQL
updatePolygon	drivers/SQLite/TeSQLite.cpp	/^bool TeSQLite::updatePolygon(const string& table, TePolygon &p)$/;"	f	class:TeSQLite
updatePolygon	drivers/ado/TeAdoDB.cpp	/^TeAdo::updatePolygon (const string& table, TePolygon &p )$/;"	f	class:TeAdo
updatePolygon	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::updatePolygon (const string& table, TePolygon &p )$/;"	f	class:TeFireBird
updatePolygonSet	kernel/TeDatabase.cpp	/^TeDatabase::updatePolygonSet (const string& table, TePolygonSet &ps)$/;"	f	class:TeDatabase
updatePolygons	kernel/TeLayer.cpp	/^TeLayer::updatePolygons (TePolygonSet& polySet)$/;"	f	class:TeLayer
updatePortalContents	drivers/qt/TeQtGrid.cpp	/^void TeQtGrid::updatePortalContents()$/;"	f	class:TeQtGrid
updateProgressInterface	image_processing/TePDIPIManager.cpp	/^bool TePDIPIManager::updateProgressInterface() const$/;"	f	class:TePDIPIManager
updateProject	kernel/TeDatabase.cpp	/^TeDatabase::updateProject(TeProject *project)$/;"	f	class:TeDatabase
updateProjection	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::updateProjection (TeProjection *proj)$/;"	f	class:TeFirebird
updateProjection	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::updateProjection (TeProjection *proj)$/;"	f	class:TeFireBird
updateProjection	kernel/TeDatabase.cpp	/^TeDatabase::updateProjection (TeProjection *proj)$/;"	f	class:TeDatabase
updateRasterMetadata	kernel/TeDatabase.cpp	/^TeDatabase::updateRasterMetadata (const string& tableName, int geomId, TeRasterParams& par)$/;"	f	class:TeDatabase
updateRasterRepresentation	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::updateRasterRepresentation(int layerId, TeRasterParams& par, const string& objectId)$/;"	f	class:TeFirebird
updateRasterRepresentation	kernel/TeDatabase.cpp	/^TeDatabase::updateRasterRepresentation(int layerId, TeRasterParams& par, const string& objectId)$/;"	f	class:TeDatabase
updateRepresentation	drivers/Firebird/TeFirebird.cpp	/^bool TeFirebird::updateRepresentation (int layerId, TeRepresentation& rep)$/;"	f	class:TeFirebird
updateRepresentation	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::updateRepresentation (int layerId, TeRepresentation& rep)$/;"	f	class:TeFireBird
updateRepresentation	kernel/TeDatabase.cpp	/^TeDatabase::updateRepresentation (int layerId, TeRepresentation& rep)$/;"	f	class:TeDatabase
updateRow	kernel/TeSTEFunctionsDB.h	/^bool updateRow (Element* elem, TeTable table, const string& uniqueId, TeDatabase* db, vector<int>* indexes)$/;"	f
updateSRSId	kernel/TeDatabase.cpp	/^bool TeDatabase::updateSRSId(TeProjection* proj, int srsId)$/;"	f	class:TeDatabase
updateSelection	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::updateSelection()$/;"	f	class:TeQtGLWidget
updateStatistics	image_processing/TePDICluster.cpp	/^void TePDICluster::updateStatistics()$/;"	f	class:TePDICluster
updateTPErrVec	kernel/TeGeometricTransformation.cpp	/^void TeGeometricTransformation::updateTPErrVec( $/;"	f	class:TeGeometricTransformation
updateTVInterface	drivers/spl/PluginParameters.cpp	/^void PluginParameters::updateTVInterface( const PluginParameters& ) const$/;"	f	class:PluginParameters
updateTVInterface	drivers/spl/PluginParameters.cpp	/^void PluginParameters::updateTVInterface() const$/;"	f	class:PluginParameters
updateTVInterfaceFPT	drivers/spl/PluginParameters.h	/^      typedef void (*updateTVInterfaceFPT)( $/;"	t	class:PluginParameters
updateTVInterfaceFP_	drivers/spl/PluginParameters.h	/^      updateTVInterfaceFPT updateTVInterfaceFP_;$/;"	m	class:PluginParameters
updateTable	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::updateTable(TeTable &table)$/;"	f	class:TeFirebird
updateTable	drivers/MySQL/TeMySQL.cpp	/^        TeMySQL::updateTable(TeTable &table)$/;"	f	class:TeMySQL
updateTable	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::updateTable (TeTable &table)$/;"	f	class:TeOCIOracle
updateTable	drivers/PostgreSQL/TePostgreSQL.cpp	/^TePostgreSQL::updateTable(TeTable &table)$/;"	f	class:TePostgreSQL
updateTable	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::updateTable (TeTable &table)$/;"	f	class:TeFireBird
updateTable	kernel/TeDatabase.cpp	/^TeDatabase::updateTable	(TeTable &table)$/;"	f	class:TeDatabase
updateTableInfo	kernel/TeDatabase.cpp	/^TeDatabase::updateTableInfo(int layerId, TeTable &table, const string user)$/;"	f	class:TeDatabase
updateText	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::updateText(int index, string t)$/;"	f	class:TeQtMultiTextEdit
updateText	kernel/TeDatabase.cpp	/^TeDatabase::updateText(const string& table, TeText &t)$/;"	f	class:TeDatabase
updateText	kernel/TeLayer.cpp	/^TeLayer::updateText (TeTextSet& textSet, const string& tName)$/;"	f	class:TeLayer
updateTextSet	kernel/TeDatabase.cpp	/^TeDatabase::updateTextSet	(const string& table, TeTextSet &ts)$/;"	f	class:TeDatabase
updateTheme	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::updateTheme (TeAbstractTheme *theme)$/;"	f	class:TeFirebird
updateTheme	kernel/TeDatabase.cpp	/^TeDatabase::updateTheme (TeAbstractTheme *theme)$/;"	f	class:TeDatabase
updateThemeBox	kernel/TeTheme.h	/^	virtual void updateThemeBox() {}$/;"	f	class:TeTheme
updateThemeBox	kernel/TeTheme.h	/^	virtual void updateThemeBox(const TeBox& \/*box*\/) {}$/;"	f	class:TeTheme
updateThemeCreationTime	kernel/TeAbstractTheme.cpp	/^bool TeAbstractTheme::updateThemeCreationTime(TeDatabase* database)$/;"	f	class:TeAbstractTheme
updateThemeTable	kernel/TeDatabase.cpp	/^TeDatabase::updateThemeTable(TeTheme *theme)$/;"	f	class:TeDatabase
updateVersionStamp	kernel/TeDatabase.cpp	/^TeDatabase::updateVersionStamp(const string& DBversion )$/;"	f	class:TeDatabase
updateView	kernel/TeDatabase.cpp	/^TeDatabase::updateView (TeView *view)$/;"	f	class:TeDatabase
updateViewTree	kernel/TeDatabase.cpp	/^TeDatabase::updateViewTree (TeViewTree *tree)$/;"	f	class:TeDatabase
updateVirtualTable	drivers/SQLite/sqlite3/sqlite3.c	/^static void updateVirtualTable($/;"	f	file:
updateVisual	kernel/TeDatabase.cpp	/^TeDatabase::updateVisual(TeLegendEntry *legend)$/;"	f	class:TeDatabase
updateVisual	kernel/TeDatabase.cpp	/^TeDatabase::updateVisual(vector<TeLegendEntry>& legVec)$/;"	f	class:TeDatabase
update_hook	drivers/SQLite/sqlite3/sqlite3.c	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,$/;"	m	struct:sqlite3_api_routines	file:
update_hook	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,$/;"	m	struct:sqlite3_api_routines
update_time	drivers/spl/PluginsParametersContainer.h	/^void PluginsParametersContainer< PluginsParametersContainerKeyT >::update_time()$/;"	f	class:PluginsParametersContainer
upperFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void upperFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
upperRight	kernel/TeBox.h	/^	TeCoord2D upperRight() const$/;"	f	struct:TeBox
upperlimit	image_processing/TePDIMixModelSpectralBand.hpp	/^		double	upperlimit;$/;"	m	class:TePDIMixModelSpectralBand
usable	drivers/SQLite/sqlite3/sqlite3.c	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
usable	drivers/SQLite/sqlite3/sqlite3.h	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
usableSize	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 usableSize;       \/* Number of usable bytes on each page *\/$/;"	m	struct:BtShared	file:
usage	drivers/SQLite/sqlite3/shell.c	/^static void usage(int showDetail){$/;"	f	file:
usage_nzttPersona	drivers/Oracle/OCI/include/nzt.h	/^   nzttUsage usage_nzttPersona;               \/* persona usage; SSL\/SET\/.. *\/$/;"	m	struct:nzttPersona
useAdaptiveParams_	kernel/TeGTParams.h	/^      bool useAdaptiveParams_;    $/;"	m	class:TeGTParams
useAdjustment	kernel/TeProjectiveGT.cpp	/^bool TeProjectiveGT::useAdjustment( TeGTParams& params, $/;"	f	class:TeProjectiveGT
useCollection	drivers/spl/PluginParameters.cpp	/^bool PluginParameters::useCollection() const$/;"	f	class:PluginParameters
useCollection_	kernel/TeTheme.h	/^    bool useCollection_;$/;"	m	class:TeTheme
useDeterministic	kernel/TeProjectiveGT.cpp	/^bool TeProjectiveGT::useDeterministic( TeGTParams& params, $/;"	f	class:TeProjectiveGT
useDummy_	kernel/TeRasterParams.h	/^	bool useDummy_;			\/\/!< a flag to indicate that raster has dummy values$/;"	m	class:TeRasterParams
useJournal	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 useJournal;              \/* Use a rollback journal on this file *\/$/;"	m	struct:Pager	file:
useMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^  u8   useMalloc;      \/* 0: none,  1: sqlite3DbMalloc,  2: sqlite3_malloc *\/$/;"	m	struct:StrAccum	file:
useOptimizedReprojection_	kernel/TeRasterRemap.h	/^  bool useOptimizedReprojection_; $/;"	m	class:TeRasterRemap
useRandomRowid	drivers/SQLite/sqlite3/sqlite3.c	/^  Bool useRandomRowid;  \/* Generate new record numbers semi-randomly *\/$/;"	m	struct:VdbeCursor	file:
useSDOType	drivers/Oracle/TeOCIConnect.h	/^	bool useSDOType() { return useSDO_; } $/;"	f	class:TeOCIConnection
useSDO_	drivers/Oracle/TeOCIConnect.h	/^	bool		 useSDO_;			\/\/!< indicates if the connected Oracle DBMS uses the SDO_GEOMETRY type $/;"	m	class:TeOCIConnection
useSortingIdx	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 useSortingIdx;       \/* In direct mode, reference the sorting index rather$/;"	m	struct:AggInfo	file:
use_collection_	drivers/spl/PluginParameters.h	/^	  bool	use_collection_;$/;"	m	class:PluginParameters
used	drivers/SQLite/sqlite3/sqlite3.c	/^  Bitmask used;      \/* Bitmask of cursors used by this plan *\/$/;"	m	struct:WhereCost	file:
used	image_processing/TePDIBaatz.hpp	/^  int used; \/* indicate if segment has been used in segmentation step *\/$/;"	m	struct:segment
usedAsColumnCache	drivers/SQLite/sqlite3/sqlite3.c	/^static int usedAsColumnCache(Parse *pParse, int iFrom, int iTo){$/;"	f	file:
used_	kernel/TeDecoderVirtualMemory.h	/^	bool	used_;			\/\/<! Flag that indicate if the page was modified in memory$/;"	m	class:TeMemoryPage
used_	kernel/TeOverlayUtils.cpp	/^	bool					used_;$/;"	m	struct:TeSIP	file:
usedlen_nzttBufferBlock	drivers/Oracle/OCI/include/nzt.h	/^   ub4 usedlen_nzttBufferBlock;  \/* Length of used buffer part *\/$/;"	m	struct:nzttBufferBlock
user	kernel/TeDatabase.h	/^	string	user () $/;"	f	class:TeDatabase
user	kernel/TeDatabase.h	/^	void user(string value) { user_=value;}$/;"	f	class:TeDatabase
user	kernel/TeView.h	/^	virtual string	user () { return user_; }$/;"	f	class:TeView
user	kernel/TeView.h	/^	virtual void user (const string& i) { user_ = i; }$/;"	f	class:TeView
userParamsPtr_	kernel/TeThreadFunctor.h	/^    void* userParamsPtr_;\/\/!< A pointer to the current user thread start function parameters pointer.$/;"	m	class:TeThreadFunctor
userText_	kernel/TeException.h	/^	string			userText_;$/;"	m	class:TeException
user_	kernel/TeConnection.h	/^	std::string	user_;					\/\/!< User name $/;"	m	class:TeConnection
user_	kernel/TeDatabase.h	/^        std::string				user_;					\/\/!< user name$/;"	m	class:TeDatabase
user_	kernel/TeDatabaseFactoryParams.h	/^      std::string user_;		\/\/!< User name in order to stabilish a connection.$/;"	m	class:TeDatabaseFactoryParams
user_	kernel/TeView.h	/^	string			user_;	\/\/ user id$/;"	m	class:TeView
user_data	drivers/SQLite/sqlite3/sqlite3.c	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
user_data	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
user_name	drivers/Firebird/ibpp/core/ibase.h	/^	ISC_SCHAR *user_name;			\/* the user's name *\/$/;"	m	struct:__anon65
usercolor_	drivers/GTM/TeGTM.h	/^	long gradcolor_, bcolor_, nwptstyles_, usercolor_, nwpts_, ntrcks_, nrtes_, n_maps_, n_tk_, labelcolor_;$/;"	m	class:TeGTMHeader
userfont_	drivers/GTM/TeGTM.h	/^	char *gradfont_, *labelfont_, *userfont_, *newdatum_;$/;"	m	class:TeGTMHeader
usericons_	drivers/GTM/TeGTM.h	/^	vector<TeGTMUserIcons*> usericons_;$/;"	m	class:TeGTM
userid	drivers/Firebird/ibpp/core/ibpp.h	/^		uint32_t userid;		\/\/ Only relevant on unixes$/;"	m	class:IBPP::User
useritalic_	drivers/GTM/TeGTM.h	/^	bool rectangular_, truegrid_, usernegrit_, useritalic_, usersublin_, usertachado_, map_;$/;"	m	class:TeGTMHeader
username	drivers/Firebird/ibpp/core/ibpp.h	/^		std::string username;$/;"	m	class:IBPP::User
usernegrit_	drivers/GTM/TeGTM.h	/^	bool rectangular_, truegrid_, usernegrit_, useritalic_, usersublin_, usertachado_, map_;$/;"	m	class:TeGTMHeader
usernum_	drivers/GTM/TeGTM.h	/^	unsigned char wli_, vwt_, gradnum_, wptnum_, usernum_, coriml_, ndatum_;$/;"	m	class:TeGTMHeader
usersublin_	drivers/GTM/TeGTM.h	/^	bool rectangular_, truegrid_, usernegrit_, useritalic_, usersublin_, usertachado_, map_;$/;"	m	class:TeGTMHeader
usertachado_	drivers/GTM/TeGTM.h	/^	bool rectangular_, truegrid_, usernegrit_, useritalic_, usersublin_, usertachado_, map_;$/;"	m	class:TeGTMHeader
usesStmtJournal	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 usesStmtJournal;     \/* True if uses a statement journal *\/$/;"	m	struct:Vdbe	file:
usingMap	kernel/TeComputeAttributeStrategies.h	/^		bool usingMap;$/;"	m	class:TeCategoryPercentageStrategy
usrhp_	drivers/Oracle/TeOCIConnect.h	/^	OCISession*		usrhp_;		\/\/!< service context OCI handle - defines the permissions and privileges associated to an user$/;"	m	class:TeOCIConnection
utext	drivers/Oracle/OCI/include/oratypes.h	/^typedef	unsigned short	utext;$/;"	t
utext	drivers/Oracle/OCI/include/oratypes.h	57;"	d
utf8ToUnicode	drivers/SQLite/sqlite3/sqlite3.c	/^static WCHAR *utf8ToUnicode(const char *zFilename){$/;"	f	file:
uword	drivers/Oracle/OCI/include/oratypes.h	/^typedef unsigned int uword;                  $/;"	t
uword	drivers/Oracle/OCI/include/oratypes.h	197;"	d
v	drivers/SQLite/sqlite3/sqlite3.c	/^  Vdbe *v;                   \/* Vdbe to iterate through the opcodes of *\/$/;"	m	struct:VdbeOpIter	file:
v	drivers/SQLite/sqlite3/sqlite3.c	/^  Vdbe *v;                \/* VM this frame belongs to *\/$/;"	m	struct:VdbeFrame	file:
v	drivers/SQLite/sqlite3/sqlite3.c	/^  i64 v;                        \/* ROWID value for this entry *\/$/;"	m	struct:RowSetEntry	file:
v2_rc	drivers/Oracle/OCI/include/ocidfn.h	/^    sb2          v2_rc;                                    \/* V2 return code *\/$/;"	m	struct:cda_def
v2_rc	drivers/Oracle/OCI/include/ocidfn.h	/^    sb2          v2_rc;$/;"	m	struct:cda_head
v_	utils/TeColorUtils.h	/^	int		v_;$/;"	m	struct:ColorBar
vacuumFinalize	drivers/SQLite/sqlite3/sqlite3.c	/^static int vacuumFinalize(sqlite3 *db, sqlite3_stmt *pStmt, char **pzErrMsg){$/;"	f	file:
valid	drivers/SQLite/sqlite3/shell.c	/^  int valid;        \/* Is there legit data in here? *\/$/;"	m	struct:previous_mode_data	file:
valid	functions/TeCellAlgorithms.cpp	/^	bool valid;$/;"	m	struct:cellDist	file:
validColumnName	functions/TeAddressLocator.cpp	/^void validColumnName(TeAttributeRep& rep, TeAttributeList& attrList)$/;"	f
validHMS	drivers/SQLite/sqlite3/sqlite3.c	/^  char validHMS;     \/* True (1) if h,m,s are valid *\/$/;"	m	struct:DateTime	file:
validJD	drivers/SQLite/sqlite3/sqlite3.c	/^  char validJD;      \/* True (1) if iJD is valid *\/$/;"	m	struct:DateTime	file:
validNKey	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 validNKey;             \/* True if info.nKey is valid *\/$/;"	m	struct:BtCursor	file:
validTZ	drivers/SQLite/sqlite3/sqlite3.c	/^  char validTZ;      \/* True (1) if tz is valid *\/$/;"	m	struct:DateTime	file:
validTable	kernel/TeDatabase.cpp	/^bool TeDatabase::validTable (TeTable& table)$/;"	f	class:TeDatabase
validValueList_	kernel/TeAttribute.h	/^	vector<string>		validValueList_; \/\/!< list of valid values$/;"	m	struct:TeAttribute
validYMD	drivers/SQLite/sqlite3/sqlite3.c	/^  char validYMD;     \/* True (1) if Y,M,D are valid *\/$/;"	m	struct:DateTime	file:
valid_pctx	drivers/Oracle/OCI/include/cdemodp0.h	/^  ub1   valid_pctx;                              \/* partial context is valid *\/$/;"	m	struct:pctx
valid_plugins_	drivers/spl/PluginsManager.h	/^      std::vector< SPLPluginInfoT > valid_plugins_;$/;"	m	class:PluginsManager
value	drivers/Oracle/OCI/include/occiData.h	/^ double value;$/;"	m	struct:oracle::occi::BDouble
value	drivers/Oracle/OCI/include/occiData.h	/^ float value;$/;"	m	struct:oracle::occi::BFloat
value	drivers/PostgreSQL/TePGInterface.h	/^		char* value(const int& field_num) const { return PQgetvalue(pg_recordset_, int_index_current_, field_num); }$/;"	f	class:TePGRecordset
value	drivers/PostgreSQL/TePGInterface.h	/^		char* value(const string& field_name) const { return value(fieldNum(field_name)); }$/;"	f	class:TePGRecordset
value	drivers/SQLite/sqlite3/sqlite3.c	/^  struct {int value; int mask;} yy215;$/;"	m	struct:__anon56::__anon57	file:
value	kernel/TeCoverageDecoder.h	/^    std::vector<double> value; \/\/!< a value vector$/;"	m	struct:TeGeomValuePair
value	kernel/TeMeasure.h	/^	double value()$/;"	f	class:TeMeasure
value	kernel/TeTin.h	/^	double value () $/;"	f	class:TeTinVertex
value	kernel/TeTin.h	/^	void value (double value) $/;"	f	class:TeTinVertex
valueFromExpr	drivers/SQLite/sqlite3/sqlite3.c	/^static int valueFromExpr($/;"	f	file:
value_	image_processing/TePDIRaster2Vector.hpp	/^      int value_;$/;"	m	class:TePDIRaster2VectorPolStruct
value_	kernel/TeAttribute.h	/^    string			value_;		\/\/!< its value stored as an string$/;"	m	struct:TeProperty
value_	kernel/TeMeasure.h	/^	double value_;$/;"	m	class:TeMeasure
value_	kernel/TeTemporalSeries.h	/^	double 				value_;$/;"	m	class:TeTSEntry
value_blob	drivers/SQLite/sqlite3/sqlite3.c	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_blob	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_bytes	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_bytes	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_bytes16	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_bytes16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_double	drivers/SQLite/sqlite3/sqlite3.c	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_double	drivers/SQLite/sqlite3/sqlite3ext.h	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_int	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_int	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_int64	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_int64	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_numeric_type	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_numeric_type	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_ocixmldbparam	drivers/Oracle/OCI/include/ocixmldb.h	/^  void           *value_ocixmldbparam;$/;"	m	struct:ocixmldbparam
value_text	drivers/SQLite/sqlite3/sqlite3.c	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16	drivers/SQLite/sqlite3/sqlite3.c	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16be	drivers/SQLite/sqlite3/sqlite3.c	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16be	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16le	drivers/SQLite/sqlite3/sqlite3.c	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16le	drivers/SQLite/sqlite3/sqlite3ext.h	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_to_pixel	drivers/qt/TeQtGraph.cpp	/^void TeQtGraphPlot::value_to_pixel(double px, double py, int* x, int* y)$/;"	f	class:TeQtGraphPlot
value_to_pixel	kernel/TeGraph.cpp	/^TeGraphPlot :: value_to_pixel(Real x_value, Real y_value, int *x_pixel, int *y_pixel)$/;"	f	class:TeGraphPlot
value_type	drivers/SQLite/sqlite3/sqlite3.c	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_type	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_type	kernel/TeGeometry.h	/^	typedef  T value_type;$/;"	t	class:TeGeomComposite
value_type	kernel/TeGeometry.h	/^	typedef  T value_type;$/;"	t	class:TeGeomSingle
variance	image_processing/TePDICluster.hpp	/^    vector<double> variance;$/;"	m	class:TePDICluster
variance_difference_index	image_processing/TePDIFusionIndexes.cpp	/^bool TePDIFusionIndexes::variance_difference_index(TePDITypes::TePDIRasterPtrType original_raster, int original_band, TePDITypes::TePDIRasterPtrType fused_raster, int fused_band, TeSharedPtr<double> vardif)$/;"	f	class:TePDIFusionIndexes
vary_length	drivers/Firebird/ibpp/core/ibase.h	/^    ISC_USHORT		vary_length;$/;"	m	struct:paramvary
vary_string	drivers/Firebird/ibpp/core/ibase.h	/^    ISC_UCHAR		vary_string[1];$/;"	m	struct:paramvary
vblfderivSet_	kernel/TeTin.h	/^	TeTinVertexSet		vblfderivSet_;	\/\/! Left side nodes first derivatives vector$/;"	m	class:TeTin
vblsderivSet_	kernel/TeTin.h	/^	TeTinVertexSet		vblsderivSet_;	\/\/! Left side nodes second derivatives vector$/;"	m	class:TeTin
vbrfderivSet_	kernel/TeTin.h	/^	TeTinVertexSet		vbrfderivSet_;	\/\/! Right side nodes first derivatives vector$/;"	m	class:TeTin
vbrsderivSet_	kernel/TeTin.h	/^	TeTinVertexSet		vbrsderivSet_;	\/\/! Right side nodes second derivatives vector$/;"	m	class:TeTin
vdbeCommit	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeCommit(sqlite3 *db, Vdbe *p){$/;"	f	file:
vdbeExecCnt	drivers/SQLite/sqlite3/sqlite3.c	/^  int vdbeExecCnt;              \/* Number of nested calls to VdbeExec() *\/$/;"	m	struct:sqlite3	file:
vdbeFreeOpArray	drivers/SQLite/sqlite3/sqlite3.c	/^static void vdbeFreeOpArray(sqlite3 *db, Op *aOp, int nOp){$/;"	f	file:
vdbeSafety	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeSafety(Vdbe *p){$/;"	f	file:
vdbeSafetyNotNull	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeSafetyNotNull(Vdbe *p){$/;"	f	file:
vdbeSorterCompare	drivers/SQLite/sqlite3/sqlite3.c	/^static void vdbeSorterCompare($/;"	f	file:
vdbeSorterDoCompare	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeSorterDoCompare(VdbeCursor *pCsr, int iOut){$/;"	f	file:
vdbeSorterInitMerge	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeSorterInitMerge($/;"	f	file:
vdbeSorterIterInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeSorterIterInit($/;"	f	file:
vdbeSorterIterNext	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeSorterIterNext($/;"	f	file:
vdbeSorterIterZero	drivers/SQLite/sqlite3/sqlite3.c	/^static void vdbeSorterIterZero(sqlite3 *db, VdbeSorterIter *pIter){$/;"	f	file:
vdbeSorterListToPMA	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeSorterListToPMA(sqlite3 *db, VdbeCursor *pCsr){$/;"	f	file:
vdbeSorterMerge	drivers/SQLite/sqlite3/sqlite3.c	/^static void vdbeSorterMerge($/;"	f	file:
vdbeSorterOpenTempFile	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeSorterOpenTempFile(sqlite3 *db, sqlite3_file **ppFile){$/;"	f	file:
vdbeSorterReadVarint	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeSorterReadVarint($/;"	f	file:
vdbeSorterRecordFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void vdbeSorterRecordFree(sqlite3 *db, SorterRecord *pRecord){$/;"	f	file:
vdbeSorterRowkey	drivers/SQLite/sqlite3/sqlite3.c	/^static void *vdbeSorterRowkey($/;"	f	file:
vdbeSorterSort	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeSorterSort(VdbeCursor *pCsr){$/;"	f	file:
vdbeSorterWriteVarint	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeSorterWriteVarint($/;"	f	file:
vdbeUnbind	drivers/SQLite/sqlite3/sqlite3.c	/^static int vdbeUnbind(Vdbe *p, int i){$/;"	f	file:
vdbeVComment	drivers/SQLite/sqlite3/sqlite3.c	/^static void vdbeVComment(Vdbe *p, const char *zFormat, va_list ap){$/;"	f	file:
vecFilter_	kernel/TeSTGeoDataSet.h	/^	std::vector<int>	vecFilter_;$/;"	m	class:TeSTGeoDataSet
vectRepres	kernel/TeLayer.h	/^	virtual TeRepresPointerVector& vectRepres()$/;"	f	class:TeLayer
vectRepres	kernel/TeLayer.h	/^  virtual const TeRepresPointerVector& vectRepres() const$/;"	f	class:TeLayer
velocitySlider_valueChanged	drivers/qt/ui/animation.ui.h	/^void Animation::velocitySlider_valueChanged( int v)$/;"	f	class:Animation
velocitylineEdit_returnPressed	drivers/qt/ui/animation.ui.h	/^void Animation::velocitylineEdit_returnPressed()$/;"	f	class:Animation
vendorShellClassRec	drivers/GL/vms_x_fix.h	591;"	d
vendorShellWidgetClass	drivers/GL/vms_x_fix.h	592;"	d
verifyDbParams	kernel/TeDBConnectionsPool.cpp	/^void TeDBConnectionsPool::verifyDbParams(std::string& dbmsName, std::string& \/*dbName*\/, $/;"	f	class:TeDBConnectionsPool
verifyHifen	functions/TeAddressLocator.cpp	/^bool TeAddressLocator::verifyHifen(const string& tableName, const string& columnName)$/;"	f	class:TeAddressLocator
version	drivers/Firebird/ibpp/core/ibase.h	/^        ISC_SHORT       version;                        $/;"	m	struct:__anon64
versionFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void versionFunc($/;"	f	file:
version_	drivers/GTM/TeGTM.h	/^	short version_, labelsize_;$/;"	m	class:TeGTMHeader
vertex	kernel/TeTin.h	/^	TeTinVertex& vertex (long i)$/;"	f	class:TeTin
vertex	kernel/graph.h	/^		typedef std::pair<VertexType, Successor> vertex;$/;"	t	class:br_stl::Graph
vertexBegin	kernel/TeTin.h	/^	TeTinVertexIterator vertexBegin()$/;"	f	class:TeTin
vertexClosestPoints	kernel/TeTin.cpp	/^TeTin::vertexClosestPoints(long v, std::vector<long>& clstVert)$/;"	f	class:TeTin
vertexDerivatives	kernel/TeTin.cpp	/^TeTin::vertexDerivatives()$/;"	f	class:TeTin
vertexEdges	kernel/TeTin.cpp	/^TeTin::vertexEdges(long v, std::list<long> &edges)$/;"	f	class:TeTin
vertexEnd	kernel/TeTin.h	/^	TeTinVertexIterator vertexEnd()$/;"	f	class:TeTin
vertexExchange	kernel/TeTin.cpp	/^TeTin::vertexExchange(long oldVertex, long newVertex)$/;"	f	class:TeTin
vertexFirstDeriv	kernel/TeTin.cpp	/^TeTin::vertexFirstDeriv()$/;"	f	class:TeTin
vertexOncontour	kernel/TeTin.cpp	/^TeTin::vertexOncontour(long &v)$/;"	f	class:TeTin
vertexOppEdge	kernel/TeTin.cpp	/^TeTin::vertexOppEdge(long t, long e)$/;"	f	class:TeTin
vertexOppEdges	kernel/TeTin.cpp	/^TeTin::vertexOppEdges(long v, std::list<long> &edges)$/;"	f	class:TeTin
vertexOppEdges	kernel/TeTin.cpp	/^TeTin::vertexOppEdges(long v, std::list<long> &triset, std::list<long> &edges)$/;"	f	class:TeTin
vertexOppVertices	kernel/TeTin.cpp	/^TeTin::vertexOppVertices(long v, std::list<long> &vertices)$/;"	f	class:TeTin
vertexSecondDeriv	kernel/TeTin.cpp	/^TeTin::vertexSecondDeriv()$/;"	f	class:TeTin
vertexSet_	kernel/TeTin.h	/^	TeTinVertexSet		vertexSet_;		\/\/! Triangulation vertices vector$/;"	m	class:TeTin
vertexTriangles	kernel/TeTin.cpp	/^TeTin::vertexTriangles(long v, std::list<long> &triangles)$/;"	f	class:TeTin
vertexTriangles	kernel/TeTin.cpp	/^TeTin::vertexTriangles(long v, std::list<long>& rtri, std::list<long>& ltri)$/;"	f	class:TeTin
verticalEdition_	drivers/qt/TeQtGrid.h	/^	bool					verticalEdition_;$/;"	m	class:TeQtGrid
vertical_	drivers/qt/TeQtColorBar.h	/^	bool	vertical_;$/;"	m	class:TeQtColorBar
verttype_	kernel/TeTin.h	/^	TeTinVertexType		verttype_;		\/\/! Vertex type$/;"	m	class:TeTin
vfderivSet_	kernel/TeTin.h	/^	TeTinVertexSet		vfderivSet_;	\/\/! Vertex first derivatives vector$/;"	m	class:TeTin
vfsFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 vfsFlags;               \/* Flags for sqlite3_vfs.xOpen() *\/$/;"	m	struct:Pager	file:
vfsList	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3_vfs * SQLITE_WSD vfsList = 0;$/;"	v	file:
vfsList	drivers/SQLite/sqlite3/sqlite3.c	14658;"	d	file:
vfsUnlink	drivers/SQLite/sqlite3/sqlite3.c	/^static void vfsUnlink(sqlite3_vfs *pVfs){$/;"	f	file:
vfs_find	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines	file:
vfs_find	drivers/SQLite/sqlite3/sqlite3ext.h	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines
vfs_register	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines	file:
vfs_register	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines
vfs_unregister	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines	file:
vfs_unregister	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines
vid	drivers/GL/glxint.h	/^    VisualID vid;$/;"	m	struct:__GLXvisualConfigRec
view	kernel/TeViewNode.h	/^	virtual int		view () { return viewNodeParams_.viewId_ ; }$/;"	f	class:TeViewNode
view	kernel/TeViewNode.h	/^	virtual void	view (int viewId) { viewNodeParams_.viewId_ = viewId; }$/;"	f	class:TeViewNode
viewAngle_	drivers/qt/TeQtGLWidget.h	/^	GLfloat viewAngle_;$/;"	m	class:TeQtGLWidget
viewAttrId	drivers/Oracle/OCI/include/occiControl.h	/^  static const AttrId viewAttrId[VIEW_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
viewAttrType	drivers/Oracle/OCI/include/occiControl.h	/^  static const ociAttrType viewAttrType[VIEW_ATTR_COUNT];$/;"	m	class:oracle::occi::MetaData
viewExist	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::viewExist(const string& view)$/;"	f	class:TeOCIOracle
viewExist	kernel/TeDatabase.cpp	/^TeDatabase::viewExist(string viewName)$/;"	f	class:TeDatabase
viewId_	kernel/TeViewNode.h	/^	int				viewId_;	$/;"	m	class:TeViewNodeParams
viewMap	kernel/TeDatabase.h	/^	TeViewMap&	viewMap () $/;"	f	class:TeDatabase
viewMap	kernel/TeMetaModelCache.h	/^		TeViewMap&	viewMap () $/;"	f	class:TeMetaModelCache
viewMap_	kernel/TeMetaModelCache.h	/^        TeViewMap			viewMap_;			\/\/!< view map	  $/;"	m	class:TeMetaModelCache
viewNodeParams	kernel/TeViewNode.h	/^	virtual TeViewNodeParams& viewNodeParams()$/;"	f	class:TeViewNode
viewNodeParams	kernel/TeViewNode.h	/^	virtual void viewNodeParams(TeViewNodeParams& p)$/;"	f	class:TeViewNode
viewNodeParams_	kernel/TeViewNode.h	/^	TeViewNodeParams	viewNodeParams_;$/;"	m	class:TeViewNode
viewTree_	kernel/TeView.h	/^	TeViewTree		viewTree_;$/;"	m	class:TeView
view_	drivers/GTM/TeGTM.h	/^	unsigned char lock_, view_, reserva1_;$/;"	m	class:TeGTMLayers
view_	drivers/qt/TeQtViewItem.h	/^	TeView	*view_;$/;"	m	class:TeQtViewItem
viewportPaintEvent	drivers/qt/TeQtCanvas.cpp	/^void TeQtCanvas::viewportPaintEvent (QPaintEvent*)$/;"	f	class:TeQtCanvas
views_	kernel/TeProject.h	/^	TeViewVector views_;$/;"	m	class:TeProject
virtualMemory_	kernel/TeDecoderVirtualMemory.h	/^	MapMemoryPage virtualMemory_;$/;"	m	class:TeDecoderVirtualMemory
visibility	kernel/TeAbstractTheme.h	/^	virtual int visibility()$/;"	f	class:TeAbstractTheme
visibility	kernel/TeAbstractTheme.h	/^	virtual void visibility(int v)$/;"	f	class:TeAbstractTheme
visibility	kernel/TeView.h	/^	virtual int visibility()$/;"	f	class:TeView
visibility	kernel/TeView.h	/^	virtual void visibility( int vis )$/;"	f	class:TeView
visibility	kernel/TeViewNode.cpp	/^TeViewTree::visibility(int vis)$/;"	f	class:TeViewTree
visibility	kernel/TeViewNode.cpp	/^int TeViewTree::visibility()$/;"	f	class:TeViewTree
visibility	kernel/TeViewNode.h	/^	virtual int visibility(){ return 1; };$/;"	f	class:TeViewNode
visibility	kernel/TeViewNode.h	/^	virtual void visibility ( int ){}; $/;"	f	class:TeViewNode
visibleCols_	drivers/qt/TeQtGrid.h	/^	int						visibleLines_, visibleCols_;$/;"	m	class:TeQtGrid
visibleGeoRep	kernel/TeAbstractTheme.cpp	/^int TeAbstractTheme::visibleGeoRep()$/;"	f	class:TeAbstractTheme
visibleLines_	drivers/qt/TeQtGrid.h	/^	int						visibleLines_, visibleCols_;$/;"	m	class:TeQtGrid
visibleRep	kernel/TeAbstractTheme.h	/^	virtual int visibleRep() { return visibleRep_; }$/;"	f	class:TeAbstractTheme
visibleRep	kernel/TeAbstractTheme.h	/^	virtual void visibleRep(int rep) { visibleRep_ = rep; }$/;"	f	class:TeAbstractTheme
visibleRep_	kernel/TeAbstractTheme.h	/^	int visibleRep_;$/;"	m	class:TeAbstractTheme
visited	kernel/graph.h	/^	enum VertStatus {notVisited, visited, processed};$/;"	e	enum:br_stl::VertStatus
visual	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::visual(const TeVisual& visual)$/;"	f	class:TeQtMultiTextEdit
visual	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::visual(int i)$/;"	f	class:TeQtMultiTextEdit
visual	drivers/qt/TeQtTextEdit.h	/^	TeVisual	visual() {return visual_;}$/;"	f	class:TeQtTextEdit
visual	drivers/qt/TeQtTextEdit.h	/^	void	visual(const TeVisual& visual) {visual_ = visual;}$/;"	f	class:TeQtTextEdit
visual	kernel/TeLegendEntry.cpp	/^TeLegendEntry::visual(TeGeomRep rep, const string& visualType)$/;"	f	class:TeLegendEntry
visualCaveat	drivers/GL/glxint.h	/^    int visualCaveat;$/;"	m	struct:__GLXFBConfigRec
visualID	drivers/GL/glcore.h	/^    GLint visualID;$/;"	m	struct:__GLcontextModesRec
visualID	drivers/GL/internal/glcore.h	/^    GLint visualID;$/;"	m	struct:__GLcontextModesRec
visualMap_	kernel/TeLegendEntry.h	/^	TeGeomRepVisualMap	visualMap_;$/;"	m	class:TeLegendEntry
visualRating	drivers/GL/glcore.h	/^    GLint visualRating;$/;"	m	struct:__GLcontextModesRec
visualRating	drivers/GL/glxint.h	/^    int visualRating;		\/* visual_rating extension *\/$/;"	m	struct:__GLXvisualConfigRec
visualRating	drivers/GL/internal/glcore.h	/^    GLint visualRating;$/;"	m	struct:__GLcontextModesRec
visualSelectGroup	drivers/GL/glcore.h	/^    GLint visualSelectGroup;$/;"	m	struct:__GLcontextModesRec
visualSelectGroup	drivers/GL/glxint.h	/^    int visualSelectGroup;	\/* visuals grouped by select priority *\/$/;"	m	struct:__GLXFBConfigRec
visualSelectGroup	drivers/GL/glxint.h	/^    int visualSelectGroup;$/;"	m	struct:__GLXvisualConfigRec
visualSelectGroup	drivers/GL/internal/glcore.h	/^    GLint visualSelectGroup;$/;"	m	struct:__GLcontextModesRec
visualType	drivers/GL/glcore.h	/^    GLint visualType;     \/**< One of the GLX X visual types. (i.e., $/;"	m	struct:__GLcontextModesRec
visualType	drivers/GL/glxint.h	/^    int visualType;$/;"	m	struct:__GLXFBConfigRec
visualType	drivers/GL/internal/glcore.h	/^    GLint visualType;     \/**< One of the GLX X visual types. (i.e., $/;"	m	struct:__GLcontextModesRec
visualType_	kernel/TeVisual.h	/^	string		visualType_;$/;"	m	class:TeBaseVisualParams
visual_	drivers/qt/TeQtTextEdit.h	/^	TeVisual			visual_;$/;"	m	class:TeQtTextEdit
vmask	drivers/SQLite/sqlite3/sqlite3.c	/^  Bitmask vmask;           \/* Bitmask identifying virtual table cursors *\/$/;"	m	struct:WhereClause	file:
vmax_	kernel/TeRasterParams.h	/^	vector<double>	vmax_;			\/\/!< maximum value $/;"	m	class:TeRasterParams
vmaxval	kernel/TeGraph.cpp	/^Real vmaxval(Real_Vector v, unsigned int n, int *imx)$/;"	f
vmin_	kernel/TeRasterParams.h	/^	vector<double>	vmin_;			\/\/!< minimum value $/;"	m	class:TeRasterParams
vminval	kernel/TeGraph.cpp	/^vminval(Real_Vector v, unsigned int n, int *imn)$/;"	f
vmprintf	drivers/SQLite/sqlite3/sqlite3.c	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines	file:
vmprintf	drivers/SQLite/sqlite3/sqlite3ext.h	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines
vsderivSet_	kernel/TeTin.h	/^	TeTinVertexSet		vsderivSet_;	\/\/! Vertex second derivatives vector$/;"	m	class:TeTin
vtabBestIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static int vtabBestIndex(Parse *pParse, Table *pTab, sqlite3_index_info *p){$/;"	f	file:
vtabCallConstructor	drivers/SQLite/sqlite3/sqlite3.c	/^static int vtabCallConstructor($/;"	f	file:
vtabDisconnectAll	drivers/SQLite/sqlite3/sqlite3.c	/^static VTable *vtabDisconnectAll(sqlite3 *db, Table *p){$/;"	f	file:
vtabOnConflict	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 vtabOnConflict;            \/* Value to return for s3_vtab_on_conflict() *\/$/;"	m	struct:sqlite3	file:
vtab_config	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*vtab_config)(sqlite3*,int op,...);$/;"	m	struct:sqlite3_api_routines	file:
vtab_config	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*vtab_config)(sqlite3*,int op,...);$/;"	m	struct:sqlite3_api_routines
vtab_on_conflict	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*vtab_on_conflict)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
vtab_on_conflict	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*vtab_on_conflict)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
vwt_	drivers/GTM/TeGTM.h	/^	unsigned char wli_, vwt_, gradnum_, wptnum_, usernum_, coriml_, ndatum_;$/;"	m	class:TeGTMHeader
vxworksFileId	drivers/SQLite/sqlite3/sqlite3.c	/^struct vxworksFileId {$/;"	s	file:
vxworksFileList	drivers/SQLite/sqlite3/sqlite3.c	/^static struct vxworksFileId *vxworksFileList = 0;$/;"	v	typeref:struct:vxworksFileId	file:
vxworksFindFileId	drivers/SQLite/sqlite3/sqlite3.c	/^static struct vxworksFileId *vxworksFindFileId(const char *zAbsoluteName){$/;"	f	file:
vxworksReleaseFileId	drivers/SQLite/sqlite3/sqlite3.c	/^static void vxworksReleaseFileId(struct vxworksFileId *pId){$/;"	f	file:
vxworksSimplifyName	drivers/SQLite/sqlite3/sqlite3.c	/^static int vxworksSimplifyName(char *z, int n){$/;"	f	file:
w_	drivers/qt/TeAddressNotifyFunctorWindow.h	/^		QDialog* w_;$/;"	m	class:TeAdressNotifyFunctorWindow
wait	kernel/TeSemaphore.cpp	/^bool TeSemaphore::wait( unsigned int waitingTime )$/;"	f	class:TeSemaphore
wait	kernel/TeSemaphore.h	/^      inline void wait()$/;"	f	class:TeSemaphore
waitAllToFinish	kernel/TeThreadJobsManager.cpp	/^void TeThreadJobsManager::waitAllToFinish()$/;"	f	class:TeThreadJobsManager
waitForMSC	drivers/GL/dri_interface.h	/^    int (*waitForMSC)( __DRInativeDisplay * dpy, void *drawablePriv,$/;"	m	struct:__DRIdrawableRec
waitForMSC	drivers/GL/internal/dri_interface.h	/^    int (*waitForMSC)( __DRInativeDisplay * dpy, void *drawablePriv,$/;"	m	struct:__DRIdrawableRec
waitForSBC	drivers/GL/dri_interface.h	/^    int (*waitForSBC)( __DRInativeDisplay * dpy, void *drawablePriv,$/;"	m	struct:__DRIdrawableRec
waitForSBC	drivers/GL/internal/dri_interface.h	/^    int (*waitForSBC)( __DRInativeDisplay * dpy, void *drawablePriv,$/;"	m	struct:__DRIdrawableRec
waitForSignals_	image_processing/TePDIParallelSegmenter.hpp	/^          bool waitForSignals_;$/;"	m	class:TePDIParallelSegmenter::GroupDataThreadEntryParams
waitSignal	kernel/TeThreadSignal.cpp	/^bool TeThreadSignal::waitSignal( unsigned int waiting_time )$/;"	f	class:TeThreadSignal
waitToFinish	kernel/TeThread.cpp	/^bool TeThread::waitToFinish()$/;"	f	class:TeThread
wait_generation_count_	kernel/TeThreadSignal.h	/^        volatile int wait_generation_count_;$/;"	m	class:TeThreadSignal
waiters_count_	kernel/TeThreadSignal.h	/^        volatile int waiters_count_;$/;"	m	class:TeThreadSignal
waiters_count_lock_	kernel/TeThreadSignal.h	/^        TeMutex waiters_count_lock_;$/;"	m	class:TeThreadSignal
walBusyLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int walBusyLock($/;"	f	file:
walCheckpoint	drivers/SQLite/sqlite3/sqlite3.c	/^static int walCheckpoint($/;"	f	file:
walChecksumBytes	drivers/SQLite/sqlite3/sqlite3.c	/^static void walChecksumBytes($/;"	f	file:
walCkptInfo	drivers/SQLite/sqlite3/sqlite3.c	/^static volatile WalCkptInfo *walCkptInfo(Wal *pWal){$/;"	f	file:
walCleanupHash	drivers/SQLite/sqlite3/sqlite3.c	/^static void walCleanupHash(Wal *pWal){$/;"	f	file:
walDecodeFrame	drivers/SQLite/sqlite3/sqlite3.c	/^static int walDecodeFrame($/;"	f	file:
walEncodeFrame	drivers/SQLite/sqlite3/sqlite3.c	/^static void walEncodeFrame($/;"	f	file:
walFrameOffset	drivers/SQLite/sqlite3/sqlite3.c	44590;"	d	file:
walFramePage	drivers/SQLite/sqlite3/sqlite3.c	/^static int walFramePage(u32 iFrame){$/;"	f	file:
walFramePgno	drivers/SQLite/sqlite3/sqlite3.c	/^static u32 walFramePgno(Wal *pWal, u32 iFrame){$/;"	f	file:
walHash	drivers/SQLite/sqlite3/sqlite3.c	/^static int walHash(u32 iPage){$/;"	f	file:
walHashGet	drivers/SQLite/sqlite3/sqlite3.c	/^static int walHashGet($/;"	f	file:
walIndexAppend	drivers/SQLite/sqlite3/sqlite3.c	/^static int walIndexAppend(Wal *pWal, u32 iFrame, u32 iPage){$/;"	f	file:
walIndexClose	drivers/SQLite/sqlite3/sqlite3.c	/^static void walIndexClose(Wal *pWal, int isDelete){$/;"	f	file:
walIndexHdr	drivers/SQLite/sqlite3/sqlite3.c	/^static volatile WalIndexHdr *walIndexHdr(Wal *pWal){$/;"	f	file:
walIndexPage	drivers/SQLite/sqlite3/sqlite3.c	/^static int walIndexPage(Wal *pWal, int iPage, volatile u32 **ppPage){$/;"	f	file:
walIndexReadHdr	drivers/SQLite/sqlite3/sqlite3.c	/^static int walIndexReadHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexRecover	drivers/SQLite/sqlite3/sqlite3.c	/^static int walIndexRecover(Wal *pWal){$/;"	f	file:
walIndexTryHdr	drivers/SQLite/sqlite3/sqlite3.c	/^static int walIndexTryHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexWriteHdr	drivers/SQLite/sqlite3/sqlite3.c	/^static void walIndexWriteHdr(Wal *pWal){$/;"	f	file:
walIteratorFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void walIteratorFree(WalIterator *p){$/;"	f	file:
walIteratorInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int walIteratorInit(Wal *pWal, WalIterator **pp){$/;"	f	file:
walIteratorNext	drivers/SQLite/sqlite3/sqlite3.c	/^static int walIteratorNext($/;"	f	file:
walLockExclusive	drivers/SQLite/sqlite3/sqlite3.c	/^static int walLockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walLockName	drivers/SQLite/sqlite3/sqlite3.c	/^static const char *walLockName(int lockIdx){$/;"	f	file:
walLockShared	drivers/SQLite/sqlite3/sqlite3.c	/^static int walLockShared(Wal *pWal, int lockIdx){$/;"	f	file:
walMerge	drivers/SQLite/sqlite3/sqlite3.c	/^static void walMerge($/;"	f	file:
walMergesort	drivers/SQLite/sqlite3/sqlite3.c	/^static void walMergesort($/;"	f	file:
walNextHash	drivers/SQLite/sqlite3/sqlite3.c	/^static int walNextHash(int iPriorHash){$/;"	f	file:
walPagesize	drivers/SQLite/sqlite3/sqlite3.c	/^static int walPagesize(Wal *pWal){$/;"	f	file:
walRestartLog	drivers/SQLite/sqlite3/sqlite3.c	/^static int walRestartLog(Wal *pWal){$/;"	f	file:
walShmBarrier	drivers/SQLite/sqlite3/sqlite3.c	/^static void walShmBarrier(Wal *pWal){$/;"	f	file:
walTryBeginRead	drivers/SQLite/sqlite3/sqlite3.c	/^static int walTryBeginRead(Wal *pWal, int *pChanged, int useWal, int cnt){$/;"	f	file:
walUnlockExclusive	drivers/SQLite/sqlite3/sqlite3.c	/^static void walUnlockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walUnlockShared	drivers/SQLite/sqlite3/sqlite3.c	/^static void walUnlockShared(Wal *pWal, int lockIdx){$/;"	f	file:
wal_autocheckpoint	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*wal_autocheckpoint)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines	file:
wal_autocheckpoint	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*wal_autocheckpoint)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines
wal_checkpoint	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*wal_checkpoint)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
wal_checkpoint	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*wal_checkpoint)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
wal_hook	drivers/SQLite/sqlite3/sqlite3.c	/^  void *(*wal_hook)(sqlite3*,int(*)(void*,sqlite3*,const char*,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
wal_hook	drivers/SQLite/sqlite3/sqlite3ext.h	/^  void *(*wal_hook)(sqlite3*,int(*)(void*,sqlite3*,const char*,int),void*);$/;"	m	struct:sqlite3_api_routines
walt_	drivers/GTM/TeGTM.h	/^	float walt_;$/;"	m	class:TeGTMRoutes
walt_	drivers/GTM/TeGTM.h	/^	float walt_;$/;"	m	class:TeGTMWaypoints
wantToLock	drivers/SQLite/sqlite3/sqlite3.c	/^  int wantToLock;    \/* Number of nested calls to sqlite3BtreeEnter() *\/$/;"	m	struct:Btree	file:
warning	drivers/GL/glcore.h	/^    void (*warning)(__GLcontext *gc, char *fmt);$/;"	m	struct:__GLimportsRec
warning	drivers/GL/internal/glcore.h	/^    void (*warning)(__GLcontext *gc, char *fmt);$/;"	m	struct:__GLimportsRec
wasCanceled	image_processing/TePDIPIManager.hpp	/^      inline bool wasCanceled()$/;"	f	class:TePDIPIManager
wasCancelled	drivers/qt/TeQtProgress.h	/^	 bool wasCancelled()$/;"	f	class:TeQtProgress
wasCancelled	kernel/TeStdIOProgress.cpp	/^bool TeStdIOProgress::wasCancelled()$/;"	f	class:TeStdIOProgress
wasMerged_	image_processing/TePDIParaSegRegGrowStrategy.hpp	/^          bool wasMerged_;             $/;"	m	class:TePDIParaSegRegGrowStrategy::Segment
waveletPlanes	image_processing/TePDIFusionIndexes.cpp	13;"	d	file:
waveletPlanes	image_processing/TePDIIHSWaveletFusion.cpp	15;"	d	file:
waveletPlanes	image_processing/TePDIIHSWaveletFusion.hpp	35;"	d
waveletPlanes	image_processing/TePDIPCAWaveletFusion.cpp	14;"	d	file:
waveletPlanes	image_processing/TePDIWaveletAtrous.hpp	33;"	d
waveletPlanes	image_processing/TePDIWiSpeRFusion.hpp	33;"	d
waypointAttributeList	drivers/GTM/TeGTM.cpp	/^void TeGTM::waypointAttributeList(TeAttributeList& attList)$/;"	f	class:TeGTM
waypointTable_	drivers/GTM/TeGTM.h	/^	TeTable waypointTable_;$/;"	m	class:TeGTM
waypointsLayer	drivers/GTM/TeGTM.h	/^	std::map<std::string, std::vector<TePoint> > waypointsLayer;$/;"	m	class:TeGTM
waypoints_	drivers/GTM/TeGTM.h	/^	vector<TeGTMWaypoints*> waypoints_;$/;"	m	class:TeGTM
waypointsstyles_	drivers/GTM/TeGTM.h	/^	vector<TeGTMWaypointsStyles*> waypointsstyles_;$/;"	m	class:TeGTM
wband	image_processing/TePDIBaatz.hpp	/^  float wband[NUM_BANDS]; \/* weight of image bands, between 0 and 1 *\/$/;"	m	struct:segmentation_parameters
wc	drivers/SQLite/sqlite3/sqlite3.c	/^  WhereClause wc;          \/* Decomposition into subterms *\/$/;"	m	struct:WhereOrInfo	file:
wc	drivers/SQLite/sqlite3/sqlite3.c	/^  WhereClause wc;          \/* The subexpression broken out *\/$/;"	m	struct:WhereAndInfo	file:
wc_	drivers/qt/TeQtCanvas.h	/^	TeBox	wc_;$/;"	m	class:TeQtCanvas
wcmpt	image_processing/TePDIBaatz.hpp	/^  float wcmpt; \/* factor of compactness\/smothness, between 0 and 1 *\/$/;"	m	struct:segmentation_parameters
wcolor	image_processing/TePDIBaatz.hpp	/^  float wcolor; \/* factor of color\/shape, between 0 and 1 *\/$/;"	m	struct:segmentation_parameters
wcomment_	drivers/GTM/TeGTM.h	/^	char* wname_, *wcomment_, *rname_;\/\/wname deve ser char[10]$/;"	m	class:TeGTMRoutes
wctrlFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 wctrlFlags;          \/* Might include WHERE_AND_ONLY *\/$/;"	m	struct:WhereClause	file:
wctrlFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  u16 wctrlFlags;      \/* Flags originally passed to sqlite3WhereBegin() *\/$/;"	m	struct:WhereInfo	file:
wdate_	drivers/GTM/TeGTM.h	/^	long wdate_;$/;"	m	class:TeGTMWaypoints
weekDay	kernel/TeTime.h	/^	int weekDay() const { return ts_.tm_wday;} \/\/(0-6) 0=Sunday $/;"	f	class:TeTime
weight_	drivers/GTM/TeGTM.h	/^	long height_, color_, weight_, backcolor_;$/;"	m	class:TeGTMWaypointsStyles
weightsParams	kernel/TeProxMatrixWeightsStrategy.h	/^	TeProxMatrixWeightsParams& weightsParams() { return params_; }$/;"	f	class:TeProxMatrixWeightsStrategy
weights_gain_	image_processing/TePDIFilterMask.hpp	/^      double weights_gain_;$/;"	m	class:TePDIFilterMask
weights_sum_	image_processing/TePDIFilterMask.hpp	/^      double weights_sum_;$/;"	m	class:TePDIFilterMask
wglUseFontBitmaps	drivers/GL/glut.h	148;"	d
wglUseFontBitmaps	drivers/GL/glut.h	151;"	d
wglUseFontBitmaps	drivers/GL/mesa_wgl.h	64;"	d
wglUseFontBitmaps	drivers/GL/mesa_wgl.h	67;"	d
wglUseFontOutlines	drivers/GL/glut.h	149;"	d
wglUseFontOutlines	drivers/GL/glut.h	152;"	d
wglUseFontOutlines	drivers/GL/mesa_wgl.h	65;"	d
wglUseFontOutlines	drivers/GL/mesa_wgl.h	68;"	d
what	drivers/Firebird/ibpp/core/exception.cpp	/^const char* ExceptionBase::what() const throw()$/;"	f	class:ExceptionBase
what	drivers/Firebird/ibpp/core/exception.cpp	/^const char* LogicExceptionImpl::what() const throw()$/;"	f	class:LogicExceptionImpl
what	drivers/Firebird/ibpp/core/exception.cpp	/^const char* SQLExceptionImpl::what() const throw()$/;"	f	class:SQLExceptionImpl
what	drivers/Firebird/ibpp/core/exception.cpp	/^const char* WrongTypeImpl::what() const throw()$/;"	f	class:WrongTypeImpl
whereAndInfoDelete	drivers/SQLite/sqlite3/sqlite3.c	/^static void whereAndInfoDelete(sqlite3 *db, WhereAndInfo *p){$/;"	f	file:
whereClauseClear	drivers/SQLite/sqlite3/sqlite3.c	/^static void whereClauseClear(WhereClause *pWC){$/;"	f	file:
whereClauseInit	drivers/SQLite/sqlite3/sqlite3.c	/^static void whereClauseInit($/;"	f	file:
whereClauseInsert	drivers/SQLite/sqlite3/sqlite3.c	/^static int whereClauseInsert(WhereClause *pWC, Expr *p, u8 wtFlags){$/;"	f	file:
whereClause_	kernel/TeQuerierDBStr1.h	/^	string						whereClause_;$/;"	m	class:TeQuerierDBStr1
whereClause_	kernel/TeQuerierDBStr3.h	/^	string						whereClause_;$/;"	m	class:TeQuerierDBStr3
whereEqualScanEst	drivers/SQLite/sqlite3/sqlite3.c	/^static int whereEqualScanEst($/;"	f	file:
whereForeignKeys	drivers/SQLite/sqlite3/sqlite3.c	/^static char *whereForeignKeys(Parse *pParse, Table *pTab){$/;"	f	file:
whereInScanEst	drivers/SQLite/sqlite3/sqlite3.c	/^static int whereInScanEst($/;"	f	file:
whereInfoFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void whereInfoFree(sqlite3 *db, WhereInfo *pWInfo){$/;"	f	file:
whereKeyStats	drivers/SQLite/sqlite3/sqlite3.c	/^static int whereKeyStats($/;"	f	file:
whereOrInfoDelete	drivers/SQLite/sqlite3/sqlite3.c	/^static void whereOrInfoDelete(sqlite3 *db, WhereOrInfo *p){$/;"	f	file:
whereOrName	drivers/SQLite/sqlite3/sqlite3.c	/^static char *whereOrName(sqlite3 *db, char *zWhere, char *zConstant){$/;"	f	file:
whereRangeScanEst	drivers/SQLite/sqlite3/sqlite3.c	/^static int whereRangeScanEst($/;"	f	file:
whereSplit	drivers/SQLite/sqlite3/sqlite3.c	/^static void whereSplit(WhereClause *pWC, Expr *pExpr, int op){$/;"	f	file:
whereTempTriggers	drivers/SQLite/sqlite3/sqlite3.c	/^static char *whereTempTriggers(Parse *pParse, Table *pTab){$/;"	f	file:
widgetKeyPressEvent	drivers/qwt/TeQwtPlotZoomer.cpp	/^void TeQwtPlotZoomer::widgetKeyPressEvent(QKeyEvent *e)$/;"	f	class:TeQwtPlotZoomer
widgetMouseMoveEvent	drivers/qwt/TeQwtPlotPicker.cpp	/^void TeQwtPlotPicker::widgetMouseMoveEvent(QMouseEvent *e)$/;"	f	class:TeQwtPlotPicker
widgetMousePressEvent	drivers/qwt/TeQwtPlotPicker.cpp	/^void TeQwtPlotPicker::widgetMousePressEvent(QMouseEvent *e)$/;"	f	class:TeQwtPlotPicker
widgetMouseReleaseEvent	drivers/qwt/TeQwtPlotPicker.cpp	/^void TeQwtPlotPicker::widgetMouseReleaseEvent(QMouseEvent *e)$/;"	f	class:TeQwtPlotPicker
widgetMouseReleaseEvent	drivers/qwt/TeQwtPlotZoomer.cpp	/^void TeQwtPlotZoomer::widgetMouseReleaseEvent(QMouseEvent* e)$/;"	f	class:TeQwtPlotZoomer
widget_	drivers/qt/TeQtGraph.h	/^	QWidget* widget_;$/;"	m	class:TeQtGraphPlot
width	drivers/GL/dri_interface.h	/^    int width;              \/**< Pixel width of the framebuffer. *\/$/;"	m	struct:__DRIframebufferRec
width	drivers/GL/glcore.h	/^    GLint width, height, depth;$/;"	m	struct:__GLdrawableBufferRec
width	drivers/GL/glcore.h	/^    GLuint width, height;$/;"	m	struct:__GLdrawablePrivateRec
width	drivers/GL/glx.h	/^    int width, height;$/;"	m	struct:__anon176
width	drivers/GL/glxext.h	/^    int width, height;$/;"	m	struct:__anon93
width	drivers/GL/internal/dri_interface.h	/^    int width;              \/**< Pixel width of the framebuffer. *\/$/;"	m	struct:__DRIframebufferRec
width	drivers/GL/internal/glcore.h	/^    GLint width, height, depth;$/;"	m	struct:__GLdrawableBufferRec
width	drivers/GL/internal/glcore.h	/^    GLuint width, height;$/;"	m	struct:__GLdrawablePrivateRec
width	kernel/TeBox.h	/^	double width () const $/;"	f	struct:TeBox
width	kernel/TeGraph.h	/^	int width;             \/* width of axes (in pixels) *\/$/;"	m	class:TeGraphPlot
width	kernel/TeVisual.h	/^	virtual int	 width ()  $/;"	f	class:TeVisual
width	kernel/TeVisual.h	/^	virtual void width(int w) $/;"	f	class:TeVisual
widthRef2PrinterFactor	drivers/qt/TeQtCanvas.h	/^	void widthRef2PrinterFactor(int w) {widthRef2PrinterFactor_ = w;}$/;"	f	class:TeQtCanvas
widthRef2PrinterFactor_	drivers/qt/TeQtCanvas.h	/^	int		widthRef2PrinterFactor_;$/;"	m	class:TeQtCanvas
width_	drivers/qt/TeQtCanvas.h	/^	int		width_;$/;"	m	class:TeQtCanvas
width_	image_processing/TePDIParaSegSegmentsBlock.hpp	/^      unsigned int width_;$/;"	m	class:TePDIParaSegSegmentsBlock
width_	kernel/TePieBar.h	/^	double			width_;$/;"	m	class:TePieBar
width_	kernel/TeVisual.h	/^	int			width_;				$/;"	m	class:TeBaseVisualParams
win32IoerrRetry	drivers/SQLite/sqlite3/sqlite3.c	/^static int win32IoerrRetry = SQLITE_WIN32_IOERR_RETRY;$/;"	v	file:
win32IoerrRetryDelay	drivers/SQLite/sqlite3/sqlite3.c	/^static int win32IoerrRetryDelay = SQLITE_WIN32_IOERR_RETRY_DELAY;$/;"	v	file:
winAccess	drivers/SQLite/sqlite3/sqlite3.c	/^static int winAccess($/;"	f	file:
winCheckReservedLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int winCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
winClose	drivers/SQLite/sqlite3/sqlite3.c	/^static int winClose(sqlite3_file *id){$/;"	f	file:
winCurrentTime	drivers/SQLite/sqlite3/sqlite3.c	/^static int winCurrentTime(sqlite3_vfs *pVfs, double *prNow){$/;"	f	file:
winCurrentTimeInt64	drivers/SQLite/sqlite3/sqlite3.c	/^static int winCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *piNow){$/;"	f	file:
winDelete	drivers/SQLite/sqlite3/sqlite3.c	/^static int winDelete($/;"	f	file:
winDeviceCharacteristics	drivers/SQLite/sqlite3/sqlite3.c	/^static int winDeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
winDlClose	drivers/SQLite/sqlite3/sqlite3.c	/^static void winDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
winDlClose	drivers/SQLite/sqlite3/sqlite3.c	34591;"	d	file:
winDlError	drivers/SQLite/sqlite3/sqlite3.c	/^static void winDlError(sqlite3_vfs *pVfs, int nBuf, char *zBufOut){$/;"	f	file:
winDlError	drivers/SQLite/sqlite3/sqlite3.c	34589;"	d	file:
winDlOpen	drivers/SQLite/sqlite3/sqlite3.c	/^static void *winDlOpen(sqlite3_vfs *pVfs, const char *zFilename){$/;"	f	file:
winDlOpen	drivers/SQLite/sqlite3/sqlite3.c	34588;"	d	file:
winDlSym	drivers/SQLite/sqlite3/sqlite3.c	/^static void (*winDlSym(sqlite3_vfs *pVfs, void *pHandle, const char *zSymbol))(void){$/;"	f	file:
winDlSym	drivers/SQLite/sqlite3/sqlite3.c	34590;"	d	file:
winFile	drivers/SQLite/sqlite3/sqlite3.c	/^struct winFile {$/;"	s	file:
winFile	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct winFile winFile;$/;"	t	typeref:struct:winFile	file:
winFileControl	drivers/SQLite/sqlite3/sqlite3.c	/^static int winFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
winFileSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int winFileSize(sqlite3_file *id, sqlite3_int64 *pSize){$/;"	f	file:
winFullPathname	drivers/SQLite/sqlite3/sqlite3.c	/^static int winFullPathname($/;"	f	file:
winGetLastError	drivers/SQLite/sqlite3/sqlite3.c	/^static int winGetLastError(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winIoMethod	drivers/SQLite/sqlite3/sqlite3.c	/^static const sqlite3_io_methods winIoMethod = {$/;"	v	file:
winLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int winLock(sqlite3_file *id, int locktype){$/;"	f	file:
winLogError	drivers/SQLite/sqlite3/sqlite3.c	32221;"	d	file:
winLogErrorAtLine	drivers/SQLite/sqlite3/sqlite3.c	/^static int winLogErrorAtLine($/;"	f	file:
winMemAssertMagic	drivers/SQLite/sqlite3/sqlite3.c	31763;"	d	file:
winMemAssertMagic	drivers/SQLite/sqlite3/sqlite3.c	31765;"	d	file:
winMemData	drivers/SQLite/sqlite3/sqlite3.c	/^struct winMemData {$/;"	s	file:
winMemData	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct winMemData winMemData;$/;"	t	typeref:struct:winMemData	file:
winMemFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void winMemFree(void *pPrior){$/;"	f	file:
winMemGetHeap	drivers/SQLite/sqlite3/sqlite3.c	31768;"	d	file:
winMemInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int winMemInit(void *pAppData){$/;"	f	file:
winMemMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *winMemMalloc(int nBytes){$/;"	f	file:
winMemRealloc	drivers/SQLite/sqlite3/sqlite3.c	/^static void *winMemRealloc(void *pPrior, int nBytes){$/;"	f	file:
winMemRoundup	drivers/SQLite/sqlite3/sqlite3.c	/^static int winMemRoundup(int n){$/;"	f	file:
winMemShutdown	drivers/SQLite/sqlite3/sqlite3.c	/^static void winMemShutdown(void *pAppData){$/;"	f	file:
winMemSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int winMemSize(void *p){$/;"	f	file:
winMutexAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3_mutex *winMutexAlloc(int iType){$/;"	f	file:
winMutexEnd	drivers/SQLite/sqlite3/sqlite3.c	/^static int winMutexEnd(void){ $/;"	f	file:
winMutexEnter	drivers/SQLite/sqlite3/sqlite3.c	/^static void winMutexEnter(sqlite3_mutex *p){$/;"	f	file:
winMutexFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void winMutexFree(sqlite3_mutex *p){$/;"	f	file:
winMutexHeld	drivers/SQLite/sqlite3/sqlite3.c	/^static int winMutexHeld(sqlite3_mutex *p){$/;"	f	file:
winMutexInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int winMutexInit(void){ $/;"	f	file:
winMutexLeave	drivers/SQLite/sqlite3/sqlite3.c	/^static void winMutexLeave(sqlite3_mutex *p){$/;"	f	file:
winMutexNotheld	drivers/SQLite/sqlite3/sqlite3.c	/^static int winMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
winMutexNotheld2	drivers/SQLite/sqlite3/sqlite3.c	/^static int winMutexNotheld2(sqlite3_mutex *p, DWORD tid){$/;"	f	file:
winMutexTry	drivers/SQLite/sqlite3/sqlite3.c	/^static int winMutexTry(sqlite3_mutex *p){$/;"	f	file:
winMutex_isInit	drivers/SQLite/sqlite3/sqlite3.c	/^static int winMutex_isInit = 0;$/;"	v	file:
winMutex_lock	drivers/SQLite/sqlite3/sqlite3.c	/^static long winMutex_lock = 0;$/;"	v	file:
winMutex_staticMutexes	drivers/SQLite/sqlite3/sqlite3.c	/^static sqlite3_mutex winMutex_staticMutexes[6] = {$/;"	v	file:
winOpen	drivers/SQLite/sqlite3/sqlite3.c	/^static int winOpen($/;"	f	file:
winOpenSharedMemory	drivers/SQLite/sqlite3/sqlite3.c	/^static int winOpenSharedMemory(winFile *pDbFd){$/;"	f	file:
winRandomness	drivers/SQLite/sqlite3/sqlite3.c	/^static int winRandomness(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winRead	drivers/SQLite/sqlite3/sqlite3.c	/^static int winRead($/;"	f	file:
winSectorSize	drivers/SQLite/sqlite3/sqlite3.c	/^static int winSectorSize(sqlite3_file *id){$/;"	f	file:
winShm	drivers/SQLite/sqlite3/sqlite3.c	/^struct winShm {$/;"	s	file:
winShm	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct winShm winShm;           \/* A connection to shared-memory *\/$/;"	t	typeref:struct:winShm	file:
winShmBarrier	drivers/SQLite/sqlite3/sqlite3.c	/^static void winShmBarrier($/;"	f	file:
winShmBarrier	drivers/SQLite/sqlite3/sqlite3.c	33897;"	d	file:
winShmEnterMutex	drivers/SQLite/sqlite3/sqlite3.c	/^static void winShmEnterMutex(void){$/;"	f	file:
winShmLeaveMutex	drivers/SQLite/sqlite3/sqlite3.c	/^static void winShmLeaveMutex(void){$/;"	f	file:
winShmLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int winShmLock($/;"	f	file:
winShmLock	drivers/SQLite/sqlite3/sqlite3.c	33896;"	d	file:
winShmMap	drivers/SQLite/sqlite3/sqlite3.c	/^static int winShmMap($/;"	f	file:
winShmMap	drivers/SQLite/sqlite3/sqlite3.c	33895;"	d	file:
winShmMutexHeld	drivers/SQLite/sqlite3/sqlite3.c	/^static int winShmMutexHeld(void) {$/;"	f	file:
winShmNode	drivers/SQLite/sqlite3/sqlite3.c	/^struct winShmNode {$/;"	s	file:
winShmNode	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct winShmNode winShmNode;   \/* A region of shared-memory *\/$/;"	t	typeref:struct:winShmNode	file:
winShmNodeList	drivers/SQLite/sqlite3/sqlite3.c	/^static winShmNode *winShmNodeList = 0;$/;"	v	file:
winShmPurge	drivers/SQLite/sqlite3/sqlite3.c	/^static void winShmPurge(sqlite3_vfs *pVfs, int deleteFlag){$/;"	f	file:
winShmSystemLock	drivers/SQLite/sqlite3/sqlite3.c	/^static int winShmSystemLock($/;"	f	file:
winShmUnmap	drivers/SQLite/sqlite3/sqlite3.c	/^static int winShmUnmap($/;"	f	file:
winShmUnmap	drivers/SQLite/sqlite3/sqlite3.c	33898;"	d	file:
winSleep	drivers/SQLite/sqlite3/sqlite3.c	/^static int winSleep(sqlite3_vfs *pVfs, int microsec){$/;"	f	file:
winSync	drivers/SQLite/sqlite3/sqlite3.c	/^static int winSync(sqlite3_file *id, int flags){$/;"	f	file:
winSysInfo	drivers/SQLite/sqlite3/sqlite3.c	/^SYSTEM_INFO winSysInfo;$/;"	v
winTruncate	drivers/SQLite/sqlite3/sqlite3.c	/^static int winTruncate(sqlite3_file *id, sqlite3_int64 nByte){$/;"	f	file:
winUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^static int winUnlock(sqlite3_file *id, int locktype){$/;"	f	file:
winWrite	drivers/SQLite/sqlite3/sqlite3.c	/^static int winWrite($/;"	f	file:
win_mem_data	drivers/SQLite/sqlite3/sqlite3.c	/^static struct winMemData win_mem_data = {$/;"	v	typeref:struct:winMemData	file:
winceCreateLock	drivers/SQLite/sqlite3/sqlite3.c	/^static BOOL winceCreateLock(const char *zFilename, winFile *pFile){$/;"	f	file:
winceDestroyLock	drivers/SQLite/sqlite3/sqlite3.c	/^static void winceDestroyLock(winFile *pFile){$/;"	f	file:
winceLock	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct winceLock {$/;"	s	file:
winceLock	drivers/SQLite/sqlite3/sqlite3.c	/^} winceLock;$/;"	t	typeref:struct:winceLock	file:
winceLockFile	drivers/SQLite/sqlite3/sqlite3.c	/^static BOOL winceLockFile($/;"	f	file:
winceLockFileEx	drivers/SQLite/sqlite3/sqlite3.c	/^static BOOL winceLockFileEx($/;"	f	file:
winceMutexAcquire	drivers/SQLite/sqlite3/sqlite3.c	/^static void winceMutexAcquire(HANDLE h){$/;"	f	file:
winceMutexRelease	drivers/SQLite/sqlite3/sqlite3.c	32346;"	d	file:
winceUnlockFile	drivers/SQLite/sqlite3/sqlite3.c	/^static BOOL winceUnlockFile($/;"	f	file:
windowExists	drivers/GL/dri_interface.h	/^    GLboolean (*windowExists)(__DRInativeDisplay *dpy, __DRIid draw);$/;"	m	struct:__DRIinterfaceMethodsRec
windowExists	drivers/GL/internal/dri_interface.h	/^    GLboolean (*windowExists)(__DRInativeDisplay *dpy, __DRIid draw);$/;"	m	struct:__DRIinterfaceMethodsRec
withinDistance	kernel/TeDatabase.cpp	/^TeDatabase::withinDistance(const string& actGeomTable, TeGeomRep actRep, const TeCoord2D& coord, TeKeysToDist& IdsDistOut, const double& max_distance, const string& actCollTable)$/;"	f	class:TeDatabase
withoutDataConnectionLegend	kernel/TeAbstractTheme.h	/^	virtual TeLegendEntry& withoutDataConnectionLegend () $/;"	f	class:TeAbstractTheme
withoutDataConnectionLegend	kernel/TeAbstractTheme.h	/^	virtual void withoutDataConnectionLegend (TeLegendEntry &leg) $/;"	f	class:TeAbstractTheme
withoutDataConnectionLegend_	kernel/TeAbstractTheme.h	/^	TeLegendEntry		withoutDataConnectionLegend_;	\/\/group(-2) $/;"	m	class:TeAbstractTheme
withoutDataConnectionVisibility	drivers/qt/TeAppTheme.h	/^	bool withoutDataConnectionVisibility() $/;"	f	class:TeAppTheme
withoutDataConnectionVisibility	drivers/qt/TeAppTheme.h	/^	void withoutDataConnectionVisibility(bool v) $/;"	f	class:TeAppTheme
withoutDataConnectionVisibility_	drivers/qt/TeAppTheme.h	/^	bool			withoutDataConnectionVisibility_; $/;"	m	class:TeAppTheme
wlayer_	drivers/GTM/TeGTM.h	/^	short ico_, wrot_, wlayer_;$/;"	m	class:TeGTMRoutes
wlayer_	drivers/GTM/TeGTM.h	/^	short ico_, wrot_, wlayer_;$/;"	m	class:TeGTMWaypoints
wli_	drivers/GTM/TeGTM.h	/^	unsigned char wli_, vwt_, gradnum_, wptnum_, usernum_, coriml_, ndatum_;$/;"	m	class:TeGTMHeader
wmShellWidgetClass	drivers/GL/vms_x_fix.h	593;"	d
wname_	drivers/GTM/TeGTM.h	/^	char *name_, *wname_;\/\/name deve ser char[10]$/;"	m	class:TeGTMWaypoints
wname_	drivers/GTM/TeGTM.h	/^	char* wname_, *wcomment_, *rname_;\/\/wname deve ser char[10]$/;"	m	class:TeGTMRoutes
world2Pixel	drivers/MrSID/TeMrSID.cpp	/^void TeMrSIDReader::world2Pixel(double wx, double wy, int& ix, int& iy)$/;"	f	class:TeMrSIDReader
wptnum_	drivers/GTM/TeGTM.h	/^	unsigned char wli_, vwt_, gradnum_, wptnum_, usernum_, coriml_, ndatum_;$/;"	m	class:TeGTMHeader
wrFlag	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 wrFlag;                \/* True if writable *\/$/;"	m	struct:BtCursor	file:
wrapper_func_ptr_	kernel/TeCommunicator.h	/^      WrapperFuncPtrT wrapper_func_ptr_;$/;"	m	class:TeCommunicator
writableSchema	drivers/SQLite/sqlite3/shell.c	/^  int writableSchema;    \/* True if PRAGMA writable_schema=ON *\/$/;"	m	struct:callback_data	file:
write32bits	drivers/SQLite/sqlite3/sqlite3.c	/^static int write32bits(sqlite3_file *fd, i64 offset, u32 val){$/;"	f	file:
writeArcHeader	functions/TeSPRFile.cpp	/^TeSPRFile::writeArcHeader ( const string& geoid, const double& posImp, $/;"	f	class:TeSPRFile
writeAttributeInfo	functions/TeSPRFile.cpp	/^TeSPRFile::writeAttributeInfo( TeAttributeList& attList, const string& objCategory,$/;"	f	class:TeSPRFile
writeBox	functions/TeSPRFile.cpp	/^TeSPRFile::writeBox( TeBox& box ) $/;"	f	class:TeSPRFile
writeCadastralLabel	functions/TeSPRFile.cpp	/^TeSPRFile::writeCadastralLabel ( const string& geoid, const double& x, const double& y,$/;"	f	class:TeSPRFile
writeCell	drivers/qt/TeQtGrid.cpp	/^bool TeQtGrid::writeCell()$/;"	f	class:TeQtGrid
writeCoord	drivers/SQLite/sqlite3/sqlite3.c	/^static int writeCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
writeCoord	functions/TeSPRFile.h	/^	void writeCoord ( const double& x, const double& y)$/;"	f	class:TeSPRFile
writeCoordPairVect2CSV	kernel/TeAsciiFile.cpp	/^bool TeAsciiFile::writeCoordPairVect2CSV( const TeCoordPairVect& coordsVec )$/;"	f	class:TeAsciiFile
writeEnd	functions/TeSPRFile.h	/^	void writeEnd ()$/;"	f	class:TeSPRFile
writeGTMGridDatum	drivers/GTM/TeGTM.cpp	/^void TeGTMGridDatum::writeGTMGridDatum(FILE* file)$/;"	f	class:TeGTMGridDatum
writeGTMHeader	drivers/GTM/TeGTM.cpp	/^void TeGTMHeader::writeGTMHeader(FILE* file)$/;"	f	class:TeGTMHeader
writeGTMTrackLogStyles	drivers/GTM/TeGTM.cpp	/^void TeGTMTrackLogStyles::writeGTMTrackLogStyles(FILE *file)$/;"	f	class:TeGTMTrackLogStyles
writeGTMTrackLogs	drivers/GTM/TeGTM.cpp	/^void TeGTMTrackLogs::writeGTMTrackLogs(FILE* file)$/;"	f	class:TeGTMTrackLogs
writeGTMWaypoints	drivers/GTM/TeGTM.cpp	/^void TeGTMWaypoints::writeGTMWaypoints(FILE* file)$/;"	f	class:TeGTMWaypoints
writeGTMWaypointsStyles	drivers/GTM/TeGTM.cpp	/^void TeGTMWaypointsStyles::writeGTMWaypointsStyles(FILE* file)$/;"	f	class:TeGTMWaypointsStyles
writeGeoId	functions/TeSPRFile.h	/^	void writeGeoId ( const string& geoid )$/;"	f	class:TeSPRFile
writeInfoEnd	functions/TeSPRFile.h	/^	void writeInfoEnd ()$/;"	f	class:TeSPRFile
writeInt16	drivers/SQLite/sqlite3/sqlite3.c	/^static int writeInt16(u8 *p, int i){$/;"	f	file:
writeInt64	drivers/SQLite/sqlite3/sqlite3.c	/^static int writeInt64(u8 *p, i64 i){$/;"	f	file:
writeIntParameterInfo	functions/TeSPRFile.cpp	/^TeSPRFile::writeIntParameterInfo ( const string& name )$/;"	f	class:TeSPRFile
writeJournalHdr	drivers/SQLite/sqlite3/sqlite3.c	/^static int writeJournalHdr(Pager *pPager){$/;"	f	file:
writeLabelHeader	functions/TeSPRFile.cpp	/^TeSPRFile::writeLabelHeader ( const int& option )	 $/;"	f	class:TeSPRFile
writeLine3DHeader	functions/TeSPRFile.h	/^	void writeLine3DHeader()$/;"	f	class:TeSPRFile
writeLinesHeader	functions/TeSPRFile.cpp	/^TeSPRFile::writeLinesHeader ()  $/;"	f	class:TeSPRFile
writeLock	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 writeLock;              \/* True if in a write transaction *\/$/;"	m	struct:Wal	file:
writeMPpath	kernel/gra_util.h	/^void writeMPpath(char * Filename,$/;"	f	namespace:br_stl
writeMask	drivers/SQLite/sqlite3/sqlite3.c	/^  yDbMask writeMask;   \/* Start a write transaction on these databases *\/$/;"	m	struct:Parse	file:
writeMasterJournal	drivers/SQLite/sqlite3/sqlite3.c	/^static int writeMasterJournal(Pager *pPager, const char *zMaster){$/;"	f	file:
writeNetworkHeader	functions/TeSPRFile.cpp	/^TeSPRFile::writeNetworkHeader()$/;"	f	class:TeSPRFile
writeNetworkLabel	functions/TeSPRFile.cpp	/^TeSPRFile::writeNetworkLabel ( const string& geoid, const double& x, const double& y,$/;"	f	class:TeSPRFile
writeNetworkLineHeader	functions/TeSPRFile.h	/^	void writeNetworkLineHeader(int id )$/;"	f	class:TeSPRFile
writeNewLine	kernel/TeAsciiFile.h	/^	void writeNewLine ()$/;"	f	class:TeAsciiFile
writeParameters	kernel/TeDecoderASCIIGrid.cpp	/^TeDecoderASCIIGrid::writeParameters(TeAsciiFile& pFile)$/;"	f	class:TeDecoderASCIIGrid
writeParameters	kernel/TeDecoderSPR.cpp	/^TeDecoderSPR::writeParameters(TeAsciiFile& pFile)$/;"	f	class:TeDecoderSPR
writeParametersFile	kernel/TeRasterParams.cpp	/^TeRasterParams::writeParametersFile()$/;"	f	class:TeRasterParams
writePoint	functions/TeSPRFile.h	/^	void writePoint ( TeCoord2D& p )$/;"	f	class:TeSPRFile
writePoint3D	functions/TeSPRFile.h	/^	void writePoint3D( const double& x, const double& y, const double& quote )$/;"	f	class:TeSPRFile
writePoint3DHeader	functions/TeSPRFile.h	/^	void writePoint3DHeader()$/;"	f	class:TeSPRFile
writePointsHeader	functions/TeSPRFile.cpp	/^TeSPRFile::writePointsHeader ()  $/;"	f	class:TeSPRFile
writeProjection	functions/TeSPRFile.cpp	/^TeSPRFile::writeProjection( TeProjection* proj ) $/;"	f	class:TeSPRFile
writeRealParameterInfo	functions/TeSPRFile.cpp	/^TeSPRFile::writeRealParameterInfo ( const string& name )$/;"	f	class:TeSPRFile
writeSample	functions/TeSPRFile.cpp	/^TeSPRFile::writeSample( const string& \/* geoid *\/, const double& x, $/;"	f	class:TeSPRFile
writeSampleHeader	functions/TeSPRFile.cpp	/^TeSPRFile::writeSampleHeader ()$/;"	f	class:TeSPRFile
writeSampleQuote	functions/TeSPRFile.h	/^	void writeSampleQuote( double quote )$/;"	f	class:TeSPRFile
writeString	kernel/TeAsciiFile.cpp	/^TeAsciiFile::writeString (const string& s)$/;"	f	class:TeAsciiFile
writeTableHeader	functions/TeSPRFile.cpp	/^TeSPRFile::writeTableHeader (const int& \/* dType *\/)  $/;"	f	class:TeSPRFile
writeTextParameterInfo	functions/TeSPRFile.cpp	/^TeSPRFile::writeTextParameterInfo ( const string& name, int w )$/;"	f	class:TeSPRFile
writeThematicLabel	functions/TeSPRFile.cpp	/^TeSPRFile::writeThematicLabel( const double& x, const double& y, const string& theme )$/;"	f	class:TeSPRFile
writeThematicPoint	functions/TeSPRFile.cpp	/^TeSPRFile::writeThematicPoint( const double& x, const double& y, const string& theme )$/;"	f	class:TeSPRFile
writeTriangleEdgesSPRFile	kernel/TeTin.cpp	/^TeTin::writeTriangleEdgesSPRFile (std::string& name, TeRaster* raster)$/;"	f	class:TeTin
writeTriangleSPRFile	kernel/TeTin.cpp	/^TeTin::writeTriangleSPRFile (std::string nameVert, std::string nameEdge, std::string nameTriang)$/;"	f	class:TeTin
writeValue	functions/TeSPRFile.cpp	/^TeSPRFile::writeValue ( const string& value, TeAttrDataType type )$/;"	f	class:TeSPRFile
writeValue	functions/TeSPRFile.h	/^	void writeValue ( const double& value )$/;"	f	class:TeSPRFile
writeValue	functions/TeSPRFile.h	/^	void writeValue ( const int& value )$/;"	f	class:TeSPRFile
writeValue	functions/TeSPRFile.h	/^	void writeValue ( const string& value )$/;"	f	class:TeSPRFile
writeVdbeCnt	drivers/SQLite/sqlite3/sqlite3.c	/^  int writeVdbeCnt;             \/* Number of active VDBEs that are writing *\/$/;"	m	struct:sqlite3	file:
write_history	drivers/SQLite/sqlite3/shell.c	63;"	d	file:
write_segments	image_processing/TePDIBaatz.cpp	/^void write_segments(\/\/ float **input_image, $/;"	f
writing_	kernel/TeGDriverFactory.h	/^    bool writing_;$/;"	m	struct:TeGDriverParams
wrn	drivers/Oracle/OCI/include/ocidfn.h	/^    ub1          wrn;                                       \/* warning flags *\/$/;"	m	struct:cda_def
wrn	drivers/Oracle/OCI/include/ocidfn.h	/^    ub1          wrn;$/;"	m	struct:cda_head
wrot_	drivers/GTM/TeGTM.h	/^	short ico_, wrot_, wlayer_;$/;"	m	class:TeGTMRoutes
wrot_	drivers/GTM/TeGTM.h	/^	short ico_, wrot_, wlayer_;$/;"	m	class:TeGTMWaypoints
wsFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  u32 wsFlags;                   \/* WHERE_* flags that describe the strategy *\/$/;"	m	struct:WherePlan	file:
wsdAutoext	drivers/SQLite/sqlite3/sqlite3.c	90199;"	d	file:
wsdAutoext	drivers/SQLite/sqlite3/sqlite3.c	90202;"	d	file:
wsdAutoextInit	drivers/SQLite/sqlite3/sqlite3.c	90197;"	d	file:
wsdAutoextInit	drivers/SQLite/sqlite3/sqlite3.c	90201;"	d	file:
wsdHooks	drivers/SQLite/sqlite3/sqlite3.c	14793;"	d	file:
wsdHooks	drivers/SQLite/sqlite3/sqlite3.c	14796;"	d	file:
wsdHooksInit	drivers/SQLite/sqlite3/sqlite3.c	14791;"	d	file:
wsdHooksInit	drivers/SQLite/sqlite3/sqlite3.c	14795;"	d	file:
wsdPrng	drivers/SQLite/sqlite3/sqlite3.c	19983;"	d	file:
wsdStat	drivers/SQLite/sqlite3/sqlite3.c	13067;"	d	file:
wsdStat	drivers/SQLite/sqlite3/sqlite3.c	13070;"	d	file:
wsdStatInit	drivers/SQLite/sqlite3/sqlite3.c	13066;"	d	file:
wsdStatInit	drivers/SQLite/sqlite3/sqlite3.c	13069;"	d	file:
wtFlags	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 wtFlags;             \/* TERM_xxx bit flags.  See below *\/$/;"	m	struct:WhereTerm	file:
x	drivers/GL/glx.h	/^    int x, y;$/;"	m	struct:__anon176
x	drivers/GL/glxext.h	/^    int x, y;$/;"	m	struct:__anon93
x	drivers/Oracle/TeOCICursor.h	/^   OCIInd x;$/;"	m	struct:sdo_point_type_ind
x	drivers/Oracle/TeOCICursor.h	/^   OCINumber x;$/;"	m	struct:sdo_point_type
x	drivers/PostgreSQL/TePGInterface.cpp	/^	double		x, y;$/;"	m	struct:__anon178	file:
x	drivers/SQLite/sqlite3/sqlite3.c	/^  } x;$/;"	m	struct:Expr	typeref:union:Expr::__anon43	file:
x	functions/TeCellAlgorithms.h	/^		int xo, yo, xf, yf, x, y;$/;"	m	class:TeBoxRasterIterator
x	kernel/TeCoord2D.h	/^	const double&	x () const 				$/;"	f	class:TeCoord2D
x	kernel/TeCoord2D.h	/^	void x ( const double& valX )$/;"	f	class:TeCoord2D
x0	drivers/GL/glcore.h	/^    GLint x0, y0;$/;"	m	struct:__GLregionRectRec
x0	drivers/GL/internal/glcore.h	/^    GLint x0, y0;$/;"	m	struct:__GLregionRectRec
x0_	drivers/qt/TeQtCanvas.h	/^	int		x0_;$/;"	m	class:TeQtCanvas
x0_	kernel/TeRasterParams.h	/^	double x0_;		\/\/!< X coordinate of the upper left raster element$/;"	m	class:TeRasterParams
x1	drivers/GL/glcore.h	/^    GLint x1, y1;$/;"	m	struct:__GLregionRectRec
x1	drivers/GL/internal/glcore.h	/^    GLint x1, y1;$/;"	m	struct:__GLregionRectRec
x1	kernel/TeBox.h	/^	const double& x1 () const $/;"	f	struct:TeBox
x1_	kernel/TeBox.h	/^	double x1_, \/\/!< x coordinate of the lower left corner$/;"	m	struct:TeBox
x2	kernel/TeBox.h	/^	const double& x2 () const $/;"	f	struct:TeBox
x2_	kernel/TeBox.h	/^		   x2_,	\/\/!< x coordinate of the upper right corner$/;"	m	struct:TeBox
xAccess	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs	file:
xAccess	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs
xAdvance	drivers/SQLite/sqlite3/sqlite3.c	/^    int (*xAdvance)(BtCursor *, int *);$/;"	m	union:VdbeOp::__anon39	file:
xAlignment	drivers/GL/glcore.h	/^    GLint xAlignment, yAlignment;$/;"	m	struct:__GLdrawablePrivateRec
xAlignment	drivers/GL/internal/glcore.h	/^    GLint xAlignment, yAlignment;$/;"	m	struct:__GLdrawablePrivateRec
xAuth	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xAuth)(void*,int,const char*,const char*,const char*,const char*);$/;"	m	struct:sqlite3	file:
xBacktrace	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xBacktrace)(int, int, void **);$/;"	m	struct:__anon50	file:
xBegin	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xBegin	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xBenignBegin	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xBenignBegin)(void);$/;"	m	struct:BenignMallocHooks	file:
xBenignEnd	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xBenignEnd)(void);$/;"	m	struct:BenignMallocHooks	file:
xBestIndex	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module	file:
xBestIndex	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module
xBusyHandler	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xBusyHandler)(void*); \/* Function to call when busy *\/$/;"	m	struct:Pager	file:
xCachesize	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods	file:
xCachesize	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods
xCheckReservedLock	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods	file:
xCheckReservedLock	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods
xClose	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xClose	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xClose)(sqlite3_tokenizer_cursor *pCursor);$/;"	m	struct:sqlite3_tokenizer_module	file:
xClose	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xClose	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xClose	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xCmp	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xCmp)(void*,int, const void*, int, const void*);$/;"	m	struct:CollSeq	file:
xCodec	drivers/SQLite/sqlite3/sqlite3.c	/^  void *(*xCodec)(void*,void*,Pgno,int); \/* Routine for en\/decoding data *\/$/;"	m	struct:Pager	file:
xCodecFree	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xCodecFree)(void*);             \/* Destructor for the codec *\/$/;"	m	struct:Pager	file:
xCodecSizeChng	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xCodecSizeChng)(void*,int,int); \/* Notify of page size changes *\/$/;"	m	struct:Pager	file:
xCollNeeded	drivers/SQLite/sqlite3/sqlite3.c	/^  void(*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*);$/;"	m	struct:sqlite3	file:
xCollNeeded16	drivers/SQLite/sqlite3/sqlite3.c	/^  void(*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*);$/;"	m	struct:sqlite3	file:
xColumn	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module	file:
xColumn	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module
xCommit	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xCommit	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xCommitCallback	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xCommitCallback)(void*);    \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3	file:
xConnect	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	file:
xConnect	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xCreate)($/;"	m	struct:sqlite3_tokenizer_module	file:
xCreate	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	file:
xCreate	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods	file:
xCreate	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	drivers/SQLite/sqlite3/sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods
xCurrentTime	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs	file:
xCurrentTime	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs
xCurrentTimeInt64	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs	file:
xCurrentTimeInt64	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs
xDel	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xDel)(void *);  \/* If not null, call this function to delete Mem.z *\/$/;"	m	struct:Mem	file:
xDel	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xDel)(void*);  \/* Destructor for pUser *\/$/;"	m	struct:CollSeq	file:
xDelUser	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
xDelUser	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry
xDelete	drivers/SQLite/sqlite3/sqlite3.c	/^    void (*xDelete)(void *);      \/* Destructor for the aux data *\/$/;"	m	struct:VdbeFunc::AuxData	file:
xDelete	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs	file:
xDelete	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs
xDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xDestroy)(sqlite3_tokenizer *pTokenizer);$/;"	m	struct:sqlite3_tokenizer_module	file:
xDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	file:
xDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xDestroy)(void *);            \/* Module destructor function *\/$/;"	m	struct:Module	file:
xDestroy	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xDestroy)(void *);$/;"	m	struct:FuncDestructor	file:
xDestroy	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDestroy	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xDeviceCharacteristics	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xDeviceCharacteristics	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xDisconnect	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xDisconnect	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDlClose	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs	file:
xDlClose	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs
xDlError	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs	file:
xDlError	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs
xDlOpen	drivers/SQLite/sqlite3/sqlite3.c	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs	file:
xDlOpen	drivers/SQLite/sqlite3/sqlite3.h	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs
xEof	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xEof	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xExprCallback	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xExprCallback)(Walker*, Expr*);     \/* Callback for expressions *\/$/;"	m	struct:Walker	file:
xFetch	drivers/SQLite/sqlite3/sqlite3.c	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods	file:
xFetch	drivers/SQLite/sqlite3/sqlite3.h	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods
xField_	drivers/qt/TeQtGLWidget.h	/^	string xField_, yField_, zField_;$/;"	m	class:TeQtGLWidget
xFileControl	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods	file:
xFileControl	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods
xFileSize	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods	file:
xFileSize	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods
xFilter	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module	file:
xFilter	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module
xFinalize	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xFinalize)(sqlite3_context*);                \/* Aggregate finalizer *\/$/;"	m	struct:FuncDef	file:
xFindFunction	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module	file:
xFindFunction	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module
xFree	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xFree	drivers/SQLite/sqlite3/sqlite3.c	/^static void xFree(void *p){$/;"	f	file:
xFree	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods
xFreeSchema	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xFreeSchema)(void*);  \/* Destructor for BtShared.pSchema *\/$/;"	m	struct:BtShared	file:
xFullPathname	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs	file:
xFullPathname	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs
xFunc	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xFunc)(void *,int);  \/* The busy callback *\/$/;"	m	struct:BusyHandler	file:
xFunc	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xFunc)(sqlite3_context*,int,sqlite3_value**); \/* Regular function *\/$/;"	m	struct:FuncDef	file:
xGLXBindSwapBarrierSGIXReq	drivers/GL/glxproto.h	/^} xGLXBindSwapBarrierSGIXReq;$/;"	t	typeref:struct:GLXBindSwapBarrierSGIX
xGLXChangeDrawableAttributesReq	drivers/GL/glxproto.h	/^} xGLXChangeDrawableAttributesReq;$/;"	t	typeref:struct:GLXChangeDrawableAttributes
xGLXClientInfoReq	drivers/GL/glxproto.h	/^} xGLXClientInfoReq;$/;"	t	typeref:struct:GLXClientInfo
xGLXCopyContextReq	drivers/GL/glxproto.h	/^} xGLXCopyContextReq;$/;"	t	typeref:struct:GLXCopyContext
xGLXCreateContextReq	drivers/GL/glxproto.h	/^} xGLXCreateContextReq;$/;"	t	typeref:struct:GLXCreateContext
xGLXCreateContextWithConfigSGIXReq	drivers/GL/glxproto.h	/^} xGLXCreateContextWithConfigSGIXReq;$/;"	t	typeref:struct:GLXCreateContextWithConfigSGIX
xGLXCreateGLXPbufferReply	drivers/GL/glxproto.h	/^} xGLXCreateGLXPbufferReply;$/;"	t	typeref:struct:__anon117
xGLXCreateGLXPixmapReq	drivers/GL/glxproto.h	/^} xGLXCreateGLXPixmapReq;$/;"	t	typeref:struct:GLXCreateGLXPixmap
xGLXCreateGLXPixmapWithConfigSGIXReq	drivers/GL/glxproto.h	/^} xGLXCreateGLXPixmapWithConfigSGIXReq;$/;"	t	typeref:struct:GLXCreateGLXPixmapWithConfigSGIX
xGLXCreateNewContextReq	drivers/GL/glxproto.h	/^} xGLXCreateNewContextReq;$/;"	t	typeref:struct:GLXCreateNewContext
xGLXCreatePbufferReq	drivers/GL/glxproto.h	/^} xGLXCreatePbufferReq;$/;"	t	typeref:struct:GLXCreatePbuffer
xGLXCreatePixmapReq	drivers/GL/glxproto.h	/^} xGLXCreatePixmapReq;$/;"	t	typeref:struct:GLXCreatePixmap
xGLXCreateWindowReq	drivers/GL/glxproto.h	/^} xGLXCreateWindowReq;$/;"	t	typeref:struct:GLXCreateWindow
xGLXDestroyContextReq	drivers/GL/glxproto.h	/^} xGLXDestroyContextReq;$/;"	t	typeref:struct:GLXDestroyContext
xGLXDestroyGLXPixmapReq	drivers/GL/glxproto.h	/^} xGLXDestroyGLXPixmapReq;$/;"	t	typeref:struct:GLXDestroyGLXPixmap
xGLXDestroyHyperpipeConfigSGIXReply	drivers/GL/glxproto.h	/^} xGLXDestroyHyperpipeConfigSGIXReply;$/;"	t	typeref:struct:__anon124
xGLXDestroyHyperpipeConfigSGIXReq	drivers/GL/glxproto.h	/^} xGLXDestroyHyperpipeConfigSGIXReq;$/;"	t	typeref:struct:GLXDestroyHyperpipeConfigSGIX
xGLXDestroyPbufferReq	drivers/GL/glxproto.h	/^} xGLXDestroyPbufferReq;$/;"	t	typeref:struct:GLXDestroyPbuffer
xGLXDestroyPixmapReq	drivers/GL/glxproto.h	/^} xGLXDestroyPixmapReq;$/;"	t	typeref:struct:GLXDestroyPixmap
xGLXDestroyWindowReq	drivers/GL/glxproto.h	/^} xGLXDestroyWindowReq;$/;"	t	typeref:struct:GLXDestroyWindow
xGLXGetColorTableReply	drivers/GL/glxproto.h	/^} xGLXGetColorTableReply;$/;"	t	typeref:struct:__anon119
xGLXGetConvolutionFilterReply	drivers/GL/glxproto.h	/^} xGLXGetConvolutionFilterReply;$/;"	t	typeref:struct:__anon103
xGLXGetDrawableAttributesReply	drivers/GL/glxproto.h	/^} xGLXGetDrawableAttributesReply;$/;"	t	typeref:struct:__anon118
xGLXGetDrawableAttributesReq	drivers/GL/glxproto.h	/^} xGLXGetDrawableAttributesReq;$/;"	t	typeref:struct:GLXGetDrawableAttributes
xGLXGetErrorReply	drivers/GL/glxproto.h	/^} xGLXGetErrorReply;$/;"	t	typeref:struct:__anon98
xGLXGetFBConfigsReply	drivers/GL/glxproto.h	/^} xGLXGetFBConfigsReply;$/;"	t	typeref:struct:__anon114
xGLXGetFBConfigsReq	drivers/GL/glxproto.h	/^} xGLXGetFBConfigsReq;$/;"	t	typeref:struct:GLXGetFBConfigs
xGLXGetFBConfigsSGIXReq	drivers/GL/glxproto.h	/^} xGLXGetFBConfigsSGIXReq;$/;"	t	typeref:struct:GLXGetFBConfigsSGIX
xGLXGetHistogramReply	drivers/GL/glxproto.h	/^} xGLXGetHistogramReply;$/;"	t	typeref:struct:__anon104
xGLXGetMinmaxReply	drivers/GL/glxproto.h	/^} xGLXGetMinmaxReply;$/;"	t	typeref:struct:__anon105
xGLXGetSeparableFilterReply	drivers/GL/glxproto.h	/^} xGLXGetSeparableFilterReply;$/;"	t	typeref:struct:__anon102
xGLXGetTexImageReply	drivers/GL/glxproto.h	/^} xGLXGetTexImageReply;$/;"	t	typeref:struct:__anon101
xGLXGetVisualConfigsReply	drivers/GL/glxproto.h	/^} xGLXGetVisualConfigsReply;$/;"	t	typeref:struct:__anon108
xGLXGetVisualConfigsReq	drivers/GL/glxproto.h	/^} xGLXGetVisualConfigsReq;$/;"	t	typeref:struct:GLXGetVisualConfigs
xGLXHyperpipeConfigSGIXReply	drivers/GL/glxproto.h	/^} xGLXHyperpipeConfigSGIXReply;$/;"	t	typeref:struct:__anon126
xGLXHyperpipeConfigSGIXReq	drivers/GL/glxproto.h	/^} xGLXHyperpipeConfigSGIXReq;$/;"	t	typeref:struct:GLXHyperpipeConfigSGIX
xGLXIsDirectReply	drivers/GL/glxproto.h	/^} xGLXIsDirectReply;$/;"	t	typeref:struct:__anon109
xGLXIsDirectReq	drivers/GL/glxproto.h	/^} xGLXIsDirectReq;$/;"	t	typeref:struct:GLXIsDirect
xGLXJoinSwapGroupSGIXReq	drivers/GL/glxproto.h	/^} xGLXJoinSwapGroupSGIXReq;$/;"	t	typeref:struct:GLXJoinSwapGroupSGIX
xGLXMakeContextCurrentReply	drivers/GL/glxproto.h	/^} xGLXMakeContextCurrentReply;$/;"	t	typeref:struct:__anon116
xGLXMakeContextCurrentReq	drivers/GL/glxproto.h	/^} xGLXMakeContextCurrentReq;$/;"	t	typeref:struct:GLXMakeContextCurrent
xGLXMakeCurrentReadSGIReply	drivers/GL/glxproto.h	/^} xGLXMakeCurrentReadSGIReply;$/;"	t	typeref:struct:__anon121
xGLXMakeCurrentReadSGIReq	drivers/GL/glxproto.h	/^} xGLXMakeCurrentReadSGIReq;$/;"	t	typeref:struct:GLXMakeCurrentReadSGI
xGLXMakeCurrentReply	drivers/GL/glxproto.h	/^} xGLXMakeCurrentReply;$/;"	t	typeref:struct:__anon99
xGLXMakeCurrentReq	drivers/GL/glxproto.h	/^} xGLXMakeCurrentReq;$/;"	t	typeref:struct:GLXMakeCurrent
xGLXPbufferClobberEvent	drivers/GL/glxproto.h	/^} xGLXPbufferClobberEvent;$/;"	t	typeref:struct:__anon127
xGLXQueryContextInfoEXTReply	drivers/GL/glxproto.h	/^} xGLXQueryContextInfoEXTReply;$/;"	t	typeref:struct:__anon120
xGLXQueryContextInfoEXTReq	drivers/GL/glxproto.h	/^} xGLXQueryContextInfoEXTReq;$/;"	t	typeref:struct:GLXQueryContextInfoEXT
xGLXQueryContextReply	drivers/GL/glxproto.h	/^} xGLXQueryContextReply;$/;"	t	typeref:struct:__anon115
xGLXQueryContextReq	drivers/GL/glxproto.h	/^} xGLXQueryContextReq;$/;"	t	typeref:struct:GLXQueryContext
xGLXQueryExtensionsStringReply	drivers/GL/glxproto.h	/^} xGLXQueryExtensionsStringReply;$/;"	t	typeref:struct:__anon112
xGLXQueryExtensionsStringReq	drivers/GL/glxproto.h	/^} xGLXQueryExtensionsStringReq;$/;"	t	typeref:struct:GLXQueryExtensionsString
xGLXQueryHyperpipeConfigSGIXReply	drivers/GL/glxproto.h	/^} xGLXQueryHyperpipeConfigSGIXReply;$/;"	t	typeref:struct:__anon125
xGLXQueryHyperpipeConfigSGIXReq	drivers/GL/glxproto.h	/^} xGLXQueryHyperpipeConfigSGIXReq;$/;"	t	typeref:struct:GLXQueryHyperpipeConfigSGIX
xGLXQueryHyperpipeNetworkSGIXReply	drivers/GL/glxproto.h	/^} xGLXQueryHyperpipeNetworkSGIXReply;$/;"	t	typeref:struct:__anon123
xGLXQueryHyperpipeNetworkSGIXReq	drivers/GL/glxproto.h	/^} xGLXQueryHyperpipeNetworkSGIXReq;$/;"	t	typeref:struct:GLXQueryHyperpipeNetworkSGIX
xGLXQueryMaxSwapBarriersSGIXReply	drivers/GL/glxproto.h	/^} xGLXQueryMaxSwapBarriersSGIXReply;$/;"	t	typeref:struct:__anon122
xGLXQueryMaxSwapBarriersSGIXReq	drivers/GL/glxproto.h	/^} xGLXQueryMaxSwapBarriersSGIXReq;$/;"	t	typeref:struct:GLXQueryMaxSwapBarriersSGIX
xGLXQueryServerStringReply	drivers/GL/glxproto.h	/^} xGLXQueryServerStringReply;$/;"	t	typeref:struct:__anon113
xGLXQueryServerStringReq	drivers/GL/glxproto.h	/^} xGLXQueryServerStringReq;$/;"	t	typeref:struct:GLXQueryServerString
xGLXQueryVersionReply	drivers/GL/glxproto.h	/^} xGLXQueryVersionReply;$/;"	t	typeref:struct:__anon107
xGLXQueryVersionReq	drivers/GL/glxproto.h	/^} xGLXQueryVersionReq;$/;"	t	typeref:struct:GLXQueryVersion
xGLXReadPixelsReply	drivers/GL/glxproto.h	/^} xGLXReadPixelsReply;$/;"	t	typeref:struct:__anon100
xGLXRenderLargeReq	drivers/GL/glxproto.h	/^} xGLXRenderLargeReq;$/;"	t	typeref:struct:GLXRenderLarge
xGLXRenderModeReply	drivers/GL/glxproto.h	/^} xGLXRenderModeReply;$/;"	t	typeref:struct:__anon106
xGLXRenderReq	drivers/GL/glxproto.h	/^} xGLXRenderReq;$/;"	t	typeref:struct:GLXRender
xGLXSingleReply	drivers/GL/glxproto.h	/^} xGLXSingleReply;$/;"	t	typeref:struct:__anon110
xGLXSingleReq	drivers/GL/glxproto.h	/^} xGLXSingleReq;$/;"	t	typeref:struct:GLXSingle
xGLXSwapBuffersReq	drivers/GL/glxproto.h	/^} xGLXSwapBuffersReq;$/;"	t	typeref:struct:GLXSwapBuffers
xGLXUseXFontReq	drivers/GL/glxproto.h	/^} xGLXUseXFontReq;$/;"	t	typeref:struct:GLXUseXFont
xGLXVendorPrivReply	drivers/GL/glxproto.h	/^} xGLXVendorPrivReply;$/;"	t	typeref:struct:__anon111
xGLXVendorPrivateReq	drivers/GL/glxproto.h	/^} xGLXVendorPrivateReq;$/;"	t	typeref:struct:GLXVendorPrivate
xGLXVendorPrivateWithReplyReq	drivers/GL/glxproto.h	/^} xGLXVendorPrivateWithReplyReq;$/;"	t	typeref:struct:GLXVendorPrivateWithReply
xGLXWaitGLReq	drivers/GL/glxproto.h	/^} xGLXWaitGLReq;$/;"	t	typeref:struct:GLXWaitGL
xGLXWaitXReq	drivers/GL/glxproto.h	/^} xGLXWaitXReq;$/;"	t	typeref:struct:GLXWaitX
xGeom	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xGeom)(sqlite3_rtree_geometry *, int, double *, int *);$/;"	m	struct:RtreeConstraint	file:
xGeom	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xGeom)(sqlite3_rtree_geometry *, int, double *, int *);$/;"	m	struct:RtreeGeomCallback	file:
xGeom	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xGeom)(sqlite3_rtree_geometry *, int, double *, int *);$/;"	m	struct:RtreeMatchArg	file:
xGetLastError	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs	file:
xGetLastError	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs
xGetSystemCall	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs	file:
xGetSystemCall	drivers/SQLite/sqlite3/sqlite3.h	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xInit	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	file:
xInit	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods	file:
xInit	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xInit	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods
xLock	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	file:
xLock	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xLog	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xLog)(void*,int,const char*); \/* Function for logging *\/$/;"	m	struct:Sqlite3Config	file:
xMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods	file:
xMalloc	drivers/SQLite/sqlite3/sqlite3.h	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods
xMutexAlloc	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexAlloc	drivers/SQLite/sqlite3/sqlite3.h	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnd	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexEnd	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnter	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexEnter	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexFree	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexFree	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexHeld	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexHeld	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexInit	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexInit	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexLeave	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexLeave	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexNotheld	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexNotheld	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexTry	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexTry	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xNext	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xNext)($/;"	m	struct:sqlite3_tokenizer_module	file:
xNext	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xNext	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xNextSystemCall	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs	file:
xNextSystemCall	drivers/SQLite/sqlite3/sqlite3.h	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xOff_	drivers/qt/TeQtGLWidget.h	/^	GLfloat xOff_, yOff_, zOff_;$/;"	m	class:TeQtGLWidget
xOffset	drivers/GL/glcore.h	/^    GLint xOffset, yOffset;$/;"	m	struct:__GLdrawablePrivateRec
xOffset	drivers/GL/internal/glcore.h	/^    GLint xOffset, yOffset;$/;"	m	struct:__GLdrawablePrivateRec
xOffsetReleased	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::xOffsetReleased()$/;"	f	class:TeQtGLWidget
xOpen	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xOpen)($/;"	m	struct:sqlite3_tokenizer_module	file:
xOpen	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs	file:
xOpen	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module	file:
xOpen	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs
xOpen	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module
xOrder	kernel/TeGeometryAlgorithms.cpp	/^template<class T> struct xOrder$/;"	s	file:
xOrigin	drivers/GL/glcore.h	/^    GLint xOrigin, yOrigin;$/;"	m	struct:__GLdrawablePrivateRec
xOrigin	drivers/GL/internal/glcore.h	/^    GLint xOrigin, yOrigin;$/;"	m	struct:__GLdrawablePrivateRec
xPagecount	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	file:
xPagecount	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xProfile	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xProfile)(void*,const char*,u64);  \/* Profiling function *\/$/;"	m	struct:sqlite3	file:
xProgress	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xProgress)(void *);     \/* The progress callback *\/$/;"	m	struct:sqlite3	file:
xRandomness	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs	file:
xRandomness	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs
xRead	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	file:
xRead	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xRealloc	drivers/SQLite/sqlite3/sqlite3.c	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xRealloc	drivers/SQLite/sqlite3/sqlite3.h	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xReiniter	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xReiniter)(DbPage*); \/* Call this routine when reloading pages *\/$/;"	m	struct:Pager	file:
xRekey	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods	file:
xRekey	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods
xRelease	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xRelease	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRename	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module	file:
xRename	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module
xRenderable	drivers/GL/glcore.h	/^    GLint xRenderable;$/;"	m	struct:__GLcontextModesRec
xRenderable	drivers/GL/internal/glcore.h	/^    GLint xRenderable;$/;"	m	struct:__GLcontextModesRec
xRollback	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xRollback	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xRollbackCallback	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xRollbackCallback)(void*); \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3	file:
xRollbackTo	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xRollbackTo	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRot_	drivers/qt/TeQtGLWidget.h	/^    GLfloat xRot_, yRot_, zRot_;$/;"	m	class:TeQtGLWidget
xRoundup	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods	file:
xRoundup	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods
xRowid	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module	file:
xRowid	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module
xSavepoint	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xSavepoint	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xSectorSize	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xSectorSize	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xSelectCallback	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xSelectCallback)(Walker*,Select*);  \/* Callback for SELECTs *\/$/;"	m	struct:Walker	file:
xSetSystemCall	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs	file:
xSetSystemCall	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs
xShift	kernel/TeDatum.h	/^	double	xShift() const$/;"	f	class:TeDatum
xShmBarrier	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xShmBarrier	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xShmLock	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods	file:
xShmLock	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods
xShmMap	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods	file:
xShmMap	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods
xShmUnmap	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods	file:
xShmUnmap	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods
xShutdown	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	file:
xShutdown	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods	file:
xShutdown	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xShutdown	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods
xSize	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xSize	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xSizeReleased	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::xSizeReleased()$/;"	f	class:TeQtGLWidget
xSize_	drivers/qt/TeQtGLWidget.h	/^	GLfloat xSize_, ySize_, zSize_;$/;"	m	class:TeQtGLWidget
xSleep	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs	file:
xSleep	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs
xStep	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xStep)(sqlite3_context*,int,sqlite3_value**); \/* Aggregate step *\/$/;"	m	struct:FuncDef	file:
xStress	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xStress)(void*,PgHdr*);       \/* Call to try make a page clean *\/$/;"	m	struct:PCache	file:
xSync	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods	file:
xSync	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xSync	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods
xSync	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xTrace	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xTrace)(void*,const char*);        \/* Trace function *\/$/;"	m	struct:sqlite3	file:
xTranslation_	drivers/qt/TeQtGLWidget.h	/^	GLfloat xTranslation_, yTranslation_, zTranslation_;$/;"	m	class:TeQtGLWidget
xTruncate	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods	file:
xTruncate	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods	file:
xTruncate	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods
xTruncate	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods
xUnlock	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	file:
xUnlock	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xUnlockNotify	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xUnlockNotify)(void **, int);  \/* Unlock notify callback *\/$/;"	m	struct:sqlite3	file:
xUnpin	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods	file:
xUnpin	drivers/SQLite/sqlite3/sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods
xUpdate	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module	file:
xUpdate	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module
xUpdateCallback	drivers/SQLite/sqlite3/sqlite3.c	/^  void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64);$/;"	m	struct:sqlite3	file:
xVec_	drivers/qt/TeQtGLWidget.h	/^	vector<double> xVec_, yVec_, zVec_;$/;"	m	class:TeQtGLWidget
xWalCallback	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xWalCallback)(void *, sqlite3 *, const char *, int);$/;"	m	struct:sqlite3	file:
xWrite	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	file:
xWrite	drivers/SQLite/sqlite3/sqlite3.h	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
x_	image_processing/TePDIMMIOMatching.hpp	/^        unsigned int x_; $/;"	m	struct:TePDIMMIOMatching::MaximasListNodeT
x_	kernel/TeCoord2D.h	/^	double	x_;		\/\/!< x coordinate$/;"	m	class:TeCoord2D
x_	kernel/TeFragmentation.cpp	/^	double x_;$/;"	m	struct:TeIPAux	file:
x_dist	kernel/TeCentroid.cpp	/^struct x_dist : public binary_function<TeCoordPair, TeCoordPair, bool>$/;"	s	file:
x_major	kernel/TeGraph.cpp	/^	char x_major[3];$/;"	m	struct:Opt	file:
x_major	kernel/TeGraph.h	/^	int x_major;           \/* number of x axis divisions *\/$/;"	m	class:TeGraphPlot
x_minor	kernel/TeGraph.cpp	/^	char x_minor[3];$/;"	m	struct:Opt	file:
x_minor	kernel/TeGraph.h	/^	int x_minor;           \/* number of x axis subdivisions *\/$/;"	m	class:TeGraphPlot
x_order	kernel/TeCentroid.cpp	/^struct x_order : public binary_function<TeCoord2D, TeCoord2D, bool>$/;"	s	file:
xaxis	kernel/TeGraph.h	/^	char xaxis[AXIS_MAX+1];$/;"	m	struct:__anon27
xaxis_font	kernel/TeGraph.h	/^	int xaxis_font;        \/* font number to use for x axis *\/$/;"	m	class:TeGraphPlot
xaxis_height	kernel/TeGraph.h	/^	int xaxis_height;      \/* height of x axis characters *\/$/;"	m	class:TeGraphPlot
xaxis_width	kernel/TeGraph.h	/^	int xaxis_width;       \/* width of x axis characters *\/$/;"	m	class:TeGraphPlot
xf	functions/TeCellAlgorithms.h	/^		int xo, yo, xf, yf, x, y;$/;"	m	class:TeBoxRasterIterator
xf_	kernel/TeGridIndex.h	/^		double xf_;			\/\/!< Upper right x.$/;"	m	class:TeSAM::TeGridIndex
xferCompatibleCollation	drivers/SQLite/sqlite3/sqlite3.c	/^static int xferCompatibleCollation(const char *z1, const char *z2){$/;"	f	file:
xferCompatibleIndex	drivers/SQLite/sqlite3/sqlite3.c	/^static int xferCompatibleIndex(Index *pDest, Index *pSrc){$/;"	f	file:
xferOptimization	drivers/SQLite/sqlite3/sqlite3.c	/^static int xferOptimization($/;"	f	file:
xi_	kernel/TeGridIndex.h	/^		double xi_;			\/\/!< Lower left x.$/;"	m	class:TeSAM::TeGridIndex
xlr_	drivers/qt/TeQtCanvas.h	/^	double 	xlr_;$/;"	m	class:TeQtCanvas
xmArrowButtonWidgetClass	drivers/GL/vms_x_fix.h	594;"	d
xmBulletinBoardWidgetClass	drivers/GL/vms_x_fix.h	823;"	d
xmCascadeButtonClassRec	drivers/GL/vms_x_fix.h	595;"	d
xmCascadeButtonGadgetClass	drivers/GL/vms_x_fix.h	596;"	d
xmCascadeButtonWidgetClass	drivers/GL/vms_x_fix.h	597;"	d
xmDialogShellWidgetClass	drivers/GL/vms_x_fix.h	598;"	d
xmDrawingAreaWidgetClass	drivers/GL/vms_x_fix.h	599;"	d
xmDrawnButtonWidgetClass	drivers/GL/vms_x_fix.h	600;"	d
xmFileSelectionBoxWidgetClass	drivers/GL/vms_x_fix.h	601;"	d
xmFormWidgetClass	drivers/GL/vms_x_fix.h	602;"	d
xmFrameWidgetClass	drivers/GL/vms_x_fix.h	603;"	d
xmGadgetClass	drivers/GL/vms_x_fix.h	604;"	d
xmLabelGadgetClass	drivers/GL/vms_x_fix.h	605;"	d
xmLabelWidgetClass	drivers/GL/vms_x_fix.h	606;"	d
xmListWidgetClass	drivers/GL/vms_x_fix.h	607;"	d
xmMainWindowWidgetClass	drivers/GL/vms_x_fix.h	608;"	d
xmManagerClassRec	drivers/GL/vms_x_fix.h	609;"	d
xmManagerWidgetClass	drivers/GL/vms_x_fix.h	610;"	d
xmMenuShellWidgetClass	drivers/GL/vms_x_fix.h	611;"	d
xmMessageBoxWidgetClass	drivers/GL/vms_x_fix.h	612;"	d
xmPrimitiveClassRec	drivers/GL/vms_x_fix.h	613;"	d
xmPrimitiveWidgetClass	drivers/GL/vms_x_fix.h	614;"	d
xmPushButtonClassRec	drivers/GL/vms_x_fix.h	615;"	d
xmPushButtonGadgetClass	drivers/GL/vms_x_fix.h	616;"	d
xmPushButtonWidgetClass	drivers/GL/vms_x_fix.h	617;"	d
xmRowColumnWidgetClass	drivers/GL/vms_x_fix.h	618;"	d
xmSashWidgetClass	drivers/GL/vms_x_fix.h	619;"	d
xmScaleWidgetClass	drivers/GL/vms_x_fix.h	824;"	d
xmScrollBarWidgetClass	drivers/GL/vms_x_fix.h	620;"	d
xmScrolledWindowClassRec	drivers/GL/vms_x_fix.h	621;"	d
xmScrolledWindowWidgetClass	drivers/GL/vms_x_fix.h	622;"	d
xmSeparatorGadgetClass	drivers/GL/vms_x_fix.h	623;"	d
xmSeparatorWidgetClass	drivers/GL/vms_x_fix.h	624;"	d
xmTextFieldWidgetClass	drivers/GL/vms_x_fix.h	625;"	d
xmTextWidgetClass	drivers/GL/vms_x_fix.h	626;"	d
xmToggleButtonGadgetClass	drivers/GL/vms_x_fix.h	627;"	d
xmToggleButtonWidgetClass	drivers/GL/vms_x_fix.h	628;"	d
xmax_	drivers/qt/TeQtCanvas.h	/^	double 	xmax_;$/;"	m	class:TeQtCanvas
xmaxval	kernel/TeGraph.h	/^	Real xmaxval;          \/* maximum value on x axis *\/$/;"	m	class:TeGraphPlot
xmin_	drivers/qt/TeQtCanvas.h	/^	double 	xmin_;$/;"	m	class:TeQtCanvas
xminval	kernel/TeGraph.h	/^	Real xminval;          \/* minimum value on x axis *\/$/;"	m	class:TeGraphPlot
xmlctx	drivers/Oracle/OCI/include/ocixmldb.h	/^struct xmlctx; typedef struct xmlctx xmlctx;$/;"	t	typeref:struct:xmlctx
xo	functions/TeCellAlgorithms.h	/^		int xo, yo, xf, yf, x, y;$/;"	m	class:TeBoxRasterIterator
xthreadsafe	drivers/SQLite/sqlite3/sqlite3.c	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines	file:
xthreadsafe	drivers/SQLite/sqlite3/sqlite3ext.h	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines
xtiffFieldInfo	kernel/TeDecoderTIFF.cpp	/^static const TIFFFieldInfo xtiffFieldInfo[] = {$/;"	v	file:
xul_	drivers/qt/TeQtCanvas.h	/^	double 	xul_; \/\/ cursor world coordinates$/;"	m	class:TeQtCanvas
xupleft	kernel/TeGraph.h	/^	int xupleft;           \/* x pixel coordinate (upper left) *\/$/;"	m	class:TeGraphPlot
xyDevice_	drivers/qt/TeQtGLWidget.h	/^	QPaintDevice *xyDevice_, *zxDevice_, *yzDevice_;$/;"	m	class:TeQtGLWidget
xyOrder	kernel/TeOverlayUtils.h	/^struct TL_DLL xyOrder$/;"	s	namespace:TeOVERLAY
xyPixmap_	drivers/qt/TeQtGLWidget.h	/^	QPixmap xyPixmap_, zxPixmap_, yzPixmap_;$/;"	m	class:TeQtGLWidget
y	drivers/GL/glx.h	/^    int x, y;$/;"	m	struct:__anon176
y	drivers/GL/glxext.h	/^    int x, y;$/;"	m	struct:__anon93
y	drivers/Oracle/TeOCICursor.h	/^   OCIInd y;$/;"	m	struct:sdo_point_type_ind
y	drivers/Oracle/TeOCICursor.h	/^   OCINumber y;$/;"	m	struct:sdo_point_type
y	drivers/PostgreSQL/TePGInterface.cpp	/^	double		x, y;$/;"	m	struct:__anon178	file:
y	functions/TeCellAlgorithms.h	/^		int xo, yo, xf, yf, x, y;$/;"	m	class:TeBoxRasterIterator
y	kernel/TeCoord2D.h	/^	const double& 	y () 		const		$/;"	f	class:TeCoord2D
y	kernel/TeCoord2D.h	/^	void y(const double& valY)$/;"	f	class:TeCoord2D
y0	drivers/GL/glcore.h	/^    GLint x0, y0;$/;"	m	struct:__GLregionRectRec
y0	drivers/GL/internal/glcore.h	/^    GLint x0, y0;$/;"	m	struct:__GLregionRectRec
y0_	drivers/qt/TeQtCanvas.h	/^	int		y0_;$/;"	m	class:TeQtCanvas
y0_	kernel/TeRasterParams.h	/^	double y0_;		\/\/!< Y coordinate of the upper left raster element$/;"	m	class:TeRasterParams
y1	drivers/GL/glcore.h	/^    GLint x1, y1;$/;"	m	struct:__GLregionRectRec
y1	drivers/GL/internal/glcore.h	/^    GLint x1, y1;$/;"	m	struct:__GLregionRectRec
y1	kernel/TeBox.h	/^	const double& y1 () const $/;"	f	struct:TeBox
y1_	kernel/TeBox.h	/^		   y1_,	\/\/!< y coordinate of the lower left corner$/;"	m	struct:TeBox
y2	kernel/TeBox.h	/^	const double& y2 () const $/;"	f	struct:TeBox
y2_	kernel/TeBox.h	/^		   y2_;	\/\/!< y coordinate of the upper right corner	$/;"	m	struct:TeBox
yAlignment	drivers/GL/glcore.h	/^    GLint xAlignment, yAlignment;$/;"	m	struct:__GLdrawablePrivateRec
yAlignment	drivers/GL/internal/glcore.h	/^    GLint xAlignment, yAlignment;$/;"	m	struct:__GLdrawablePrivateRec
yColCache	drivers/SQLite/sqlite3/sqlite3.c	/^  struct yColCache {$/;"	s	struct:Parse	file:
yDbMask	drivers/SQLite/sqlite3/sqlite3.c	/^  typedef sqlite3_uint64 yDbMask;$/;"	t	file:
yDbMask	drivers/SQLite/sqlite3/sqlite3.c	/^  typedef unsigned int yDbMask;$/;"	t	file:
yField_	drivers/qt/TeQtGLWidget.h	/^	string xField_, yField_, zField_;$/;"	m	class:TeQtGLWidget
yInverted	drivers/GL/glcore.h	/^    GLint yInverted;$/;"	m	struct:__GLdrawablePrivateRec
yInverted	drivers/GL/internal/glcore.h	/^    GLint yInverted;$/;"	m	struct:__GLdrawablePrivateRec
yOff_	drivers/qt/TeQtGLWidget.h	/^	GLfloat xOff_, yOff_, zOff_;$/;"	m	class:TeQtGLWidget
yOffset	drivers/GL/glcore.h	/^    GLint xOffset, yOffset;$/;"	m	struct:__GLdrawablePrivateRec
yOffset	drivers/GL/internal/glcore.h	/^    GLint xOffset, yOffset;$/;"	m	struct:__GLdrawablePrivateRec
yOffsetReleased	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::yOffsetReleased()$/;"	f	class:TeQtGLWidget
yOrigin	drivers/GL/glcore.h	/^    GLint xOrigin, yOrigin;$/;"	m	struct:__GLdrawablePrivateRec
yOrigin	drivers/GL/internal/glcore.h	/^    GLint xOrigin, yOrigin;$/;"	m	struct:__GLdrawablePrivateRec
yRot_	drivers/qt/TeQtGLWidget.h	/^    GLfloat xRot_, yRot_, zRot_;$/;"	m	class:TeQtGLWidget
yShift	kernel/TeDatum.h	/^	double  yShift() const $/;"	f	class:TeDatum
ySizeReleased	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::ySizeReleased()$/;"	f	class:TeQtGLWidget
ySize_	drivers/qt/TeQtGLWidget.h	/^	GLfloat xSize_, ySize_, zSize_;$/;"	m	class:TeQtGLWidget
yTranslation_	drivers/qt/TeQtGLWidget.h	/^	GLfloat xTranslation_, yTranslation_, zTranslation_;$/;"	m	class:TeQtGLWidget
yVec_	drivers/qt/TeQtGLWidget.h	/^	vector<double> xVec_, yVec_, zVec_;$/;"	m	class:TeQtGLWidget
y_	image_processing/TePDIMMIOMatching.hpp	/^        unsigned int y_;$/;"	m	struct:TePDIMMIOMatching::MaximasListNodeT
y_	kernel/TeCoord2D.h	/^	double	y_;		\/\/!< y coordinate$/;"	m	class:TeCoord2D
y_	kernel/TeFragmentation.cpp	/^	double y_;$/;"	m	struct:TeIPAux	file:
y_	kernel/TeRaster.cpp	/^	double			y_;$/;"	m	class:TeStrategic	file:
y_major	kernel/TeGraph.cpp	/^	char y_major[3];$/;"	m	struct:Opt	file:
y_major	kernel/TeGraph.h	/^	int y_major;           \/* number of y axis divisions *\/$/;"	m	class:TeGraphPlot
y_minor	kernel/TeGraph.cpp	/^	char y_minor[3];$/;"	m	struct:Opt	file:
y_minor	kernel/TeGraph.h	/^	int y_minor;           \/* number of y axis subdivisions *\/$/;"	m	class:TeGraphPlot
y_scale	kernel/TeGraph.cpp	/^	char y_scale[2];$/;"	m	struct:Opt	file:
yaxis	kernel/TeGraph.h	/^	char yaxis[AXIS_MAX+1];$/;"	m	struct:__anon27
yaxis_direct	kernel/TeGraph.h	/^	int yaxis_direct;      \/* direction of y axis characters *\/$/;"	m	class:TeGraphPlot
yaxis_font	kernel/TeGraph.h	/^	int yaxis_font;        \/* font number to use for y axis *\/$/;"	m	class:TeGraphPlot
yaxis_height	kernel/TeGraph.h	/^	int yaxis_height;      \/* height of y axis characters *\/$/;"	m	class:TeGraphPlot
yaxis_width	kernel/TeGraph.h	/^	int yaxis_width;       \/* width of y axis characters *\/$/;"	m	class:TeGraphPlot
year	kernel/TeTime.h	/^	int year() const {return ts_.tm_year+1900;}  $/;"	f	class:TeTime
yearDay	kernel/TeTime.h	/^	int yearDay() const { return ts_.tm_yday;} \/\/(0-365) 01\/01=0 $/;"	f	class:TeTime
yf	functions/TeCellAlgorithms.h	/^		int xo, yo, xf, yf, x, y;$/;"	m	class:TeBoxRasterIterator
yf_	kernel/TeGridIndex.h	/^		double yf_;			\/\/!< Upper right y.$/;"	m	class:TeSAM::TeGridIndex
yi_	kernel/TeGridIndex.h	/^		double yi_;			\/\/!< Lower left y.$/;"	m	class:TeSAM::TeGridIndex
ylr_	drivers/qt/TeQtCanvas.h	/^	double 	ylr_;$/;"	m	class:TeQtCanvas
ymax_	drivers/qt/TeQtCanvas.h	/^	double 	ymax_;	$/;"	m	class:TeQtCanvas
ymaxval	kernel/TeGraph.h	/^	Real ymaxval;          \/* maximum value on y axis *\/$/;"	m	class:TeGraphPlot
ymin_	drivers/qt/TeQtCanvas.h	/^	double 	ymin_;$/;"	m	class:TeQtCanvas
yminval	kernel/TeGraph.h	/^	Real yminval;          \/* minimum value on y axis *\/$/;"	m	class:TeGraphPlot
ynVar	drivers/SQLite/sqlite3/sqlite3.c	/^typedef i16 ynVar;$/;"	t	file:
ynVar	drivers/SQLite/sqlite3/sqlite3.c	/^typedef int ynVar;$/;"	t	file:
yo	functions/TeCellAlgorithms.h	/^		int xo, yo, xf, yf, x, y;$/;"	m	class:TeBoxRasterIterator
yul_	drivers/qt/TeQtCanvas.h	/^	double 	yul_;$/;"	m	class:TeQtCanvas
yupleft	kernel/TeGraph.h	/^	int yupleft;           \/* y pixel coordinate (upper left) *\/$/;"	m	class:TeGraphPlot
yy0	drivers/SQLite/sqlite3/sqlite3.c	/^  sqlite3ParserTOKENTYPE yy0;$/;"	m	union:__anon56	file:
yy118	drivers/SQLite/sqlite3/sqlite3.c	/^  ExprSpan yy118;$/;"	m	union:__anon56	file:
yy203	drivers/SQLite/sqlite3/sqlite3.c	/^  TriggerStep* yy203;$/;"	m	union:__anon56	file:
yy210	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 yy210;$/;"	m	union:__anon56	file:
yy215	drivers/SQLite/sqlite3/sqlite3.c	/^  struct {int value; int mask;} yy215;$/;"	m	union:__anon56	typeref:struct:__anon56::__anon57	file:
yy259	drivers/SQLite/sqlite3/sqlite3.c	/^  SrcList* yy259;$/;"	m	union:__anon56	file:
yy292	drivers/SQLite/sqlite3/sqlite3.c	/^  struct LimitVal yy292;$/;"	m	union:__anon56	typeref:struct:__anon56::LimitVal	file:
yy314	drivers/SQLite/sqlite3/sqlite3.c	/^  Expr* yy314;$/;"	m	union:__anon56	file:
yy322	drivers/SQLite/sqlite3/sqlite3.c	/^  ExprList* yy322;$/;"	m	union:__anon56	file:
yy342	drivers/SQLite/sqlite3/sqlite3.c	/^  struct LikeOp yy342;$/;"	m	union:__anon56	typeref:struct:__anon56::LikeOp	file:
yy384	drivers/SQLite/sqlite3/sqlite3.c	/^  IdList* yy384;$/;"	m	union:__anon56	file:
yy387	drivers/SQLite/sqlite3/sqlite3.c	/^  Select* yy387;$/;"	m	union:__anon56	file:
yy4	drivers/SQLite/sqlite3/sqlite3.c	/^  int yy4;$/;"	m	union:__anon56	file:
yy90	drivers/SQLite/sqlite3/sqlite3.c	/^  struct TrigEvent yy90;$/;"	m	union:__anon56	typeref:struct:__anon56::TrigEvent	file:
yyFallback	drivers/SQLite/sqlite3/sqlite3.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyGrowStack	drivers/SQLite/sqlite3/sqlite3.c	/^static void yyGrowStack(yyParser *p){$/;"	f	file:
yyParser	drivers/SQLite/sqlite3/sqlite3.c	/^struct yyParser {$/;"	s	file:
yyParser	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyRuleInfo	drivers/SQLite/sqlite3/sqlite3.c	/^} yyRuleInfo[] = {$/;"	v	typeref:struct:__anon58	file:
yyRuleName	drivers/SQLite/sqlite3/sqlite3.c	/^static const char *const yyRuleName[] = {$/;"	v	file:
yyStackEntry	drivers/SQLite/sqlite3/sqlite3.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	drivers/SQLite/sqlite3/sqlite3.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyStackOverflow	drivers/SQLite/sqlite3/sqlite3.c	/^static void yyStackOverflow(yyParser *yypParser, YYMINORTYPE *yypMinor){$/;"	f	file:
yyTokenName	drivers/SQLite/sqlite3/sqlite3.c	/^static const char *const yyTokenName[] = { $/;"	v	file:
yyTraceFILE	drivers/SQLite/sqlite3/sqlite3.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTracePrompt	drivers/SQLite/sqlite3/sqlite3.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yy_accept	drivers/SQLite/sqlite3/sqlite3.c	/^static void yy_accept($/;"	f	file:
yy_accept	kernel/lexTemporal.cpp	/^static yyconst short int yy_accept[189] =$/;"	v	file:
yy_acclist	kernel/lexTemporal.cpp	/^static yyconst short int yy_acclist[257] =$/;"	v	file:
yy_action	drivers/SQLite/sqlite3/sqlite3.c	/^static const YYACTIONTYPE yy_action[] = {$/;"	v	file:
yy_at_bol	kernel/lexTemporal.cpp	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	kernel/lexTemporal.cpp	/^static yyconst short int yy_base[190] =$/;"	v	file:
yy_buf_pos	kernel/lexTemporal.cpp	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	kernel/lexTemporal.cpp	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_state	kernel/lexTemporal.cpp	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	kernel/lexTemporal.cpp	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	kernel/lexTemporal.cpp	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	kernel/lexTemporal.cpp	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	kernel/lexTemporal.cpp	/^static yyconst short int yy_chk[620] =$/;"	v	file:
yy_create_buffer	kernel/lexTemporal.cpp	/^YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )$/;"	f
yy_current_buffer	kernel/lexTemporal.cpp	/^static YY_BUFFER_STATE yy_current_buffer = 0;$/;"	v	file:
yy_def	kernel/lexTemporal.cpp	/^static yyconst short int yy_def[190] =$/;"	v	file:
yy_default	drivers/SQLite/sqlite3/sqlite3.c	/^static const YYACTIONTYPE yy_default[] = {$/;"	v	file:
yy_delete_buffer	kernel/lexTemporal.cpp	/^void yy_delete_buffer( YY_BUFFER_STATE b )$/;"	f
yy_destructor	drivers/SQLite/sqlite3/sqlite3.c	/^static void yy_destructor($/;"	f	file:
yy_did_buffer_switch_on_eof	kernel/lexTemporal.cpp	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	kernel/lexTemporal.cpp	/^static yyconst int yy_ec[256] =$/;"	v	file:
yy_fatal_error	kernel/lexTemporal.cpp	/^static void yy_fatal_error( yyconst char msg[] )$/;"	f	file:
yy_fill_buffer	kernel/lexTemporal.cpp	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_find_reduce_action	drivers/SQLite/sqlite3/sqlite3.c	/^static int yy_find_reduce_action($/;"	f	file:
yy_find_shift_action	drivers/SQLite/sqlite3/sqlite3.c	/^static int yy_find_shift_action($/;"	f	file:
yy_flex_alloc	kernel/lexTemporal.cpp	/^static void *yy_flex_alloc( yy_size_t size )$/;"	f	file:
yy_flex_free	kernel/lexTemporal.cpp	/^static void yy_flex_free( void *ptr )$/;"	f	file:
yy_flex_realloc	kernel/lexTemporal.cpp	/^static void *yy_flex_realloc( void *ptr, yy_size_t size )$/;"	f	file:
yy_flex_strlen	kernel/lexTemporal.cpp	/^static int yy_flex_strlen( yyconst char *s )$/;"	f	file:
yy_flex_strncpy	kernel/lexTemporal.cpp	/^static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )$/;"	f	file:
yy_flush_buffer	kernel/lexTemporal.cpp	/^void yy_flush_buffer( YY_BUFFER_STATE b )$/;"	f
yy_full_match	kernel/lexTemporal.cpp	/^static char *yy_full_match;$/;"	v	file:
yy_get_next_buffer	kernel/lexTemporal.cpp	/^static int yy_get_next_buffer()$/;"	f	file:
yy_get_previous_state	kernel/lexTemporal.cpp	/^static yy_state_type yy_get_previous_state()$/;"	f	file:
yy_hold_char	kernel/lexTemporal.cpp	/^static char yy_hold_char;$/;"	v	file:
yy_init	kernel/lexTemporal.cpp	/^static int yy_init = 1;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	kernel/lexTemporal.cpp	/^void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )$/;"	f
yy_input_file	kernel/lexTemporal.cpp	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	kernel/lexTemporal.cpp	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	kernel/lexTemporal.cpp	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_load_buffer_state	kernel/lexTemporal.cpp	/^void yy_load_buffer_state( void )$/;"	f
yy_lookahead	drivers/SQLite/sqlite3/sqlite3.c	/^static const YYCODETYPE yy_lookahead[] = {$/;"	v	file:
yy_lp	kernel/lexTemporal.cpp	/^static int yy_lp;$/;"	v	file:
yy_meta	kernel/lexTemporal.cpp	/^static yyconst int yy_meta[39] =$/;"	v	file:
yy_n_chars	kernel/lexTemporal.cpp	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	kernel/lexTemporal.cpp	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	kernel/lexTemporal.cpp	272;"	d	file:
yy_nxt	kernel/lexTemporal.cpp	/^static yyconst short int yy_nxt[620] =$/;"	v	file:
yy_parse_failed	drivers/SQLite/sqlite3/sqlite3.c	/^static void yy_parse_failed($/;"	f	file:
yy_pop_parser_stack	drivers/SQLite/sqlite3/sqlite3.c	/^static int yy_pop_parser_stack(yyParser *pParser){$/;"	f	file:
yy_pop_state	kernel/lexTemporal.cpp	/^static void yy_pop_state()$/;"	f	file:
yy_push_state	kernel/lexTemporal.cpp	/^static void yy_push_state( int new_state )$/;"	f	file:
yy_reduce	drivers/SQLite/sqlite3/sqlite3.c	/^static void yy_reduce($/;"	f	file:
yy_reduce_ofst	drivers/SQLite/sqlite3/sqlite3.c	/^static const short yy_reduce_ofst[] = {$/;"	v	file:
yy_scan_buffer	kernel/lexTemporal.cpp	/^YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )$/;"	f
yy_scan_bytes	kernel/lexTemporal.cpp	/^YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )$/;"	f
yy_scan_string	kernel/lexTemporal.cpp	/^YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )$/;"	f
yy_set_bol	kernel/lexTemporal.cpp	281;"	d	file:
yy_set_interactive	kernel/lexTemporal.cpp	274;"	d	file:
yy_shift	drivers/SQLite/sqlite3/sqlite3.c	/^static void yy_shift($/;"	f	file:
yy_shift_ofst	drivers/SQLite/sqlite3/sqlite3.c	/^static const short yy_shift_ofst[] = {$/;"	v	file:
yy_size_t	kernel/lexTemporal.cpp	/^typedef unsigned int yy_size_t;$/;"	t	file:
yy_start	kernel/lexTemporal.cpp	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_start_stack	kernel/lexTemporal.cpp	/^static int *yy_start_stack = 0;$/;"	v	file:
yy_start_stack_depth	kernel/lexTemporal.cpp	/^static int yy_start_stack_depth = 0;$/;"	v	file:
yy_start_stack_ptr	kernel/lexTemporal.cpp	/^static int yy_start_stack_ptr = 0;$/;"	v	file:
yy_state_buf	kernel/lexTemporal.cpp	/^static yy_state_type yy_state_buf[YY_BUF_SIZE + 2], *yy_state_ptr;$/;"	v	file:
yy_state_ptr	kernel/lexTemporal.cpp	/^static yy_state_type yy_state_buf[YY_BUF_SIZE + 2], *yy_state_ptr;$/;"	v	file:
yy_state_type	kernel/lexTemporal.cpp	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	kernel/lexTemporal.cpp	/^void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )$/;"	f
yy_syntax_error	drivers/SQLite/sqlite3/sqlite3.c	/^static void yy_syntax_error($/;"	f	file:
yy_top_state	kernel/lexTemporal.cpp	/^static int yy_top_state()$/;"	f	file:
yy_try_NUL_trans	kernel/lexTemporal.cpp	/^static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )$/;"	f	file:
yychar	kernel/yyTemporal.cpp	/^int yychar;$/;"	v
yycheck	kernel/yyTemporal.cpp	/^const short yycheck[] = {                                      40,$/;"	v
yyclearin	kernel/yyTemporal.cpp	38;"	d	file:
yyconst	kernel/lexTemporal.cpp	78;"	d	file:
yyconst	kernel/lexTemporal.cpp	80;"	d	file:
yydebug	kernel/yyTemporal.cpp	/^int yydebug;$/;"	v
yydefred	kernel/yyTemporal.cpp	/^const short yydefred[] = {                                      0,$/;"	v
yydgoto	kernel/yyTemporal.cpp	/^const short yydgoto[] = {                                       4,$/;"	v
yyerrcnt	drivers/SQLite/sqlite3/sqlite3.c	/^  int yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyerrflag	kernel/yyTemporal.cpp	/^int yyerrflag;$/;"	v
yyerrok	kernel/yyTemporal.cpp	39;"	d	file:
yyerror	kernel/yyTemporal.cpp	/^void yyerror(char* msg)$/;"	f
yygindex	kernel/yyTemporal.cpp	/^const short yygindex[] = {                                      3,$/;"	v
yygrowstack	kernel/yyTemporal.cpp	/^static int yygrowstack()$/;"	f	file:
yyidx	drivers/SQLite/sqlite3/sqlite3.c	/^  int yyidx;                    \/* Index of top element in stack *\/$/;"	m	struct:yyParser	file:
yyidxMax	drivers/SQLite/sqlite3/sqlite3.c	/^  int yyidxMax;                 \/* Maximum value of yyidx *\/$/;"	m	struct:yyParser	file:
yyin	kernel/lexTemporal.cpp	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyinit	drivers/SQLite/sqlite3/sqlite3.c	/^  int yyinit;$/;"	m	union:__anon56	file:
yyinput	kernel/lexTemporal.cpp	/^static int yyinput()$/;"	f	file:
yylen	kernel/yyTemporal.cpp	/^const short yylen[] = {                                         2,$/;"	v
yyleng	kernel/lexTemporal.cpp	/^int yyleng;$/;"	v
yyless	kernel/lexTemporal.cpp	150;"	d	file:
yyless	kernel/lexTemporal.cpp	1837;"	d	file:
yyless	kernel/lexTemporal.cpp	1838;"	d	file:
yylhs	kernel/yyTemporal.cpp	/^const short yylhs[] = {                                        -1,$/;"	v
yylineno	kernel/lexTemporal.cpp	/^int yylineno = 1;$/;"	v
yylval	kernel/yyTemporal.cpp	/^YYSTYPE yylval;$/;"	v
yymore	kernel/lexTemporal.cpp	618;"	d	file:
yyname	kernel/yyTemporal.cpp	/^const char * const yyname[] = {$/;"	v
yynerrs	kernel/yyTemporal.cpp	/^int yynerrs;$/;"	v
yyout	kernel/lexTemporal.cpp	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyrcsid	kernel/yyTemporal.cpp	/^yyrcsid[] = "$FreeBSD: src\/usr.bin\/yacc\/skeleton.c,v 1.28 2000\/01\/17 02:04:06 bde Exp $";$/;"	v	file:
yyrestart	kernel/lexTemporal.cpp	/^void yyrestart( FILE *input_file )$/;"	f
yyrindex	kernel/yyTemporal.cpp	/^const short yyrindex[] = {                                      0,$/;"	v
yyrule	kernel/yyTemporal.cpp	/^const char * const yyrule[] = {$/;"	v
yysindex	kernel/yyTemporal.cpp	/^const short yysindex[] = {                                    -40,$/;"	v
yyss	kernel/yyTemporal.cpp	/^short *yyss;$/;"	v
yysslim	kernel/yyTemporal.cpp	/^short *yysslim;$/;"	v
yyssp	kernel/yyTemporal.cpp	/^short *yyssp;$/;"	v
yystack	drivers/SQLite/sqlite3/sqlite3.c	/^  yyStackEntry *yystack;        \/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yystacksize	kernel/yyTemporal.cpp	/^int yystacksize;$/;"	v
yystksz	drivers/SQLite/sqlite3/sqlite3.c	/^  int yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:yyParser	file:
yytable	kernel/yyTemporal.cpp	/^const short yytable[] = {                                       3,$/;"	v
yyterminate	kernel/lexTemporal.cpp	792;"	d	file:
yytestcase	drivers/SQLite/sqlite3/sqlite3.c	105951;"	d	file:
yytestcase	drivers/SQLite/sqlite3/sqlite3.c	106158;"	d	file:
yytext	kernel/lexTemporal.cpp	/^char *yytext;$/;"	v
yytext_ptr	kernel/lexTemporal.cpp	301;"	d	file:
yyunput	kernel/lexTemporal.cpp	/^static void yyunput( int c, register char *yy_bp )$/;"	f	file:
yyval	kernel/yyTemporal.cpp	/^YYSTYPE yyval;$/;"	v
yyvs	kernel/yyTemporal.cpp	/^YYSTYPE *yyvs;$/;"	v
yyvsp	kernel/yyTemporal.cpp	/^YYSTYPE *yyvsp;$/;"	v
yywrap	kernel/lexTemporal.cpp	293;"	d	file:
yyzerominor	drivers/SQLite/sqlite3/sqlite3.c	/^static const YYMINORTYPE yyzerominor = { 0 };$/;"	v	file:
yzDevice_	drivers/qt/TeQtGLWidget.h	/^	QPaintDevice *xyDevice_, *zxDevice_, *yzDevice_;$/;"	m	class:TeQtGLWidget
yzPixmap_	drivers/qt/TeQtGLWidget.h	/^	QPixmap xyPixmap_, zxPixmap_, yzPixmap_;$/;"	m	class:TeQtGLWidget
z	drivers/Oracle/TeOCICursor.h	/^   OCIInd z;$/;"	m	struct:sdo_point_type_ind
z	drivers/Oracle/TeOCICursor.h	/^   OCINumber z;$/;"	m	struct:sdo_point_type
z	drivers/SQLite/sqlite3/sqlite3.c	/^    char *z;               \/* Pointer to data for string (char array) types *\/$/;"	m	union:VdbeOp::__anon39	file:
z	drivers/SQLite/sqlite3/sqlite3.c	/^    char *z;        \/* Value if eType is SQLITE_TEXT or SQLITE_BLOB *\/$/;"	m	union:IndexSample::__anon41	file:
z	drivers/SQLite/sqlite3/sqlite3.c	/^  char *z;                        \/* Pointer to buffer containing string *\/$/;"	m	struct:StrBuffer	file:
z	drivers/SQLite/sqlite3/sqlite3.c	/^  char *z;                        \/* Text of the token *\/$/;"	m	struct:Fts3PhraseToken	file:
z	drivers/SQLite/sqlite3/sqlite3.c	/^  char *z;            \/* String or BLOB value *\/$/;"	m	struct:Mem	file:
z	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *z;     \/* Text of the token.  Not NULL-terminated! *\/$/;"	m	struct:Token	file:
zAlias	drivers/SQLite/sqlite3/sqlite3.c	/^    char *zAlias;     \/* The "B" part of a "A AS B" phrase.  zName is the "A" *\/$/;"	m	struct:SrcList::SrcList_item	file:
zAuthContext	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zAuthContext;   \/* Put saved Parse.zAuthContext here *\/$/;"	m	struct:AuthContext	file:
zAuthContext	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zAuthContext; \/* The 6th parameter to db->xAuth callbacks *\/$/;"	m	struct:Parse	file:
zBase	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zBase;         \/* A base allocation.  Not from malloc. *\/$/;"	m	struct:StrAccum	file:
zBuf	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zBuf;                     \/* Space to buffer journal writes *\/$/;"	m	struct:JournalFile	file:
zBuffer	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zBuffer;$/;"	m	struct:IcuCursor	file:
zCanonicalName	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zCanonicalName;         \/* Canonical filename *\/$/;"	m	struct:vxworksFileId	file:
zChunk	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 zChunk[JOURNAL_CHUNKSIZE];   \/* Content of this chunk *\/$/;"	m	struct:FileChunk	file:
zCol	drivers/SQLite/sqlite3/sqlite3.c	/^    char *zCol;        \/* Name of column in zTo.  If 0 use PRIMARY KEY *\/$/;"	m	struct:FKey::sColMap	file:
zColAff	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zColAff;       \/* String defining the affinity of each column *\/$/;"	m	struct:Table	file:
zColAff	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zColAff;   \/* String defining the affinity of each column *\/$/;"	m	struct:Index	file:
zColl	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zColl;     \/* Collating sequence.  If NULL, use the default *\/$/;"	m	struct:Column	file:
zComment	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zComment;          \/* Comment to improve readability *\/$/;"	m	struct:VdbeOp	file:
zContentTbl	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zContentTbl;              \/* content=xxx option, or NULL *\/$/;"	m	struct:Fts3Table	file:
zData	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 *zData;$/;"	m	struct:RtreeNode	file:
zDatabase	drivers/SQLite/sqlite3/sqlite3.c	/^    char *zDatabase;  \/* Name of database holding this table *\/$/;"	m	struct:SrcList::SrcList_item	file:
zDatabase	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zDatabase;$/;"	m	struct:analysisInfo	file:
zDb	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zDb;                  \/* Name of database containing r-tree table *\/$/;"	m	struct:Rtree	file:
zDb	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zDb;                \/* logical database name *\/$/;"	m	struct:Fts3Table	file:
zDb	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zDb;    \/* Make sure all objects are contained in this database *\/$/;"	m	struct:DbFixer	file:
zDbFilename	drivers/SQLite/sqlite3/shell.c	/^  const char *zDbFilename;    \/* name of the database file *\/$/;"	m	struct:callback_data	file:
zDeleteOnClose	drivers/SQLite/sqlite3/sqlite3.c	/^  WCHAR *zDeleteOnClose;  \/* Name of file to delete when closing *\/$/;"	m	struct:winFile	file:
zDestTable	drivers/SQLite/sqlite3/shell.c	/^  char *zDestTable;      \/* Name of destination table when MODE_Insert *\/$/;"	m	struct:callback_data	file:
zDflt	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zDflt;     \/* Original text of the default value *\/$/;"	m	struct:Column	file:
zEnd	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zEnd;     \/* One character past the end of input text *\/$/;"	m	struct:ExprSpan	file:
zErrMsg	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab	file:
zErrMsg	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zErrMsg;                \/* Most recent error message (UTF-8 encoded) *\/$/;"	m	struct:sqlite3	file:
zErrMsg	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zErrMsg;          \/* Error message written here *\/$/;"	m	struct:Vdbe	file:
zErrMsg	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zErrMsg;       \/* An error message *\/$/;"	m	struct:Parse	file:
zErrMsg	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zErrMsg;     \/* Error message text, if an error occurs *\/$/;"	m	struct:TabResult	file:
zErrMsg	drivers/SQLite/sqlite3/sqlite3.h	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab
zErrMsg16	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zErrMsg16;              \/* Most recent error message (UTF-16 encoded) *\/$/;"	m	struct:sqlite3	file:
zField_	drivers/qt/TeQtGLWidget.h	/^	string xField_, yField_, zField_;$/;"	m	class:TeQtGLWidget
zFilename	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zFilename;            \/* Name of the database file *\/$/;"	m	struct:Pager	file:
zFilename	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zFilename;           \/* Name of the file *\/$/;"	m	struct:winShmNode	file:
zFilename	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zFilename;           \/* Name of the mmapped file *\/$/;"	m	struct:unixShmNode	file:
zFullPathCp	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zFullPathCp;        \/* Full path name of this file *\/$/;"	m	struct:os2File	file:
zHelp	drivers/SQLite/sqlite3/shell.c	/^static char zHelp[] =$/;"	v	file:
zIndex	drivers/SQLite/sqlite3/sqlite3.c	/^    char *zIndex;     \/* Identifier from "INDEXED BY <zIndex>" clause *\/$/;"	m	struct:SrcList::SrcList_item	file:
zInput	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zInput;          \/* input we are tokenizing *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zJournal	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zJournal;             \/* Name of the journal file *\/$/;"	m	struct:Pager	file:
zJournal	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zJournal;           \/* Name of the journal file *\/$/;"	m	struct:JournalFile	file:
zLocale	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zLocale;$/;"	m	struct:IcuTokenizer	file:
zMagicHeader	drivers/SQLite/sqlite3/sqlite3.c	/^static const char zMagicHeader[] = SQLITE_FILE_HEADER;$/;"	v	file:
zMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentNode	file:
zMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentWriter	file:
zMalloc	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zMalloc;      \/* Dynamic buffer allocated by sqlite3_malloc() *\/$/;"	m	struct:Mem	file:
zMatchinfo	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zMatchinfo;               \/* Matchinfo specification *\/$/;"	m	struct:Fts3Cursor	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^    char *zName;           \/* Token associated with this expression *\/$/;"	m	struct:ExprList::ExprList_item	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^    char *zName;      \/* Name of the identifier *\/$/;"	m	struct:IdList::IdList_item	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^    char *zName;      \/* Name of the table *\/$/;"	m	struct:SrcList::SrcList_item	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zName;                        \/* Savepoint name (nul-terminated) *\/$/;"	m	struct:Savepoint	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zName;                \/* Name of r-tree table *\/ $/;"	m	struct:Rtree	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zName;            \/* The name of the trigger                        *\/$/;"	m	struct:Trigger	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zName;          \/* Name of the collating sequence, UTF-8 encoded *\/$/;"	m	struct:CollSeq	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zName;         \/* Name of the table or view *\/$/;"	m	struct:Table	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zName;         \/* Name of this database *\/$/;"	m	struct:Db	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zName;         \/* SQL name of the function. *\/$/;"	m	struct:FuncDef	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zName;     \/* Name of this column *\/$/;"	m	struct:Column	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zName;     \/* Name of this index *\/$/;"	m	struct:Index	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zName;                   \/* Name passed to create_module() *\/$/;"	m	struct:Module	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zName;              \/* virtual table name *\/$/;"	m	struct:Fts3Table	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zName;            \/* Name of the sytem call *\/$/;"	m	struct:unix_syscall	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs	file:
zName	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zName;   \/* Name of the table *\/$/;"	m	struct:TableLock	file:
zName	drivers/SQLite/sqlite3/sqlite3.h	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs
zOff_	drivers/qt/TeQtGLWidget.h	/^	GLfloat xOff_, yOff_, zOff_;$/;"	m	class:TeQtGLWidget
zOffsetReleased	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::zOffsetReleased()$/;"	f	class:TeQtGLWidget
zOptions	drivers/SQLite/sqlite3/shell.c	/^static const char zOptions[] = $/;"	v	file:
zPath	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zPath;                  \/* Name of the file *\/$/;"	m	struct:unixFile	file:
zPath	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zPath;      \/* Full pathname of this file *\/$/;"	m	struct:winFile	file:
zPool	drivers/SQLite/sqlite3/sqlite3.c	/^  u8 *zPool;       \/* Memory available to be allocated *\/$/;"	m	struct:Mem5Global	file:
zReadExprlist	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zReadExprlist;$/;"	m	struct:Fts3Table	file:
zRot_	drivers/qt/TeQtGLWidget.h	/^    GLfloat xRot_, yRot_, zRot_;$/;"	m	class:TeQtGLWidget
zSegmentsTbl	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zSegmentsTbl;             \/* Name of %_segments table *\/$/;"	m	struct:Fts3Table	file:
zShellStatic	drivers/SQLite/sqlite3/shell.c	/^static const char *zShellStatic = 0;$/;"	v	file:
zShift	kernel/TeDatum.h	/^	double zShift()  const$/;"	f	class:TeDatum
zSizeReleased	drivers/qt/TeQtGLWidget.cpp	/^void TeQtGLWidget::zSizeReleased()$/;"	f	class:TeQtGLWidget
zSize_	drivers/qt/TeQtGLWidget.h	/^	GLfloat xSize_, ySize_, zSize_;$/;"	m	class:TeQtGLWidget
zSpan	drivers/SQLite/sqlite3/sqlite3.c	/^    char *zSpan;           \/* Original text of the expression *\/$/;"	m	struct:ExprList::ExprList_item	file:
zSql	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zSql;             \/* Text of the SQL statement that generated this *\/$/;"	m	struct:Vdbe	file:
zStart	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zStart;   \/* First character of input text *\/$/;"	m	struct:ExprSpan	file:
zStop	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zStop;$/;"	m	struct:Fts3auxCursor	file:
zTail	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zTail;   \/* All SQL text past the last semicolon parsed *\/$/;"	m	struct:Parse	file:
zTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zTerm;                    \/* Pointer to current term *\/$/;"	m	struct:Fts3SegReader	file:
zTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentNode	file:
zTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentWriter	file:
zTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zTerm;                    \/* Pointer to term buffer *\/$/;"	m	struct:Fts3MultiSegReader	file:
zTerm	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zTerm;$/;"	m	struct:Fts3SegFilter	file:
zText	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zText;         \/* The string collected so far *\/$/;"	m	struct:StrAccum	file:
zTimerHelp	drivers/SQLite/sqlite3/shell.c	/^static char zTimerHelp[] =$/;"	v	file:
zTitle	drivers/SQLite/sqlite3/sqlite3.c	/^  char zTitle[100];  \/* The title text *\/$/;"	m	struct:__anon50	file:
zTo	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zTo;        \/* Name of table that the key points to (aka: Parent) *\/$/;"	m	struct:FKey	file:
zToken	drivers/SQLite/sqlite3/sqlite3.c	/^    char *zToken;          \/* Token value. Zero terminated and dequoted *\/$/;"	m	union:Expr::__anon42	file:
zToken	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zToken;                \/* storage for current token *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zTranslation_	drivers/qt/TeQtGLWidget.h	/^	GLfloat xTranslation_, yTranslation_, zTranslation_;$/;"	m	class:TeQtGLWidget
zType	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zType;     \/* Data type for this column *\/$/;"	m	struct:Column	file:
zType	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zType;  \/* Type of the container - used for error messages *\/$/;"	m	struct:DbFixer	file:
zVec_	drivers/qt/TeQtGLWidget.h	/^	vector<double> xVec_, yVec_, zVec_;$/;"	m	class:TeQtGLWidget
zVfs	drivers/SQLite/sqlite3/shell.c	/^  const char *zVfs;           \/* Name of VFS to use *\/$/;"	m	struct:callback_data	file:
zWal	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zWal;                 \/* File name for write-ahead log *\/$/;"	m	struct:Pager	file:
zWalName	drivers/SQLite/sqlite3/sqlite3.c	/^  const char *zWalName;      \/* Name of WAL file *\/$/;"	m	struct:Wal	file:
zWriteExprlist	drivers/SQLite/sqlite3/sqlite3.c	/^  char *zWriteExprlist;$/;"	m	struct:Fts3Table	file:
zeroJournalHdr	drivers/SQLite/sqlite3/sqlite3.c	/^static int zeroJournalHdr(Pager *pPager, int doTruncate){$/;"	f	file:
zeroPage	drivers/SQLite/sqlite3/sqlite3.c	/^static void zeroPage(MemPage *pPage, int flags){$/;"	f	file:
zeroblobFunc	drivers/SQLite/sqlite3/sqlite3.c	/^static void zeroblobFunc($/;"	f	file:
zeroed	drivers/SQLite/sqlite3/sqlite3.c	/^  Bool zeroed;          \/* True if zeroed out and ready for reuse *\/$/;"	m	struct:VdbeCursor	file:
zipCodeColumnName_	functions/TeAddressLocator.h	/^	string zipCodeColumnName_;				\/\/!< The field name for the location zip code	$/;"	m	struct:TeGeocodeTableMetadata
zipCode_	functions/TeAddressLocator.h	/^	string zipCode_;				\/\/!< Location zip code$/;"	m	struct:TeAddress
zonal	kernel/TeDatabase.cpp	/^TeDatabase::zonal(const string& rasterTable, TePolygon& poly, TeStatisticsDimensionVect& result, const bool &useDummy)$/;"	f	class:TeDatabase
zonal	kernel/TeDatabase.cpp	/^TeDatabase::zonal(const string& rasterTable, const string& actGeomTable, TeKeys& Ids, TeObjectStatistics& result, const bool &useDummy)$/;"	f	class:TeDatabase
zonal	kernel/TeDatabase.cpp	/^TeDatabase::zonal(const string& rasterTable, const string& actGeomTable, const string& actCollTable, TeObjectStatistics& result,const bool &useDummy)$/;"	f	class:TeDatabase
zone_dist_	kernel/TeProxMatrixSlicingStrategy.h	/^	double						zone_dist_;$/;"	m	struct:TeProxMatrixSlicingParams
zone_local_	kernel/TeProxMatrixSlicingStrategy.h	/^	bool						zone_local_;$/;"	m	struct:TeProxMatrixSlicingParams
zoomActive	drivers/qwt/TeQwtPlot.h	/^	void zoomActive(bool b) {cursor_->zoomActive(b);}$/;"	f	class:TeQwtPlot
zoomActive	drivers/qwt/TeQwtPlotPicker.h	/^	void zoomActive(bool b) {zoomActive_ = b;}$/;"	f	class:TeQwtPlotPicker
zoomActive_	drivers/qwt/TeQwtPlotPicker.h	/^	bool zoomActive_;$/;"	m	class:TeQwtPlotPicker
zoomIn	kernel/TeBox.cpp	/^void zoomIn ( TeBox& box, double t )$/;"	f
zoomOut	kernel/TeBox.cpp	/^void zoomOut ( TeBox& box, double t )$/;"	f
zoomTo	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::zoomTo(int level)$/;"	f	class:TeMrSIDReader
zxDevice_	drivers/qt/TeQtGLWidget.h	/^	QPaintDevice *xyDevice_, *zxDevice_, *yzDevice_;$/;"	m	class:TeQtGLWidget
zxPixmap_	drivers/qt/TeQtGLWidget.h	/^	QPixmap xyPixmap_, zxPixmap_, yzPixmap_;$/;"	m	class:TeQtGLWidget
~ArrayImpl	drivers/Firebird/ibpp/core/array.cpp	/^ArrayImpl::~ArrayImpl()$/;"	f	class:ArrayImpl
~BlobImpl	drivers/Firebird/ibpp/core/blob.cpp	/^BlobImpl::~BlobImpl()$/;"	f	class:BlobImpl
~CalcCCorrelationMtxParams	image_processing/TePDIMMIOMatching.hpp	/^          ~CalcCCorrelationMtxParams() {};$/;"	f	class:TePDIMMIOMatching::CalcCCorrelationMtxParams
~CellStack	image_processing/TePDIRegGrowSeg.hpp	/^        ~CellStack ()$/;"	f	class:CellStack
~ClassReferenceData	image_processing/TePDISAMClassifier.cpp	/^TePDISAMClassifier::ClassReferenceData::~ClassReferenceData()$/;"	f	class:TePDISAMClassifier::ClassReferenceData
~ClassSpectralSamples	image_processing/TePDISAMClassifier.cpp	/^TePDISAMClassifier::ClassSpectralSamples::~ClassSpectralSamples()$/;"	f	class:TePDISAMClassifier::ClassSpectralSamples
~Connection	drivers/Oracle/OCI/include/occiControl.h	/^      virtual ~Connection() { }$/;"	f	class:oracle::occi::Connection
~ConnectionPool	drivers/Oracle/OCI/include/occiControl.h	/^    virtual ~ConnectionPool() {}$/;"	f	class:oracle::occi::ConnectionPool
~CorrThread	image_processing/TePDICorrelationMatching.hpp	/^          ~CorrThread() {};$/;"	f	class:TePDICorrelationMatching::CorrThread
~DBKey	drivers/Firebird/ibpp/core/ibpp.h	/^		~DBKey() { }$/;"	f	class:IBPP::DBKey
~DPB	drivers/Firebird/ibpp/core/_ibpp.h	/^	~DPB() { Reset(); }$/;"	f	class:ibpp_internals::DPB
~DatabaseImpl	drivers/Firebird/ibpp/core/database.cpp	/^DatabaseImpl::~DatabaseImpl()$/;"	f	class:DatabaseImpl
~Date	drivers/Firebird/ibpp/core/ibpp.h	/^		virtual ~Date() { };$/;"	f	class:IBPP::Date
~DiskLinesInfoNode	image_processing/TePDIMatrix.hpp	/^          ~DiskLinesInfoNode() {};$/;"	f	class:TePDIMatrix::DiskLinesInfoNode
~DiskTileData	kernel/TeRasterMemManager.h	/^          ~DiskTileData() {};$/;"	f	class:TeRasterMemManager::DiskTileData
~Environment	drivers/Oracle/OCI/include/occiControl.h	/^  virtual ~Environment(){}$/;"	f	class:oracle::occi::Environment
~EventInterface	drivers/Firebird/ibpp/core/ibpp.h	/^		virtual ~EventInterface() { };$/;"	f	class:IBPP::EventInterface
~EventsImpl	drivers/Firebird/ibpp/core/events.cpp	/^EventsImpl::~EventsImpl()$/;"	f	class:EventsImpl
~Exception	drivers/Firebird/ibpp/core/exception.cpp	/^IBPP::Exception::~Exception() throw()$/;"	f	class:IBPP::Exception
~ExceptionBase	drivers/Firebird/ibpp/core/exception.cpp	/^ExceptionBase::~ExceptionBase() throw()$/;"	f	class:ExceptionBase
~ExecStackElement	image_processing/TePDIArithmetic.hpp	/^          ~ExecStackElement() {};$/;"	f	class:TePDIArithmetic::ExecStackElement
~ExtractLocalMaximasParams	image_processing/TePDIMMIOMatching.hpp	/^          ~ExtractLocalMaximasParams() {};$/;"	f	class:TePDIMMIOMatching::ExtractLocalMaximasParams
~GLCMMatrixCacheNodeT	image_processing/TePDIHaralick.hpp	/^          ~GLCMMatrixCacheNodeT() {};$/;"	f	class:TePDIHaralick::GLCMMatrixCacheNodeT
~GroupDataThreadEntryParams	image_processing/TePDIParallelSegmenter.hpp	/^          ~GroupDataThreadEntryParams() {};$/;"	f	class:TePDIParallelSegmenter::GroupDataThreadEntryParams
~IArray	drivers/Firebird/ibpp/core/ibpp.h	/^		virtual ~IArray() { };$/;"	f	class:IBPP::IArray
~IBS	drivers/Firebird/ibpp/core/_ibs.cpp	/^IBS::~IBS()$/;"	f	class:IBS
~IBlob	drivers/Firebird/ibpp/core/ibpp.h	/^		virtual ~IBlob() { };$/;"	f	class:IBPP::IBlob
~IDatabase	drivers/Firebird/ibpp/core/ibpp.h	/^	    virtual ~IDatabase() { };$/;"	f	class:IBPP::IDatabase
~IEvents	drivers/Firebird/ibpp/core/ibpp.h	/^	    virtual ~IEvents() { };$/;"	f	class:IBPP::IEvents
~IRow	drivers/Firebird/ibpp/core/ibpp.h	/^	    virtual ~IRow() {};$/;"	f	class:IBPP::IRow
~IService	drivers/Firebird/ibpp/core/ibpp.h	/^		virtual ~IService() { };$/;"	f	class:IBPP::IService
~IStatement	drivers/Firebird/ibpp/core/ibpp.h	/^	    virtual ~IStatement() { };$/;"	f	class:IBPP::IStatement
~ITransaction	drivers/Firebird/ibpp/core/ibpp.h	/^	    virtual ~ITransaction() { };$/;"	f	class:IBPP::ITransaction
~LoadImageParams	image_processing/TePDIMMIOMatching.hpp	/^          ~LoadImageParams() {};$/;"	f	class:TePDIMMIOMatching::LoadImageParams
~LogicException	drivers/Firebird/ibpp/core/exception.cpp	/^IBPP::LogicException::~LogicException() throw()$/;"	f	class:IBPP::LogicException
~LogicExceptionImpl	drivers/Firebird/ibpp/core/exception.cpp	/^LogicExceptionImpl::~LogicExceptionImpl() throw ()$/;"	f	class:LogicExceptionImpl
~MTRand	utils/mtrand.h	/^  ~MTRand() {}$/;"	f	class:MTRand
~MTRand53	utils/mtrand.h	/^  ~MTRand53() {}$/;"	f	class:MTRand53
~MTRand_closed	utils/mtrand.h	/^  ~MTRand_closed() {}$/;"	f	class:MTRand_closed
~MTRand_int32	utils/mtrand.h	/^  virtual ~MTRand_int32() {} \/\/ destructor$/;"	f	class:MTRand_int32
~MTRand_open	utils/mtrand.h	/^  ~MTRand_open() {}$/;"	f	class:MTRand_open
~Map	drivers/Oracle/OCI/include/occiControl.h	/^  virtual ~Map(){}$/;"	f	class:oracle::occi::Map
~MergingSegmentInfo	image_processing/TePDIParaSegRegGrowStrategy.cpp	/^TePDIParaSegRegGrowStrategy::MergingSegmentInfo::~MergingSegmentInfo()$/;"	f	class:TePDIParaSegRegGrowStrategy::MergingSegmentInfo
~OpenDiskFilesInfoNode	image_processing/TePDIMatrix.hpp	/^          ~OpenDiskFilesInfoNode() {};$/;"	f	class:TePDIMatrix::OpenDiskFilesInfoNode
~PPCNode	drivers/spl/PluginsParametersContainer.h	/^      ~PPCNode() {};$/;"	f	class:PPCNode
~PPCNodeInterface	drivers/spl/PluginsParametersContainer.h	/^      virtual ~PPCNodeInterface() {};$/;"	f	class:PPCNodeInterface
~PluginMetadata	drivers/spl/PluginMetadata.cpp	/^PluginMetadata::~PluginMetadata()$/;"	f	class:PluginMetadata
~PluginParameters	drivers/spl/PluginParameters.cpp	/^PluginParameters::~PluginParameters()$/;"	f	class:PluginParameters
~PluginsManager	drivers/spl/PluginsManager.cpp	/^PluginsManager::~PluginsManager()$/;"	f	class:PluginsManager
~PluginsParametersContainer	drivers/spl/PluginsParametersContainer.h	/^PluginsParametersContainer< PluginsParametersContainerKeyT >::~PluginsParametersContainer()$/;"	f	class:PluginsParametersContainer
~Ptr	drivers/Firebird/ibpp/core/ibpp.h	/^		~Ptr() { clear(); }$/;"	f	class:IBPP::Ptr
~RB	drivers/Firebird/ibpp/core/_rb.cpp	/^RB::~RB()$/;"	f	class:RB
~RastersListNodeT	image_processing/TePDIBatchGeoMosaic.cpp	/^TePDIBatchGeoMosaic::RastersListNodeT::~RastersListNodeT()$/;"	f	class:TePDIBatchGeoMosaic::RastersListNodeT
~Ref	drivers/Oracle/OCI/include/occiObjects.h	/^Ref<T>::~Ref()$/;"	f	class:oracle::occi::Ref
~RefCounted	drivers/Oracle/OCI/include/occiCommon.h	/^    virtual ~RefCounted(){} $/;"	f	class:oracle::occi::RefCounted
~ResultSet	drivers/Oracle/OCI/include/occiControl.h	/^  virtual ~ResultSet(){}$/;"	f	class:oracle::occi::ResultSet
~ResultVisual	drivers/qt/resultVisual.h	/^	~ResultVisual() {}$/;"	f	class:ResultVisual
~RowImpl	drivers/Firebird/ibpp/core/row.cpp	/^RowImpl::~RowImpl()$/;"	f	class:RowImpl
~SPB	drivers/Firebird/ibpp/core/_ibpp.h	/^	~SPB() { Reset(); }$/;"	f	class:ibpp_internals::SPB
~SQLException	drivers/Firebird/ibpp/core/exception.cpp	/^IBPP::SQLException::~SQLException() throw()$/;"	f	class:IBPP::SQLException
~SQLExceptionImpl	drivers/Firebird/ibpp/core/exception.cpp	/^SQLExceptionImpl::~SQLExceptionImpl() throw ()$/;"	f	class:SQLExceptionImpl
~SegThread	image_processing/TePDISAMClassifier.cpp	/^TePDISAMClassifier::SegThread::~SegThread()$/;"	f	class:TePDISAMClassifier::SegThread
~Segment	image_processing/TePDIParaSegRegGrowStrategy.cpp	/^TePDIParaSegRegGrowStrategy::Segment::~Segment()$/;"	f	class:TePDIParaSegRegGrowStrategy::Segment
~SegmenterThreadEntryParams	image_processing/TePDIParallelSegmenter.hpp	/^          ~SegmenterThreadEntryParams() {};$/;"	f	class:TePDIParallelSegmenter::SegmenterThreadEntryParams
~ServiceImpl	drivers/Firebird/ibpp/core/service.cpp	/^ServiceImpl::~ServiceImpl()$/;"	f	class:ServiceImpl
~StatelessConnectionPool	drivers/Oracle/OCI/include/occiControl.h	/^    virtual ~StatelessConnectionPool() {}$/;"	f	class:oracle::occi::StatelessConnectionPool
~Statement	drivers/Oracle/OCI/include/occiControl.h	/^  virtual ~Statement() {}$/;"	f	class:oracle::occi::Statement
~StatementImpl	drivers/Firebird/ibpp/core/statement.cpp	/^StatementImpl::~StatementImpl()$/;"	f	class:StatementImpl
~Stream	drivers/Oracle/OCI/include/occiControl.h	/^    virtual ~Stream(){}$/;"	f	class:oracle::occi::Stream
~TArvore	stat/TeSkaterArvore.cpp	/^TArvore::~TArvore(){$/;"	f	class:TArvore
~TFilaDouble	stat/filaDouble.cpp	/^TFilaDouble::~TFilaDouble(){$/;"	f	class:TFilaDouble
~TFilaInt	stat/filaInt.cpp	/^TFilaInt::~TFilaInt(){$/;"	f	class:TFilaInt
~TFilaR	stat/filaR.cpp	/^TFilaR::~TFilaR(){$/;"	f	class:TFilaR
~TPB	drivers/Firebird/ibpp/core/_ibpp.h	/^	~TPB() { Reset(); }$/;"	f	class:ibpp_internals::TPB
~TParticao	stat/TeSkaterFunctions.cpp	/^TParticao::~TParticao(){$/;"	f	class:TParticao
~Te2ndDegPolynomialGT	kernel/Te2ndDegPolynomialGT.cpp	/^Te2ndDegPolynomialGT::~Te2ndDegPolynomialGT()$/;"	f	class:Te2ndDegPolynomialGT
~Te2ndDegPolynomialGTFactory	kernel/Te2ndDegPolynomialGTFactory.cpp	/^Te2ndDegPolynomialGTFactory::~Te2ndDegPolynomialGTFactory()$/;"	f	class:Te2ndDegPolynomialGTFactory
~Te3rdDegPolynomialGT	kernel/Te3rdDegPolynomialGT.cpp	/^Te3rdDegPolynomialGT::~Te3rdDegPolynomialGT()$/;"	f	class:Te3rdDegPolynomialGT
~Te3rdDegPolynomialGTFactory	kernel/Te3rdDegPolynomialGTFactory.cpp	/^Te3rdDegPolynomialGTFactory::~Te3rdDegPolynomialGTFactory()$/;"	f	class:Te3rdDegPolynomialGTFactory
~TeAbstractAddressNotifyFunctor	functions/TeAddressLocator.h	/^		virtual ~TeAbstractAddressNotifyFunctor()$/;"	f	class:TeAbstractAddressNotifyFunctor
~TeAbstractFactory	kernel/TeAbstractFactory.h	/^   virtual ~TeAbstractFactory(){ }$/;"	f	class:TeAbstractFactory
~TeAbstractTheme	kernel/TeAbstractTheme.cpp	/^TeAbstractTheme::~TeAbstractTheme () $/;"	f	class:TeAbstractTheme
~TeAddressLocator	functions/TeAddressLocator.h	/^		virtual ~TeAddressLocator()$/;"	f	class:TeAddressLocator
~TeAdo	drivers/ado/TeAdoDB.cpp	/^TeAdo::~TeAdo()$/;"	f	class:TeAdo
~TeAdoFactory	drivers/ado/TeAdoDB.h	/^    ~TeAdoFactory() {};$/;"	f	class:TeAdoFactory
~TeAdoPortal	drivers/ado/TeAdoDB.cpp	/^TeAdoPortal::~TeAdoPortal ()$/;"	f	class:TeAdoPortal
~TeAdressNotifyFunctorWindow	drivers/qt/TeAddressNotifyFunctorWindow.h	/^		virtual ~TeAdressNotifyFunctorWindow()$/;"	f	class:TeAdressNotifyFunctorWindow
~TeAffineGT	kernel/TeAffineGT.cpp	/^TeAffineGT::~TeAffineGT()$/;"	f	class:TeAffineGT
~TeAffineGTFactory	kernel/TeAffineGTFactory.cpp	/^TeAffineGTFactory::~TeAffineGTFactory()$/;"	f	class:TeAffineGTFactory
~TeAlbers	kernel/TeProjection.h	/^	~TeAlbers () { }$/;"	f	class:TeAlbers
~TeAppTheme	drivers/qt/TeAppTheme.cpp	/^TeAppTheme::~TeAppTheme()$/;"	f	class:TeAppTheme
~TeAsciiFile	kernel/TeAsciiFile.cpp	/^TeAsciiFile::~TeAsciiFile() $/;"	f	class:TeAsciiFile
~TeAverageStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeAverageStrategy() {}$/;"	f	class:TeAverageStrategy
~TeAverageWeighByAreaStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeAverageWeighByAreaStrategy() {}$/;"	f	class:TeAverageWeighByAreaStrategy
~TeBaseSTInstance	kernel/TeBaseSTInstance.h	/^	virtual ~TeBaseSTInstance() $/;"	f	class:TeBaseSTInstance
~TeBaseSTInstanceSet	kernel/TeBaseSTInstanceSet.h	/^TeBaseSTInstanceSet<GeometryType, TimeType, InstanceType>::~TeBaseSTInstanceSet() $/;"	f	class:TeBaseSTInstanceSet
~TeBaseVisualParams	kernel/TeVisual.h	/^	virtual ~TeBaseVisualParams() {}$/;"	f	class:TeBaseVisualParams
~TeBasicKdTree	kernel/TeKdTree.h	/^		~TeBasicKdTree()$/;"	f	class:TeSAM::TeBasicKdTree
~TeBlockLoader	kernel/TeBlockLoader.cpp	/^TeBlockLoader::~TeBlockLoader()$/;"	f	class:TeBlockLoader
~TeBox	kernel/TeBox.h	/^	~TeBox() {}  $/;"	f	struct:TeBox
~TeCategoryMajorityStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeCategoryMajorityStrategy() {}$/;"	f	class:TeCategoryMajorityStrategy
~TeCategoryPercentageStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeCategoryPercentageStrategy() {}$/;"	f	class:TeCategoryPercentageStrategy
~TeCommunicator	kernel/TeCommunicator.h	/^  TeCommunicator< DataType >::~TeCommunicator()$/;"	f	class:TeCommunicator
~TeComputeAttrStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeComputeAttrStrategy(){}$/;"	f	class:TeComputeAttrStrategy
~TeComputeSpatialStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeComputeSpatialStrategy() {}$/;"	f	class:TeComputeSpatialStrategy
~TeConnection	kernel/TeConnection.cpp	/^TeConnection::~TeConnection()$/;"	f	class:TeConnection
~TeConnectionPool	kernel/TeConnectionPool.cpp	/^TeConnectionPool::~TeConnectionPool()$/;"	f	class:TeConnectionPool
~TeConsoleErrorMessage	kernel/TeConsoleErrorMessage.cpp	/^	~TeConsoleErrorMessage(){}$/;"	f	class:TeConsoleErrorMessage
~TeConsoleErrorMessage	kernel/TeConsoleErrorMessage.h	/^	~TeConsoleErrorMessage()$/;"	f	class:TeConsoleErrorMessage
~TeCoord2D	kernel/TeCoord2D.h	/^	~TeCoord2D () { }$/;"	f	class:TeCoord2D
~TeCorrelogram	stat/TeMSVFactory.h	/^	~TeCorrelogram(){};$/;"	f	class:TeCorrelogram
~TeCountObjectsStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeCountObjectsStrategy() { }$/;"	f	class:TeCountObjectsStrategy
~TeCounted	kernel/TeCounted.h	/^	virtual ~TeCounted(){}$/;"	f	class:TeCounted
~TeCovariance	stat/TeMSVFactory.h	/^	~TeCovariance(){};$/;"	f	class:TeCovariance
~TeCoverage	kernel/TeCoverage.h	/^    virtual ~TeCoverage()$/;"	f	class:TeCoverage
~TeCoverageDecoder	kernel/TeCoverageDecoder.h	/^    virtual ~TeCoverageDecoder()$/;"	f	class:TeCoverageDecoder
~TeCoverageDecoderCacheLRU	kernel/TeCoverageDecoderCacheLRU.h	/^    virtual ~TeCoverageDecoderCacheLRU()$/;"	f	class:TeCoverageDecoderCacheLRU
~TeCoverageInterpolator	kernel/TeCoverageInterpolator.h	/^    virtual ~TeCoverageInterpolator()$/;"	f	class:TeCoverageInterpolator
~TeCoverageParams	kernel/TeCoverageParams.h	/^    virtual ~TeCoverageParams()$/;"	f	class:TeCoverageParams
~TeCylindricalEquidistant	kernel/TeProjection.h	/^	~TeCylindricalEquidistant () {}$/;"	f	class:TeCylindricalEquidistant
~TeDBConnectionsPool	kernel/TeDBConnectionsPool.cpp	/^TeDBConnectionsPool::~TeDBConnectionsPool()$/;"	f	class:TeDBConnectionsPool
~TeDTMAlgorithm	dtm/TeDTMAlgorithm.cpp	/^TeDTMAlgorithm::~TeDTMAlgorithm()$/;"	f	class:TeDTMAlgorithm
~TeDTMParameters	dtm/TeDTMParameters.cpp	/^TeDTMParameters::~TeDTMParameters()$/;"	f	class:TeDTMParameters
~TeDXFDriver	drivers/DXF/TeDXFDriver.cpp	/^TeDXFDriver::~TeDXFDriver() $/;"	f	class:TeDXFDriver
~TeDXFDriverFactory	drivers/DXF/TeDXFDriverFactory.cpp	/^TeDXFDriverFactory::~TeDXFDriverFactory() $/;"	f	class:TeDXFDriverFactory
~TeDXFLayer	drivers/DXF/tedxflayer.cpp	/^TeDXFLayer::~TeDXFLayer() $/;"	f	class:TeDXFLayer
~TeDXFVisitor	drivers/DXF/tedxfvisitor.cpp	/^TeDXFVisitor::~TeDXFVisitor() $/;"	f	class:TeDXFVisitor
~TeDatabase	kernel/TeDatabase.cpp	/^TeDatabase::~TeDatabase()$/;"	f	class:TeDatabase
~TeDatabaseFactory	kernel/TeDatabaseFactory.cpp	/^TeDatabaseFactory::~TeDatabaseFactory() $/;"	f	class:TeDatabaseFactory
~TeDatabaseFactoryParams	kernel/TeDatabaseFactoryParams.cpp	/^TeDatabaseFactoryParams::~TeDatabaseFactoryParams()$/;"	f	class:TeDatabaseFactoryParams
~TeDatabaseIndex	kernel/TeDatabaseIndex.cpp	/^TeDatabaseIndex::~TeDatabaseIndex()$/;"	f	class:TeDatabaseIndex
~TeDatabasePortal	kernel/TeDatabase.cpp	/^TeDatabasePortal::~TeDatabasePortal ()$/;"	f	class:TeDatabasePortal
~TeDatum	kernel/TeDatum.h	/^	~TeDatum () {}$/;"	f	class:TeDatum
~TeDecoder	kernel/TeDecoder.cpp	/^TeDecoder::~TeDecoder()$/;"	f	class:TeDecoder
~TeDecoderASCIIGrid	kernel/TeDecoderASCIIGrid.cpp	/^TeDecoderASCIIGrid::~TeDecoderASCIIGrid ()$/;"	f	class:TeDecoderASCIIGrid
~TeDecoderDatabase	kernel/TeDecoderDatabase.cpp	/^TeDecoderDatabase::~TeDecoderDatabase()$/;"	f	class:TeDecoderDatabase
~TeDecoderFactory	kernel/TeDecoder.cpp	/^TeDecoderFactory::~TeDecoderFactory()$/;"	f	class:TeDecoderFactory
~TeDecoderFile	kernel/TeDecoderFile.cpp	/^TeDecoderFile::~TeDecoderFile ()$/;"	f	class:TeDecoderFile
~TeDecoderJPEG	kernel/TeDecoderJPEG.cpp	/^TeDecoderJPEG::~TeDecoderJPEG()$/;"	f	class:TeDecoderJPEG
~TeDecoderMemory	kernel/TeDecoderMemory.cpp	/^TeDecoderMemory::~TeDecoderMemory ()$/;"	f	class:TeDecoderMemory
~TeDecoderMemoryMap	kernel/TeDecoderMemoryMap.cpp	/^TeDecoderMemoryMap::~TeDecoderMemoryMap ()$/;"	f	class:TeDecoderMemoryMap
~TeDecoderMrSID	drivers/MrSID/TeDecoderMrSID.cpp	/^TeDecoderMrSID::~TeDecoderMrSID()$/;"	f	class:TeDecoderMrSID
~TeDecoderPAM	drivers/PAMDecoder/TeDecoderPAM.cpp	/^TeDecoderPAM::~TeDecoderPAM ()$/;"	f	class:TeDecoderPAM
~TeDecoderQtImage	drivers/qt/TeDecoderQtImage.cpp	/^TeDecoderQtImage::~TeDecoderQtImage ()$/;"	f	class:TeDecoderQtImage
~TeDecoderSPR	kernel/TeDecoderSPR.cpp	/^TeDecoderSPR::~TeDecoderSPR()$/;"	f	class:TeDecoderSPR
~TeDecoderSmartMem	kernel/TeDecoderSmartMem.cpp	/^TeDecoderSmartMem::~TeDecoderSmartMem ()$/;"	f	class:TeDecoderSmartMem
~TeDecoderTIFF	kernel/TeDecoderTIFF.cpp	/^TeDecoderTIFF::~TeDecoderTIFF()$/;"	f	class:TeDecoderTIFF
~TeDecoderVirtualMemory	kernel/TeDecoderVirtualMemory.cpp	/^TeDecoderVirtualMemory::~TeDecoderVirtualMemory()$/;"	f	class:TeDecoderVirtualMemory
~TeErrorLog	kernel/TeErrorLog.cpp	/^TeErrorLog::~TeErrorLog()$/;"	f	class:TeErrorLog
~TeErrorMessage	kernel/TeErrorMessage.h	/^	virtual ~TeErrorMessage(){}$/;"	f	class:TeErrorMessage
~TeEsfericSemivarModel	stat/TeSemivarModelFactory.h	/^	virtual ~TeEsfericSemivarModel(){};$/;"	f	class:TeEsfericSemivarModel
~TeException	kernel/TeException.h	/^	virtual ~TeException() {}  \/\/ base class$/;"	f	class:TeException
~TeExponentialSemivarModel	stat/TeSemivarModelFactory.h	/^	virtual ~TeExponentialSemivarModel(){};$/;"	f	class:TeExponentialSemivarModel
~TeExternalTheme	kernel/TeExternalTheme.cpp	/^TeExternalTheme::~TeExternalTheme()$/;"	f	class:TeExternalTheme
~TeFactory	kernel/TeFactory.h	/^	virtual ~TeFactory() {}$/;"	f	class:TeFactory
~TeFileTheme	kernel/TeFileTheme.cpp	/^TeFileTheme::~TeFileTheme()$/;"	f	class:TeFileTheme
~TeFireBird	drivers/ado/TeAdoFireBird.cpp	/^TeFireBird::~TeFireBird()$/;"	f	class:TeFireBird
~TeFireBirdFactory	drivers/ado/TeAdoFireBird.h	/^    ~TeFireBirdFactory() {};$/;"	f	class:TeFireBirdFactory
~TeFireBirdPortal	drivers/ado/TeAdoFireBird.cpp	/^TeFireBirdPortal::~TeFireBirdPortal ()$/;"	f	class:TeFireBirdPortal
~TeFirebird	drivers/Firebird/TeFirebird.cpp	/^TeFirebird::~TeFirebird()$/;"	f	class:TeFirebird
~TeFirebirdConnection	drivers/Firebird/TeFirebirdConnection.cpp	/^TeFirebirdConnection::~TeFirebirdConnection()$/;"	f	class:TeFirebirdConnection
~TeFirebirdFactory	drivers/Firebird/TeFirebird.h	/^    ~TeFirebirdFactory() {};$/;"	f	class:TeFirebirdFactory
~TeFirebirdPortal	drivers/Firebird/TeFirebird.cpp	/^TeFirebirdPortal::~TeFirebirdPortal ()$/;"	f	class:TeFirebirdPortal
~TeFunctionCallThreadJob	kernel/TeFunctionCallThreadJob.cpp	/^TeFunctionCallThreadJob::~TeFunctionCallThreadJob() $/;"	f	class:TeFunctionCallThreadJob
~TeGDALDecoder	drivers/gdal/TeGDALDecoder.cpp	/^TeGDALDecoder::~TeGDALDecoder() $/;"	f	class:TeGDALDecoder
~TeGDALDriverInfo	drivers/gdal/TeGDALDecoder.cpp	/^TeGDALDriverInfo::~TeGDALDriverInfo()$/;"	f	class:TeGDALDriverInfo
~TeGDriverFactory	kernel/TeGDriverFactory.cpp	/^TeGDriverFactory::~TeGDriverFactory() $/;"	f	class:TeGDriverFactory
~TeGTFactory	kernel/TeGTFactory.cpp	/^TeGTFactory::~TeGTFactory()$/;"	f	class:TeGTFactory
~TeGTM	drivers/GTM/TeGTM.cpp	/^TeGTM::~TeGTM()$/;"	f	class:TeGTM
~TeGTMGridDatum	drivers/GTM/TeGTM.cpp	/^TeGTMGridDatum::~TeGTMGridDatum()$/;"	f	class:TeGTMGridDatum
~TeGTMHeader	drivers/GTM/TeGTM.cpp	/^TeGTMHeader::~TeGTMHeader()$/;"	f	class:TeGTMHeader
~TeGTMInformationImages	drivers/GTM/TeGTM.cpp	/^TeGTMInformationImages::~TeGTMInformationImages()$/;"	f	class:TeGTMInformationImages
~TeGTMLayers	drivers/GTM/TeGTM.cpp	/^TeGTMLayers::~TeGTMLayers()$/;"	f	class:TeGTMLayers
~TeGTMRoutes	drivers/GTM/TeGTM.cpp	/^TeGTMRoutes::~TeGTMRoutes()$/;"	f	class:TeGTMRoutes
~TeGTMTrackLogStyles	drivers/GTM/TeGTM.cpp	/^TeGTMTrackLogStyles::~TeGTMTrackLogStyles()$/;"	f	class:TeGTMTrackLogStyles
~TeGTMTrackLogs	drivers/GTM/TeGTM.cpp	/^TeGTMTrackLogs::~TeGTMTrackLogs()$/;"	f	class:TeGTMTrackLogs
~TeGTMUserIcons	drivers/GTM/TeGTM.cpp	/^TeGTMUserIcons::~TeGTMUserIcons()$/;"	f	class:TeGTMUserIcons
~TeGTMWaypoints	drivers/GTM/TeGTM.cpp	/^TeGTMWaypoints::~TeGTMWaypoints()$/;"	f	class:TeGTMWaypoints
~TeGTMWaypointsStyles	drivers/GTM/TeGTM.cpp	/^TeGTMWaypointsStyles::~TeGTMWaypointsStyles()$/;"	f	class:TeGTMWaypointsStyles
~TeGTParams	kernel/TeGTParams.cpp	/^TeGTParams::~TeGTParams()$/;"	f	class:TeGTParams
~TeGaussianSemivarModel	stat/TeSemivarModelFactory.h	/^	virtual ~TeGaussianSemivarModel(){};$/;"	f	class:TeGaussianSemivarModel
~TeGeneralizedProxMatrix	kernel/TeGeneralizedProxMatrix.h	/^	virtual ~TeGeneralizedProxMatrix()$/;"	f	class:TeGeneralizedProxMatrix
~TeGeoDataDriver	kernel/TeGeoDataDriver.cpp	/^TeGeoDataDriver::~TeGeoDataDriver()$/;"	f	class:TeGeoDataDriver
~TeGeoDataSet	kernel/TeGeoDataSet.cpp	/^TeGeoDataSet::~TeGeoDataSet()$/;"	f	class:TeGeoDataSet
~TeGeoFileInfo	kernel/TeGeoFileInfo.cpp	/^TeGeoFileInfo::~TeGeoFileInfo()$/;"	f	class:TeGeoFileInfo
~TeGeomComposite	kernel/TeGeometry.h	/^	virtual ~TeGeomComposite()$/;"	f	class:TeGeomComposite
~TeGeomSingle	kernel/TeGeometry.h	/^	virtual ~TeGeomSingle<T>() {}$/;"	f	class:TeGeomSingle
~TeGeometricTransformation	kernel/TeGeometricTransformation.cpp	/^TeGeometricTransformation::~TeGeometricTransformation()$/;"	f	class:TeGeometricTransformation
~TeGeometry	kernel/TeGeometry.h	/^	virtual ~TeGeometry() {}$/;"	f	class:TeGeometry
~TeGraphNetwork	kernel/TeNetwork.h	/^	virtual ~TeGraphNetwork () {}$/;"	f	class:TeGraphNetwork
~TeGraphPlot	kernel/TeGraph.cpp	/^TeGraphPlot :: ~TeGraphPlot ()$/;"	f	class:TeGraphPlot
~TeGrouping	kernel/TeAbstractTheme.h	/^	~TeGrouping() {}$/;"	f	struct:TeGrouping
~TeInterpolationAlgorithms	functions/TeInterpolation.h	/^		~TeInterpolationAlgorithms()$/;"	f	class:TeInterpolationAlgorithms
~TeKernelGridSupport	stat/TeStatDataStructures.h	/^	~TeKernelGridSupport()$/;"	f	class:TeKernelGridSupport
~TeLambertConformal	kernel/TeProjection.h	/^	~TeLambertConformal () {}$/;"	f	class:TeLambertConformal
~TeLatLong	kernel/TeProjection.h	/^	~TeLatLong () {}$/;"	f	class:TeLatLong
~TeLayer	kernel/TeLayer.cpp	/^TeLayer::~TeLayer()$/;"	f	class:TeLayer
~TeLegendEntry	kernel/TeLegendEntry.h	/^	virtual ~TeLegendEntry()$/;"	f	class:TeLegendEntry
~TeLineLengthStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeLineLengthStrategy() {}$/;"	f	class:TeLineLengthStrategy
~TeMCNode	kernel/TeMultiContainer.h	/^      ~TeMCNode()$/;"	f	class:TeMCNode
~TeMCNodeInterface	kernel/TeMultiContainer.h	/^      virtual ~TeMCNodeInterface() {};$/;"	f	class:TeMCNodeInterface
~TeMSTGraphLink	stat/TeTreeMinimum.h	/^	~TeMSTGraphLink()$/;"	f	class:TeMSTGraphLink
~TeMSV	stat/TeMSVFactory.h	/^	virtual ~TeMSV () {}$/;"	f	class:TeMSV
~TeMajorityCategoryStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeMajorityCategoryStrategy() {}$/;"	f	class:TeMajorityCategoryStrategy
~TeMajorityStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeMajorityStrategy() {}$/;"	f	class:TeMajorityStrategy
~TeMappedMemory	kernel/TeMappedMemory.cpp	/^TeMappedMemory::~TeMappedMemory()$/;"	f	class:TeMappedMemory
~TeMatrix	kernel/TeMatrix.cpp	/^TeMatrix::~TeMatrix()$/;"	f	class:TeMatrix
~TeMaximumStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeMaximumStrategy() {}$/;"	f	class:TeMaximumStrategy
~TeMeasure	kernel/TeMeasure.h	/^	~TeMeasure() {}$/;"	f	class:TeMeasure
~TeMemoryPage	kernel/TeDecoderVirtualMemory.cpp	/^TeMemoryPage::~TeMemoryPage()$/;"	f	class:TeMemoryPage
~TeMercator	kernel/TeProjection.h	/^	~TeMercator () {}$/;"	f	class:TeMercator
~TeMetaModelCache	kernel/TeMetaModelCache.h	/^        ~TeMetaModelCache()$/;"	f	class:TeMetaModelCache
~TeMiller	kernel/TeProjection.h	/^	~TeMiller () {}$/;"	f	class:TeMiller
~TeMinimumDistanceLinesStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeMinimumDistanceLinesStrategy() {}$/;"	f	class:TeMinimumDistanceLinesStrategy
~TeMinimumDistancePointsStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeMinimumDistancePointsStrategy() {}$/;"	f	class:TeMinimumDistancePointsStrategy
~TeMinimumDistancePolygonsStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeMinimumDistancePolygonsStrategy() {}$/;"	f	class:TeMinimumDistancePolygonsStrategy
~TeMinimumDistanceStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeMinimumDistanceStrategy() { if(tree) delete tree; }$/;"	f	class:TeMinimumDistanceStrategy
~TeMinimumStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeMinimumStrategy() {}$/;"	f	class:TeMinimumStrategy
~TeMrSIDReader	drivers/MrSID/TeMrSID.cpp	/^TeMrSIDReader::~TeMrSIDReader()$/;"	f	class:TeMrSIDReader
~TeMultiContainer	kernel/TeMultiContainer.h	/^TeMultiContainer< TeMultiContainerKeyT >::~TeMultiContainer()$/;"	f	class:TeMultiContainer
~TeMutex	kernel/TeMutex.cpp	/^TeMutex::~TeMutex()$/;"	f	class:TeMutex
~TeMySQL	drivers/MySQL/TeMySQL.cpp	/^TeMySQL::~TeMySQL()$/;"	f	class:TeMySQL
~TeMySQLFactory	drivers/MySQL/TeMySQL.h	/^    ~TeMySQLFactory() {};$/;"	f	class:TeMySQLFactory
~TeMySQLPortal	drivers/MySQL/TeMySQL.cpp	/^TeMySQLPortal::~TeMySQLPortal ()$/;"	f	class:TeMySQLPortal
~TeNeighbours	kernel/TeNeighbours.h	/^	virtual ~TeNeighbours() {}$/;"	f	class:TeNeighbours
~TeNetwork	kernel/TeNetwork.h	/^	virtual ~TeNetwork () {}$/;"	f	class:TeNetwork
~TeNoProjection	kernel/TeProjection.h	/^		~TeNoProjection () {}$/;"	f	class:TeNoProjection
~TeOCIConnection	drivers/Oracle/TeOCIConnect.h	/^	~TeOCIConnection() { disconnect(); }$/;"	f	class:TeOCIConnection
~TeOCICursor	drivers/Oracle/TeOCICursor.h	/^	~TeOCICursor() { close(); }$/;"	f	class:TeOCICursor
~TeOCIOracle	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOracle::~TeOCIOracle() $/;"	f	class:TeOCIOracle
~TeOCIOracleFactory	drivers/Oracle/TeOCIOracle.h	/^    ~TeOCIOracleFactory() {};$/;"	f	class:TeOCIOracleFactory
~TeOCIOraclePortal	drivers/Oracle/TeOCIOracle.cpp	/^TeOCIOraclePortal::~TeOCIOraclePortal () $/;"	f	class:TeOCIOraclePortal
~TeOGRDataSet	drivers/gdal/TeOGRDataSet.cpp	/^TeOGRDataSet::~TeOGRDataSet()$/;"	f	class:TeOGRDataSet
~TeOGRDriver	drivers/gdal/TeOGRDriver.cpp	/^TeOGRDriver::~TeOGRDriver() $/;"	f	class:TeOGRDriver
~TeOGRDriverFactory	drivers/gdal/TeOGRDriverFactory.cpp	/^TeOGRDriverFactory::~TeOGRDriverFactory() $/;"	f	class:TeOGRDriverFactory
~TeOracle	drivers/ado/TeAdoOracle.cpp	/^TeOracle::~TeOracle()$/;"	f	class:TeOracle
~TeOracleFactory	drivers/ado/TeAdoOracle.h	/^    ~TeOracleFactory() {};$/;"	f	class:TeOracleFactory
~TeOraclePortal	drivers/ado/TeAdoOracle.cpp	/^TeOraclePortal::~TeOraclePortal ()$/;"	f	class:TeOraclePortal
~TeOracleSpatial	drivers/Oracle/TeOracleSpatial.h	/^	~TeOracleSpatial()$/;"	f	class:TeOracleSpatial
~TeOracleSpatialFactory	drivers/Oracle/TeOracleSpatial.h	/^    ~TeOracleSpatialFactory() {};$/;"	f	class:TeOracleSpatialFactory
~TeOracleSpatialPortal	drivers/Oracle/TeOracleSpatial.h	/^	virtual ~TeOracleSpatialPortal()$/;"	f	class:TeOracleSpatialPortal
~TePDIAlgorithm	image_processing/TePDIAlgorithm.cpp	/^TePDIAlgorithm::~TePDIAlgorithm()$/;"	f	class:TePDIAlgorithm
~TePDIAlgorithmFactory	image_processing/TePDIAlgorithmFactory.cpp	/^TePDIAlgorithmFactory::~TePDIAlgorithmFactory()$/;"	f	class:TePDIAlgorithmFactory
~TePDIArithmetic	image_processing/TePDIArithmetic.cpp	/^TePDIArithmetic::~TePDIArithmetic()$/;"	f	class:TePDIArithmetic
~TePDIArithmeticFactory	image_processing/TePDIArithmeticFactory.cpp	/^TePDIArithmeticFactory::~TePDIArithmeticFactory()$/;"	f	class:TePDIArithmeticFactory
~TePDIBDFilter	image_processing/TePDIBDFilter.cpp	/^TePDIBDFilter::~TePDIBDFilter()$/;"	f	class:TePDIBDFilter
~TePDIBDFilterFactory	image_processing/TePDIBDFilterFactory.cpp	/^TePDIBDFilterFactory::~TePDIBDFilterFactory()$/;"	f	class:TePDIBDFilterFactory
~TePDIBaatz	image_processing/TePDIBaatz.hpp	/^	  ~TePDIBaatz() {};$/;"	f	class:TePDIBaatz
~TePDIBatchGeoMosaic	image_processing/TePDIBatchGeoMosaic.cpp	/^TePDIBatchGeoMosaic::~TePDIBatchGeoMosaic()$/;"	f	class:TePDIBatchGeoMosaic
~TePDIBlender	image_processing/TePDIBlender.cpp	/^TePDIBlender::~TePDIBlender()$/;"	f	class:TePDIBlender
~TePDIBufferedFilter	image_processing/TePDIBufferedFilter.cpp	/^TePDIBufferedFilter::~TePDIBufferedFilter()$/;"	f	class:TePDIBufferedFilter
~TePDICluster	image_processing/TePDICluster.cpp	/^TePDICluster::~TePDICluster()$/;"	f	class:TePDICluster
~TePDIColorTransform	image_processing/TePDIColorTransform.cpp	/^TePDIColorTransform::~TePDIColorTransform()$/;"	f	class:TePDIColorTransform
~TePDIColorTransformFactory	image_processing/TePDIColorTransformFactory.cpp	/^TePDIColorTransformFactory::~TePDIColorTransformFactory()$/;"	f	class:TePDIColorTransformFactory
~TePDIContrast	image_processing/TePDIContrast.cpp	/^TePDIContrast::~TePDIContrast()$/;"	f	class:TePDIContrast
~TePDIContrastFactory	image_processing/TePDIContrastFactory.cpp	/^TePDIContrastFactory::~TePDIContrastFactory()$/;"	f	class:TePDIContrastFactory
~TePDICorrelationMatching	image_processing/TePDICorrelationMatching.cpp	/^TePDICorrelationMatching::~TePDICorrelationMatching()$/;"	f	class:TePDICorrelationMatching
~TePDIDecorrelationEnhancement	image_processing/TePDIDecorrelationEnhancement.cpp	/^TePDIDecorrelationEnhancement::~TePDIDecorrelationEnhancement()$/;"	f	class:TePDIDecorrelationEnhancement
~TePDIEMClas	image_processing/TePDIEMClas.cpp	/^TePDIEMClas::~TePDIEMClas()$/;"	f	class:TePDIEMClas
~TePDIEMClasFactory	image_processing/TePDIEMClasFactory.cpp	/^TePDIEMClasFactory::~TePDIEMClasFactory()$/;"	f	class:TePDIEMClasFactory
~TePDIEspecData	image_processing/TePDIEspecData.cpp	/^TePDIEspecData::~TePDIEspecData()$/;"	f	class:TePDIEspecData
~TePDIFFT	image_processing/TePDIFFT.cpp	/^TePDIFFT::~TePDIFFT()$/;"	f	class:TePDIFFT
~TePDIFilterMask	image_processing/TePDIFilterMask.cpp	/^TePDIFilterMask::~TePDIFilterMask()$/;"	f	class:TePDIFilterMask
~TePDIFusionIndexes	image_processing/TePDIFusionIndexes.cpp	/^TePDIFusionIndexes::~TePDIFusionIndexes()$/;"	f	class:TePDIFusionIndexes
~TePDIGarguetFusion	image_processing/TePDIGarguetFusion.cpp	/^TePDIGarguetFusion::~TePDIGarguetFusion()$/;"	f	class:TePDIGarguetFusion
~TePDIGeneralizedIHSFusion	image_processing/TePDIGeneralizedIHSFusion.cpp	/^TePDIGeneralizedIHSFusion::~TePDIGeneralizedIHSFusion()$/;"	f	class:TePDIGeneralizedIHSFusion
~TePDIGeoMosaic	image_processing/TePDIGeoMosaic.cpp	/^TePDIGeoMosaic::~TePDIGeoMosaic()$/;"	f	class:TePDIGeoMosaic
~TePDIHants	image_processing/TePDIHants.cpp	/^TePDIHants::~TePDIHants()$/;"	f	class:TePDIHants
~TePDIHaralick	image_processing/TePDIHaralick.cpp	/^TePDIHaralick::~TePDIHaralick()$/;"	f	class:TePDIHaralick
~TePDIHistogram	image_processing/TePDIHistogram.cpp	/^TePDIHistogram::~TePDIHistogram()$/;"	f	class:TePDIHistogram
~TePDIIHSFusion	image_processing/TePDIIHSFusion.cpp	/^TePDIIHSFusion::~TePDIIHSFusion()$/;"	f	class:TePDIIHSFusion
~TePDIIHSWaveletFusion	image_processing/TePDIIHSWaveletFusion.cpp	/^TePDIIHSWaveletFusion::~TePDIIHSWaveletFusion()$/;"	f	class:TePDIIHSWaveletFusion
~TePDIInterpolator	image_processing/TePDIInterpolator.cpp	/^TePDIInterpolator::~TePDIInterpolator()$/;"	f	class:TePDIInterpolator
~TePDIIsosegClas	image_processing/TePDIIsosegClas.cpp	/^TePDIIsosegClas::~TePDIIsosegClas()$/;"	f	class:TePDIIsosegClas
~TePDIIsosegClasFactory	image_processing/TePDIIsosegClasFactory.cpp	/^TePDIIsosegClasFactory::~TePDIIsosegClasFactory()$/;"	f	class:TePDIIsosegClasFactory
~TePDIJointHistogram	image_processing/TePDIJointHistogram.cpp	/^TePDIJointHistogram::~TePDIJointHistogram()$/;"	f	class:TePDIJointHistogram
~TePDIKMeansClas	image_processing/TePDIKMeansClas.cpp	/^TePDIKMeansClas::~TePDIKMeansClas()$/;"	f	class:TePDIKMeansClas
~TePDIKMeansClasFactory	image_processing/TePDIKMeansClasFactory.cpp	/^TePDIKMeansClasFactory::~TePDIKMeansClasFactory()$/;"	f	class:TePDIKMeansClasFactory
~TePDILevelRemap	image_processing/TePDILevelRemap.cpp	/^TePDILevelRemap::~TePDILevelRemap()$/;"	f	class:TePDILevelRemap
~TePDILinearFilter	image_processing/TePDILinearFilter.cpp	/^TePDILinearFilter::~TePDILinearFilter()$/;"	f	class:TePDILinearFilter
~TePDILinearFilterFactory	image_processing/TePDILinearFilterFactory.cpp	/^TePDILinearFilterFactory::~TePDILinearFilterFactory()$/;"	f	class:TePDILinearFilterFactory
~TePDIMIMatching	image_processing/TePDIMIMatching.cpp	/^TePDIMIMatching::~TePDIMIMatching()$/;"	f	class:TePDIMIMatching
~TePDIMMIOMatching	image_processing/TePDIMMIOMatching.cpp	/^TePDIMMIOMatching::~TePDIMMIOMatching()$/;"	f	class:TePDIMMIOMatching
~TePDIMallatWavelets	image_processing/TePDIMallatWavelets.cpp	/^TePDIMallatWavelets::~TePDIMallatWavelets()$/;"	f	class:TePDIMallatWavelets
~TePDIMatrix	image_processing/TePDIMatrix.hpp	/^    TePDIMatrix< ElementType >::~TePDIMatrix()$/;"	f	class:TePDIMatrix
~TePDIMixModel	image_processing/TePDIMixModel.cpp	/^TePDIMixModel::~TePDIMixModel()$/;"	f	class:TePDIMixModel
~TePDIMixModelComponent	image_processing/TePDIMixModelComponent.cpp	/^TePDIMixModelComponent::~TePDIMixModelComponent()$/;"	f	class:TePDIMixModelComponent
~TePDIMixModelComponentList	image_processing/TePDIMixModelComponentList.cpp	/^TePDIMixModelComponentList::~TePDIMixModelComponentList()$/;"	f	class:TePDIMixModelComponentList
~TePDIMixModelFactory	image_processing/TePDIMixModelFactory.cpp	/^TePDIMixModelFactory::~TePDIMixModelFactory()$/;"	f	class:TePDIMixModelFactory
~TePDIMixModelSpectralBand	image_processing/TePDIMixModelSpectralBand.cpp	/^TePDIMixModelSpectralBand::~TePDIMixModelSpectralBand()$/;"	f	class:TePDIMixModelSpectralBand
~TePDIMixModelSpectralBandList	image_processing/TePDIMixModelSpectralBandList.cpp	/^TePDIMixModelSpectralBandList::~TePDIMixModelSpectralBandList()$/;"	f	class:TePDIMixModelSpectralBandList
~TePDIMixModelStratFactory	image_processing/TePDIMixModelStratFactory.cpp	/^TePDIMixModelStratFactory::~TePDIMixModelStratFactory()$/;"	f	class:TePDIMixModelStratFactory
~TePDIMixModelStrategy	image_processing/TePDIMixModelStrategy.cpp	/^TePDIMixModelStrategy::~TePDIMixModelStrategy()$/;"	f	class:TePDIMixModelStrategy
~TePDIMorfFilter	image_processing/TePDIMorfFilter.cpp	/^TePDIMorfFilter::~TePDIMorfFilter()$/;"	f	class:TePDIMorfFilter
~TePDIMorfFilterFactory	image_processing/TePDIMorfFilterFactory.cpp	/^TePDIMorfFilterFactory::~TePDIMorfFilterFactory()$/;"	f	class:TePDIMorfFilterFactory
~TePDIMtxDoubleAdpt	image_processing/TePDIMtxDoubleAdpt.hpp	/^      ~TePDIMtxDoubleAdpt() {};$/;"	f	class:TePDIMtxDoubleAdpt
~TePDIMtxDoubleAdptInt	image_processing/TePDIMtxDoubleAdpt.hpp	/^      virtual ~TePDIMtxDoubleAdptInt() {};$/;"	f	class:TePDIMtxDoubleAdptInt
~TePDIOFMatching	image_processing/TePDIOFMatching.cpp	/^TePDIOFMatching::~TePDIOFMatching()$/;"	f	class:TePDIOFMatching
~TePDIPCAWaveletFusion	image_processing/TePDIPCAWaveletFusion.cpp	/^TePDIPCAWaveletFusion::~TePDIPCAWaveletFusion()$/;"	f	class:TePDIPCAWaveletFusion
~TePDIPIManager	image_processing/TePDIPIManager.cpp	/^TePDIPIManager::~TePDIPIManager()$/;"	f	class:TePDIPIManager
~TePDIPIManagerGlobalSettings	image_processing/TePDIPIManagerGlobalSettings.hpp	/^      ~TePDIPIManagerGlobalSettings() {};$/;"	f	class:TePDIPIManagerGlobalSettings
~TePDIParaSegBaatzStrategy	image_processing/TePDIParaSegBaatzStrategy.cpp	/^TePDIParaSegBaatzStrategy::~TePDIParaSegBaatzStrategy()$/;"	f	class:TePDIParaSegBaatzStrategy
~TePDIParaSegBaatzStrategyFactory	image_processing/TePDIParaSegBaatzStrategyFactory.cpp	/^TePDIParaSegBaatzStrategyFactory::~TePDIParaSegBaatzStrategyFactory()$/;"	f	class:TePDIParaSegBaatzStrategyFactory
~TePDIParaSegRegGrowStrategy	image_processing/TePDIParaSegRegGrowStrategy.cpp	/^TePDIParaSegRegGrowStrategy::~TePDIParaSegRegGrowStrategy()$/;"	f	class:TePDIParaSegRegGrowStrategy
~TePDIParaSegRegGrowStrategyFactory	image_processing/TePDIParaSegRegGrowStrategyFactory.cpp	/^TePDIParaSegRegGrowStrategyFactory::~TePDIParaSegRegGrowStrategyFactory()$/;"	f	class:TePDIParaSegRegGrowStrategyFactory
~TePDIParaSegSegment	image_processing/TePDIParaSegSegment.cpp	/^TePDIParaSegSegment::~TePDIParaSegSegment()$/;"	f	class:TePDIParaSegSegment
~TePDIParaSegSegmentsBlock	image_processing/TePDIParaSegSegmentsBlock.cpp	/^TePDIParaSegSegmentsBlock::~TePDIParaSegSegmentsBlock()$/;"	f	class:TePDIParaSegSegmentsBlock
~TePDIParaSegStrategy	image_processing/TePDIParaSegStrategy.cpp	/^TePDIParaSegStrategy::~TePDIParaSegStrategy()$/;"	f	class:TePDIParaSegStrategy
~TePDIParaSegStrategyFactory	image_processing/TePDIParaSegStrategyFactory.cpp	/^TePDIParaSegStrategyFactory::~TePDIParaSegStrategyFactory()$/;"	f	class:TePDIParaSegStrategyFactory
~TePDIParaSegStrategyFactoryParams	image_processing/TePDIParaSegStrategyFactoryParams.cpp	/^TePDIParaSegStrategyFactoryParams::~TePDIParaSegStrategyFactoryParams()$/;"	f	class:TePDIParaSegStrategyFactoryParams
~TePDIParaSegStrategyParams	image_processing/TePDIParaSegStrategyParams.cpp	/^TePDIParaSegStrategyParams::~TePDIParaSegStrategyParams()$/;"	f	class:TePDIParaSegStrategyParams
~TePDIParallelSegmenter	image_processing/TePDIParallelSegmenter.cpp	/^TePDIParallelSegmenter::~TePDIParallelSegmenter()$/;"	f	class:TePDIParallelSegmenter
~TePDIParameters	image_processing/TePDIParameters.cpp	/^TePDIParameters::~TePDIParameters()$/;"	f	class:TePDIParameters
~TePDIPrincipalComponents	image_processing/TePDIPrincipalComponents.cpp	/^TePDIPrincipalComponents::~TePDIPrincipalComponents()$/;"	f	class:TePDIPrincipalComponents
~TePDIPrincipalComponentsFactory	image_processing/TePDIPrincipalComponentsFactory.cpp	/^TePDIPrincipalComponentsFactory::~TePDIPrincipalComponentsFactory()$/;"	f	class:TePDIPrincipalComponentsFactory
~TePDIPrincipalComponentsFusion	image_processing/TePDIPrincipalComponentsFusion.cpp	/^TePDIPrincipalComponentsFusion::~TePDIPrincipalComponentsFusion()$/;"	f	class:TePDIPrincipalComponentsFusion
~TePDIPrincoMixModelSF	image_processing/TePDIPrincoMixModelSF.cpp	/^TePDIPrincoMixModelSF::~TePDIPrincoMixModelSF()$/;"	f	class:TePDIPrincoMixModelSF
~TePDIPrincoMixModelStrategy	image_processing/TePDIPrincoMixModelStrategy.cpp	/^TePDIPrincoMixModelStrategy::~TePDIPrincoMixModelStrategy()$/;"	f	class:TePDIPrincoMixModelStrategy
~TePDIRGSCell	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRGSCell :: ~TePDIRGSCell()$/;"	f	class:TePDIRGSCell
~TePDIRadarFilter	image_processing/TePDIRadarFilter.cpp	/^TePDIRadarFilter::~TePDIRadarFilter()$/;"	f	class:TePDIRadarFilter
~TePDIRadarFrostFilter	image_processing/TePDIRadarFrostFilter.cpp	/^TePDIRadarFrostFilter::~TePDIRadarFrostFilter()$/;"	f	class:TePDIRadarFrostFilter
~TePDIRadarFrostFilterFactory	image_processing/TePDIRadarFrostFilterFactory.cpp	/^TePDIRadarFrostFilterFactory::~TePDIRadarFrostFilterFactory()$/;"	f	class:TePDIRadarFrostFilterFactory
~TePDIRadarGammaFilter	image_processing/TePDIRadarGammaFilter.cpp	/^TePDIRadarGammaFilter::~TePDIRadarGammaFilter()$/;"	f	class:TePDIRadarGammaFilter
~TePDIRadarKuanFilter	image_processing/TePDIRadarKuanFilter.cpp	/^TePDIRadarKuanFilter::~TePDIRadarKuanFilter()$/;"	f	class:TePDIRadarKuanFilter
~TePDIRadarKuanFilterFactory	image_processing/TePDIRadarKuanFilterFactory.cpp	/^TePDIRadarKuanFilterFactory::~TePDIRadarKuanFilterFactory()$/;"	f	class:TePDIRadarKuanFilterFactory
~TePDIRadarLeeFilter	image_processing/TePDIRadarLeeFilter.cpp	/^TePDIRadarLeeFilter::~TePDIRadarLeeFilter()$/;"	f	class:TePDIRadarLeeFilter
~TePDIRadarLeeFilterFactory	image_processing/TePDIRadarLeeFilterFactory.cpp	/^TePDIRadarLeeFilterFactory::~TePDIRadarLeeFilterFactory()$/;"	f	class:TePDIRadarLeeFilterFactory
~TePDIRaster2Vector	image_processing/TePDIRaster2Vector.cpp	/^TePDIRaster2Vector::~TePDIRaster2Vector()$/;"	f	class:TePDIRaster2Vector
~TePDIRaster2VectorFactory	image_processing/TePDIRaster2VectorFactory.cpp	/^TePDIRaster2VectorFactory::~TePDIRaster2VectorFactory()$/;"	f	class:TePDIRaster2VectorFactory
~TePDIRaster2VectorPolStruct	image_processing/TePDIRaster2Vector.hpp	/^      ~TePDIRaster2VectorPolStruct()$/;"	f	class:TePDIRaster2VectorPolStruct
~TePDIRasterRUBuffer	image_processing/TePDIRasterRUBuffer.cpp	/^TePDIRasterRUBuffer::~TePDIRasterRUBuffer()$/;"	f	class:TePDIRasterRUBuffer
~TePDIRegGrowSeg	image_processing/TePDIRegGrowSeg.cpp	/^TePDIRegGrowSeg::~TePDIRegGrowSeg()$/;"	f	class:TePDIRegGrowSeg
~TePDIRegGrowSegFactory	image_processing/TePDIRegGrowSegFactory.cpp	/^TePDIRegGrowSegFactory::~TePDIRegGrowSegFactory()$/;"	f	class:TePDIRegGrowSegFactory
~TePDIRegion	image_processing/TePDIRegion.cpp	/^TePDIRegion::~TePDIRegion()$/;"	f	class:TePDIRegion
~TePDIRegister	image_processing/TePDIRegister.cpp	/^TePDIRegister::~TePDIRegister()$/;"	f	class:TePDIRegister
~TePDIRegisterFactory	image_processing/TePDIRegisterFactory.cpp	/^TePDIRegisterFactory::~TePDIRegisterFactory()$/;"	f	class:TePDIRegisterFactory
~TePDIRgbPalette	image_processing/TePDIRgbPalette.cpp	/^TePDIRgbPalette::~TePDIRgbPalette()$/;"	f	class:TePDIRgbPalette
~TePDIRgbPaletteNode	image_processing/TePDIRgbPaletteNode.hpp	/^      ~TePDIRgbPaletteNode()$/;"	f	class:TePDIRgbPaletteNode
~TePDISAMClassifier	image_processing/TePDISAMClassifier.cpp	/^TePDISAMClassifier::~TePDISAMClassifier()$/;"	f	class:TePDISAMClassifier
~TePDISensorSimulator	image_processing/TePDISensorSimulator.cpp	/^TePDISensorSimulator::~TePDISensorSimulator()$/;"	f	class:TePDISensorSimulator
~TePDISensorSimulatorFactory	image_processing/TePDISensorSimulatorFactory.cpp	/^TePDISensorSimulatorFactory::~TePDISensorSimulatorFactory()$/;"	f	class:TePDISensorSimulatorFactory
~TePDISimplex	image_processing/TePDISimplex.cpp	/^TePDISimplex::~TePDISimplex()$/;"	f	class:TePDISimplex
~TePDIStatistic	image_processing/TePDIStatistic.cpp	/^TePDIStatistic::~TePDIStatistic()$/;"	f	class:TePDIStatistic
~TePDIStrategy	image_processing/TePDIStrategy.cpp	/^TePDIStrategy::~TePDIStrategy()$/;"	f	class:TePDIStrategy
~TePDIStrategyFactory	image_processing/TePDIStrategyFactory.cpp	/^TePDIStrategyFactory::~TePDIStrategyFactory()$/;"	f	class:TePDIStrategyFactory
~TePDITPMosaic	image_processing/TePDITPMosaic.cpp	/^TePDITPMosaic::~TePDITPMosaic()$/;"	f	class:TePDITPMosaic
~TePDITileIndexer	image_processing/TePDITileIndexer.hpp	/^    ~TePDITileIndexer()$/;"	f	class:TePDITileIndexer
~TePDIVenturaFusion	image_processing/TePDIVenturaFusion.cpp	/^TePDIVenturaFusion::~TePDIVenturaFusion()$/;"	f	class:TePDIVenturaFusion
~TePDIWaveletAtrous	image_processing/TePDIWaveletAtrous.cpp	/^TePDIWaveletAtrous::~TePDIWaveletAtrous()$/;"	f	class:TePDIWaveletAtrous
~TePDIWaveletAtrousFusion	image_processing/TePDIWaveletAtrousFusion.cpp	/^TePDIWaveletAtrousFusion::~TePDIWaveletAtrousFusion()$/;"	f	class:TePDIWaveletAtrousFusion
~TePDIWiSpeRFusion	image_processing/TePDIWiSpeRFusion.cpp	/^TePDIWiSpeRFusion::~TePDIWiSpeRFusion()$/;"	f	class:TePDIWiSpeRFusion
~TePGConnection	drivers/PostgreSQL/TePGInterface.h	/^        virtual ~TePGConnection() { close(); }$/;"	f	class:TePGConnection
~TePGRecordset	drivers/PostgreSQL/TePGInterface.cpp	/^TePGRecordset::~TePGRecordset()$/;"	f	class:TePGRecordset
~TePieBar	kernel/TePieBar.h	/^	~TePieBar() {}$/;"	f	class:TePieBar
~TePixelBBInterPoly	kernel/TeRaster.cpp	/^    virtual ~TePixelBBInterPoly() {}$/;"	f	class:TePixelBBInterPoly
~TePixelBoxInPoly	kernel/TeRaster.cpp	/^    virtual ~TePixelBoxInPoly() {}$/;"	f	class:TePixelBoxInPoly
~TePlotWidget	drivers/qt/TeQtGraph.h	/^	~TePlotWidget() {}$/;"	f	class:TePlotWidget
~TePointTInstanceSet	stat/TeStatDataStructures.h	/^	~TePointTInstanceSet()$/;"	f	class:TePointTInstanceSet
~TePolarStereographic	kernel/TeProjection.h	/^	~TePolarStereographic () {}$/;"	f	class:TePolarStereographic
~TePolyconic	kernel/TeProjection.h	/^	~TePolyconic () {}$/;"	f	class:TePolyconic
~TePolygonSetProperties	kernel/TePolygonSetProperties.cpp	/^TePolygonSetProperties::~TePolygonSetProperties()$/;"	f	class:TePolygonSetProperties
~TePostGIS	drivers/PostgreSQL/TePostGIS.h	/^		virtual ~TePostGIS()$/;"	f	class:TePostGIS
~TePostGISFactory	drivers/PostgreSQL/TePostGIS.h	/^    ~TePostGISFactory() {};$/;"	f	class:TePostGISFactory
~TePostGISPortal	drivers/PostgreSQL/TePostGIS.h	/^		virtual ~TePostGISPortal()$/;"	f	class:TePostGISPortal
~TePostgreSQL	drivers/PostgreSQL/TePostgreSQL.cpp	/^TePostgreSQL::~TePostgreSQL()$/;"	f	class:TePostgreSQL
~TePostgreSQLConnection	drivers/PostgreSQL/TePostgreSQLConnection.cpp	/^TePostgreSQLConnection::~TePostgreSQLConnection()$/;"	f	class:TePostgreSQLConnection
~TePostgreSQLFactory	drivers/PostgreSQL/TePostgreSQL.h	/^    ~TePostgreSQLFactory() {};$/;"	f	class:TePostgreSQLFactory
~TePostgreSQLPortal	drivers/PostgreSQL/TePostgreSQL.cpp	/^TePostgreSQLPortal::~TePostgreSQLPortal()$/;"	f	class:TePostgreSQLPortal
~TePrecision	kernel/TePrecision.h	/^	~TePrecision() {}$/;"	f	class:TePrecision
~TePresenceStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TePresenceStrategy() {}$/;"	f	class:TePresenceStrategy
~TeProfile1	kernel/TeProfile1.cpp	/^TeProfile1::~TeProfile1()$/;"	f	class:TeProfile1
~TeProgress	kernel/TeProgress.h	/^	virtual ~TeProgress() {}  $/;"	f	class:TeProgress
~TeProgressBase	kernel/TeProgressBase.h	/^	virtual ~TeProgressBase() {}$/;"	f	class:TeProgressBase
~TeProject	kernel/TeProject.cpp	/^TeProject::~TeProject()$/;"	f	class:TeProject
~TeProjection	kernel/TeProjection.h	/^	virtual ~TeProjection (){}$/;"	f	class:TeProjection
~TeProjectiveGT	kernel/TeProjectiveGT.cpp	/^TeProjectiveGT::~TeProjectiveGT()$/;"	f	class:TeProjectiveGT
~TeProjectiveGTFactory	kernel/TeProjectiveGTFactory.cpp	/^TeProjectiveGTFactory::~TeProjectiveGTFactory()$/;"	f	class:TeProjectiveGTFactory
~TePrototype	kernel/TePrototype.h	/^	virtual ~TePrototype() {}$/;"	f	class:TePrototype
~TeProxMatrixAttributes	kernel/TeNeighbours.h	/^		virtual ~TeProxMatrixAttributes() {}$/;"	f	class:TeProxMatrixAttributes
~TeProxMatrixChooseOneTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^	virtual ~TeProxMatrixChooseOneTopologyStrategy() {}$/;"	f	class:TeProxMatrixChooseOneTopologyStrategy
~TeProxMatrixClosedNetworkStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^	virtual ~TeProxMatrixClosedNetworkStrategy()$/;"	f	class:TeProxMatrixClosedNetworkStrategy
~TeProxMatrixConnectionStrenghtStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^	~TeProxMatrixConnectionStrenghtStrategy() {}$/;"	f	class:TeProxMatrixConnectionStrenghtStrategy
~TeProxMatrixConstructionStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^	virtual ~TeProxMatrixConstructionStrategy() $/;"	f	class:TeProxMatrixConstructionStrategy
~TeProxMatrixGraphBreymann	kernel/TeProxMatrixImplementation.h	/^	virtual ~TeProxMatrixGraphBreymann() {}$/;"	f	class:TeProxMatrixGraphBreymann
~TeProxMatrixImplementation	kernel/TeProxMatrixImplementation.h	/^	virtual ~TeProxMatrixImplementation(){}$/;"	f	class:TeProxMatrixImplementation
~TeProxMatrixInverseDistanceStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^	~TeProxMatrixInverseDistanceStrategy() {}$/;"	f	class:TeProxMatrixInverseDistanceStrategy
~TeProxMatrixKeepInBothTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^	virtual ~TeProxMatrixKeepInBothTopologyStrategy() {}$/;"	f	class:TeProxMatrixKeepInBothTopologyStrategy
~TeProxMatrixLocalAdjacencyStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^	virtual ~TeProxMatrixLocalAdjacencyStrategy() {}$/;"	f	class:TeProxMatrixLocalAdjacencyStrategy
~TeProxMatrixLocalDistanceStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^	virtual ~TeProxMatrixLocalDistanceStrategy(){}$/;"	f	class:TeProxMatrixLocalDistanceStrategy
~TeProxMatrixLocalTopologyStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^	virtual ~TeProxMatrixLocalTopologyStrategy() {}$/;"	f	class:TeProxMatrixLocalTopologyStrategy
~TeProxMatrixNearestNeighbourStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^	virtual ~TeProxMatrixNearestNeighbourStrategy(){}$/;"	f	class:TeProxMatrixNearestNeighbourStrategy
~TeProxMatrixNoSlicingStrategy	kernel/TeProxMatrixSlicingStrategy.h	/^	~TeProxMatrixNoSlicingStrategy() {}$/;"	f	class:TeProxMatrixNoSlicingStrategy
~TeProxMatrixNoWeightsStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^	~TeProxMatrixNoWeightsStrategy() {}$/;"	f	class:TeProxMatrixNoWeightsStrategy
~TeProxMatrixOpenNetworkStrategy	kernel/TeProxMatrixConstructionStrategy.h	/^	virtual ~TeProxMatrixOpenNetworkStrategy()$/;"	f	class:TeProxMatrixOpenNetworkStrategy
~TeProxMatrixOpenNetworkStrategy2	kernel/TeProxMatrixConstructionStrategy.h	/^	virtual ~TeProxMatrixOpenNetworkStrategy2 ()$/;"	f	class:TeProxMatrixOpenNetworkStrategy2
~TeProxMatrixSlicingStrategy	kernel/TeProxMatrixSlicingStrategy.h	/^	virtual ~TeProxMatrixSlicingStrategy() {}$/;"	f	class:TeProxMatrixSlicingStrategy
~TeProxMatrixSquaredInverseDistanceStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^	~TeProxMatrixSquaredInverseDistanceStrategy() {}$/;"	f	class:TeProxMatrixSquaredInverseDistanceStrategy
~TeProxMatrixWeightsStrategy	kernel/TeProxMatrixWeightsStrategy.h	/^	virtual ~TeProxMatrixWeightsStrategy() {}$/;"	f	class:TeProxMatrixWeightsStrategy
~TeProxMatrixZonesSlicingStrategy	kernel/TeProxMatrixSlicingStrategy.h	/^	~TeProxMatrixZonesSlicingStrategy() {}$/;"	f	class:TeProxMatrixZonesSlicingStrategy
~TeQtCanvas	drivers/qt/TeQtCanvas.cpp	/^TeQtCanvas::~TeQtCanvas()$/;"	f	class:TeQtCanvas
~TeQtChartItem	drivers/qt/TeQtChartItem.h	/^	~TeQtChartItem () {}$/;"	f	class:TeQtChartItem
~TeQtChartTitleItem	drivers/qt/TeQtChartItem.h	/^	~TeQtChartTitleItem() {}$/;"	f	class:TeQtChartTitleItem
~TeQtCheckListItem	drivers/qt/TeQtCheckListItem.h	/^	virtual ~TeQtCheckListItem() {}$/;"	f	class:TeQtCheckListItem
~TeQtColorBar	drivers/qt/TeQtColorBar.h	/^	~TeQtColorBar() {}$/;"	f	class:TeQtColorBar
~TeQtDataSource	drivers/qt/TeQtDataSource.h	/^	virtual ~TeQtDataSource() {}$/;"	f	class:TeQtDataSource
~TeQtDatabaseItem	drivers/qt/TeQtDatabaseItem.h	/^	~TeQtDatabaseItem () {}$/;"	f	class:TeQtDatabaseItem
~TeQtDatabasesListView	drivers/qt/TeQtDatabasesListView.cpp	/^TeQtDatabasesListView::~TeQtDatabasesListView()$/;"	f	class:TeQtDatabasesListView
~TeQtFrame	drivers/qt/TeQtFrame.h	/^	~TeQtFrame() {}$/;"	f	class:TeQtFrame
~TeQtGLWidget	drivers/qt/TeQtGLWidget.cpp	/^TeQtGLWidget::~TeQtGLWidget()$/;"	f	class:TeQtGLWidget
~TeQtGraphPlot	drivers/qt/TeQtGraph.cpp	/^TeQtGraphPlot::~TeQtGraphPlot ()$/;"	f	class:TeQtGraphPlot
~TeQtGrid	drivers/qt/TeQtGrid.cpp	/^TeQtGrid::~TeQtGrid()$/;"	f	class:TeQtGrid
~TeQtGridSource	drivers/qt/TeQtGridSource.h	/^	~TeQtGridSource() {}$/;"	f	class:TeQtGridSource
~TeQtLayerItem	drivers/qt/TeQtLayerItem.h	/^	~TeQtLayerItem () {}$/;"	f	class:TeQtLayerItem
~TeQtLegendItem	drivers/qt/TeQtLegendItem.h	/^	~TeQtLegendItem() {}$/;"	f	class:TeQtLegendItem
~TeQtLegendSource	drivers/qt/TeQtLegendSource.h	/^	~TeQtLegendSource() {}$/;"	f	class:TeQtLegendSource
~TeQtLegendTitleItem	drivers/qt/TeQtLegendItem.h	/^	~TeQtLegendTitleItem() {}$/;"	f	class:TeQtLegendTitleItem
~TeQtMultiTextEdit	drivers/qt/TeQtTextEdit.cpp	/^TeQtMultiTextEdit::~TeQtMultiTextEdit()$/;"	f	class:TeQtMultiTextEdit
~TeQtProgress	drivers/qt/TeQtProgress.h	/^	~TeQtProgress() {}$/;"	f	class:TeQtProgress
~TeQtTable	drivers/qt/TeQtTable.cpp	/^TeQtTable::~TeQtTable()$/;"	f	class:TeQtTable
~TeQtTextEdit	drivers/qt/TeQtTextEdit.cpp	/^TeQtTextEdit::~TeQtTextEdit ()$/;"	f	class:TeQtTextEdit
~TeQtThemeItem	drivers/qt/TeQtThemeItem.h	/^	~TeQtThemeItem () {}$/;"	f	class:TeQtThemeItem
~TeQtViewItem	drivers/qt/TeQtViewItem.h	/^	~TeQtViewItem () {}$/;"	f	class:TeQtViewItem
~TeQtViewsListView	drivers/qt/TeQtViewsListView.cpp	/^TeQtViewsListView::~TeQtViewsListView()$/;"	f	class:TeQtViewsListView
~TeQuerier	kernel/TeQuerier.cpp	/^TeQuerier::~TeQuerier()$/;"	f	class:TeQuerier
~TeQuerierDB	kernel/TeQuerierDB.cpp	/^TeQuerierDB::~TeQuerierDB() $/;"	f	class:TeQuerierDB
~TeQuerierImpl	kernel/TeQuerierImpl.cpp	/^TeQuerierImpl::~TeQuerierImpl() $/;"	f	class:TeQuerierImpl
~TeQuerierImplFactory	kernel/TeQuerierImpl.h	/^	virtual ~TeQuerierImplFactory() {}$/;"	f	class:TeQuerierImplFactory
~TeQuerierParams	kernel/TeQuerierParams.cpp	/^TeQuerierParams::~TeQuerierParams()$/;"	f	class:TeQuerierParams
~TeQwtPlot	drivers/qwt/TeQwtPlot.h	/^	virtual ~TeQwtPlot() {delete cursor_;}$/;"	f	class:TeQwtPlot
~TeQwtPlotCurve	drivers/qwt/TeQwtPlotCurve.h	/^	virtual ~TeQwtPlotCurve(){}$/;"	f	class:TeQwtPlotCurve
~TeQwtPlotPicker	drivers/qwt/TeQwtPlotPicker.h	/^	virtual ~TeQwtPlotPicker() {}$/;"	f	class:TeQwtPlotPicker
~TeQwtPlotZoomer	drivers/qwt/TeQwtPlotZoomer.cpp	/^TeQwtPlotZoomer::~TeQwtPlotZoomer()$/;"	f	class:TeQwtPlotZoomer
~TeRBTree	kernel/TeRedBlackTree.h	/^			virtual ~TeRBTree()$/;"	f	class:TeREDBLACK::TeRBTree
~TeRTree	kernel/TeRTree.h	/^		~TeRTree()$/;"	f	class:TeSAM::TeRTree
~TeRaster	kernel/TeRaster.cpp	/^TeRaster::~TeRaster( ) $/;"	f	class:TeRaster
~TeRasterMemManager	kernel/TeRasterMemManager.cpp	/^TeRasterMemManager::~TeRasterMemManager()$/;"	f	class:TeRasterMemManager
~TeRasterParams	kernel/TeRasterParams.h	/^	virtual ~TeRasterParams()$/;"	f	class:TeRasterParams
~TeRasterTransform	kernel/TeRasterTransform.h	/^	~TeRasterTransform()$/;"	f	class:TeRasterTransform
~TeSFSTheme	kernel/TeSFSTheme.cpp	/^TeSFSTheme::~TeSFSTheme()$/;"	f	class:TeSFSTheme
~TeSHPDriverFactory	drivers/shapelib/TeSHPDriverFactory.cpp	/^TeSHPDriverFactory::~TeSHPDriverFactory() $/;"	f	class:TeSHPDriverFactory
~TeSPRFile	functions/TeSPRFile.h	/^	virtual ~TeSPRFile() {} \/\/! base class$/;"	f	class:TeSPRFile
~TeSQLite	drivers/SQLite/TeSQLite.cpp	/^TeSQLite::~TeSQLite()$/;"	f	class:TeSQLite
~TeSQLiteFactory	drivers/SQLite/TeSQLite.h	/^    ~TeSQLiteFactory() {};$/;"	f	class:TeSQLiteFactory
~TeSQLitePortal	drivers/SQLite/TeSQLite.cpp	/^TeSQLitePortal::~TeSQLitePortal()$/;"	f	class:TeSQLitePortal
~TeSTDevStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeSTDevStrategy() {}$/;"	f	class:TeSTDevStrategy
~TeSTEventSet	kernel/TeSTEvent.cpp	/^TeSTEventSet::~TeSTEventSet()$/;"	f	class:TeSTEventSet
~TeSTGeoDataDriver	kernel/TeSTGeoDataDriver.cpp	/^TeSTGeoDataDriver::~TeSTGeoDataDriver()$/;"	f	class:TeSTGeoDataDriver
~TeSTGeoDataSet	kernel/TeSTGeoDataSet.cpp	/^TeSTGeoDataSet::~TeSTGeoDataSet()$/;"	f	class:TeSTGeoDataSet
~TeSTStatInstance	stat/TeStatDataStructures.h	/^    virtual ~TeSTStatInstance()$/;"	f	class:TeSTStatInstance
~TeSTStatInstanceSet	stat/TeStatDataStructures.h	/^	virtual ~TeSTStatInstanceSet()$/;"	f	class:TeSTStatInstanceSet
~TeSatelliteProjection	kernel/TeProjection.h	/^	~TeSatelliteProjection() {}$/;"	f	class:TeSatelliteProjection
~TeSemaphore	kernel/TeSemaphore.cpp	/^TeSemaphore::~TeSemaphore()$/;"	f	class:TeSemaphore
~TeSemimadogram	stat/TeMSVFactory.h	/^	~TeSemimadogram(){};$/;"	f	class:TeSemimadogram
~TeSemivarModel	stat/TeSemivarModelFactory.h	/^	virtual ~TeSemivarModel (){};$/;"	f	class:TeSemivarModel
~TeSemivariogram	stat/TeMSVFactory.h	/^	~TeSemivariogram() { }$/;"	f	class:TeSemivariogram
~TeShapefileDriver	drivers/shapelib/TeDriverSHPDBF.cpp	/^TeShapefileDriver::~TeShapefileDriver()$/;"	f	class:TeShapefileDriver
~TeSharedPtr	kernel/TeSharedPtr.h	/^    TeSharedPtr< T >::~TeSharedPtr()$/;"	f	class:TeSharedPtr
~TeSingle	kernel/TeComposite.h	/^	virtual ~TeSingle<T>() {}$/;"	f	class:TeSingle
~TeSingleton	kernel/TeSingleton.h	/^	virtual ~TeSingleton() {}  \/\/ base class$/;"	f	class:TeSingleton
~TeSinusoidal	kernel/TeProjection.h	/^	~TeSinusoidal () {}$/;"	f	class:TeSinusoidal
~TeSqlServer	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServer::~TeSqlServer()$/;"	f	class:TeSqlServer
~TeSqlServerFactory	drivers/ado/TeAdoSqlServer.h	/^    ~TeSqlServerFactory() {};$/;"	f	class:TeSqlServerFactory
~TeSqlServerPortal	drivers/ado/TeAdoSqlServer.cpp	/^TeSqlServerPortal::~TeSqlServerPortal ()$/;"	f	class:TeSqlServerPortal
~TeSqlServerSpatial	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatial::~TeSqlServerSpatial()$/;"	f	class:TeSqlServerSpatial
~TeSqlServerSpatialFactory	drivers/ado/TeAdoSqlServerSpatial.h	/^    ~TeSqlServerSpatialFactory() {};$/;"	f	class:TeSqlServerSpatialFactory
~TeSqlServerSpatialPortal	drivers/ado/TeAdoSqlServerSpatial.cpp	/^TeSqlServerSpatialPortal::~TeSqlServerSpatialPortal ()$/;"	f	class:TeSqlServerSpatialPortal
~TeStdFile	kernel/TeStdFile.cpp	/^TeStdFile::~TeStdFile() $/;"	f	class:TeStdFile
~TeStdIOProgress	kernel/TeStdIOProgress.cpp	/^TeStdIOProgress::~TeStdIOProgress()$/;"	f	class:TeStdIOProgress
~TeStrategic	kernel/TeRaster.cpp	/^    virtual ~TeStrategic() {}$/;"	f	class:TeStrategic
~TeSumStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeSumStrategy() {}$/;"	f	class:TeSumStrategy
~TeSumWeighByAreaStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeSumWeighByAreaStrategy() {}$/;"	f	class:TeSumWeighByAreaStrategy
~TeTable	kernel/TeTable.cpp	/^TeTable::~TeTable()$/;"	f	class:TeTable
~TeTempFilesRemover	kernel/TeTempFilesRemover.cpp	/^TeTempFilesRemover::~TeTempFilesRemover()$/;"	f	class:TeTempFilesRemover
~TeTheme	kernel/TeTheme.cpp	/^TeTheme::~TeTheme ()$/;"	f	class:TeTheme
~TeThread	kernel/TeThread.cpp	/^TeThread::~TeThread()$/;"	f	class:TeThread
~TeThreadFunctor	kernel/TeThreadFunctor.cpp	/^TeThreadFunctor::~TeThreadFunctor()$/;"	f	class:TeThreadFunctor
~TeThreadJob	kernel/TeThreadJob.cpp	/^TeThreadJob::~TeThreadJob() $/;"	f	class:TeThreadJob
~TeThreadJobsManager	kernel/TeThreadJobsManager.cpp	/^TeThreadJobsManager::~TeThreadJobsManager()$/;"	f	class:TeThreadJobsManager
~TeThreadSignal	kernel/TeThreadSignal.cpp	/^TeThreadSignal::~TeThreadSignal()$/;"	f	class:TeThreadSignal
~TeTime	kernel/TeTime.h	/^    ~TeTime(void) { }$/;"	f	class:TeTime
~TeTimeInterval	kernel/TeTimeInterval.h	/^	~TeTimeInterval(void) { }$/;"	f	class:TeTimeInterval
~TeTotalAreaPercentageStrategy	kernel/TeComputeAttributeStrategies.h	/^		virtual ~TeTotalAreaPercentageStrategy() {}$/;"	f	class:TeTotalAreaPercentageStrategy
~TeUtm	kernel/TeProjection.h	/^	~TeUtm () {}$/;"	f	class:TeUtm
~TeView	kernel/TeView.h	/^	virtual ~TeView () $/;"	f	class:TeView
~TeViewNode	kernel/TeViewNode.h	/^	virtual ~TeViewNode()$/;"	f	class:TeViewNode
~TeViewNodeParams	kernel/TeViewNode.cpp	/^TeViewNodeParams::~TeViewNodeParams()$/;"	f	class:TeViewNodeParams
~TeViewTree	kernel/TeViewNode.cpp	/^TeViewTree::~TeViewTree ()$/;"	f	class:TeViewTree
~TeVirtualEarthMercator	kernel/TeProjection.h	/^	~TeVirtualEarthMercator () {}$/;"	f	class:TeVirtualEarthMercator
~TeVisual	kernel/TeVisual.h	/^	virtual ~TeVisual() {}$/;"	f	class:TeVisual
~TeWaitCursor	drivers/qt/TeWaitCursor.cpp	/^TeWaitCursor::~TeWaitCursor ()$/;"	f	class:TeWaitCursor
~Time	drivers/Firebird/ibpp/core/ibpp.h	/^		virtual ~Time() { };$/;"	f	class:IBPP::Time
~Timestamp	drivers/Firebird/ibpp/core/ibpp.h	/^		~Timestamp() { }$/;"	f	class:IBPP::Timestamp
~TransactionImpl	drivers/Firebird/ibpp/core/transaction.cpp	/^TransactionImpl::~TransactionImpl()$/;"	f	class:TransactionImpl
~User	drivers/Firebird/ibpp/core/ibpp.h	/^		~User() { };$/;"	f	class:IBPP::User
~WrongType	drivers/Firebird/ibpp/core/exception.cpp	/^IBPP::WrongType::~WrongType() throw()$/;"	f	class:IBPP::WrongType
~WrongTypeImpl	drivers/Firebird/ibpp/core/exception.cpp	/^WrongTypeImpl::~WrongTypeImpl() throw ()$/;"	f	class:WrongTypeImpl
~internal_iterator	kernel/TeRedBlackTree.h	/^					virtual ~internal_iterator()$/;"	f	class:TeREDBLACK::TeRBTree::internal_iterator
~iterator	kernel/TeCoverage.h	/^        virtual ~iterator()$/;"	f	class:TeCoverage::iterator
~iterator	kernel/TeRaster.h	/^			virtual ~iterator()$/;"	f	class:TeRaster::iterator
~iterator	stat/TeStatDataStructures.h	/^		~iterator() {}$/;"	f	class:TeKernelGridSupport::iterator
~iterator	stat/TeStatDataStructures.h	/^      ~iterator(){}$/;"	f	class:TeSTStatInstanceSet::iterator
~iteratorPoly	kernel/TeRaster.h	/^			virtual ~iteratorPoly() {}$/;"	f	class:TeRaster::iteratorPoly
~iteratorPoly	stat/TeStatDataStructures.h	/^        ~iteratorPoly() {}$/;"	f	class:TeKernelGridSupport::iteratorPoly
